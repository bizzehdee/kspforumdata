{"TopicId":71786,"ForumId":36,"TopicTitle":"[WIP] [Dev thread] Dang it! A random failures mod","CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-08T23:22:13Z","PageNum":1,"Articles":[{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-08T23:22:13Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cp\u003E\u003C/p\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/81794-Alpha-1-rev-3-Dang-It%21-A-random-failures-mod\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003E\u003Cstrong\u003ERelease thread\u003C/strong\u003E\u003C/span\u003E\u003C/a\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHello everyone!\u003C/p\u003E\u003Cp\u003EI am starting to work on a plugin that will add random failures to the game.\u003C/p\u003E\u003Cp\u003EPlease note that I know already that it is a very heated debate: however, I\u0027m not here to ask whether you want it or not, I only want to ask for feedback on the model I\u0027m thinking to implement. I\u0027m going to make it anyway, whether people like it or not, because I do want it, so...\u003C/p\u003E\u003Cp\u003ESo, basically I\u0027m thinking to model it like this:\u003C/p\u003E\u003Cp\u003E- every single part of the ship is completely independent of the others, failure-wise (at least, at first);\u003C/p\u003E\u003Cp\u003E- the failure rate will be nearly constant for a good part of the part\u0027s expected life, and then increasing linearly to 1, to simulate aging;\u003C/p\u003E\u003Cp\u003E- all failures will be repairable with an EVA operation: as of now, I\u0027m not big on including unrecoverable failures like something exploding randomly;\u003C/p\u003E\u003Cp\u003EAbout the coding itself, I would like some advice from someone with mod experience: what\u0027s better, to develop different modules for each part type (one for engines, one for tanks, one for command pods, etc) or to try to develop a single module to handle the failure of whatever component it is attached to?\u003C/p\u003E\u003Cp\u003EAs of now, I\u0027m more geared towards the first one because it would allow to have engines age only when they are in use, in contrast with everything else that is essentially always in use (tanks, for examples).\u003C/p\u003E\u003Cp\u003ESo yeah, that\u0027s it... thoughts? About this design, I mean.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-20T17:10:23Z\u0022 title=\u002210/20/2014 05:10  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 20, 2014\u003C/time\u003E by Ippo\u003C/strong\u003E\n\u003Cbr\u003EAlpha 3.3\n\u003C/span\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-08T23:46:15Z","Content":"\n\u003Cp\u003EAlso, forgot to add:\u003C/p\u003E\u003Cp\u003E- some failures shouldn\u0027t be completely recoverable: for examples, after being repaired the failure rate might be upped a little, and also the part\u0027s functionality might be a little limited (e.g., limiting the maximum thrust of an engine)\u003C/p\u003E\n"},{"CreatedByName":"Mecripp","CreatedById":181994,"CreatedDateTime":"2014-05-09T00:25:50Z","Content":"\n\u003Cp\u003EMaybe how smart the kerbal is on how good the repair and is this going to be more mod friendly then \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/75734-WIP-023-%28ARM-Compatible%29-Kerbal-Mechanics-Parts-can-now-fail%21/page4\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/75734-WIP-023-%28ARM-Compatible%29-Kerbal-Mechanics-Parts-can-now-fail%21/page4\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"spudcosmic","CreatedById":64598,"CreatedDateTime":"2014-05-09T03:08:57Z","Content":"\n\u003Cp\u003EHow about parts have a failure chance when they are used or while being used, and some parts would have a significant failure chance and some parts have practically zero. So technically it is possible to design a craft with close to zero failure chance, but with limitations. Generally main lifting engines would have a high failure chance because of how complex they are, and orbital engines would have close to zero. \u003C/p\u003E\u003Cp\u003EI have been thinking about a system like this for a while so I have a lot more ideas, but I really have to go to sleep now, so maybe I\u0027ll post some more tomorrow.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-09T08:11:23Z","Content":"\n\u003Cp\u003EYes, actually I was thinking about something similar.\u003C/p\u003E\u003Cp\u003EBasically the failure rate will be proportional not to the absolute age, but to how much the object has been used. This means that for engines wear out as they are used, while tanks and command pods age with time (since in a sense, a tank is always in use when it\u0027s not empty). Science experiments and antennas however have such a small use time that I guess I will simply lock it randomly when it is used (if you think about it, you probably use your antennas for less than 5 minutes during years-long missions).\u003C/p\u003E\u003Cp\u003EAlternatively, we could consider the antennas as always-on too, since they need to provide a com link with the KSC.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-09T08:14:27Z","Content":"\n\u003Cp\u003EMeCripp: yes, I thought about it, but I\u0027m not really sure... Kerbals have 2 stats, courage and stupidity: making the repair ability depending on stupidity means that:\u003C/p\u003E\u003Cp\u003E- for medium / long missions you would always pick the same crew of supersmart kerbals, while the others would become relatively useless;\u003C/p\u003E\u003Cp\u003E- how about courage, and badS?\u003C/p\u003E\u003Cp\u003EAll in all, I think we should postpone this until much later, so that we have the time to figure out a way to balance it.\u003C/p\u003E\n"},{"CreatedByName":"ahappydude","CreatedById":458,"CreatedDateTime":"2014-05-09T14:44:36Z","Content":"\n\u003Cp\u003EYou should work together with the man/women who made the mechanics mod \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/75734-WIP-023-%28ARM-Compatible%29-Kerbal-Mechanics-Parts-can-now-fail\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/75734-WIP-023-%28ARM-Compatible%29-Kerbal-Mechanics-Parts-can-now-fail\u003C/a\u003E!\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-09T15:15:32Z","Content":"\n\u003Cp\u003EIndeed, I didn\u0027t know there was another one in development... Oh well, now that I\u0027ve started I might as well go on, if anything I will learn something new, plus I\u0027m thinking about writing down a short tutorial about it, so.\u003C/p\u003E\n"},{"CreatedByName":"Mecripp","CreatedById":181994,"CreatedDateTime":"2014-05-09T15:28:50Z","Content":"\n\u003Cp\u003EBad thing about Kerbal Mechanics: Parts can now fail! mod isn\u0027t mod friendly as it replacing modules and that was bad and for that his mod is looking like it\u0027s dead now.\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-05-09T16:00:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ippo\u0022 data-cite=\u0022Ippo\u0022\u003E\u003Cdiv\u003EAbout the coding itself, I would like some advice from someone with mod experience: what\u0027s better, to develop different modules for each part type (one for engines, one for tanks, one for command pods, etc) or to try to develop a single module to handle the failure of whatever component it is attached to?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027re the guy who PM\u0027d me about my code, yes? I\u0027d have to look at the code again but I think I was going to have a PartModule for each type of failure and then have ModuleManager do the heavy lifting of adding those PartModules where appropriate (since it can determine if a part has Resources or a ModuleEngineFX, for instance). I feel like it\u0027s an easy approach to the issue that doesn\u0027t clash with other mods and takes some burden off of the PartModule coder (seriously, why duplicate ModuleManager\u0027s job?)\u003C/p\u003E\n"},{"CreatedByName":"ahappydude","CreatedById":458,"CreatedDateTime":"2014-05-09T21:45:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MeCripp\u0022 data-cite=\u0022MeCripp\u0022\u003E\u003Cdiv\u003EBad thing about Kerbal Mechanics: Parts can now fail! mod isn\u0027t mod friendly as it replacing modules and that was bad and for that his mod is looking like it\u0027s dead now.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wouldnt call it dead yet, wasnt that long ago he posted there =) Also someone made a good mm example so you can use it^^\u003C/p\u003E\u003Cp\u003EI didnt mean you would stop yours op, its always nice with variety!\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Mecripp","CreatedById":181994,"CreatedDateTime":"2014-05-09T21:51:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ahappydude\u0022 data-cite=\u0022ahappydude\u0022\u003E\u003Cdiv\u003EI wouldnt call it dead yet, wasnt that long ago he posted there =) Also someone made a good mm example so you can use it^^\u003Cp\u003EI didnt mean you would stop yours op, its always nice with variety!\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe MM just made it so you didn\u0027t have to copy over all the stock parts but it still replaces the Module name that alot of mod\u0027s tie in to.\u003C/p\u003E\u003Cp\u003EEDIT -- Don\u0027t get me wrong there both great idea\u0027s and would love to see them in game.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-09T21:55:45Z\u0022 title=\u002205/09/2014 09:55  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 9, 2014\u003C/time\u003E by Mecripp2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-09T23:20:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022regex\u0022 data-cite=\u0022regex\u0022\u003E\u003Cdiv\u003EYou\u0027re the guy who PM\u0027d me about my code, yes? I\u0027d have to look at the code again but I think I was going to have a PartModule for each type of failure and then have ModuleManager do the heavy lifting of adding those PartModules where appropriate (since it can determine if a part has Resources or a ModuleEngineFX, for instance). I feel like it\u0027s an easy approach to the issue that doesn\u0027t clash with other mods and takes some burden off of the PartModule coder (seriously, why duplicate ModuleManager\u0027s job?)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, that was me. Thank you again, btw, it\u0027s being very useful. \u003C/p\u003E\u003Cp\u003EAs of now I am following your approach, because after tinkering for a while I agree that it\u0027s probably the easiest and most effective solution (and also very elegant, thanks to the Module Manager).\u003C/p\u003E\u003Cp\u003ERight now I\u0027m only working on a gimbal module because it\u0027s very easy to test. After I\u0027ll have solved my issues with the lifecycle of the PartModule, if everything works it should be trivial to extend it to other types of failures.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-09T23:28:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ahappydude\u0022 data-cite=\u0022ahappydude\u0022\u003E\u003Cdiv\u003EI didnt mean you would stop yours op, its always nice with variety!\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELOL no problem, it\u0027s just that we can basically assume that they are doing a better job than I am, I think \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ahappydude","CreatedById":458,"CreatedDateTime":"2014-05-09T23:50:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ippo\u0022 data-cite=\u0022Ippo\u0022\u003E\u003Cdiv\u003ELOL no problem, it\u0027s just that we can basically assume that they are doing a better job than I am, I think \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDont be hard on yourself \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Im looking forward to seeing what you comeup with! Im trying to make like a fake fire starting in iva but it dont play out like i want it\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-05-10T00:10:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ippo\u0022 data-cite=\u0022Ippo\u0022\u003E\u003Cdiv\u003ERight now I\u0027m only working on a gimbal module because it\u0027s very easy to test. After I\u0027ll have solved my issues with the lifecycle of the PartModule, if everything works it should be trivial to extend it to other types of failures.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s a good plan, start small.\u003C/p\u003E\n"},{"CreatedByName":"Paul Kingtiger","CreatedById":57455,"CreatedDateTime":"2014-05-10T00:16:16Z","Content":"\n\u003Cp\u003EI talked about this sort of thing with Daishi. We came up with the idea of a settable fail rate, which would come into effect the first time a part was \u0027used\u0027 so the engine was activated, the tank provided fuel and so on. We were working on the idea that you don\u0027t know something is going to work until you use it and once it\u0027s worked once it\u0027ll probably go on working.\u003C/p\u003E\u003Cp\u003EI like the concept of fixing things on EVA, it give more stuff to do on EVA (badly needed in this game) and makes sure that everything can be fixed. \u003C/p\u003E\u003Cp\u003ELooking forward to seeing how this develops.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-10T12:55:38Z","Content":"\n\u003Cp\u003ECan you please help me with a small doubt I have?\u003C/p\u003E\u003Cp\u003ESo, I can now specify the Mean Time Between Failures for the module, in hours, but how can I convert it to the chance that the module will fail at that particular update?\u003C/p\u003E\u003Cp\u003ERight now I\u0027m doing:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Echance = (1 / MTBF) / 3600 * updateInterval;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhere MTBF is in hours and updateInterval in seconds. Does this look right to you? Because in my tests it seems to fail much more often than it should given a small MTBF...\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-10T23:14:20Z","Content":"\n\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/KWQir4J.jpg\u0022 alt=\u0022KWQir4J.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/bniUCGv.png\u0022 alt=\u0022bniUCGv.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ELooking good so far \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003ETomorrow I will run more tests to check that the parts age correctly (only when they are active), also will implement the decay of reliability.\u003C/p\u003E\u003Cp\u003EStill not sure how to take timewarp into account though. I *think* that I don\u0027t need to change anything... I think.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-11T19:27:07Z","Content":"\n\u003Cp\u003EDaily update (please tell me if I\u0027m just bumping and should stop): the tests on the aging seemed to work fine. Two new modules (alternator and engine) have joined the mod.\u003C/p\u003E\u003Cp\u003EBefore moving on with the rest of the modules, I\u0027m going to test how it\u0027s going to work with the persistance file etc. I hope that saving doesn\u0027t break anything \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"theSpeare","CreatedById":62144,"CreatedDateTime":"2014-05-11T21:35:16Z","Content":"\n\u003Cp\u003ERandom failures won\u0027t really work without something to maintain or ensure a low probability of occurrence. Failures by random chance (RNG) will always eventually irritate the player, as it is punishment without reason. Perhaps imagine a game like DayZ, where there was a probability that you would simply be \u0022shot\u0022 by some \u0022random AI sniper\u0022; failures should occur due to player\u0027s decisions.\u003C/p\u003E\u003Cp\u003EScience upgrades can probably handle this but I\u0027ve always thought a lot of what mod balancing is missing is a KSP budget. Probability of random failures would increase if you spent less money on maintenance, or quality assurance. The more money you spend on it, the less chance of failure. Furthermore, science can be invested to work together with this idea.\u003C/p\u003E\u003Cp\u003EThink Engine Ignitor - it already has a failure of sorts. The engine can fail to ignite - but if it failed it\u0027s because you probably ran out of ignitions, brought the wrong engine type, or forgot to ullage.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-12T11:27:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022theSpeare\u0022 data-cite=\u0022theSpeare\u0022\u003E\u003Cdiv\u003E...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDon\u0027t use it, then \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnyway, as I said all the failures will be repairable. I\u0027m not planning to implement any catastrophic failure (like parts exploding) in any near future, and with the architecture I am using atm, even if I did removing them would be only a matter of deleting a cfg file.\u003C/p\u003E\u003Cp\u003EAlso, I think I have a neat little thing to factor the player decisions in, at least to a small degree. Here is the model as of now: the part has an initial MTBF and an expected LifeTime, set in the cfg. The MTBF gives the chance of a failure occurring at a specific moment. Over time, the part will age: either continously (like a tank, that gets old with time) or with use (like an engine, that ages essentially only when it is being used). The MTBF then decays exponentially as:\u003C/p\u003E\u003Cp\u003E MTBF = InitialMTBF * exp( - age / lifetime )\u003C/p\u003E\u003Cp\u003EThis way, the more you use an engine (or parts that age like an engine), the more it becomes prone to failure.\u003C/p\u003E\u003Cp\u003EAlso, each module can define a \u0022Lambda Multiplier\u0022: this value is computed at each fixed update and is multiplied by the instantaneous chance of failure. A use case for this would be increasing the failure rate of an engine as the throttle goes up.\u003C/p\u003E\u003Cp\u003EScience upgrade will definitely happen to increase the reliability, but first, let\u0027s get this to work \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EEventually I hope to factor the budget in, when 0.24 will be out.\u003C/p\u003E\u003Cp\u003EAlso, daily update: the persistence appears to be fixed now. I have 3 modules working atm (engine, gimbal, alternator): developing more modules is turning out strangely difficult because there is no unified method to disable a module... or I didn\u0027t find it (no, module.enable = false doesn\u0027t cut it)\u003C/p\u003E\u003Cp\u003EP.S: think of it as an AI sniper shooting you at random... but only in the foot, and never shooting you again until you recover.\u003C/p\u003E\n"},{"CreatedByName":"nothke","CreatedById":51185,"CreatedDateTime":"2014-05-12T13:21:25Z","Content":"\n\u003Cp\u003EAnother failures mod? Oh cool!\u003C/p\u003E\u003Cp\u003EI will copy my post from the other failures mod page\u003C/p\u003E\u003Cp\u003Ea few modders are also working on random failures mods:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Ca href=\u0022https://github.com/jbengtson/ksp-partfailure\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jbengtson/ksp-partfailure\u003C/a\u003E \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eand HoneyFox (\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/71866-WIP-Random-Failures-%28for-your-masochism-needs-XD%29\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/71866-WIP-Random-Failures-%28for-your-masochism-needs-XD%29\u003C/a\u003E)\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAlso I was trying to help HoneyFox by assembling a list of whatever came to my mind: \u003C/p\u003E\u003Cp\u003EIt could help you too (added a few more things today):\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://docs.google.com/spreadsheets/d/1-8iIiyy6Qnurrg2TEO_gfK-IWWjUaCO9U0hyjoFj40U/edit?usp=sharing\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003Ehttps://docs.google.com/spreadsheets/d/1-8iIiyy6Qnurrg2TEO_gfK-IWWjUaCO9U0hyjoFj40U/edit?usp=sharing\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Ealso, you can add new things or correct me by commenting on cells =) I will then add it to the sheet\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T13:31:15Z\u0022 title=\u002205/12/2014 01:31  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by nothke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-05-12T13:59:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nothke\u0022 data-cite=\u0022nothke\u0022\u003E\u003Cdiv\u003Ea few modders are also working on random failures mods:\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Ca href=\u0022https://github.com/jbengtson/ksp-partfailure\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jbengtson/ksp-partfailure\u003C/a\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have repeatedly said that I am not working on that code at all (if I had been, it\u0027d be done by now). I put it up there for a reference if someone wanted a place to start and because I thought it was a cool approach to the issue.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-05-12T21:18:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022regex\u0022 data-cite=\u0022regex\u0022\u003E\u003Cdiv\u003E... a reference if someone wanted a place to start ...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHi \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EThanks for the pointers nothke: however, I have to say I had already seen it all, including your spreadsheet. I bet it will come in handy when I will need to implement more failure types.\u003C/p\u003E\u003Cp\u003ERegarding the other mods... well... I\u0027m kinda of a noob at modding, at a total noob in the forum, so I wouldn\u0027t want to sound too smug, but still... Looking at their source code I don\u0027t think they are doing it right. For themselves I mean: I can totally see those mods becoming a huge cluster of spaghetti as soon as they get expanded a little, basically because they are hard-coding a lot of behaviour. The failure model is not very realistic, too (well, not that mine is perfect, actually, but I tried to keep it rooted in the course I took about reliability. I\u0027m an engineer IRL).\u003C/p\u003E\u003Cp\u003EAnd finally, I see that both mods haven\u0027t been updated in the last month, so I have a bad feeling about their development status.\u003C/p\u003E\u003Cp\u003EWith that in mind, there is still a good chance that I will just get mad at the lack of documentation and throw all the code out of a window, so yeah, I can understand if they really have abandoned the project. If they didn\u0027t, all the better for me: I can peek in their code when I can\u0027t figure out something on my own \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E (yeah, I should totally make a github account too)\u003C/p\u003E\u003Cp\u003EEDIT: reading my post again, I realized that it did sound much more smug than I intended. What I really mean is that I don\u0027t like how they are approaching their mod, especially honeyfox: I don\u0027t dig the architecture they are using and I think I found a more scalable approach... that also has the big blind spot of not including decouplers at all atm.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T21:26:43Z\u0022 title=\u002205/12/2014 09:26  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by Ippo\u003C/strong\u003E\n\u003Cbr\u003Esmug-ness overflow\n\u003C/span\u003E\n"}]}