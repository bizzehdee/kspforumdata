{"TopicId":112083,"ForumId":36,"TopicTitle":"3d Mesh generated from functions using blender.","CreatedByName":"CoolHardMaths","CreatedById":145729,"CreatedDateTime":"2015-06-05T18:00:22Z","PageNum":1,"Articles":[{"CreatedByName":"CoolHardMaths","CreatedById":145729,"CreatedDateTime":"2015-06-05T18:00:22Z","Content":"\n\u003Cp\u003EHello, My name is Rick and I\u0027ve beenplaying KSP for a while now. The game is so greatly improved with theuse of mods such as B9 that I felt the need to contribute. So I\u0027madapting an idea I had (originally for designing ship hulls) to makea blender extension for designing KSP parts. The plugin will allowyou to auto generate a mesh from a 3 variable function and create acollision mesh.\u003C/p\u003E\u003Cp\u003EThis is my plan for development.\u003C/p\u003E\u003Cp\u003EFirst release\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Edevelop algorithm to generate simple mesh object\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eadd material to the mesh\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eauto generate collision mesh\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ecreate GUI\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESecond release\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eadd peicewise functionality(use different functions for x \u0026gt; or \u0026lt; whatever)\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThird release\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eimprove vertex spacing to reduce polygon count to smallest possible number\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo before I start, while learning touse unity/blender, I have a few questions from the modding community.\u003C/p\u003E\u003Cp\u003EAny words of wisdom?\u003C/p\u003E\u003Cp\u003EHas anybody tried this?\u003C/p\u003E\u003Cp\u003EWhat features would you like to seefrom this?\u003C/p\u003E\u003Cp\u003EWhat else can be automated in blender?\u003C/p\u003E\u003Cp\u003EWould you make use of this plugin?\u003C/p\u003E\u003Cp\u003EWhere can I find good python in blendertutorials?\u003C/p\u003E\u003Cp\u003EHas this given you any ideas? Pleaseshare below.\u003C/p\u003E\u003Cp\u003EThank you.\u003C/p\u003E\n"},{"CreatedByName":"Randazzo","CreatedById":136468,"CreatedDateTime":"2015-06-05T19:01:30Z","Content":"\n\u003Cp\u003ESincerely not intending to rain on your parade, but Unity provides this function in about three clicks (two if the mesh is already selected) for simple meshes like hulls. Something that could generate convex colliders for complex objects would be awesome, however.\u003C/p\u003E\u003Cp\u003EEdit: Or I\u0027ve completely misunderstood and you\u0027re talking about the actual model mesh being generated. That too, would be great.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-05T19:08:56Z\u0022 title=\u002206/05/2015 07:08  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 5, 2015\u003C/time\u003E by Randazzo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CoolHardMaths","CreatedById":145729,"CreatedDateTime":"2015-06-05T19:49:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Randazzo\u0022 data-cite=\u0022Randazzo\u0022\u003E\u003Cdiv\u003ESincerely not intending to rain on your parade, but Unity provides this function in about three clicks (two if the mesh is already selected) for simple meshes like hulls. Something that could generate convex colliders for complex objects would be awesome, however.\u003Cp\u003EEdit: Or I\u0027ve completely misunderstood and you\u0027re talking about the actual model mesh being generated. That too, would be great.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDon\u0027t be sorry for parade raining, That\u0027s why I added that Q\u0026amp;A at the end so people could let me know if I\u0027m wasting time. That being said yes I am talking about generating the actual model.\u003C/p\u003E\n"},{"CreatedByName":"CoolHardMaths","CreatedById":145729,"CreatedDateTime":"2015-06-06T01:38:28Z","Content":"\n\u003Cp\u003EAlright, progress. I have programmed a dirty python class (in IDLE not blender) which takes a function with parameters z,x and returns y. It then adds each new vertex to a list. Currently its just a jumbled list of vertices in the order they where generated. \u003C/p\u003E\u003Cp\u003EThe blender API looks simple enough so as soon as I find away to assign vertex tuples to faces I should have a working prototype. The function for generating vertices has to be hard coded unfortunately and I\u0027m currently testing with a simple hemisphere.\u003C/p\u003E\u003Cp\u003EI\u0027m also starting to think it might be much cleaner to generate meshes radially rather than up from a grid.\u003C/p\u003E\u003Cp\u003EYour thoughts would be appreciated.\u003C/p\u003E\u003Cp\u003Eimport math\u003C/p\u003E\u003Cp\u003Eclass f3dmesh:\u003C/p\u003E\u003Cp\u003E #class 3d mesh is an object which handles a mesh based on the output of a 3 var function\u003C/p\u003E\u003Cp\u003E vertices = []\u003C/p\u003E\u003Cp\u003E edges = []\u003C/p\u003E\u003Cp\u003E faces = []\u003C/p\u003E\u003Cp\u003E def __init__(self):\u003C/p\u003E\u003Cp\u003E self.data = []\u003C/p\u003E\u003Cp\u003E def make_vector(self,x,y,z):\u003C/p\u003E\u003Cp\u003E #return a list object in x,y,z format\u003C/p\u003E\u003Cp\u003E vec = (x,y,z)\u003C/p\u003E\u003Cp\u003E return vec\u003C/p\u003E\u003Cp\u003E def obj_func(self,x,z):\u003C/p\u003E\u003Cp\u003E #this function defines the geometric function of the vectors\u003C/p\u003E\u003Cp\u003E #will return string \u0022none\u0022 if encountering a domain error\u003C/p\u003E\u003Cp\u003E try:\u003C/p\u003E\u003Cp\u003E #FUNCTION GOES HERE\u003C/p\u003E\u003Cp\u003E y = math.sqrt(pow(5, 2) - pow(x, 2) -pow(z, 2))\u003C/p\u003E\u003Cp\u003E return y\u003C/p\u003E\u003Cp\u003E except:\u003C/p\u003E\u003Cp\u003E return \u0022none\u0022\u003C/p\u003E\u003Cp\u003E def build_mesh(self ,Xrange, Zrange):\u003C/p\u003E\u003Cp\u003E #scan through Z for each val X\u003C/p\u003E\u003Cp\u003E for indexX in Xrange:\u003C/p\u003E\u003Cp\u003E for indexZ in Zrange:\u003C/p\u003E\u003Cp\u003E #get val of Y from obj_func(x,z)\u003C/p\u003E\u003Cp\u003E Y = self.obj_func(indexX, indexZ)\u003C/p\u003E\u003Cp\u003E if Y != \u0027none\u0027:\u003C/p\u003E\u003Cp\u003E #add to vertices if Y is defined at x,z\u003C/p\u003E\u003Cp\u003E self.vertices.append(self.make_vector(indexX, Y,indexZ))\u003C/p\u003E\u003Cp\u003E def get_verticies():\u003C/p\u003E\u003Cp\u003E return vertices\u003C/p\u003E\u003Cp\u003E def get_edges():\u003C/p\u003E\u003Cp\u003E return edges\u003C/p\u003E\u003Cp\u003E def get_faces():\u003C/p\u003E\u003Cp\u003E return faces\u003C/p\u003E\n"}]}