{"TopicId":77627,"ForumId":35,"TopicTitle":"Combining efforts on proper mod management framework / tools / platform","CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-14T19:10:34Z","PageNum":3,"Articles":[{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-14T22:01:51Z","Content":"\n\u003Cp\u003EI see that the discussion has died? Recently I\u0027ve been busy trying to force Golang and node-webkit to cooperate xD\u003C/p\u003E\u003Cp\u003EToday I read documentation of github api. Very easy to get a list of files in the repository. And easy to download files in raw versions. \u003C/p\u003E\u003Cp\u003EGithub is a really great place for a package repository \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI wonder... Github api returns json files. Personally, I prefer YAML, but perhaps packs should be in JSON too? Tools programmers do not have to worry about the two formats. Its not big deal I know, but it is better to simplify everything as much as possible.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003EIt\u0027s slightly expanded version of your sample package. In my opinion, contains all the necessary information to install this mod.\u003C/p\u003E\u003Cp\u003EIt can be hosted together with the mod but its not required.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://pastebin.com/gnK7Yf48\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/gnK7Yf48\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-14T23:29:17Z\u0022 title=\u002208/14/2014 11:29  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 14, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-17T12:46:11Z","Content":"\n\u003Cp\u003EAs it looks like there is no interest in a proper mod/package management for KSP, I will not create such a tool.\u003C/p\u003E\u003Cp\u003EMaybe I will fiddle together something for my self, but as for the lack of interest I do not plan to release such a tool to the public any time soon.\u003C/p\u003E\u003Cp\u003E** insert random rant about some stubborn people in here **\u003C/p\u003E\u003Cp\u003EI still think a repository-like structure (centralized or de-centralized - does not matter) is the way to go.\u003C/p\u003E\u003Cp\u003EIt works pretty well for other games and projects (see Six-Updater for ArmA, APT for Debian) as it makes installing AND (even more important) maintaining/updating mods as easy as possible.\u003C/p\u003E\u003Cp\u003ETL;DR: Anyways. Find some developers and volunteer maintainers and I\u0027m back in. Else, I\u0027m done here.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-17T19:40:13Z","Content":"\n\u003Cp\u003EI know what you mean \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EIn any case, I will continue to write such a tool even just for me. I hope I will not do some terrible mistakes with design and coding (I am a visual artist, not a programmer xD) At least I will learn something. We\u0027ll see what comes up. BTW, thank you. This topic motivated me to work. It is nice to know that someone thinks similar to me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/TeddyDD/ExampleKSPrepo\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/TeddyDD/ExampleKSPrepo\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESo far so good.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-17T22:17:03Z\u0022 title=\u002208/17/2014 10:17  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 17, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-08-18T07:07:59Z","Content":"\n\u003Cp\u003EUnfortunately guys, that\u0027s the way it is here and I guess it was the same when Debian have been cleaned up, people are sceptics (fair) and conservative (human standard issue \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E ), so without anything to show, no one would move forward.\u003C/p\u003E\u003Cp\u003EAnd I think lot\u0027s of mod are pure selfish creation, who can really stand in front and claim \u0022I did it for the community !\u0022 ? Not so many according to their behaviour regarding modifying, improving, redistributing their creations.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-18T08:51:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003E so without anything to show\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWorking on this \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-20T09:27:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EWorking on this \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHave you guys considered using something already existing?\u003C/p\u003E\u003Cp\u003EI\u0027m an Arch Linux user, and that distribution provides a complete infrastructure for the Arch User Repository (AUR) where people can contribute \u0022packages\u0022 (in fact \u0022metadata\u0022 that will be used to build and install packages).\u003C/p\u003E\u003Cp\u003EIt looks a lot like what you are trying to achieve here, with a \u003Ca href=\u0022https://aur.archlinux.org/\u0022 rel=\u0022external nofollow\u0022\u003EWeb Interface\u003C/a\u003E, a complete \u003Ca href=\u0022https://aur.archlinux.org/packages/dropbox\u0022 rel=\u0022external nofollow\u0022\u003Epackage description with dependencies information\u003C/a\u003E and a \u003Ca href=\u0022https://aur.archlinux.org/rpc.php?v=3\u0026amp;type=multiinfo\u0026amp;arg%5B\u0022 rel=\u0022external nofollow\u0022\u003E=dropbox\u0022]RPC interface using Json\u003C/a\u003E that clients can use to download and install \u0022packages\u0022.\u003C/p\u003E\u003Cp\u003EIt also comes with a complete user management system, voting system (for popular packages), flagging system for obsolete packages. Instead of reinventing the wheel, adapting the AUR software to have a \u0022Kerbal User Repositoy\u0022 (KUR?) would be simpler, and only effort would be needed to provide clients.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-20T22:10:29Z","Content":"\n\u003Cp\u003EAt the beggining I thought about adopting NPM or bower. I\u0027m afraid that these solutions are not very suited for KSP. Aur is a great system, but it would be hard to adapt it to our needs. And in any case, I do not know how to do it. And these solutions requires the server. The idea that I\u0027m working requires only a repository on Github. \u003C/p\u003E\u003Cp\u003EIf anyone has any ideas on how to improve what I have created so far go here: \u003Ca href=\u0022https://trello.com/b/28wWVbaS/kerbal-packages-system\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://trello.com/b/28wWVbaS/kerbal-packages-system\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EOr here: \u003Ca href=\u0022https://github.com/TeddyDD/ExampleKSPrepo/issues?q=is%3Aopen\u002Bis%3Aissue\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/TeddyDD/ExampleKSPrepo/issues?q=is%3Aopen\u002Bis%3Aissue\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EOr write here, no matter \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Maybe we can create something together.\u003C/p\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-21T08:22:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EAnd these solutions requires the server. The idea that I\u0027m working requires only a repository on Github.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are right. If it is possible to achieve such a mod manager without an eternal server, then it should be done that way. The simpler, the better \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-21T10:46:20Z","Content":"\n\u003Cp\u003EI think part of features you are talking about (voting, flagging, download statistics) can be implemented later. Somehow \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EProgress: The initial version of the tool used to generate the packets based on the zip file:\u003C/p\u003E\u003Cp\u003E- reads the name and version of mod (usually)\u003C/p\u003E\u003Cp\u003E- generates the checksum\u003C/p\u003E\u003Cp\u003E- looking for mod\u0027s forum thread\u003C/p\u003E\u003Cp\u003E I\u0027m going to add automatic detection of file structure in the zip archive.\u003C/p\u003E\u003Cp\u003ESample output (ignore checksum, It was generated based on dummy file): \u003Ca href=\u0022http://pastebin.com/AZhmbkvW\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/AZhmbkvW\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EMaintainer must check the generated file, add some information, and the package is ready.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-21T10:53:29Z\u0022 title=\u002208/21/2014 10:53  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 21, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-21T14:09:29Z","Content":"\n\u003Cp\u003ETeddyDD\u0026gt; I would add an additional \u0022Category\u0022 field to make filtering search a bit easier on the client side too. This should probably be an json array, to allow multiple categories (see curse.com).\u003C/p\u003E\u003Cp\u003EI\u0027m also not sure if the \u0022copyright\u0022 field is really necessary,as it somewhat duplicates the License field. Or maybe you\u0027re referring to an \u0022authors\u0022 field here? If yes, renaming it might be wise. Overall, it looks good. I\u0027m convinced this is the right step towards proper mods management.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-21T20:25:21Z","Content":"\n\u003Cp\u003EYep, I mean \u0022authors\u0022. I change it today. Good suggestion.\u003C/p\u003E\u003Cp\u003ECategory field is also nice, but I think it would be better to call them \u0022keywords\u0022 or \u0022tags\u0022 (but tags can be confused with git tags)\u003C/p\u003E\u003Cp\u003EBesides, I wonder if I should add a field \u0022conflicts\u0022. I do not know if I will ever be needed. What do you think?\u003C/p\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-22T09:54:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EYep, I mean \u0022authors\u0022. I change it today. Good suggestion.\u003Cp\u003ECategory field is also nice, but I think it would be better to call them \u0022keywords\u0022 or \u0022tags\u0022 (but tags can be confused with git tags)\u003C/p\u003E\u003Cp\u003EBesides, I wonder if I should add a field \u0022conflicts\u0022. I do not know if I will ever be needed. What do you think?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think the purpose of a \u0022category\u0022 field would be to provide a pre-defined, limited set of options to choose from. A \u0022keywords\u0022 or \u0022tags\u0022 field might be overused and eventually be useless for search filtering purpose.\u003C/p\u003E\u003Cp\u003EYes, a \u0022conflicts\u0022 field would be very useful. You might think about allowing a \u0022provides\u0022 and \u0022replaces\u0022 fields too. Those 3 would be optional, but implementing them would ensure that any complex mod management operation that might occur in the future would be possible (ie, mod A requires dependency B, which is fulfilled by plugin B or C, or a mod X is renamed to Y).\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-22T20:37:55Z","Content":"\n\u003Cp\u003EField of categories will be a problem. I do not know how the client application can search the packages in the repository. \u003C/p\u003E\u003Cp\u003EWe would need an index. Keeping it manually would be difficult, especially if the repository managed by more than one person.\u003C/p\u003E\u003Cp\u003EAt the moment, the only information available to client is list of names and versions of mods for given ksp version. In this case, client would have to download all the packages from the repository to search by categories or keywords.\u003C/p\u003E\u003Cp\u003EI think users will have to look for mods on the forum. At least for now.\u003C/p\u003E\u003Cp\u003EI\u0027m looking for suggestions on how to solve this problem.\u003C/p\u003E\u003Cp\u003EI like the ideas for fields. I\u0027ll add them soon. So far we have: depends, optional, conflicts, replaces, provides. All of this fields are optional.\u003C/p\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-22T21:25:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EField of categories will be a problem. I do not know how the client application can search the packages in the repository. \u003Cp\u003EWe would need an index. Keeping it manually would be difficult, especially if the repository managed by more than one person.\u003C/p\u003E\u003Cp\u003EAt the moment, the only information available to client is list of names and versions of mods for given ksp version. In this case, client would have to download all the packages from the repository to search by categories or keywords.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes. If you want to avoid using an eternal website and provide only the individual json files, I\u0027m afraid there isn\u0027t any other solution than downloading all the files and reconstructing a local database.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI like the ideas for fields. I\u0027ll add them soon. So far we have: depends, optional, conflicts, replaces, provides. All of this fields are optional.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d use \u0022optdepends\u0022 instead of \u0022optional\u0022. It would be much clearer what this field really is, since all of these field are indeed \u0022optional\u0022. It is also what Arch uses so I\u0027m already accustomed to it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003ELastly, I\u0027m wondering about the requirement of including the version in the name file. I understand now this is to make the version available to client without downloading all files first, but to be honest I believe you\u0027ll have to do it anyway. The version number in the name file duplicates the one inside the file, and also makes it harder to update the json file when the mod is updated. Instead of simply updating the json file through github, you\u0027ll have to delete the file and create another one, making it harder to track change in a single file and not taking advantage of the ability of git to record only the difference between two changes.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-22T23:07:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EYes. If you want to avoid using an eternal website and provide only the individual json files, I\u0027m afraid there isn\u0027t any other solution than downloading all the files and reconstructing a local database. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt would be enough to clone the repository and use git pull. But try to tell a player that he has to install git :\u0026gt; No way. \u003C/p\u003E\u003Cp\u003EI think now the main goal is to facilitate the installation and updates. We focus on searching later. \u003C/p\u003E\u003Cp\u003EIf someone wants to write a client that pulls the whole repository can use description field.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027d use \u0022optdepends\u0022 instead of \u0022optional\u0022. It would be much clearer what this field really is, since all of these field are indeed \u0022optional\u0022. It is also what Arch uses so I\u0027m already accustomed to it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E Once I changed it already. I have to think about it.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ELastly, I\u0027m wondering about the requirement of including the version in the name file. I understand now this is to make the version available to client without downloading all files first, but to be honest I believe you\u0027ll have to do it anyway. The version number in the name file duplicates the one inside the file, and also makes it harder to update the json file when the mod is updated. Instead of simply updating the json file through github, you\u0027ll have to delete the file and create another one, making it harder to track change in a single file and not taking advantage of the ability of git to record only the difference between two changes.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe idea is not to delete old packages only add new ones. You may want an older version of mod.\u003C/p\u003E\u003Cp\u003EVersion in the file name will be needed. Program will read package version from file name. Version stored in the file is not necessary but I think I\u0027ll leave it as an optional field.\u003C/p\u003E\u003Cp\u003EBesides, I think we do not need field replaces. Implementation of this would be complicated and can be replaced with order of installation. And relationships between the KSP mods are fairly simple.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-23T12:54:09Z","Content":"\n\u003Cp\u003E@\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/28824-TeddyDD\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022color:#417394;\u0022\u003ETeddyDD\u003C/span\u003E\u003C/a\u003E\u003Cspan style=\u0022color:#417394;\u0022\u003E:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EProblem I see here is that you are blindly jumping into development without carefully planning the requirements. That\u0027s the reason why the other attempts failed, and so will you unless you start to plan and even more important: discuss your decisions with others.\u003C/p\u003E\u003Cp\u003EThat\u0027s the reason why I wanted to find at least two or three developers to work with me. To discuss and get feedback.\u003C/p\u003E\u003Cp\u003EYou must remember that you do not create an application for yourself, but for others out there that may (or most certainly will) not have the same requirements to your application than you have.\u003C/p\u003E\u003Cp\u003EInstead of re-inventing everything, you should take a close look to the specification/documentation of a grown-up package management system and adopt it\u0027s essential core functionality. Why? Because many (very skilled) people already spend years of their time planning, developing and even more important fixing it. There\u0027s no need to run into the same mistakes and problems again, they did.\u003C/p\u003E\u003Cp\u003EIf you are willing to do this right, then I\u0027m in.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-23T13:57:51Z","Content":"\n\u003Cp\u003EPrecisely what I was doing. I started to write the specification as I prefer to work on concrete things. It\u0027s a point of reference. If there is something you do not like, let\u0027s change it. \u003C/p\u003E\u003Cp\u003EI started writing a manager to make it easier to determine the needs (and learn some golang) but this secondary project.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EUnfortunately guys, that\u0027s the way it is here and I guess it was the same when Debian have been cleaned up, people are sceptics (fair) and conservative (human standard issue ), so without anything to show, no one would move forward.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI just want to have something to show. Even if the prototype will later be abandoned in favor of a better solution.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EInstead of re-inventing everything, you should take a close look to the specification/documentation of a grown-up package management system\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI use this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://bower.io/docs/creating-packages/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://bower.io/docs/creating-packages/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.debian.org/doc/debian-policy/ch-relationships.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.debian.org/doc/debian-policy/ch-relationships.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.npmjs.org/doc/files/package.json.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.npmjs.org/doc/files/package.json.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EBut do not think that any of these systems could be used directly.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EIf you are willing to do this right, then I\u0027m in. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am willing to do anything, as long as the idea will be developed.\u003C/p\u003E\u003Cp\u003EIf you know how to do better is simply Just do it.\u003C/p\u003E\u003Cp\u003EIf you have an idea how we can consult the specification of the package I\u0027m going to join and help.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-23T14:32:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EPrecisely what I was doing. I started to write the specification as I prefer to work on concrete things. It\u0027s a point of reference. If there is something you do not like, let\u0027s change it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, rapid prototyping is not always the way to go. It often leads to uncontrolled growth and unnecessary increase in complexity due to management failures. But that\u0027s my personal opinion on that. I personally prefer careful planning, discussions, specifications, more discussions, ... and at some point where nobody involved in the project has any questions anymore, I start developing a prototype.\u003C/p\u003E\u003Cp\u003EDocumentation and tests are another thing. We need to make sure to create documentation and tests as soon as possible. Ideally directly after the first basic prototype was built.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI started writing a manager to make it easier to determine the needs (and learn some golang) but this secondary project.\u003Cp\u003EI just want to have something to show. Even if the prototype will later be abandoned in favor of a better solution.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d also prefer to not start experiments with new languages, as that might (or most certainly will) lead to unexpected problems. As for KSP being developed in Mono, I\u0027d stick to that. That also eliminated additional dependencies on user-side.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI use this:\u003Cp\u003E\u003Ca href=\u0022http://bower.io/docs/creating-packages/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://bower.io/docs/creating-packages/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.debian.org/doc/debian-policy/ch-relationships.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.debian.org/doc/debian-policy/ch-relationships.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.npmjs.org/doc/files/package.json.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.npmjs.org/doc/files/package.json.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EBut do not think that any of these systems could be used directly.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou should also take a look at dpkg as well as apt/aptitude.\u003C/p\u003E\u003Cp\u003E- \u003Ca href=\u0022http://anonscm.debian.org/cgit/apt/apt.git/tree/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://anonscm.debian.org/cgit/apt/apt.git/tree/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E- \u003Ca href=\u0022http://anonscm.debian.org/cgit/aptitude/aptitude.git/tree/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://anonscm.debian.org/cgit/aptitude/aptitude.git/tree/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E- \u003Ca href=\u0022http://anonscm.debian.org/cgit/dpkg/dpkg.git/tree/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://anonscm.debian.org/cgit/dpkg/dpkg.git/tree/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAlso the \u003Ca href=\u0022http://www.six-updater.net/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.six-updater.net/\u003C/a\u003E project could be of interest to us.\u003C/p\u003E\u003Cp\u003EI already mentioned that earlier, but I\u0027d like to do so again. It\u0027s a widely established mod-management solution for the ArmA community.\u003C/p\u003E\u003Cp\u003EDocumentation is also available: \u003Ca href=\u0022http://www.six-projects.net/wagn/Six_Updater\u002BDocumentation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.six-projects.net/wagn/Six_Updater\u002BDocumentation\u003C/a\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EIf you know how to do better is simply Just do it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s the point. I do not want to \u0027just do it\u0027. If I do it, I want to do it right.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI am willing to do anything, as long as the idea will be developed.\u003Cp\u003E[...]\u003C/p\u003E\u003Cp\u003EIf you have an idea how we can consult the specification of the package I\u0027m going to join and help.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBefore blindly developing anything, we should sit together and carefully determine what we need and if there already is an existing solution to at least some of the problems we might find.\u003C/p\u003E\u003Cp\u003EWe should carefully analyze how other solutions work, what they\u0027ve done right, and why they failed in the end.\u003C/p\u003E\u003Cp\u003EWe need to find out what developers need, what users need, and what we can do to make both of them happy.\u003C/p\u003E\u003Cp\u003EThat\u0027s a lot of discussion that needs to be done. And I\u0027d really like to have a (open-minded and established) modder from this forums on board.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-23T14:34:55Z\u0022 title=\u002208/23/2014 02:34  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 23, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-23T20:27:10Z","Content":"\n\u003Cp\u003EYou are much more experienced than me so I guess you\u0027re right.\u003C/p\u003E\u003Cp\u003EWe\u0027ll do it your way. I will try to help if I could.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EAnd I\u0027d really like to have a (open-minded and established) modder from this forums on board.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Ca href=\u0022http://imgur.com/MHM2PpA\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/MHM2PpAs.jpg\u0022 alt=\u0022MHM2PpAs.jpg\u0022\u003E\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-24T00:55:15Z","Content":"\n\u003Cp\u003ELet me summarize the requirements we\u0027ve got so far:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E \u003Cstrong\u003Eclient-software\u003C/strong\u003E\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003E easy installation\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E automatic, non-annoying self-update\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eeasy mod management\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003Eeasy installation of mods\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Col\u003E\u003Cli\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Eeither via build-in search / catalog\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Eor direct input of mod URL\u003C/em\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003C/li\u003E\u003Cli\u003Eeasy update of existing mods\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eeasy (and complete) removal of existing mods\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eautomatic dependency management\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003Eautomatically install hard dependencies\u003C/em\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Enotify user of optional dependencies\u003C/em\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Enotify user of conflicts\u003C/em\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Eauto-resolve dependencies/conflicts if possible\u003C/em\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]no additional dependencies\u003C/p\u003E\u003Cp\u003E[*]modular architecture, so it can be extended easily\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]\u003Cstrong\u003Edeveloper-tools\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Eeasy to use tools\u003Cbr\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Col\u003E\u003Cli\u003Eno \u0022magic\u0022 going on behind the scenes\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003Emeans, tools must be simple enough so developers can easily understand what they do and bend them to their needs\u003C/em\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003C/li\u003E\u003C/ol\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E[*]auto-generation of meta-data files\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Eautomatically generate\u003Cbr\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Col\u003E\u003Cli\u003E\u003Cem\u003Ethis one coule be tricky...\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Edo not require the modders to change the way they work right now\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003Emod repository\u003C/strong\u003E\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003Ede-centralized approach\u003Cbr\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003C/li\u003E\u003C/ol\u003Eif we suddenly disappear for some reason, someone else can easily take over\u003Cbr\u003Emodders may maintain their own repositories for their own mods\u003Cbr\u003E\u003Cbr\u003E\u003Col\u003E\u003Cli\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eeasy to setup and maintain\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eeasy integration into third-party tools\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EI\u0027d love to see integration on kerbalstuff...\u003C/em\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E[*]hosting\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Ehost complete mod where possible\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ehost only meta-data where needed\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDo you have anything to add to/remove from this list at this point?\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EPS: I absolutely do not want to look like some arrogant guy telling others what to do. That\u0027s not why I am here. All I want to do is discuss this idea and get feedback on it. I\u0027m usually a very direct person, so if you think I\u0027m talking rubbish, feel free to correct me \u003C/em\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cem\u003Ethis requires clear rules, to avoid conflicts between repositories\u003C/em\u003E\u003Cbr\u003Efile lists\u003Cbr\u003Eversion information\u003Cbr\u003Edependencies\u003Cbr\u003Eeasy to use modgen/build/publish tool\u003Cbr\u003Egood integration into IDE\u003Cbr\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-24T10:40:19Z","Content":"\n\u003Cp\u003E@TeddyDD: I\u0027ve though about the whole search issue, and I realized that not allowing search from the start would be a major mistake. The whole point of a client software is to allow easy installation and upgrade. If the user can\u0027t install mods without browsing manually, he\u0027d rather install mods manually too. Thus, an online index is required, which means you\u0027ll need to feed some database with the raw metadata. It also avoid client to implement this feature locally, which is certainly not the smartest way of handling it.\u003C/p\u003E\u003Cp\u003E@keks: I agree with most of you last comments. However, I really believe your list of requirement is too complex for this project to be successful (why those developer-tools? Why hosting complete mods again? Why allowing external meta-data repo, when you can just use a unique repo on github?). I\u0027d keep the set of features as minimal as possible, and build upon it if required. As I see it, there\u0027s 3 steps involved here:\u003C/p\u003E\u003Cp\u003E* A meta-data format that can be easily written and maintained manually (through a dvcs like git). TeddyDD has covered this subject. \u003C/p\u003E\u003Cp\u003E* An simple online index that can return Json information to clients (or even other third party website!). Search, and detailed information of specific packages are needed.\u003C/p\u003E\u003Cp\u003E* A client software that use that Json information to download/check integrity/install with proper dependency management.\u003C/p\u003E\u003Cp\u003EThe first two points are covered by software like the AUR. I\u0027m currently taking a closer look at its code, but I\u0027d say it does 90% of what would be required right now.\u003C/p\u003E\u003Cp\u003EThe major issue is that it actually requires direct uploading of \u0022meta-data\u0022 files on the server. Direct git integration is planned, but not yet implemented. This will be done in the next version of the AUR.\u003C/p\u003E\u003Cp\u003EAlso, Arch Linux is a rolling release distribution and as such, managing multi-versioned software doesn\u0027t really make sense. As such, the available software are always the \u0022latest\u0022 available. However, the AUR allows upload of various versions under a different name when the need arise. Those are mostly temporary issues anyway.\u003C/p\u003E\u003Cp\u003EIdeally, we\u0027d have an index and json interface online as soon as possible, allowing the work to be done on clients.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-24T12:59:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003E@TeddyDD: I\u0027ve though about the whole search issue, and I realized that not allowing search from the start would be a major mistake. The whole point of a client software is to allow easy installation and upgrade. If the user can\u0027t install mods without browsing manually, he\u0027d rather install mods manually too. Thus, an online index is required, which means you\u0027ll need to feed some database with the raw metadata.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe don\u0027t need a database for that, we can make use of git there. Every repository could have some kind of \u0022index repository\u0022 pointing to the modules it contains via submodules. Just like the example repo does I put up earlier.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EIt also avoid client to implement this feature locally, which is certainly not the smartest way of handling it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy do you think so? A locally cached index would reduce load on service-side and would most likely also be faster.\u003C/p\u003E\u003Cp\u003EYou need to keep dependency-resolution in mind here. This can (at the current number of mods) easily require you to do a couple of hundred queries against your index to resolve a more complex dependency. Given a critical number of users and a popular mod update, this can easily lead to users DDoS\u0027ing their own service \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI\u0027d rather have the backend only provide the application model (means data only) and let the client applications do the work.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003E@keks: I agree with most of you last comments. However, I really believe your list of requirement is too complex for this project to be successful\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003Ewhy those developer-tools?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBecause for this to be successful we need the developers on board. Right now there is almost no standard for mod development. There are little to no commonly used frameworks/libraries. Every developer reinvents the wheel over and over again. Most likely because they simply do not know a solution already exists, or they see no easy way to contribute changes they\u0027d like/need to have in said solution.\u003C/p\u003E\u003Cp\u003EA central repository PLUS some set of developer tools already containing the most commonly used libraries may help with that issue.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EWhy hosting complete mods again?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhen hosting meta-data only, we cannot guarantee that the binary files will remain available over time.\u003C/p\u003E\u003Cp\u003EMany developers here simply replace their mods with new versions, deleting the old ones. And even if they still serve the old releases, that\u0027s mostly limited to one or two predecessor versions only.\u003C/p\u003E\u003Cp\u003EThis would inevitably leas to a point where our repo would contain 99% dead links to binary files which do no longer exist anymore.\u003C/p\u003E\u003Cp\u003EBy hosting the files in the repo itself, we (or the external repo maintainer) can guarantee the availability of all versions indexed in the repo at all times.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EWhy allowing external meta-data repo, when you can just use a unique repo on github\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBecause a central repository requires a central instance controlling everything. I (and most likely most of the forums here) do not want a single individual (organization) to be in charge of every mod out there. By using a de-centralized approach, we still can have some kind of \u0022main repository\u0022, but also enable individuals to host alternatives themselves.\u003C/p\u003E\u003Cp\u003EA mod developer for example could host his own repository (as a git repo), maintaining and serving his own mods. The developer tools provided could aid him in this process, not requiring him know anything about git at all.\u003C/p\u003E\u003Cp\u003EIn some cases we cannot (or do not want to) host the mod itself. For example because of license issues, or simply because of high maintenance volume required to keep it up to date. In such cases, we can provide \u0022meta-packages\u0022 only containing the source link to the binary files that are hosted elsewhere. But as already said, that could (and most certainly will) lead to broken packages because of dead links.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EI\u0027d keep the set of features as minimal as possible, and build upon it if required.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s the plan ;-) The first step after planning should be a basic prototype providing the core functionality only. Over time, we add features to said prototype and see how they do. Once we got a (almost) fully functional prototype (that means, uploading, downloading, updating, searching mods) we can start planning and creating a proper application.\u003C/p\u003E\u003Cp\u003EIt\u0027s important to keep those (optional) features in mind, so we do not get to a point where we cannot easily implement a feature users would like to see, because our application core does not support it without major changes. That\u0027s why I\u0027d like to see a modular approach. To be able to easily add features later on. But for that, we first need to know how such modules may look like. What kind of interfaces our core application needs to provide, that does not require major breaking changes later on. Because one thing nobody likes is updates breaking current interfaces / behavior.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EAs I see it, there\u0027s 3 steps involved here:\u003Cp\u003E* A meta-data format that can be easily written and maintained manually (through a dvcs like git). TeddyDD has covered this subject. \u003C/p\u003E\u003Cp\u003E* An simple online index that can return Json information to clients (or even other third party website!). Search, and detailed information of specific packages are needed.\u003C/p\u003E\u003Cp\u003E* A client software that use that Json information to download/check integrity/install with proper dependency management.\u003C/p\u003E\u003Cp\u003EThe first two points are covered by software like the AUR. I\u0027m currently taking a closer look at its code, but I\u0027d say it does 90% of what would be required right now.\u003C/p\u003E\u003Cp\u003EThe major issue is that it actually requires direct uploading of \u0022meta-data\u0022 files on the server. Direct git integration is planned, but not yet implemented. This will be done in the next version of the AUR.\u003C/p\u003E\u003Cp\u003EAlso, Arch Linux is a rolling release distribution and as such, managing multi-versioned software doesn\u0027t really make sense. As such, the available software are always the \u0022latest\u0022 available. However, the AUR allows upload of various versions under a different name when the need arise. Those are mostly temporary issues anyway.\u003C/p\u003E\u003Cp\u003EIdeally, we\u0027d have an index and json interface online as soon as possible, allowing the work to be done on clients.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETry not to focus too much on AUR. Git already provides almost everything we need. The only things we really need to care about is dependency management and efficient search.\u003C/p\u003E\u003Cp\u003EAs for the indexing service: As already stated, git can do this for us as well. For a convenient API for third parties, we could setup a simple GitHub page, providing a JSON/YAML/XML API.\u003C/p\u003E\u003Cp\u003EI want to mention Six-Updater here again. They do provide such a simple JSON-API which you can easily query. I\u0027d really like you guys to take a look at it, as it (IMHO) does everything right on backend-side (though, the frontend got more than enough issues...)\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EDo you agree with me on these points or are there further questions / alternatives you want to discuss?\u003C/em\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-24T13:12:14Z\u0022 title=\u002208/24/2014 01:12  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 24, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-24T15:24:00Z","Content":"\n\u003Cp\u003EGreat. I extensively answered your post but lost all the content just before I could send it.\u003C/p\u003E\u003Cp\u003EI feel very lazy now but I\u0027ll do the very quick version instead:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EAs long as you requires developers to jump in to succeed, I believe the project is doomed to failed from the start. The current situation is the main constraint, we have to make it work with what we have now. Unless Squad jumps in and enforce a specific way to create/packages mods, which I don\u0027t see coming any time soon.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EI was referring to the recreation of the local index from the raw-metadata files as \u0022not the smartest way\u0022 of handling it since a Json interface and one single request as being enough to get the required information for updating purpose. Not sure how you manage to think about couples of hundreds requests and DDoS from there \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E (you\u0027d only need one request per level of dependencies across all the installed mods, which means about 3 if you have complex mods).\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECentral repository. Yes, you can keep one central repo only. Since it will be using Git anyway, fork can be possible anytime if \u0022something goes wrong\u0022 on the human side. Everything else is unnecessary complexity.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOld broken links: Why should we care about them? Squad allows download of the two last KSP version, and by it\u0027s development model KSP is a moving target. Mods have to adapt or die. No point in supporting old versions of mods.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EI had a look at Six-Updater but the only relevant information I could find is that the license is problematic (CC BY-NC-ND). Haven\u0027t found what the Yaml/json interface look like. Could you provide a link here?\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOverall feeling: There\u0027s two conflicting views in this thread: The \u0022meta-data\u0022 idea only from TeddyDD, and the more complex whole repository repackaging/hosting idea from yours. Obviously, I adhere to the former idea.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-24T16:23:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EAs long as you requires developers to jump in to succeed, I believe the project is doomed to failed from the start. The current situation is the main constraint, we have to make it work with what we have now. Unless Squad jumps in and enforce a specific way to create/packages mods, which I don\u0027t see coming any time soon.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t see it as realistic to maintain a couple of hundred mods with just a hand full of people over a longer peroid. Of course, if we really want to, we could do that, but that would cause major delays in mod releases on the repository. IMHO the better way is to show mod developers how easy it can be to distribute their mods and how they can benefit from a \u0022mod development kit\u0022 providing some libraries covering common tasks. For example toolbar integration, module manager, logging, resource api, etc... There are quite a few good libraries out there, but still people reinvent them over and over again.\u003C/p\u003E\u003Cp\u003EWe do not require the modders to jump in early, but it would help a great deal. I do not want to force them to do anything, I want to help them come together and make life easier for all of us. I already explained this a few posts earlier.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EI was referring to the recreation of the local index from the raw-metadata files as \u0022not the smartest way\u0022 of handling it since a Json interface and one single request as being enough to get the required information for updating purpose. Not sure how you manage to think about couples of hundreds requests and DDoS from there \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E (you\u0027d only need one request per level of dependencies across all the installed mods, which means about 3 if you have complex mods).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s not correct. Think about specific version dependencies and multiple mod updates at once. Mod A requires mod B version 1 and Mod C version 2. Mod B requires mod D which in turn is not compatible with mod C version 2, yet... and so on. When managing dependencies you can very easily create cycles or conflicts. Now think about a major update of KSP and a user like me that has about 100 mods active, all being updated to the new KSP release. 100 Updates with about 2 to 3 dependencies per mod ~\u0026gt; 250 dependencies to resolve \u003Cstrong\u003EPLUS\u003C/strong\u003E intermediate dependencies, version conflicts, ... and all this with many users at once. There you got your DDoS \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI also see absolutely no reason to run this on service-side, as clients can perfectly resolve dependencies on their side. Even more efficiently. Running this on client-side also eliminates the need to provide a central \u0022dependency resolution service\u0022 for each repo.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003ECentral repository. Yes, you can keep one central repo only. Since it will be using Git anyway, fork can be possible anytime if \u0022something goes wrong\u0022 on the human side. Everything else is unnecessary complexity\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy do you think so? IMHO it really does not matter if you have one or many repositories, as long as they follow a common standard and do not create conflicts. One easy way to eliminate conflicts would be a strict hierarchy the user could define. That\u0027s exactly what APT does, for example. It works with multiple repositories following a common standard and uses user-defined priorities to tell which repository to get a package from and which ones to ignore. Has been working perfectly for years for me.\u003C/p\u003E\u003Cp\u003ECould you please further explain your concern here?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EOld broken links: Why should we care about them? Squad allows download of the two last KSP version, and by it\u0027s development model KSP is a moving target. Mods have to adapt or die. No point in supporting old versions of mods.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s not correct. There are many people out there maintaining multiple KSP installations alongside with different versions. For a more popular example, see \u0022Scott Manley\u0022.\u003C/p\u003E\u003Cp\u003EAlso, maybe some feature is broken in the latest mod release, and people would like to jump back to an older one. Another point would be that a user wants to install a mod A which is only compatible with mod B version 1. But the current release of mod B is version 2, while version 1 is still perfectly compatible with KSP. So the user effectively has to downgrade mod B which in case of an external hoster may result in the user not being able to install mod A, because the old release of mod B is no longer available...\u003C/p\u003E\u003Cp\u003ETL;DR: Because of compatibility/dependency issues \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EI had a look at Six-Updater but the only relevant information I could find is that the license is problematic (CC BY-NC-ND). Haven\u0027t found what the Yaml/json interface look like. Could you provide a link here?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t know if there is any public documentation available on the API. The time I used SU was about when ArmAII:OA was released - must be about 3 to 4 years ago... I was building an auto-updater for one of the larger communities servers. As of the time there was no Linux-client available, I simply reverse-engineered the windows-application and build a basic console client for the six-network.\u003C/p\u003E\u003Cp\u003EBasically it consists of three parts:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Ea central API service which you can query\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eindependend so called \u0022networks\u0022 consisting of file servers mirroring each other\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ethe file servers themselves\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EDisclaimer: As of the time being, things might have changed!\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EYou can easily take a look at the API by analyzing the SU-Clients traffic in Wireshark. At least back then the traffic was not encrypted or signed, just a plain HTTP/JSON API.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E(I do remember something about having to acquire some kind of ticket through the API though...)\u003C/em\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EOverall feeling: There\u0027s two conflicting views in this thread: The \u0022meta-data\u0022 idea only from TeddyDD, and the more complex whole repository repackaging/hosting idea from yours. Obviously, I adhere to the former idea.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually the \u0022meta-data\u0022 idea is something I already stated in my initial post and mention again and again in almost all of my posts here \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E There is no conflict at all, and it is absolutely no problem to attach a binary file to a git tag on GitHub. That\u0027s what GitHub calls \u0022release\u0022 and (according to GitHub Staff) is the preferred way to distribute binary content.\u003C/p\u003E\u003Cp\u003ECould you please explain your indisposition in hosting the actual mod itself?\u003C/p\u003E\u003Cp\u003EI mean, mods can still be hosted elsewhere. We\u0027d simply be another mirror.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-24T16:28:58Z\u0022 title=\u002208/24/2014 04:28  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 24, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-24T20:35:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EBy hosting the files in the repo itself, we (or the external repo maintainer) can guarantee the availability of all versions indexed in the repo at all times.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe can guarantee the availability of modes with permissive licenses. These closed will disappear anyway. Open mods can be uploaded to dropbox/google drive or Curse and retrieved from there (or from oficial github releases). Using git submodules \u002B github releases will be terribly time-consuming and complicated. Who will be responsible for the dozens of forked repositories?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EWhy do you think so? A locally cached index would reduce load on service-side and would most likely also be faster.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAgree. The more things can be done \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9on the client side, the better.\u003C/p\u003E\u003Cp\u003EAlso I think mod tools are awsome, but do not have too much in common with mods management.\u003C/p\u003E\u003Cp\u003EI do not believe that any moder join us and start using this system. Not until it becomes popular among players.\u003C/p\u003E\n"}]}