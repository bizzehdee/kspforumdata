{"TopicId":77627,"ForumId":35,"TopicTitle":"Combining efforts on proper mod management framework / tools / platform","CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-14T19:10:34Z","PageNum":4,"Articles":[{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-24T21:34:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EWe can guarantee the availability of modes with permissive licenses. These closed will disappear anyway. Open mods can be uploaded to dropbox/google drive or Curse and retrieved from there (or from oficial github releases). Using git submodules \u002B github releases will be terribly time-consuming and complicated.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EAlso I think mod tools are awsome, but do not have too much in common with mods management.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou just anwsered your own question here. I\u0027d like to create a simple tool uploading all data necessary to a repository.\u003C/p\u003E\u003Cp\u003EEverything we\u0027re talking about can be done via the API or even git itself: \u003Ca href=\u0022https://developer.github.com/v3/repos/releases/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://developer.github.com/v3/repos/releases/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAnd these tools do have a lot in common with management, IMHO. They can be the one thing which can at least create some kind of standard.\u003C/p\u003E\u003Cp\u003EFor this to work, they need to be easy to use - and by easy I mean stupidly easy so that basically an infant could use them - but yet powerful enough so that advanced users can bend them to their needs.\u003C/p\u003E\u003Cp\u003EI also do not see your point about submodules\u002Breleases here. This is probably by far the most easy way to create an easy to use index of all mods known to the our system - even across repo boundaries. Updating the index is also pretty easy as it\u0027s basically just 4 commands that can easily be wrapped up in a simple bash/batch file:\u003C/p\u003E\u003Cp\u003Egit submodule foreach git pull \u0026amp;\u0026amp; git add --all . \u0026amp;\u0026amp; git commit -m \u0027updated index\u0027 . \u0026amp;\u0026amp; git push\u003C/p\u003E\u003Cp\u003EAfter this command your index points to all the latest releases. It\u0027s basically a no-brainer to update the index.\u003C/p\u003E\u003Cp\u003EThis could also efficiently reduce traffic, as we only need to download a single git tag (index HEAD) to check if a client is up-to-date or not.\u003C/p\u003E\u003Cp\u003EThe hosting thing is nothing we should put too much time in right now. It basically does not matter if we host the content ourselves or if it is hosted externally. It\u0027s just the download link pointing to another source. Meta-files telling the application where to put which file will be needed anyways.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EWho will be responsible for the dozens of forked repositories?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy should we care about them at all? These have nothing to do with our work.\u003C/p\u003E\u003Cp\u003EOr am I missing something here?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI do not believe that any moder join us and start using this system. Not until it becomes popular among players.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, hope dies last. Until then, we\u0027ll have do do stuff ourselves.\u003C/p\u003E\u003Cp\u003EAnother point for GitHub \u002B client-side tools and abstain from maintaining a separate database would be that it would be absurdly simple to take over our role in case we decide to disappear one day. All someone would have to do is fork the index repo and he\u0027d be done. All resources referenced in the index would still be valid and could be replaced one-by-one without any downtime at all.\u003C/p\u003E\u003Cp\u003EAs already stated in an earlier post, I\u0027d really like GitHub (or any other hosting service) to just serve data.\u003C/p\u003E\u003Cp\u003EWhat do you think about this?\u003C/p\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-24T22:24:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EI don\u0027t see it as realistic to maintain a couple of hundred mods with just a hand full of people over a longer peroid. Of course, if we really want to, we could do that, but that would cause major delays in mod releases on the repository. IMHO the better way is to show mod developers how easy it can be to distribute their mods and how they can benefit from a \u0022mod development kit\u0022 providing some libraries covering common tasks. For example toolbar integration, module manager, logging, resource api, etc... There are quite a few good libraries out there, but still people reinvent them over and over again. \u003Cp\u003EWe do not require the modders to jump in early, but it would help a great deal. I do not want to force them to do anything, I want to help them come together and make life easier for all of us. I already explained this a few posts earlier.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI understand this. And I still believe this doesn\u0027t belong to a \u0022mod manager\u0022, as this is more a mod developer issue.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E \u003Cp\u003EThat\u0027s not correct. Think about specific version dependencies and multiple mod updates at once. Mod A requires mod B version 1 and Mod C version 2. Mod B requires mod D which in turn is not compatible with mod C version 2, yet... and so on. When managing dependencies you can very easily create cycles or conflicts. Now think about a major update of KSP and a user like me that has about 100 mods active, all being updated to the new KSP release. 100 Updates with about 2 to 3 dependencies per mod ~\u0026gt; 250 dependencies to resolve \u003Cstrong\u003EPLUS\u003C/strong\u003E intermediate dependencies, version conflicts, ... and all this with many users at once. There you got your DDoS \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI also see absolutely no reason to run this on service-side, as clients can perfectly resolve dependencies on their side. Even more efficiently. Running this on client-side also eliminates the need to provide a central \u0022dependency resolution service\u0022 for each repo.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere should be some misunderstanding here, because nobody has mentioned dependency resolution on the server side (only dependency metadata). Also, still don\u0027t understand how you got your DDoS. As long as the Json interface can provide info for more than a single package at the same time, you won\u0027t have a huge number of requests (just like the AUR and the client I maintain).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWhy do you think so? IMHO it really does not matter if you have one or many repositories, as long as they follow a common standard and do not create conflicts. One easy way to eliminate conflicts would be a strict hierarchy the user could define. That\u0027s exactly what APT does, for example. It works with multiple repositories following a common standard and uses user-defined priorities to tell which repository to get a package from and which ones to ignore. Has been working perfectly for years for me.\u003C/p\u003E\u003Cp\u003ECould you please further explain your concern here?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy concern is unnecessary complexity for a still unborn project.\u003C/p\u003E\u003Cp\u003EAs stated above, this is a non issue since git is decentralized by nature.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThat\u0027s not correct. There are many people out there maintaining multiple KSP installations alongside with different versions. For a more popular example, see \u0022Scott Manley\u0022.\u003C/p\u003E\u003Cp\u003EAlso, maybe some feature is broken in the latest mod release, and people would like to jump back to an older one. Another point would be that a user wants to install a mod A which is only compatible with mod B version 1. But the current release of mod B is version 2, while version 1 is still perfectly compatible with KSP. So the user effectively has to downgrade mod B which in case of an external hoster may result in the user not being able to install mod A, because the old release of mod B is no longer available...\u003C/p\u003E\u003Cp\u003ETL;DR: Because of compatibility/dependency issues \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt means mod B v2 conflicts with mod B v1 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E. If mod A can\u0027t be installed anymore because its dependency isn\u0027t available anymore, then mod A must be updated upstream or it will die. Note that I\u0027m aware of people keeping many version of KSP in parallel, and I\u0027m all for a feature in the client that switching from one install to another one, like some of the actual mod managers. But I do see this more as a copy/backup feature of the KSP install before any major upgrade, implemented in the client, for the KSP versions provided by Squad but not all of them (this is simply crazy to me).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI don\u0027t know if there is any public documentation available on the API. The time I used SU was about when ArmAII:OA was released - must be about 3 to 4 years ago... I was building an auto-updater for one of the larger communities servers. As of the time there was no Linux-client available, I simply reverse-engineered the windows-application and build a basic console client for the six-network.\u003C/p\u003E\u003Cp\u003EBasically it consists of three parts:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Ea central API service which you can query\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eindependend so called \u0022networks\u0022 consisting of file servers mirroring each other\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ethe file servers themselves\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EDisclaimer: As of the time being, things might have changed!\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EYou can easily take a look at the API by analyzing the SU-Clients traffic in Wireshark. At least back then the traffic was not encrypted or signed, just a plain HTTP/JSON API.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E(I do remember something about having to acquire some kind of ticket through the API though...)\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom what I\u0027ve read, there was a Linux client but it is now deprecated. Anyway, Six-updater is not really documented, not platform independent either and does have a problematic license. I guess we can safely think about another alternative here.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E \u003Cp\u003ECould you please explain your indisposition in hosting the actual mod itself?\u003C/p\u003E\u003Cp\u003EI mean, mods can still be hosted elsewhere. We\u0027d simply be another mirror.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs of hosting, it\u0027s just unnecessary complexity again. I don\u0027t think a mod manager should provide a complete mirror service.\u003C/p\u003E\u003Cp\u003ECould you describe what you mean by \u0022meta-data\u0022 here? The more I read you, the more I believe we\u0027re talking about different things and that we\u0027ve never been on the same wavelength. From my perspective (and the one of TeddyDD that I can understand), there wouldn\u0027t be any binary distribution (apart from the compiled client itself), just a bunch of simple files that include basic information (name, version, download link, dependency information, etc.).\u003C/p\u003E\u003Cp\u003ECould you give an example on what would be on the Git repo (code, raw metadata file, mod itself?) and how the client would get access to that information? GitHub API is nice, but I don\u0027t see how to use it to make the relevant information available to the client.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-24T22:28:57Z\u0022 title=\u002208/24/2014 10:28  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 24, 2014\u003C/time\u003E by Spyhawk\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-24T23:24:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EI understand this. And I still believe this doesn\u0027t belong to a \u0022mod manager\u0022, as this is more a mod developer issue.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, on the one hand we want as many people as possible to jump onto this train, on the other side you say it\u0027s the developers problem.\u003C/p\u003E\u003Cp\u003EI don\u0027t think this is a developer\u0027s problem, because they say they are perfectly fine right now. It\u0027s a user\u0027s problem, because we are unhappy with the current situation.\u003C/p\u003E\u003Cp\u003EI\u0027d also rather not think of this as a \u0022mod manager\u0022 (such tools already exist), but more of a repository and a bunch of management applications.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EThere should be some misunderstanding here, because nobody has mentioned dependency resolution on the server side (only dependency metadata). Also, still don\u0027t understand how you got your DDoS. As long as the Json interface can provide info for more than a single package at the same time, you won\u0027t have a huge number of requests (just like the AUR and the client I maintain). My concern is unnecessary complexity for a still unborn project.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo you\u0027d rather put the \u0022complexity\u0022 on service-side instead of putting it on client-side? IMHO a simple \u0022git pull\u0022 on the index and subsequent HTTP-requests on the mod\u0027s meta-data files is a lot less complex than creating a API collecting and providing the same data. But that\u0027s just my opinion.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EIt means mod B v2 conflicts with mod B v1 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E. If mod A can\u0027t be installed anymore because its dependency isn\u0027t available anymore, then mod A must be updated upstream or it will die.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually it means mod D was not updated for C v2, yet. Such a example would be RemoteTech2 or even B9. None of them died, but the community provided fixes and/or workarounds.\u003C/p\u003E\u003Cp\u003EWe could provide such workarounds/fixes as well.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003ENote that I\u0027m aware of people keeping many version of KSP in parallel, and I\u0027m all for a feature in the client that switching from one install to another one, like some of the actual mod managers. But I do see this more as a copy/backup feature of the KSP install before any major upgrade, implemented in the client, for the KSP versions provided by Squad but not all of them (this is simply crazy to me).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, if you do not see parallel installations as an issue, what about rolling back to an older release of a mod? I myself for example had a lot of problems with newer RemoteTech and InfernalRobotics releases. Installing older releases solved that problem for me. Firespitter and ExsurgentEngineering are other examples. Luckily I maintain a local repo versioning the mods I use and the changes I made to them myself, so I could downgrade even though the official download links on the forums were long gone.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EFrom what I\u0027ve read, there was a Linux client but it is now deprecated. Anyway, Six-updater is not really documented, not platform independent either and does have a problematic license. I guess we can safely think about another alternative here.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, I did not say we should turn SixUpdater into a mod manager for KSP. I just wanted to bring it into discussion as a reference. I extensively worked with it, and the backend is perfectly fine (IMHO). I just wanted to talk about it\u0027s backend architecture.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EAs of hosting, it\u0027s just unnecessary complexity again. I don\u0027t think a mod manager should provide a complete mirror service.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy would this be unnecessary complexity? It\u0027s just a binary file attached to a release tag, which we\u0027d need anyway.\u003C/p\u003E\u003Cp\u003EIt does not matter if the meta-file reads \u0022{ url: \u0027http://dropbox.com/foo\u0027 }\u0022 or \u0022{ url: \u003Ca href=\u0022https://github.com/repo/foo\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://github.com/repo/foo\u003C/a\u003E\u0027 }\u0022. The only difference being that in the latter case we do not lose binary releases and don\u0027t hoard dead links.\u003C/p\u003E\u003Cp\u003EWhen not archiving old versions, there is no point to use git at all in first place.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003ECould you describe what you mean by \u0022meta-data\u0022 here? The more I read you, the more I believe we\u0027re talking about different things and that we\u0027ve never been on the same wavelength. From my perspective (and the one of TeddyDD that I can understand), there wouldn\u0027t be any binary distribution (apart from the compiled client itself), just a bunch of simple files that include basic information (name, version, download link, dependency information, etc.).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI already posted a link to an example repo I quickly put up earlier. I also already described the contents of such a meta-data file in previous posts. Basically TeddyDD\u0027s example file is a stripped-down version of mine, not including license-text (which in my opinion are absolutely mandatory) and similar stuff.\u003C/p\u003E\u003Cp\u003EAnyway, here is the link to the example repo again: \u003Ca href=\u0022https://github.com/ksprepo/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EA meta-data filecould look like this: \u003Ca href=\u0022https://github.com/ksprepo/ksp_b9-aerospace/blob/master/meta.yaml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo/ksp_b9-aerospace/blob/master/meta.yaml\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENote, that I already discussed this earlier and explained how we could provide external download information.\u003C/p\u003E\u003Cp\u003EIn the example repo I setup different branches for source (upstream), development (develop) and the actual release content going out to users (master).\u003C/p\u003E\u003Cp\u003EThe upstream branch is also used to contribute changes (like the community B9 fix) back upstream.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003ECould you give an example on what would be on the Git repo (code, raw metadata file, mod itself?) and how the client would get access to that information? GitHub API is nice, but I don\u0027t see how to use it to make the relevant information available to the client.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe repo would actually only contain the meta.yaml file. Releases then get tagged and a binary release gets added to that tag: \u003Ca href=\u0022https://help.github.com/articles/creating-releases\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://help.github.com/articles/creating-releases\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EOptionally the maintainer could maintain a upstream branch for pulling in changes from upstream, and contibuting modifications back upstream. But that has nothing to do with the actual mod management here.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003ENote: I did not attach binary files to releases on the example repo, instead I directly put them into the master branch\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EAnd no offense, but did you already work with git? I don\u0027t see any problem here for the client getting all the information it needs. In case of my example repo a simple update process could look like this on client-side:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003Eclone/pull \u003Ca href=\u0022https://github.com/ksprepo/mod-repo\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo/mod-repo\u003C/a\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Echeck submodule revisions vs local revisions\u003Cbr\u003E\u003Col\u003E\u003Cli\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ein case the installed mod revisions match, do nothing\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ein case they differ, continue\u003Cbr\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eget latest meta-data, for example \u003Ca href=\u0022https://github.com/ksprepo/ksp_api-extensions/blob/master/meta.yaml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo/ksp_api-extensions/blob/master/meta.yaml\u003C/a\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Edownload the new binary release from url provided by meta.yaml\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ereplace local files, delete obsolete files\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EA simple search for mods can be done via GitHub\u0027s search. The following query for example will lookup the meta-file for the mod \u0022HotRockets\u0022 in my example repo:\u003Cbr\u003EHotRockets in:file,meta.yaml extension:yaml user:ksprepo path:/\u003Cbr\u003EPut this into the serch form and you\u0027ll land here: \u003Ca href=\u0022https://github.com/search?utf8=%E2%9C%93\u0026amp;q=HotRockets\u002Bin%3Afile%2Cmeta.yaml\u002Bextension%3Ayaml\u002Buser%3Aksprepo\u002Bpath%3A%2F\u0026amp;type=Code\u0026amp;ref=searchresults\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/search?utf8=%E2%9C%93\u0026amp;q=HotRockets\u002Bin%3Afile%2Cmeta.yaml\u002Bextension%3Ayaml\u002Buser%3Aksprepo\u002Bpath%3A%2F\u0026amp;type=Code\u0026amp;ref=searchresults\u003C/a\u003E\u003Cbr\u003EOr via the JSON API: \u003Ca href=\u0022https://api.github.com/search/repositories?q=HotRockets\u002Bin:file,/meta.yaml\u002Buser:ksprepo\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://api.github.com/search/repositories?q=HotRockets\u002Bin:file,/meta.yaml\u002Buser:ksprepo\u003C/a\u003E\u003C/li\u003E\u003C/ol\u003E\u003C/li\u003E\u003C/ol\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-24T23:33:09Z\u0022 title=\u002208/24/2014 11:33  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 24, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-24T23:48:17Z","Content":"\n\u003Cp\u003ESo client need git installed right? \u003C/p\u003E\u003Cp\u003EIt looks a bit better when you explain it from the client point of view. So off, if the file meta.yml there is no link to download, the client should look for github releases (or in master as in your example)\u003C/p\u003E\u003Cp\u003EIf I understood everything well your idea much better use features of github (eg searching)\u003C/p\u003E\u003Cp\u003EEdit: \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003Enot including license-text (which in my opinion are absolutely mandatory\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI do not think that every meta.yaml file should contain a license, which in addition can be confused with mod license.\u003C/p\u003E\u003Cp\u003EBut that\u0027s just my opinion.\u003C/p\u003E\u003Cp\u003EAnyway, it looks good.\u003C/p\u003E\u003Cp\u003EWould it look like the process of creating such a repository? Or addition to the new packages?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-24T23:55:01Z\u0022 title=\u002208/24/2014 11:55  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 24, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-25T08:32:10Z","Content":"\n\u003Cp\u003E(just a very quick answer, might expand answer later when I get time to do so)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cem\u003ENote: I did not attach binary files to releases on the example repo, instead I directly put them into the master branch\u003C/em\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks! That\u0027s exactly why your example repo didn\u0027t make sense to me in the first place.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAnd no offense, but did you already work with git? I don\u0027t see any problem here for the client getting all the information it needs.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, I did. But my concern about git is exactly the same as TeddyDD above. I do agree that git would be simpler and an effective solution for more advanced users, but I don\u0027t believe installing it on users machine is the correct thing to do for non developers. On the other hand, if github API allows easy access to the content of the json/yaml files that would be the perfect solution (not git software install required, no external database for a yaml/json interface).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EA simple search for mods can be done via GitHub\u0027s search. The following query for example will lookup the meta-file for the mod \u0022HotRockets\u0022 in my example repo:\u003C/p\u003E\u003Cp\u003EHotRockets in:file,meta.yaml extension:yaml user:ksprepo path:/\u003C/p\u003E\u003Cp\u003EPut this into the serch form and you\u0027ll land here: \u003Ca href=\u0022https://github.com/search?utf8=%E2%9C%93\u0026amp;q=HotRockets\u002Bin%3Afile%2Cmeta.yaml\u002Bextension%3Ayaml\u002Buser%3Aksprepo\u002Bpath%3A%2F\u0026amp;type=Code\u0026amp;ref=searchresults\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/search?utf8=%E2%9C%93\u0026amp;q=HotRockets\u002Bin%3Afile%2Cmeta.yaml\u002Bextension%3Ayaml\u002Buser%3Aksprepo\u002Bpath%3A%2F\u0026amp;type=Code\u0026amp;ref=searchresults\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EOr via the JSON API: \u003Ca href=\u0022https://api.github.com/search/repositories?q=HotRockets\u002Bin:file,/meta.yaml\u002Buser:ksprepo\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://api.github.com/search/repositories?q=HotRockets\u002Bin:file,/meta.yaml\u002Buser:ksprepo\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmm doesn\u0027t seem a direct access to content of yaml/json files is possible. So either git will have to be installed on clients, or the yaml/json file will have to be downloaded independently. Is there a better solution?\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EEdit: Don\u0027t get me wrong, I like your idea. I\u0027m just wondering if there\u0027s something more straightforward for a user point of view.\u003C/em\u003E\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-25T11:42:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EYes, I did. But my concern about git is exactly the same as TeddyDD above. I do agree that git would be simpler and an effective solution for more advanced users, but I don\u0027t believe installing it on users machine is the correct thing to do for non developers. On the other hand, if github API allows easy access to the content of the json/yaml files that would be the perfect solution (not git software install required, no external database for a yaml/json interface).\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003ESo client need git installed right?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWho said we need users to install git on their machines? There are quite a few good implementations out there (including Mono) which we can use. Alternatively we could simply ship a binary with our client-software and the user wouldn\u0027t even necessarily know that git is involved.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EHmm doesn\u0027t seem a direct access to content of yaml/json files is possible. So either git will have to be installed on clients, or the yaml/json file will have to be downloaded independently. Is there a better solution?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis looks pretty raw to me, doesn\u0027t it? ;-)\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://raw.githubusercontent.com/ksprepo/ksp_hot-rockets/master/meta.yaml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://raw.githubusercontent.com/ksprepo/ksp_hot-rockets/master/meta.yaml\u003C/a\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003ESo off, if the file meta.yml there is no link to download, the client should look for github releases (or in master as in your example)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere should always be a download link in the meta-file. When hosting the mod as an attachment to the release tag, it just simply points there instead of some external source.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EIf I understood everything well your idea much better use features of github (eg searching)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, use what already exists instead of re-inventing it over and over again \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI do not think that every meta.yaml file should contain a license, which in addition can be confused with mod license.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt has to. Otherwise a third party is not allowed to modify/build upon it in any way (copyright). That\u0027s the problem we have with unlicensed mods right now.\u003C/p\u003E\u003Cp\u003EBecause I want it to be open and free, I chose the MIT license for my example repo, while keeping original work under their original license.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E(Note: See README.md, which is automatically generated using the meta.yaml)\u003C/em\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EWould it look like the process of creating such a repository? Or addition to the new packages?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E create/clone repo\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E commit changes to meta.yaml\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E create version tag\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E push changes to GitHub\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E attach binary release archive to release tag\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E update index repo\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEverything here can be easily automated, except the creation of the meta.yaml, which will most likely need manual work or at least verification of auto-detected values.\u003C/p\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-25T12:45:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EWho said we need users to install git on their machines? There are quite a few good implementations out there (including Mono) which we can use. Alternatively we could simply ship a binary with our client-software and the user wouldn\u0027t even necessarily know that git is involved.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECorrect! There\u0027s \u003Ca href=\u0022https://github.com/libgit2/libgit2sharp\u0022 rel=\u0022external nofollow\u0022\u003Elibgit2sharp\u003C/a\u003E that might be exactly what is needed here. Gosh, why didn\u0027t think about this in the first place?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis looks pretty raw to me, doesn\u0027t it? ;-)\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://raw.githubusercontent.com/ksprepo/ksp_hot-rockets/master/meta.yaml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://raw.githubusercontent.com/ksprepo/ksp_hot-rockets/master/meta.yaml\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI had more a single request for all files in mind, in order to avoid multi requests from the clients... Guess we\u0027ll have to live without it.\u003C/p\u003E\u003Cp\u003EI also see the GitHub API has a \u003Ca href=\u0022https://developer.github.com/v3/#rate-limiting\u0022 rel=\u0022external nofollow\u0022\u003Erate limit\u003C/a\u003E. Wouldn\u0027t this be a problem here?\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-25T14:03:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003ECorrect! There\u0027s \u003Ca href=\u0022https://github.com/libgit2/libgit2sharp\u0022 rel=\u0022external nofollow\u0022\u003Elibgit2sharp\u003C/a\u003E that might be exactly what is needed here. Gosh, why didn\u0027t think about this in the first place?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe\u0027d need to evaluate these libraries, before we jump onto one specific one. Platform-independence is important, as we need to support all platforms KSP supports.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EI had more a single request for all files in mind, in order to avoid multi requests from the clients... Guess we\u0027ll have to live without it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s what the index is for. I already explained this earlier. All a client needs to do to check if it is up-to-date is fetching index\u0027 head. If the submodules commit id\u0027s match, client is up-to-date.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EI also see the GitHub API has a \u003Ca href=\u0022https://developer.github.com/v3/#rate-limiting\u0022 rel=\u0022external nofollow\u0022\u003Erate limit\u003C/a\u003E. Wouldn\u0027t this be a problem here?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s one API request per minute for unauthenticated requests. When authenticated, you can 20 requests per minute.\u003C/p\u003E\u003Cp\u003ESee \u003Ca href=\u0022https://developer.github.com/v3/#rate-limiting\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://developer.github.com/v3/#rate-limiting\u003C/a\u003E and \u003Ca href=\u0022https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThat should be more than enough, given that we process as many things locally as possible.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-26T18:24:15Z","Content":"\n\u003Cp\u003E@spyhawk, @TeddyDD\u003C/p\u003E\u003Cp\u003EI updated my example MM-repo repo to further clarify my point: \u003Ca href=\u0022https://github.com/ksprepo/ksp_module-manager/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo/ksp_module-manager/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI moved the release binaries to the release tag and added download information and KSP version dependencies to the meta file.\u003C/p\u003E\u003Cp\u003EAs you can see, this way the meta-file could provide several download sources the client-software could chose from.\u003C/p\u003E\u003Cp\u003ESo ideally we (the repo) would then simply act as a mirror to the original source.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-26T20:57:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EEvery mod on this repository must comply to the following directory structure as far as possible. (Some mods may break this convention to retain compatibility to other mods.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat if author used \u0022All rights reserved\u0022 or \u0022CC-BY-NC-ND\u0022? Boom! The system does not work, end of the world? We can not in any way modify the original files. Package files should contain instructions on how to unpack such a mods.\u003C/p\u003E\u003Cp\u003EDo we really need SHA1 of every file in archive? \u003C/p\u003E\u003Cp\u003EBesides, cool \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-27T09:53:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EWhat if author used \u0022All rights reserved\u0022 or \u0022CC-BY-NC-ND\u0022? Boom! The system does not work, end of the world? We can not in any way modify the original files. Package files should contain instructions on how to unpack such a mods.\u003Cp\u003EDo we really need SHA1 of every file in archive? \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA single checksum for the archive itself should be more than enough.\u003C/p\u003E\u003Cp\u003EThat\u0027s the issue with repackaging. You\u0027ll end up forking and patching the mod to make them nicely integrate together, similarly to any Linux package management system. It\u0027s probably the fastest solution, but it requires quite a lot of work by the team maintaining the repo.\u003C/p\u003E\u003Cp\u003ESince the major issue is the lack of \u0022standard\u0022 to package mods properly, and that Squad doesn\u0027t seem to really care, maybe the only viable solution here would be to work our ass off to make them recommend a standard, if enforcing one isn\u0027t an option. This idea has already come up in the past, but has it put into action? (pardon my ignorance on this subject).\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-27T10:17:38Z","Content":"\n\u003Cp\u003EI would prefer something like mapping files from the archive into the game folders. Moders can continue to work in their own way. Its less work for us when upgrading package. The folder structure in a mod rarely changes. Now we would have to change it manually every update.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-27T11:09:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EWhat if author used \u0022All rights reserved\u0022 or \u0022CC-BY-NC-ND\u0022? Boom! The system does not work, end of the world? We can not in any way modify the original files.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd? We\u0027d still could fall back to only hosting the meta-data for such mods. If their mirror goes down, that\u0027s their problem then. We do not necessarily need to modify the release archive in any way. That\u0027s completely optional... Modifying the release archive actually is only of concern to us when integrating community fixes, like they were created for KSP 0.23.x B9 for example.\u003C/p\u003E\u003Cp\u003EBy only providing a download link to the original source and hosting some meta-data, we do no violate copyright in any way. That I already explained several times in earlier posts.\u003C/p\u003E\u003Cp\u003EOne last time: Hosting the release archive itself is completely optional!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EDo we really need SHA1 of every file in archive? \u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EA single checksum for the archive itself should be more than enough.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes we need to. Else we cannot detect changes to those files on client-side easily. That\u0027s something that is required for removal/update of mods.\u003C/p\u003E\u003Cp\u003EWhen not storing every file\u0027s checksum, we cannot detect conflicts (update makes changes to a file the user/mod already changed locally) and would blindly override local changes.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EThat\u0027s the issue with repackaging. You\u0027ll end up forking and patching the mod to make them nicely integrate together, similarly to any Linux package management system. It\u0027s probably the fastest solution, but it requires quite a lot of work by the team maintaining the repo.\u003Cp\u003ESince the major issue is the lack of \u0022standard\u0022 to package mods properly, and that Squad doesn\u0027t seem to really care, maybe the only viable solution here would be to work our ass off to make them recommend a standard, if enforcing one isn\u0027t an option. This idea has already come up in the past, but has it put into action? (pardon my ignorance on this subject).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd again, I already explained this several times. We do not repack anything unless we really have to. We also do not \u003Cstrong\u003Eneed\u003C/strong\u003E to change directory structures when using a client-side mod manager, as it can be used to easily navigate the directory structures for a specific mod.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI would prefer something like mapping files from the archive into the game folders. Moders can continue to work in their own way. Its less work for us when upgrading package. The folder structure in a mod rarely changes. Now we would have to change it manually every update.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESee previous answer and previous posts. I already talked about this.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EI\u0027d really prefer talking / chatting about this stuff, as we tend to write about the same things over and over again.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EI think this is because of the high delay between answers. Would you mind attending a meeting in TeamSpeak/Ventrilo/... or IRC?\u003C/strong\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T11:19:03Z\u0022 title=\u002208/27/2014 11:19  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-27T12:17:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EThat I already explained several times in earlier posts... And again, I already explained this several times... I already talked about this.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETo be honest, you\u0027re really not helping by integrating all the optional, unnecessary stuff in your example repo. From what you\u0027ve written in your first post, what you\u0027ve included in your example repo and the various \u0022optional\u0022 stuff you\u0027ve talked about in this thread, you\u0027ve lost me along this thread. My mind tries to find the ideal, simpler way to achieve the objective, while you\u0027re trying to integrate everything into this project at once, which personally confuses me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EYes we need to. Else we cannot detect changes to those files on client-side easily. That\u0027s something that is required for removal/update of mods.\u003Cp\u003EWhen not storing every file\u0027s checksum, we cannot detect conflicts (update makes changes to a file the user/mod already changed locally) and would blindly override local changes.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt depends how you handle it. Packages managers usually keep track of a list of files that are installed by each package, while you\u0027re proposing to check if a file still belongs to a package, or if it has been overwritten since then (as I understand it, am I right?). I think a saner conflict management would use the former method.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003Cstrong\u003EI\u0027d really prefer talking / chatting about this stuff, as we tend to write about the same things over and over again.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EI think this is because of the high delay between answers. Would you mind attending a meeting in TeamSpeak/Ventrilo/... or IRC?\u003C/strong\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d suggest you write a clear document, with a short example and an example repo (or submodules repo) that doesn\u0027t integrate all the optional stuff you have in mind. To me, \u0022optional\u0022 means \u0022unnecessary\u0022. We could then talk about it over IRC.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESince the major issue is the lack of \u0022standard\u0022 to package mods properly, and that Squad doesn\u0027t seem to really care, maybe the only viable solution here would be to work our ass off to make them recommend a standard, if enforcing one isn\u0027t an option. This idea has already come up in the past, but has it put into action? (pardon my ignorance on this subject).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis part has been overlooked. Is this really not an option? Has it ever been tried previously?\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-27T15:22:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003ETo be honest, you\u0027re really not helping by integrating all the optional, unnecessary stuff in your example repo. From what you\u0027ve written in your first post, what you\u0027ve included in your example repo and the various \u0022optional\u0022 stuff you\u0027ve talked about in this thread, you\u0027ve lost me along this thread. My mind tries to find the ideal, simpler way to achieve the objective, while you\u0027re trying to integrate everything into this project at once, which personally confuses me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EI\u0027d suggest you write a clear document, with a short example and an example repo (or submodules repo) that doesn\u0027t integrate all the optional stuff you have in mind. To me, \u0022optional\u0022 means \u0022unnecessary\u0022\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy initial post is not up-to-date anymore. It contains an initial idea, which developed over time. I know some things got lost over time, that\u0027s why I suggested a meeting where we can directly talk to each other, so we can directly reply to questions instead of waiting several hours between replies. In my experience this helps a lot. I\u0027d really prefer a direct chat over a written down specification at this time.\u003C/p\u003E\u003Cp\u003EWriting specifications, examples and stuff just takes up too much time, which I currently do not have. However, if you want me to, I could fiddle together a quick\u0026amp;dirty prototype repo and application demonstrating such an approach. This will take some time though, and would be Linux-only as I do not have access to a Windows machine over the next weeks.\u003C/p\u003E\u003Cp\u003EAs for the optional features: It\u0027s important to keep them in mind early, and include them in the initial planning. Else we end up in a state where we cannot easily implement feature X later on, because we did do something in a specific way which does not allow X to be added without also introducing major changes/breaks to feature Y. I already talked about this.\u003C/p\u003E\u003Cp\u003EOnce we agreed to some point, we need to isolate critical features from optional ones. Optional features get put on backlog with low priority and will be implemented at some later point. It\u0027s just important to keep those in mind \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003ESo far nothing of what I lately talked about is very complicated to implement. The only complicated stuff are the developer tools, which obviously are not \u0022critical\u0022 to the basic function of such an management application (IMHO), but still important to push this project forward. Because we simply cannot maintain all mods ourselves. Number of mods will grow, and maintenance costs will increase.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EIt depends how you handle it. Packages managers usually keep track of a list of files that are installed by each package, while you\u0027re proposing to check if a file still belongs to a package, or if it has been overwritten since then (as I understand it, am I right?). I think a saner conflict management would use the former method.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot really. The file/checksum list in my example file is such an index keeping track of package contents. It keeps track of which file belongs to the package.\u003C/p\u003E\u003Cp\u003EProblem is, that users also can (and most likely will) also edit files locally. DeadlyReentry in combination with FAR is such an example, where people most likely will tune DE\u0027s settings to better fit the new aerodynamics introduced by FAR. Now lets say DE gets updated. This would cause the user-made changes to be overridden without notice, because we cannot detect these user-made changes easily (unless we extract the original archive and match files against each other, which takes a lot more time).\u003C/p\u003E\u003Cp\u003EThis is only meant to identify local changes not made through the client-application.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003EThis part has been overlooked. Is this really not an option? Has it ever been tried previously?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere already is some kind of standard recommended by Squad, which is being ignored by developers. I mentioned it in my initial post.\u003C/p\u003E\u003Cp\u003EAs long as Squad does not enforce anything, developers will keep ignoring it, simply because they can.\u003C/p\u003E\u003Cp\u003EBut as I already said, when keeping track of which files belong to a specific package, we can simply ignore the fact that there is no common standard. For the client-application it simply does not matter where files are located at, as long as there are no conflicts between mods. I\u0027d just install the mods as-is (as you would do when installing manually) for now.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022spyhawk\u0022 data-cite=\u0022spyhawk\u0022\u003E\u003Cdiv\u003E. We could then talk about it over IRC.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat\u0027s your name on IRC? The same as on the forums here? And when would be a good time to catch you there?\u003C/p\u003E\u003Cp\u003EPS: I\u0027m not used to do planning over forums. I\u0027m more the brainstorming guy, sitting together with a bunch of developers talking about everything. So bear with me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T15:29:03Z\u0022 title=\u002208/27/2014 03:29  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"micha","CreatedById":113840,"CreatedDateTime":"2014-08-27T16:51:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EAnd? We\u0027d still could fall back to only hosting the meta-data for such mods. If their mirror goes down, that\u0027s their problem then. We do not necessarily need to modify the release archive in any way. That\u0027s completely optional... Modifying the release archive actually is only of concern to us when integrating community fixes, like they were created for KSP 0.23.x B9 for example.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd even this is easily solved using a package manager.\u003C/p\u003E\u003Cp\u003EYou have the master-(meta)-package B9_vX.Y.Z, which points to the download link to latest officially released B9 package. (I\u0027m guessing it has a restrictive license, I haven\u0027t used B9 myself).\u003C/p\u003E\u003Cp\u003EYou then have the community-fix package B9_vX.Y.Z-CommunityFix_v1 which -depends- on the original, unchanged B9_vX.Y.Z package and includes the community fixes.\u003C/p\u003E\u003Cp\u003EThe client would see the \u0022new\u0022 version of B9, install the original B9 (if not already installed), and then install the fixes over the top. Bingo.\u003C/p\u003E\u003Cp\u003ELater on when the mod-author releases an updated B9 (eg, vX.Y\u002B1.0), the master meta-package for that is created, and the client uses that to upgrade B9.\u003C/p\u003E\u003Cp\u003EPS. I don\u0027t have a huge amount of time IRL, but I\u0027m happy to help out where possible. I\u0027m a long-time Debian user, so I\u0027m fully on-board using some sort of mod-repository. Even with 20-odd mods it\u0027s already a RPITA to manage.\u003C/p\u003E\u003Cp\u003EKeks, I think I\u0027ve followed your overall architecture. I\u0027m not very conversant with git (only used the basics) but I am a programmer so happy to help with coding. Don\u0027t know C#, but I\u0027ve got a few years C (/C\u002B\u002B) under my belt so don\u0027t see that being an issue. Also fully agree to use C# to reduce client-side dependencies; although it may be useful to prototype clients in a scripting language first (it\u0027s what I did for some Apps for Maemo before recoding them in C\u002B\u002B) once we have a rough design sketched out.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-27T17:06:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EAnd even this is easily solved using a package manager. [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would make the \u0022fix-package\u0022 obsolete when the base package gets updated. The fix would have to be uninstalled manually or marked as conflicting so it automatically gets removed. I personally prefer not to create temporary packages as this increases maintenance. But that\u0027s something that needs further evaluation and we can decide later on.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EPS. I don\u0027t have a huge amount of time IRL, but I\u0027m happy to help out where possible. I\u0027m a long-time Debian user, so I\u0027m fully on-board using some sort of mod-repository. Even with 20-odd mods it\u0027s already a RPITA to manage.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAny help is greatly appreciated :-)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EKeks, I think I\u0027ve followed your overall architecture. I\u0027m not very conversant with git (only used the basics) but I am a programmer so happy to help with coding. Don\u0027t know C#, but I\u0027ve got a few years C (/C\u002B\u002B) under my belt so don\u0027t see that being an issue. Also fully agree to use C# to reduce client-side dependencies; although it may be useful to prototype clients in a scripting language first (it\u0027s what I did for some Apps for Maemo before recoding them in C\u002B\u002B) once we have a rough design sketched out.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI fully agree. Once we got all important questions answered, the next step is implementing a basic prototype. Git and Mono/C# are not that difficult to learn and understand. I\u0027d happily give you guys a crash-course in git if you want me to. I myself am new to Mono/C# as well, but as I\u0027ve worked with Java for quite some time now and C# is quite similar, that\u0027s no problem :-)\u003C/p\u003E\u003Cp\u003EFor the prototype application I\u0027d like to suggest Python, here as it is (mostly) platform independent and it\u0027s very easy to learn, yet powerful enough. But I\u0027m fully open to any suggestions here \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-27T20:05:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EBy only providing a download link to the original source and hosting some meta-data, we do no violate copyright in any way. That I already explained several times in earlier posts.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd what about the installation of such a mod? It may have a completely different folder structure than our standard.\u003C/p\u003E\u003Cp\u003EIRC? It\u0027s a good idea.\u003C/p\u003E\u003Cp\u003EI usually have time between 8 am - 12 pm and 8 pm - 00:00:00 am GMT\u003C/p\u003E\u003Cp\u003E(I hope I calculated it correctly)\u003C/p\u003E\u003Cp\u003EHow about you?\u003C/p\u003E\u003Cp\u003EEdit: Forum is trolling me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Hello Micha Welcome aboard!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAnd even this is easily solved using a package manager. [...]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPrecisely what solution I like. Nobody moves original files.\u003C/p\u003E\u003Cp\u003EEdit2: \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EFor the prototype application I\u0027d like to suggest Python, here as it is (mostly) platform independent and it\u0027s very easy to learn, yet powerful enough. But I\u0027m fully open to any suggestions here \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt would be great to write the entire program in Python... but Python apps deployment is a nightmare :C But to write the prototype is a good language.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T20:18:22Z\u0022 title=\u002208/27/2014 08:18  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"micha","CreatedById":113840,"CreatedDateTime":"2014-08-27T20:45:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EThat would make the \u0022fix-package\u0022 obsolete when the base package gets updated. The fix would have to be uninstalled manually or marked as conflicting so it automatically gets removed. I personally prefer not to create temporary packages as this increases maintenance. But that\u0027s something that needs further evaluation and we can decide later on.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy would the \u0022fix package\u0022 need to be handled specially? When the updated upstream package is made available in the repository, the package manager client detects it as an update and performs the upgrade. While the detailed technicalities need to be worked out, at a high level the installer just uninstalls the existing package, then installs the new one.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EFor the prototype application I\u0027d like to suggest Python, here as it is (mostly) platform independent and it\u0027s very easy to learn, yet powerful enough. But I\u0027m fully open to any suggestions here \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo quarrels from me. Have used Python a little bit in the past.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EPrecisely what solution I like. Nobody moves original files. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI never said the packaging client couldn\u0027t move files \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EAs I understood it I think Keks\u0027s proposal included making mods conform to a standardised layout, as long as the mod allows (ie, no hard-coded paths). \u003C/p\u003E\u003Cp\u003EAs far as I understood the proposed packaging system, it would primarily consist of:\u003C/p\u003E\u003Cp\u003E1. metadata for each mod\u003C/p\u003E\u003Cp\u003E2. a client\u003C/p\u003E\u003Cp\u003E3. a set of developer/maintainer tools\u003C/p\u003E\u003Cp\u003EMetadata would include the obvious (name, version, license, URLs, etc) but also simple rules (eg, which files to copy from the upstream\u0027s zip file into the KSP \u0022GameData\u0022 directory).\u003C/p\u003E\u003Cp\u003EOptionally the maintainer of a mod might repackage a mod and mirror it in the repository if the license of the mod allows for it.\u003C/p\u003E\u003Cp\u003ENB. The maintainer would, ideally, be the mod developer, but doesn\u0027t have to be, and is unlikely to be at first until the system is proven.\u003C/p\u003E\u003Cp\u003EWhich IRC channel/server?\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-27T21:01:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EI never said the packaging client couldn\u0027t move files\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI mean we do not modify any original mods. Example:\u003C/p\u003E\u003Cp\u003E B9 R4.0c for 0.22 \u0026gt; Works out of the box\u003C/p\u003E\u003Cp\u003E B9 4.1 (our unofficial) for 0.24.2 \u0026gt; Depends on: B9 Aerospace Pack Fixes Pack (community) which depend on original B9 0.22 R4.0c\u003C/p\u003E\u003Cp\u003EThen Bac9, Taverius and K3|Chris are releasing B9 5.0\u003C/p\u003E\u003Cp\u003EB9 5.0 for 0.24.2 dependent on: etc...\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-27T21:39:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EWhy would the \u0022fix package\u0022 need to be handled specially? When the updated upstream package is made available in the repository, the package manager client detects it as an update and performs the upgrade. While the detailed technicalities need to be worked out, at a high level the installer just uninstalls the existing package, then installs the new one.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI mean we do not modify any original mods. Example:\u003Cp\u003EB9 R4.0c for 0.22 \u0026gt; Works out of the box\u003C/p\u003E\u003Cp\u003EB9 4.1 (our unofficial) for 0.24.2 \u0026gt; Depends on: B9 Aerospace Pack Fixes Pack (community) which depend on original B9 0.22 R4.0c\u003C/p\u003E\u003Cp\u003EThen Bac9, Taverius and K3|Chris are releasing B9 5.0\u003C/p\u003E\u003Cp\u003EB9 5.0 for 0.24.2 dependent on: etc...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would increase complexity in the installation process. For example when you downgrade packages or when we simply have multiple fixed versions released (maybe the first fix did not work correctly). Also these temporary packages would have to remain available over time, bloating up the repo. However, instead of patching the release, we could integrate some kind of patch-mechanism to the installer:\u003C/p\u003E\u003Cp\u003EThe meta-file would then point to a patch-set in addition to the original content. This way we would not have to create \u0022temporary\u0022 packages, could simply bump up the version number of the original package and still would not have to mess around with original source release files. We\u0027d also not have compatibility issues as this would actually be treated as a normal release.\u003C/p\u003E\u003Cp\u003EOur release \u003Cem\u003EB9 R4.0c\u002Bksprepo-1\u003C/em\u003E would then actually point to the download of \u003Cem\u003EB9 R4.0c\u003C/em\u003E, but additionally point to a set of community patches which would be applied after the original release file.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003ENo quarrels from me. Have used Python a little bit in the past.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo I guess we agreed on Python here. (for the prototype only)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EAs I understood it I think Keks\u0027s proposal included making mods conform to a standardised layout, as long as the mod allows (ie, no hard-coded paths). \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, that was my initial thought. But we actually do not \u003Cstrong\u003Ehave\u003C/strong\u003E to standardize directory layout. From perspective of our application it simply does not matter if the mods are structured, or simply put all together in a single folder, because we have the meta-data describing each package and its contents. I\u0027d make this point optional, as it might cause confusion/problems on client-side when the files are re-arranged.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EAs far as I understood the proposed packaging system, it would primarily consist of:\u003Cp\u003E1. metadata for each mod\u003C/p\u003E\u003Cp\u003E2. a client\u003C/p\u003E\u003Cp\u003E3. a set of developer/maintainer tools\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECorrect.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EMetadata would include the obvious (name, version, license, URLs, etc) but also simple rules (eg, which files to copy from the upstream\u0027s zip file into the KSP \u0022GameData\u0022 directory).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s correct. By enlisting package contents we can also easily ignore files that are part of the original release archive, but are of no meaning to us. Documentation or source files for example do not need to be moved to the GameData directory, but may be part of the release archive.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EOptionally the maintainer of a mod might repackage a mod and mirror it in the repository if the license of the mod allows for it.\u003Cp\u003ENB. The maintainer would, ideally, be the mod developer, but doesn\u0027t have to be, and is unlikely to be at first until the system is proven.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECorrect. Ideally, the maintainer would be the developer himself, but it can basically be done by anyone. As long as the mod license allows redistribution in unmodified form, the maintainer also should attach the unmodified release archive to the GitHub relesae tag, so the repo serves as a mirror.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EWhich IRC channel/server?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d suggest the official KSP channel linked at the top of the page:\u003C/p\u003E\u003Cp\u003Eirc.esper.net #KSPOfficial\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T21:42:33Z\u0022 title=\u002208/27/2014 09:42  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-27T21:47:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EMy initial post is not up-to-date anymore. It contains an initial idea, which developed over time. I know some things got lost over time, that\u0027s why I suggested a meeting where we can directly talk to each other, so we can directly reply to questions instead of waiting several hours between replies. In my experience this helps a lot. I\u0027d really prefer a direct chat over a written down specification at this time.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESeriously, man? About 50% of your posts are complaining about \u0022I already said it before\u0022 and \u0022I\u0027ve explained it several times\u0022, yet you\u0027re unable to keep track of all the changes in a clear, simple manner in a post or reference document? No wonder it\u0027s difficult to follow you... \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWriting specifications, examples and stuff just takes up too much time, which I currently do not have.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEnough time to repeat yourself again and again, yet no time to put up a clear example in a concise manner? Seriously? \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAs for the optional features: It\u0027s important to keep them in mind early, and include them in the initial planning. Else we end up in a state where we cannot easily implement feature X later on, because we did do something in a specific way which does not allow X to be added without also introducing major changes/breaks to feature Y. I already talked about this.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, I know this. The single reason I\u0027m asking you to talk about the critical features only is that your brain goes in every direction at the same time, and you seem unable to prioritize.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOnce we agreed to some point, we need to isolate critical features from optional ones. Optional features get put on backlog with low priority and will be implemented at some later point. It\u0027s just important to keep those in mind \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd I\u0027m very functioning in the opposite way, because there\u0027s no way everybody could agree at some point if you start to consider everything at once!\u003C/p\u003E\u003Cp\u003EBetter ask yourself what are the core features, document them in a simple and clear manner, and then talk about optional features and consider how they affect the already core features we\u0027d agreed on.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWhat\u0027s your name on IRC? The same as on the forums here? And when would be a good time to catch you there?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI really believe there\u0027s no point in having an IRC meeting right now, because having a meeting to talk about everything is pointless. It\u0027s the very same as talking about nothing.\u003C/p\u003E\u003Cp\u003EPlease have an RFC first, that we can review before talking about it.\u003C/p\u003E\u003Cp\u003EOn a side note, I believe IRC meeting are probably the less efficient method to achieve something, unless you have a clear agenda pre-defined.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EPS: I\u0027m not used to do planning over forums. I\u0027m more the brainstorming guy, sitting together with a bunch of developers talking about everything. So bear with me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, can confirm. You\u0027re pretty bad at planning in written form \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E To be honest, I\u0027m not sure I could bear with such personality on the long term - clashes will ensue for sure. Might be better for me to step down at this stage.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-27T22:14:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003ESeriously, man? About 50% of your posts are complaining about \u0022I already said it before\u0022 and \u0022I\u0027ve explained it several times\u0022, yet you\u0027re unable to keep track of all the changes in a clear, simple manner in a post or reference document? No wonder it\u0027s difficult to follow you... \u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003EEnough time to repeat yourself again and again, yet no time to put up a clear example in a concise manner? Seriously?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, that\u0027s why this is called a discussion, I guess. I said I\u0027m not here to tell you how to do something, I\u0027m here to talk. My opinion on things changes as we talk, and that\u0027s the reason why I do this. To get feedback from you and hear your proposals.\u003C/p\u003E\u003Cp\u003EI thought people answering here did in fact read the whole discussion, and not just the first and last post.\u003C/p\u003E\u003Cp\u003EI also did not complain at all. If I sounded a bit harsh, that was not my intention. I just mentioned that I already talked about X in detail before.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEDIT:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAlso, I did put up several examples early on. Even a complete example repo including some management scripts. The idea developed over time and so the example became obsolete. I updated a example mod in the repo not too long ago, so it matches the current state of our discussion here. I linked it in a previous post and explained what I did there.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E/EDIT\u003C/strong\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003EYes, I know this. The single reason I\u0027m asking you to talk about the critical features only is that your brain goes in every direction at the same time, and you seem unable to prioritize.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003EYes, can confirm. You\u0027re pretty bad at planning in written form \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E To be honest, I\u0027m not sure I could bear with such personality on the long term - clashes will ensue for sure. Might be better for me to step down at this stage.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not going in every direction at once. I\u0027m taking a look at this as a whole. I take into account as many information as I have available at a given point. I plan for the future, not just for a single aspect at once.\u003C/p\u003E\u003Cp\u003EAnother problem is replying to different (unrelated) people at once. I cannot really direct this conversation into a single direction, because I cannot really influence what someone asks at a given point.\u003C/p\u003E\u003Cp\u003EA forum is not really ideal for this, as we\u0027d need to create several threads for each question / part of the application. A ticket-system would IMHO be much better for this kind of discussion. I also must admit that I made some mistakes early on, that I did not try to steer the discussion into a specific direction. As I said, I\u0027m not used to plan a project via a forum. It\u0027s different \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003EAnd I\u0027m very functioning in the opposite way, because there\u0027s no way everybody could agree at some point if you start to consider everything at once!\u003Cp\u003EBetter ask yourself what are the core features, document them in a simple and clear manner, and then talk about optional features and consider how they affect the already core features we\u0027d agreed on.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe\u0027re actually discussing three things here: The repo, the client-application(s) and the actutal package layout. It see how this can become a bit confusing when context keeps switching.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003ESee answer to reply below.\u003C/em\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003EI really believe there\u0027s no point in having an IRC meeting right now, because having a meeting to talk about everything is pointless. It\u0027s the very same as talking about nothing.\u003Cp\u003EPlease have an RFC first, that we can review before talking about it.\u003C/p\u003E\u003Cp\u003EOn a side note, I believe IRC meeting are probably the less efficient method to achieve something, unless you have a clear agenda pre-defined.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, I did not think that it would be necessary to create a specification / RFC at this point, as nothing is fix yet. I really did not expect this amount of confusion, as the whole discussion can be reviewed at any given time. But I will respect this and consider your request. But I don\u0027t think I will be able to put up anything close to a spec before Sunday.\u003C/p\u003E\u003Cp\u003EI think a meeting would help because we\u0027d be there all at once, taking to each other and we\u0027d be able to steer the discussion into specific directions instead of randomly replying to posts.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T22:20:44Z\u0022 title=\u002208/27/2014 10:20  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-27T22:22:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EThe meta-file would then point to a patch-set in addition to the original content. This way we would not have to create \u0022temporary\u0022 packages, could simply bump up the version number of the original package and still would not have to mess around with original source release files. We\u0027d also not have compatibility issues as this would actually be treated as a normal release.\u003Cp\u003EOur release B9 R4.0c\u002Bksprepo-1 would then actually point to the download of B9 R4.0c, but additionally point to a set of community patches which would be applied after the original release file.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E \u003Cp\u003EFrom that what you write from the client point of view would look the same: Download original release and then download patches/fixes and override the necessary files :| I don\u0027t understand you. I don\u0027t think patch for B9 4.0 that causes mod works on KSP 0.23.5 is a temporary package.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-27T22:48:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI don\u0027t understand you. I don\u0027t think patch for B9 4.0 that causes mod works on KSP 0.23.5 is a temporary package.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs far as I understood you, you proposed to create a community-fix package overriding parts of the \u0022original\u0022 package. So in your example there would actually be two packages then:\u003C/p\u003E\u003Cp\u003EThe original R4.0c package and a R4.0c-community-fix package. Once v5.0 gets released, the R4.0c-community-fix package must be removed to not create conflicts with 5.0.\u003C/p\u003E\u003Cp\u003EThat\u0027s the point I am concerned of. Creating packages which will have to be removed later on, because you\u0027d need to mark them somehow, that they are meant to be removed later on.\u003C/p\u003E\u003Cp\u003EYour workflow would look something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Einstall R4.0c\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Einstall R4.0c-community-fix-1\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eremove R4.0c-community-fix\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eupdate R4.0c to 5.0\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewhere as what I proposed would look like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Einstall R4.0c\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eupdate R4.0c to R4.0c\u002Bcommunity-fix-1\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eupdate R4.0c\u002Bcommunity-fix-1 to 5.0\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Edifference is, that from the package\u0027s point of view, R4.0c\u002Bcommunity-fix-1 is just another regular version released, following the regular update process, instead of an independent package which would have to be release at a later point.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EFrom that what you write from the client point of view would look the same: Download original release and then download patches/fixes and override the necessary files :| \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, it workes (almost) exactly the same way your approach does, but does not create a new package. It instead could be realized by simply adding a patch-set to the release tag in addition to the original release \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}