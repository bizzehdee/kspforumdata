{"TopicId":61975,"ForumId":20,"TopicTitle":"Optimal Ascent Path with FAR / KSP Simulation Software","CreatedByName":"version2_1","CreatedById":102516,"CreatedDateTime":"2014-02-02T21:02:25Z","PageNum":1,"Articles":[{"CreatedByName":"version2_1","CreatedById":102516,"CreatedDateTime":"2014-02-02T21:02:25Z","Content":"\n\u003Cp\u003EI recently installed a lot of mods including FAR and Mechjeb2. Mechjeb offers an ascent autopilot and calculates some statistics while ascending from Kerbin: used delta-v, drag losses, gravity losses and steering losses as far as I know.\u003C/p\u003E\u003Cp\u003EI was wondering how to get an optimal ascent path. Mechjeb seems to have some problems with FAR (drag losses don\u0027t seem to work properly). So I decided to write a program to calculate an optimal ascent path for a given rocket. Since c# is my favorite language I implemented my simulation in c#.net.\u003C/p\u003E\u003Cp\u003EThe software is pretty beta right now, but here are some screen shots:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.directupload.net/file/d/3521/szgc5axa_png.htm\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://s1.directupload.net/images/140202/temp/szgc5axa.png\u0022 alt=\u0022szgc5axa.png\u0022\u003E\u003C/a\u003E \u003Ca href=\u0022http://www.directupload.net/file/d/3521/7y3qpr39_png.htm\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://s1.directupload.net/images/140202/temp/7y3qpr39.png\u0022 alt=\u00227y3qpr39.png\u0022\u003E\u003C/a\u003E \u003Ca href=\u0022http://www.directupload.net/file/d/3521/ryped9k2_png.htm\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://s14.directupload.net/images/140202/temp/ryped9k2.png\u0022 alt=\u0022ryped9k2.png\u0022\u003E\u003C/a\u003E \u003Ca href=\u0022http://www.directupload.net/file/d/3521/uut9lgpn_png.htm\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://s7.directupload.net/images/140202/temp/uut9lgpn.png\u0022 alt=\u0022uut9lgpn.png\u0022\u003E\u003C/a\u003E (yes I\u0027m still using VS 2010)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIf someone is interested I will share the source code (and the binary) so you can have a look at it! \u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI did all the calculation to my best knowledge, but there might be still some bugs, but the required delta-v is relatively close to the values I get in KSP, so the general approach seems correct. Also the parameter study yields useful ascent angles: Using the Kerbal X rocket i get: 20\u00C3\u201A\u00C2\u00B0 launch angle, 70\u00C3\u201A\u00C2\u00B0 at 20km, 90\u00C3\u201A\u00C2\u00B0 at 40km. All the angles are relative to the normal, so on the KSP navball the angle will be 90-x.\u003C/p\u003E\u003Cp\u003EI implemented stages (changing vessel mass), air drag, gravity, and thust (value and angle).\u003C/p\u003E\u003Cp\u003EFinally here are some code samples showing the formulas I used:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Init\u003Cbr\u003EVector2D position = new Vector2D(0, equatorialRadius); // We start \u0022on top of Kerbin\u0022\u003Cbr\u003EVector2D velocity = new Vector2D(equatorialRadius * 2 * Math.PI / rotationPeriod, 0); // We get 174,53 m/s for free from the rotation!\u003Cbr\u003E\u003Cbr\u003E// Simulation step:\u003Cbr\u003Edouble pressure = surfacePressure * Math.Exp(-(position.Length - equatorialRadius) / scaleHeight); //position is a vector, measuring the distance from the center of Kerbin.\u003Cbr\u003EVector2D dragForce = -0.5 * area * coefficientDrag * relativeVelocity.Length^2 * relativeVelocity.Normalized * pressure; //relativeVelocity the relative velocity vector in the air flow\u003Cbr\u003E\u003Cbr\u003EVector2D drag = dragForce / mass;\u003Cbr\u003EVector2D gravitation = position.Normalized * GM / -Square(position.Length);\u003Cbr\u003EVector2D acceleration = thrust \u002B gravitation \u002B drag;\u003Cbr\u003Evelocity = velocity \u002B acceleration * deltaT;\u003Cbr\u003Eposition = position \u002B velocity * deltaT;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESpecial thanks to MisterSpock, he helped me implementing the orbital mechanics (calculate AP, Eccentricity) and did some testing!\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-02-05T01:40:59Z","Content":"\n\u003Cp\u003ELooks promising!\u003C/p\u003E\u003Cp\u003EA question--I take it you\u0027re assuming a zero-lift ascent (since you can assume a Cd). But--even if that\u0027s a safe assumption, about which I\u0027m quite unsure, isn\u0027t there a drag spike in the transonic regime, and a different Cd in the supersonic regime?\u003C/p\u003E\n"},{"CreatedByName":"version2_1","CreatedById":102516,"CreatedDateTime":"2014-02-05T08:30:14Z","Content":"\n\u003Cp\u003EThank you \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s quite possible there is a drag spike in the transonic regime, but I simply don\u0027t have any formula modeling that - I don\u0027t know how FAR calculates stuff really, since i got numbers from the FAR Flight Data Panel that I had problems fitting to my simple drag model: I noticed C_d was changing over time and the referenceArea did dot decrease when I staged radial boosters.\u003C/p\u003E\u003Cp\u003EI simply used the first formula I could find on wikipedia for the drag, since i studied electrical engineering and have very limited knowledge about aerodynamics \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E So any help in that direction would be appreciated!\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-02-07T14:47:04Z","Content":"\n\u003Cp\u003EYour best bet would be posting on the FAR thread and asking Ferram, I\u0027d say?\u003C/p\u003E\u003Cp\u003EReference area is either the surface area of the body if no wings, or the wing area if wings are anywhere present. Since I presume you had fins on the core, ref area wouldn\u0027t change on booster separation, but Cd would.\u003C/p\u003E\n"}]}