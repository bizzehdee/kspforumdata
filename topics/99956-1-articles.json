{"TopicId":99956,"ForumId":36,"TopicTitle":"[WIP] TweakScale - Development Thread","CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T21:25:02Z","PageNum":1,"Articles":[{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T21:25:02Z","Content":"\n\u003Cp\u003E\nSee also the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/112693\u0022 rel=\u0022\u0022\u003E\u003Cstrong\u003Erelease thread!\u003C/strong\u003E\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nTweakScale was originally developed by Goodspeed and Biotronic. \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/80234-0-90-TweakScale-Rescale-Everything!-%28v1-50-2014-12-24-10-40-UTC%29\u0022 rel=\u0022\u0022\u003E[original release thread]\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis work started as a fork to make a feature I wanted for a long time, comfortable free scaling for everything. Since Biotronic has no more time to support the mod, this has also grown into a maintainence thread for TweakScale.\n\u003C/p\u003E\n\u003Cp\u003E\nSource: \u003Ca href=\u0022https://github.com/pellinor0/TweakScale\u0022 rel=\u0022external nofollow\u0022\u003EGithub\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nLicense: \u003Ca href=\u0022http://www.wtfpl.net/\u0022 rel=\u0022external nofollow\u0022\u003EWTFPL\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EDownload\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pellinor0/TweakScale/archive/dev.zip\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003ELatest dev version\u003C/strong\u003E\u003C/a\u003E (\u003Cspan style=\u0022color:#b22222;\u0022\u003EWIP\u003C/span\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://spacedock.info/mod/127/TweakScale\u0022 rel=\u0022external nofollow\u0022\u003EStable Version\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:12px;\u0022\u003EToDo / Ideas\u003C/span\u003E\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nsee the \u003Ca href=\u0022https://github.com/pellinor0/TweakScale/issues\u0022 rel=\u0022external nofollow\u0022\u003Eissues on GitHub\u003C/a\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nSort out interference with tweakable everything\n\u003C/li\u003E\n\u003Cli\u003E\nSupport for D12Aerospace\n\u003C/li\u003E\n\u003Cli\u003E\nsubassembly-scaling, a config file for setting of hotkeys\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-09T21:36:38Z\u0022 title=\u002205/09/2016 09:36  PM\u0022 data-short=\u00228 yr\u0022\u003EMay 9, 2016\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Drakoflame","CreatedById":125253,"CreatedDateTime":"2015-02-17T21:32:14Z","Content":"\n\u003Cp\u003EI saw this and squee\u0027d. BUT! Before I download, does it have the same mod support/support the same mods that the original TweakScale did?\u003C/p\u003E\n"},{"CreatedByName":"Space Scumbag","CreatedById":70411,"CreatedDateTime":"2015-02-17T22:01:35Z","Content":"\n\u003Cp\u003EGreat news. And thank you for supporting this mod. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T22:05:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Drakoflame\u0022 data-cite=\u0022Drakoflame\u0022\u003E\u003Cdiv\u003EI saw this and squee\u0027d. BUT! Before I download, does it have the same mod support/support the same mods that the original TweakScale did?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, I did not change any of the included configs for other mods.\u003C/p\u003E\n"},{"CreatedByName":"Drakoflame","CreatedById":125253,"CreatedDateTime":"2015-02-17T22:09:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003EYes, I did not change any of the included configs for other mods.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOkay, now what about mods that have the tags that give it TS support? do they still work? the #1 TweakScale compatable mod that I freeking LLLOOOOOVVVEEEE is DMagics Orbital Science mod\u003C/p\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2015-02-17T22:24:49Z","Content":"\n\u003Cp\u003EIf you\u0027re interested in stuff to put on \u0022the list\u0022 for TweakScale\u0027s future... I have two things I can think of off the top of my head:\u003C/p\u003E\u003Cp\u003E1) Infernal Robotics *full* support. Yes, it sort of works right now - but very weird things happen when you scale IR parts up. Scaling them down (like their default configs allow) works, but even if you write a \u003Cem\u003Ecorrect\u003C/em\u003Econfig for scaling them up, weird things happen after 1.5x or 2x size.\u003C/p\u003E\u003Cp\u003E2) Updates to scale exponents for the new way Regolith does resource harvesters and converters - fully compatible scaling for drills and distillers and whatnot. For drills, the amount of resources extracted currently can be made to scale easily, but don\u0027t know about the other stuff (like electricity consumption - the recipe inputs). For converters, I just couldn\u0027t figure out how to correctly write a scale exponent thingamajig because of the \u003Cem\u003Elists \u003C/em\u003Eof values Regolith uses in its configs.\u003C/p\u003E\u003Cp\u003EThanks for working on this! It would have been immensely sad to see TweakScale founder and die.\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-02-17T22:27:03Z","Content":"\n\u003Cp\u003EWhat I\u0027m gathering from this posting is that this new maintainer/developer did not change anything that would break support from other mods. This should, in effect, make all other questions regarding \u0022does this work for this mod or that mod\u0022 completely pointless. I\u0027m sure the \u003Cem\u003Elast thing \u003C/em\u003Ethis developer wants is to completely screw over everyone who makes use of this mod in their own mods.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T22:30:53Z","Content":"\n\u003Cp\u003EI\u0027d like to discuss how auto scaling works, or is supposed to behave in the future, with respect to parts from different scaletypes. Here is my view on the subject (might be limited because I don\u0027t really use the function yet). \u003C/p\u003E\u003Cp\u003EAuto-scaling for stack parts seems clear and well-defined to me: stack parts those have an interface with a diameter and a corresponding stack node. If I auto-scale a new part such that its node matches a target node, I will always get a smooth stack. \u003C/p\u003E\u003Cp\u003EFor other parts however, the node sizes are quite arbitrary. So I\u0027m not sure if the above rule is any help. For example, the TrussGirderXL has 1.25m-nodes. So if I attach it to the top of a MK1 pod, it is auto-scaled to 50%. Does not make much sense to me. If both parts are identical, it makes sense again to autoscale them to the same size. \u003C/p\u003E\u003Cp\u003EMaybe the solution here is to make the autoscaling ability a property of a scaletype, and only work within that scaletype. Then we can set it true for \u0027stack\u0027, false for \u0027free\u0027. And if someone has a set of parts that should be compatible with each other (like the IR hinges), he can define a custom scaletype with autoscale=true. Then IR hinges would autoscale with other IR-compatible parts but not jump to strange scales when connected to a stock stack part. \u003C/p\u003E\u003Cp\u003EAt the moment autoscale only works via stack nodes, not for radially attached parts. I don\u0027t see wyh (or how) this should change.\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-02-17T22:37:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AccidentalDisassembly\u0022 data-cite=\u0022AccidentalDisassembly\u0022\u003E\u003Cdiv\u003EIf you\u0027re interested in stuff to put on \u0022the list\u0022 for TweakScale\u0027s future... I have two things I can think of off the top of my head:\u003Cp\u003E1) Infernal Robotics *full* support. Yes, it sort of works right now - but very weird things happen when you scale IR parts up. Scaling them down (like their default configs allow) works, but even if you write a \u003Cem\u003Ecorrect\u003C/em\u003E config for scaling them up, weird things happen after 1.5x or 2x size.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd this all really comes down to the limitations of the IR parts as well as the engine\u0027s limits. I have, however, scaled them up to those sizes with no negative effects being noticed because I exported all of their specific scaling settings from the part configs to separate scaletypes. This allowed me to properly set up the exponential variables so that they functioned properly without having to sift through each and every part specifically.\u003C/p\u003E\u003Cp\u003EBut... that\u0027s a lot of work for the casual user and not something everyone is capable of. I think, however, that issue would be one to take up with the developer of IR. Tweakscale is scaling the values it\u0027s being told to in the correct way, it\u0027s the IR code that isn\u0027t handling the range of numbers in a very efficient or correct way (theoretically, I haven\u0027t code dived into IR in a long time.)\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003EMaybe the solution here is to make the autoscaling ability a property of a scaletype, and only work within that scaletype. Then we can set it true for \u0027stack\u0027, false for \u0027free\u0027. And if someone has a set of parts that should be compatible with each other (like the IR hinges), he can define a custom scaletype with autoscale=true. Then IR hinges would autoscale with other IR-compatible parts but not jump to strange scales when connected to a stock stack part.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI like this. I mean, I \u003Cem\u003Ereally freakishly\u003C/em\u003E like this.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T22:43:37Z","Content":"\n\u003Cp\u003ENow the same for chain scaling. Reading the code, chain scaling propagates an autoscale-command from a part to its children. Probably whenever the parent part is rescaled, but I am not sompletely sure. This also means that chain scaling is only applicable along a chain of auto-scalable parts. \u003C/p\u003E\u003Cp\u003ESo if I chain scale a stack of random parts, I will end up with a smooth rocket. Is this the intended use case?\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2015-02-17T23:03:39Z","Content":"\n\u003Cp\u003ETo be perfectly honest, unless auto- and chain-scaling worked \u003Cem\u003Eperfectly\u003C/em\u003E and \u003Cem\u003Eall\u003C/em\u003E the time, it\u0027d quickly become more annoying than useful. Count how many people asked how to turn it off vs how many people liked it in the other thread. That\u0027s simply because it didn\u0027t work the way people expected it to (for example, attaching the Mk16 chute on top of the Mk1 pod made it default to 1.25m). By all means include it and work on it, it\u0027s a great idea, but make it default to off with an option to hold Shift while attaching to toggle it on or something. Disclaimer: For me personally, auto- and chain-scaling were one of the least desired features of TweakScale. If I wanted a part to be a different size than normal, I\u0027d make it so. I don\u0027t want the mod to keep making that decision for me until I tell it not to.\u003C/p\u003E\u003Cp\u003EThat said, I do like it being a property of a scaletype. Would stop a lot of weirdness, for sure.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T23:12:46Z","Content":"\n\u003Cp\u003EI agree to turn them off by default, mainly because the default behavior should not be surprising. And users of advanced features usually know what they do, they can just turn it on with a hotkey, or change the config.\u003C/p\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2015-02-17T23:19:25Z","Content":"\n\u003Cp\u003ETo be honest, if it were me working on this (and thank goodness it\u0027s not, because I can\u0027t code), I would completely abandon the very idea ofautoscaling. Needless complexity, and it takes time you could dedicate to other things. There are so very few use cases for it - and in every single one of those cases, the drawback is just having to click on a part you just attached and scale it to whatever value it\u0027s supposed to be. Then, you can just duplicate that part if you need a bunch of them. It is a clever idea \u003Cem\u003Efor the sake of a clever idea \u003C/em\u003Eand not one that is really necessary or useful for the function of the mod in *almost all* cases.\u003C/p\u003E\u003Cp\u003EStack nodes are a terrible way of determining the size to which a part should autoscale, too - they do not necessarily correspond to the part\u0027s size, and especially not the size \u003Cem\u003Eat the location of the particular stack node in question\u003C/em\u003E. That further reduces the number of cases in which autoscaling scaling actually make sense.\u003C/p\u003E\u003Cp\u003EReally, you would need to add a value to every single part in the game such as \u0022actualsizeofthispartatnode_1 = 1.28985m\u0022 to implement autoscaling in a meaningful way.\u003C/p\u003E\u003Cp\u003EMy two cents, others may disagree.\u003C/p\u003E\u003Cp\u003EUPDATED the post because I included chainscaling without thinking about it. Really, I mean autoscaling.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-17T23:36:34Z\u0022 title=\u002202/17/2015 11:36  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 17, 2015\u003C/time\u003E by AccidentalDisassembly\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Space Scumbag","CreatedById":70411,"CreatedDateTime":"2015-02-17T23:23:44Z","Content":"\n\u003Cp\u003EIt looks like chain scaling was changed after the 1.47 update. In .47 all children parts were rescaled, and it wasn\u0027t dependent if the parts were stacked or radially attached. It was possible to\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/TrAsyvtctWQ?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E, just by rescaling the parent part. You probably have to look at the older code or ask Biotronic.\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T23:39:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AccidentalDisassembly\u0022 data-cite=\u0022AccidentalDisassembly\u0022\u003E\u003Cdiv\u003EStack nodes are a terrible way of determining the size to which a part should autoscale, too - they do not necessarily correspond to the part\u0027s size, and especially not the size \u003Cem\u003Eat the location of the particular stack node in question\u003C/em\u003E. That further reduces the number of cases in which autoscaling/chain scaling actually make sense.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually the latest version works perfectly for stack parts. Even adapters with multiple node sizes. Only prerequisite is that in the original part every node corresponds to a circular area of the corresponding diameter. If a part does not satisfy this condition, it should not have the stack scaletype. \u003C/p\u003E\u003Cp\u003EI\u0027m also not the biggest fan of those functions, it just would be bad to throw them away even before understanding how they are supposed to behave and what people use them for. A restriction to stack-like scaletypes actually looks like a simple solution to only use them in cases where they already work well.\u003C/p\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2015-02-17T23:47:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003EActually the latest version works perfectly for stack parts. Even adapters with multiple node sizes. Only prerequisite is that in the original part every node corresponds to a circular area of the corresponding diameter. If a part does not satisfy this condition, it should not have the stack scaletype. \u003Cp\u003EI\u0027m also not the biggest fan of those functions, it just would be bad to throw them away even before understanding how they are supposed to behave and what people use them for. A restriction to stack-like scaletypes actually looks like a simple solution to only use them in cases where they already work well.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBut this all assumes that every maker of parts will use size 1 nodes specifically for 1.25m parts, size 2 for 2.5m parts, etc. etc.\u003C/p\u003E\u003Cp\u003EWhat about intermediate sizes? I don\u0027t recall intermediate node sizes even existing (is there even such thing as a size 1.58 node?), so what happens with something like a 1.5m or 1.875m part? Granted, there are fewer of those.\u003C/p\u003E\u003Cp\u003EWhat if I just want a strong connection on a 0.625m part and give it a size 4 node? Etc. etc.\u003C/p\u003E\u003Cp\u003EI dunno. Maybe it\u0027s not a lot of work - and obviously you can do whatever you want, I\u0027m not the one putting time into this!\u003C/p\u003E\u003Cp\u003EI do think the chain scaling has more possible uses, though, since you could just totally resize an entire craft with it (in theory), or an entire subassembly, or something like that.\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2015-02-17T23:51:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AccidentalDisassembly\u0022 data-cite=\u0022AccidentalDisassembly\u0022\u003E\u003Cdiv\u003EBut this all assumes that every maker of parts will use size 1 nodes specifically for 1.25m parts, size 2 for 2.5m parts, etc. etc.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould just like to point out that even stock has errors - the large reaction wheel uses too small attach nodes, and the structural panels are incorrect as well. The reason I know this? FAR changes them to be correct in order to calculate drag right. So yeah, you\u0027d have to work around (or with) that too..\u003C/p\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2015-02-18T00:44:08Z","Content":"\n\u003Cp\u003EAnother thing possibly to look at - don\u0027t know if it\u0027s TweakScale\u0027s doing or TweakableEverything, but funny things happen to things like decouplers\u0027 ejection force when things are scaled and you\u0027re using TE.\u003C/p\u003E\n"},{"CreatedByName":"Biotronic","CreatedById":72381,"CreatedDateTime":"2015-02-18T09:06:43Z","Content":"\n\u003Cp\u003EThe way Autoscaling was supposed to work was each part/scaletype has a list of nodes and their expected sizes. So a Mk1-2 Command Pod (scaletype: \u003Cstrong\u003Eadapter_2_1\u003C/strong\u003E) has a node called \u003Cstrong\u003Etop\u003C/strong\u003E, with a size of 1/2, and a node called \u003Cstrong\u003Ebottom\u003C/strong\u003E with a size of 2/2. So if this part is scaled to \u003Cstrong\u003E2.5m to 1.25m\u003C/strong\u003E, the part scale is 2.5, the \u003Cstrong\u003Etop\u003C/strong\u003E node is 2.5*1/2 = 1.25, and the \u003Cstrong\u003Ebottom\u003C/strong\u003E node is 2.5*2/2 = 2.5. The node sizes (as specified in parts) does not factor in at all.\u003C/p\u003E\u003Cp\u003EThis is specified in the \u003Cstrong\u003EDefaultScales.cfg\u003C/strong\u003E file:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ESCALETYPE\u003Cbr\u003E{\u003Cbr\u003E\tname = adapter_2_1\u003Cbr\u003E\tfreeScale = false\u003Cbr\u003E\tscaleFactors = 1.25,            2.5,           5.0,        7.5\u003Cbr\u003E\tscaleNames =   1.25m to 62.5cm, 2.5m to 1.25m, 5m to 2.5m, 7.5m to 3.75m\u003Cbr\u003E\tdefaultScale = 1.25\u003Cbr\u003E\tATTACHNODES\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase = 2\u003Cbr\u003E\t\ttop = Stack:1\u003Cbr\u003E\t\tbottom = Stack:2\u003Cbr\u003E\t\tbottom01 = Stack:2\u003Cbr\u003E\t\tbottom02 = Stack:2\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u0022But why use the top-divided-by-base system, why not simply use top=0.5?!?\u0022 you might ask. It\u0027s a very reasonable question. The problem with that idea appears when when you have a 3:1 adapter. Should I then use top=0.33? top=0.333333333? Top=0.3, and then a fuzziness factor?\u003C/p\u003E\n"},{"CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2015-02-18T09:31:42Z","Content":"\n\u003Cp\u003EI stumbled upon a gamebreaking bug which involves 3 mods: KAS, Regolith and TweakScale.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/s/wkw1x38c4zcdqgt/output_log14.rar?dl=0\u0022 rel=\u0022external nofollow\u0022\u003EOutput_log.txt\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EWhen I take a scaleable part from a container TweakScale starts a log spam. The error is not present if I remove Regolith.dll from the install. Occurs in both this dev and 1.50 versions of Tweakscale.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/PWN_BI9m498?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EIf I let the error spam to dwell long enough the game crashes.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-18T11:52:41Z","Content":"\n\u003Cp\u003EI was not happy with those node lists because they make assumptions about node names in arbitrary part files, and in most cases just bring in redundant information. Like the stock 4-way adapter did not autoscale properly because the scaletype was only designed for two bottom nodes. So I\u0027ll consult the prefab part as a default, and maybe bring the lists back as a way to address special cases. \u003C/p\u003E\u003Cp\u003EThere will probably be an extra scaletype for non-stack parts which like to be measured in m instead of %. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AccidentalDisassembly\u0022 data-cite=\u0022AccidentalDisassembly\u0022\u003E\u003Cdiv\u003EWhat about intermediate sizes? I don\u0027t recall intermediate node sizes even existing (is there even such thing as a size 1.58 node?), so what happens with something like a 1.5m or 1.875m part? Granted, there are fewer of those.\u003Cp\u003EI do think the chain scaling has more possible uses, though, since you could just totally resize an entire craft with it (in theory), or an entire subassembly, or something like that.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood point about intermediate sizes. In the current system an 1.5m mod would need its own scaletype, and you would scale connections between 1.5m and stock parts manually. \u003C/p\u003E\u003Cp\u003EFor chain scaling I tend to keep the \u0027propagate autoscaling across compatible nodes\u0027 approach for now, until freescaling has some stability. Then I\u0027ll test a \u0027propagate change of scale across the whole subassembly approach\u0027.\u003C/p\u003E\n"},{"CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2015-02-18T12:10:07Z","Content":"\n\u003Cp\u003EAny assumptions about the bug I had? Roverdude says \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/79588-0-90-USI-Kolonization-Systems-%28MKS-OKS%29-%280-22-4%29-2015-01-27?p=1741945\u0026amp;viewfull=1#post1741945\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E its all a TweakScale fault.\u003C/p\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-02-18T12:31:30Z","Content":"\n\u003Cp\u003EQuestion, how to setup a part for freescaling?\u003C/p\u003E\u003Cp\u003Especificly, could you give an example how to configure a part for free-scaling\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-18T12:34:33Z\u0022 title=\u002202/18/2015 12:34  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 18, 2015\u003C/time\u003E by FreeThinker\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2015-02-18T13:57:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022FreeThinker\u0022 data-cite=\u0022FreeThinker\u0022\u003E\u003Cdiv\u003EQuestion, how to setup a part for freescaling?\u003Cp\u003Especificly, could you give an example how to configure a part for free-scaling\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EJust open .cfg files that go with the mod and see the examples.\u003C/p\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-02-18T14:11:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Enceos\u0022 data-cite=\u0022Enceos\u0022\u003E\u003Cdiv\u003EJust open .cfg files that go with the mod and see the examples.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t see any difference from what it was.\u003C/p\u003E\n"}]}