{"TopicId":78876,"ForumId":15,"TopicTitle":"Multiple Parts vs A Few Parts as Possible.","CreatedByName":"noonespecial","CreatedById":81942,"CreatedDateTime":"2014-07-21T19:37:04Z","PageNum":1,"Articles":[{"CreatedByName":"noonespecial","CreatedById":81942,"CreatedDateTime":"2014-07-21T19:37:04Z","Content":"\n\u003Cp\u003EFor ease of creation, I make my models with as many separate parts as possible. I\u0027m sure this is common practice. For example, the service module I\u0027m working on has 12 different meshes. Here is an example of but a few\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/lM9bc\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003EMy question is: Should I leave them as separate or should I join them before exporting to Unity? Or... does it not make a difference at all?\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-07-21T20:20:01Z","Content":"\n\u003Cp\u003Eseparate them by shaders you intend to use in KSP; hidden parts; and animations.\u003C/p\u003E\u003Cp\u003Eif there\u0027re no hidden parts, animations; or multiple shaders. combine them into one object.\u003C/p\u003E\u003Cp\u003Eeach shader requires separate mesh; hidden parts like engine fairing require separate mesh; and moving parts need to be separate mesh\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-07-21T22:16:19Z","Content":"\n\u003Cp\u003EEach mesh is a render call. Render calls are expensive. Use as few meshes as possible (i.e. only when you need a different material).\u003C/p\u003E\u003Cp\u003EFor that reason and also for reasons of not changing the texture state, it\u0027s best to use texture atlases rather than lots of small textures.\u003C/p\u003E\n"},{"CreatedByName":"OrbitusII","CreatedById":57305,"CreatedDateTime":"2014-07-22T01:21:02Z","Content":"\n\u003Cp\u003EWhat I would recommend is to go ahead and keep them separate while you develop the model, but to condense them into a single item when you\u0027re ready to export to a Unity-useable format. That way you can get the benefit of multiple objects while designing and the reduced draw calls of the single item.\u003C/p\u003E\u003Cp\u003EGranted, it\u0027s a little tricky to manage but it really optimizes the performance of your model. I use this trick on the prototype art for my game project and I can keep draw calls pretty low.\u003C/p\u003E\n"}]}