{"TopicId":160211,"ForumId":20,"TopicTitle":"kRPC Question","CreatedByName":"Bosun","CreatedById":146083,"CreatedDateTime":"2017-05-05T03:27:00Z","PageNum":1,"Articles":[{"CreatedByName":"Bosun","CreatedById":146083,"CreatedDateTime":"2017-05-05T03:27:00Z","Content":"\n\u003Cp\u003E\nHi everybody!\u003Cbr\u003E\u003Cbr\u003E\nI\u0027ve been playing with kRPC, and loving the fun of learning how to Python (which is how I justify playing more Kerbal) and have a question that\u0027s stumped me the last few days.\u00A0\u003Cbr\u003E\u003Cbr\u003E\nI have a craft with a central \u003Cabbr title=\u0022Liquid Fuel and Oxidizer\u0022\u003ELFO\u003C/abbr\u003E engine, surrounded by decoupler attached \u003Cabbr title=\u0022Liquid Fuel and Oxidizer\u0022\u003ELFO\u003C/abbr\u003E booster stacks. \u00A0I\u0027m looking for a way to determine when the fuel tanks that are radially attached are empty. \u00A0\u003Cbr\u003E\u003Cbr\u003E\nCurrently, I can call resources in a specific stage, which includes the main engine, and I can call object instances of all engines. \u00A0Neither of those, however, help me, because the total resource level will never equal zero before I need to jettison tanks, and I cannot seem to pinpoint a singular engine instance to test for whether the engine has_fuel. \u00A0I can test if all the engines have fuel, returning true if any single one still does, which also doesn\u0027t get me a usable result.\u00A0\u003Cbr\u003E\u003Cbr\u003E\nFinally, I\u0027ve tried to mathematically calculate the usage of propellant based on the stats of the engines, but the central and radial engines are different rates, and I also have vernor engines that differ in consumption, so my attempt to compute a hard time limit on the burn without, of course, first just running the rocket on the stand (which kinda defeats the purpose I\u0027m looking for) failed.\u003Cbr\u003E\u003Cbr\u003E\nAny help is appreciated! \u00A0Thanks all for any insight, this has been a really good challenge, but I\u0027m breaking down and asking for help.\u00A0\u003Cbr\u003E\nCheers!\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-05-15T06:11:45Z","Content":"\n\u003Cp\u003E\nFirstly, you\u0027d get a faster response just posting in the KRPC thread. \u00A0It\u0027s where those of us that fiddle with it look more often! \u00A0 Secondly - \u00A0there are several ways to do it. \u00A0 Perhaps the easiest is to check the decouple stage! \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://krpc.github.io/krpc/python/api/space-center/parts.html#staging\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.github.io/krpc/python/api/space-center/parts.html#staging\u003C/a\u003E\u00A0\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAll parts have two stage numbers... the stage they activate in and the stage they decouple in! \u00A0If you have those radially attached tanks decoupling at some point in the tree... \u00A0you can use that to differentiate them.\n\u003C/p\u003E\n\u003Cp\u003E\nOr you can iterate through the part tree. \u00A0 Engines have a \u0027has fuel\u0027 property you can check - \u00A0so you could iterate through all engines with a given stage and test that. \u00A0\u003Ca href=\u0022https://krpc.github.io/krpc/python/api/space-center/parts.html#engine\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.github.io/krpc/python/api/space-center/parts.html#engine\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAlso there\u0027s apparently a collection of active engines that already knows if the engine has fuel? \u00A0 This example shows how to grab it... so you might be able to save a copy of the list.. then compare it later with the current one to see if it\u0027s changed? \u00A0\u00A0\u003Ca href=\u0022https://krpc.github.io/krpc/tutorials/parts.html#combined-specific-impulse\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.github.io/krpc/tutorials/parts.html#combined-specific-impulse\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}