{"TopicId":176530,"ForumId":20,"TopicTitle":"ClayAddons (Phase I) [Temporary Dead]","CreatedByName":"Mathrilord","CreatedById":56196,"CreatedDateTime":"2018-07-06T18:09:32Z","PageNum":1,"Articles":[{"CreatedByName":"Mathrilord","CreatedById":56196,"CreatedDateTime":"2018-07-06T18:09:32Z","Content":"\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:8px;\u0022\u003EDisclaimer: English isn\u0027t my native language, I do my best.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nClay Parts; no it\u0027s not about clay but its malleability. My\u00A0idea is a\u00A0completely revamp\u00A0part system where your parts adapt to the shape, size, fonctionnality and visual you want.\u00A0Less parts (even with a lot of mods), just highly configurable ones and configurations.\n\u003C/p\u003E\n\u003Cp\u003E\nClayAddons will be a serie\u00A0of standalone mod that interact with each other\u00A0alot.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThis post is about discussing and defining the theoretical rules between each part and functionality.\u003C/strong\u003E\u00A0Ex: relation between size and thrust of an engine.\n\u003C/p\u003E\n\u003Cp\u003E\nAs ClayAddons will contain alot of stuff we will go step by step. First one engine!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHow engine are handle\u00A0by the mod (ClayEngine). Engines includes everything that allow movement, motion or implied motion ex electric generator.\n\u003C/p\u003E\n\u003Cp\u003E\nIn fact the mod include no engine, but engine module or component (you can have multiple engine module in one part and module on\u00A0a part can interact with module on other parts). Ex1: the propeller is a module, piston engine is another one. Ex2: combustion chamber is a module, tuyere (nozzle) is another one.\u003Cbr\u003E\nEach module have a whole range of option ex: size, number of piston(piston engine), number of blades(propeller).\u003Cbr\u003E\nEach module can have one or multiple virtual and physical\u00A0nodes.\u003Cbr\u003E\nModule node are port for linking modules with each other like electric plug.\u003Cbr\u003E\nNodes can be connected when module are placed inline or with various cable: electric cable, fuel line, shaft, cable(rope or metal cable), track(for wheel), chain, belt, pipes(yes pipes for air, water and ??????. So air intake need to be connected to engine using pipes.)\u00A0\u003Cbr\u003E\nVirtual nodes are for internal use only. Physical nodes will lead to the outside of the part of his module if not linked to anything else ex: exhaust, air intake.\n\u003C/p\u003E\n\u003Cp\u003E\nFor physic ease all those internal logic will be simplified at vessel load.\n\u003C/p\u003E\n\u003Cp\u003E\nI need your help to define module their nodes and options. \u002BMass etc\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022-_-\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_sleep.png\u0022 title=\u0022-_-\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nlet focus even more---\u0026gt; Propeller engine \u002B\u00A0Piston engine\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cu\u003EPropeller \u003C/u\u003E\u003C/strong\u003Ecomponent:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003Ecore\u003C/u\u003E (nose cone): size, mass, drag, internals\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003Eblades\u003C/u\u003E: number, size, drag, design, thrust\n\u003C/p\u003E\n\u003Cp\u003E\nressource: torque, rotation, air, thrust, data\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003E\u003Cstrong\u003EPiston engine\u003C/strong\u003E \u003C/u\u003Ecomponent:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003Episton\u003C/u\u003E: number, size, configuration, mass, power\n\u003C/p\u003E\n\u003Cp\u003E\nressource:\u00A0electricity, gas(oxygen), gas(CO2), liquid fuel,\u00A0torque, rotation, heat, data\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cu\u003EGearbox\u003C/u\u003E\u003C/strong\u003E: type(planetary, ....), mass, size\n\u003C/p\u003E\n\u003Cp\u003E\nressource: torque, rotation\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cu\u003EShaft\u003C/u\u003E\u003C/strong\u003E: mass, size\n\u003C/p\u003E\n\u003Cp\u003E\nressource: torque, rotation\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThose four element interact by torque and rotation\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor later\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cu\u003ELinking cable:\u00A0\u003C/u\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nelectric cable\n\u003C/p\u003E\n\u003Cp\u003E\nfuel line\n\u003C/p\u003E\n\u003Cp\u003E\nshaft\n\u003C/p\u003E\n\u003Cp\u003E\ncable\n\u003C/p\u003E\n\u003Cp\u003E\ntrack\n\u003C/p\u003E\n\u003Cp\u003E\nchain\n\u003C/p\u003E\n\u003Cp\u003E\nbelt\n\u003C/p\u003E\n\u003Cp\u003E\npipes\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003EModule list (will be updated):\u003C/u\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nwheel\n\u003C/p\u003E\n\u003Cp\u003E\nsteering\n\u003C/p\u003E\n\u003Cp\u003E\nsuspension\n\u003C/p\u003E\n\u003Cp\u003E\npropeller #; size; mass; drag; core type; number of blades; blades type; blades length;\u00A0blades angles; in flight blade reorient;\n\u003C/p\u003E\n\u003Cp\u003E\ngear box\n\u003C/p\u003E\n\u003Cp\u003E\ncombustion chamber\n\u003C/p\u003E\n\u003Cp\u003E\ngimbal\n\u003C/p\u003E\n\u003Cp\u003E\ntuyere(nozzle)\n\u003C/p\u003E\n\u003Cp\u003E\npump????\n\u003C/p\u003E\n\u003Cp\u003E\npiston(will see in phase II)\n\u003C/p\u003E\n\u003Cp\u003E\ncooling module\n\u003C/p\u003E\n\u003Cp\u003E\nheater\n\u003C/p\u003E\n\u003Cp\u003E\ntank\n\u003C/p\u003E\n\u003Cp\u003E\nhole(yep)\n\u003C/p\u003E\n\u003Cp\u003E\nexhaust\n\u003C/p\u003E\n\u003Cp\u003E\njet engine section(to define)\n\u003C/p\u003E\n\u003Cp\u003E\nion engine(to define)\n\u003C/p\u003E\n\u003Cp\u003E\nnuclear?????\n\u003C/p\u003E\n\u003Cp\u003E\nelectric engineA\n\u003C/p\u003E\n\u003Cp\u003E\nelectric engineB(use as an alternator)\n\u003C/p\u003E\n\u003Cp\u003E\ncomputer(will see in phase ?)\n\u003C/p\u003E\n\u003Cp\u003E\nturbo compressor\n\u003C/p\u003E\n\u003Cp\u003E\npiston engine mono\n\u003C/p\u003E\n\u003Cp\u003E\npiston engine Inline\n\u003C/p\u003E\n\u003Cp\u003E\npiston engine V(variable angle)\n\u003C/p\u003E\n\u003Cp\u003E\npiston engine radial(circle)\n\u003C/p\u003E\n\u003Cp\u003E\npiston engine V\u002B(more than 2 row)\n\u003C/p\u003E\n\u003Cp\u003E\npiston engine abcd...xyz?\n\u003C/p\u003E\n\u003Cp\u003E\nrotor\n\u003C/p\u003E\n\u003Cp\u003E\nfan\n\u003C/p\u003E\n\u003Cp\u003E\nout of idea\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-11-05T19:29:10Z\u0022 title=\u002211/05/2018 07:29  PM\u0022 data-short=\u00225 yr\u0022\u003ENovember 5, 2018\u003C/time\u003E by Mathrilord\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"neistridlar","CreatedById":20296,"CreatedDateTime":"2018-07-06T18:45:58Z","Content":"\n\u003Cp\u003E\nI have some immediate questions. Do you plan to do any coding to write your own part modules for this? I think that might be necessary to make things work the way you are describing. Though I can think of some potential ways to make it work kind of like you describe, by defining lots of different resources, and have different kinds of part convert between the different resources.\n\u003C/p\u003E\n\u003Cp\u003E\nThese virtual nodes you speak of. What would the function of those be, and how would they be different from regular nodes?\n\u003C/p\u003E\n"},{"CreatedByName":"Mathrilord","CreatedById":56196,"CreatedDateTime":"2018-07-06T19:45:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223411450\u0022 data-ipsquote-contentid=\u0022176530\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221530902758\u0022 data-ipsquote-userid=\u002220296\u0022 data-ipsquote-username=\u0022neistridlar\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 minutes ago, neistridlar said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI have some immediate questions. Do you plan to do any coding to write your own part modules for this? I think that might be necessary to make things work the way you are describing. Though I can think of some potential ways to make it work kind of like you describe, by defining lots of different resources, and have different kinds of part convert between the different resources.\n\u003C/p\u003E\n\u003Cp\u003E\nThese virtual nodes you speak of. What would the function of those be, and how would they be different from regular nodes?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027ll see wath is the best but I think that coding will surely be needed.\n\u003C/p\u003E\n\u003Cp\u003E\nFor nodes there\u0027s an example: your craft have a fuel tank,\u00A0a fuselage part, a battery, a command pod. in the fuselage(right click) you add\u00A0only a piston engine module, the engine have an input\u00A0Pnode(physical) for air,\u00A0an output Pnod for gas exhaust, an input Vnode(virtual) for electricity, data Vnode for computer(incase you want to do some fancy config on piston sequence), a live(need to be at the same rotation speed as the connected node)\u00A0\u00A0Vnode for torque). We will ignore heat for this example.\u00A0Data node is link to command pod, electric node is link to battery, torque node is not link, air node is not link, gas exhaust node is not link. Torque node is a Vnode so it will be automaticaly sealed. Air node and gas exhaust node are Pnode so holes(can have different visual)\u00A0will appear on the fuselage part and the part will be given an air intake module and exhaust module.\n\u003C/p\u003E\n"},{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2018-07-06T21:22:50Z","Content":"\n\u003Cp\u003E\nHi that\u0027s an impressive list of wants, and an even more impressive amount of required parts, even if they are \u0022procedural\u0022 .\u00A0 I hope you\u0027ve prepared your nearest and dearest to be ignored for the next six months. \u00A0 I have to ask, as I\u0027ve seen a lot of great ideas come and go in my time here, do you have modding experience? I\u0027m not talking messing around in cfg\u0027s here,\u00A0 but actual part and code creation?\u00A0 As you\u0027ll need them both, even if you find others willing to pitch in,\u00A0 some proof of concept from you must be required,\u00A0 many dreamers pass through addon discussions , and your project has a certain dreamy quality about it .\u003Cbr\u003E\nRegardless I wish you luck in your adventure\n\u003C/p\u003E\n"},{"CreatedByName":"EnderKid2","CreatedById":145622,"CreatedDateTime":"2018-07-11T23:19:09Z","Content":"\n\u003Cp\u003E\nAre you thinking of something like how Homebrew Vehicle Sandbox does its piston engines and ther parts?\n\u003C/p\u003E\n"},{"CreatedByName":"Mathrilord","CreatedById":56196,"CreatedDateTime":"2018-11-05T19:39:30Z","Content":"\n\u003Cp\u003E\nFor engine: Module works but a bit overkill: get back to drawing board.\n\u003C/p\u003E\n\u003Cp\u003E\nFor adaptative parts: nothing work \u002B some fundamental problem I can\u0027t solve(like shape detection).\n\u003C/p\u003E\n\u003Cp\u003E\nI have other project for now, will get back to it later.\n\u003C/p\u003E\n"}]}