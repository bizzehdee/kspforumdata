{"TopicId":59388,"ForumId":20,"TopicTitle":"CompatibilityChecker Discussion Thread","CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-01-09T04:00:12Z","PageNum":4,"Articles":[{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-01-10T20:04:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022J.Random\u0022 data-cite=\u0022J.Random\u0022\u003E\u003Cdiv\u003EIt seems that, starting with #41, you\u0027re discussing some sort of \u0022always online\u0022 DRM here. For free mods for DRM-free game. I guess Average Joe mod user like me will be forced to learn C# after all and actually review the code and build every mod by himself. Fun times.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m by no means advocating an always online system at all. The process I described uses as online check if available to override the lockout, and would attempt to make that check as few times as possible.\u003C/p\u003E\u003Cp\u003EThat is to say; instead of \u003C/p\u003E\u003Cp\u003Eif (currentVersion!=specifiedVersion) { fail }\u003C/p\u003E\u003Cp\u003Eif (currentVersion!=specifiedVersion) { try something else }\u003C/p\u003E\u003Cp\u003EBecause it is entirely possible that the DLL may work fine with the new version; if so the creator gets to check this and say on this service \u0022yes, my version X does also work with KSP A, Z, Y, if a user tries to run the DLL in those versions, allow it\u0022\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-01-11T03:50:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003EAnyway, imo you are missing a major selling point. Updating a dozen mods is hard for someone who thinks about mods once every KSP update, thus once every about 4-6 month. Even for me finding the latest versions of the few addons installed took a while. Why can\u0027t you at least pretend to help your users? For example by pointing them to the official source for those mods by providing click-able links.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI thought it was common to provide a link to the forum thread in the Readme? At least that\u0027s what I\u0027ve always done. As for helping users, protecting them from the ever-present threat of KSP updates screwing up their mods seems like helping them out.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAs for the \u0022cfg or recompile\u0022... if you are afraid of 3rd parties providing cfg fixes, you should also be afraid of the same for dll\u0027s that knock out the version check entirely, what would be even worse. Think i would prefer the dialog to be skip-able, but only with \u0022annoying\u0022 user interaction (maybe re-typing a sentence?). It does give them a way to ignore the version check, so they don\u0027t have to look for that from \u0022unofficial\u0022 sources, but also still a huge kick in the a** to update their addons. It would also allow it CompatibilityChecker to log that there are outdated mods, since at least output_log does not seem to mention assembly versions.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEvery single time a KSP update has broken FAR the game-breaking bug was caught in the compiler. \u003Cem\u003EEvery single time.\u003C/em\u003E At that point, a dll being redistributed doesn\u0027t bother me so much, because it would require the compiling user to fix the bugs. The alternative is that they reference the old KSP libraries to build the dll, at which point it\u0027ll quickly become apparent that the dll is broken and every single one of us can say, \u0022This is why the version compatibility check is there; to prevent this. We tried to stop you from running into this, but you\u0027ve insisted on bringing this issue on yourself.\u0022 A config file change, or an in-game work-around would have to be coded in by us as an \u0022intended\u0022 way to \u0022fix\u0022 the issue; it seems harder to justify, \u0022Sucks for you, you shouldn\u0027t have done that.\u0022 What\u0027s the point of adding a button if they\u0027re not ever supposed to press it?\u003C/p\u003E\u003Cp\u003EThe only way that I could support an in-game work-around is if it requires the user to type out something ridiculous and over the top, like the below, in full:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI realize that I shouldn\u0027t be doing this. I am being foolish by insisting on using this plugin in a version of KSP it was not designed for. All the problems stemming from enabling the plugin despite the warning are my own fault, not \u0026lt;MOD_CREATOR\u0026gt;\u0027s. If I enable it anyway I shouldn\u0027t complain to \u0026lt;MOD_CREATOR\u0026gt;.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EI fully realize the above is heavy-handed, nasty and a pain to type out, but I get the feeling that the heavy hand might be necessary for the users I\u0027m envisioning complaining about the compatibility issues if I ever decide to allow a non-compiling solution to the issue.\u003C/span\u003E A \u0022simple\u0022 work-around I would be too likely to lead to people ignoring the message and complaining because \u0022the mod didn\u0027t work,\u0022 like all the people who asked for a confirmation dialogue for \u0022End Flight,\u0022 not realizing it was already there because they automatically went to click \u0022Yes\u0022 and that their brain filtered that out.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EThat said, I probably wouldn\u0027t implement that particular wording; it\u0027s just too mean and nasty.\u003C/span\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-11T04:46:57Z\u0022 title=\u002201/11/2014 04:46  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 11, 2014\u003C/time\u003E by ferram4\u003C/strong\u003E\n\u003Cbr\u003EMade the example text nicer; in hindsight it was too much, even as a ridiculous example. Emotion in arguing is not good.\n\u003C/span\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2014-01-11T08:31:18Z","Content":"\n\u003Cp\u003EThis is a more complete and better-documented version of CompatibilityChecker. It is not thoroughly tested, so I recommend you evaluate it with your specific compatibility function before deploying it in production. I highly recommend leaving all comments intact in case someone chooses to copy your implementation instead of coming to this thread.\u003C/p\u003E\u003Cp\u003EThe following is released under the \u003Ca href=\u0022http://opensource.org/licenses/BSD-2-Clause\u0022 rel=\u0022external nofollow\u0022\u003EBSD 2-Clause\u003C/a\u003E license.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E/**\u003Cbr\u003E * Copyright (c) 2014, Majiir\u003Cbr\u003E * All rights reserved.\u003Cbr\u003E * \u003Cbr\u003E * Redistribution and use in source and binary forms, with or without modification, are permitted \u003Cbr\u003E * provided that the following conditions are met:\u003Cbr\u003E * \u003Cbr\u003E * 1. Redistributions of source code must retain the above copyright notice, this list of \u003Cbr\u003E * conditions and the following disclaimer.\u003Cbr\u003E * \u003Cbr\u003E * 2. Redistributions in binary form must reproduce the above copyright notice, this list of \u003Cbr\u003E * conditions and the following disclaimer in the documentation and/or other materials provided \u003Cbr\u003E * with the distribution.\u003Cbr\u003E * \u003Cbr\u003E * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \u0022AS IS\u0022 AND ANY EXPRESS OR \u003Cbr\u003E * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\u003Cbr\u003E * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR \u003Cbr\u003E * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \u003Cbr\u003E * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \u003Cbr\u003E * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY \u003Cbr\u003E * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR \u003Cbr\u003E * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE \u003Cbr\u003E * POSSIBILITY OF SUCH DAMAGE.\u003Cbr\u003E */\u003Cbr\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Reflection;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003E/*-----------------------------------------*\\\u003Cbr\u003E|   SUBSTITUTE YOUR MOD\u0027S NAMESPACE HERE.   |\u003Cbr\u003E\\*-----------------------------------------*/\u003Cbr\u003Enamespace Compatibility\u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E    /**\u003Cbr\u003E     * This utility displays a warning with a list of mods that determine themselves\u003Cbr\u003E     * to be incompatible with the current running version of Kerbal Space Program.\u003Cbr\u003E     * \u003Cbr\u003E     * See this forum thread for details:\u003Cbr\u003E     * http://forum.kerbalspaceprogram.com/threads/65395-Voluntarily-Locking-Plugins-to-a-Particular-KSP-Version\u003Cbr\u003E     */\u003Cbr\u003E\u003Cbr\u003E    [KSPAddon(KSPAddon.Startup.MainMenu, true)]\u003Cbr\u003E    internal class CompatibilityChecker : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        public static bool IsCompatible()\u003Cbr\u003E        {\u003Cbr\u003E            /*-----------------------------------------------*\\\u003Cbr\u003E            |    BEGIN IMPLEMENTATION-SPECIFIC EDITS HERE.    |\u003Cbr\u003E            \\*-----------------------------------------------*/\u003Cbr\u003E\u003Cbr\u003E            // TODO: Implement your own compatibility check.\u003Cbr\u003E            //\u003Cbr\u003E            // If you want to disable some behavior when incompatible, other parts of the plugin\u003Cbr\u003E            // should query this method:\u003Cbr\u003E            //\u003Cbr\u003E            //    if (!CompatibilityChecker.IsCompatible()) {\u003Cbr\u003E            //        ...disable some features...\u003Cbr\u003E            //    }\u003Cbr\u003E            //\u003Cbr\u003E            // Even if you don\u0027t lock down functionality, you should return true if your users \u003Cbr\u003E            // can expect a future update to be available.\u003Cbr\u003E            //\u003Cbr\u003E            return false;\u003Cbr\u003E\u003Cbr\u003E            /*-----------------------------------------------*\\\u003Cbr\u003E            | IMPLEMENTERS SHOULD NOT EDIT BEYOND THIS POINT! |\u003Cbr\u003E            \\*-----------------------------------------------*/\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        // Version of the compatibility checker itself.\u003Cbr\u003E        private static int _version = 2;\u003Cbr\u003E\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            // Checkers are identified by the type name and version field name.\u003Cbr\u003E            FieldInfo[] fields =\u003Cbr\u003E                getAllTypes()\u003Cbr\u003E                .Where(t =\u0026gt; t.Name == \u0022CompatibilityChecker\u0022)\u003Cbr\u003E                .Select(t =\u0026gt; t.GetField(\u0022_version\u0022, BindingFlags.Static | BindingFlags.NonPublic))\u003Cbr\u003E                .Where(f =\u0026gt; f != null)\u003Cbr\u003E                .Where(f =\u0026gt; f.FieldType == typeof(int))\u003Cbr\u003E                .ToArray();\u003Cbr\u003E\u003Cbr\u003E            // Let the latest version of the checker execute.\u003Cbr\u003E            if (_version != fields.Max(f =\u0026gt; (int)f.GetValue(null))) { return; }\u003Cbr\u003E\u003Cbr\u003E            Debug.Log(String.Format(\u0022[CompatibilityChecker] Running checker version {0} from \u0027{1}\u0027\u0022, _version, Assembly.GetExecutingAssembly().GetName().Name));\u003Cbr\u003E\u003Cbr\u003E            // Other checkers will see this version and not run.\u003Cbr\u003E            // This accomplishes the same as an explicit \u0022ran\u0022 flag with fewer moving parts.\u003Cbr\u003E            _version = int.MaxValue;\u003Cbr\u003E\u003Cbr\u003E            // A mod is incompatible if its compatibility checker has an IsCompatible method which returns false.\u003Cbr\u003E            String[] incompatible =\u003Cbr\u003E                fields\u003Cbr\u003E                .Select(f =\u0026gt; f.DeclaringType.GetMethod(\u0022IsCompatible\u0022, Type.EmptyTypes))\u003Cbr\u003E                .Where(m =\u0026gt; m.IsStatic)\u003Cbr\u003E                .Where(m =\u0026gt; m.ReturnType == typeof(bool))\u003Cbr\u003E                .Where(m =\u0026gt;\u003Cbr\u003E                {\u003Cbr\u003E                    try\u003Cbr\u003E                    {\u003Cbr\u003E                        return !(bool)m.Invoke(null, new object[0]);\u003Cbr\u003E                    }\u003Cbr\u003E                    catch (Exception e)\u003Cbr\u003E                    {\u003Cbr\u003E                        // If a mod throws an exception from IsCompatible, it\u0027s not compatible.\u003Cbr\u003E                        Debug.LogWarning(String.Format(\u0022[CompatibilityChecker] Exception while invoking IsCompatible() from \u0027{0}\u0027:\\n\\n{1}\u0022, m.DeclaringType.Assembly.GetName().Name, e));\u003Cbr\u003E                        return true;\u003Cbr\u003E                    }\u003Cbr\u003E                })\u003Cbr\u003E                .Select(m =\u0026gt; m.DeclaringType.Assembly.GetName().Name)\u003Cbr\u003E                .ToArray();\u003Cbr\u003E\u003Cbr\u003E            Array.Sort(incompatible);\u003Cbr\u003E\u003Cbr\u003E            if (incompatible.Length \u0026gt; 0)\u003Cbr\u003E            {\u003Cbr\u003E                Debug.LogWarning(\u0022[CompatibilityChecker] Incompatible mods detected: \u0022 \u002B String.Join(\u0022, \u0022, incompatible));\u003Cbr\u003E                PopupDialog.SpawnPopupDialog(\u0022Incompatible Mods Detected\u0022, \u0022Some installed mods are incompatible with this version of Kerbal Space Program. Some features may be broken or disabled. Please check for updates to the following mods:\\n\\n\u0022 \u002B String.Join(\u0022\\n\u0022, incompatible), \u0022OK\u0022, false, HighLogic.Skin);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        private static IEnumerable\u0026lt;Type\u0026gt; getAllTypes()\u003Cbr\u003E        {\u003Cbr\u003E            foreach (var assembly in AppDomain.CurrentDomain.GetAssemblies())\u003Cbr\u003E            {\u003Cbr\u003E                Type[] types;\u003Cbr\u003E                try\u003Cbr\u003E                {\u003Cbr\u003E                    types = assembly.GetTypes();\u003Cbr\u003E                }\u003Cbr\u003E                catch (Exception)\u003Cbr\u003E                {\u003Cbr\u003E                    types = Type.EmptyTypes;\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E                foreach (var type in types)\u003Cbr\u003E                {\u003Cbr\u003E                    yield return type;\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"TMS","CreatedById":57134,"CreatedDateTime":"2014-01-11T08:56:00Z","Content":"\n\u003Cp\u003EI\u0027m generally supportive of a system that handles mod comparability - especially with SQUAD firing N3X15 and Spaceport 2 looking like another indefinite shelving. However, I\u0027m not a total fan of what\u0027s being described here. Basic fact is that I should have the option of bypassing the block, \u003Cstrong\u003Eafter\u003C/strong\u003E being appropriately warned. Having the ability to choose whether to leave, disable or re-enable mods should be in the users hands.\u003C/p\u003E\u003Cp\u003EIf you\u0027re concerned about current signal to noise ratio in support threads and think that this will improve it, then I think that\u0027s slightly short-sighted. All that\u0027s going to happen is that that the noise caused by inappropriate (and unsupported) usage will be replaced by noise caused by people asking how to circumvent, edit or recompile. Surely you must see that?\u003C/p\u003E\u003Cp\u003EMaybe that won\u0027t happen for the bigger modding players who jump on updates quickly (much love), but I can see it being a problem with smaller mods whose authors implement this without thinking it through. Should they leave their project (as often happens), but the mod is still functional in the new version (as often happens), I can see those support threads becoming clogged with requests for instruction on how to circumvent.\u003C/p\u003E\u003Cp\u003EToday\u0027s solutions are sometimes tomorrow\u0027s problems.\u003C/p\u003E\u003Cp\u003EOr am I grossly misunderstanding?\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-01-11T09:50:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TMS\u0022 data-cite=\u0022TMS\u0022\u003E\u003Cdiv\u003EBasic fact is that I should have the option of bypassing the block, \u003Cstrong\u003Eafter\u003C/strong\u003E being appropriately warned. Having the ability to choose whether to leave, disable or re-enable mods should be in the users hands.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou do have an option to bypass the block under the most restrictive proposal being discussed; recompile the source and fix the bugs. If all it did was provide a stern the warning is users will ignore it since they will either hear from others or learn through experience that the \u0022ignore incompatibility\u0022 button is actually the \u0022make it work\u0022 button, and then we\u0027ll be back to where we are currently, with users suffering compatibility issues and the resultant complaints.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIf you\u0027re concerned about current signal to noise ratio in support threads and think that this will improve it, then I think that\u0027s slightly short-sighted. All that\u0027s going to happen is that that the noise caused by inappropriate (and unsupported) usage will be replaced by noise caused by people asking how to circumvent, edit or recompile. Surely you must see that?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EExcept there won\u0027t be any noise of the form, \u0022ModuleManager eats your all parts; delete the dll or else!\u0022 which was the essence of a PSA someone tried to get started on reddit shortly after 0.23 released. There won\u0027t be any \u0022FAR causes \u0026lt;issue that isn\u0027t caused by FAR\u0026gt; in 0.23,\u0022 with me getting bug reports that aren\u0027t even my fault. There will be fewer effects of ignorant \u0022common knowledge\u0022 that X is the solution to a problem, where X is actually a bad idea that simply replaces the visible issue with a more subtle one. That background noise of well-meaning but incorrect mod support is really the key thing to reduce, since it reduces issues in the long term. Sure, people will ask how to circumvent the compatibility check, but that blends in with the demands to update the mod anyway.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EMaybe that won\u0027t happen for the bigger modding players who jump on updates quickly (much love), but I can see it being a problem with smaller mods whose authors implement this without thinking it through. Should they leave their project (as often happens), but the mod is still functional in the new version (as often happens), I can see those support threads becoming clogged with requests for instruction on how to circumvent.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI actually don\u0027t see how this is a bad thing. When a mod goes unsupported it\u0027s only a matter of time before it causes game-breaking issues and it\u0027s better that it be closed down before that happens. Even when a mod is \u0022functional\u0022 from a user\u0027s perspective there can be a lot of errors quietly occurring; exceptions are thrown, the game and the mod fight over things, the mod conflicts with other mods, but if there\u0027s no overt issues users declare that it\u0027s still fully functional, even though it\u0027s not. If there are users that think that a mod should be maintained, but the original author isn\u0027t interested anymore, they should look into maintaining it themselves. If they don\u0027t have the skills, learn them. I didn\u0027t know C# until I started coding KSP plugins. Leaving a plugin in a semi-working state is worse than it disappearing; it becomes a complication in bugfixing any other mod, since of all the mods this person is running, there\u0027s this one random plugin that\u0027s from 0.18 that is probably causing weird interactions, but given the poor quality of most bug reports quantifying those interactions is a pain.\u003C/p\u003E\u003Cp\u003EUltimately though, how a modder implements the compatibility check is up to them. There are some that might just have the game yell at you and then let you continue. There are others that will disable the mod because they know that it will break horribly.\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-01-11T15:08:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EUltimately though, how a modder implements the compatibility check is up to them. There are some that might just have the game yell at you and then let you continue. There are others that will disable the mod because they know that it will break horribly.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think a lot of newcomers to this discussion are missing this fact entirely because of the thread title. There are quite a few plugins that will probably use this only as an alert system rather than an alert-\u0026gt;lockout system.\u003C/p\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2014-01-11T17:44:24Z","Content":"\n\u003Cp\u003ESteamGauges will incorporate Majiir\u0027s Version Checker starting with the next release.\u003C/p\u003E\u003Cp\u003ECurrently I\u0027m not disabling anything, just throwing the warning. If an upcoming version sounds like it might break some stuff that could change though.\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-02-06T15:52:33Z","Content":"\n\u003Cp\u003EInteresting. Might have to look into this. I have a pretty bad feeling the next update is going to cause havoc. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-02-06T17:06:47Z","Content":"\n\u003Cp\u003EHmmm.\u003C/p\u003E\u003Cp\u003EWhile my mod has a small enough user base I\u0027m not running in to the issues being talked about in this thread, I\u0027m thinking this is a good idea.\u003C/p\u003E\u003Cp\u003EHowever, rather then disable functionality of my mod, all I\u0027m going to do is display a \u0022Mod Update Required\u0022 somewhere on my GUI. This does make any extra demand of the user to use my mod while outdated, while at the same time continuously reminds them that it is outdated.\u003C/p\u003E\u003Cp\u003EThat way if they want to keep using my mod they can, but any support request I get which includes a screen shot (which is most of them due to what my mod does) I can immediately tell if they are using the version of my mod on the version of KSP it was programmed for.\u003C/p\u003E\u003Cp\u003EOnly displaying the text that an update is required is the middle ground I think. They can use the mod all they want with the text displaying but to remove the text would require a recompile.\u003C/p\u003E\u003Cp\u003EAs my mod is unlikely to break with a KSP update, this feels like the right balance for what I\u0027m doing.\u003C/p\u003E\u003Cp\u003EAfter all, the point here is to make is clear to the end user that they need to update. I don\u0027t think I need to disable any functionality to do that for my mod, but the bigger and/or more likely a mod is to break on a KSP update, the more likely disabling features of the mod will be desired.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2014-02-06T17:11:14Z","Content":"\n\u003Cp\u003EDiazo, a few people seem to be going that route. You can still integrate with CompatibilityChecker in that case, since disabling functionality is implemented on a per-mod basis. Integrating will give users a more cohesive experience. If you choose not to use CompatibilityChecker, I\u0027d be interested to hear why.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-02-06T17:27:41Z","Content":"\n\u003Cp\u003EOh. Yes, I am going to use CompatibilityChecker for the check. (I never did actually say that in my last post, oops.)\u003C/p\u003E\u003Cp\u003EBut all I\u0027m going to do in my own mod if it comes back false is (in addition to the dialog box CompatibilityChecker displays) display the text \u0022Mod Update Required\u0022 in the corner of my GUI window so it is always present and the user can\u0027t \u0027forget\u0027 the fact they are using an outdated version and any screenshots I get as part of a support request show me that it outdated.\u003C/p\u003E\u003Cp\u003EI suppose the point of my previous post was that you can display something on your GUI as a middle ground between simply allowing users to keep using your mod with no warnings, and disabling features.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-06T17:30:50Z\u0022 title=\u002202/06/2014 05:30  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 6, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-02-07T02:03:34Z","Content":"\n\u003Cp\u003EOkay, something\u0027s up with the code posted \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/65395-Voluntarily-Locking-Plugins-to-a-Particular-KSP-Version?p=901682\u0026amp;viewfull=1#post901682\u0022 rel=\u0022external nofollow\u0022\u003Ehere in post #78 of the thread.\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ERunning into problems trying to integrate this, I created a fresh project (with the 2 dependencies for KSP) and copy/pasted the code in in order to test.\u003C/p\u003E\u003Cp\u003EIt compiles without error, but when I run the following appears in the debug.log:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[ERR 18:59:57.907] AssemblyLoader: Exception loading \u0027CompatibilityCheckerTest\u0027: System.Reflection.ReflectionTypeLoadException: The classes in the module cannot be loaded.\u003Cbr\u003E  at (wrapper managed-to-native) System.Reflection.Assembly:GetTypes (bool)\u003Cbr\u003E  at System.Reflection.Assembly.GetTypes () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at AssemblyLoader.LoadAssemblies () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003EAdditional information about this exception:\u003Cbr\u003E System.TypeLoadException: Could not load type \u0027Compatibility.CompatibilityChecker\u0027 from assembly \u0027CompatibilityCheckerTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\u0027.\u003Cbr\u003E System.TypeLoadException: Could not load type \u0027\u0026lt;getAllTypes\u0026gt;d__14\u0027 from assembly \u0027CompatibilityCheckerTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\u0027.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen the game runs as normal, just without the mod loaded.\u003C/p\u003E\u003Cp\u003ETo be clear, this is a Ctrl-C/Ctrl-V of post #78 with no changes at all.\u003C/p\u003E\u003Cp\u003EThe only GetTypes I could see was on line 135 near the end in the getAllTypes() methond, but looking at the code it appears correct to my limited programming knowledge.\u003C/p\u003E\u003Cp\u003EAny ideas?\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2014-02-07T02:10:51Z","Content":"\n\u003Cp\u003EI think it might be your .NET version. Try compiling against 3.5.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-02-07T02:58:41Z","Content":"\n\u003Cp\u003EFFS.\u003C/p\u003E\u003Cp\u003EThat was it, my install of Visual Studio defaulted to compiling against .NET version 4.5.\u003C/p\u003E\u003Cp\u003EChange to 3.5 and it works fine.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"Kermunist","CreatedById":63745,"CreatedDateTime":"2014-02-07T14:32:45Z","Content":"\n\u003Cp\u003EThis all looks like a fairly good idea to me.\u003C/p\u003E\u003Cp\u003ESome suggestions:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERequire the mod using Compatability Checker to provide a version number for itself, and display that on the alert.\u003C/strong\u003E This will make it clearer to the player what they currently have and hopefully make it a bit easier to find out if an update is available. It would also make it possible to check the version of other mods and disable the plugin if, for example, you need a newer version of modulemanager than is installed.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAllow the mod to add a UI element (text or button)\u003C/strong\u003E So the player has instant feedback as to what the mod did when it found incompatibilities. Most mods will either carry on regardless (and display some text saying \u0022Possibly buggy\u0022) or disable themselves (and display \u0022disabled\u0022). Some may want to offer choice to the player, or provide more information than fits in the alert box, and a button opening a mod-specific dialogue box allow that.\u003C/p\u003E\u003Cp\u003Eso the alert would look like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EOne or more of your mods are not compatible\u003Cbr\u003E\u002B----------------------------------------------\u002B\u003Cbr\u003E| Mod        0.1.6      disabled               |\u003Cbr\u003E| OtherMod   1.3.5      disabled               |\u003Cbr\u003E| funMod     0.6      some features disabled   |\u003Cbr\u003E| cheatyMod  6.3.1    disabled [read more]     |    \u0026lt;--- read more is a button that pops up an extra dialog, handled by the mod\u003Cbr\u003E| noisyMod   1.2.3b6  possibly buggy [disable] |    \u0026lt;--- again, the button event is provided by the mod\u003Cbr\u003E\u002B----------------------------------------------\u002B\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIMO the first suggestion should be very easy to implement and would be quite useful to players. The second one would probably more work to do, so having suggested it I\u0027ll leave it to people who regularly write mods to comment on it\u0027s value.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2014-02-07T19:39:35Z","Content":"\n\u003Cp\u003EKermunist, I like the suggestion. How do you suggest handling mods using an old version of Compatibility Checker? A new version will override the old ones just fine, but it will need some kind of default way to fill in those fields. Version could be filled in with the AssemblyInformationalVersion, or a blank if that attribute is missing. Should the other field just be blank? \u0022Unknown\u0022?\u003C/p\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2014-02-07T19:47:56Z","Content":"\n\u003Cp\u003EI would say blank for the version string, and \u0022Unknown\u0022 for the status field would work fine. Plus, it would probably only be an issue for a little while. I don\u0027t think there\u0027s a lot of abandoned mods using compatibility checker.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2014-02-07T21:37:00Z","Content":"\n\u003Cp\u003EIt occurs to me that version compatibility goes both ways: we want to show a warning for a too-new KSP version \u003Cem\u003Eand\u003C/em\u003E for a too-old version. The error message is currently not very helpful in that regard. I\u0027d like to keep CompatibilityChecker fairly flexible, but would it be helpful to incorporate a sort of \u0022expected version\u0022 value that could be reported to the user? Should that be decided on a per-mod basis?\u003C/p\u003E\n"},{"CreatedByName":"Kermunist","CreatedById":63745,"CreatedDateTime":"2014-02-07T23:29:12Z","Content":"\n\u003Cp\u003EWell, to be totally honest I didn\u0027t look how long the thread had been running, and thought my suggestions might make it in before many mods adopted it. \u003C/p\u003E\u003Cp\u003EI would probably go for a blank version if it\u0027s not defined, as the assembly version is potentially misleading/confusing if it isn\u0027t the same as the version number the author uses when releasing the mod on the forum. Better blank than potentially wrong IMO.\u003C/p\u003E\u003Cp\u003EHopefully it\u0027ll become a non-problem fairly quickly, as plugin authors who are early adopters of ComptatbilityChecker will probably also update it fairly quickly.\u003C/p\u003E\u003Cp\u003EI would probably avoid putting an \u0027expected KSP version\u0027 column or similar in. The reason being that the logic behind a plugin being incompatible is entirely up to the plugin and is unstructured. As it stands, a plugin author can flag up incompatibilities for any reason: KSP minor version; KSP build; another plugin version; operating system etc. The GUI should not structure something the code behind it does not, or it will get messy as people try to wedge unstructured information in.\u003C/p\u003E\u003Cp\u003EHow about another field? Like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EOne or more of your plugins have compatibility problems:\u003Cbr\u003E\u002B------------------------------------------------------------------------------\u002B\u003Cbr\u003E| Plugin     Version   Problem               Plugin Status                     |\u003Cbr\u003E\u002B------------------------------------------------------------------------------\u002B\u003Cbr\u003E| Mod        0.1.6     Expects KSP 0.23      disabled                   [more] |\u003Cbr\u003E| OtherMod   1.3.5     Expects KSP 0.23.1    disabled                          |\u003Cbr\u003E| funMod     0.6       Needs Modulemanager   some features disabled     [more] |\u003Cbr\u003E| cheatyMod  6.3.1     Only works on Linux   trying to continue (bugs!) [more] |  \u003Cbr\u003E\u002B------------------------------------------------------------------------------\u002B\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI also think that while it is good to make the code as versatile as possible, there is nothing wrong with writing clear guidelines on how it is to be used. For example (and this is an example of the type of guideline, not necessarily what they should be):\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EVersion\u003C/strong\u003E Define a version number via the variable \u003Cem\u003EpluginVersion\u003C/em\u003E The version number should be the same as in the forums/spaceport, as it\u0027s primary purpose is making it easier for players to find upgrades. \u003Cem\u003EIf no version number is available, this will be left blank\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EReasons\u003C/strong\u003E If IsCompatible returns false, the variable \u003Cem\u003EfailureReason\u003C/em\u003E should be set to explaining why. This should be a string of no more than 40 characters, for multiple or longer reasons, use the more button. Good examples of what to set this to are \u0022Needs KSP 0.23\u0022 or \u0022Needs ModuleManager\u0022.\u003Cem\u003EIf not set, it will default to \u0027???\u0027\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPlugin Status \u003C/strong\u003E If IsCompatible returns false, the variable \u003Cem\u003EpluginStatus\u003C/em\u003E should be set to explaining the actions taken as a result. This should be a string of no more than 40 characters, for multiple or longer explanations, use the more button. Good examples of what to set this to are \u0022disabled\u0022 or \u0022featureX disabled\u0022. It should not be left blank, if the mod isn\u0027t disabling any functionality, use \u0022Attempting to continue\u0022 or similar. \u003Cem\u003EIf not set, it will default to \u0027???\u0027\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMore button\u003C/strong\u003E If you #DEFINE USE_MORE_BUTTON then you must also define callbackMoreButton(). A button will appear next to your mod which will call callbackMoreButton() when clicked, this should open an additional dialog box. Clicking the button should not have any other side effects, to change the state of the plugin, use controls within the new dialog box. Good examples of how to use this are: Simple text boxes elaborating on \u003Cem\u003EfailureReason\u003C/em\u003E or \u003Cem\u003EpluginStatus\u003C/em\u003E; A web update checker; A re-enable plugin button with disclaimers. \u003Cem\u003EIf USE_MORE_BUTTON is not #DEFINED\u003C/em\u003E then no button will be shown.\u003C/p\u003E\u003Cp\u003EFinally, one other thing. I think text should refer to \u0027plugins\u0027 not \u0027mods\u0027. Because: this method only works for mods with plugins; I think it is good to keep the distinction between parts packs and plugins in the minds of players; a disabled plugin will probably not remove parts, just make them inactive.\u003C/p\u003E\u003Cp\u003EWell. These are my ideas. I would define them as such, not feature requests as I don\u0027t do much mod writing. Feel free to use or ignore as you see fit.\u003C/p\u003E\u003Cp\u003Eedit: On second thoughts, maybe using preprocessor directives isn\u0027t the best way to do the more button. I had though that it would be a neat way of avoiding compiler errors if callbackMoreButton is not defined, but that\u0027s more of a C\u002B\u002B tiny-microprocessor must-save-memory way of thinking, and some plugin authors might want to enable/disable the button at runtime in IsCompatible.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-07T23:59:56Z\u0022 title=\u002202/07/2014 11:59  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 7, 2014\u003C/time\u003E by Kermunist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-02-08T15:22:21Z","Content":"\n\u003Cp\u003EMy only thought is that we are starting to get maybe too complex.\u003C/p\u003E\u003Cp\u003EThis is a simple mod that people can copy-paste into their mod to tell them a mod is out of date.\u003C/p\u003E\u003Cp\u003EAll I\u0027d like to see is a \u0027Name\u0027 and a \u0027Text\u0027 string added.\u003C/p\u003E\u003Cp\u003EName is the name of the mod, if blank use the Namespace as current.\u003C/p\u003E\u003Cp\u003EText is a short string (would be character limited, 60?) the mod author can add about what/why the mod is doing now that it is detected that it is out of date. This stays blank if left blank.\u003C/p\u003E\u003Cp\u003EI\u0027m asking for the Name because the namespace does not necessarily have anything to do with the mod. My Vertical Velocity mod started out as a simple thrust canceler at \u0027Thurst-Weight Ratio 1\u0027 so my mod\u0027s namespace was TWR1, which then came up as the mod out of date. This really has nothing to do with Vertical Velocity so a player would have no clue which mod was throwing the out of date warning.\u003C/p\u003E\u003Cp\u003EText is then a bit more detail if the author wants, or they can just leave it blank if all they want is the out of date warning.\u003C/p\u003E\u003Cp\u003EThe plugin status/reasons/more button I think is something that should be incorporated into the mod themselves based on the IsCompatible flag.\u003C/p\u003E\u003Cp\u003EThe simpler CompatibilityChecker stays, the wider adoption it is going to get (IMO).\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-04-02T19:54:15Z","Content":"\n\u003Cp\u003ELesson learned today: \u003Cstrong\u003EDO NOT\u003C/strong\u003E check for Versioning.BuildID - it \u003Cstrong\u003EWILL\u003C/strong\u003E bite you.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2014-04-03T01:02:48Z","Content":"\n\u003Cp\u003EThe KSP 0.23.5 release was the first real test of CompatibilityChecker. Some things I noticed:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe ARM patch was a departure from KSP\u0027s established versioning scheme. I\u0027m hoping this was a one-time mistake. Still, it\u0027s important that implementers consciously decide which version components to check against (and how) rather than copy-pasting an existing implementation.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESome users saw warnings from mods and concluded that any mod which was \u003Cem\u003Enot\u003C/em\u003E listed must be working fine. This is obviously incorrect. (Not all mods implement CompatibilityChecker.) To alleviate this, I suggest the next version additionally list mods which \u003Cem\u003Edo\u003C/em\u003E implement the checker but pass the compatibility check. The warning can then communicate that no compatibility information is known about the remaining mods.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EA number of people wrote things like \u0022it gave me a warning, but the mod seems to work anyway\u0022. I haven\u0027t yet seen any implementations that actually lock down when incompatible, but that\u0027s probably still worth considering.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe warning has effectively dissuaded people from using newer versions of mods with older versions of KSP. Keep this in mind when designing your compatibility function: only allow older KSP versions if you know for sure your mod is still compatible.\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-04-03T08:16:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EThe ARM patch was a departure from KSP\u0027s established versioning scheme. I\u0027m hoping this was a one-time mistake.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDon\u0027t count on it. I am working in the software business, too, and I\u0027ve seen this happening here.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003ETo alleviate this, I suggest the next version additionally list mods which \u003Cem\u003Edo\u003C/em\u003E implement the checker but pass the compatibility check. The warning can then communicate that no compatibility information is known about the remaining mods.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESounds fine by me, but the popup could get quite big.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EA number of people wrote things like \u0022it gave me a warning, but the mod seems to work anyway\u0022. I haven\u0027t yet seen any implementations that actually lock down when incompatible, but that\u0027s probably still worth considering.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would be unsure about what features to lock, so I just didn\u0027t lock any. Also, being in the experimentals team helps to figure out what broke \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-04-04T03:31:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EThe ARM patch was a departure from KSP\u0027s established versioning scheme. I\u0027m hoping this was a one-time mistake. Still, it\u0027s important that implementers consciously decide which version components to check against (and how) rather than copy-pasting an existing implementation.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m hoping the same; KJR implemented CompatibilityChecker, but I expected 0.24 to be the update with the joint fixes, not 0.23.5, so problems. I\u0027ll have to remember to check the revision number as well for the next update.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EA number of people wrote things like \u0022it gave me a warning, but the mod seems to work anyway\u0022. I haven\u0027t yet seen any implementations that actually lock down when incompatible, but that\u0027s probably still worth considering.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHopefully locking things down won\u0027t be necessary, but I also think that the warning message needs to be tailored so that too many players don\u0027t decide that they\u0027re all completely bogus and can be ignored. It would really suck for the warning to receive the same amount of attention a EULA gets, because then we\u0027ll be back where we started.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-04-04T04:13:26Z","Content":"\n\u003Cp\u003EMy implementation for RealChute does lock down if incompatible. Since the moving parts are only two PartModules, returning in the overrides and in the Unity functions if incompatible does the trick.\u003C/p\u003E\u003Cp\u003EApart than that, I do support listing mods that do pass the test. It would probably be a little clearer for the end user.\u003C/p\u003E\n"}]}