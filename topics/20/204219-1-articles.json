{"TopicId":204219,"ForumId":20,"TopicTitle":"Temporary fix for docking port drift bug?","CreatedByName":"RealKerbal3x","CreatedById":183830,"CreatedDateTime":"2021-08-05T17:41:14Z","PageNum":1,"Articles":[{"CreatedByName":"RealKerbal3x","CreatedById":183830,"CreatedDateTime":"2021-08-05T17:41:14Z","Content":"\n\u003Cp\u003E\nWith 1.12.2 potentially being the last patch for KSP, it\u0027s possible that we\u0027ll never see an official fix for the docking port drift bug, which has the potential to really mess with a lot of craft. So I\u0027ve been wondering if disabling the rotation functionality in some way\u00A0would be enough to avoid the bug for the time being.\n\u003C/p\u003E\n\u003Cp\u003E\nJust spitballing here, but there are 3 ways I can think of to go about this:\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nDirectly editing the docking ports\u0027 config files to change \u0027canRotate\u0027 to \u0027False\u0027: From my limited testing, this did disable rotation functionality (as expected), but I\u0027m not sure if it\u0027s actually eliminating drift, and obviously editing the game files to fix things isn\u0027t a great practice.\n\u003C/li\u003E\n\u003Cli\u003E\nSame as above, but doing it with a Module Manager patch instead: Theoretically this is a better solution than direct file editing, but I wasn\u0027t able to get it to work (I\u0027m probably just inexperienced with \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E syntax). And, same as above, I\u0027m not sure if flipping a \u0027true/false\u0027 switch in the config file is enough to eliminate the bug.\n\u003C/li\u003E\n\u003Cli\u003E\nWriting a plugin to completely disable the docking port rotation code: This is probably the most likely to work, and while it\u0027s way out of my skillset at the moment I\u0027m open to learning how to do it.\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\nI\u0027m open to suggestions,\u00A0as everyone in this subforum\u00A0is definitely smarter than me. Hopefully we do get a 1.12.3 or something at some point that fixes this bug, and this temporary fix doesn\u0027t end up becoming permanent.\n\u003C/p\u003E\n"},{"CreatedByName":"modus","CreatedById":207631,"CreatedDateTime":"2021-08-06T14:27:50Z","Content":"\n\u003Cp\u003E\nIf it\u0027s 2 or 3 I\u0027m sure one or more heros will step up\u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022:wink:\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nHowever (and I\u0027m saying this as a total layman), are we sure that the problem is only caused by the rotation functionality )? I mean, what we see is: \u0027new rotation option =\u0026gt;drift\u0027 so it seems a logical conclusion, but maybe there are more/other changes in the code that cause the drifting problem?\n\u003C/p\u003E\n"},{"CreatedByName":"RealKerbal3x","CreatedById":183830,"CreatedDateTime":"2021-08-06T14:40:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224015484\u0022 data-ipsquote-contentid=\u0022204219\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221628260070\u0022 data-ipsquote-userid=\u0022207631\u0022 data-ipsquote-username=\u0022modus\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, modus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf it\u0027s 2 or 3 I\u0027m sure one or more heros will step up\u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022:wink:\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nHowever (and I\u0027m saying this as a total layman), are we sure that the problem is only caused by the rotation functionality )? I mean, what we see is: \u0027new rotation option =\u0026gt;drift\u0027 so it seems a logical conclusion, but maybe there are more/other changes in the code that cause the drifting problem?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, being mostly uniformed about most of this stuff I have no idea where the problem is really coming from. However,\u00A0given that drift is also a problem with the robotic parts, I assumed that they share at least some code and that\u0027s what\u0027s causing the drifting.\n\u003C/p\u003E\n\u003Cp\u003E\nIf that\u0027s the case then I hope that it\u0027s possible to actually modify it using a plugin.\n\u003C/p\u003E\n"},{"CreatedByName":"OHara","CreatedById":162784,"CreatedDateTime":"2021-08-06T22:39:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224015062\u0022 data-ipsquote-contentid=\u0022204219\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221628185274\u0022 data-ipsquote-userid=\u0022183830\u0022 data-ipsquote-username=\u0022RealKerbal3x\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 8/5/2021 at 6:41 PM, RealKerbal3x said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nthe docking port drift bug\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou might have to explain what the bug is, exactly, because not every modder\u00A0will have run into this problem.\n\u003C/p\u003E\n\u003Cp\u003E\nI do notice that in version 1.12, if I put stress on the craft (I used \u0027hack gravity\u0027) so that all the joints give a little, then quicksave and quickload,\u003Cbr\u003E\nmost of the joints are initially back at their \u003Cstrong\u003Eunstressed \u003C/strong\u003Eposition upon quickload (\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/175776-workarounds-for-a-rapid-unscheduled-disassembly-after-quickloading-in-flight/\u0022 rel=\u0022\u0022\u003Ewhich has been true in earlier versions of KSP\u003C/a\u003E)\u003Cbr\u003E\nbut the joint between the docking ports loads back at its \u003Cstrong\u003Estressed\u003C/strong\u003E position, and then the load on the craft moves them \u003Cstrong\u003Efurther\u00A0\u003C/strong\u003E\u003Cbr\u003E\n(which is new, though similar behaviour was reported with the motorised joints in the new robotic parts).\n\u003C/p\u003E\n\u003Cp\u003E\nRepeated quicksaves and quickloads make the docking ports move further and further from their original positions.\n\u003C/p\u003E\n\u003Cp\u003E\nA module-manager patch to remove all the new options\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\u003Cspan class=\u0022lit\u0022\u003E@PART\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[*]:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EHAS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E@MODULE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleDockingNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E@MODULE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleDockingNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E@canRotate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ErotationTransformName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edelete\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmaxMotorOutput \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edelete\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ErotationTransformName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edelete\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmaxMotorOutput \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edelete\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERESOURCE \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ErotationAxis \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edelete\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cu\u003Edoes not solve the problem\u003C/u\u003E with the docking-ports moving after repeated quickload/quicksave.\n\u003C/p\u003E\n\u003Cp\u003E\nSo something changed the rules about how these particular joints are saved in the savefile.\u00A0 I \u003Cem\u003Esuspect \u003C/em\u003Ethe trigger for the new rule might be \u0027\u003Ca href=\u0022https://www.kerbalspaceprogram.com/api/class_module_docking_node.html\u0022 rel=\u0022external nofollow\u0022\u003EIJointLockState\u003C/a\u003E\u0027 because ModuleDockingNode now inherits from IJointLockState.\u00A0 \u00A0I do not know any way to change that inheritance.\n\u003C/p\u003E\n\u003Cp\u003E\nOf course, we could all just use KSP 1.7.3 or maybe 1.9.1.\u003Cbr\u003E\nOlder versions of KSP had the ability to align docking ports, having the docking ports joint only when aligned, if we \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/139980-130-community-database-of-module-manager-patches-for-stock-ksp/\u0026amp;do=findComment\u0026amp;comment=2792938\u0022 rel=\u0022\u0022\u003Eenabled the option with a module-manager patch\u003C/a\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\u003Cspan class=\u0022lit\u0022\u003E@PART\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[*]:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EHAS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E@MODULE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleDockingNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*]:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EHAS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[~\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EsnapOffset\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]]]:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EFINAL \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E@MODULE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleDockingNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        snapRotation \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        snapOffset \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E90\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        captureMinRollDot \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.9998\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// cosine 2\u00B0, adjust for different tolerance\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        acquireForce \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.5\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// per user preference, default is 2.0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222021-08-08T12:11:06Z\u0022 title=\u002208/08/2021 12:11  PM\u0022 data-short=\u00222 yr\u0022\u003EAugust 8, 2021\u003C/time\u003E by OHara\u003C/strong\u003E\n\u003Cbr\u003EMake the fixed-angle docking patch from Community Patches compatible with the mod below (which renames ModuleDockingNode to ModuleDockingNodeFixed)\n\u003C/span\u003E\n"},{"CreatedByName":"Anth","CreatedById":161238,"CreatedDateTime":"2021-08-07T07:15:21Z","Content":"\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022114736\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed2049325867\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/204248-112x-fix-stock-docking-nodes-7th-august-2021/\u0026amp;do=embed\u0022 style=\u0022height:195px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre style=\u0022color:#000000;\u0022\u003Eusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing UnityEngine;\n\nnamespace FixDockingNodes\n{\n    public class ModuleDockingNodeFixed : ModuleDockingNode\n    {\n        protected override void ApplyCoordsUpdate()\n        {\n            if (HighLogic.LoadedSceneIsFlight \u0026amp;\u0026amp; canRotate \u0026amp;\u0026amp; !nodeIsLocked \u0026amp;\u0026amp; otherNode != null \u0026amp;\u0026amp; vessel != null \u0026amp;\u0026amp; part.vessel != null)\n            {\n                RecurseCoordUpdate(part.vessel.rootPart, part.vessel.rootPart);\n            }\n        }\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\nThat\u0027s the code if you were wondering how it was fixed.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"modus","CreatedById":207631,"CreatedDateTime":"2021-08-07T07:42:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224015484\u0022 data-ipsquote-contentid=\u0022204219\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221628260070\u0022 data-ipsquote-userid=\u0022207631\u0022 data-ipsquote-username=\u0022modus\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, modus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m sure one or more heros will step up\u003Cimg alt=\u0022;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\ntold you!\n\u003C/p\u003E\n"},{"CreatedByName":"RealKerbal3x","CreatedById":183830,"CreatedDateTime":"2021-08-07T09:31:05Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224015930\u0022 data-ipsquote-contentid=\u0022204219\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221628322133\u0022 data-ipsquote-userid=\u0022207631\u0022 data-ipsquote-username=\u0022modus\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, modus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\ntold you!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nGreat to see a fix \u003Cspan\u003E\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"OHara","CreatedById":162784,"CreatedDateTime":"2021-08-07T12:15:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224015923\u0022 data-ipsquote-contentid=\u0022204219\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221628320521\u0022 data-ipsquote-userid=\u0022161238\u0022 data-ipsquote-username=\u0022Anth12\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Anth12 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s the code if you were wondering how it was fixed.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s interesting.\u00A0 Very\u00A0short mod.\u00A0 Now I see the new function ApplyCoordUpdate was added to \u003Ca href=\u0022https://www.kerbalspaceprogram.com/api/class_module_docking_node.html\u0022 rel=\u0022external nofollow\u0022\u003EModuleDockingNode\u003C/a\u003E\u00A0and there is a function of the same name in \u003Ca href=\u0022https://www.kerbalspaceprogram.com/api/class_expansions_1_1_serenity_1_1_base_servo.html\u0022 rel=\u0022external nofollow\u0022\u003EServoBase\u003C/a\u003E from Breaking Ground.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo the mod restores the original\u00A0positions of all\u00A0\u003Cem\u003Eparts\u003C/em\u003E\u00A0on a branch of the craft involving an unlocked docking port, before any quicksave or upon reload.\u00A0 So if we \u003Cu\u003Edid\u003C/u\u003E rotate any docking ports to straighten out a space station, that straightening will be un-done upon reload, which seems fine given the request..\u00A0 I am confused what might happen on something like a Canadarm with docking ports and robotic parts working together.\u00A0 We can AdvTweakable::Rotation:unlocked on\u00A0those docking ports where we do not want the effects of this mod.\n\u003C/p\u003E\n\u003Cp\u003E\nIdeally, given how the original KSP saved craft, we would restore the\u00A0\u003Cem\u003Eunstressed\u003C/em\u003E\u00A0position rather than the \u003Cem\u003Eoriginal\u003C/em\u003E position.\u00A0 That is, save the positions of the craft including effect of\u00A0motorised joints but not the effects of stress on the craft.\u00A0 In hindsight, maybe KSP should have saved the current flex on each joint, in addition to part-positions, so it could later distinguish flex from motorised motion.\n\u003C/p\u003E\n\u003Cp\u003E\nThe Klaw was the first part that would pivot and flex, so it has has for a long time showed this drift upon save/reload.\u00A0 That is why I though the root of the problem might be in \u003Ca href=\u0022https://www.kerbalspaceprogram.com/api/interface_i_joint_lock_state.html\u0022 rel=\u0022external nofollow\u0022\u003EJointLockState\u003C/a\u003E, which is common to all the affected parts, but JointLockState doesn\u0027t seem to keeping track of the rotation of the joint, at least not publicly.\n\u003C/p\u003E\n"}]}