{"TopicId":141323,"ForumId":20,"TopicTitle":"kOS Rover Control!","CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-06T21:08:45Z","PageNum":1,"Articles":[{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-06T21:08:45Z","Content":"\n\u003Cp\u003E\nRecently, I got hooked on the kOS mod, which implements coding in KSP. I\u0027m currently developing methods of rover control, both manual and automatic. I\u0027d appreciate any and all ideas / suggestions / whatever!\n\u003C/p\u003E\n"},{"CreatedByName":"Overland","CreatedById":119812,"CreatedDateTime":"2016-06-07T03:04:08Z","Content":"\n\u003Cp\u003E\nIm on my phone right now so forgive the small response..\n\u003C/p\u003E\n\u003Cp\u003E\nId love a trailing car alerter system for a land train that activates an engine functioning as an alarm speaker for when the last wagon starts to track badly and bounce around..\n\u003C/p\u003E\n\u003Cp\u003E\nThus not having to switch to external view to check the train status\n\u003C/p\u003E\n\u003Cp\u003E\nAlso the same script triggering the rotary beacons at 8 ms and the siren at any speed below 5 ms..similar to a railway bell for when in KSC depot\n\u003C/p\u003E\n\u003Cp\u003E\nAnd if we can add a 25 ms auto speed governer that shuts off wheel power at anything above that.. Id be very happy \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00222BcMnB0.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022562\u0022 src=\u0022http://i.imgur.com/2BcMnB0.jpg\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nOh and a welcome message on bootup of the script that mentions the trains tag.. Eg LTV-102 etc\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nToo much? \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"FleshJeb","CreatedById":111640,"CreatedDateTime":"2016-06-07T04:54:37Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/119812-overland/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022119812\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/119812-overland/\u0022 rel=\u0022\u0022\u003E@Overland\u003C/a\u003E\u00A0The last three would be pretty easy. The first one. . .\u00A0I wonder if the\u00A0Double-C Seismic Accelerometer reads differently on different parts of the train. That might be very doable... I\u0027m going to play with it tonight, but I don\u0027t have KOS installed, and there\u0027s no internet at home.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve tried to control tail-whip with various \u0022cabooses\u0022, but no luck yet.\n\u003C/p\u003E\n"},{"CreatedByName":"Overland","CreatedById":119812,"CreatedDateTime":"2016-06-07T07:22:15Z","Content":"\n\u003Cp\u003E\nThanks \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E I actually dont get tail whip half as much as I used to with steering drawbars im using now..the problem is with the wheel friction once it catches after say being accidently airborne from a drop in terrain\n\u003C/p\u003E\n\u003Cp\u003E\nI did have a crude version using wheelsound mods skid sound and a tiny wheel used as a curb feeler.. Setting off an audible beep.. Sadly it was either too sencitive giving false readings or not enough and by the time it triggered..the wagon was throwing parts and exploding\n\u003C/p\u003E\n\u003Cp\u003E\nI appreciate the effort too \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E the forced move to rover based overland trains has been a bit of a blessing..\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWould raster prop monitor provide a read out??\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-07T15:53:48Z","Content":"\n\u003Cp\u003E\nI\u0027m working on a rover control library that implements a generic PID library.\n\u003C/p\u003E\n\u003Cp\u003E\nThe thing I\u0027m kind of stuck on is automatic navigation, either dynamic (paying attention to bearing to target and terrain slope), or manual (like Seth Persigehl\u0027s rover script).\n\u003C/p\u003E\n"},{"CreatedByName":"Pecan","CreatedById":96332,"CreatedDateTime":"2016-06-07T16:01:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222620180\u0022 data-ipsquote-contentid=\u0022141323\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465284135\u0022 data-ipsquote-userid=\u0022119812\u0022 data-ipsquote-username=\u0022Overland\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Overland said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022line-height:1.6;\u0022\u003E...Would raster prop monitor provide a read out??\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRPM was my first thought when you mentioned \u0022\u003Cspan style=\u0022color:rgb(39,42,52);font-family:\u0027Helvetica Neue\u0027, Helvetica, Arial, sans-serif;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:22.4px;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;background-color:rgb(255,255,255);\u0022\u003Ehaving to switch to external view to check the train\u0022. \u00A0Two things with RPM would help - first and most simply, the hull camera so you could have in-cab CCTV back along the length of your vehicle. \u00A0Another mod, which is almost a must for me, is Vessel Viewer. \u00A0With that integrated with RPM you\u0027ll get a dynamic schematic view of the whole vehicle.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-07T16:01:58Z\u0022 title=\u002206/07/2016 04:01  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 7, 2016\u003C/time\u003E by Pecan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-07T16:04:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222620642\u0022 data-ipsquote-contentid=\u0022141323\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465315303\u0022 data-ipsquote-userid=\u002296332\u0022 data-ipsquote-username=\u0022Pecan\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Pecan said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nRPM was my first thought when you mentioned \u0022\u003Cspan style=\u0022color:rgb(39,42,52);font-family:\u0027Helvetica Neue\u0027, Helvetica, Arial, sans-serif;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:22.4px;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;background-color:rgb(255,255,255);\u0022\u003Ehaving to switch to external view to check the train\u0022. \u00A0Two things with RPM would help - first and most simply, the hull camera so you could have in-cab CCTV back along the length of your vehicle. \u00A0Another mod, which is almost a must for me, is Vessel Viewer. \u00A0With that integrated with RPM you\u0027ll get a dynamic schematic view of the whole vehicle.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRasterPropMonitor does provide a readout if you have VesselView installed. It gives you a realtime schematic view of your ship.\n\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2016-06-07T17:31:27Z","Content":"\n\u003Cp\u003E\nMod discussion moved to Add On Discussions.\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-09T01:42:51Z","Content":"\n\u003Cp\u003E\nI just got done copying Seth Persigehl\u0027s rover.ks script to try to adapt it, but I\u0027m stuck...How do I properly implement a PID for both wheel steering and wheel throttle, to maintain constant speed and heading?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, can someone explain how to use boot scripts to do things like displaying info with HUDTEXT()?\n\u003C/p\u003E\n"},{"CreatedByName":"Waz","CreatedById":76393,"CreatedDateTime":"2016-06-09T13:05:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222623229\u0022 data-ipsquote-contentid=\u0022141323\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465436571\u0022 data-ipsquote-userid=\u0022101780\u0022 data-ipsquote-username=\u0022MAFman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, MAFman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAlso, can someone explain how to use boot scripts to do things like displaying info with HUDTEXT()?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nA boot script is just regular code. You should be able to call hudtext as normal.\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-13T17:36:34Z","Content":"\n\u003Cp\u003E\nI\u0027ve been having trouble with my roverDriver script again...My rover keeps driving in a left-handed circle probably 20m in radius... I got it to return no errors this time though! \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s my code...\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// Auto Nav\n// Takes a LATLNG() of a goal, and iteratively navigates to it.\nPARAMETER goal.\n\nFUNCTION POPULATE\n{\n\tSET pos TO LATLNG(SHIP:GEOPOSITION:LAT, SHIP:GEOPOSITION:LNG).\n\tSET a TO 3600/(2*CONSTANT:PI*BODY:RADIUS). // 10m in any cardinal direction\n\tSET b TO SIN(45)*a.\n\t\n\tSET oA TO LATLNG(pos:LAT \u002B a, pos:LNG). // North\n\tSET oB TO LATLNG(pos:LAT \u002B B, pos:LNG \u002B b). // Northeast\n\tSET oC TO LATLNG(pos:LAT, pos:LNG \u002B a). // East\n\tSET oD TO LATLNG(pos:LAT - b, pos:LNG \u002B b). // Southeast\n\tSET oE TO LATLNG(pos:LAT - a, pos:LNG). // South\n\tSET oF TO LATLNG(pos:LAT - b, pos:LNG - b). // Southwest\n\tSET oG TO LATLNG(pos:LAT, pos:LNG - a). //West\n\tSET oH TO LATLNG(pos:LAT \u002B b, pos:LNG - b). // Northwest\n\t\n\tSET options TO LIST(oA, oB, oC, oD, oE, oF, oG, oH).\n\tRETURN options.\n}\nFUNCTION SLOPE_IS_OK\n{\n\tPARAMETER point.\n\tSET location TO LATLNG(point:LAT, point:LNG).\n\tSET slope TO ABS(ARCTAN2((location:TERRAINHEIGHT - SHIP:ALTITUDE), 10)).\n\tIF slope \u0026lt; 11.25\n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\nFUNCTION ANGLE_IS_OK\n{\n\tPARAMETER point, goal.\n\tSET angle TO ABS(goal:BEARING - point:BEARING).\n\tIF angle \u0026lt; 45\n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\nFUNCTION DECIDE_NEXT\n{\n\tPARAMETER options, goal.\n\tFOR o IN options\n\t{\n\t\tIF SLOPE_IS_OK(o) AND ANGLE_IS_OK(goal, o)\n\t\t{\n\t\t\tSET nextPoint TO LATLNG(o:LAT, o:LNG).\n\t\t\tRETURN nextPoint.\n\t\t\tBREAK.\n\t\t}\n\t\tELSE\n\t\t{\n\t\t\t// Just keep swimming...\n\t\t}\n\t}\n}\nFUNCTION DRIVE\n{\n\tPARAMETER waypt.\n\tSET spd TO 10. SET hdg TO waypt:HEADING.\n\tSET loopT TO 0.01. SET loopEndT TO TIME:SECONDS.\n\tSET pWT TO 0. SET iWT TO 0. SET dWT TO 0. SET lastPWT TO 0.\n\tSET wtVal TO 0.\n\tSET NORTHPOLE TO LATLNG(90,0).\n\tSET runmode TO 0.\n\tIF waypt:DISTANCE \u0026lt; 5\n\t{\n\t\tBRAKES ON. SET runmode TO -1.\n\t}\n\tUNTIL runmode = -1\n\t{\n\t\tIF NORTHPOLE:BEARING \u0026lt;= 0\n\t\t{\n\t\t\tset cHdg TO ABS(NORTHPOLE:BEARING).\n\t\t}\n\t\tELSE\n\t\t{\n\t\t\tSET cHdg TO (180 - NORTHPOLE:BEARING) \u002B 180.\n\t\t}\n\t\tIF runmode = 0\n\t\t{\n\t\t\tSET pWT TO spd - GROUNDSPEED.\n\t\t\tSET iWT TO MIN(1, MAX(-1, iWT \u002B (pWT * loopT))).\n\t\t\tSET dWT TO ((pWT - lastPWT) / (loopEndT - loopT)).\n\t\t\tSET wtVal TO MIN(1, MAX(-1, pWT \u002B iWT \u002B dWT)).\n\t\t\t\n\t\t\tSET SHIP:CONTROL:WHEELTHROTTLE TO wtVal.\n\t\t\tSET SHIP:CONTROL:WHEELSTEER TO hdg.\n\t\t\tSET loopT TO TIME:SECONDS - loopEndT.\n\t\t\tSET loopEndT TO TIME:SECONDS.\n\t\t}\n\t}\n}\nUNTIL goal:DISTANCE \u0026lt; 5\n{\n\tPOPULATE().\n\tDECIDE_NEXT(options, goal).\n\tDRIVE(nextPoint).\n\tBRAKES ON. WAIT 5. BRAKES OFF.\n}\nBRAKES ON.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-13T20:43:00Z","Content":"\n\u003Cp\u003E\nOk, fixed the driving-in-circles thing. Now it just drives backward and doesn\u0027t control the steering or throttle at all! I think the decision-making algorithm works, though...\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// Auto Nav\n// Takes a LATLNG() of a goal, and iteratively navigates to it.\nPARAMETER goal.\nGEAR OFF. LOCK THROTTLE TO 0. SAS OFF. RCS OFF. BRAKES ON.\nFUNCTION POPULATE\n{\n\tSET pos TO LATLNG(SHIP:GEOPOSITION:LAT, SHIP:GEOPOSITION:LNG).\n\tSET a TO (360 * 1000)/(2*CONSTANT:PI*BODY:RADIUS). // 10m in any cardinal direction\n\tSET b TO SIN(45)*a.\n\t\n\tSET oA TO LATLNG((pos:LAT \u002B a), (pos:LNG)). // North\n\tSET oB TO LATLNG((pos:LAT \u002B b), (pos:LNG \u002B b)). // Northeast\n\tSET oC TO LATLNG((pos:LAT), (pos:LNG \u002B a)). // East\n\tSET oD TO LATLNG((pos:LAT - b), (pos:LNG \u002B b)). // Southeast\n\tSET oE TO LATLNG((pos:LAT - a), (pos:LNG)). // South\n\tSET oF TO LATLNG((pos:LAT - b), (pos:LNG - b)). // Southwest\n\tSET oG TO LATLNG((pos:LAT), (pos:LNG - a)). //West\n\tSET oH TO LATLNG((pos:LAT \u002B b), (pos:LNG - b)). // Northwest\n\t\n\tSET options TO LIST(oA, oB, oC, oD, oE, oF, oG, oH).\n\tRETURN options.\n}\nFUNCTION SLOPE_IS_OK\n{\n\tPARAMETER point.\n\tSET location TO LATLNG(point:LAT, point:LNG).\n\tSET slope TO ABS(ARCTAN2((location:TERRAINHEIGHT - SHIP:ALTITUDE), 10)).\n\tIF slope \u0026lt; 11.25\n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\nFUNCTION ANGLE_IS_OK\n{\n\tPARAMETER point, goal.\n\tSET angle TO ABS(goal:BEARING - point:BEARING).\n\tIF angle \u0026lt; 45\n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\nFUNCTION DECIDE_NEXT\n{\n\tPARAMETER options, goal.\n\tFOR o IN options\n\t{\n\t\tIF SLOPE_IS_OK(o) AND ANGLE_IS_OK(goal, o)\n\t\t{\n\t\t\tSET nextPoint TO LATLNG(o:LAT, o:LNG).\n\t\t\tRETURN nextPoint.\n\t\t\tBREAK.\n\t\t}\n\t\tELSE\n\t\t{\n\t\t\t// Just keep swimming...\n\t\t}\n\t}\n}\nFUNCTION DRIVE\n{\n\tPARAMETER waypt.\n\t\n\tSET spd TO 5.\n\tSET loopT TO 0.01. SET loopEndT TO TIME:SECONDS.\n\tSET eWT TO 0. SET iWT TO 0. SET wtVAL TO 0.\n\tSET NORTHPOLE TO LATLNG(90,0).\n\tSET eSteer TO 0.\n\tLOCK turnLimit TO MIN(1, 1.5/GROUNDSPEED).\n\t\n\tUNTIL waypt:DISTANCE \u0026lt; 2.5\n\t{\n\t\tIF NORTHPOLE:BEARING \u0026lt;= 0\n\t\t{\n\t\t\tSET cHead TO ABS(NORTHPOLE:BEARING).\n\t\t}\n\t\t\n\t\tELSE\n\t\t{\n\t\t\tSET cHead TO (180 - NORTHPOLE:BEARING) \u002B 180.\n\t\t}\n\t\t\n\t\tSET wtVAL TO MIN(1, MAX(-1, (-eWT \u002B iWT))).\n\t\tSET eSteer TO (hdg - cHead).\n\t\t\n\t\tIF eSteer \u0026gt; 180\n\t\t\t{\n\t\t\t\t//Make sure the headings make sense\n\t\t\t\tSET eSteer TO eSteer - 360.\n\t\t\t}\n\t\tELSE IF eSteer \u0026lt; -180\n\t\t{\n\t\t\tSET eSteer TO eSteer \u002B 360.\n\t\t}\n\t\t\n\t\tIF spd - GROUNDSPEED \u0026gt; spd \u002B spd * 0.1 // We\u0027re too fast!\n\t\t{\n\t\t\tLOCK THROTTLE TO -1.\n\t\t}\n\t\tELSE IF GROUNDSPEED \u0026lt; spd - spd * 0.1\n\t\t{\n\t\t\tLOCK THROTTLE TO 1.\n\t\t}\n\t\t\n\t\tSET desiredSteering TO -eSteer / 10.\n\t\tset kturn to min(1, max( -1, desiredSteering)).\n\t\t\t\n\t\t\n\t\tSET SHIP:CONTROL:WHEELSTEER TO kTurn.\n\t\t\n\t\tPRINT(\u0022Distance to waypoint: \u0022 \u002B ROUND(waypt:DISTANCE, 2)) AT (2, 21).\n\t\tPRINT(\u0022Wheel Throttle: \u0022 \u002B wtVAL) AT (2,22).\n\t\t\n\t\tSET loopT TO TIME:SECONDS - loopEndT.\n\t\tSET loopEndT TO TIME:SECONDS.\n\t}\n}\nUNTIL goal:DISTANCE \u0026lt; 50\n{\n\tIF SHIP:SENSORS:LIGHT \u0026lt; 0.75\n\t{\n\t\tLIGHTS ON.\n\t}\n\tELSE\n\t{\n\t\tLIGHTS OFF.\n\t}\n\tCLEARSCREEN.\n\tPOPULATE().\n\tPRINT(\u0022=====Autonavigation v1.0=====\u0022) AT (0,2).\n\tPRINT(\u0022Populating options...\u0022) AT (2,5).\n\t\n\tWAIT 1.\n\t\n\tPRINT(\u0022Options: \u0022 \u002B ROUND(oA:LAT, 5) \u002B \u0022, \u0022 \u002B ROUND(oA:LNG, 2)) AT (2,10).\n\tPRINT(ROUND(oB:LAT, 5) \u002B \u0022, \u0022 \u002B ROUND(oB:LNG, 2)) AT (11,11).\n\tPRINT(ROUND(oC:LAT, 5) \u002B \u0022, \u0022 \u002B ROUND(oC:LNG, 2)) AT (11,12).\n\tPRINT(ROUND(oD:LAT, 5) \u002B \u0022, \u0022 \u002B ROUND(oD:LNG, 2)) AT (11,13).\n\tPRINT(ROUND(oE:LAT, 5) \u002B \u0022, \u0022 \u002B ROUND(oE:LNG, 2)) AT (11,14).\n\tPRINT(ROUND(oF:LAT, 5) \u002B \u0022, \u0022 \u002B ROUND(oF:LNG, 2)) AT (11,15).\n\tPRINT(ROUND(oG:LAT, 5) \u002B \u0022, \u0022 \u002B ROUND(oG:LNG, 2)) AT (11,16).\n\tPRINT(ROUND(oH:LAT, 5) \u002B \u0022, \u0022 \u002B ROUND(oH:LNG, 2)) AT (11,17).\n\t\n\tWAIT 1.\n\tDECIDE_NEXT(options, goal).\n\tPRINT(\u0022Driving to \u0022 \u002B \u0022(\u0022 \u002B ROUND(nextPoint:LAT,5) \u002B \u0022, \u0022 \u002B ROUND(nextPoint:LNG, 5) \u002B \u0022)\u0022) AT (2,20).\n\tBRAKES OFF.\n\tIF nextPoint:BEARING \u0026gt; 20\n\t{\n\t\tLOCK WHEELSTEER TO nextPoint. LOCK WHEELTHROTTLE TO -0.5.\n\t\tWAIT UNTIL nextPoint:BEARING \u0026lt; 30.\n\t}\n\tDRIVE(nextPoint).\n\tBRAKES ON. WAIT 5. BRAKES OFF.\n}\nBRAKES ON.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-13T21:06:42Z","Content":"\n\u003Cp\u003E\nUPDATE: Found the bug!\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// Auto Nav\n// Takes a LATLNG() of a goal, and iteratively navigates to it.\nPARAMETER goal.\n\nFUNCTION POPULATE\n{\n\tSET pos TO LATLNG(SHIP:GEOPOSITION:LAT, SHIP:GEOPOSITION:LNG).\n\tSET a TO 360000/(2*CONSTANT:PI*BODY:RADIUS). // 10m in any cardinal direction\n\tSET b TO SIN(45)*a.\n\t\n\tSET oA TO LATLNG(pos:LAT \u002B a, pos:LNG). // North\n\tSET oB TO LATLNG(pos:LAT \u002B B, pos:LNG \u002B b). // Northeast\n\tSET oC TO LATLNG(pos:LAT, pos:LNG \u002B a). // East\n\tSET oD TO LATLNG(pos:LAT - b, pos:LNG \u002B b). // Southeast\n\tSET oE TO LATLNG(pos:LAT - a, pos:LNG). // South\n\tSET oF TO LATLNG(pos:LAT - b, pos:LNG - b). // Southwest\n\tSET oG TO LATLNG(pos:LAT, pos:LNG - a). //West\n\tSET oH TO LATLNG(pos:LAT \u002B b, pos:LNG - b). // Northwest\n\t\n\tSET options TO LIST(oA, oB, oC, oD, oE, oF, oG, oH).\n\tRETURN options.\n}\nFUNCTION SLOPE_IS_OK\n{\n\tPARAMETER point.\n\tSET location TO LATLNG(point:LAT, point:LNG).\n\tSET slope TO ABS(ARCTAN2((location:TERRAINHEIGHT - SHIP:ALTITUDE), 10)).\n\tIF slope \u0026lt; 11.25\n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\nFUNCTION ANGLE_IS_OK\n{\n\tPARAMETER point, goal.\n\tSET angle TO ABS(goal:BEARING - point:BEARING).\n\tIF angle \u0026lt; 45\n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\nFUNCTION DECIDE_NEXT\n{\n\tPARAMETER options, goal.\n\tFOR o IN options\n\t{\n\t\tIF SLOPE_IS_OK(o) AND ANGLE_IS_OK(goal, o)\n\t\t{\n\t\t\tSET nextPoint TO LATLNG(o:LAT, o:LNG).\n\t\t\tRETURN nextPoint.\n\t\t\tBREAK.\n\t\t}\n\t\tELSE\n\t\t{\n\t\t\t// Just keep swimming...\n\t\t}\n\t}\n}\nFUNCTION DRIVE\n{\n\tPARAMETER waypt.\n\tCLEARSCREEN.\n\tSET spd TO 10. SET hdg TO waypt:HEADING.\n\tSET loopT TO 0.01. SET loopEndT TO TIME:SECONDS.\n\tSET pWT TO 0. SET iWT TO 0. SET dWT TO 0. SET lastPWT TO 0.\n\tSET eSteer TO 0. SET dSteer TO 0. SET lastESteer TO 0.\n\tSET wtVal TO 0.\n\tSET NORTHPOLE TO LATLNG(90,0).\n\tSET runmode TO 0.\n\tIF waypt:DISTANCE \u0026lt; 5\n\t{\n\t\tBRAKES ON. SET runmode TO -1.\n\t}\n\tUNTIL runmode = -1\n\t{\n\t\tIF NORTHPOLE:BEARING \u0026lt;= 0\n\t\t{\n\t\t\tset cHdg TO ABS(NORTHPOLE:BEARING).\n\t\t}\n\t\tELSE\n\t\t{\n\t\t\tSET cHdg TO (180 - NORTHPOLE:BEARING) \u002B 180.\n\t\t}\n\t\t\n\t\tIF runmode = 0\n\t\t{\n\t\t\tSET pWT TO spd - GROUNDSPEED.\n\t\t\tSET iWT TO MIN(1, MAX(-1, iWT \u002B (pWT * loopT))).\n\t\t\tSET dWT TO ((pWT - lastPWT) / (loopEndT - loopT)).\n\t\t\tSET wtVal TO MIN(1, MAX(-1, pWT \u002B iWT \u002B dWT)).\n\t\t\t\n\t\t\tSET eSteer TO (hdg - cHdg) / 180.\n\t\t\tSET dSteer TO ((eSteer - lastESteer)/(loopEndT - loopT)).\n\t\t\tSET steerVal TO -eSteer \u002B dSteer.\n\t\t\t\n\t\t\tSET SHIP:CONTROL:WHEELTHROTTLE TO wtVal.\n\t\t\tSET SHIP:CONTROL:WHEELSTEER TO steerVal.\n\t\t\t\n\t\t\tSET lastPWT TO pWT.\n\t\t\tSET lastESteer TO eSteer.\n\t\t\tSET loopT TO TIME:SECONDS - loopEndT.\n\t\t\tSET loopEndT TO TIME:SECONDS.\n\t\t}\n\t\tPRINT(\u0022pWT: \u0022 \u002B pWT) AT (2, 5).\n\t\tPRINT(\u0022iWT: \u0022 \u002B iWT) AT (2, 6).\n\t\tPRINT(\u0022dWT: \u0022 \u002B dWT) AT (2,7).\n\t\tPRINT(\u0022eSteer: \u0022 \u002B eSteer) AT (2, 9).\n\t\tPRINT(\u0022steerVal: \u0022 \u002B steerVal) AT (2,10).\n\t}\n}\nUNTIL goal:DISTANCE \u0026lt; 5\n{\n\tPOPULATE().\n\tDECIDE_NEXT(options, goal).\n\tDRIVE(nextPoint).\n\tBRAKES ON. WAIT 5. BRAKES OFF.\n}\nBRAKES ON.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-14T04:39:29Z","Content":"\n\u003Cp\u003E\nGah! I don\u0027t know what I did, but now it crashes KSP... time to start over...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCan someone help me develop this?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI need a kOS program that takes a LATLNG and iteratively navigates to it.\n\u003C/p\u003E\n\u003Cp\u003E\nSteps of the iteration:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n1: List possible options 100m away.\n\u003C/p\u003E\n\u003Cp\u003E\n2: Iterate through the list and pick the first option that meets the following criteria:\n\u003C/p\u003E\n\u003Cp\u003E\n2a. Slope is less than 15\u00B0.\n\u003C/p\u003E\n\u003Cp\u003E\n2b. Angle between goal and option is less than 45\u00B0.\n\u003C/p\u003E\n\u003Cp\u003E\n3. If the second condition cannot be met, meet only the first condition.\n\u003C/p\u003E\n\u003Cp\u003E\n4. Drive at 5 m/s toward the waypoint, stopping upon arrival (distance \u0026lt; 5m).\n\u003C/p\u003E\n\u003Cp\u003E\n5. Upon reaching the goal, halt and exit.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-06-25T21:59:06Z","Content":"\n\u003Cp\u003E\nI have something that looks promising, but it refuses to run... Can someone tell me why?\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EPARAMETER hdg. // 0 -\u0026gt; 359; 0 = north, 90 = east, etc.\n\nFUNCTION NOTIFY\n{\n\tPARAMETER message.\n\tHUDTEXT(\u0022kOS: \u0022 \u002B message, 5, 2, 50, GREEN, FALSE).\n}\n\nFUNCTION SET_GOAL\n{\n\tPARAMETER theta.\n\tSET pos TO SHIP:GEOPOSITION.\n\tSET h TO pos:TERRAINHEIGHT.\n\tSET r TO BODY:RADIUS.\n\t\n\tSET d TO (2 * CONSTANT:PI * BODY:RADIUS) * ARCSIN(SQRT((R\u002Bh)^2-R^2)/((R\u002Bh)/360)). // Radio horizon equation\n\tSET delta TO d * 0.95. // 5% safety margin\n\t\n\tSET goal TO LATLNG\t(\tpos:LAT \u002B (delta * SIN(theta)),\n\t\t\t\t\t\t\tpos:LNG \u002B (delta * COS(theta))\n\t\t\t\t\t\t).\n\tRETURN goal.\n}\n\nFUNCTION ARRIVED\n{\n\tPARAMETER location, setpoint.\n\t\n\tSET here TO LATLNG(location:LAT, location:LNG).\n\tSET there TO LATLNG(setpoint:LAT, setpoint:LNG).\n\t\n\tSET dist TO BODY:RADIUS * ARCCOS((SIN(here:LNG) * SIN(there:LNG)) \u002B (COS(here:LNG) * COS(there:LNG) * COS(ABS(here:LAT - there:LAT)))).\n\t\n\tIF dist \u0026lt; 10\n\t{\n\t\tSET arrived TO TRUE.\n\t}\n\tELSE\n\t{\n\t\tSET arrived TO FALSE.\n\t}\n\tRETURN arrived.\n}\n\nFUNCTION POPULATE\n{\n\tSET loc TO LATLNG(SHIP:GEOPOSITION).\n\tSET off_90 TO 36000/(2*CONSTANT:PI*BODY:RADIUS).\n\tSET off_675 TO off_90 * SIN(67.5).\n\tSET off_45 TO off_90 * SIN(45).\n\tSET off_225 TO off_90 * SIN(22.5).\n\t\n\tSET a TO LATLNG(loc:LAT \u002B off_90, loc:LNG).\t\t\t\t// N\n\tSET b TO LATLNG(loc:LAT \u002B off_675, loc:LNG \u002B off_225). \t// NNE\n\tSET c TO LATLNG(loc:LAT \u002B off_45, loc:LNG \u002B off_45). \t// NE\n\tSET d TO LATLNG(loc:LAT \u002B off_225, loc:LNG \u002B off_675).\t// ENE\n\tSET e TO LATLNG(loc:LAT, LOC:LNG \u002B off_90).\t\t\t\t// E\n\tSET f TO LATLNG(loc:LAT - off_225, loc:LNG \u002B off_675).\t// ESE\n\tSET g TO LATLNG(loc:LAT - off_45, loc:LNG \u002B off_45).\t// SE\n\tSET h TO LATLNG(loc:LAT - off_675, loc:LNG \u002B off_225).\t// SSE\n\tSET i TO LATLNG(loc:LAT - off_90, loc:LNG).\t\t\t\t// S\n\tSET j TO LATLNG(loc:LAT - off_675, loc:LNG - off_225).\t// SSW\n\tSET k TO LATLNG(loc:LAT - off_45, loc:LNG - off_45).\t// SW\n\tSET l TO LATLNG(loc:LAT - off_225, loc:LNG - off_675).\t// WSW\n\tSET m TO LATLNG(loc:LAT, loc:LNG - off_90).\t\t\t\t// W\n\tSET n TO LATLNG(loc:LAT \u002B off_225, loc:LNG - off_675).\t// WNW\n\tSET o TO LATLNG(loc:LAT \u002B off_45, loc:LNG - off_45).\t// NW\n\tSET p TO LATLNG(loc:LAT \u002B off_675, loc:LNG - off_225).\t// NNW\n\t\n\tSET options TO LIST(a, b, c, d,\n\t\t\t\t\t\te, f, g, h,\n\t\t\t\t\t\ti, j, k, l,\n\t\t\t\t\t\tm, n, o, p).\n\tRETURN options.\n}\n\nFUNCTION SLOPE_IS_SAFE\n{\n\tPARAMETER point.\n\tSET slope TO ABS(ARCTAN2(point:TERRAINHEIGHT - SHIP:ALTITUDE, 100)).\n\tIF slope \u0026lt; 15\n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\n\nFUNCTION ANGLE_IS_REASONABLE\n{\n\tPARAMETER point, goal.\n\tSET angle TO ABS(goal:BEARING - point:BEARING).\n\tIF angle \u0026lt; 60 \n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\n\nFUNCTION DECIDE\n{\n\tPARAMETER options, goal.\n\tFOR o IN options\n\t{\n\t\tIF SLOPE_IS_SAFE(o)\n\t\t{\n\t\t\tIF ANGLE_IS_REASONABLE(o, goal)\n\t\t\t{\n\t\t\t\tSET nextpoint TO LATLNG(o:LAT, o:LNG).\n\t\t\t\tRETURN nextpoint.\n\t\t\t}\n\t\t}\n\t}\n}\n\nFUNCTION DRIVE_TO\n{\n\tPARAMETER point.\n\t\n\tLOCK turnlimit TO MIN(1, 1.5 / GROUNDSPEED).\t// Scale the \n\t\t\t\t\t\t\t\t\t\t\t\t\t// turning radius\n\t\t\t\t\t\t\t\t\t\t\t\t\t// based on current speed\n\tSET loopTime TO 0.01.\n\tSET loopEndTime TO TIME:SECONDS.\n\tSET eWheelThrottle TO 0. // Error between target speed and actual speed\n\tSET iWheelThrottle TO 0. // Accumulated speed error\n\tSET wtVAL TO 0. //Wheel Throttle Value\n\tSET eSteer TO 0. // Steering error\n\tSET kTurn TO 0. //Wheel turn value.\n\tSET targetspeed TO 0. //Cruise control starting speed\n\tSET targetHeading TO 90. //Used for autopilot steering\n\tSET NORTHPOLE TO LATLNG( 90, 0). //Reference heading\n\t\n\tCLEARSCREEN. PRINT(\u0022Activate action group 10 to begin driving.\u0022).\n\tON AG10\n\t{\n\t\tSET runmode TO 0.\n\t}\n\tUNTIL runmode = -1\n\t{\n\t\tIF SHIP:SENSORS:LIGHT \u0026lt; 0.75\n\t\t{\n\t\t\tLIGHTS ON.\n\t\t}\n\t\tELSE\n\t\t{\n\t\t\tLIGHTS OFF.\n\t\t}\n\t\tIF runmode = 0\n\t\t{\n\t\t\t//Update the compass:\n\t\t\t// I want the heading to match the navball \n\t\t\t// and be out of 360\u0027 instead of \u002B/-180\u0027\n\t\t\t// I do this by judging the heading relative\n\t\t\t// to a latlng set to the north pole\n\t\t\tIF NORTHPOLE:BEARING \u0026lt;= 0\n\t\t\t{\n\t\t\t\tSET cHeading TO ABS(NORTHPOLE:BEARING).\n\t\t\t}\n\t\t\tELSE\n\t\t\t{\n\t\t\t\tSET cHeading TO (180 - NORTHPOLE:BEARING) \u002B 180.\n\t\t\t}\n\t\t\t\n\t\t\tIF targetHeading \u0026gt; 360\n\t\t\t{\n\t\t\t\tSET targetHeading TO targetHeading - 360.\n\t\t\t}\n\t\t\tELSE IF targetHeading \u0026lt; 0\n\t\t\t{\n\t\t\t\tSET targetHeading TO targetHeading \u002B 360.\n\t\t\t}\n\t\t\n\t\t\tBRAKES OFF.\n\t\t\tSET eWT TO targetSpeed - GROUNDSPEED.\n\t\t\tSET iWT TO MIN(1, MAX(-1, iWheelThrottle \u002B (eWheelThrottle * loopTime))).\n\t\t\tSET wtVAL TO MIN(1, MAX(-1, eWT \u002B iWT)).\n\t\t\t\n\t\t\tSET eSteer TO targetHeading - cHeading.\n\t\t\tIF eSteer \u0026gt; 180\n\t\t\t{\n\t\t\t\tSET eSteer TO eSteer - 360.\n\t\t\t}\n\t\t\tSET desiredSteering TO -eSteer / 10.\n\t\t\tSET kTurn TO MIN(1, MAX(-1, desiredSteering)) * turnLimit.\n\t\t}\n\t\tSET SHIP:CONTROL:WHEELTHROTTLE TO wtVAL.\n\t\tSET SHIP:CONTROL:WHEELSTEER TO kTurn.\n\t\tSET loopTime TO TIME:SECONDS - loopEndTime.\n\t\tSET loopEndTime TO TIME:SECONDS.\n\t\t\n\t\tIF ARRIVED(SHIP:GEOPOSITION, point:GEOPOSITION)\n\t\t{\n\t\t\tSET runmode TO -1.\n\t\t}\n\t}\n\tLOCK WHEELSTEER TO 0. LOCK WHEELTHROTTLE TO -1.\n\tWAIT UNTIL GROUNDSPEED \u0026lt; 1.\n\tUNLOCK ALL. BRAKES ON. NOTIFY(\u0022Arrived at waypoint. Setting next.\u0022).\n}\n\nSET_GOAL(hdg).\nUNTIL ARRIVED(SHIP:GEOPOSITION, goal)\n{\n\tPOPULATE().\n\tDECIDE(options, goal).\n\tDRIVE_TO(nextPoint).\n}\nLOCK WHEELSTEER TO 0. LOCK WHEELTHROTTLE TO -1.\nWAIT UNTIL GROUNDSPEED \u0026lt; 1.\nUNLOCK ALL. BRAKES ON. NOTIFY(\u0022Arrived at goal! Shutting down.\u0022).\nFOR ants IN SHIP:PARTSNAMED(\u0022rtLongAntenna2\u0022)\n{\n\tants:GETMODULE(\u0022ModuleAnimateGeneric\u0022):DOEVENT(\u0022Extend\u0022).\n}\nLIGHTS ON. SHUTDOWN.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"surge","CreatedById":136150,"CreatedDateTime":"2016-07-04T09:23:15Z","Content":"\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s a bug in kOS for one thing; geopositions can\u0027t be passed as parameters, so this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EFUNCTION SLOPE_IS_SAFE\n{\n\tPARAMETER point.\n\tSET slope TO ABS(ARCTAN2(point:TERRAINHEIGHT - SHIP:ALTITUDE, 100)).\n\tIF slope \u0026lt; 15\n\t{\n\t\tRETURN TRUE.\n\t}\n\tELSE\n\t{\n\t\tRETURN FALSE.\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nresults in an error. There appears to be something wrong with arctan2() as well, so that isn\u0027t going to do what you think it will even if it did parse.\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2016-07-04T12:02:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222660654\u0022 data-ipsquote-contentid=\u0022141323\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467624195\u0022 data-ipsquote-userid=\u0022136150\u0022 data-ipsquote-username=\u0022surge\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, surge said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\ngeopositions can\u0027t be passed as parameters\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nAre you sure?\u00A0 I\u0027ve been doing exactly that in my own scripts and it has worked.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nresults in an error. There appears to be something wrong with arctan2() as well, so that isn\u0027t going to do what you think it will even if it did parse.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003C/p\u003E\n\u003Cbr\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis isn\u0027t very descriptive.\u00A0 If it\u0027s a bug, can you describe its behaviour more clearly (what\u0027s the error you see?\u00A0 What is arctan2 doing that is different than what you\u0027d think?), since it\u0027s not a bug we\u0027ve seen, and we can\u0027t fix what we can\u0027t see happening.\n\u003C/p\u003E\n"},{"CreatedByName":"surge","CreatedById":136150,"CreatedDateTime":"2016-07-07T01:28:15Z","Content":"\n\u003Cp\u003E\nNevermind. I \u0022pasted\u0022 (manually typed, hah!) bits of that code into kOS and it was sh.itting itself on the geoposition parameters. I\u0027ve successfully done it multiple times since, so chalk that one up to exhaustion from playing too much KSP, I guess.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for the arctan2 thing, that was, sadly several different web searches returning the same incorrect equation for something not relevant here. As long as you look out for radians/degree thing, it seems to also be ok.\n\u003C/p\u003E\n\u003Cp\u003E\nI need sleep.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs for the topic, in the meantime, I made this (maybe \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E can use it):\n\u003C/p\u003E\n\u003Cp\u003E\nparameter thdg.\u003Cbr\u003E\n//\u003Cbr\u003E\n// V1a0-k completely AUTONOMOUS rover guidance.\u003Cbr\u003E\n// It\u0027ll just run around trying to find new biomes.\u003Cbr\u003E\n// Who knows where it\u0027ll end up?!\u003Cbr\u003E\n//\u003Cbr\u003E\nset debug to false.\u003Cbr\u003E\nset sciencethreshold to 0.1. // if science taken \u0026lt; this, reset.\u003Cbr\u003E\nset cruisespeed to 20. // standard cruise speed.\u003Cbr\u003E\nset maxslope to 30. // max allowed terrain difference.\u003Cbr\u003E\nset brakethreshold to 2. // speed err to apply brakes\u003Cbr\u003E\nset powermin to 0.4.\u003Cbr\u003E\nset powerhyst to 0.2.\n\u003C/p\u003E\n\u003Cp\u003E\n// TODO:\n\u003C/p\u003E\n\u003Cp\u003E\n// if speed is low, turn on motors in order: front, back, middle.\n\u003C/p\u003E\n\u003Cp\u003E\n// if power is low, turn off motors in order: middle, back, front.\u003Cbr\u003E\n// if all motors off, brakes,\u003Cbr\u003E\n// wait until recharge.\u003Cbr\u003E\n// reset guidance.\n\u003C/p\u003E\n\u003Cp\u003E\n// 1st level guidance: pick random direction,\u003Cbr\u003E\n// drive at speed.\u003Cbr\u003E\n// until new biome {\u003Cbr\u003E\n// if \u0022Atmospheric Fluid Spectro-Variometer\u0022s are full\u003Cbr\u003E\n// brake. wait for recovery.\u003Cbr\u003E\n// else pick random direction from -90..90\u003Cbr\u003E\n// }\u003Cbr\u003E\n// so it tries to traverse as many as possible.\n\u003C/p\u003E\n\u003Cp\u003E\n// hazardous terrain: if unable to go forward, reverse 100m. reset\u003Cbr\u003E\n// 1st level guidance.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nset ABORT to false.\u003Cbr\u003E\non ABORT {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0BRAKES on.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Aborting.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set SHIP:CONTROL:NEUTRALIZE to true.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction printv {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0// prints a vector with rounding so it fits on a line\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parameter v, line.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022V(\u0022 \u002Bround(v:x,4) \u002B\u0022, \u0022 \u002Bround(v:y, 4)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u002B\u0022, \u0022 \u002Bround(v:z, 4) \u002B\u0022)\u00A0\u00A0 \u0022 at (0,line).\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n//\u003Cbr\u003E\n// step 1: detect new biome and get science.\u003Cbr\u003E\n//\n\u003C/p\u003E\n\u003Cp\u003E\nlocal biomescanners to SHIP:PARTSNAMED(\u0022SurfaceScanner\u0022).\u003Cbr\u003E\nlocal biomemodule to biomescanners[0]:GETMODULE(\u0022ModuleGPS\u0022).\u003Cbr\u003E\nlock BIOME to biomemodule:GETFIELD(\u0022biome\u0022).\u003Cbr\u003E\nif not (defined knownbiomes)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0// Add previously known biomes here before boot.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set knownbiomes to LIST().\u003Cbr\u003E\nfunction isnewbiome {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local haveb to \u0022Error\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0for tb in knownbiomes {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if tb = BIOME {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set haveb to false.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0break.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if haveb \u0026lt;\u0026gt; false return biome.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return false.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nset lastbiome to \u0022Null\u0022.\u003Cbr\u003E\nfunction isnewbiome2 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if BIOME \u0026lt;\u0026gt; lastbiome {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set lastbiome to BIOME.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0return true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction checksensors {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0// checks the sensors are ok and have room for more\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local sl to SHIP:PARTSNAMED(\u0022sensorAtmosphere\u0022).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0for ex in sl {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0local m to ex:GETMODULE(\u0022ModuleScienceExperiment\u0022).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if not m:hasdata return true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return false.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction takereading {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local sl to SHIP:PARTSNAMED(\u0022sensorAtmosphere\u0022).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local aquired to false.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0for ex in sl {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0local m to ex:GETMODULE(\u0022ModuleScienceExperiment\u0022).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if not m:hasdata {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0m:DEPLOY().\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0wait until m:HASDATA.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0knownbiomes:add(biome).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set sc to m:DATA[0].\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0print sc:TITLE.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set aquired to true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if (sc:SCIENCEVALUE \u0026lt; sciencethreshold) {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0print \u0022\u00A0\u00A0\u00A0 Science value \u0022 \u002B\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0round(sc:SCIENCEVALUE, 1)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u002B\u0022 too low, resetting.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0m:RESET().\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0break.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return aquired.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n//\u003Cbr\u003E\n// step 2: drive in a given direction.\u003Cbr\u003E\n//\u003Cbr\u003E\nset odometer to 0.\u003Cbr\u003E\nset north to UP *R(90,-90,0).\u003Cbr\u003E\nset northpole to\u00A0 latlng(90, 0).\u003Cbr\u003E\nlock SHIPHDG to mod(360 -northpole:bearing, 360).\u003Cbr\u003E\nlock SHIPSPEED to SHIP:VELOCITY:SURFACE:MAG.\n\u003C/p\u003E\n\u003Cp\u003E\nset east to UP *R(0, -90, 0).\u003Cbr\u003E\nfunction strack {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local r1 to vcrs(up:vector,\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SHIP:VELOCITY:SURFACE):normalized.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local h to vang(r1, east:vector).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if (r1:y) \u0026gt; 0.0 set h to 360 -h.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return h.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction hdgerr {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parameter t, h.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return mod((t-h)\u002B540, 360)-180.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nset bl to \u0022 \u0022.\u003Cbr\u003E\nset space to \u0022 \u0022.\u003Cbr\u003E\nset i to 0.\u003Cbr\u003E\nuntil i \u0026lt; 48 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set bl to bl \u002Bspace.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set i to i\u002B1.\u003Cbr\u003E\n}\u003Cbr\u003E\nclearscreen.\u003Cbr\u003E\nprint \u0022\u002B-----------------------------------------------\u002B\u0022.\u003Cbr\u003E\nprint \u0022| ALL AUTONOMOUS ROVER GUIDANCE SYSTEM (AARGS!) |\u0022.\u003Cbr\u003E\nprint \u0022|\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 |\u0022.\u003Cbr\u003E\nprint \u0022|\u00A0 Target:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 Heading:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 |\u0022.\u003Cbr\u003E\nprint \u0022|\u00A0 Steer:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 Error:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 |\u0022.\u003Cbr\u003E\nprint \u0022|\u00A0 Speed:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 Error:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 |\u0022.\u003Cbr\u003E\nprint \u0022|\u00A0 Odometer:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 |\u0022.\u003Cbr\u003E\nprint \u0022|\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 |\u0022.\u003Cbr\u003E\nprint \u0022|\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 Biome:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 |\u0022.\u003Cbr\u003E\nprint \u0022|\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 |\u0022.\u003Cbr\u003E\nprint \u0022\u002B-----------------------------------------------\u002B\u0022.\u003Cbr\u003E\nprint \u0022Log:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 \u0022.\u003Cbr\u003E\nfunction printscreen {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Log:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 \u0022 at (0,11).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Biome: \u0022 \u002Bbiome \u002B\u0022\u00A0 \u0022at (25,8).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Target: \u0022 \u002Bround(thdg, 1) \u002B\u0022o\u00A0\u00A0\u00A0 \u0022 at (3, 3).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Heading: \u0022 \u002Bround(SHIPHDG,1) \u002B\u0022o\u00A0\u00A0\u00A0\u00A0 \u0022 at (25, 3).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Steer: \u0022 \u002Bround(-SHIP:CONTROL:WHEELSTEER,2)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u002B\u0022\u00A0\u00A0\u00A0 \u0022 at (3, 4).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Error: \u0022 \u002Bround(hdgerr(thdg),1) \u002B\u0022o\u00A0\u00A0\u00A0\u00A0 \u0022 at (25, 4).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Speed: \u0022 \u002Bround(SHIPSPEED, 2) \u002B\u0022m/s\u00A0 \u0022 at (3, 5).\u003Cbr\u003E\n//\u00A0\u00A0 \u00A0print \u0022Error: \u0022 \u002Bround(0, 2) \u002B\u0022m/s\u00A0 \u0022 at (25, 5).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Odometer: \u0022 \u002Bround(odometer/1000,1) \u002B\u0022km\u00A0\u00A0\u00A0\u00A0 \u0022\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0at (3, 6).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Throttle: \u0022 \u002Bround(SHIP:CONTROL:WHEELTHROTTLE,2)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u002B\u0022\u00A0\u00A0\u00A0 \u0022 at (25, 6).\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nset odopos to SHIP:GEOPOSITION.\u003Cbr\u003E\nfunction doodometer {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local odoseg to odopos:DISTANCE.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if odoseg \u0026gt; 10 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set odometer to odometer \u002Bodopos:DISTANCE.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set odopos to SHIP:GEOPOSITION.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction getterrainat {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parameter dist, bear.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0// gets geoposition from a point away from ship.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local slat to SHIP:GEOPOSITION:LAT.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local slon to SHIP:GEOPOSITION:LNG.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0// not sure what the *100 is for...\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local dr to dist*100/BODY:RADIUS.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local tlat to arcsin(sin(slat) *cos(dr)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u002Bcos(slat) *sin(dr) *cos(bear)).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local tlon to slon \u002Barctan2(sin(bear)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0*sin(dr) *cos(slat),\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0cos(dr) -sin(slat) *sin(tlat)).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set vd to vecdraw(LATLNG(tlat,tlon):position, up:vector *5,\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0red, \u0022getterrainat()\u0022, 1, debug).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return LATLNG(tlat,tlon).\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction lookahead {\u003Cbr\u003E\n// test various points ahead for GEOPOSITION:TERRAINHEIGHT.\u003Cbr\u003E\n// check for ridiculous slope, and water (\u0026lt;0)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local th to SHIPHDG -10. // test headings\u003Cbr\u003E\n\u00A0\u00A0 \u00A0until th \u0026gt; (SHIPHDG \u002B10) {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0local h to getterrainat(50, th):TERRAINHEIGHT.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0print \u0022Lookahead: \u0022 \u002Bround(h -SHIP:ALTITUDE)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u002B\u0022m\u00A0\u00A0 \u0022 at (3,8).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if (h \u0026lt; 0.5) {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0print \u0022Water.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0return th.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if (h \u0026lt; SHIP:ALTITUDE-maxslope\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0or h \u0026gt; SHIP:ALTITUDE \u002Bmaxslope) {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0print \u0022Bad terrain.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0return th.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set th to th \u002B10.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return false.\u003Cbr\u003E\n}\u003Cbr\u003E\nfunction isblocked {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if lookahead() return true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0// check if any wheels are blocked.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local wl to SHIP:PARTSNAMED(\u0022roverWheel1\u0022).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0for w in wl {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if w:GETMODULE(\u0022ModuleWheelBase\u0022)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0:GETFIELD(\u0022wheel blocked\u0022) = \u0022Yes\u0022\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0return true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n// FIXME: Also try to check if we are not moving forward,\u003Cbr\u003E\n// and should be.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return false.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nfunction parkbrake {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set SHIP:CONTROL:NEUTRALIZE to true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0BRAKES on.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if not ABORT wait until SHIP:VELOCITY:SURFACE:MAG \u0026lt; 1.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nif not (defined obstacles) set obstacles to QUEUE().\u003Cbr\u003E\nfunction pushobstacle {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parameter p.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0obstacles:push(p).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Obstacle at \u0022\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u002Bround(p:LAT, 2) \u002B\u0022, \u0022 \u002Bround(p:LNG,2).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if (obstacles:LENGTH \u0026gt; 10) {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set op to obstacles:pop.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0print \u0022Forgot obstacle \u0022\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u002Bround(op:LAT, 2) \u002B\u0022, \u0022 \u002Bround(op:LNG,2).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nset steerpid to PIDLOOP(0.008, 0.0005, 0.01, -1, 1). // fast speed\u003Cbr\u003E\nset steerpid:setpoint to 0.\u003Cbr\u003E\nset accelpid to PIDLOOP(0.05, 0.005, 0.01, 0, 1). // TODO\u003Cbr\u003E\nset reversepid to PIDLOOP(0.1, 0.005, 0.02, -1, 0). //TODO\u003Cbr\u003E\nset avoidspeed to 5.\u003Cbr\u003E\nfunction avoid {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parameter dist. // distance to back up.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0// log current point\u003Cbr\u003E\n\u00A0\u00A0 \u00A0local badpoint to SHIP:GEOPOSITION.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0pushobstacle(badpoint).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0print \u0022Avoiding...\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parkbrake().\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0// try to reverse dist.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0BRAKES off.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set SHIP:CONTROL:WHEELSTEER to RANDOM()/2 -0.5.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0until ABORT or (badpoint:DISTANCE \u0026gt; dist) {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// check behind us!\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if (getterrainat(5, SHIPHDG -180):TERRAINHEIGHT \u0026lt; 0)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0return false.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if (badpoint:DISTANCE \u0026gt; 10)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set SHIP:CONTROL:WHEELSTEER to 0.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set SHIP:CONTROL:WHEELTHROTTLE to\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0reversepid:UPDATE(TIME:SECONDS*10,\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0avoidspeed -SHIPSPEED).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0printscreen().\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0wait 0.1.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parkbrake().\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return true.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction power {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set rl to stage:resources.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0for r in rl {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if r:name = \u0022ElectricCharge\u0022 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0return r.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return nil.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction waitforpower {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Power loss.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parkbrake().\u003Cbr\u003E\n\u00A0\u00A0 \u00A0LIGHTS off.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0wait until ABORT\u003Cbr\u003E\n\u00A0\u00A0 \u00A0or power():amount \u0026gt;= power():capacity*powermin.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022Power back.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0LIGHTS on.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0BRAKES off.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nfunction cruise {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parameter step.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set SHIP:CONTROL:WHEELSTEER to\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0steerpid:UPDATE(TIME:SECONDS/step, hdgerr(thdg)).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set dS to SHIPSPEED -cruisespeed.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if dS \u0026gt; brakethreshold {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set SHIP:CONTROL:WHEELTHROTTLE to\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0accelpid:UPDATE(TIME:SECONDS/step, dS).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0BRAKES on. wait 0.1.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0} else {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0BRAKES off.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if power():amount \u0026lt;\u00A0 power():capacity *powerhyst\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0waitforpower().\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set SHIP:CONTROL:WHEELTHROTTLE to\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0accelpid:UPDATE(TIME:SECONDS/step,\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0dS).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0doodometer().\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nif defined debug {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0on AG10 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set thdg to thdg \u002B5.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0preserve.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0on AG9 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set thdg to thdg -5.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0preserve.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nfunction dosegment {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parameter length. // how far to run in this segment.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set startodo to odometer.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0LIGHTS on.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0BRAKES off. wait 0.1.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set resolution to 0.1.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0until ABORT or (odometer -startodo \u0026gt; length) {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if (isblocked()) {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if avoid(100) break.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0else set ABORT to true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0cruise(resolution).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if not checksensors() {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0print \u0022Sensors damaged or full.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set ABORT to true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0break.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set newbiome to isnewbiome2().\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if newbiome {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if not takereading() {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0print \u0022Sensors full.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0break.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0printscreen().\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0wait resolution.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nfunction isobstacle {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parameter hdg.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0// checks if the heading is in obstacles\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set oerr to 15.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0for o in obstacles {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if o:bearing \u0026gt; (hdg -oerr)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0and o:bearing \u0026lt; (hdg \u002Boerr)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0return true.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0return false.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nuntil ABORT {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022New segment, heading \u0022 \u002Bround(thdg) \u002B\u0022o.\u0022.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0dosegment(10000).\u003Cbr\u003E\n\u00A0\u00A0 \u00A0parkbrake().\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0set thdg to thdg -45 \u002BRANDOM() *90.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0until not isobstacle(thdg) set thdg to RANDOM() *360.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0wait 5.\u003Cbr\u003E\n}\u003Cbr\u003E\nLIGHTS off.\u003Cbr\u003E\nparkbrake().\n\u003C/p\u003E\n\u003Cp\u003E\n// step 3: drive in a given direction and take readings.\n\u003C/p\u003E\n\u003Cp\u003E\n// step 4: drive in a given direction for a specified distance\u003Cbr\u003E\n// and take readings.\n\u003C/p\u003E\n\u003Cp\u003E\n// step 5: drive in random direction for random distance and take\u003Cbr\u003E\n// readings.\u003Cbr\u003E\n// dont forget about the obstacles queue!\n\u003C/p\u003E\n\u003Cp\u003E\nunlock BIOME.\u003Cbr\u003E\nunlock SHIPHDG.\u003Cbr\u003E\nBRAKES on. wait 0.1.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-09T02:13:27Z\u0022 title=\u002204/09/2017 02:13  AM\u0022 data-short=\u00227 yr\u0022\u003EApril 9, 2017\u003C/time\u003E by surge\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-07-07T02:03:43Z","Content":"\n\u003Cp\u003E\nI definitely could make a ton of use out of this, and perhaps I can edit this to actually work with my algorithm.\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-07-08T01:03:48Z","Content":"\n\u003Cp\u003E\nFor using a PIDLOOP() to control the steering and throttle, what settings for kP, kI, and kD are recommended?\n\u003C/p\u003E\n"},{"CreatedByName":"surge","CreatedById":136150,"CreatedDateTime":"2016-07-09T09:23:05Z","Content":"\n\u003Cp\u003E\nSadly that is fiddly as hell, and there is no real answer. I have since changed the steerpid and am still fiddling with it:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003Eset steerpid to PIDLOOP(0.008, 0.0004, 0.02, -1, 1). // fast speed\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBut the kOS docs are broken and wrong. The wiki page they used to point to is also useless in practice. The best way to tune them I\u0027ve seen comes from super fancy R/C servo manuals:\n\u003C/p\u003E\n\u003Cp\u003E\n1) set all values to 0.\n\u003C/p\u003E\n\u003Cp\u003E\n2) slowly raise P until positive input is corrected by negative output and vice versa.\n\u003C/p\u003E\n\u003Cp\u003E\n3) slowly raise D until you get a stable oscillation. Then halve it.\n\u003C/p\u003E\n\u003Cp\u003E\n4) slowly raise I until it doesn\u0027t overcorrect. Then halve it too.\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem is firstly doing that takes phenominal amounts of time, and secondly PID controllers only really work for a specific range of inputs. If youre trying to steer a jet powered landspeed record Thrust-SSC replica, you\u0027ll need completely different values than for a cute little rover put-putting around at 10km/hr.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t like it either, but thems the facts. I have in the past used variations of sin/cos() functions that essentially do the same thing, but don\u0027t account for long term errors. If you\u0027re desperate, learn some maths and try that. It\u0027s probably quicker and easier than CENSORED with pid controllers in the long run.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-17T22:01:54Z\u0022 title=\u002204/17/2017 10:01  PM\u0022 data-short=\u00227 yr\u0022\u003EApril 17, 2017\u003C/time\u003E by surge\u003C/strong\u003E\n\u003Cbr\u003Ecensorship can go eat a dick\n\u003C/span\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-07-09T16:16:35Z","Content":"\n\u003Cp\u003E\nOk.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-09T16:17:22Z\u0022 title=\u002207/09/2016 04:17  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 9, 2016\u003C/time\u003E by MAFman\u003C/strong\u003E\n\u003Cbr\u003EDerp\n\u003C/span\u003E\n"},{"CreatedByName":"THX1138","CreatedById":113955,"CreatedDateTime":"2016-08-02T03:40:02Z","Content":"\n\u003Cp\u003E\nHey, could someone make a script for a rover to find the highest ore concentration in an area?\n\u003C/p\u003E\n"}]}