{"TopicId":132515,"ForumId":20,"TopicTitle":"[REQUEST] Making Inline Atmospheric Processors for KSPI","CreatedByName":"Rushligh","CreatedById":31038,"CreatedDateTime":"2016-02-20T00:15:34Z","PageNum":1,"Articles":[{"CreatedByName":"Rushligh","CreatedById":31038,"CreatedDateTime":"2016-02-20T00:15:34Z","Content":"\n\u003Cp\u003E\nHello all,\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nSo I\u0027ve been messing around with\u00A0 a lot of Space Planes; I\u0027ve got the Mk2 expansion and starlion industries upgrade with KSPI. One thing the pack is majorly missing is atmosphere processing.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve been wondering if there\u0027s a way to make a separate part that can convert atmosphere intake (intake atm)\u00A0 to a gas/liquid fuel much like the stock KSPI processors, but not acting as it\u0027s own intake. ideally it would use the ratio of gasses in the current atmosphere and same charge-output ratios as the processors.\n\u003C/p\u003E\n\u003Cp\u003E\nthe point of this is the have in inline processor hooked up to a few streamline standard intakes to use with KSPI and other engines. cuts down on part count, drag, and weight, and makes it more realistic and pretty.\n\u003C/p\u003E\n\u003Cp\u003E\ntl;dr i want a part to be an inline atmosphere processor, but not an intake, that can convert from intakeATM to other gasses.\u003Cbr\u003E\u003Cbr\u003E\nI\u0027ve tried cut-paste code from the processors, but the KSPI setup is far beyond me.\u003Cbr\u003E\n[EDIT]\n\u003C/p\u003E\n\u003Cp\u003E\nthe code in the .cfg file seems to refer to another module somewhere else, or perhaps something in a DLL file. also, sorry, i wasn\u0027t clear that this was a request for said part.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-02-20T09:09:30Z\u0022 title=\u002202/20/2016 09:09  AM\u0022 data-short=\u00228 yr\u0022\u003EFebruary 20, 2016\u003C/time\u003E by Rushligh\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Seeker89","CreatedById":78437,"CreatedDateTime":"2016-02-20T10:18:15Z","Content":"\n\u003Cp\u003E\nSomething like the ATMscoop from\u00A0Karbonite?\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/80650-105-karbonite-mineable-burnable-and-community-driven-0660-20151109/\u0022\u003EUSI Karbonite\u003C/a\u003E\u003Cbr\u003E\u003Cbr\u003E\nIt is it\u0027s own scoop that can be turned on to pull Karbonite,\u00A0ArgonGas,\u00A0XenonGas from the Atmosphere... and it\u0027s an air intake. It looks like it can be changed to pull in fuel too.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTry playing with that to being\u00A0 \u003Cspan style=\u0022color:rgb(39,42,52);font-family:\u0027Helvetica Neue\u0027, Helvetica, Arial, sans-serif;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:22.4px;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;background-color:rgb(255,255,255);\u0022\u003Einline\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSeeker\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-02-20T10:20:51Z\u0022 title=\u002202/20/2016 10:20  AM\u0022 data-short=\u00228 yr\u0022\u003EFebruary 20, 2016\u003C/time\u003E by Seeker89\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Rushligh","CreatedById":31038,"CreatedDateTime":"2016-02-21T07:36:10Z","Content":"\n\u003Cp\u003E\nYes, but I\u0027m looking for something that follows KSPI\u0027s atmosphere composition rations; also, something that uses intake ATM as a resource to convert. i don\u0027t want a part that IS an intake.\u003Cbr\u003E\u003Cbr\u003E\nI was thinking about using the ATLAS engine for the fuelswitch, something that uses a negative fuel amount to generate fuel, and positive resource. i just need a module for figuring out how much of each resource should be available at a given time.\n\u003C/p\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-02-22T11:29:02Z","Content":"\n\u003Cp\u003E\nIt is pretty easy to add a converter to an existing part with a simple module manager script and it is very satisfying when it works.\n\u003C/p\u003E\n\u003Cp\u003E\nSome examples to get you started\n\u003C/p\u003E\n\u003Cp\u003E\nhave a look at mechjeb and engineer for all how it patches the existing command pods. Find your bit you want to patch and use the name\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThen look\u00A0at the stock IRSU in the squad directory, it\u0027s pretty straight forward to change one of the converter scripts to do what you want.\n\u003C/p\u003E\n\u003Cp\u003E\nGe\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Rushligh","CreatedById":31038,"CreatedDateTime":"2016-02-23T02:29:09Z","Content":"\n\u003Cp\u003E\nthaks, that\u0027s a good idea. I chekced the IRSU\u0027s, and it seems the just convert one resource to another using a preset ratio (varying with heat) my objective is to vary the output based on atmospheric composition (like the scoops in kspi).\u003Cbr\u003E\u003Cbr\u003E\nfollowing the IRSU idea, i though about a drill and modified what i could/would. i don\u0027t know what all the values represent though...\u003Cbr\u003E\u003Cbr\u003E\nWhat does harvester type represent, and what options are there?\u003Cbr\u003E\nWhat does impact transform represent exactly, and what alternate options are there?\u003Cbr\u003E\nis there a way to substitute ore for any Interstellar gas, or would i have to create a separate module for each and switch between them?\u003Cbr\u003E\nWould this even work for detecting the correct ratio of each resource in air?\u003Cbr\u003E\nI would make and test it myself however ksp take a LONG time to load for me.\u003Cbr\u003E\u003Cbr\u003E\nMODULE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0name = ModuleResourceHarvester\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0HarvesterType = 0\u00A0 (What does this represent?)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Efficiency = 5\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = Ore (is there a way to set this as a switch for different interstellar fuels?)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ConverterName = Atmospheric Processor\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0StartActionName = Start Processor\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0StopActionName = Stop Processor\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ImpactTransform = ImpactTransform (i know this represents the drill head\u0027s contact, but how?)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ImpactRange = 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0AutoShutdown = true\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0UseSpecialistBonus = true\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SpecialistEfficiencyFactor = 0.2\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SpecialistBonusBase = 0.05\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Specialty = Engineer\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0EfficiencyBonus = 1\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0GeneratesHeat = false\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0INPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = ElectricCharge\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 15\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 INPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = IntakeAtm\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 15\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}.\n\u003C/p\u003E\n\u003Cp\u003E\n}\u003Cbr\u003E\u003Cbr\u003E\n[UPDATE] i took a look at the Karbonite atmosphere scoops. still curious about the above, but more so about switching the resource types. also curious if the configuration used in Karbonite for their scoops requires contact with the air like the KSPI scoops (at speed?), of if they merely generate it based on its abundance?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-02-23T02:53:09Z\u0022 title=\u002202/23/2016 02:53  AM\u0022 data-short=\u00228 yr\u0022\u003EFebruary 23, 2016\u003C/time\u003E by Rushligh\u003C/strong\u003E\n\u003Cbr\u003Eupdate\n\u003C/span\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-02-23T07:51:00Z","Content":"\n\u003Cp\u003E\nI would still modify an intake to accept the correct resource, copying the settings for the intake will provide the correct balance. \u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf you make an edit script you need to change the edit for each type of intake to make them balance correctly.\n\u003C/p\u003E\n\u003Cp\u003E\nhowever in this case I would copy the radial intake (the whole folder) and modify the script in the copy, changing the name of course.\n\u003C/p\u003E\n\u003Cp\u003E\nI tried making a script last night but I don\u0027t have the correct mods for IntakeAtm. IntakeAir worked fine though.\n\u003C/p\u003E\n\u003Cp\u003E\nGe\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: \u00A0Here is my config for mk2 parts, it\u0027s basically copied from the squad files, save it to a new .cfg somewhere in your gamedata folder. And change the where it says IntakeAir to IntakeAtm\n\u003C/p\u003E\n\u003Cp\u003E\n@PART[mk2Cockpit*]:FINAL\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0MODULE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0name = ModuleOverheatDisplay\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0MODULE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 name = ModuleResourceConverter\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 ConverterName = AirCompressor\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 StartActionName = Start ISRU [AirToLFOx]\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 StopActionName = Stop ISRU [AirToLFOx]\u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0AutoShutdown = true\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0TemperatureModifier\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0 100000\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 750 50000\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1000 10000\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1250 500\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 2000 50\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 4000 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0GeneratesHeat = true\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0DefaultShutoffTemp = .8\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ThermalEfficiency\u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0 0 0 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 500 0.1 0 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1000 1.0 0 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1250 0.1 0 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 3000 0 0 0\u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0UseSpecialistBonus = true\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SpecialistEfficiencyFactor = 0.2\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SpecialistBonusBase = 0.05\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Specialty = Engineer\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0EfficiencyBonus = 1\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 INPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = IntakeAir\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 0.5\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0FlowMode = STAGE_PRIORITY_FLOW\u003Cbr\u003E\n\u00A0 \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 INPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = ElectricCharge\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 30\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 OUTPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = LiquidFuel\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 0.45\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0DumpExcess = false\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0FlowMode = STAGE_PRIORITY_FLOW\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 OUTPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = Oxidizer\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 0.55\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0DumpExcess = false\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0FlowMode = STAGE_PRIORITY_FLOW\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0MODULE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 name = ModuleResourceConverter\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 ConverterName = LiquidFuel\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 StartActionName = Start ISRU [AirToLqdFuel]\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 StopActionName = Stop ISRU [AirToLqdFuel]\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0AutoShutdown = true\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0TemperatureModifier\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0 100000\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 750 50000\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1000 10000\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1250 500\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 2000 50\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 4000 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0GeneratesHeat = true\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0DefaultShutoffTemp = .8\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ThermalEfficiency\u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0 0 0 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 500 0.1 0 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1000 1.0 0 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1250 0.1 0 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 3000 0 0 0\u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0UseSpecialistBonus = true\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SpecialistEfficiencyFactor = 0.2\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SpecialistBonusBase = 0.05\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Specialty = Engineer\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0EfficiencyBonus = 1\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 INPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = IntakeAir\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 0.45\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0FlowMode = STAGE_PRIORITY_FLOW\u003Cbr\u003E\n\u00A0 \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 INPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = ElectricCharge\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 30\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 OUTPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = LiquidFuel\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 0.9\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0DumpExcess = false\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0FlowMode = STAGE_PRIORITY_FLOW\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0MODULE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0name = ModuleCoreHeat\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0CoreTempGoal = 1000\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//Internal temp goal - we don\u0027t transfer till we hit this point\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0CoreToPartRatio = 0.1\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//Scale back cooling if the part is this % of core temp\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0CoreTempGoalAdjustment = 0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//Dynamic goal adjustment\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0CoreEnergyMultiplier = 0.1\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//What percentage of our core energy do we transfer to the part\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0HeatRadiantMultiplier = 0.05\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//If the core is hotter, how much heat radiates?\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0CoolingRadiantMultiplier = 0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//If the core is colder, how much radiates?\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0HeatTransferMultiplier = 0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//If the part is hotter, how much heat transfers in?\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0CoolantTransferMultiplier = 0.01\u00A0\u00A0 \u00A0//If the part is colder, how much of our energy can we transfer?\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0radiatorCoolingFactor = 1\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//How much energy we pull from core with an active radiator? \u00A0\u0026gt;= 1\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0radiatorHeatingFactor = 0.01\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//How much energy we push to the active radiator\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0MaxCalculationWarp = 1000\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//Based on how dramatic the changes are, this is the max rate of change\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0CoreShutdownTemp = 4000\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//At what core temperature do we shut down all generators on this part?\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0MaxCoolant = 500\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//Maximum amount of radiator capacity we can consume - 50 = 1 small\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-02-23T19:41:44Z\u0022 title=\u002202/23/2016 07:41  PM\u0022 data-short=\u00228 yr\u0022\u003EFebruary 23, 2016\u003C/time\u003E by genericeventhandler\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Rushligh","CreatedById":31038,"CreatedDateTime":"2016-02-23T21:51:13Z","Content":"\n\u003Cp\u003E\ni understand what you\u0027re saying here, but you\u0027re missing a major thing. using the \u0022resource converter\u0022 module allows you to set the rate to whatever you want. i want one that varies the output depending on he atmosphere\u0027s composition; realistically. i also want one that does it with interstellar gasses. making LfOx out of nothing is paramount to cheating. anybody can do that.\n\u003C/p\u003E\n\u003Cp\u003E\nborrowing from Karbonite\u0027s code, this is what i\u0027ve got so far...\n\u003C/p\u003E\n\u003Cp\u003E\nMODULE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0name = ModuleResourceHarvester\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0HarvesterType = 2\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Efficiency = 20\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = //i need a way to be able to toggle between interstellar gasses.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ConverterName = Atmospheric Processor\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0StartActionName = Begin Processing\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0StopActionName = Halt processing\u003Cbr\u003E\n\u00A0\u00A0 \u00A0 INPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = ElectricCharge\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 300\u003Cbr\u003E\n\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\nINPUT_RESOURCE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ResourceName = IntakeAtm\u00A0 //KSPI\u0027s alternate name of air intake they interact the same, however they use a separate variable to allow the mod to correct he composition and density of atmospheres\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0Ratio = 20\u003Cbr\u003E\n\u00A0\u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\nThis part would be places in a mk 1 hull with tweakscale, a mk2 Hull, MK3 Hull, And a J-factor Hull (the done core part)\u003Cbr\u003E\nUsing the \u0022Resource harvester\u0022 should work as i assume KSPI tells the game how much of each gas should be present at a given time.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-02-23T21:53:22Z\u0022 title=\u002202/23/2016 09:53  PM\u0022 data-short=\u00228 yr\u0022\u003EFebruary 23, 2016\u003C/time\u003E by Rushligh\u003C/strong\u003E\n\u003Cbr\u003Eforgot to mention...\n\u003C/span\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-02-24T05:35:37Z","Content":"\n\u003Cp\u003E\nAs far as I know, the rate can\u0027t be dynamically changed like that. The density of the atmosphere and the air flow from intakes very with speed and altitude.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor interstellar gases you need a resource config, look at the xenon config for an example, and make an intake for the new resource.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor different inputs, you need a separate module section for a new converter. And you need three per resource. LfOx, Lf, Ox. LfOx will only fill the tanks until one of the resources hits maximum. LF and Ox are needed to top up if either is less than maximum.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf it\u0027s cheating or not, well the difference between converting ore to fuel, or air to fuel. Is just the name of the resource. They\u00A0are both resources in the same way, my config is slower to refuel than mining for ore! Do what you want to do, it\u0027s a sandbox game your only limit is what can\u0027t you do!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"EvilGeorge","CreatedById":133323,"CreatedDateTime":"2017-03-11T23:17:50Z","Content":"\n\u003Cp\u003E\nAs I just came across this thread on an unrelated search, I thought I would state this for others who might find their way here as well:\n\u003C/p\u003E\n\u003Cp\u003E\nKSPI (release thread here \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/155255-122-ksp-interstellar-extended-11211-9-3-2017-release/\u0026amp;page=12\u0022 rel=\u0022\u0022\u003Ehttp://forum.kerbalspaceprogram.com/index.php?/topic/155255-122-ksp-interstellar-extended-11211-9-3-2017-release/\u003C/a\u003E), now includes the features the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E of this thread has been pining for (and more).\n\u003C/p\u003E\n\u003Cp\u003E\nAny air intake (including stock ones or intakes from other mods) can now (for quite some time) collect resources present in the atmosphere of a celestial body. The intake air can then be separated into its constituent parts in some of KSPI\u0027s \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E parts. KSPI also models different detailed atmospheric definitions for each planet and will automatically adapt and work with planets added by planet/system packs as well. The collection \u003Cspan\u003E\u0026amp; processing also works in the background (i.e. when focused on another vessel).\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWith all that said - if you are longing for a new function, please don\u0027t abuse part configs the way it has been discussed here (you might break stuff without meaning to), instead write a simple plugin to do the task you want or ask someone to do it for you (here the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E had the right idea with the request thread).\n\u003C/p\u003E\n\u003Cp\u003E\nAnyways, sorry for the thread revival, but I just thought I\u0027d set the record straight. Thanks for reading so far.\n\u003C/p\u003E\n"}]}