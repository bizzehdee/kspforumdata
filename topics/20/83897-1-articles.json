{"TopicId":83897,"ForumId":20,"TopicTitle":"Change tank resource","CreatedByName":"Tz86","CreatedById":120425,"CreatedDateTime":"2014-09-05T22:17:47Z","PageNum":1,"Articles":[{"CreatedByName":"Tz86","CreatedById":120425,"CreatedDateTime":"2014-09-05T22:17:47Z","Content":"\n\u003Cp\u003EHi all guys,\u003C/p\u003E\u003Cp\u003EI\u0027m new to the forum, but no so new with KSP. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EPlease, could you tell me if exists a mod that can change the resource a tank can store?\u003C/p\u003E\u003Cp\u003EIn short, I\u0027m looking for something like \u0022Modular Fuel Tanks\u0022 but usable while flying.\u003C/p\u003E\u003Cp\u003EI mean, for example: I reach Mun with a lander, and after the landing I would like to store in the empty fuel tanks (or partially empty) other resources, as Waste or Food. Total volume of tanks is not changed, but empty space is now used to store other things rather than fuel/oxidizer.\u003C/p\u003E\u003Cp\u003EI also tried to play with the Modular Fuel Tank source code, in order to add the button \u0022Show GUI\u0022 also during the flight. But without any success.\u003C/p\u003E\u003Cp\u003EThanks in advance for your help!\u003C/p\u003E\n"},{"CreatedByName":"Mecripp","CreatedById":181994,"CreatedDateTime":"2014-09-06T01:30:55Z","Content":"\n\u003Cp\u003EThat would be nice but no haven\u0027t seen a plugin that would let us so that there so close but no not with out adding to the mass.\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-09-06T14:50:45Z","Content":"\n\u003Cp\u003EFireSpitter\u0027s FSfuelSwitch module allow such thing, take a look at the \u003Ca href=\u0022https://docs.google.com/document/d/1iD52DfHft04Hb48TEhF5a4n5JOc8efUevdg5Y_QPICQ\u0022 rel=\u0022external nofollow\u0022\u003Edocumentation\u003C/a\u003E, you just need to edit config file yourself or use a Module Manager \u0022patch\u0022 to do it.\u003C/p\u003E\n"},{"CreatedByName":"Mecripp","CreatedById":181994,"CreatedDateTime":"2014-09-06T15:27:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EFireSpitter\u0027s FSfuelSwitch module allow such thing, take a look at the \u003Ca href=\u0022https://docs.google.com/document/d/1iD52DfHft04Hb48TEhF5a4n5JOc8efUevdg5Y_QPICQ\u0022 rel=\u0022external nofollow\u0022\u003Edocumentation\u003C/a\u003E, you just need to edit config file yourself or use a Module Manager \u0022patch\u0022 to do it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBut that just like Modular Fuel Tanks you still have to change the total mass to make it work so your still not using the empty space.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-06T15:31:15Z\u0022 title=\u002209/06/2014 03:31  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 6, 2014\u003C/time\u003E by Mecripp2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Tz86","CreatedById":120425,"CreatedDateTime":"2014-09-09T07:13:45Z","Content":"\n\u003Cp\u003EThank you for the replies, guys.\u003C/p\u003E\u003Cp\u003EI\u0027ll check the FireSpitter\u0027s module.\u003C/p\u003E\u003Cp\u003EI have to understand about the total mass. Actually, my goal is to use the total volume of tanks. Of course, if I\u0027m only relocating resources I have in my ship, the mass will not change, but diferent is if I\u0027ll mine Karbonite or other.\u003C/p\u003E\u003Cp\u003EQuite confused! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Tz86","CreatedById":120425,"CreatedDateTime":"2014-09-09T09:06:43Z","Content":"\n\u003Cp\u003EWell, I tried doing something.\u003C/p\u003E\u003Cp\u003EI have to set max tank resource capacity, but is a static setting.\u003C/p\u003E\u003Cp\u003EFSFuelSwitch also puts the max amount for the resource, while switching tanks. So, I\u0027m not really managing the empty space.\u003C/p\u003E\u003Cp\u003EMaybe it\u0027s possible to override this, but I have no skills for that.\u003C/p\u003E\u003Cp\u003EAnyway, thank you for the suggestion.\u003C/p\u003E\n"},{"CreatedByName":"Tz86","CreatedById":120425,"CreatedDateTime":"2014-09-09T17:44:18Z","Content":"\n\u003Cp\u003EOk, updates.\u003C/p\u003E\u003Cp\u003EI modded the MFT source, and obtained the Tank GUI also in Flight Mode.\u003C/p\u003E\u003Cp\u003EThe only problem: when I modify the tank volume distribution, in flight mode, the volume available remains at maximum. While in VAB (Editor) mode, the volume available auto-updates.\u003C/p\u003E\u003Cp\u003EHere the modded parts code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        #region GUI Display\u003Cbr\u003E\u003Cbr\u003E        //[KSPField(isPersistant = true)]\u003Cbr\u003E        public bool dedicated = false;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [KSPField(isPersistant = false, guiActiveEditor = true, [COLOR=#ff0000][B]guiActive = true[/B][/COLOR], guiName = \u0022Show Tank\u0022),\u003Cbr\u003E         UI_Toggle(enabledText = \u0022Tank GUI\u0022, disabledText = \u0022GUI\u0022)]\u003Cbr\u003E        [NonSerialized]\u003Cbr\u003E        public bool showRFGUI;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private static GUIStyle unchanged;\u003Cbr\u003E        private static GUIStyle changed;\u003Cbr\u003E        private static GUIStyle greyed;\u003Cbr\u003E        private static GUIStyle overfull;\u003Cbr\u003E        public static string myToolTip = \u0022\u0022;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private int counterTT;\u003Cbr\u003E        private Vector2 scrollPos;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void OnPartActionGuiDismiss(Part p)\u003Cbr\u003E        {\u003Cbr\u003E            if (p == part)\u003Cbr\u003E                showRFGUI = false;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [PartMessageListener(typeof(PartResourceListChanged))]\u003Cbr\u003E        private void MarkWindowDirty()\u003Cbr\u003E        {\u003Cbr\u003E            if (_myWindow == null)\u003Cbr\u003E                _myWindow = part.FindActionWindow();\u003Cbr\u003E            if(_myWindow == null)\u003Cbr\u003E                return;\u003Cbr\u003E            _myWindow.displayDirty = true;\u003Cbr\u003E        }\u003Cbr\u003E        private UIPartActionWindow _myWindow;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [PartMessageListener(typeof(PartChildAttached), relations: PartRelationship.AnyPart, scenes: GameSceneFilter.[COLOR=#ff0000][B]AnyEditorOrFlight[/B][/COLOR])]\u003Cbr\u003E        [PartMessageListener(typeof(PartChildDetached), relations: PartRelationship.AnyPart, scenes: GameSceneFilter.[COLOR=#ff0000][B]AnyEditorOrFlight[/B][/COLOR])]\u003Cbr\u003E        public void VesselAttachmentsChanged(Part childPart)\u003Cbr\u003E        {\u003Cbr\u003E            UpdateUsedBy();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [PartMessageListener(typeof (PartEngineConfigChanged), relations: PartRelationship.AnyPart, scenes: GameSceneFilter.[COLOR=#ff0000][B]AnyEditorOrFlight[/B][/COLOR])]\u003Cbr\u003E        public void EngineConfigsChanged()\u003Cbr\u003E        {\u003Cbr\u003E            UpdateUsedBy();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void OnGUI()\u003Cbr\u003E        {\u003Cbr\u003E            EditorLogic editor = EditorLogic.fetch;\u003Cbr\u003E[COLOR=#ff0000][B]            //if (!HighLogic.LoadedSceneIsEditor || !editor || dedicated) {[/B]\u003Cbr\u003E[B]             //   return;[/B]\u003Cbr\u003E[B]           // }[/B][/COLOR]\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            //UpdateMixtures();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            Rect screenRect;\u003Cbr\u003E            Rect tooltipRect;\u003Cbr\u003E            int posMult = 0;\u003Cbr\u003E            if (offsetGUIPos != -1)\u003Cbr\u003E                posMult = offsetGUIPos;\u003Cbr\u003E            if (editor.editorScreen == EditorLogic.EditorScreen.Actions \u0026amp;\u0026amp; EditorActionGroups.Instance.GetSelectedParts ().Contains (part)) \u003Cbr\u003E            {\u003Cbr\u003E                screenRect = new Rect(430 * posMult, 365, 438, (Screen.height - 365));\u003Cbr\u003E                tooltipRect = new Rect(430 * posMult\u002B10, Screen.height - Input.mousePosition.y, 300, 20);\u003Cbr\u003E            }\u003Cbr\u003E            else if (showRFGUI \u0026amp;\u0026amp; editor.editorScreen == EditorLogic.EditorScreen.Parts)\u003Cbr\u003E            {\u003Cbr\u003E                screenRect = new Rect((Screen.width - 8 - 430 * (posMult\u002B1)), 365, 438, (Screen.height - 365));\u003Cbr\u003E                tooltipRect = new Rect(Screen.width - 230 - 430 * (posMult\u002B1), Screen.height - Input.mousePosition.y, 220, 20);\u003Cbr\u003E            }\u003Cbr\u003E            else \u003Cbr\u003E            {\u003Cbr\u003E                showRFGUI = false;\u003Cbr\u003E                return;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            GUI.Label(tooltipRect, myToolTip);\u003Cbr\u003E            GUILayout.Window(part.name.GetHashCode(), screenRect, GUIWindow, \u0022Fuel Tanks for \u0022 \u002B part.partInfo.title);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAny suggestion is welcome!\u003C/p\u003E\n"}]}