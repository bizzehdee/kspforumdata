{"TopicId":99279,"ForumId":20,"TopicTitle":"Is there an easy way to figure out in game where a part is saved to in the game data follder?","CreatedByName":"Rabada","CreatedById":66044,"CreatedDateTime":"2015-02-10T15:14:00Z","PageNum":1,"Articles":[{"CreatedByName":"Rabada","CreatedById":66044,"CreatedDateTime":"2015-02-10T15:14:00Z","Content":"\n\u003Cp\u003ESometimes I like to do some part pruning of mods, or there may be a part I wish to edit, and I\u0027ll end up spending 10 to 15 minutes jet to find the .cfg file for that part. Is there an easy way to track down the .cfg of a part?\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-02-10T15:39:52Z","Content":"\n\u003Cp\u003ENot incredibly easy, no. If you do not know what mod it came from, you can sometimes divine it from the listed manufacturer in-game. Most mods use their own little name.\u003C/p\u003E\u003Cp\u003EOnce you figure out the mod, it will be in that mods folder (99% of the time) and from there you can kind of guess from their folder structure based on the name of the part. The part name will be in the *.cfg file exactly as shown in game.\u003C/p\u003E\u003Cp\u003ENot an \u0022easy\u0022 way, but it\u0027s as close as you are going to get.\u003C/p\u003E\n"},{"CreatedByName":"Rokmonkey","CreatedById":9319,"CreatedDateTime":"2015-02-10T15:45:50Z","Content":"\n\u003Cp\u003EAnother way is to use CKAN as your mod installer when possible, and then get the Part Manager plugin for it. In there you can enable/disable parts and it also gives you the full path to that part.\u003C/p\u003E\n"},{"CreatedByName":"Sampa","CreatedById":130079,"CreatedDateTime":"2015-02-10T16:41:51Z","Content":"\n\u003Cp\u003Ethere are some small clues, if you read the \u0022company\u0022 name the part is from, that acts as a clue. Past that, *shrugs*\u003C/p\u003E\n"},{"CreatedByName":"kujuman","CreatedById":28299,"CreatedDateTime":"2015-02-10T17:13:24Z","Content":"\n\u003Cp\u003EThis method may be...awful...but it\u0027d work.\u003C/p\u003E\u003Cp\u003E1) Build a vessel in the VAB (or SPH) and attach only one of each part you\u0027d like to find.\u003C/p\u003E\u003Cp\u003E1a) Save the vessel with a name you\u0027ll remember.\u003C/p\u003E\u003Cp\u003E1b) Close KSP.\u003C/p\u003E\u003Cp\u003E2) Open your file browser and navigate to the main KSP install.\u003C/p\u003E\u003Cp\u003E2a) Open your .craft file in a text editor.\u003C/p\u003E\u003Cp\u003E2b) Open KSP.log (in the main KSP directory) in a new text editor window.\u003C/p\u003E\u003Cp\u003E3) In your .craft file, use the search function to search for \u0022part = \u0022\u003C/p\u003E\u003Cp\u003E3a) You\u0027ll find a line like \u0022part = dockingPort2_4294534820\u0022. The portion before the _4294534820 is the name of the part. (The _4294534820 is random and is added to create a unique name for the part on the vessel).\u003C/p\u003E\u003Cp\u003E3b) In KSP.log, use the search function to find \u0022dockingPort2\u0022. You\u0027ll get a line like \u0022[LOG 18:53:32.896] Config(PART) Squad/Parts/Utility/dockingPort/dockingPort/dockingPort2\u0022\u003C/p\u003E\u003Cp\u003E3c) This means that the part is defined in your GameData/Squad/Parts/Utility/dockingPort/dockingPort.cfg\u003C/p\u003E\u003Cp\u003EDo 3 - 3c for each part in the .craft file.\u003C/p\u003E\u003Cp\u003ECheers!\u003C/p\u003E\n"},{"CreatedByName":"Jouni","CreatedById":97346,"CreatedDateTime":"2015-02-10T17:14:23Z","Content":"\n\u003Cp\u003EIt depends on the OS you\u0027re using. In OS X and Linux, you can always use grep:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euruk:GameData jltsiren$ grep -ri --include *.cfg \u0022a more reasonable engine\u0022 .\u003Cbr\u003E./Squad/Parts/Engine/liquidEnginePoodle/liquidEnginePoodle.cfg:description = A more reasonable engine for rough economic times, the Poodle engine doubles as a BBQ when at low power.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"kujuman","CreatedById":28299,"CreatedDateTime":"2015-02-10T17:19:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Jouni\u0022 data-cite=\u0022Jouni\u0022\u003E\u003Cdiv\u003EIt depends on the OS you\u0027re using. In OS X and Linux, you can always use grep:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euruk:GameData jltsiren$ grep -ri --include *.cfg \u0022a more reasonable engine\u0022 .\u003Cbr\u003E./Squad/Parts/Engine/liquidEnginePoodle/liquidEnginePoodle.cfg:description = A more reasonable engine for rough economic times, the Poodle engine doubles as a BBQ when at low power.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes...I tried searching how to get Windows to search inside .cfg files, but it\u0027s not abundantly clear if it\u0027s even possible.\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-02-10T22:07:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alshain\u0022 data-cite=\u0022Alshain\u0022\u003E\u003Cdiv\u003ENot incredibly easy, no. If you do not know what mod it came from, you can sometimes divine it from the listed manufacturer in-game. Most mods use their own little name.\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003ENot an \u0022easy\u0022 way, but it\u0027s as close as you are going to get.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA) Use the .dll from filter extensions, sorts all parts by folder instead of manufacturer. No divining involved\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E (As a seperate plugin) I could easily copy that piece of code and just have it log the complete path to every part once KSP hits the main menu (possibly earlier). Not something I\u0027d get any use out of, but it\u0027s a 5 minute job to do. That would be the easy solution.\u003C/p\u003E\n"},{"CreatedByName":"Rabada","CreatedById":66044,"CreatedDateTime":"2015-02-11T00:46:10Z","Content":"\n\u003Cp\u003EKujuman: I think I could do that! That sounds like a great idea! thanks!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Jouni\u0022 data-cite=\u0022Jouni\u0022\u003E\u003Cdiv\u003EIt depends on the OS you\u0027re using. In OS X and Linux, you can always use grep:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euruk:GameData jltsiren$ grep -ri --include *.cfg \u0022a more reasonable engine\u0022 .\u003Cbr\u003E./Squad/Parts/Engine/liquidEnginePoodle/liquidEnginePoodle.cfg:description = A more reasonable engine for rough economic times, the Poodle engine doubles as a BBQ when at low power.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI actually spent 6 or 7 hours a week ago figuring out how to install Ubuntu onto a spare hard drive JUST for the sole purpose of playing KSP. So the only thing I know about Linux is to just barely know how to get KSP running. My KSP install seems to get a bit laggy when it uses more than 8 gB of RAM, so I wanted to get rid of some parts I am sure I won\u0027t use.\u003C/p\u003E\u003Cp\u003ESo what\u0027s this grep thing you are referring to?\u003C/p\u003E\n"},{"CreatedByName":"FleshJeb","CreatedById":111640,"CreatedDateTime":"2015-02-11T03:48:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kujuman\u0022 data-cite=\u0022kujuman\u0022\u003E\u003Cdiv\u003EYes...I tried searching how to get Windows to search inside .cfg files, but it\u0027s not abundantly clear if it\u0027s even possible.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThey don\u0027t make it easy any more:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.howtogeek.com/99406/how-to-search-for-text-inside-of-any-file-using-windows-search/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.howtogeek.com/99406/how-to-search-for-text-inside-of-any-file-using-windows-search/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Jouni","CreatedById":97346,"CreatedDateTime":"2015-02-11T09:59:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rabada\u0022 data-cite=\u0022Rabada\u0022\u003E\u003Cdiv\u003ESo what\u0027s this grep thing you are referring to?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Grep\u0022 rel=\u0022external nofollow\u0022\u003Egrep\u003C/a\u003E is a standard Unix search tool dating back to the 70s. Like most Unix tools, you use it in a terminal. In this case, the command is\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Egrep -ri --include *.cfg \u0022a more reasonable engine\u0022 .\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand you run it in the GameData directory. grep is the name of the program, -ri tells grep to continue the search recursively in all subdirectories it encounters (-r) and to do a case-insensitive search (-i), --include *.cfg restricts the search to files with extension .cfg, \u0022a more reasonable engine\u0022 is the pattern (actually a regexp) to search for, and . tells grep to search the current directory.\u003C/p\u003E\u003Cp\u003EThere are probably similar command line tools in Windows as well, but I can\u0027t check what they are and how they work, because computers running Windows are so hard to find these days.\u003C/p\u003E\n"},{"CreatedByName":"ratchet freak","CreatedById":119895,"CreatedDateTime":"2015-02-11T12:30:32Z","Content":"\n\u003Cp\u003Ein absence of a grep tool you can use notepad\u002B\u002B\u0027s search in files it works kinda like grep (select root directory, specify word to search, press search and wait a bit)\u003C/p\u003E\n"},{"CreatedByName":"Slugy","CreatedById":76281,"CreatedDateTime":"2015-02-12T17:21:30Z","Content":"\n\u003Cp\u003EThe windows built in FindStr is entirely usable for this, and many basic grep like uses e.g.\u003C/p\u003E\u003Cp\u003EC:\\Programs\\KSP_win\\GameData\u0026gt;FindStr /S \u0022LV-909\u0022 *.cfg\u003C/p\u003E\u003Cp\u003Eoutputs:\u003C/p\u003E\u003Cp\u003ESquad\\Parts\\Engine\\liquidEngineLV-909\\liquidEngineLV-909.cfg:// LV-909 Liquid Fuel Engine\u003C/p\u003E\u003Cp\u003ESquad\\Parts\\Engine\\liquidEngineLV-909\\liquidEngineLV-909.cfg:title = LV-909 Liquid Fuel Engine\u003C/p\u003E\u003Cp\u003ESquad\\Parts\\Engine\\liquidEnginePoodle\\liquidEnginePoodle.cfg:// LV-909 Liquid Fuel Engine\u003C/p\u003E\n"},{"CreatedByName":"Fail-Man 3D","CreatedById":67177,"CreatedDateTime":"2015-02-13T07:41:21Z","Content":"\n\u003Cp\u003EOn Linux (and maybe Mac OS X; I only have G5-and-older Macs available to me, and they\u0027re too loud to use this late at night):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[noparse]find GameData/ -type f -iname \u0027*.cfg\u0027 -print0 | xargs -i -0 -P $some_number -- grep --color=yes -nHi $part_id {}[/noparse]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eseems to work, and appears to be slightly faster (on my machine) than \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Egrep -r\u003C/span\u003E when \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003E$some_number=5\u003C/span\u003E.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003E$some_number\u003C/span\u003E == number of jobs to run in parallel (faster than just passing \u0022\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003E-exec grep -nHi $part_id {} \\;\u003C/span\u003E\u0022 to \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Efind\u003C/span\u003E, unless your computer is afflicted with The World\u0027s Slowest 5200RPM Hard Disk\u00C3\u00A2\u00E2\u20AC\u017E\u00C2\u00A2 or other impediments to disk I/O)\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003E$part_id\u003C/span\u003E == the internal name of the part (gets logged to the debug log on delete instead of on instantiate; pick up the part, drop it on the part list, and check the end of the debug log)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-13T07:46:48Z\u0022 title=\u002202/13/2015 07:46  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 13, 2015\u003C/time\u003E by Fail-Man 3D\u003C/strong\u003E\n\u003Cbr\u003ELame excuse for not testing on Mac\n\u003C/span\u003E\n"}]}