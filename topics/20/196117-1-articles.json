{"TopicId":196117,"ForumId":20,"TopicTitle":"KOS: Easy flight recorder script for your auto liftoff needs!.","CreatedByName":"SpaceCarmelo","CreatedById":194212,"CreatedDateTime":"2020-08-05T12:33:00Z","PageNum":1,"Articles":[{"CreatedByName":"SpaceCarmelo","CreatedById":194212,"CreatedDateTime":"2020-08-05T12:33:00Z","Content":"\n\u003Cp\u003E\nAre you tired of writing on paper your flight data when testing a rocket, in order to write a kos program for auto-liftoff later?\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI was tired too! That\u0027s why i invented my own software.\n\u003C/p\u003E\n\u003Cp\u003E\nLet me introduce you \u003Cstrong\u003EACFEL! A\u003C/strong\u003Eutomatic\u00A0\u003Cstrong\u003EC\u003C/strong\u003Eheck\u00A0\u003Cstrong\u003EF\u003C/strong\u003Eor\u00A0\u003Cstrong\u003EE\u003C/strong\u003Experimental\u00A0\u003Cstrong\u003EL\u003C/strong\u003Eiftoff!\n\u003C/p\u003E\n\u003Cp\u003E\nIf you are a n00b like me, probably you used to build an\u00A0experimental rocket, flight it to Kerbin orbit, write down on paper at what altitude you where pitching your nose, and then trying to reproduce your flight it with KOS with more or less Kerbal-Style results.\u00A0\u003Cimg alt=\u0022:rolleyes:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 title=\u0022:rolleyes:\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nBut with this simple program you can finally take some snapshots of your liftoff in order to check your data later and write your liftoff program with no stress!\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E(edit: some stress included when you forget \u0022.\u0022 at the end of a line\u00A0\u003Cimg alt=\u0022:mad:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_angry.gif\u0022 title=\u0022:mad:\u0022\u003E\u00A0)\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSimply run\u00A0\u003Cstrong\u003EACFEL\u003C/strong\u003E\u00A0on your KOS CPU and spam Action Group 4 everytime you do something significant in your liftoff, \u003Cstrong\u003EACFEL\u003C/strong\u003E\u00A0will print several\u00A0.csv files containing altitude, apoapsis, throttle, pitch and all the informations you need when testing a rocket.\n\u003C/p\u003E\n\u003Cp\u003E\nThen simply push your .csv on Github and make a Google Sheet document that takes data from the Github\u00A0links (using the =IMPORTDATA(\u0022link\u0022) function on Google Sheets) and Hey! Look at that, that\u0027s your flight! Finally recorded.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#2e3035;color:#ffffff;font-size:16px;\u0022\u003E\u003Cimg alt=\u0022HPrWfUI.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/HPrWfUI.png\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHint#1: use\u00A0\u003Cstrong\u003EACFEL\u003C/strong\u003E\u00A0inside a folder since your .csv files will be exported in the same directory where the\u00A0\u003Cstrong\u003EACFEL.ks\u00A0\u003C/strong\u003Eprogram is located!\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHint#2: Google Sheets sometimes is buggy when gathering data from github, simply delete and paste the =IMPORTDATA function to make it update!\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHint#3: Make graphics on Google Sheets and act like you\u0027re a NASA engineer!\n\u003C/p\u003E\n\u003Cp\u003E\nTODO: Make an autopilot script that takes data from\u00A0\u003Cstrong\u003EACFEL!\u00A0\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nScript is here:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n//ACFEL V.10\u003Cbr\u003E\n//AUTOMATIC CHECK FOR EXPERIMENTAL LIFTOFFS\u003Cbr\u003E\n//pitch_for original link-\u0026gt; \u003Ca href=\u0022https://github.com/KSP-KOS/KSLib/blob/master/library/lib_navball.ks\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KSLib/blob/master/library/lib_navball.ks\u003C/a\u003E\u00A0made by nuggreat\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n// This file is distributed under the terms of the MIT license\n\u003C/p\u003E\n\u003Cp\u003E\n//Author:\u00A0\u00A0SpaceCarmelo\n\u003C/p\u003E\n\u003Cp\u003E\n//INTRO\n\u003C/p\u003E\n\u003Cp\u003E\nclearscreen.\n\u003C/p\u003E\n\u003Cp\u003E\nPRINT \u0022ACFEL - AUTOMATIC CHECK FOR EXPERIMENTAL LIFTOFFS\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n//Functions Declaration\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nlog ship:name to \u0022name.csv\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nfunction pisa {\u003Cbr\u003E\n\u00A0 print \u0022ALT: \u0022 \u002B ceiling(ship:altitude).\u003Cbr\u003E\n\u00A0 print \u0022AP: \u0022 \u002B ceiling(apoapsis).\u003Cbr\u003E\n\u00A0 print \u0022PE: \u0022 \u002B ceiling(periapsis).\u003Cbr\u003E\n\u00A0 print \u0022ETA:AP \u0022 \u002B ceiling(eta:apoapsis).\u003Cbr\u003E\n\u00A0 print \u0022PITCH: \u0022 \u002B ceiling(pitch_for).\u003Cbr\u003E\n\u00A0 print \u0022THR: \u0022 \u002B throttle.\u003Cbr\u003E\n\u00A0 print \u0022STATUS: \u0022 \u002B ship:status.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nfunction pitch_for {\u003Cbr\u003E\n\u00A0 parameter ves is ship,thing is \u0022default\u0022.\u003Cbr\u003E\n\u00A0 local pointing is ves:facing:forevector.\u003Cbr\u003E\n\u00A0 if not thing:istype(\u0022string\u0022) {\u003Cbr\u003E\n\u00A0 \u00A0 set pointing to type_to_vector(ves,thing).\u003Cbr\u003E\n\u00A0 }\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 return 90 - vang(ves:up:vector, pointing).\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nfunction record {\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 clearscreen.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 print \u0022Recording Data at: \u0022 \u002B TIME.\u003Cbr\u003E\n\u00A0 print pisa.\u003Cbr\u003E\n\u00A0 log ceiling(ship:altitude) to \u0022alt.csv\u0022.\u003Cbr\u003E\n\u00A0 log ceiling(apoapsis) to \u0022ap.csv\u0022.\u003Cbr\u003E\n\u00A0 log ceiling(periapsis) to \u0022pe.csv\u0022.\u003Cbr\u003E\n\u00A0 log ceiling(eta:apoapsis) to \u0022eta_ap.csv\u0022.\u003Cbr\u003E\n\u00A0 log ceiling(pitch_for) to \u0022pitch.csv\u0022.\u003Cbr\u003E\n\u00A0 log throttle to \u0022throttle.csv\u0022.\u003Cbr\u003E\n\u00A0 log stage:number to \u0022stage.csv\u0022.\u003Cbr\u003E\n\u00A0 log ship:status to \u0022status.csv\u0022.\u003Cbr\u003E\n\u00A0\u00A0\u003Cbr\u003E\n\u00A0 AG4 OFF.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n//PROGRAM\n\u003C/p\u003E\n\u003Cp\u003E\nUNTIL 0 {\u00A0\u003Cbr\u003E\n\u00A0 if AG4 RECORD.\u00A0\u003Cbr\u003E\n\u00A0 wait 0.1.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-08-05T12:35:06Z\u0022 title=\u002208/05/2020 12:35  PM\u0022 data-short=\u00223 yr\u0022\u003EAugust 5, 2020\u003C/time\u003E by SpaceCarmelo\u003C/strong\u003E\n\u003Cbr\u003Egrammar correction\n\u003C/span\u003E\n"},{"CreatedByName":"Miguelsgamingch","CreatedById":201607,"CreatedDateTime":"2020-08-05T12:53:46Z","Content":"\n\u003Cp\u003E\nInteresting...\n\u003C/p\u003E\n"}]}