{"TopicId":84280,"ForumId":20,"TopicTitle":"[Plugin] More/Better Constraint Modules.","CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-10T15:36:31Z","PageNum":1,"Articles":[{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-10T15:36:31Z","Content":"\n\u003Cp\u003EOne problem I ran into while developing the landing gear for the Skylon is that AFAIK existing \u003Cstrong\u003EFXModuleConstrainPosition\u003C/strong\u003E and \u003Cstrong\u003EFXModuleLookAtConstraint\u003C/strong\u003E are too simple.\u003C/p\u003E\u003Cp\u003ESo I have five requests:\u003C/p\u003E\u003Cp\u003E1. A module that allows the position and/or rotation of an object to be constrained to X and/or Y and/or Z position of another object.\u003C/p\u003E\u003Cp\u003E2. The same module with an option to have weighted influence from multiple objects.\u003C/p\u003E\u003Cp\u003E3. Inverse Kinematics for two objects (like torque arms).\u003C/p\u003E\u003Cp\u003E4. LookAt module with weighted influence from multiple targets.\u003C/p\u003E\u003Cp\u003E5. The ability to animate the inverse of a targets rotation and/or translation.\u003C/p\u003E\u003Cp\u003EEasy?\u003C/p\u003E\u003Cp\u003EDifficult?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-11T19:59:20Z\u0022 title=\u002209/11/2014 07:59  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 11, 2014\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-11T00:26:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EOne problem I ran into while developing the landing gear for the Skylon is that AFAIK existing \u003Cstrong\u003EFXModuleConstrainPosition\u003C/strong\u003E and \u003Cstrong\u003EFXModuleLookAtConstraint\u003C/strong\u003E are too simple.\u003Cp\u003ESo I have four requests:\u003C/p\u003E\u003Cp\u003E1. A module that allows the position and/or rotation of an object to be constrained to X and/or Y and/or Z position of another object.\u003C/p\u003E\u003Cp\u003E2. The same module with an option to have weighted influence from multiple objects.\u003C/p\u003E\u003Cp\u003E3. Inverse Kinematics for two objects (like torque arms).\u003C/p\u003E\u003Cp\u003E4. LookAt module with weighted influence from multiple targets.\u003C/p\u003E\u003Cp\u003EEasy?\u003C/p\u003E\u003Cp\u003EDifficult?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMihara has something similar to this with VariableAnimator, but they are only for internal Props, and the targets are internal variables instead of other transforms.\u003C/p\u003E\u003Cp\u003EThe translation constraint is probably the easiest. usage might look something like this\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003Ename = FXtranslateConstraint\u003Cbr\u003ECONSTRAINTRANSLATEFX        //block set can be repeated so the mover moves in combinations of X,Y, or Z\u003Cbr\u003E{\u003Cbr\u003EmoversDirection = 0,0,1    //sets the direction the mover will translate in, -1 would flip the direction for the mover\u003Cbr\u003EtargetName = transformA  //target\u0027s translation in world space\u003Cbr\u003EmoversName = transformB   //mover\u0027s translation in local space\u003Cbr\u003EmoversMultiplier = 1    //something to reduce or multiply the mover\u0027s translation; defaults to 1\u003Cbr\u003EmoversLimit = 1          // aboslute value the mover can move in a direction.\u003Cbr\u003E}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-11T00:30:37Z\u0022 title=\u002209/11/2014 12:30  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 11, 2014\u003C/time\u003E by nli2work\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-11T18:39:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003EThe translation constraint is probably the easiest. usage might look something like this\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003Ename = FXtranslateConstraint\u003Cbr\u003ECONSTRAINTRANSLATEFX        //block set can be repeated so the mover moves in combinations of X,Y, or Z\u003Cbr\u003E{\u003Cbr\u003EmoversDirection = 0,0,1    //sets the direction the mover will translate in, -1 would flip the direction for the mover\u003Cbr\u003EtargetName = transformA  //target\u0027s translation in world space\u003Cbr\u003EmoversName = transformB   //mover\u0027s translation in local space\u003Cbr\u003EmoversMultiplier = 1    //something to reduce or multiply the mover\u0027s translation; defaults to 1\u003Cbr\u003EmoversLimit = 1          // aboslute value the mover can move in a direction.\u003Cbr\u003E}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s pretty good but I don\u0027t think it would be enough to animate torque arms on its own. The problem with rotations is that tracking the position of the tip of something along a single axis results in motion best described by a trigonometric function, not a linear one. This is exactly why our attempts have been unsuccessful.\u003C/p\u003E\u003Cp\u003EIn order to animate a LookAt target for torque arms you\u0027d have to take into account the slight horizontal motion away from the vertical axis, as well as halve the vertical motion of the suspension.\u003C/p\u003E\u003Cp\u003EI\u0027ve added one more request to my list.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-11T18:44:23Z\u0022 title=\u002209/11/2014 06:44  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 11, 2014\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-09-11T19:17:20Z","Content":"\n\u003Cp\u003EIwe had good success porting my unity based test plugins to ksp. Basically anything that works in unity can be ported to ksp with only a little elbow grease (except shaders appearently) i was thinking of porting this \u003Ca href=\u0022http://u3d.as/content/dogzer/inverse-kinematics/2fP\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://u3d.as/content/dogzer/inverse-kinematics/2fP\u003C/a\u003E to ksp but i decided to use an animation controller script instead for coding simplicity. So if your thinking of coding it yourself for your project Id suggest you look into that if it would suit your needs. Another way would be to use raycasts to set the positions(this might be a lot easier on the cpu than using actual physics) there are tutorials online for car suspensions you can use as templates to get started on that\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-11T19:22:35Z","Content":"\n\u003Cp\u003EIt would have to be someone else, as I don\u0027t code anywhere near the required level.\u003C/p\u003E\n"}]}