{"TopicId":205001,"ForumId":20,"TopicTitle":"Performance enhancing mod idea:","CreatedByName":"t_v","CreatedById":213541,"CreatedDateTime":"2021-09-25T20:26:45Z","PageNum":1,"Articles":[{"CreatedByName":"t_v","CreatedById":213541,"CreatedDateTime":"2021-09-25T20:26:45Z","Content":"\n\u003Cp\u003E\nI know this comes across as an ignorant move as I am asking someone else to consider developing a mod while I am unwilling to do it myself, but I was thinking about a mod that could reduce CPU load for large stations in vacuums. If you disabled the collision detection for individual parts but created a collision box for the station as a whole, treating it as a single rigid body until something touches it, it could cut down on a lot of computation. One inaccuracy that occurs here is that the inertia of the parts are computed as one spherical mass so some of the fancy effects that occur from having weird shapes spinning around would disappear but for most large applications, instead of checking each part for forces it would only check one big \u0022part\u0022 for forces without necessarily combining the modules. What do you think?\n\u003C/p\u003E\n"},{"CreatedByName":"zer0Kerbal","CreatedById":190933,"CreatedDateTime":"2021-09-26T05:50:42Z","Content":"\n\u003Cp\u003E\nwelding mod is the answer, unfortunately is isn\u0027t working in 1.12.x; \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/187168-lisias/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022187168\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/187168-lisias/\u0022 rel=\u0022\u0022\u003E@Lisias\u003C/a\u003E might be able to shed some light on it.\n\u003C/p\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2021-09-26T12:01:58Z","Content":"\n\u003Cp\u003E\nWelding is an alternative, yes, but not exactly the answer the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E is looking for. (not to mention that the thing is not working fine on modern KSPs - besides you still can weld parts on older ones and then migrate the welded parts).\n\u003C/p\u003E\n\u003Cp\u003E\nWhat he means is tricky, but can eliminate the need for the welding tool for some use cases, i.e., when you don\u0027t mind the physics when no collisions are possible, but want them back when they are possible - once you weld parts, you lose the ability to explode only one part, you lose the whole shebang.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat follows is pure brain-storming, without too much care about feasibility. This may not even be the right way to go, but this is why we do brainstormings - ruling out bad ideas before trying them is also a help. \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EOn KSP, there\u0027s a thingy called \u0022Physics Significance\u0022. Part without Physics Significance don\u0027t generate drag, for example - perhaps it could be possible to dynamically set all parts of a vessel (but the root) to have no Physics Significance, while giving the root part a spherical \u0022soft collider\u0022 those radius cover all the vessel. Once the \u0022Soft collider\u0022 is hit, instead of blowing things up, it would trigger a code that would restore the vessel original state and remove the \u0022Soft Collider\u0022.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m not exactly sure how then Physics Significance works - we need to do some research on the matter, and we need to check if we can change it on a living part - but I think this can be promising...\n\u003C/p\u003E\n"},{"CreatedByName":"Hohmannson","CreatedById":202712,"CreatedDateTime":"2021-09-26T12:12:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224036401\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221632657718\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nthis can be promising\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot too much, it was tested and no significant improvements.\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022144573\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed5962431422\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/192208-wip-prunephysics-turn-parts-to-physicsless-for-better-performance-with-large-ships/\u0026amp;do=embed\u0022 style=\u0022height:195px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224036222\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221632601605\u0022 data-ipsquote-userid=\u0022213541\u0022 data-ipsquote-username=\u0022t_v\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, t_v said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nit would only check one big \u0022part\u0022 for forces without necessarily combining the modules\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSeen a mod like that, but it does it for landed vessels only and it\u0027s in proof-of-concept stage and it patches core game\u0027s libs so won\u0027t post it. Look for a mod that puts \u003Cstrong\u003Ephysics\u003C/strong\u003E on \u003Cstrong\u003Ehold\u003C/strong\u003E in Google. Coding practice will still be needed to make it work in orbiting and suborbital situations. It offers visible improvements when you activate it on large ground bases, it\u0027s very promising.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2021-09-30T14:13:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224036222\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221632601605\u0022 data-ipsquote-userid=\u0022213541\u0022 data-ipsquote-username=\u0022t_v\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 9/25/2021 at 10:26 PM, t_v said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf you disabled the collision detection for individual parts but created a collision box for the station as a whole, treating it as a single rigid body until something touches it, it could cut down on a lot of computation.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFirst, rigidbodies and collisions are two separate, mostly unrelated things. Collision detection is done through collider meshes, that might or might not be part of a rigidbody. The amount of colliders has almost no performance impact in itself, as long as no collisions happen. Arguably, it incurs a small cost when a raycasting call is being made (solar panels and radiators for example). What is CPU heavy is the rigidbodies constraint solving, or said otherwise, part joints.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224036222\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221632601605\u0022 data-ipsquote-userid=\u0022213541\u0022 data-ipsquote-username=\u0022t_v\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 9/25/2021 at 10:26 PM, t_v said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nfor most large applications, instead of checking each part for forces it would only check one big \u0022part\u0022 for forces without necessarily combining the modules. What do you think?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhile the idea make some sense, the implementation would be a nightmare. The \u0022default\u0022 physics state is just too deeply relied upon by too many pieces of stock code, and even if we were able to patch everything, that would still cause tons of issues with mods.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224036403\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221632658374\u0022 data-ipsquote-userid=\u0022202712\u0022 data-ipsquote-username=\u0022Hohmannson\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 9/26/2021 at 2:12 PM, Hohmannson said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot too much, it was tested and no significant improvements.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIn retrospect, I think PrunePhysics just isn\u0027t working (it isn\u0027t actually setting parts as physic-less parts), that\u0027s why we didn\u0027t ever see the slightest performance improvement.\u003Cbr\u003E\nSince then, I\u0027ve done quite a few tests on that front, and yes, actually setting that state can result in non-negligible overall performance improvement, up to 30 % with high part count vessels (500\u002B parts) when physics are the main thing running, but more realistically in the 10-25 % range in general.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224036401\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221632657718\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 9/26/2021 at 2:01 PM, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m not exactly sure how then Physics Significance works - we need to do some research on the matter, and we need to check if we can change it on a living part - but I think this can be promising...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPhysics significance works by parenting the part gameobject to its \u0022KSP hierarchy\u0022 parent gameobject and removing its rigidbody and joints, which cause Unity to directly update the child position/rotation, instead of calling the PhysX solver.\u003Cbr\u003E\nTheoretically, if you set it on all parts beside the root part, you end up with no joints at all, and a single rigidbody (the root part) whose mass is the sum of all the vessel parts mass.\u003Cbr\u003E\nIn practice, this doesn\u0027t work because \u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nThis mean that the vessel \u003Cabbr title=\u0022Center of Mass\u0022\u003E\u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E\u003C/abbr\u003E becomes the root part \u003Cabbr title=\u0022Center of Mass\u0022\u003E\u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E\u003C/abbr\u003E.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan\u003EThe mass summing isn\u0027t entirely reliable (not investigated much, but it likely ignore IPartMassModifier modules)\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan\u003EAlmost everything that attempt to provide forces/torques like atmospheric lift, engine thrust or attitude control (reaction wheels, \u003Cabbr title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E\u003C/abbr\u003E, control surfaces) will be heavily borked.\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan\u003EThis breaks tons of things that rely on individual rigidbodies to exist on the part : wheels, legs, docking ports, robotics to cite a few obvious ones\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan\u003EThis completely breaks the stock landed checks and landed easing code.\u003C/span\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nIn short, there are just too many corner cases to attempt to apply that globally without causing tons of bugs and game-breaking side effects.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224036403\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221632658374\u0022 data-ipsquote-userid=\u0022202712\u0022 data-ipsquote-username=\u0022Hohmannson\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 9/26/2021 at 2:12 PM, Hohmannson said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSeen a mod like that, but it does it for landed vessels only and it\u0027s in proof-of-concept stage and it patches core game\u0027s libs so won\u0027t post it. Look for a mod that puts \u003Cstrong\u003Ephysics\u003C/strong\u003E on \u003Cstrong\u003Ehold\u003C/strong\u003E in Google. Coding practice will still be needed to make it work in orbiting and suborbital situations. It offers visible improvements when you activate it on large ground bases, it\u0027s very promising.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYep, that\u0027s mine \u003Cspan\u003E: \u003C/span\u003E\u003Ca href=\u0022https://github.com/gotmachine/PhysicsHold\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/gotmachine/PhysicsHold\u003C/a\u003E\u003Cbr\u003E\nIt takes a different approach, relying on the fact that KSP already provide a \u0022physics disabled\u0022 mode in the form of the \u0022packed\u0022 vessel state that is used during (non-physics) timewarp. The mod just force-activate that mode when you don\u0027t timewarp.\u003Cbr\u003E\nOn the technical side, this is a very different. The \u0022packed\u0022 state change the state of all rigidbodies to \u0022kinematic\u0022, essentially disabling all PhysX force/torque/joint interactions on them. In that mode, KSP also put the vessel \u0022on rails\u0022, updating every part position/rotation manually instead of letting the joint physics do the job of keeping them in their place.\n\u003C/p\u003E\n\u003Cp\u003E\nPerformance wise, it\u0027s a bit less efficient than the \u0022physics significance\u0022 trick (directly parenting the gameobjects), but very comparable. Since it\u0027s a default KSP state, KSP (and most mods) handle it correctly in most situations, the main \u0022hacks\u0022 in my plugin are because I\u0027m enabling EVAing/boarding,\u00A0 docking/undocking and partially enabling physics for robotic parts when the vessel is on physics hold, which are scenarios that weren\u0027t provisioned for in the KSP code (but making them work is relatively easy). The huge advantage of this solution is that it doesn\u0027t change fundamentally the state of the parts : rigidbodies still exist, their mass and physical stats are still computed.\n\u003C/p\u003E\n\u003Cp\u003E\nThis being said, the plugin only applies to landed bases, because things can get a bit more complicated in other situations \u003Cspan\u003E\u003Cspan\u003E:\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Cspan\u003EKinematic rigidbodies can only collide with non-kinematic rigidbodies. This is a well known effect seen in stock when timewarping, with vessels passing right through each others. However, kinematic rigidbodies will collide with non-kinematic ones. This mean that for a landed base, setting the packed state isn\u0027t an issue, since two bases relative positions are fixed (so they won\u0027t ever collide), and things that can \u003Cspan\u003Emove (rovers for example) will collide with them just fine. However, this is definitely an issue in space, where two packed vessels can collide with each other. This is the main reason why I only did this for landed bases. Still, this is an issue that could be worked around, either by naively re-enabling physics when a collision is about to happen, or by a more complex implementation that handle collisions manually.\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nPacked vessels are \u0022on rails\u0022 and are essentially unmovable, be it for attitude control, thrust, or reacting to collisions. These are all things that could be re-implemented, but that would require a significant effort.\n\u003C/li\u003E\n\u003Cli\u003E\nThere is a problematic issue with setting the packed state on the active vessel if other non-landed vessels are in physics range, causing those vessels velocity to be reset to zero. The workaround is likely to be a bit difficult.\n\u003C/li\u003E\n\u003Cli\u003E\nThis can\u0027t work for rovers, due to them relying on wheels physics.\n\u003C/li\u003E\n\u003Cli\u003E\nThis can\u0027t work for atmospheric flight.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222021-09-30T15:05:59Z\u0022 title=\u002209/30/2021 03:05  PM\u0022 data-short=\u00222 yr\u0022\u003ESeptember 30, 2021\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"t_v","CreatedById":213541,"CreatedDateTime":"2021-09-30T19:23:31Z","Content":"\n\u003Cp\u003E\nI see. Thanks for the huge insight to the physics engine. The main use case for this theoretical mod would be to build orbital stations that could run well, large enough that there would be no real reason for attitude control or thrust. Initially I was thinking of making something that fused the structural parts together and made their joints rigid so that you could build large platforms that act as one plate of metal or a truss that goes the entire length of a ship that doesn\u0027t need to compute deformation because it acts like one gigantic part. But the wider use case of generally removing physics from parts is also a good one.\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224037925\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221633011228\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPacked vessels are \u0022on rails\u0022 and are essentially unmovable, be it for attitude control, thrust, or reacting to collisions. These are all things that could be re-implemented, but that would require a significant effort.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat is probably true and I don\u0027t know nearly as much as you about this, but if vessels are packed like this, what trickery does the \u0022persistent thrust through timewarp\u0022 feature use? Could it be ported over to allow for thrust, provided that you activated engines before packing the vessel?\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224037925\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221633011228\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKinematic rigidbodies can only collide with non-kinematic rigidbodies\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nso as far as I understand this, the packed vessels are kinematic rigid bodies and the unpacked ones are non-kinematic, and they will collide fine. But if you take two packed vessels, they will not collide? I\u0027m not sure if this is the correct interpretation of that, but if you had a small unpacked spaceship, it could collide with the rigid body that is the packed station. At that point, it would function the same as a landed base, right? The problem comes if you are colliding two packed vessels because they clip through each other. That is a problem I personally am ok with because at the point that I need to pack a vessel, there is no reason it should dock to another packed vessel because it has everything it needs already.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224037925\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221633011228\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere is a problematic issue with setting the packed state on the active vessel if other non-landed vessels are in physics range, causing those vessels velocity to be reset to zero. The workaround is likely to be a bit difficult.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nyeah, this seems like a pretty major issue. I don\u0027t know why it would do that, considering that time warping while within range of another vessel does not cause it to instantly drop from orbital speeds to stationary, but I\u0027m learning to mod and I might be able to come up with something.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nalso, your mod looks really cool. I see that it is updated to 1.12! I\u0027ll try it out as soon as I have a surface base to be proud of. Good luck!\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2021-09-30T20:31:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224038040\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221633029811\u0022 data-ipsquote-userid=\u0022213541\u0022 data-ipsquote-username=\u0022t_v\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 minutes ago, t_v said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nwhat trickery does the \u0022persistent thrust through timewarp\u0022 feature use?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf you mean the persistent thrust mod (there is no such feature in stock), that\u0027s what I mean by \u0022significant effort\u0022. That mod is quite a large piece of code, and is far from working correctly in all situations. But to be clear, I wasn\u0027t saying it\u0027s not doable, just that it would require a lot of work and debugging, and that this is advanced stuff that require a good understanding of KSP internals.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224038040\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221633029811\u0022 data-ipsquote-userid=\u0022213541\u0022 data-ipsquote-username=\u0022t_v\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n20 minutes ago, t_v said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat is a problem I personally am ok with because at the point that I need to pack a vessel, there is no reason it should dock to another packed vessel because it has everything it needs already.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYep, this is indeed a minor limitation that can be worked around relatively easily.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224038040\u0022 data-ipsquote-contentid=\u0022205001\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221633029811\u0022 data-ipsquote-userid=\u0022213541\u0022 data-ipsquote-username=\u0022t_v\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n45 minutes ago, t_v said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t know why it would do that, considering that time warping while within range of another vessel does not cause it to instantly drop from orbital speeds to stationary\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, when timewarping, all vessels are packed. Here we introduce a situation where some vessels are packed and other aren\u0027t. I suspect it has to do with the floating origin system and the frame velocity becoming null when the active vessel is being transitioned from the in physics to packed state. This can be probably be worked around, but identifying and understanding the exact issue will likely be a bit tedious.\n\u003C/p\u003E\n"}]}