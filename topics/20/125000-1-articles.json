{"TopicId":125000,"ForumId":20,"TopicTitle":"A dumb-simple mod installation bash script","CreatedByName":"Psycho_zs","CreatedById":137644,"CreatedDateTime":"2015-11-11T01:13:08Z","PageNum":1,"Articles":[{"CreatedByName":"Psycho_zs","CreatedById":137644,"CreatedDateTime":"2015-11-11T01:13:08Z","Content":"\n\u003Cp\u003EHi everyone!\u003C/p\u003E\u003Cp\u003EJust wanted to share a script that might be useful for those who play KSP with mods on Linux without using CKAN.\u003C/p\u003E\u003Cp\u003EIt automates boring things like removing old files, copying over new files, setting permissions (matches GameData owner and group, handy for root-protected installs).\u003C/p\u003E\u003Cp\u003ETakes files and dirs as arguments, nothing fancy.\u003C/p\u003E\u003Cp\u003EEdit path on 8th line before use. Read report before answering \u0022yes\u0022. Anything before positive answer is safe.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E#!/bin/bash\u003Cbr\u003E# kspmodinstall\u003Cbr\u003E# dumb KSP mod installer by Psycho_zs\u003Cbr\u003E# run as:\u003Cbr\u003E# kspmodinstall stuff\u003Cbr\u003E\u003Cbr\u003E# path to KSP GameData dir\u003Cbr\u003EKSPDATA=\u0022/path/to/your/KSP/GameData\u0022\u003Cbr\u003E\u003Cbr\u003E[ -z \u0022$@\u0022 ] \u0026amp;\u0026amp; { echo \u0022No arguments given. Give me something to install!\u0022 \u0026gt;\u0026amp;2 ; exit 1 ; }\u003Cbr\u003E[ ! -d \u0022$KSPDATA\u0022 ] \u0026amp;\u0026amp; { echo \u0022GameData dir \\\u0022$KSPDATA\\\u0022 does not exist!\u0022 \u0026gt;\u0026amp;2 ; exit 1 ; }\u003Cbr\u003E[ ! -w \u0022$KSPDATA\u0022 ] \u0026amp;\u0026amp; { echo \u0022GameData dir \\\u0022$KSPDATA\\\u0022 is not writeable!\u0022 \u0026gt;\u0026amp;2 ; exit 1 ; }\u003Cbr\u003E\u003Cbr\u003E# get owner and group of GameData\u003Cbr\u003EGD_OWNER=\u0022$(stat -c %U \u0022$KSPDATA\u0022)\u0022\u003Cbr\u003EGD_GROUP=\u0022$(stat -c %G \u0022$KSPDATA\u0022)\u0022\u003Cbr\u003E\u003Cbr\u003EFAIL=0\u003Cbr\u003E# check existence of data to be installed\u003Cbr\u003Eecho \u0022Checking what you\u0027ve given...\u0022\u003Cbr\u003Efor OBJECT in \u0022$@\u0022\u003Cbr\u003Edo\u003Cbr\u003E    # canonicalize path to avoid bad stuff with relative locations\u003Cbr\u003E    OBJECT=\u0022$(readlink -f \u0022$OBJECT\u0022)\u0022\u003Cbr\u003E\u003Cbr\u003E    if [ -e \u0022$OBJECT\u0022 ]\u003Cbr\u003E    then\u003Cbr\u003E        if [ -e \u0022${KSPDATA}/$(basename ${OBJECT})\u0022 ]\u003Cbr\u003E        then\u003Cbr\u003E            echo -e \u0022Will remove old object:\\n\\t\\\u0022${KSPDATA}/$(basename ${OBJECT})\\\u0022\\n\u0022\u003Cbr\u003E        fi\u003Cbr\u003E        echo -e \u0022Will copy \\\u0022$(basename ${OBJECT})\\\u0022 to:\\n\\t\\\u0022${KSPDATA}/$(basename ${OBJECT})\\\u0022\\n\u0022\u003Cbr\u003E    else\u003Cbr\u003E        echo \u0022\\\u0022$OBJECT\\\u0022 does not exist!\u0022 \u0026gt;\u0026amp;2\u003Cbr\u003E        FAIL=1\u003Cbr\u003E    fi\u003Cbr\u003Edone\u003Cbr\u003E\u003Cbr\u003E[ \u0022$FAIL\u0022 = \u00221\u0022 ] \u0026amp;\u0026amp; { echo \u0022Some objects you\u0027ve given were not found. Aborting.\u0022 \u0026gt;\u0026amp;2 ; exit 1 ; }\u003Cbr\u003E\u003Cbr\u003ECONTINUE=0\u003Cbr\u003Euntil [ \u0022$CONTINUE\u0022 = \u00221\u0022 ]\u003Cbr\u003Edo\u003Cbr\u003E    echo -ne \u0022Continue with installing?\\n(y/n) \u0026gt; \u0022\u003Cbr\u003E    read ANSWER\u003Cbr\u003E\u003Cbr\u003E    if echo \u0022$ANSWER\u0022 | grep -qi \u0027^[[:space:]]*y[[:space:]]*$\\|^[[:space:]]*yes[[:space:]]*$\u0027\u003Cbr\u003E    then\u003Cbr\u003E        echo \u0022Proceeding...\u0022\u003Cbr\u003E        CONTINUE=1\u003Cbr\u003E    elif echo \u0022$ANSWER\u0022 | grep -qi \u0027^[[:space:]]*n[[:space:]]*$\\|^[[:space:]]*no[[:space:]]*$\u0027\u003Cbr\u003E    then\u003Cbr\u003E        echo \u0022Aborting.\u0022\u003Cbr\u003E        exit 0\u003Cbr\u003E    else\u003Cbr\u003E        echo \u0022Not sure what you\u0027ve meant by \\\u0022$ANSWER\\\u0022, try again!\u0022\u003Cbr\u003E    fi\u003Cbr\u003Edone\u003Cbr\u003E\u003Cbr\u003Efor OBJECT in \u0022$@\u0022\u003Cbr\u003Edo\u003Cbr\u003E    # canonicalize path to avoid bad stuff with relative locations\u003Cbr\u003E    OBJECT=\u0022$(readlink -f \u0022$OBJECT\u0022)\u0022\u003Cbr\u003E\u003Cbr\u003E    # remove\u003Cbr\u003E    if [ -e \u0022${KSPDATA}/$(basename ${OBJECT})\u0022 ]\u003Cbr\u003E    then\u003Cbr\u003E        rm -r \u0022${KSPDATA}/$(basename ${OBJECT})\u0022 \u0026amp;\u0026amp; echo \u0022Removed: \\\u0022${KSPDATA}/$(basename ${OBJECT})\\\u0022\u0022 || echo \u0022Failed to remove \\\u0022${KSPDATA}/$(basename ${OBJECT})\\\u0022!\u0022 \u0026gt;\u0026amp;2\u003Cbr\u003E    fi\u003Cbr\u003E\u003Cbr\u003E    # copy\u003Cbr\u003E    cp -r --preserve=mode,timestamps \u0022$OBJECT\u0022 -t \u0022${KSPDATA}\u0022 \u0026amp;\u0026amp; echo -e \u0022Copied \\\u0022$(basename ${OBJECT})\\\u0022 to:\\n\\t\\\u0022${KSPDATA}/$(basename ${OBJECT})\\\u0022\u0022 || echo \u0022Failed to copy \\\u0022$(basename ${OBJECT})\\\u0022!\u0022 \u0026gt;\u0026amp;2\u003Cbr\u003E    # set GameData ownership to newly copied files\u003Cbr\u003E    chown -R \u0022$GD_OWNER\u0022:\u0022$GD_GROUP\u0022 \u0022${KSPDATA}/$(basename ${OBJECT})\u0022  || echo \u0022Failed to set ownership \\\u0022${GD_OWNER}:${GD_GROUP}\\\u0022 on \\\u0022${KSPDATA}/$(basename ${OBJECT})\\\u0022!\u0022 \u0026gt;\u0026amp;2\u003Cbr\u003Edone\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"}]}