{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":30,"Articles":[{"CreatedByName":"airbus a320","CreatedById":108322,"CreatedDateTime":"2014-05-12T08:14:33Z","Content":"\n\u003Cp\u003ESince most of people prefer to use external text editor they removed the in game editor. Archive is a drive without space limitation (the KSC data server), while 1 is the disk on your vessel... You have to download your programs into 1 (copy [script_name] from 0.) . if you prefer you can edit kos config file, there is something like \u0022start from archive\u0022 but remember that you can access to the archive only if you are in communication range!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-12T08:23:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sfr1000\u0022 data-cite=\u0022sfr1000\u0022\u003E\u003Cdiv\u003EWhat i mean is when I run KOS every time i need to type switch to 0, and place my txt file out side the gamedata folder to be read ( J:\\Program Files\\Steam\\steamapps\\common\\Kerbal Space Program\\Plugins\\PluginData\\Archive ), then its fine.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou do not need to do both these things every time. You do need to type \u0022switch to 0.\u0022 each time, but you don\u0027t need to keep re-copying the text file each time. It should still be there from last time. If it\u0027s getting erased between runs then something is wrong and that\u0027s a bug.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E also i have seen vids of scipts being edited in the KOS UI and saved from there I can\u0027t do this!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe in-game text editor was removed as it was getting in the way of more important updates. Something does need to replace it but it will probably involve just calling out to a generic UI text widget. Right now it\u0027s not there.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIt would be perfect if the script could be loaded from my public documents so i can edit it on my laptop, \u003Cp\u003EMy goal is to be able to control my rover over wifi or even the net. only seeing what its cameras can see (like real missions).\u003C/p\u003E\u003Cp\u003Ea simple config file for the archive directory would solve this.\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt shouldn\u0027t be too hard to make a simple shell script or \u0022batch file\u0022 to just copy everything into the archive from somewhere else. (I use a perl script that also strips out indents and comments as it does this to help compensate for the fact that kOS rewards you for writing illegible code. - something unrealistic that I never liked but I don\u0027t think I can convince the others to change it.)\u003C/p\u003E\u003Cp\u003EI like the idea of a config option to pick whatever archive location you like.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T08:30:34Z\u0022 title=\u002205/12/2014 08:30  AM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"airbus a320","CreatedById":108322,"CreatedDateTime":"2014-05-12T08:47:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E. (I use a perl script that also strips out indents and comments as it does this to help compensate for the fact that kOS rewards you for writing illegible code. - something unrealistic that I never liked but I don\u0027t think I can convince the others to change it.)\u003Cp\u003EI like the idea of a config option to pick whatever archive location you like.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s not unrealistic, the lunar descent script on the Apollo was written in a cryptic language similar to assembly\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://code.google.com/p/virtualagc/source/browse/trunk/FP8/FP8.s?r=258\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://code.google.com/p/virtualagc/source/browse/trunk/FP8/FP8.s?r=258\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.ibiblio.org/apollo/Pultorak_files/FP8Listing.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.ibiblio.org/apollo/Pultorak_files/FP8Listing.pdf\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T09:02:08Z\u0022 title=\u002205/12/2014 09:02  AM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by airbus a320\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MKI","CreatedById":77241,"CreatedDateTime":"2014-05-12T09:33:12Z","Content":"\n\u003Cp\u003EWhats up with the editor not working? Seems like a killer for the mod at least for me. (trying 9.2 as we speak)\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-12T10:03:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022airbus a320\u0022 data-cite=\u0022airbus a320\u0022\u003E\u003Cdiv\u003EIt\u0027s not unrealistic, the lunar descent script on the Apollo was written in a cryptic language similar to assembly\u003Cp\u003E\u003Ca href=\u0022https://code.google.com/p/virtualagc/source/browse/trunk/FP8/FP8.s?r=258\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://code.google.com/p/virtualagc/source/browse/trunk/FP8/FP8.s?r=258\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.ibiblio.org/apollo/Pultorak_files/FP8Listing.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.ibiblio.org/apollo/Pultorak_files/FP8Listing.pdf\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EkOS is not machine code.\u003C/p\u003E\u003Cp\u003EIf you have a higher level language with longer identifier names, structured loops, whitespace indentation, and comments, then those things do not affect the size of the executable you actually install on the craft.\u003C/p\u003E\u003Cp\u003EA four byte integer called \u0022k\u0022 with no explanatory comment takes up no more space than a four byte integer called \u0022thisIsMyVariableName\u0022 with a comment written next to it. All the syntactic sugar of whitespace, comments, and long variable names do not take up space in the actual executable. Ironically for your argument, long variable names only started making a difference in compiled code size in *modern* languages like Java and C# where more symbol table information stays in the final compiled file for the purpose of late-binding.\u003C/p\u003E\u003Cp\u003EEven in assembler comments still don\u0027t take up code space after compilation.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T10:08:51Z\u0022 title=\u002205/12/2014 10:08  AM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"airbus a320","CreatedById":108322,"CreatedDateTime":"2014-05-12T11:12:06Z","Content":"\n\u003Cp\u003Eyea, i know it\u0027s not low level programming, but we need some kind of limit ... maybe a limit on vars number or maximum program lines but this should be a low priority thing on developing!\u003C/p\u003E\n"},{"CreatedByName":"Vulkan","CreatedById":83177,"CreatedDateTime":"2014-05-12T11:25:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022airbus a320\u0022 data-cite=\u0022airbus a320\u0022\u003E\u003Cdiv\u003Eyea, i know it\u0027s not low level programming, but we need some kind of limit ... maybe a limit on vars number or maximum program lines but this should be a low priority thing on developing!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENow that would be a very realistic and difficult tech tree. You have to land on the Mun with the proverbial \u0022less computer power than a mobile phone\u0022 in order to make enough science for more computer. No hovering skycranes until you\u0027ve unlocked the last tier.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-12T13:18:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MKI\u0022 data-cite=\u0022MKI\u0022\u003E\u003Cdiv\u003EWhats up with the editor not working? Seems like a killer for the mod at least for me. (trying 9.2 as we speak)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhen we rewrote the parser, the editor was removed to help get an update out sooner (still took awhile). Once 12.1 is out for real we have a list of stuff to bring back.\u003C/p\u003E\u003Cp\u003EI personally would rather use the excellent Saturn IDE\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-12T14:47:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022airbus a320\u0022 data-cite=\u0022airbus a320\u0022\u003E\u003Cdiv\u003Eyea, i know it\u0027s not low level programming, but we need some kind of limit ... maybe a limit on vars number or maximum program lines but this should be a low priority thing on developing!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAt no point did I advocate for there being no limits.\u003C/p\u003E\u003Cp\u003EI advocated for changing the quantity being measured to use a realistic metric instead. Good indenting and understandable long variable names and having comments are all things that exist only in the source code. They wouldn\u0027t make one bit of difference in how big the compiled code is that you\u0027d be loading onto your limited space drive going with the craft. If you have 10k (ish) to work with, you\u0027re not going to be wasting that on sending source code. Your source code is going to stay home on the much bigger archive, and on the craft you\u0027re only going to send the result of compiling it.\u003C/p\u003E\u003Cp\u003EThe cost should be based on how complex the code *actually* is, not on how much ascii text you used to pretty it up in source code. A token count is a quick estimate that gets much closer to that. (if you mention a variable name it counts as 1 variable. no matter how many characters you used to name the variable. Heck with the kRisc underpinnings it could be possible to *actually* count the compiled code.\u003C/p\u003E\u003Cp\u003EHmm. Now that I think of it, with the kRISC underpinnings, it may be possible to *actually* implement a compiler for real - as in save the result of the parse/compile in a separate file on the Archive (perhaps with a \u0022.kex\u0022 extension) and then make the terminal allow you to run precompiled program files\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 hm\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 that may be actually doable as a future feature.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T14:56:09Z\u0022 title=\u002205/12/2014 02:56  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-12T17:51:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022airbus a320\u0022 data-cite=\u0022airbus a320\u0022\u003E\u003Cdiv\u003Eif you prefer you can edit kos config file, there is something like \u0022start from archive\u0022 but remember that you can access to the archive only if you are in communication range!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAll the config options can be modified from the kOS console itself, just use \u0022set config:[option] to [true|false]\u0022. Use \u0022list config\u0022 to view all the available config options and their current value.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAt no point did I advocate for there being no limits.\u003Cp\u003EHmm. Now that I think of it, with the kRISC underpinnings, it may be possible to *actually* implement a compiler for real - as in save the result of the parse/compile in a separate file on the Archive (perhaps with a \u0022.kex\u0022 extension) and then make the terminal allow you to run precompiled program files\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 hm\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 that may be actually doable as a future feature.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually that\u0027s what the compiled code cache does (without the saving to a file part), so it wouldn\u0027t be difficult at all to implement this.\u003C/p\u003E\n"},{"CreatedByName":"Waz","CreatedById":76393,"CreatedDateTime":"2014-05-14T01:36:57Z","Content":"\n\u003Cp\u003EHow do I \u0022autorun\u0022 something? Or do I have to COPY then RUN from the console at every launch? I\u0027m not trying to automate everything, just a few minor things, for which having to manually load and run stuff every launch would take longer than just doing the minor operations manually.\u003C/p\u003E\n"},{"CreatedByName":"airbus a320","CreatedById":108322,"CreatedDateTime":"2014-05-14T12:24:17Z","Content":"\n\u003Cp\u003EAutorun is not implemented yet, devs said it\u0027s a planned feature.\u003C/p\u003E\u003Cp\u003EIf you have to download and run many script you can write another script that copies all \u0022dependencies\u0022 and runs them.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-14T19:20:21Z","Content":"\n\u003Cp\u003EAny idea why I can\u0027t use Kerbin as a target:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to \u0022Kerbin\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Edoes not work. My ship is in Mun orbit.\u003C/p\u003E\u003Cp\u003EBut I also can\u0027t set it as a target from the map view. KSP restriction?\u003C/p\u003E\u003Cp\u003ELand safely, baloan\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-14T19:23:19Z\u0022 title=\u002205/14/2014 07:23  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 14, 2014\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-14T19:40:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EAny idea why I can\u0027t use Kerbin as a target:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to \u0022Kerbin\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Edoes not work. My ship is in Mun orbit.\u003C/p\u003E\u003Cp\u003EBut I also can\u0027t set it as a target from the map view. KSP restriction?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think it\u0027s a KSP restriction. It doesn\u0027t let you target a body that is your SOI body or your SOI body\u0027s parent or grandparent.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-14T19:47:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EActually that\u0027s what the compiled code cache does (without the saving to a file part), so it wouldn\u0027t be difficult at all to implement this.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would be so cool. Actually, what I\u0027d really like to see is that if that\u0027s done, then the disk file should store the op codes in a human readable assembly-like ascii format (but one that\u0027s simple enough to be quick to parse back in), rather than as a binary dump. Not only is this just nice to let people see what\u0027s under the hood of their programs, but it also opens up the chance for other languages. Someone could make a different high-level language that isn\u0027t kosscript and parse the result into kRISC assembly opcodes for kos to run.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-14T20:04:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003Ebut it also opens up the chance for other languages.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDoes it make sense to separate the language from the variables and command interface like kRPC is doing? \u003C/p\u003E\u003Cp\u003EMany advantages pop up in my mind:\u003C/p\u003E\u003Cp\u003E1. ability to use my favourite development environment and language.\u003C/p\u003E\u003Cp\u003E2. access to all variables and actions through a generic protocol. Fix one bug in the interface and it fixes it for all available languages. Decouples language and access layer. \u003C/p\u003E\u003Cp\u003E3. Immediate availability of stable programming languages. Avoids Steven and Chris reinventing the wheel. Don\u0027t get me wrong: I like your contribution to kOS, your effort and enthusiasm! Great job done. But with a home-grown language and parser there are just a lot of language related bugs to fix - I\u0027d like you rather spend your time to implement cool things like thruster control and docking.\u003C/p\u003E\u003Cp\u003EMaybe (just thinking loud) it is an option to extract the kOS language and interface it with kRPC - and make kRPC support thruster control and docking become available in Python and kOS (sounds more like a dream).\u003C/p\u003E\u003Cp\u003EKeep on the great work. I\u0027ll be back with a new entry to the kOS automation challenge soon!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-14T21:01:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EDoes it make sense to separate the language from the variables and command interface like kRPC is doing? \u003Cp\u003EMany advantages pop up in my mind:\u003C/p\u003E\u003Cp\u003E1. ability to use my favourite development environment and language.\u003C/p\u003E\u003Cp\u003E2. access to all variables and actions through a generic protocol. Fix one bug in the interface and it fixes it for all available languages. Decouples language and access layer. \u003C/p\u003E\u003Cp\u003E3. Immediate availability of stable programming languages. Avoids Steven and Chris reinventing the wheel. Don\u0027t get me wrong: I like your contribution to kOS, your effort and enthusiasm! Great job done. But with a home-grown language and parser there are just a lot of language related bugs to fix - I\u0027d like you rather spend your time to implement cool things like thruster control and docking.\u003C/p\u003E\u003Cp\u003EMaybe (just thinking loud) it is an option to extract the kOS language and interface it with kRPC - and make kRPC support thruster control and docking become available in Python and kOS (sounds more like a dream).\u003C/p\u003E\u003Cp\u003EKeep on the great work. I\u0027ll be back with a new entry to the kOS automation challenge soon!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe kRISC system isn\u0027t *entirely* open-ended and generic (yet?). There\u0027s things basic computers can do that it can\u0027t (like peek under the top of the stack to look at local variables stored there), which would make cross-compiling from other languages currently a bit hard to do. It\u0027s hypothetical pie-in-the-sky thinking on my part to have mentioned that. It\u0027s a nice longterm future idea - not anything to expect any time soon. But a more short-term idea would be that if the compiled code could be looked at as assembly opcodes it would help debugging greatly, and *hypothetically* one could actually write directly in kRISC assembly - not that I\u0027d recommend it.\u003C/p\u003E\n"},{"CreatedByName":"gsmurf","CreatedById":111061,"CreatedDateTime":"2014-05-14T21:24:24Z","Content":"\n\u003Cp\u003EI seem to be having a problem targeting planetary bodies.\u003C/p\u003E\u003Cp\u003EThe command \u003Cem\u003Eset target to body(\u0022mun\u0022).\u003C/em\u003E returns the following error: \u003Cem\u003EVESSEL \u0027BODY(\u0022Mun\u0022)\u0027 not found.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EHas the syntax for targeting bodies been changed recently?\u003C/p\u003E\u003Cp\u003EI am using the 12.1 prerelease.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-14T21:31:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe kRISC system isn\u0027t *entirely* open-ended and generic (yet?). There\u0027s things basic computers can do that it can\u0027t (like peek under the top of the stack to look at local variables stored there), which would make cross-compiling from other languages currently a bit hard to do. It\u0027s hypothetical pie-in-the-sky thinking on my part to have mentioned that. It\u0027s a nice longterm future idea - not anything to expect any time soon. But a more short-term idea would be that if the compiled code could be looked at as assembly opcodes it would help debugging greatly, and *hypothetically* one could actually write directly in kRISC assembly - not that I\u0027d recommend it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHe is talking about kRPC, another project that is pretty neat.\u003C/p\u003E\u003Cp\u003EHonestly the concept of kRPC is pretty compelling and before our parser rewrite i had considered doing something like that and we still might. I have been focused on enabling more mission types and integrating with other addons. Im pretty sure we will come back around to something like this. This would be a very long ball.\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-14T23:14:34Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@Steven:\u003C/strong\u003E There are no stack manipulation instructions because the compiled code is a stack based \u003Ca href=\u0022https://en.wikipedia.org/wiki/Common_Intermediate_Language\u0022 rel=\u0022external nofollow\u0022\u003ECIL\u003C/a\u003E and not assembler, and therefore there\u0027s no need for them (the .NET CIL don\u0027t have stack manipulation instructions either).\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@baloan:\u003C/strong\u003E Most of the language bugs are because we rewrote most of the kOS code and it was bound to have this kind of problems in the first release. In fact the change was so big that we considered changing the name of the project to something else but finally agree to leave it the same. \u003C/p\u003E\u003Cp\u003EThe main difference between kOS and kRPC is that ours is a virtual machine that exists entirely inside KSP, and as such is more tightly integrated with the game and subject to its rules (e.g. if you revert to launch in kOS the execution is stopped and the variables erased, but I don\u0027t know how kRPC handles this kind of thing).\u003C/p\u003E\u003Cp\u003EAnyway it could be possible to integrate kOS and kRPC so our virtual machine sends instructions to it instead of interfacing with KSP itself, but it would be necessary to evaluate the pros and cons of doing that.\u003C/p\u003E\u003Cp\u003EAfter the rewrite kOS became pretty language agnostic so it shouldn\u0027t be difficult to write a compiler for another language if we ever choose to do it (I think it took me about two weeks to write the current one).\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-14T23:53:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E@Steven:\u003C/strong\u003E There are no stack manipulation instructions because the compiled code is a stack based \u003Ca href=\u0022https://en.wikipedia.org/wiki/Common_Intermediate_Language\u0022 rel=\u0022external nofollow\u0022\u003ECIL\u003C/a\u003E and not assembler, and therefore there\u0027s no need for them (the .NET CIL don\u0027t have stack manipulation instructions either).\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere aren\u0027t locals of any other type either in kRISC. The .locals section of CIL has no analogy in kRSIC (yet?). And they still are in *a* stack, otherwise recursion wouldn\u0027t work right. (And technically peeking under the top of the stack is not stack manipulation as you\u0027re reading. not altering, the stack.).\u003C/p\u003E\n"},{"CreatedByName":"airbus a320","CreatedById":108322,"CreatedDateTime":"2014-05-15T00:06:59Z","Content":"\n\u003Cp\u003EIMHO, the best is to choose an easy language like lua or python ... the final user may not be nerd enought to figure out what is a source code or a compiled byte-code or a machine code (\u0022wtf, i can\u0027t run my script! this game is crap!!\u0022 - \u0022you have to compile it in order to launch it!\u0022 - \u0022have i to what? i wanna play! gimme my game!!\u0022)\u003C/p\u003E\u003Cp\u003E... an interpreted script is much easier, i had tons of fun in Minecraft with Computercraft mod programming turtles! ... but with an interpreted language we will encounter again the \u0022realism issue\u0022, it\u0027s a trade-off:\u003C/p\u003E\u003Cp\u003E - interpreted language: or an unrealistic space limit (crappy code without a single line of comment) or a limit on the max vars and lines of actual code\u003C/p\u003E\u003Cp\u003E - compiled code: a realistic space limit on compiled code\u003C/p\u003E\u003Cp\u003Eunless with the upcoming new GUI it would be possible to implement a something-like-an-SDK directly into kerbal interface... if it\u0027s possible to write, debug and compile in the vab it will be awesome!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-15T00:11:58Z\u0022 title=\u002205/15/2014 12:11  AM\u0022 data-short=\u002210 yr\u0022\u003EMay 15, 2014\u003C/time\u003E by airbus a320\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-15T00:21:12Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@Steven:\u003C/strong\u003E Ah ok, now I understand what you mean. We could of course keep adding stuff to make our CIL more expressive/flexible as need arise.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@airbus:\u003C/strong\u003E kOS actually compiles the code under hood, from the user perspective there\u0027s no difference with an interpreted language.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-05-15T00:37:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022gsmurf\u0022 data-cite=\u0022gsmurf\u0022\u003E\u003Cdiv\u003EI seem to be having a problem targeting planetary bodies.\u003Cp\u003EThe command \u003Cem\u003Eset target to body(\u0022mun\u0022).\u003C/em\u003E returns the following error: \u003Cem\u003EVESSEL \u0027BODY(\u0022Mun\u0022)\u0027 not found.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EHas the syntax for targeting bodies been changed recently?\u003C/p\u003E\u003Cp\u003EI am using the 12.1 prerelease.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think you need to delineate with a colon.\u003C/p\u003E\u003Cp\u003Ebody:mun\u003C/p\u003E\u003Cp\u003EI\u0027m not sure though I\u0027ve never done this before.\u003C/p\u003E\n"},{"CreatedByName":"airbus a320","CreatedById":108322,"CreatedDateTime":"2014-05-15T01:06:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E@Steven:\u003C/strong\u003E Ah ok, now I understand what you mean. We could of course keep adding stuff to make our CIL more expressive/flexible as need arise.\u003Cp\u003E\u003Cstrong\u003E@airbus:\u003C/strong\u003E kOS actually compiles the code under hood, from the user perspective there\u0027s no difference with an interpreted language.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Egot it...\u003C/p\u003E\u003Cp\u003Ei was thinking in the end user point of view... a couple of days ago we were talking with, if i recall right, steven about the realism of the size limit. Kerbal is set in a fictional apollo era. The programs were at architecture level, the limits were on overall number of istructions/vars and vars lenght so a var named \u0022x\u0022 and a var named \u0022ILoveWhenGoofySpanksMyArse\u0022 are totally the same in size.\u003C/p\u003E\u003Cp\u003EChanging the subject: if i have two processor (sry, i don\u0027t remember the actual part name) on my vessel running two different programs, there is a way to pass a variable between them? vars defined in one is not accessible in the second, is it possible to use a file like a socket? in the wiki on git there is no mention on reading files...\u003C/p\u003E\n"}]}