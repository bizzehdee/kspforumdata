{"TopicId":99956,"ForumId":36,"TopicTitle":"[WIP] TweakScale - Development Thread","CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T21:25:02Z","PageNum":8,"Articles":[{"CreatedByName":"helaeon","CreatedById":101767,"CreatedDateTime":"2015-04-22T01:26:38Z","Content":"\n\u003Cp\u003EI think being that the stock tanks are all about 80 Liquid Fuel per full ton (as in if a tank weighs half a ton full, it has 45 units of liquid fuel, and 49.5 units of oxidizer). It seems to me then the way to do it would be to determine the scale of the part being scaled, scale all values up with volume, then adjust the mass of the dry part to fit back with the original fuel/ton full. (So add mass or remove it). Not sure how the math would work out but that would be my approach if I were the coder here.\u003C/p\u003E\u003Cp\u003EUnless you want to apply a MM patch across all tanks so they are filled and balanced by volume not mass. Not ideal there though because then it doesn\u0027t play nice with other mods unless directly supported.\u003C/p\u003E\u003Cp\u003EMaybe a similar method could be used for the engines? TWR is determined at the start then mass adjusted after scale up so the new TWR is the same as the original?\u003C/p\u003E\u003Cp\u003ENot sure if any of that is even feasible, but it\u0027s my initial thought on the problem.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-22T16:46:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022helaeon\u0022 data-cite=\u0022helaeon\u0022\u003E\u003Cdiv\u003EI think being that the stock tanks are all about 80 Liquid Fuel per full ton (as in if a tank weighs half a ton full, it has 45 units of liquid fuel, and 49.5 units of oxidizer). It seems to me then the way to do it would be to determine the scale of the part being scaled, scale all values up with volume, then adjust the mass of the dry part to fit back with the original fuel/ton full. (So add mass or remove it). Not sure how the math would work out but that would be my approach if I were the coder here.\u003Cp\u003EUnless you want to apply a MM patch across all tanks so they are filled and balanced by volume not mass. Not ideal there though because then it doesn\u0027t play nice with other mods unless directly supported.\u003C/p\u003E\u003Cp\u003EMaybe a similar method could be used for the engines? TWR is determined at the start then mass adjusted after scale up so the new TWR is the same as the original?\u003C/p\u003E\u003Cp\u003ENot sure if any of that is even feasible, but it\u0027s my initial thought on the problem.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETweakScale is as powerful as it is because it is generic. Someone codes a new engine module, and scaling support is as simple as writing a config. I\u0027m fully convinced that hardcoding knowledge and assumptions about other part modules into the plugin would be bad design. Keeping TWR and fuel fraction constant can already be done with configs (see the ideas above), so the plugin does not need to know what \u0022liquidFuel\u0022, \u0022mass\u0022 or \u0022thrust\u0022 means.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-23T18:51:26Z","Content":"\n\u003Cp\u003ESo the first thing I\u0027ll implement is to scale dryCost with the mass exponent if there is no dryCost exponent defined. This will reasonably cover most parts because usually both mass and cost should scale linearly with gameplay utility. \u003C/p\u003E\u003Cp\u003EAn exception to this could be parts whose gameplay utility does not scale well, like probe cores. At the moment they get both heavier and more expensive when enlarged, which makes no sense. But what if a larger core would be heavier and cheaper?\u003C/p\u003E\u003Cp\u003EEDIT: DryCost scaling is done in the latest dev version. Next step will be some MM magic for basic engine support, and then finding and solving those parts that need special treatment.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-23T22:27:34Z\u0022 title=\u002204/23/2015 10:27  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 23, 2015\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Yemo","CreatedById":114412,"CreatedDateTime":"2015-04-24T02:23:18Z","Content":"\n\u003Cp\u003EHey,\u003C/p\u003E\u003Cp\u003EI m wondering how I can define the cost exponent for tweakscale using MM?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART\u003Cbr\u003E[*]\u003Cbr\u003E{\u003Cbr\u003E    @MODULE[TweakScale]\u003Cbr\u003E    {\u003Cbr\u003E        TWEAKSCALEEXPONENTS\u003Cbr\u003E        {\u003Cbr\u003E????????????????\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-24T23:31:16Z","Content":"\n\u003Cp\u003ESo I\u0027ve taken the road of providing different scaleTypes, stack and free now have cubic mass scaling (for things like tanks), and there are new types stack_square and free_square for parts like engines and solar panels. The thrust for stock SRBs is patched to an exponent of 2.5, so if a RT-10 is scaled to the same length as a BACC it will have roughly the same TWR and burn time. Stock engines are done but I\u0027m not finished with stock and haven\u0027t touched the mod patches yet. \u003C/p\u003E\u003Cp\u003EPlease consider the dev version as \u003Cspan style=\u0022color:#FF0000;\u0022\u003E[breaking]\u003C/span\u003E from now on. Things will still load but physical properties like mass and thrust can be different so existing crafts which rely on scaled parts will likely be out of balance. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Yemo\u0022 data-cite=\u0022Yemo\u0022\u003E\u003Cdiv\u003EI m wondering how I can define the cost exponent for tweakscale using MM?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll look into this tomorrow. Spent too much time today getting basic things to work...\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-25T13:33:05Z","Content":"\n\u003Cp\u003ETweakScale uses \u0022!\u0022 in scaleExponents to indicate relative scaling, which conflicts with moduleManager as soon as the config value is part of a patch. So \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E !DryCost=3 \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMeans \u0022DryCost needs relative scaling\u0022 in a regular config node. In a MM patch it is interpreted as \u0022If there is a DryCost setting, remove it.\u0022 For now I will hardcode relativeScaling for DryCost so it can be used without the \u0022!\u0022 in patches. So from the next version on, DryCost patches like this should work: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[...]\u003Cbr\u003E{\u003Cbr\u003E    @MODULE[TweakScale]\u003Cbr\u003E    {\u003Cbr\u003E        %TWEAKSCALEEXPONENTS[TweakScale]\u003Cbr\u003E        {\u003Cbr\u003E            %DryCost = 1\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Yemo","CreatedById":114412,"CreatedDateTime":"2015-04-25T16:43:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003ETweakScale uses \u0022!\u0022 in scaleExponents to indicate relative scaling, which conflicts with moduleManager as soon as the config value is part of a patch. So \u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E !DryCost=3 \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMeans \u0022DryCost needs relative scaling\u0022 in a regular config node. In a MM patch it is interpreted as \u0022If there is a DryCost setting, remove it.\u0022 For now I will hardcode relativeScaling for DryCost so it can be used without the \u0022!\u0022 in patches. So from the next version on, DryCost patches like this should work: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[...]\u003Cbr\u003E{\u003Cbr\u003E    @MODULE[TweakScale]\u003Cbr\u003E    {\u003Cbr\u003E        %TWEAKSCALEEXPONENTS[TweakScale]\u003Cbr\u003E        {\u003Cbr\u003E            %DryCost = 1\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EExcellent, thank you very much! Looking forward to it!\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-04-25T17:43:20Z","Content":"\n\u003Cp\u003EI\u0027d think it would be better to simply change the character that is looked for to enable relative scaling. I use relative scaling in a number of mod implementations, and many of my configs are MM dependent. I never quite realized that I might not be getting the settings I\u0027m looking for due to MM reinterpreting that line as a command to remove itself.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-25T20:33:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaalidas\u0022 data-cite=\u0022Gaalidas\u0022\u003E\u003Cdiv\u003EI\u0027d think it would be better to simply change the character that is looked for to enable relative scaling. I use relative scaling in a number of mod implementations, and many of my configs are MM dependent. I never quite realized that I might not be getting the settings I\u0027m looking for due to MM reinterpreting that line as a command to remove itself.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt was more of a quick fix that is ok for DryCost because it is part of the TweakScale module. The \u0022!\u0022 in a regular TWEAKSCALEEXPONENTS node seems to work fine, it only makes trouble if I want to override the exponent on a per-part basis with mm patches. So we\u0027ll find a better solution, I\u0027d just like to get other things stable first. You sound like you know more about relative scaling than I do, where do you use it?\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ESmall change of plan with the scaletypes, we really need to define exponent overrides for a group of parts, in a way that is not tied to scaletypes. Scaletypes are more tied to the form of a part (i.e. stack parts), defining which scales are allowed and how the UI should display them. What is missing is a description that depends on the function of the part (i.e. decouplers) and can be combined with any scaleType. With the recent \u0022copy a whole node\u0022 feature of MM I cooked up TWEAKSCALEBEHAVIOR nodes: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ETWEAKSCALEBEHAVIOR\u003Cbr\u003E{\u003Cbr\u003E    name = SRB\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = TweakScale\u003Cbr\u003E        TWEAKSCALEEXPONENTS\u003Cbr\u003E        {\u003Cbr\u003E            name = ModuleEngines\u003Cbr\u003E            minThrust = 2.5\u003Cbr\u003E            maxThrust = 2.5\u003Cbr\u003E        }\u003Cbr\u003E        TWEAKSCALEEXPONENTS\u003Cbr\u003E        {\u003Cbr\u003E            name = ModuleEnginesFX\u003Cbr\u003E            minThrust = 2.5\u003Cbr\u003E            maxThrust = 2.5\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo SRBs have the standard cubic (dry)mass scaling, but their engines scale with an exponent of 2.5 (instead of the standard 2.0). This is how it is used in a part patch: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[solidBooster] // RT-10 Solid Fuel Booster\u003Cbr\u003E{\u003Cbr\u003E    #@TWEAKSCALEBEHAVIOR[SRB]/MODULE[TweakScale] { }\u003Cbr\u003E    %MODULE[TweakScale]\u003Cbr\u003E    {\u003Cbr\u003E        type = stack\u003Cbr\u003E        defaultScale = 1.25\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo the first line copies in a tweakScale module (without scaleType setting). The second fills in the scaleType. Since \u0022%\u0022 means \u0022create or edit\u0022, the patch looks the same if the first line is present or not. So far I have behavior nodes for boosters and decouplers. Engines and solar panels still work with the stack/free_square scaletypes. I\u0027m not sure if I should port those to something like a \u0022squareMass\u0022 behavior, because this seems more complicated and less readable. \u003C/p\u003E\u003Cp\u003EAny thoughts?\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-26T10:13:18Z","Content":"\n\u003Cp\u003EI\u0027d be grateful for any insights on how the balance pass in 1.0 changed how things scale. Current TweakScale balancing (dev version) is\u003C/p\u003E\u003Cp\u003E* the fuel fraction of tanks is preserved\u003C/p\u003E\u003Cp\u003E* TWR of engines is preserved\u003C/p\u003E\u003Cp\u003E* engine thrust scales with scale^2\u003C/p\u003E\u003Cp\u003E* solar panel power/mass is preserved\u003C/p\u003E\u003Cp\u003E* wing weight scales with the area (this might become a problem with wet wings)\u003C/p\u003E\u003Cp\u003EAlso wing lift seems to scale automagically (CoL indicator moves but there is no scaleExponent for fixed wings). I hope they moved fixed wings to a proper partModule now.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-27T18:29:57Z","Content":"\n\u003Cp\u003EThe plugin compiled well against 1.0 and at first view everything seems to work. Still waiting for an official KAE update before I can publish a dev version.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-27T19:49:30Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        MODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ModuleControlSurface\u003Cbr\u003E\t\tuseInternalDragModel = True\u003Cbr\u003E\t\tdragCoeff = 0.6\u003Cbr\u003E\t\tdeflectionLiftCoeff = 3.49\t\t // area = 12.28m^2\u003Cbr\u003E\t\tctrlSurfaceRange = 25\u003Cbr\u003E\t\tctrlSurfaceArea = 0.29\t\t// area = 3.56m^2\u003Cbr\u003E\t\tactuatorSpeed = 35\u003Cbr\u003E\t\ttransformName = ControlSurface\u003Cbr\u003E\t}\t\u003Cbr\u003E        MODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ModuleLiftingSurface\u003Cbr\u003E\t\tuseInternalDragModel = True\u003Cbr\u003E\t\tdeflectionLiftCoeff = 5.0\t\t// 16,5m^2\u003Cbr\u003E\t\tdragAtMaxAoA = 0.6\u003Cbr\u003E\t\tdragAtMinAoA = 0.0\u003Cbr\u003E\t}\u003Cbr\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ModuleAeroSurface   // used in airbrake\u003Cbr\u003E\t\tuseInternalDragModel = True\u003Cbr\u003E\t\tdragCoeff = 0.6\u003Cbr\u003E\t\tdeflectionLiftCoeff = 0.38\u003Cbr\u003E\t\tsurfaceRange = 70\u003Cbr\u003E\t\tctrlRangeFactor = 0.2\u003Cbr\u003E\t\tsurfaceArea = 1\u003Cbr\u003E\t\tactuatorSpeed = 20\u003Cbr\u003E\t\ttransformName = Flap\u003Cbr\u003E\t\tdefaultActionGroup = Brakes\u003Cbr\u003E\t\tliftingSurfaceCurve = SpeedBrake\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESurely for the first two deflectionLiftCoeff should scale as an area (exponent=2). For the third I have no idea how it is related to surfaceArea. \u003C/p\u003E\u003Cp\u003EThe drag numbers seem pretty constant across parts (around 0.5-0.6), so I suppose they should not be scaled. \u003C/p\u003E\u003Cp\u003EThe heatshields seem to scale only by the RESOURCE amount of ablator. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = ModuleProceduralFairing\u003Cbr\u003E\u003Cbr\u003E        nSides = 48\u003Cbr\u003E        nArcs = 3\u003Cbr\u003E        TextureURL = Squad/Parts/Aero/fairings/fairings_diff\u003Cbr\u003E\u003Cbr\u003E        panelGrouping = 3\u003Cbr\u003E        pivot = 0,0.17,0\u003Cbr\u003E        axis = 0,1,0\u003Cbr\u003E\u003Cbr\u003E        baseRadius = 1.25\u003Cbr\u003E        maxRadius = 3\u003Cbr\u003E        capRadius = 0.375\u003Cbr\u003E        snapThreshold = 0.25\u003Cbr\u003E\u003Cbr\u003E        xSectionHeightMin = 0.3\u003Cbr\u003E        xSectionHeightMax = 3\u003Cbr\u003E\u003Cbr\u003E        edgeSlide = 0.15\u003Cbr\u003E        edgeWarp = 0.02\u003Cbr\u003E        noseTip = 0.5\u003Cbr\u003E\u003Cbr\u003E        UnitAreaMass = 0.04\u003Cbr\u003E        UnitAreaCost = 12\u003Cbr\u003E    }\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = ModuleCargoBay\u003Cbr\u003E        DeployModuleIndex = 0\u003Cbr\u003E        closedPosition = 0\u003Cbr\u003E        lookupRadius = 1.25\u003Cbr\u003E\u003Cbr\u003E        // nodeOuterAftID = bottom\u003Cbr\u003E        // nodeInnerAftID = top\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFairings also look promising for scaling.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EbulkheadProfiles = size1, srf\u003Cbr\u003EbulkheadProfiles = size2, srf\u003Cbr\u003EbulkheadProfiles = srf \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENo idea how those bulkHeadProfiles work, just please tell me they did not hardcode the stack sizes in...\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-27T21:13:48Z","Content":"\n\u003Cp\u003EAnother observation: the camera bug was not fixed, so 1.0 still does not like scaled root parts.\u003C/p\u003E\n"},{"CreatedByName":"Whizzkid","CreatedById":126892,"CreatedDateTime":"2015-04-27T22:53:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003EThe plugin compiled well against 1.0 and at first view everything seems to work. Still waiting for an official KAE update before I can publish a dev version.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKAE is now 1.0 compatible BTW\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-27T23:07:33Z","Content":"\n\u003Cp\u003EUpdated the \u003Ca href=\u0022https://github.com/pellinor0/TweakScale/archive/dev.zip\u0022 rel=\u0022external nofollow\u0022\u003Edev version! \u003C/a\u003E\u003C/p\u003E\u003Cp\u003EFor an official release, I\u0027d like to get the scaleExponents a bit more stable, so I won\u0027t break crafts directly afterwards.\u003C/p\u003E\n"},{"CreatedByName":"etheoma","CreatedById":69258,"CreatedDateTime":"2015-04-28T08:52:30Z","Content":"\n\u003Cp\u003EI know its not a final release but I\u0027m just doing a bug report when you resacle wings it seems to decrease its heat tolerance a very significant factor, I don\u0027t know if its true for other parts as well.\u003C/p\u003E\u003Cp\u003EI was using it on a plane to lunch a solid rocket booster with a payload and I needed small wings to fit it inside the cargohold but everytime I open the cargo hold the wings vaporize and I\u0027m using the same wings as tail plains so they shouldn\u0027t be overheating.\u003C/p\u003E\u003Cp\u003EPS: just for clarification the tail plane on the plane are not rescaled. Although it was an abject failure anyways I slowed down to 500ms at 22km and lunched it but I didn\u0027t have enough deltaV even if I had the extra 300 - 400ms of velocity from flight XD\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-28T14:51:24Z\u0022 title=\u002204/28/2015 02:51  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 28, 2015\u003C/time\u003E by etheoma\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DuhMedic","CreatedById":56343,"CreatedDateTime":"2015-04-28T10:22:52Z","Content":"\n\u003Cp\u003EI\u0027m noticing that with TweakScale installed, the LV-T45 Swivel liquid engine breaks the VAB when taken out of the part list. It shows a discharge of fuel on the Left and bottom part of the engine and makes everything else in the VAB untouchable. It may also be important to note that I was doing this with Tweakable Everything, but I tried doing this with that mod removed, but the problem persisted.\u003C/p\u003E\n"},{"CreatedByName":"Wyseman76","CreatedById":67018,"CreatedDateTime":"2015-04-28T11:31:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DuhMedic\u0022 data-cite=\u0022DuhMedic\u0022\u003E\u003Cdiv\u003EI\u0027m noticing that with TweakScale installed, the LV-T45 Swivel liquid engine breaks the VAB when taken out of the part list. It shows a discharge of fuel on the Left and bottom part of the engine and makes everything else in the VAB untouchable. It may also be important to note that I was doing this with Tweakable Everything, but I tried doing this with that mod removed, but the problem persisted.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI can second this problem with tweakscale installed alone.\u003C/p\u003E\n"},{"CreatedByName":"DaniDE","CreatedById":130484,"CreatedDateTime":"2015-04-28T13:17:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DuhMedic\u0022 data-cite=\u0022DuhMedic\u0022\u003E\u003Cdiv\u003EI\u0027m noticing that with TweakScale installed, the LV-T45 Swivel liquid engine breaks the VAB when taken out of the part list. It shows a discharge of fuel on the Left and bottom part of the engine and makes everything else in the VAB untouchable. It may also be important to note that I was doing this with Tweakable Everything, but I tried doing this with that mod removed, but the problem persisted.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Wyseman76\u0022 data-cite=\u0022Wyseman76\u0022\u003E\u003Cdiv\u003EI can second this problem with tweakscale installed alone.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is a typo in tweakscales config file for the stock parts, line 218 reads \u0022type = stack_sauqre\u0022 and should be \u0022type = stack_square\u0022.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-28T13:19:32Z\u0022 title=\u002204/28/2015 01:19  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 28, 2015\u003C/time\u003E by DaniDE\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DuhMedic","CreatedById":56343,"CreatedDateTime":"2015-04-28T14:44:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DaniDE\u0022 data-cite=\u0022DaniDE\u0022\u003E\u003Cdiv\u003EThere is a typo in tweakscales config file for the stock parts, line 218 reads \u0022type = stack_sauqre\u0022 and should be \u0022type = stack_square\u0022.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, that resolved the issue. For anyone looking that doesn\u0027t know where to look, under the tweakscale gamedata folder, Patches\u0026gt;Squad_TweakScale.cfg and fix the typo on line 218. \u0026lt;3\u003C/p\u003E\n"},{"CreatedByName":"etheoma","CreatedById":69258,"CreatedDateTime":"2015-04-28T15:20:00Z","Content":"\n\u003Cp\u003EJust wanted to leave another post about my previous post considering more test would hopfully save you at least some time, I also tierd putting them at the back of the craft like the tail planes which are made out of the same part just resized. Because before they were in the cargo bay and it could have been a conflict there, but no it wasn\u0027t I put the wings near where the tail planes were and they exploded again 400ms before the rest of the plane exploded because I wanted to compare heat resistence... Its a shame there isn\u0027t a heat readout on each part like Deadly Reentry, because for some reason or an other it could be getting hotter faster, and not have a lower heat tolerance but :s there isn\u0027t.\u003C/p\u003E\u003Cp\u003EWhich is also just super annoying as a game mechanic because there is just NO warning so your plane just blows up suddenly out of no where. which when your keeping your eyes on the speed and rate of assent etc and a big bag just suddenly happens when your wearing head phones gives you quite the scare.\u003C/p\u003E\u003Cp\u003EAlso the heating for KSP seems stupid and arbitrary like I can go 800ms down near the ground but I can only go like 900 - 1000 ms at 18 - 20km up... WHAT... I know default game problems not the place for it... BUT WHAT!!! Also they need to add active heat shielding to the cockpits.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-28T15:36:17Z\u0022 title=\u002204/28/2015 03:36  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 28, 2015\u003C/time\u003E by etheoma\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-28T15:26:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DuhMedic\u0022 data-cite=\u0022DuhMedic\u0022\u003E\u003Cdiv\u003EThanks, that resolved the issue. For anyone looking that doesn\u0027t know where to look, under the tweakscale gamedata folder, Patches\u0026gt;Squad_TweakScale.cfg and fix the typo on line 218. \u0026lt;3\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks! Fixed the config in the dev version, I\u0027ll fix the code later (a mistyped/missing scaleType should not break the game).\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022etheoma\u0022 data-cite=\u0022etheoma\u0022\u003E\u003Cdiv\u003EJust wanted to leave another post about my previous post considering more test would hopfully save you at least some time, I also tierd putting them at the back of the craft like the tail planes which are made out of the same part just resized. Because before they were in the cargo bay and it could have been a conflict there, but no it wasn\u0027t I put the wings near where the tail planes were and they exploded again 400ms before the rest of the plane exploded because I wanted to compare heat resistence... Its a shame there isn\u0027t a heat readout on each part like Deadly Reentry, because for some reason or an other it could be getting hotter faster, and not have a lower heat tolerance but :s there isn\u0027t.\u003Cp\u003EWhich is also just super annoying as a game mechanic because there is just NO warning so your plane just blows up suddenly out of no where. which when your keeping your eyes on the speed and rate of assent etc and a big bag just suddenly happens when your wearing head phones gives you quite the scare.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EScaling of the new aero and heat properties is a completely open question. So I\u0027d be glad about any insights on what needs scaling and what would be reasonable exponents.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-28T19:48:34Z","Content":"\n\u003Cp\u003EUpdated dev version: I reverted the thrust exponent to 2.5 (TWR ist still preserved). This means they have their own TWEAKSCALEBEHAVIOR now, which makes it much easier to tweak the scale exponents for all engines in one place (including RCS, excluding boosters).\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-28T20:38:39Z","Content":"\n\u003Cp\u003EI\u0027m trying to make scalable crew pods an option that can be toggled via MM patch (and would default to off). So far I fail to write the last condition right, without it the modules are removed correctly. Does anyone know better how to write this? \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ETWEAKSCALESETTINGS\u003Cbr\u003E{\u003Cbr\u003E    scaleCrewPods = 0     // set to 1 for scaleable pods\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[*]:HAS[@MODULE[TweakScale],#CrewCapacity[*],~CrewCapacity[0],#../TWEAKSCALESETTINGS/scaleCrewPods[0]]:FOR[TweakScale]\u003Cbr\u003E{\u003Cbr\u003E    !MODULE[TweakScale] {}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEDIT: on the issue with small things overheating, there was an exponent \u0022maxTemp=1\u0022 which made no sense at all. Also removed the crashTolerance exponent because this value is also constant for stock parts of different scale.\u003C/p\u003E\u003Cp\u003EEDIT: put some exponents for the new modules. Some guesswork inwolved, so this needs testing. A first glance parachute modules seem not to need any scaling, the open question is just how weight and cost should scale. My guess is scale^2 because this is how the drag would scale when calculated off the visual model. \u003C/p\u003E\u003Cp\u003ESo the main open things now are\u003C/p\u003E\u003Cp\u003E* scaling heatProduction in moduleEngines/FX (currently 0.85 which looked reasonable back in 0.90)\u003C/p\u003E\u003Cp\u003E* scaling the bulkHead property of parts (which is not a number but a list of strings)\u003C/p\u003E\u003Cp\u003E* testing\u003C/p\u003E\u003Cp\u003EMinor things (old issues I noticed when updating things)\u003C/p\u003E\u003Cp\u003E* resource consumption for reaction wheels does not scale\u003C/p\u003E\u003Cp\u003E* moduleAlternator does not scale\u003C/p\u003E\u003Cp\u003E* ModuleLandingLeg is missing, is there anything that needs scaling?\u003C/p\u003E\u003Cp\u003ENow the main things I wanted to do for KSP1.0 are in, and the rest should hopefully be tweaks that do not break games/vessels too hard. So TweakScale should be close to a release.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-28T22:01:51Z\u0022 title=\u002204/28/2015 10:01  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 28, 2015\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Roninpawn","CreatedById":114184,"CreatedDateTime":"2015-04-29T05:00:33Z","Content":"\n\u003Cp\u003EIs the new tweakscale not going to work for craft built in previous versions? The latest dev download causes all the \u003Cstrong\u003E[CORRECTION:]\u003C/strong\u003E Type \u0027B\u0027 wing parts from my .90 craft and everything that was attached to them to... well, not be there anymore. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EWait! No! I found them! They\u0027re there! They\u0027re just at 4% scale instead of 400%. ROFL!\u003C/p\u003E\u003Cp\u003EThey\u0027re so tiny and cute.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ESwept wings at 2% instead of 200%. Haha. This is the best developlment bug ever. I am so smiley right now looking at these tiny wittle pwane parts.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-29T04:56:25Z\u0022 title=\u002204/29/2015 04:56  AM\u0022 data-short=\u00229 yr\u0022\u003EApril 29, 2015\u003C/time\u003E by Roninpawn\u003C/strong\u003E\n\u003C/span\u003E\n"}]}