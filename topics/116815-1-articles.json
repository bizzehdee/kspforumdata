{"TopicId":116815,"ForumId":36,"TopicTitle":"Utilize Tech Tree for Block Diagram GUI","CreatedByName":"Skoth","CreatedById":71045,"CreatedDateTime":"2015-07-25T15:33:27Z","PageNum":1,"Articles":[{"CreatedByName":"Skoth","CreatedById":71045,"CreatedDateTime":"2015-07-25T15:33:27Z","Content":"Hello fellow developers!\n\nI have been working on an Add-on which utilizes block diagrams as a way of allowing the user to implement features of systems engineering (the vagueness of that description is due to the uncertainty of scope of the Add-on at this point in time). Rather than re-invent the wheel, I\u0027ve been trying to find a way to take advantage of the R\u0026D screen\u0027s tech tree GUI to draw the block diagrams. However, I have not been able to find any suggestions/recommendations for making use of the tech tree GUI other than ways to add more elements to the existing R\u0026D screen. What I have in mind would be more along the lines of a custom window in the VAB/SPH and the Tracking Station, possibly even in flight, featuring a block diagram with the same or similar styles to the tech tree.\n\nWhile I\u0027m quite certain I\u0027m way off base here, just to show that I\u0027ve tried Google: I\u0027ve looked through Anatid\u0027s KSP API Documentation, specifically the [RDArchivesController Class](https://github.com/Anatid/XML-Documentation-for-the-KSP-API/blob/master/src/RDArchivesController.cs) as a means of doing so, but I do not believe this is related to my intent. I\u0027ve also been reviewing Unity\u0027s [Legacy GUI Scripting Guide](http://docs.unity3d.com/Manual/GUIScriptingGuide.html), as some of the posts I\u0027ve read on the forum suggest that KSP does not support the latest Unity UI specs. From the looks of it, I might have to put in a fair amount of work to implement a block diagram system (which I don\u0027t mind one bit!) if it needs to be built from the ground up. If possible, I\u0027d like to avoid that.\n\nSo, my main question is if there is a way to utilize the tech tree GUI for custom graphs/diagrams/etc without having to create it from scratch? I recognize that the current static, unmovable tech tree does not have all the features that I am ultimately hoping for, however if I could access the Objects/Functions necessary to extend its capabilities, I think I\u0027d have a lot easier time with it.\n\nI\u0027m quite new to the modding scene with KSP, but I\u0027ve been a web developer for a number of years now and am proficient in C# and Unity. I say all this to ensure anyone who responds that I have the background necessary to understand more technical answers to this question."},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-07-25T16:54:50Z","Content":"Even if your a experience KSP Mod developer, I would not recommend anything you are trying to accomplish as the GUI simply not made for extension. Also note that Unity is currently being replaced by SQUAD so changes are, if you manage to create anything functional at all, it will stop working even before you complete it."},{"CreatedByName":"Skoth","CreatedById":71045,"CreatedDateTime":"2015-07-25T18:05:35Z","Content":"Ah, I see. I read in another post that most of that functionality is hard coded, so I figured it was a long shot."},{"CreatedByName":"Skoth","CreatedById":71045,"CreatedDateTime":"2015-08-17T19:09:55Z","Content":"Since the Tech Tree is not available for customized use, I\u0027ve been studying various existing mods\u0027 GUI approaches and utilized an amalgam of sorts to try to achieve the block diagram system I hope to build. The pictures shown below shows what I\u0027ve been working on. It features draggable graph nodes/vertices with four different endpoints for creating graph edges. \n\n![screenCapture1.png](http://i1214.photobucket.com/albums/cc483/kdjohn91/screenCapture1.png)\n\n![screenCapture2.png](http://i1214.photobucket.com/albums/cc483/kdjohn91/screenCapture2.png)\n\nIn the first picture, I\u0027m left-clicking and dragging the left-most node\u0027s right endpoint (the KSP Debug Console on the right can be ignored for this image). In the second image, I release the left-mouse button at the middle node\u0027s left endpoint, which triggers a DrawConnection function. The only problem is, the line drawn is nowhere near the points I specified (that is, the left node\u0027s right endpoint and the middle node\u0027s left endpoint--my apologies for any confusion that description may cause!). As can be seen in the second image, the line, drawn in red, is way off in the upper-right of the screen. The KSP Debug Console shows the GUI.matrix as at is transformed. \n\nThe code for the DrawConnection function is as follows:\n\n    public static void DrawConnection(Vector2 pointA, Vector2 pointB, Color color, float width){            Matrix4x4 matrix = GUI.matrix;            Debug.Log(\u0022Before Draw:\\n\u0022 \u002B GUI.matrix.ToString());            Texture2D lineTex = new Texture2D(1, 1);            Color savedColor = GUI.color;            GUI.color = color;            float angle = Vector2.Angle(pointB - pointA, Vector2.right);            if (pointA.y \u003C pointB.y) { angle = -angle; }            GUIUtility.ScaleAroundPivot(new Vector2((pointB - pointA).magnitude, width), pointA);            Debug.Log(\u0022After Scale:\\n\u0022 \u002B GUI.matrix.ToString());            GUIUtility.RotateAroundPivot(angle, pointA);            Debug.Log(\u0022After Rotate:\\n\u0022 \u002B GUI.matrix.ToString());            GUI.DrawTexture(new Rect(pointA.x, Screen.height - pointA.y, 1, 1), lineTex);            // Restore GUI            GUI.matrix = matrix;            GUI.color = savedColor; }\n\nI\u0027ve literally been at this for days and it\u0027s driving me crazy ![:confused:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif). If anyone has any recommendations I would be so grateful!"},{"CreatedByName":"Skoth","CreatedById":71045,"CreatedDateTime":"2015-08-21T13:37:05Z","Content":"For those that might be interested, I finally figured out what was going wrong. There seems to have been three main issues: 1) The GUIUtility.ScaleAroundPivot() call was too intense, and throwing everything way off. Instead of calling it, I just used the length between the two vectors and provided that length as the Rect\u0027s width argument in the GUI.DrawTexture() call. 2) The conversion between Rect coordinates and Vector2 coordinates kept conflicting with another. At first I thought only a few calls would work if I treated the first Vector2 (ptA in the code below) as if it were in Rect coordinates, but then I\u0027d get weird offsetting behavior with the drawn line. I finally decided to just try modifying ptA so that every reference to it in the DrawConnection() method received it as though it were in Rect coordinates, and that seemed to do the trick. 3) The angle calculation was \u0022right\u0022, but determining whether the value should be negative would often cause the line to rotate in the opposite direction. At the onset I was not sure whether positive rotations corresponded to clockwise or counterclockwise movement. But it looks like clockwise rotation corresponds to negative angles and counterclockwise rotation corresponds to positive angles\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACwhich is convenient since that\u0027s the mathematical standard I learned.\n\n![screenCapture3.png](http://i1214.photobucket.com/albums/cc483/kdjohn91/screenCapture3.png)\n\n    public static void DrawConnection(Vector2 ptA, Vector2 ptB, Color color, float width){            Color savedColor = GUI.color;            GUI.color = color;            Matrix4x4 savedMatrix = GUI.matrix;            Vector2 rectPtA = new Vector2(ptA.x, Screen.height - ptA.y);            float angle = (ptB.y \u003C rectPtA.y) ? -Vector2.Angle(ptB - rectPtA, Vector2.right) : Vector2.Angle(ptB - rectPtA, Vector2.right);            GUIUtility.RotateAroundPivot(angle, rectPtA);            float mag = (ptB - rectPtA).magnitude;            Texture2D lineTex = new Texture2D(1, 1);            GUI.DrawTexture(new Rect(ptA.x, rectPtA.y, mag, width), lineTex);            GUI.color = savedColor;            GUI.matrix = savedMatrix;}\n\nIn any case, I\u0027m quite relieved to have overcome what I initially thought was a very minor and simple problem ![:D](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif)! That seems to be a common theme in software development."},{"CreatedByName":"monstah","CreatedById":95210,"CreatedDateTime":"2015-08-21T14:28:38Z","Content":"I support your attempt! I\u0027d just like to reiterate something FreeThinker said in the second post: the game\u0027s UI is undergoing a major overhaul in its code; there are currently some 3 or 4 different systems being used in different parts of the game, and they will be unified into Unity\u0027s new UI (or something). So, thread carefully, and don\u0027t burn yourself out before the new version comes out."},{"CreatedByName":"Skoth","CreatedById":71045,"CreatedDateTime":"2015-08-21T15:18:44Z","Content":"Thanks for the heads up! I read related articles about that, and am hoping the UI updates will not interfere with the work I\u0027m doing. Actually, part of the reason I was able to figure it out was because I created an isolated test project in Unity 5.1.1 so that I could solely analyze that one function\u0027s operation. I know it could be difficult to say this early on, but if it works in a completely separate Unity project, is that a good indicator for how well it will work when KSP has migrated to the new UI?"},{"CreatedByName":"nightingale","CreatedById":119307,"CreatedDateTime":"2015-08-21T16:07:55Z","Content":"\u003E \n\u003E Thanks for the heads up! I read related articles about that, and am hoping the UI updates will not interfere with the work I\u0027m doing. Actually, part of the reason I was able to figure it out was because I created an isolated test project in Unity 5.1.1 so that I could solely analyze that one function\u0027s operation. I know it could be difficult to say this early on, but if it works in a completely separate Unity project, is that a good indicator for how well it will work when KSP has migrated to the new UI?\n\nThere\u0027s a lot of FUD about the new Unity GUI. It\u0027s been around since Unity 4.6, which is what KSP 1.0.x uses. So the new UI is already there. What may break is if you are using some of the third-party plugins that Squad has used (stuff like EZGui), as Squad is moving away from those and they may very well be removed from KSP 1.1.\n\nSo although you\u0027re using what Unity considers the legacy GUI, I wouldn\u0027t worry too much about it, have a read of [this page](http://docs.unity3d.com/Manual/GUIScriptingGuide.html) (emphasis mine):\n\n\u003E \n\u003E The legacy GUI system has been replaced with the new [UI System](http://docs.unity3d.com/Manual/UISystem.html). The legacy GUI is still functional but is not recommended to use in your game or application. *The legacy GUI system is still used in Unity\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s own interface* and can be used to create custom editor GUI.\n\nSo because Unity would need to re-write their own tools before they can drop support for the legacy GUI, I don\u0027t think that\u0027s it\u0027s something that anyone needs to worry about for KSP. They might hypothetically drop it in Unity 6.0, but that\u0027s not even a thing that exists today, and I doubt by the time it does that there\u0027s any economic incentive for Squad to port KSP to *another* Unity major version upgrade.\n\nMy personal opinion of the new Unity UI system is that it\u0027s next to worthless *for KSP modders*. By design it\u0027s meant to be used through the Unity tools by creating \u0022proper\u0022 unity prefabs and objects. Doing it through the scripting interface is... ugly to say the least. The only example in the wild of the new UI in use by a KSP mod is one of DMagic\u0027s modlet ([source here](https://github.com/DMagic1/KSC-Building-Shortcuts/blob/master/Source/KSCShortcuts.cs), you can read a little bit of his opinion on the new UI [here](https://forum.kerbalspaceprogram.com/threads/122385-AffinityUI-an-easier-way-to-write-Unity-GUIs?p=1965689\u0026viewfull=1#post1965689)).\n\nThe only thing that may change around this for KSP 1.1 is that Squad may release their own wrappers/classes to make doing Unity GUIs through scripting simpler. But even then, the performance benefits of the new UI are really only seen with big GUIs with complex layouts with relative positioning/sizing of elements (see Mechjeb). In your case, if you were to port what you\u0027re doing the new UI, I suspect the only noticeable difference I\u0027d expect is that you\u0027d have a really bad headache after it\u0027s done.\n\nSorry about the long rant on your thread... Short version of what I was trying to say is keep rockin\u0027 on and don\u0027t worry too much about what KSP 1.1 will bring. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"}]}