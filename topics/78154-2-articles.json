{"TopicId":78154,"ForumId":36,"TopicTitle":"Contract Modding Information for Mod Authors","CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-07-18T09:00:31Z","PageNum":2,"Articles":[{"CreatedByName":"Mihara","CreatedById":59752,"CreatedDateTime":"2014-07-20T12:28:42Z","Content":"\n\u003Cp\u003E...Looking at those structures, it appears it should be feasible to create a plugin that consumes Mission Controller campaigns and produces stock contracts.\u003C/p\u003E\u003Cp\u003EWhich, I think, would be a welcome addition, since unlike the procedurally generated contracts, Mission Controller campaigns usually make some sort of sense.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-07-20T17:56:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kiwiak\u0022 data-cite=\u0022kiwiak\u0022\u003E\u003Cdiv\u003EIt woudl be nice if it required specific orbit parameters, for example molniya orbit-like. Players are launching exuatorial all the time, except rare cases of when they want to encounter asterid or put satellite on polar orbit.\u003Cp\u003EAlso, is it possible to make use of asteroid/stranded kerbal spawning system to make game spawn its own ships?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERight now, it selects a random orbit from 3 types: low orbit, geostationary, and ececentric. Also please note that ( as far as I know) the \u0022asteroid system\u0022 doesn\u0027t spawn anything itself, it simply asks the vessel spawning system to spawn asteroids, and the vessel spawning system is moddable, so yes, it is possible.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-20T18:00:28Z\u0022 title=\u002207/20/2014 06:00  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 20, 2014\u003C/time\u003E by MrHappyFace\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DYJ","CreatedById":8636,"CreatedDateTime":"2014-07-20T18:03:58Z","Content":"\n\u003Cp\u003EStickied this, always nice to see someone take the time and effort to make examples for others.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-07-21T00:29:52Z","Content":"\n\u003Cp\u003EIt looks like they added some new GameEvents, which should be extremely helpful for detecting completion of new contracts.\u003C/p\u003E\u003Cp\u003EOnScienceReceived fires after transmitting or recovering science and returns the science subject and the amount of science gained. This should be perfect for setting up very specific science contracts. Instead of just collect science from the Mun, I think I can give it a specific experiment (and even biome) with a required amount of science to be gained. I will post the ContractParameter code if I get it working.\u003C/p\u003E\u003Cp\u003EEdit: Success! I\u0027ve got created a new Contract Parameter that calls for specific experiments around a specific body, and can require a set amount of science to be gathered.\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/onNaa\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003EThis code is all sorts of rough, but everything seems to be working so far.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Enamespace DMagic\u003Cbr\u003E{\u003Cbr\u003E\tpublic class DMContract: Contract\u003Cbr\u003E\t{\u003Cbr\u003E\u003Cbr\u003E\t\tprivate CelestialBody body = null;\u003Cbr\u003E\t\tprivate BodyLocation scienceLocation;\u003Cbr\u003E\t\tprivate ScienceExperiment exp = null;\u003Cbr\u003E\u003Cbr\u003E\t\t#region overrides\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override bool Generate()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tif (body == null)\u003Cbr\u003E\t\t\t\tbody = FlightGlobals.Bodies[1];\u003Cbr\u003E\t\t\tscienceLocation = BodyLocation.Space;\u003Cbr\u003E\t\t\tif (exp == null)\u003Cbr\u003E\t\t\t\texp = ResearchAndDevelopment.GetExperiment(\u0022rpwsScan\u0022);\u003Cbr\u003E\t\t\tthis.agent = Contracts.Agents.AgentList.Instance.GetAgent(\u0022DMagic\u0022);\u003Cbr\u003E\t\t\tthis.AddParameter(new DMCollectScience(body, scienceLocation, exp), null);\u003Cbr\u003E\t\t\tbase.SetExpiry();\u003Cbr\u003E\t\t\tbase.SetScience(5f, body);\u003Cbr\u003E\t\t\tbase.SetDeadlineYears(100f, body);\u003Cbr\u003E\t\t\tbase.SetReputation(5f, 10f, body);\u003Cbr\u003E\t\t\tbase.SetFunds(100f, 10f, 50f, body);\u003Cbr\u003E\t\t\treturn true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override bool CanBeCancelled()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override bool CanBeDeclined()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override string GetHashString()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn body.name \u002B scienceLocation.ToString() \u002B exp.id;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override string GetTitle()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn \u0022Contract to do something\u0022;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override string GetDescription()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn \u0022Do something!\u0022;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override string GetSynopsys()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn \u0022You did something!\u0022;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override string MessageCompleted()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn \u0022Success\u0022;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override void OnLoad(ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Loading Contract\u0022);\u003Cbr\u003E\t\t\tint targetBodyID = int.Parse(node.GetValue(\u0022ScienceTarget\u0022));\u003Cbr\u003E\t\t\tforeach (CelestialBody cBody in FlightGlobals.Bodies)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (cBody.flightGlobalsIndex == targetBodyID)\u003Cbr\u003E\t\t\t\t\tbody = cBody;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Body Set\u0022);\u003Cbr\u003E\t\t\tScienceExperiment sciExp = ResearchAndDevelopment.GetExperiment(node.GetValue(\u0022ScienceExperiment\u0022));\u003Cbr\u003E\t\t\tif (sciExp != null)\u003Cbr\u003E\t\t\t\texp = sciExp;\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Experiment Set\u0022);\u003Cbr\u003E\t\t\tstring location = node.GetValue(\u0022TargetLocation\u0022);\u003Cbr\u003E\t\t\tif (location != null)\u003Cbr\u003E\t\t\t\tif (location == \u0022Space\u0022)\u003Cbr\u003E\t\t\t\t\tscienceLocation = BodyLocation.Space;\u003Cbr\u003E\t\t\t\telse\u003Cbr\u003E\t\t\t\t\tscienceLocation = BodyLocation.Surface;\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Location Set\u0022);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override void OnSave(ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Saving Contract\u0022);\u003Cbr\u003E\t\t\tnode.AddValue(\u0022ScienceTarget\u0022, body.flightGlobalsIndex);\u003Cbr\u003E\t\t\tnode.AddValue(\u0022ScienceExperiment\u0022, exp.id);\u003Cbr\u003E\t\t\tnode.AddValue(\u0022TargetLocation\u0022, scienceLocation);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override bool MeetRequirements()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t#endregion\u003Cbr\u003E\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t#region Contract Parameter\u003Cbr\u003E\u003Cbr\u003E\tpublic class DMCollectScience: CollectScience\u003Cbr\u003E\t{\u003Cbr\u003E\t\tpublic CelestialBody scienceTargetBody;\u003Cbr\u003E\t\tpublic BodyLocation scienceLocation;\u003Cbr\u003E\t\tpublic ScienceExperiment targetScience;\u003Cbr\u003E\u003Cbr\u003E\t\tpublic DMCollectScience()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic DMCollectScience(CelestialBody target, BodyLocation location, ScienceExperiment experiment)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tscienceTargetBody = target;\u003Cbr\u003E\t\t\tscienceLocation = location;\u003Cbr\u003E\t\t\ttargetScience = experiment;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override string GetHashString()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treturn scienceTargetBody.name \u002B scienceLocation.ToString() \u002B targetScience.id;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override string GetTitle()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tif (scienceLocation == BodyLocation.Space)\u003Cbr\u003E\t\t\t\treturn string.Format(\u0022Collect {0} data from in orbit around {1}.\u0022, targetScience.experimentTitle, scienceTargetBody.theName);\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t\treturn string.Format(\u0022Collect {0} data from the surface of {1}.\u0022, targetScience.experimentTitle, scienceTargetBody.theName);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override void OnRegister()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tGameEvents.OnScienceRecieved.Add(scienceRecieve);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override void OnUnregister()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tGameEvents.OnScienceRecieved.Remove(scienceRecieve);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override void OnSave(ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Saving Contract Parameter\u0022);\u003Cbr\u003E\t\t\tnode.AddValue(\u0022ScienceTarget\u0022, scienceTargetBody.flightGlobalsIndex);\u003Cbr\u003E\t\t\tnode.AddValue(\u0022ScienceExperiment\u0022, targetScience.id);\u003Cbr\u003E\t\t\tnode.AddValue(\u0022TargetLocation\u0022, scienceLocation);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprotected override void OnLoad(ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Loading Contract Parameter\u0022);\u003Cbr\u003E\t\t\tint targetBodyID = int.Parse(node.GetValue(\u0022ScienceTarget\u0022));\u003Cbr\u003E\t\t\tforeach (CelestialBody body in FlightGlobals.Bodies)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (body.flightGlobalsIndex == targetBodyID)\u003Cbr\u003E\t\t\t\t\tscienceTargetBody = body;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Param Body Set\u0022);\u003Cbr\u003E\t\t\tScienceExperiment exp = ResearchAndDevelopment.GetExperiment(node.GetValue(\u0022ScienceExperiment\u0022));\u003Cbr\u003E\t\t\tif (exp != null)\u003Cbr\u003E\t\t\t\ttargetScience = exp;\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Param Experiment Set\u0022);\u003Cbr\u003E\t\t\tstring location = node.GetValue(\u0022TargetLocation\u0022);\u003Cbr\u003E\t\t\tif (location != null)\u003Cbr\u003E\t\t\t\tif (location == \u0022Space\u0022)\u003Cbr\u003E\t\t\t\t\tscienceLocation = BodyLocation.Space;\u003Cbr\u003E\t\t\t\telse\u003Cbr\u003E\t\t\t\t\tscienceLocation = BodyLocation.Surface;\u003Cbr\u003E\t\t\tDebug.Log(\u0022[DM] Param Location Set\u0022);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tprivate void scienceRecieve(float sci, ScienceSubject sub)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tif (sub.id == targetScience.id \u002B \u0022@\u0022 \u002B scienceTargetBody.name \u002B ExperimentSituations.InSpaceLow.ToString())\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022[DM] Contract Complete\u0022);\u003Cbr\u003E\t\t\t\tbase.SetComplete();\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t#endregion\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe OnSave and OnLoad methods were giving me headaches, hence all of the debug spam, but in principle they are simple (also, MrHappyFace, I think you have the OnSave and OnLoad switched in your ContractParameter code), you can check the persistent file to see how things look once they\u0027ve been saved.\u003C/p\u003E\u003Cp\u003EThe other problem that I kept running into, was that my DMCollectScience Contract Parameter needed to have an empty constructor, the public DMCollectScience() line, in addition to the one called by the Contract generator.\u003C/p\u003E\u003Cp\u003EThe only method really specific to this type of contract is the last one, scienceRecieve(), that\u0027s the one tied to the game event that checks to see if the correct experiment has been performed. It also returns the amount of science gained, so I could check that, too.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-21T02:20:10Z\u0022 title=\u002207/21/2014 02:20  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 21, 2014\u003C/time\u003E by DMagic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Arsonide","CreatedById":32604,"CreatedDateTime":"2014-07-21T03:45:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe OnSave and OnLoad methods were giving me headaches, hence all of the debug spam.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHello OnSaveLoad Debug Spam buddy! I had the same issues, and also noticed that the example code was reversed. We might be able to pool our resources into one mod once we all finish our respective contract types and get that code out there.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-07-21T04:07:41Z","Content":"\n\u003Cp\u003EI\u0027m all for combining resources, but most of my contracts will probably be specific to my own parts. \u003C/p\u003E\u003Cp\u003EI\u0027m thinking, though, that maybe I\u0027ll make a generic generator with a ScienceExperiment array populated with the available science parts to serve as a source of contracts. There is no reason why this wouldn\u0027t work with stock science parts too, or any other science experiments.\u003C/p\u003E\u003Cp\u003EThis could exist separately from my mod, or maybe I could also include it with my mod, but just disable it if the separate version is also installed. I\u0027ll have to see what\u0027s possible.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-07-21T05:12:21Z","Content":"\n\u003Cp\u003EI\u0027m good with the combined mod idea. Also, the code in the op has long since been updated, the contract\u0027s target will never be the same twice, and it picks the next logical target based on where you\u0027ve been, but the OnLoad OnSave thing did cause me some grief... I just hate how much of my time has been wasted on REALLY stupid typos like that.\u003C/p\u003E\n"},{"CreatedByName":"Isbeorn","CreatedById":116297,"CreatedDateTime":"2014-07-21T21:57:04Z","Content":"\n\u003Cp\u003EHey awesome guide! Used this to mess around on my own, but i\u0027m now stuck on a few problems:\u003C/p\u003E\u003Cp\u003EI am not able to set up those Contract Parameters right, where there is a specific condition like \u0022Reach Altitude from 2000 to 3000\u0022. \u003C/p\u003E\u003Cp\u003EOnce i am in the specified altitude the Parameter for my custom contract gets green (which is fine), but when leaving the altitude range the parameter stays green... \u003C/p\u003E\u003Cp\u003ETried using Contracts.Parameters.ReachAltitudeEnvelope and also a custom Paramter. It kind of looks like that the OnUpdate is not triggered anymore once the parameter is set to completed and i do not know how to reset this parameter once the condition is no more met... Also the ReachAltitudeEnvelope is a stock parameter and i do not get why this does not work here.\u003C/p\u003E\u003Cp\u003ESecond thing is about those sub parameters for parameters. \u003C/p\u003E\u003Cp\u003EI created a new custom parameter and tried to add a sub parameter : Contracts.Parameters.ReachAltitudeEnvelope. \u003C/p\u003E\u003Cp\u003EI instanciated that one in the constructor and in the OnRegister() Method i add it to my base parameter. \u003C/p\u003E\u003Cp\u003EAlso in OnUnregister i remove that parameter. Problem here is: When accepting a contract i see the sub parameter, but when going through a loading screen i get a new sub paramter added everytime additionally to the old one:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclass ShipParam : ContractParameter {        const String PARAMID = \u0022\u0022;\u003Cbr\u003E        Contracts.Parameters.ReachAltitudeEnvelope alt;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public ShipParam() {\u003Cbr\u003E            alt = new Contracts.Parameters.ReachAltitudeEnvelope(3000, 2000, \u0022a\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        protected override void OnRegister() {\u003Cbr\u003E            this.AddParameter(alt, \u0022test\u0022);            \u003Cbr\u003E            base.OnRegister();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        protected override void OnUnregister() {\u003Cbr\u003E            this.RemoveParameter(alt);            \u003Cbr\u003E            base.OnUnregister();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        protected override void OnUpdate() {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            base.OnUpdate();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E    }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAlso the same problem regarding the setting to imcomplete applies here.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-07-21T23:01:56Z","Content":"\n\u003Cp\u003EThat\u0027s kind of an unorthodox method of creating parameters, why not try simply extending ReachAltitudeEnvelope\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-07-22T01:55:36Z","Content":"\n\u003Cp\u003EI\u0027ve had some success getting a more generalized and customizable system setup for adding science experiment contracts.\u003C/p\u003E\u003Cp\u003EFirst of all, I\u0027m not sure if it\u0027s been mentioned, but in the Alt\u002BF12 debug console there is a \u0022Contracts\u0022 tab that allows you to manually create any type of contract. There are three buttons there, and I\u0027m not sure what the difference is, but this is great for forcing contract generation while testing.\u003C/p\u003E\u003Cp\u003ESo anyway, my first thought was that instead of just scanning through all of the existing science experiments (and potentially stepping on science modders\u0027 toes) I would setup a config file system. It\u0027s a fairly simple system where you just include a few items about the experiments you want to add and put them in a config file.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ECONTRACT_EXPERIMENT\u003Cbr\u003E{\u003Cbr\u003E\tname = Magnetometer Scan\u003Cbr\u003E\texperimentID = magScan\u003Cbr\u003E\tsitMask = 51\u003Cbr\u003E\tbioMask = 1\u003Cbr\u003E\tpart = dmmagBoom\u003Cbr\u003E\ttechNode = scienceTech\u003Cbr\u003E\tagent = DMagic\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is my format. My experiments have a few added complications because I store the situation and biome masks internally rather than in the ScienceDefs.cfg file (the better to keep unwanted mods from interfering with my parts:wink:), but the basic requirements are simple. You add a name, I\u0027m using the experiment name from the ScienceDefs file, but anything will do, the experimentID, the name of the part that the experiment is associated with, the tech node where that part can be researched, and an agent.\u003C/p\u003E\u003Cp\u003EThese can be generalized or made to work with different types of experiments. For example the EVA report would look like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ECONTRACT_EXPERIMENT\u003Cbr\u003E{\u003Cbr\u003E\tname = EVA Report\u003Cbr\u003E\texperimentID = evaReport\u003Cbr\u003E\tpart = None\u003Cbr\u003E\ttechNode = notANode\u003Cbr\u003E\tagent = Any\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAs long as the part is named \u0022None\u0022 then the system will assume that no part is associated with the experiment and skip all of the part and tech node steps (putting something in the tech node field is probably still required though). And setting the agent equal to \u0022Any\u0022 means that none will be specified.\u003C/p\u003E\u003Cp\u003EThe code is getting too complicated to post here, but everything is on GitHub in the \u003Ca href=\u0022https://github.com/DMagic1/Orbital-Science/tree/Contracts!\u0022 rel=\u0022external nofollow\u0022\u003EContracts! branch\u003C/a\u003E and I update that frequently.\u003C/p\u003E\u003Cp\u003EThe system \u003Ca href=\u0022https://github.com/DMagic1/Orbital-Science/blob/Contracts!/Source/DMConfigLoader.cs\u0022 rel=\u0022external nofollow\u0022\u003Eloads all of the experiments\u003C/a\u003E from the config file at the mainmenu and prints out which were added. It stores all of the information in a simple object that I created.\u003C/p\u003E\u003Cp\u003EThe contract generator just takes a random value from the list of all these objects then \u003Ca href=\u0022https://github.com/DMagic1/Orbital-Science/blob/Contracts!/Source/DMContract.cs#L30-L50\u0022 rel=\u0022external nofollow\u0022\u003Escans through to check if it is eligible\u003C/a\u003E. It checks to see if the tech node is valid and has been researched, then it checks to see if the specific part has been purchased from the R\u0026amp;D center.\u003C/p\u003E\u003Cp\u003EOnce it gets past there it assigns a target Celestial Body (which I haven\u0027t really implemented yet, but it looks like there are some standard methods for this). Then it checks which experimental situations can be done by the selected experiment, selects one at random, and \u003Ca href=\u0022https://github.com/DMagic1/Orbital-Science/blob/Contracts!/Source/DMContract.cs#L60-L83\u0022 rel=\u0022external nofollow\u0022\u003Egenerates the appropriate Science Subject\u003C/a\u003E. This would be the experiment ID, the target body, the target situation, and a biome if applicable (I haven\u0027t implemented the biome part yet). If the experiment doesn\u0027t have enough remaining science to be collected (maybe one or two samples from that area have already been collected) then it returns false.\u003C/p\u003E\u003Cp\u003EIf it gets past that point then it assigns the agent if applicable, and generates the Contract Paramater. \u003C/p\u003E\u003Cp\u003EI have an idea to set the rewards values based on the celestial body science parameters. These are the multipliers for your science experiments, I think they serve as a decent analogue for the difficulty level involved with any given experiment. \u003C/p\u003E\u003Cp\u003EIt all seems to working so far. It\u0027s generating contracts based on my list of experiments, and none of them are invalid, I\u0027m not getting requests to perform a laser surface scan from orbit. \u003C/p\u003E\u003Cp\u003EI think I just need to figure out the celestial body generating code, come with a way to generate descriptions, and maybe tweak the reward settings.\u003C/p\u003E\u003Cp\u003EBut it should be very simple to add in the stock experiments and any standard mod experiments using a slightly altered form of this code. Then the contracts for my own experiments could live alongside these without any conflicts.\u003C/p\u003E\u003Cp\u003EI\u0027ll post more when I get something more finalized.\u003C/p\u003E\n"},{"CreatedByName":"Isbeorn","CreatedById":116297,"CreatedDateTime":"2014-07-22T07:17:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003EThat\u0027s kind of an unorthodox method of creating parameters, why not try simply extending ReachAltitudeEnvelope\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHi,\u003C/p\u003E\u003Cp\u003Ethat is of course just a code snippet. My own parameter gets it\u0027s own logic, but should use some sub parameters that have to be considered first. Just like the part testing contracts, where some conditions have to be met first before the actual part can be tested. \u003C/p\u003E\u003Cp\u003ESo why should i extend the ReachAltitudeEnvelop when i want to include this one as it is as a sub parameter of my own?\u003C/p\u003E\u003Cp\u003EAnyway with my above mentioned method the sub parameter do not behave correctly...\u003C/p\u003E\n"},{"CreatedByName":"Memnomena","CreatedById":116525,"CreatedDateTime":"2014-07-23T22:23:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003E(also, MrHappyFace, I think you have the OnSave and OnLoad switched in your ContractParameter code)\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETHANK YOU for pointing this out! I\u0027m new to modding, and I just couldn\u0027t spot where the problem was. \u003C/p\u003E\u003Cp\u003EIt\u0027s an interesting bug, though - it seems to make most of the game interface fail, and even the KSP.log can fail to be written. All of which, of course, made it a bit difficult to figure out. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnd thanks to MrHappyFace for the original code! This is perfect for what I\u0027m trying to do.\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-24T05:31:40Z","Content":"\n\u003Cp\u003EMan getting my head around this and coverting Mission Controller missions to new contracts is going to be a huge task I think.\u003C/p\u003E\u003Cp\u003EGetting a simple orbit mission with MaxApA and MinPeA to work, getting paid but for somereason the contract itself is not showing finished. Must be missing something.\u003C/p\u003E\u003Cp\u003EI noticed the switch too in the OnLoad and OnSave. LOL. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EMy question is. Does the OnRegister and OnUnRegister code wise have to happen at the same exact time the event is fired.\u003C/p\u003E\u003Cp\u003EFor instance having an OrbitalGoal max ApA and MinPeA set to numbers. If I use EventData\u0026lt;Vessel\u0026gt; onVesselCreate to fire my code. Then obviously this does not happen at the same time as Orbit Event I have. Only EventData I can find that comes close is the EventDate.Situtions.OnOrbit.. But again that will fire first, then it could still take player a few mins to get the exact ApA and PeA that is specified in code.\u003C/p\u003E\u003Cp\u003EI will have to do more testing. Right now the biggest concern is why contract is not going away.\u003C/p\u003E\u003Cp\u003EI used these events in MCE for a lot of code well before .24 and usually the code was waiting for event to fire then it completed. No idea how make my own events yet.\u003C/p\u003E\u003Cp\u003EEdit: Think I fixed it. Hope so. The contract now finishes but still having issues finding an event that will fire at the same time that the player reaches the correct ApA and PeA. At this point you have to switch around ships to get it work.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-24T14:15:01Z\u0022 title=\u002207/24/2014 02:15  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 24, 2014\u003C/time\u003E by malkuth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-07-24T16:28:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022malkuth\u0022 data-cite=\u0022malkuth\u0022\u003E\u003Cdiv\u003EEdit: Think I fixed it. Hope so. The contract now finishes but still having issues finding an event that will fire at the same time that the player reaches the correct ApA and PeA. At this point you have to switch around ships to get it work.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan you run stuff in Update() in the contract parameter code? You might have to end up using some kind of custom event management to trigger the base.setComplete() method that completes the contract.\u003C/p\u003E\n"},{"CreatedByName":"BananaDealer","CreatedById":60684,"CreatedDateTime":"2014-07-24T17:00:25Z","Content":"\n\u003Cp\u003EJust checking in oh the Contracts front...\u003C/p\u003E\u003Cp\u003EOh God, /words...\u003C/p\u003E\u003Cp\u003EGood thing my troubles with x64 crashes have kept me busy or I would probably be coding right now...\u003C/p\u003E\u003Cp\u003EAnyways, this will all probably come handy once I do start work on my Contract Pack.\u003C/p\u003E\u003Cp\u003EDamn, I love the KSP modding community... Give it a couple days and the right incentive and they\u0027ll probably solve 42...\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-24T19:30:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003ECan you run stuff in Update() in the contract parameter code? You might have to end up using some kind of custom event management to trigger the base.setComplete() method that completes the contract.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIm not sure. But I think it was a real bad decision to limit us to Events to trigger our codes if that is the case, be a huge step down from even PartModules. Must be more we can do. Be nice to just have our parameters running in something like OnFixedUpdate or something.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-07-24T19:57:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022malkuth\u0022 data-cite=\u0022malkuth\u0022\u003E\u003Cdiv\u003EIm not sure. But I think it was a real bad decision to limit us to Events to trigger our codes if that is the case, be a huge step down from even PartModules. Must be more we can do. Be nice to just have our parameters running in something like OnFixedUpdate or something.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn ContractParameter, there is a protected method you can override called OnUpdate()\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-24T20:54:39Z","Content":"\n\u003Cp\u003EAnyway to limit the contract spam. Set up a contract that has some random values and it seems that the contract system lives to fill up its max amount of contracts with it. Noticed that if you have a contract with set values you only get one of them offered usually.\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-24T20:56:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003EIn ContractParameter, there is a protected method you can override called OnUpdate()\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for this thread mrhappy helps a lot. And I will mess around with onupdate override.\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-25T02:33:10Z","Content":"\n\u003Cp\u003ESo the OnUpdate works great. Wow, that means that contracts have become pretty dam easy to make, once I get some more framwork in for MissionGoals I should be able to write Contracts pretty quick. Nice. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003Estill like to find a way to make only 1 contract available at a time thats clean.\u003C/p\u003E\u003Cp\u003Eseems to be an Enum for state. Having issue getting it to work though.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-25T16:03:01Z\u0022 title=\u002207/25/2014 04:03  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 25, 2014\u003C/time\u003E by malkuth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Arsonide","CreatedById":32604,"CreatedDateTime":"2014-07-25T16:06:29Z","Content":"\n\u003Cp\u003EMrHappyFace I ran into some serious issues with Extra Contracts last night, my waypoint code works, but yesterday I tried to implement a contract with it, and that involves setting up a waypoint object, keeping it serialized, and sending it to WaypointManager on the start of the flight scene, and deleting it from the WaypointManager at the end of the flight scene. I spent all night trying to get that seemingly simple order of operations into the game\u0027s head, but it kept throwing null reference errors (which cause the game to have a coronary).\u003C/p\u003E\u003Cp\u003EMy point is that I noticed a few things.\u003C/p\u003E\u003Cp\u003EA: OnRegister only runs for contracts you accept, but OnUnregister seems to run for any contracts that are posted, even if you have not accepted them. This is an important distinction, because for me, OnRegister allocates memory for the object, and OnUnregister uses it. If I don\u0027t check for null in OnUnregister, the game freaks out checking all the missions on the mission board that I haven\u0027t accepted and therefore have not generated waypoints for yet.\u003C/p\u003E\u003Cp\u003EB: I set up an event for OnFlightReady, and I checked how it\u0027s order would compare to Update, OnRegistered, and the ctor. The order seems completely random.\u003C/p\u003E\u003Cp\u003EThese things are making it hard to work, but not impossible. If it comes down to it I can write a really messy way of sending data to the WaypointManager using strings or something instead of objects.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-07-25T16:22:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022malkuth\u0022 data-cite=\u0022malkuth\u0022\u003E\u003Cdiv\u003EAnyway to limit the contract spam. Set up a contract that has some random values and it seems that the contract system lives to fill up its max amount of contracts with it. Noticed that if you have a contract with set values you only get one of them offered usually.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is a static int: Contract.contractsInExistance that I think you can use to prevent spamming the list with your contracts. Just put a check for some max value at the top of your Generate() code.\u003C/p\u003E\u003Cp\u003EHas anyone else been playing with the Contract.MeetRequirements() bool? I\u0027ve noticed that it sometimes seems to get stuck on repeat, or is just running in Update(). When I put even a simple debug message it sometimes spams the log and sometimes doesn\u0027t. I\u0027m not sure exactly what\u0027s going on, but maybe it\u0027s not a good idea to put much code in here if it\u0027s going to run all of the time.\u003C/p\u003E\u003Cp\u003EAlso, has anyone played around with targeting agencies based on their mentalities? Some of the mentalities in the stock agencies have \u0022not implemented\u0022 flags in their descriptions, and they have some kind of multiplier associated with them that does something. There\u0027s probably a good way of selecting agencies based on their mentalities and reputation, I just haven\u0027t looked into it enough.\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-25T16:27:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EThere is a static int: Contract.contractsInExistance that I think you can use to prevent spamming the list with your contracts. Just put a check for some max value at the top of your Generate() code.\u003Cp\u003EHas anyone else been playing with the Contract.MeetRequirements() bool? I\u0027ve noticed that it sometimes seems to get stuck on repeat, or is just running in Update(). When I put even a simple debug message it sometimes spams the log and sometimes doesn\u0027t. I\u0027m not sure exactly what\u0027s going on, but maybe it\u0027s not a good idea to put much code in here if it\u0027s going to run all of the time.\u003C/p\u003E\u003Cp\u003EAlso, has anyone played around with targeting agencies based on their mentalities? Some of the mentalities in the stock agencies have \u0022not implemented\u0022 flags in their descriptions, and they have some kind of multiplier associated with them that does something. There\u0027s probably a good way of selecting agencies based on their mentalities and reputation, I just haven\u0027t looked into it enough.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAll I have used it for is for a technology check for when the contract is available. Did not use any dubug code for it though.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-07-25T18:38:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EThere is a static int: Contract.contractsInExistance that I think you can use to prevent spamming the list with your contracts. Just put a check for some max value at the top of your Generate() code.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt looks like contractsInExistance just gives you the total of all types of contracts.\u003C/p\u003E\u003Cp\u003EUse ContractSystem.Instance.GetCurrentContracts\u0026lt;*YourContractType*\u0026gt;().Count() to find out the number of contracts of a given type. This presumably counts both active and offered contracts. \u003C/p\u003E\u003Cp\u003EGetCurrentActiveContracts probably returns the number of accepted contracts of a given type.\u003C/p\u003E\n"},{"CreatedByName":"Raven.","CreatedById":99340,"CreatedDateTime":"2014-07-25T19:42:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EModding Contracts\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://imgur.com/a/rOXdl\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://imgur.com/a/rOXdl\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAs you can see, there are now some contracts asking you to dock around Kerbin, of course, it needs some work (the insane rewards are insane), but it is basically the framework for a modded contract. It was also generated based on how far i had advanced (none at all, because it was a testing world, hence why it said Kerbin instead of Jool or something crazy like that)\u003C/p\u003E\u003Cp\u003ENotes:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EMOST Contract related stuff is found in the Contracts namespace \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eany class extending Contract (in the namespace Contracts) is automatically found and added \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ECreating a contract:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EMake a class that extends Contract, the game automatically finds all classes extending Contract and adds them in. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eoverride the following methods:\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003EGenerate() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECanBeCancelled() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECanBeDeclined() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EGetHashString() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EGetTitle() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EGetDescription() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EGetSynopsis() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMessageCompleted() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOnLoad() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOnSave() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMeetRequirements() \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]In Generate(), you \u003Cstrong\u003EMUST\u003C/strong\u003E call the following things:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Ebase.SetExpiry() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ebase.SetScience(float reward, CelestialBody) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ebase.SetDeadlineYears(float numberOfYears, CelestialBody targetBody) \u003Cstrong\u003EOR\u003C/strong\u003E base.SetDeadlineDays(float numberOfDays, CelestialBody targetBody) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ebase.SetReputation(float reward, float failiure, CelestialBody targetBody) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ebase.SetFunds(float advance, float reward, float failiure, targetBody) \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]In Generate(), add some parameters using this.AddParameter(ContractParameter parameter, string id). I have no clue what id does, I just use null, which seems to work, Ill talk about ContractParameters later in this thread, but for now, just use new KerbalDeaths(), which will make you fail the contract if you kill any \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Evictims\u003C/span\u003E kerbals while the contract is active. The stock ContractParameters are in the namespace Contracts.Parameters, so try messing around with those. \u003C/p\u003E\u003Cp\u003E[*]In MeetRequirements(), you can check if this contract should show up in mission control, and return false is it shouldn\u0027t and true if it should. \u003C/p\u003E\u003Cp\u003E[*]the rest is customizable, but if you fill out the GetTitle(), GetDescription(), GetSynopsis(), and MessageCompleted(), it should show up in game. Mess around with the TextGen class (which, of course, is in the namespace Contracts) \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EContractParameters:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EMake a class extending ContractParameter \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOverride the following methods:\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003EOnRegister() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOnUnregister() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOnLoad() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOnSave() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EGetTitle() \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EGetHashString() \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]In OnRegister(), put initialization code such as adding to a GameEvent, or instantiating a new MonoBehaviour \u003C/p\u003E\u003Cp\u003E[*]In OnUnregister(), put code similar to what you would expect in OnDestroy(), such as removing a GameEvent added in OnRegister() or destroying a MonoBehaviour created in OnRegister() \u003C/p\u003E\u003Cp\u003E[*]OnSave() and OnLoad() are where you handle persistence, keep in mind that in OnSave(), NEVER use node.SetValue(), ALWAYS usennode.AddValue() \u003C/p\u003E\u003Cp\u003E[*]In GetTitle(), simply return the name of your parameter, like \u0022Orbit \u0022 \u002B targetBody.the name \u003C/p\u003E\u003Cp\u003E[*]use base.SetComplete() to complete the contract. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EUsing ProgressTracking to select targets based on progress:\u003C/strong\u003E \u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#a9a9a9;\u0022\u003Esuch an imaginative title!\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9just mess around with the ProgressTracking class and the protected static methods in the Contract class, such as Contract.GetBodies_NextUnvisited(). Use these in Generate () in your contract class to select the targetBody parameter used in SetScience() and SetFunds() in your contract class. You should also pipe the targetBody parameter into the the ContractParameter you made.\u003C/span\u003E\u003C/span\u003E \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EExample Code: \u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ENote: I dont care what you do with this code, its in the public domain\u003C/p\u003E\u003Cp\u003EDockingContract.cs:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.IO;\u003Cbr\u003Eusing System.Collections;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003Eusing Contracts;\u003Cbr\u003Eusing Contracts.Parameters;\u003Cbr\u003Eusing KSP;\u003Cbr\u003Eusing KSPAchievements;\u003Cbr\u003Eusing ContractsPlus.Contracts.Parameters;\u003Cbr\u003E\u003Cbr\u003Enamespace ContractsPlus.Contracts\u003Cbr\u003E{\u003Cbr\u003E    public class DockingContract : Contract\u003Cbr\u003E    {\u003Cbr\u003E        CelestialBody targetBody = null;\u003Cbr\u003E\u003Cbr\u003E        protected override bool Generate ()\u003Cbr\u003E        {\u003Cbr\u003E            targetBody = GetNextUnreachedTarget (1, true, false);\u003Cbr\u003E            if (targetBody == null)\u003Cbr\u003E            {\u003Cbr\u003E                targetBody = Planetarium.fetch.Home;\u003Cbr\u003E                Debug.LogWarning (\u0022targetBody could not be computed, using Kerbin\u0022);\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            CelestialBodySubtree progress = null;\u003Cbr\u003E            foreach (var node in ProgressTracking.Instance.celestialBodyNodes) \u003Cbr\u003E            {\u003Cbr\u003E                if (node.Body == targetBody)\u003Cbr\u003E                    progress = node;\u003Cbr\u003E            }\u003Cbr\u003E            if (progress == null)\u003Cbr\u003E            {\u003Cbr\u003E                Debug.LogError (\u0022ProgressNode for targetBody \u0022 \u002B targetBody.bodyName \u002B \u0022 not found, terminating contract\u0022);\u003Cbr\u003E                return false;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            if (progress.docking.IsComplete)\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log (\u0022Docking has already been completed for targetBody \u0022 \u002B targetBody.bodyName \u002B \u0022, terminating contract\u0022);\u003Cbr\u003E                return false;\u003Cbr\u003E            }\u003Cbr\u003E            bool manned = UnityEngine.Random.Range (0, 1) == 0;\u003Cbr\u003E\u003Cbr\u003E            this.AddParameter (new DockingParameter (targetBody, manned), null);\u003Cbr\u003E            if (manned)\u003Cbr\u003E                this.AddParameter (new KerbalDeaths(), null);\u003Cbr\u003E\u003Cbr\u003E            base.SetExpiry ();\u003Cbr\u003E            base.SetScience (2.25f, targetBody);\u003Cbr\u003E            base.SetDeadlineYears (1f, targetBody);\u003Cbr\u003E            base.SetReputation (150f, 60f, targetBody);\u003Cbr\u003E            base.SetFunds(15000f, 50000f, 35000f, targetBody);\u003Cbr\u003E            return true;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        public override bool CanBeCancelled ()\u003Cbr\u003E        {\u003Cbr\u003E            return true;\u003Cbr\u003E        }\u003Cbr\u003E        public override bool CanBeDeclined ()\u003Cbr\u003E        {\u003Cbr\u003E            return true;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        protected override string GetHashString ()\u003Cbr\u003E        {\u003Cbr\u003E            return targetBody.bodyName;\u003Cbr\u003E        }\u003Cbr\u003E        protected override string GetTitle ()\u003Cbr\u003E        {\u003Cbr\u003E            return \u0022Dock in orbit around \u0022 \u002B targetBody.theName;\u003Cbr\u003E        }\u003Cbr\u003E        protected override string GetDescription ()\u003Cbr\u003E        {\u003Cbr\u003E            //those 3 strings appear to do nothing\u003Cbr\u003E            return TextGen.GenerateBackStories (Agent.Name, Agent.GetMindsetString (), \u0022docking\u0022, \u0022dock\u0022, \u0022kill all humans\u0022, new System.Random ().Next());\u003Cbr\u003E        }\u003Cbr\u003E        protected override string GetSynopsys ()\u003Cbr\u003E        {\u003Cbr\u003E            return \u0022Dock two vessels in orbit around \u0022 \u002B targetBody.theName;\u003Cbr\u003E        }\u003Cbr\u003E        protected override string MessageCompleted ()\u003Cbr\u003E        {\u003Cbr\u003E            return \u0022You have succesfully docked around \u0022 \u002B targetBody.theName;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        protected override void OnLoad (ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            int bodyID = int.Parse(node.GetValue (\u0022targetBody\u0022));\u003Cbr\u003E            foreach(var body in FlightGlobals.Bodies)\u003Cbr\u003E            {\u003Cbr\u003E                if (body.flightGlobalsIndex == bodyID)\u003Cbr\u003E                    targetBody = body;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E        protected override void OnSave (ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            int bodyID = targetBody.flightGlobalsIndex;\u003Cbr\u003E            node.AddValue (\u0022targetBody\u0022, bodyID);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        //for testing purposes\u003Cbr\u003E        public override bool MeetRequirements ()\u003Cbr\u003E        {\u003Cbr\u003E            return true;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        protected static CelestialBody GetNextUnreachedTarget(int depth, bool removeSun, bool removeKerbin)\u003Cbr\u003E        {\u003Cbr\u003E            var bodies = Contract.GetBodies_NextUnreached (depth, null);\u003Cbr\u003E            if (bodies != null)\u003Cbr\u003E            {\u003Cbr\u003E                if (removeSun)\u003Cbr\u003E                    bodies.Remove (Planetarium.fetch.Sun);\u003Cbr\u003E                if (removeKerbin)\u003Cbr\u003E                    bodies.Remove (Planetarium.fetch.Home);\u003Cbr\u003E\u003Cbr\u003E                if (bodies.Count \u0026gt; 0)\u003Cbr\u003E                    return bodies [UnityEngine.Random.Range (0, bodies.Count - 1)];\u003Cbr\u003E            }\u003Cbr\u003E            return null;\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDockingParameter.cs:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.IO;\u003Cbr\u003Eusing System.Collections;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003Eusing Contracts;\u003Cbr\u003Eusing KSP;\u003Cbr\u003Eusing KSPAchievements;\u003Cbr\u003E\u003Cbr\u003Enamespace ContractsPlus.Contracts.Parameters\u003Cbr\u003E{\u003Cbr\u003E    public class DockingParameter : ContractParameter\u003Cbr\u003E    {\u003Cbr\u003E        public CelestialBody targetBody;\u003Cbr\u003E        public bool manned = false;\u003Cbr\u003E\u003Cbr\u003E        public DockingParameter(CelestialBody target, bool manned)\u003Cbr\u003E        {\u003Cbr\u003E            this.targetBody = target;\u003Cbr\u003E            this.manned = manned;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        protected override string GetHashString ()\u003Cbr\u003E        {\u003Cbr\u003E            return targetBody.bodyName;\u003Cbr\u003E        }\u003Cbr\u003E        protected override string GetTitle ()\u003Cbr\u003E        {\u003Cbr\u003E            return \u0022Dock two vessels in orbit around \u0022 \u002B targetBody.theName;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        protected override void OnRegister ()\u003Cbr\u003E        {\u003Cbr\u003E            GameEvents.onPartCouple.Add (OnDock);\u003Cbr\u003E        }\u003Cbr\u003E        protected override void OnUnregister ()\u003Cbr\u003E        {\u003Cbr\u003E            GameEvents.onPartCouple.Remove (OnDock);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        protected override void OnSave (ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            int bodyID = int.Parse(node.GetValue (\u0022targetBody\u0022));\u003Cbr\u003E            foreach(var body in FlightGlobals.Bodies)\u003Cbr\u003E            {\u003Cbr\u003E                if (body.flightGlobalsIndex == bodyID)\u003Cbr\u003E                    targetBody = body;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E        protected override void OnLoad (ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            int bodyID = targetBody.flightGlobalsIndex;\u003Cbr\u003E            node.AddValue (\u0022targetBody\u0022, bodyID);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        private void OnDock(GameEvents.FromToAction\u0026lt;Part, Part\u0026gt; action)\u003Cbr\u003E        {\u003Cbr\u003E            if (manned)\u003Cbr\u003E            {\u003Cbr\u003E                if (action.from.vessel.GetVesselCrew ().Count \u0026gt; 0 \u0026amp;\u0026amp; action.to.vessel.GetVesselCrew ().Count \u0026gt; 0)\u003Cbr\u003E                {\u003Cbr\u003E                    if (action.from.vessel.mainBody == targetBody \u0026amp;\u0026amp; action.to.vessel.mainBody)\u003Cbr\u003E                    {\u003Cbr\u003E                        base.SetComplete ();\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                if (action.from.vessel.mainBody == targetBody \u0026amp;\u0026amp; action.to.vessel.mainBody)\u003Cbr\u003E                {\u003Cbr\u003E                    base.SetComplete ();\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EFeel free to contribute and/or correct me if im wrong.\u003C/strong\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk, if you do not mind, I have a stupid question. Is the function \u0022OnDock()\u0022 a function that we are overriding or is a function we are completely defining from scratch?\u003C/p\u003E\u003Cp\u003EThank you.\u003C/p\u003E\n"}]}