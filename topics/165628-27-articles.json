{"TopicId":165628,"ForumId":34,"TopicTitle":"[KSP 1.12.x] kOS v1.4.0.0: kOS Scriptable Autopilot System","CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-09-18T16:56:54Z","PageNum":27,"Articles":[{"CreatedByName":"Kartoffelkuchen","CreatedById":108501,"CreatedDateTime":"2018-12-31T16:41:40Z","Content":"\n\u003Cp\u003E\nI\u0027m actually pretty proud\u00A0 of myself, managed to get from \u0022I have no idea how any of this gui stuff works\u0022 to \u0022well, it\u0027s not well programmed, but I understand what I did there\u0022 within two days. \u003Cspan\u003E\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EMy airplane autopilot is actually nearing completion, yay!\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022VNxZnok.png\u0022 class=\u0022ipsImage\u0022 height=\u0022575\u0022 src=\u0022https://i.imgur.com/VNxZnok.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"meyerweb","CreatedById":135212,"CreatedDateTime":"2018-12-31T19:35:48Z","Content":"\n\u003Cp\u003E\nYou should be proud of yourself, Kartoffelkuchen-- that looks great!\n\u003C/p\u003E\n"},{"CreatedByName":"FloppyRocket","CreatedById":173990,"CreatedDateTime":"2019-01-02T01:08:17Z","Content":"\n\u003Cp\u003E\nIs there another (preferred) way to get ALT:RADAR? I wasn\u0027t able to find a discussion about this on the Forum.\n\u003C/p\u003E\n\u003Cp\u003E\nThe Docs page for ALT:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://ksp-kos.github.io/KOS/structures/vessels/alt.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp-kos.github.io/KOS/structures/vessels/alt.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n... says that ALT \u0022\u003Cspan style=\u0022background-color:#fcfcfc;color:#404040;font-size:16px;\u0022\u003Eis grandfathered in for the sake of backward compatibility, but this information is also available on the Vessel structure as well, which is the better new way to do it:\u0022\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBut I haven\u0027t been able to find anything in the Vessel structure that references a RADAR suffix.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Chabadarl","CreatedById":169589,"CreatedDateTime":"2019-01-03T17:23:39Z","Content":"\n\u003Cp\u003E\nA vessel is a Orbitable so it has the element of this structure.\u00A0\u003Ca href=\u0022https://ksp-kos.github.io/KOS/structures/orbits/orbitable.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp-kos.github.io/KOS/structures/orbits/orbitable.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThat should be the same:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#004422;\u0022\u003EPRINT\u003C/span\u003E \u003Cspan\u003E(\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003ESHIP\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003EALTITIUDE\u003C/span\u003E \u003Cspan style=\u0022color:#002244;\u0022\u003E-\u003C/span\u003E \u003Cspan style=\u0022color:#008080;\u0022\u003ESHIP\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003EGEOPOSITION\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003ETERRAINHEIGHT\u003C/span\u003E\u003Cspan\u003E).\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#004422;\u0022\u003EPRINT\u003C/span\u003E \u003Cspan style=\u0022color:#008080;\u0022\u003EALT\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003E\u003Cspan style=\u0022padding:0px;\u0022\u003ERADAR\u003C/span\u003E\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"infinite_monkey","CreatedById":185663,"CreatedDateTime":"2019-01-05T15:53:41Z","Content":"\n\u003Cp\u003E\nIs it possible to control the gimbal separately from the general steering direction? I guess SpaceX does that for small corrections close to the ground when landing its boosters.\n\u003C/p\u003E\n"},{"CreatedByName":"FloppyRocket","CreatedById":173990,"CreatedDateTime":"2019-01-05T21:57:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223515609\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221546536219\u0022 data-ipsquote-userid=\u0022169589\u0022 data-ipsquote-username=\u0022Chabadarl\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/3/2019 at 9:23 AM, Chabadarl said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA vessel is a Orbitable so it has the element of this structure.\u00A0\u003Ca href=\u0022https://ksp-kos.github.io/KOS/structures/orbits/orbitable.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp-kos.github.io/KOS/structures/orbits/orbitable.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThat should be the same:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#004422;\u0022\u003EPRINT\u003C/span\u003E \u003Cspan\u003E(\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003ESHIP\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003EALTITIUDE\u003C/span\u003E \u003Cspan style=\u0022color:#002244;\u0022\u003E-\u003C/span\u003E \u003Cspan style=\u0022color:#008080;\u0022\u003ESHIP\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003EGEOPOSITION\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003ETERRAINHEIGHT\u003C/span\u003E\u003Cspan\u003E).\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#004422;\u0022\u003EPRINT\u003C/span\u003E \u003Cspan style=\u0022color:#008080;\u0022\u003EALT\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan style=\u0022color:#008080;\u0022\u003E\u003Cspan style=\u0022padding:0px;\u0022\u003ERADAR\u003C/span\u003E\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks much!\n\u003C/p\u003E\n"},{"CreatedByName":"Willem_D","CreatedById":141283,"CreatedDateTime":"2019-01-08T08:02:07Z","Content":"\n\u003Cp\u003E\nFirst of all, great mod. I cannot image playing KSP without it. \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI do have a question. I \u003Cabbr\u003Euse \u003C/abbr\u003E\u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E\u002B\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E\u002BRP-1 (with RemoteTech). Is it possible to transfer the the ScienceData from an experiment (like barometer) to a probe core., assuming the probe core has a ModuleScienceContainer? I can do it manually (with the Ship Manifest mod), but that only works when a have an active connection to the ship, and with the normal signal delay. I have a feeling KOS should be able to do the same, but I cannot find out how.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat I tried:\u003Cbr\u003E\n- The ModuleScienceContainer has an action \u0022Collect All\u0022, but that does nothing.\u003Cbr\u003E\n- I tried the TransferAll from the resource transfer functionality. But apparently, the ScienceData is not in the Resources collection of the part that contains the ModuleScienceExperiment. So I cannot transfer it.\n\u003C/p\u003E\n\u003Cp\u003E\nAnybody any ideas? The purpose is to use it in a automated script that collects sciencedata during a flyby (like Venus), and keeps collecting sciencedata when the planet is between the probe and earth (no connection). What I do now is having many duplicates of all Science experiments on board (like 3 thermometers). But I\u0027d like to have just one science experiment, that collects data and transfers it automatically the the probe core.\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe the ScienceData of an experiment needs to be in the Resources collection of the part?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-01-08T11:43:30Z\u0022 title=\u002201/08/2019 11:43  AM\u0022 data-short=\u00225 yr\u0022\u003EJanuary 8, 2019\u003C/time\u003E by Willem_D\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"FloppyRocket","CreatedById":173990,"CreatedDateTime":"2019-01-13T04:55:37Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EkOS \u0022POSITIONAT()\u0022 problems:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m having trouble making the kOS positionAt() function work the way I hope it can. The kOS documentation on vectors, reference frames, etc. are fairly baffling, so I\u0027ve gotten myself into a very confused state by trying a lot of different things and making a lot of plots that are all starting to make no sense at all.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027d appreciate any pointers.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThe scenario: \u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n(Note: I know there is likely an easier way to do this. I\u0027m puzzling over how this particular function works. Also note that I\u0027m also not using maneuver nodes).\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m working on a kOS script to automatically match the inclination of a Target\u0027s orbit.\n\u003C/p\u003E\n\u003Cp\u003E\nMy ship is in a low-altitude inclined elliptical orbit.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve selected a Target, which is in a much larger elliptical orbit, with a totally different inclination, and whose \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E and \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E are both higher than my ship\u0027s orbit.\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I select the target, the \u003Cabbr title=\u0022Ascending Node\u0022\u003EAN\u003C/abbr\u003E and \u003Cabbr title=\u0022Descending Node\u0022\u003EDN\u003C/abbr\u003E markers appear on the Map view.\n\u003C/p\u003E\n\u003Cp\u003E\nThe end goal of the script is to automatically point the ship in the correct direction at the correct time to burn by the correct amount to match the inclinations.\n\u003C/p\u003E\n\u003Cp\u003E\nBased on some helpful posts here on this Forum, I start by computing some cross-products to find the two vectors that are normal to my ship\u0027s orbital plane and to the the target\u0027s plane. I then compute the cross product of those\u00A0two vectors, and the resulting vector points along the \u003Cabbr title=\u0022Ascending Node\u0022\u003EAN\u003C/abbr\u003E/\u003Cabbr title=\u0022Descending Node\u0022\u003EDN\u003C/abbr\u003E (named \u0022andn\u0022 in my code).\n\u003C/p\u003E\n\u003Cp\u003E\nThat seems to work fine. To verify that it works, I have a script that computes...\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Elocal angle_error is vang(ship:body:position, AnDn).\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n...and print this value in the console as my ship orbits. The value ranges from 0 to 180, and is at 0 exactly when my ship marker is over the \u003Cabbr title=\u0022Descending Node\u0022\u003EDN\u003C/abbr\u003E marker, and is at 180 when my ship is over the \u003Cabbr title=\u0022Ascending Node\u0022\u003EAN\u003C/abbr\u003E marker, then trends toward 0 as the \u003Cabbr title=\u0022Descending Node\u0022\u003EDN\u003C/abbr\u003E marker approaches again.\n\u003C/p\u003E\n\u003Cp\u003E\nThe value of the AnDn vector is stable for a given pair of orbits..\n\u003C/p\u003E\n\u003Cp\u003E\nSo I think the AnDn\u00A0vector is correct, and I can measure the difference between my current position vector and the AnDn vector, and all that seems very tidy.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027d like to warp ahead to just before my ship reaches the nearest of \u003Cabbr title=\u0022Ascending Node\u0022\u003EAN\u003C/abbr\u003E\u00A0or \u003Cabbr title=\u0022Descending Node\u0022\u003EDN\u003C/abbr\u003E. So I\u0027m trying to use positionAt() to search into the future to find the time when angle_error reaches either 0\u00A0 or 180.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThe problem:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe values I get for angle_error using my ship\u0027s future position vector are not consistent with the values I get for angle_error in real time.\n\u003C/p\u003E\n\u003Cp\u003E\nFor debugging purposes, I\u0027ve got a loop that iterates through one ship\u0027s orbit, computes the future ship vector and angle_error, and logs\u00A0the utime and angle_error to a CSV file.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// survey the predicted angle over one orbit of time in 1/100 increments\nlocal dt is 0.\nlocal tinc is ship:orbit:period / 100.\nlocal tnow is time:seconds.\n\nuntil dt \u0026gt; ship:orbit:period {\n  local tim is tnow \u002B dt.\n  local an is angleAt(tim).\n  log dt \u002B \u0022,\u0022 \u002B an to \u0022search_data.csv\u0022. \n  set dt to (dt \u002B tinc).\n}\n\n// return the future angle to the ANDN vector at a time \u0027t\u0027\n// use this for making predictions with \u0022positionAt()\u0022\n// note; andn is global vector of the An/Dn markers\nfunction angleAt {\n  parameter t.\n  local ang is vang(positionAt(ship, t), andn).\n  return ang.\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I run this script, let\u0027s say that the real-time angle_error is maybe 170 degrees, but the first value for the future predictions is around 55, and over the orbit period\u00A0it increases to 180 and then decreases to around 125. It does not vary through a complete cycle of values over an orbit.\n\u003C/p\u003E\n\u003Cp\u003E\nSo there are two issues I haven\u0027t been able to resolve:\n\u003C/p\u003E\n\u003Cp\u003E\n- Why is the initial angle_error prediction so badly incorrect?\n\u003C/p\u003E\n\u003Cp\u003E\n- Why doesn\u0027t the predicted angle_error vary from its starting point up to 180, down to 0, and back to its starting value as I predict the future through one full orbit?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve been wresting for a couple of days and am making no further progress. Hopefully someone on the Forums will recognize the symptoms and give me a head-slap.\n\u003C/p\u003E\n\u003Cp\u003E\nOne thing I tried which does not\u00A0work is changing the angleAt() function to use (positionAt(ship:body), andn). That gives results which vary for the first few test examples and then asymptotes to a stable value for the rest of the orbit period. I would expect that to not work, because using the position of BODY in its orbit is not correct, but even given that, I don\u0027t understand why the value it returns has an asymptote behavior.\n\u003C/p\u003E\n\u003Cp\u003E\nIt seems like examples of POSITIONAT() that I\u0027ve seen online tend to be used with adjusting a maneuver node. Is POSITIONAT() somehow tied to using maneuver nodes?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll post this before my internet connection burps and I lose it. I can post some images of the plots if it would be helpful.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks for any assistance.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-01-13T05:18:12Z\u0022 title=\u002201/13/2019 05:18  AM\u0022 data-short=\u00225 yr\u0022\u003EJanuary 13, 2019\u003C/time\u003E by FloppyRocket\u003C/strong\u003E\n\u003Cbr\u003ECleanup\n\u003C/span\u003E\n"},{"CreatedByName":"ElWanderer","CreatedById":114015,"CreatedDateTime":"2019-01-13T08:39:47Z","Content":"\n\u003Cp\u003E\n@FloppyRocket\n\u003C/p\u003E\n\u003Cp\u003E\nIt looks like you are mixing up two different vectors. SHIP:BODY:POSITION will give you a vector from your ship\u0027s current position to the middle of the central body (e.g. Kerbin). POSITIONAT(SHIP,t) will give you a vector from your ship\u0027s current position to where it will be at time t. (aside: the good news is that if your orbit is elliptical, both vectors are relative to the central body, so you don\u0027t have to take into account the motion of the central body in the meantime). That is, it\u0027ll be a vector between two points on your orbit. You want both vectors to be to (or from) the central body to be able to compare them.\n\u003C/p\u003E\n\u003Cp\u003E\nTo convert between the two, you need to need to add/subtract the BODY:POSITION vector (note the SHIP: at the beginning is optional). I\u0027m not great at explaining this bit, sadly. I think to get the predicted vector pointing towards the central body, you would need to use BODY:POSITION - POSITIONAT(SHIP,t).\n\u003C/p\u003E\n\u003Cp\u003E\nPrinting out the angles is good debugging practice, but I would also advise you to try drawing the vectors on the screen using VECDRAW(). I found it easier to keep track of what was happening that way. Of course, drawing vectors that don\u0027t originate at your current position is a learning curve in of itself...\n\u003C/p\u003E\n"},{"CreatedByName":"FloppyRocket","CreatedById":173990,"CreatedDateTime":"2019-01-13T19:27:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223521213\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221547368787\u0022 data-ipsquote-userid=\u0022114015\u0022 data-ipsquote-username=\u0022ElWanderer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 hours ago, ElWanderer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n@FloppyRocket\n\u003C/p\u003E\n\u003Cp\u003E\nIt looks like you are mixing up two different vectors. SHIP:BODY:POSITION will give you a vector from your ship\u0027s current position to the middle of the central body (e.g. Kerbin). POSITIONAT(SHIP,t) will give you a vector from your ship\u0027s current position to where it will be at time t. (aside: the good news is that if your orbit is elliptical, both vectors are relative to the central body, so you don\u0027t have to take into account the motion of the central body in the meantime). That is, it\u0027ll be a vector between two points on your orbit. You want both vectors to be to (or from) the central body to be able to compare them.\n\u003C/p\u003E\n\u003Cp\u003E\nTo convert between the two, you need to need to add/subtract the BODY:POSITION vector (note the SHIP: at the beginning is optional). I\u0027m not great at explaining this bit, sadly. I think to get the predicted vector pointing towards the central body, you would need to use BODY:POSITION - POSITIONAT(SHIP,t).\n\u003C/p\u003E\n\u003Cp\u003E\nPrinting out the angles is good debugging practice, but I would also advise you to try drawing the vectors on the screen using VECDRAW(). I found it easier to keep track of what was happening that way. Of course, drawing vectors that don\u0027t originate at your current position is a learning curve in of itself...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks for the tip about what vector the POSITIONAT() function returns.\u00A0 I\u0027ll give it a try.\n\u003C/p\u003E\n\u003Cp\u003E\nYes, I\u0027ve struggled with VECDRAW() also.\n\u003C/p\u003E\n"},{"CreatedByName":"FloppyRocket","CreatedById":173990,"CreatedDateTime":"2019-01-13T23:57:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223521213\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221547368787\u0022 data-ipsquote-userid=\u0022114015\u0022 data-ipsquote-username=\u0022ElWanderer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, ElWanderer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n@FloppyRocket\n\u003C/p\u003E\n\u003Cp\u003E\nTo convert between the two, you need to need to add/subtract the BODY:POSITION vector (note the SHIP: at the beginning is optional). I\u0027m not great at explaining this bit, sadly. I think to get the predicted vector pointing towards the central body, you would need to use BODY:POSITION - POSITIONAT(SHIP,t).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe situation is something like this? (please comment)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022pqmi7G7.png\u0022 class=\u0022ipsImage\u0022 height=\u0022522\u0022 src=\u0022https://i.imgur.com/pqmi7G7.png\u0022 width=\u0022525\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-01-13T23:59:04Z\u0022 title=\u002201/13/2019 11:59  PM\u0022 data-short=\u00225 yr\u0022\u003EJanuary 13, 2019\u003C/time\u003E by FloppyRocket\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ElWanderer","CreatedById":114015,"CreatedDateTime":"2019-01-14T07:30:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223521665\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221547423862\u0022 data-ipsquote-userid=\u0022173990\u0022 data-ipsquote-username=\u0022FloppyRocket\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, FloppyRocket said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe situation is something like this? (please comment)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://i.imgur.com/pqmi7G7.png\u0022 title=\u0022Enlarge image\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u0022pqmi7G7.png\u0022 class=\u0022ipsImage ipsImage_thumbnailed\u0022 height=\u0022522\u0022 src=\u0022https://i.imgur.com/pqmi7G7.png\u0022 width=\u0022525\u0022\u003E\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat looks right to me.\n\u003C/p\u003E\n\u003Cp\u003E\nA note on VECDRAW (as it\u0027s much easier to talk about with a diagram): vectors A and C originate at the ship\u0027s current position, or V(0,0,0), so the origin parameter of the vecdraw would be V(0,0,0).\n\u003C/p\u003E\n\u003Cp\u003E\nVector B originates at the central body, so you would need to pass in BODY:POSITION as the origin parameter.\n\u003C/p\u003E\n"},{"CreatedByName":"FloppyRocket","CreatedById":173990,"CreatedDateTime":"2019-01-15T02:32:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223521851\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221547451051\u0022 data-ipsquote-userid=\u0022114015\u0022 data-ipsquote-username=\u0022ElWanderer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 hours ago, ElWanderer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat looks right to me.\n\u003C/p\u003E\n\u003Cp\u003E\nA note on VECDRAW (as it\u0027s much easier to talk about with a diagram): vectors A and C originate at the ship\u0027s current position, or V(0,0,0), so the origin parameter of the vecdraw would be V(0,0,0).\n\u003C/p\u003E\n\u003Cp\u003E\nVector B originates at the central body, so you would need to pass in BODY:POSITION as the origin parameter.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks!\n\u003C/p\u003E\n"},{"CreatedByName":"Kartoffelkuchen","CreatedById":108501,"CreatedDateTime":"2019-01-19T19:01:05Z","Content":"\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/_uRNaXFOG4c?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nTwo airplanes simultaneously doing a fully autonomous landing at Cape Hook Global Airport, using my self-written airplane autopilot.\n\u003C/p\u003E\n\u003Cp\u003E\nJust thought it was\u00A0 a badass moment, so thought I\u0027d share \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Luovahulluus","CreatedById":113052,"CreatedDateTime":"2019-01-19T19:45:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223525122\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221547924465\u0022 data-ipsquote-userid=\u0022108501\u0022 data-ipsquote-username=\u0022Kartoffelkuchen\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n41 minutes ago, Kartoffelkuchen said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/_uRNaXFOG4c?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nTwo airplanes simultaneously doing a fully autonomous landing at Cape Hook Global Airport, using my self-written airplane autopilot.\n\u003C/p\u003E\n\u003Cp\u003E\nJust thought it was\u00A0 a badass moment, so thought I\u0027d share \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat was cool! The next step is to lift off at the same time from the same runway, side by side, and land them to the other runway \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"infinite_monkey","CreatedById":185663,"CreatedDateTime":"2019-01-23T03:01:57Z","Content":"\n\u003Cp\u003E\nWould it be possible to make kOS compatible with\u00A0Kerbal Engineer (or is it already)? It would be handy to access \u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E\u0027s data instead of having to rewrite (and run)\u00A0basically the same code.\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2019-01-23T04:45:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223527233\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221548212517\u0022 data-ipsquote-userid=\u0022185663\u0022 data-ipsquote-username=\u0022infinite_monkey\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, infinite_monkey said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWould it be possible to make kOS compatible with\u00A0Kerbal Engineer (or is it already)? It would be handy to access \u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E\u0027s data instead of having to rewrite (and run)\u00A0basically the same code.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPossible, yes.\u00A0 Desirable?\u00A0 Maybe not.\u00A0 At a certain point it becomes too easy to just let other mods do all the work for you at which point why aren\u0027t you using Mechjeb instead if you wanted someone else to write your autopilot for you?\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: Okay that\u0027s a bit harsh, I admit, but the issue is relevant.\u00A0 There are some things that really belong in the autopilot\u0027s code, and how much of that code do you want written for you versus how much do you want to make yourself?\u00A0 The kOS cooked steering is already hiding a lot of the work for you that you\u0027d have to do yourself if you moved the raw controls with code.\u00A0 I sometimes do fear pushing a bit too far in that direction.\u00A0 (For example, \u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E can calculate when to start a suicide burn, which is something I feel definitely belongs in the user\u0027s own script code.)\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223525122\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221547924465\u0022 data-ipsquote-userid=\u0022108501\u0022 data-ipsquote-username=\u0022Kartoffelkuchen\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/19/2019 at 1:01 PM, Kartoffelkuchen said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/_uRNaXFOG4c?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nTwo airplanes simultaneously doing a fully autonomous landing at Cape Hook Global Airport, using my self-written airplane autopilot.\n\u003C/p\u003E\n\u003Cp\u003E\nJust thought it was\u00A0 a badass moment, so thought I\u0027d share \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat looks great!\n\u003C/p\u003E\n\u003Cp\u003E\nOne frustration (with the stock game) is how the landed PACK distance is so much smaller than the flying PACK distance.\u00A0 (This is why the distant plane just froze in position the moment it touched the runway.\u00A0 Once it touches, then you have to be within 300 meters for it to be fully using \u0022physics\u0022.)\u00A0 And this isn\u0027t an easy number to change because it\u0027s that way for good \u003Cspan\u003EK\u003C/span\u003Eraken reasons.\u00A0 The terrain polygons can shift and move as you get closer to the spot and they become more fine-grain.\u00A0 If the terrain shifts from underneath the vehicle, it can cause ground collision as the ground pops up or down a little.\u00A0 So they set it to 300m because that\u0027s the range at which they can guarantee no more adjustment of terrain will occur within that range, even at the lowest terrain detail setting in the graphics settings tab.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-01-23T06:32:03Z\u0022 title=\u002201/23/2019 06:32  AM\u0022 data-short=\u00225 yr\u0022\u003EJanuary 23, 2019\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2019-01-23T17:40:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223527259\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221548218715\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOne frustration (with the stock game) is how the landed PACK distance is so much smaller than the flying PACK distance.\u00A0 (This is why the distant plane just froze in position the moment it touched the runway.\u00A0 Once it touches, then you have to be within 300 meters for it to be fully using \u0022physics\u0022.)\u00A0 And this isn\u0027t an easy number to change because it\u0027s that way for good \u003Cspan\u003EK\u003C/span\u003Eraken reasons.\u00A0 The terrain polygons can shift and move as you get closer to the spot and they become more fine-grain.\u00A0 If the terrain shifts from underneath the vehicle, it can cause ground collision as the ground pops up or down a little.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, that might be a big problem with procedurally generated terrain. But in case of runway landings I found it quite safe to extend the range to couple kilometers\n\u003C/p\u003E\n\u003Cp\u003E\nHere is an example of almost simultaneous landing from opposite ends of \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E runway\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/77et21Xm0EU?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nAnd while in the video the carrier touchdown ended up not that far from the already landed shuttle, during the development tests there were even moments when the carrier landed before the shuttle and without issues (apart from hitting the lights couple times while I was working on making that script handle sharper turns and shallower approaches better)\n\u003C/p\u003E\n"},{"CreatedByName":"infinite_monkey","CreatedById":185663,"CreatedDateTime":"2019-01-23T17:54:56Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223527259\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221548218715\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPossible, yes.\u00A0 Desirable?\u00A0 Maybe not.\u00A0 At a certain point it becomes too easy to just let other mods do all the work for you at which point why aren\u0027t you using Mechjeb instead if you wanted someone else to write your autopilot for you?\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: Okay that\u0027s a bit harsh, I admit, but the issue is relevant.\u00A0 There are some things that really belong in the autopilot\u0027s code, and how much of that code do you want written for you versus how much do you want to make yourself?\u00A0 The kOS cooked steering is already hiding a lot of the work for you that you\u0027d have to do yourself if you moved the raw controls with code.\u00A0 I sometimes do fear pushing a bit too far in that direction.\u00A0 (For example, \u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E can calculate when to start a suicide burn, which is something I feel definitely belongs in the user\u0027s own script code.)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI understand your point. Sure, calculations of g, \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, available acceleration etc. are pretty easy to do, and probably not very heavy on the CPU. I think the main reason I want it is because Trajectories is still broken for kOS, and I have no idea how to take\u00A0into account the atmosphere for calculating the landing spot and/or impact time.\n\u003C/p\u003E\n"},{"CreatedByName":"Luovahulluus","CreatedById":113052,"CreatedDateTime":"2019-01-23T20:16:35Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223527506\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221548266096\u0022 data-ipsquote-userid=\u0022185663\u0022 data-ipsquote-username=\u0022infinite_monkey\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, infinite_monkey said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI understand your point. Sure, calculations of g, \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, available acceleration etc. are pretty easy to do, and probably not very heavy on the CPU. I think the main reason I want it is because Trajectories is still broken for kOS, and I have no idea how to take\u00A0into account the atmosphere for calculating the landing spot and/or impact time.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/neuoy/KSPTrajectories/releases/tag/v1.7.1\u0022 rel=\u0022external nofollow\u0022\u003ETrajectories version 1.7.1 works with kOS.\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"squidgeny","CreatedById":193247,"CreatedDateTime":"2019-01-23T21:21:59Z","Content":"\n\u003Cp\u003E\nAlright I\u0027m a bit new to this and I\u0027m sure this has come up before so I apologise in advance but...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHow do I open the console on the launch pad if the computer is inside a shroud? I can\u0027t click on the part \u003Cspan\u003E\u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"infinite_monkey","CreatedById":185663,"CreatedDateTime":"2019-01-23T21:23:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223527624\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221548278519\u0022 data-ipsquote-userid=\u0022193247\u0022 data-ipsquote-username=\u0022squidgeny\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, squidgeny said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAlright I\u0027m a bit new to this and I\u0027m sure this has come up before so I apologise in advance but...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHow do I open the console on the launch pad if the computer is inside a shroud? I can\u0027t click on the part \u003Cspan\u003E\u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou should have an icon in the toolbar from where you can open the console\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2019-01-23T21:36:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223527506\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221548266096\u0022 data-ipsquote-userid=\u0022185663\u0022 data-ipsquote-username=\u0022infinite_monkey\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, infinite_monkey said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nhave no idea how to take\u00A0into account the atmosphere for calculating the landing spot and/or impact time.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAnd the best thing about kOS is that you don\u0027t have to 100% accurately calculate landing spot and impact time. \u0022Proper\u0022 way to calculate it would be per ship, to know exact coefficient of drag for ship or vessel. Cd again depends on ship shape, angle of attack, atmosphere mach number, atmosphere pressure (for fluid density calculation)\u00A0atmosphere temperature that also influence mach number etc. Have also take into account ship mass that influence kinetic energy, that need to be drained at impact point if you want to use ship more than one time. And ship mass also change over time as you use rocket fuel, available thrust change too and whole equation become even more complex.\n\u003C/p\u003E\n\u003Cp\u003E\nEven when you get proper equation, considered every possible thing that influence landing point you can get some random event during flight that add some error in equation and that you could not predict before.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, how to do it then. Well, \u0022dirty\u0022 but much easier way to calculate impact point with kOS would be to re-calculate impact point and time on each second of flight, instead of calculating it only once while ship is still in orbit. Fortunately, kOS and KSP game world can give you more than enough data to calculate it good enough on each game frame that makes thing a lot easier.\n\u003C/p\u003E\n\u003Cp\u003E\nInstead of pre-calculating everything, start with more simple landing script and extend it later on. For start, disregard some things in equation.Start with assumption that your ship killed all of horisontal velocity and you are on \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E with zero vertical velocity. For first script assume that celesital body have no atmosphere too. Next assumtion is that your ship is perfectly oriented, so engines always face downwards or retrograde.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, instead of having complex equation you have simple \u003Ca href=\u0022https://en.wikipedia.org/wiki/Equations_for_a_falling_body\u0022 rel=\u0022external nofollow\u0022\u003Efree fall equation\u003C/a\u003E. Pretend for a moment that we don\u0027t even know free fall equation. What we know is gravity constant on that celestial body that would accelerate ship to the ground. Except, not even gravity acceleration is constant. It changes too as ship fall down to surface, not much, but significant enough to cause errors in calculations.\u003Cbr\u003E\nGood thing is that kOS and KSP game world give you enough data to re-calculate gravity acceleration each time you need it. Already prepared for kOS script:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Elocal \u003C/span\u003E\u003Cspan\u003EBody_g\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EBODY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMU \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EBODY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERADIUS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ealtitude\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nOK, we now know gravity acceleration, with assumption that it will remain constant during the \u003Cs\u003Efall\u003C/s\u003E or landing you can get equation for ship (vertical) velocity on any given time:\n\u003C/p\u003E\n\u003Cp\u003E\nVelocity(t) = Body_g * t \u002B start_velocity\n\u003C/p\u003E\n\u003Cp\u003E\nWhen you integrate above formula one more time, you will get equation for distance, that you already know from ship sensors - it is current altitude above impact point. With all that you can get equation for fall time.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E// we can use simplified equation if starting velocity is zero\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFallTime\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to SQRT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFallAltitude\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBody_g\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nKnowing\u00A0 falling time you have to calculate backward, what would be velocity at that time. You need it later on. Now, consider ideal vertical landing, what is ideal situation for ship to survive impact and burn least fuel as possible. Ideal situation would be that vertical velocity is zero and force from engine thrusts is equal as force from gravity but in oposite directions to cancel each out. Ship should also stand on it\u0027s landing legs too, so it would be safe to shut down engines on very next time frame.\n\u003C/p\u003E\n\u003Cp\u003E\nSir Issac Newton told us that force is calculated like this:\n\u003C/p\u003E\n\u003Cp\u003E\nF = m * a\n\u003C/p\u003E\n\u003Cp\u003E\nIf you trust that his equation is correct then you can calculate both forces, from body gravity and from ship engines:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Elocal \u003C/span\u003E\u003Cspan\u003ECraftWeight\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMASS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBody_g\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nlocal \u003C/span\u003E\u003Cspan\u003ECraftMaxThrust\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EAVAILABLETHRUST\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nYou have also need to put in consideration what kind of info ship sensors would provide. In \u0022normal\u0022 velocity/distance equations distance at zero time frame is also zero and velocity is positive as time pass. Ship sensors will give you oposite, as ship falls down, vertical velocity become more negative as time pass and you start with positive altitude that become lower and lower down to zero.\u003Cbr\u003E\nWith that in mind Fall time calculation looks like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E// On this line is NaN if equation under SQRT gives imaginary result, or divide by zero occur or any other undefined value\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// happened also if cheated to Mun orbit with engines off, could be due to celestial body changes between physical ticks or number becomes too small\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMAX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eship\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Everticalspeed\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(((\u003C/span\u003E\u003Cspan\u003ECraftMaxThrust\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECraftWeight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMASS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBody_g\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)*\u003C/span\u003E\u003Cspan\u003EFallAltitude\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E and \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003ECraftMaxThrust\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E and \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EBody_g\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFallTime\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ship\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Everticalspeed\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*(((\u003C/span\u003E\u003Cspan\u003ECraftMaxThrust\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECraftWeight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMASS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBody_g\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E SQRT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eship\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Everticalspeed\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(((\u003C/span\u003E\u003Cspan\u003ECraftMaxThrust\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECraftWeight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMASS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBody_g\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)*\u003C/span\u003E\u003Cspan\u003EFallAltitude\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)/(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*(((\u003C/span\u003E\u003Cspan\u003ECraftMaxThrust\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECraftWeight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMASS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBody_g\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t \u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFallTime\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAgain, above works only in certain situation, that ship vertical velocity is either zero or negative, ship \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E is above 1, so you can choose proper solution of quadratic formula etc. You need to put that in consideration for the rest of script code, so it does not throw errors in run time. In example above, if you put negative number in SQRT function, script will throw error, so you have to consider this.\n\u003C/p\u003E\n\u003Cp\u003E\nWhy all this written above ? We have started with most simple situation, but now you also can tackle down situation that also put in consideration that ship mass, body gravity and velocity change over time. You don\u0027t need know what kind of situaton was before or what would be changed on the whole landing time, all you need to know if thrust from ship engines are powerful enough to reduce vertical velocity to zero and also capable to maintain it at zero (equal or greater acceleration against celestial gravity acceleration) at the moment of impact.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, things are much more simple to tackle, all you need to worry during landing is to not allow vertical velocity become too high that ship engines could not counter part it.\n\u003C/p\u003E\n\u003Cp\u003E\nAll of that above is not to give you ultimate solution, it is rather a starting point to think in different way and come to solution even when you don\u0027t know complex equations.\u003Cbr\u003E\nIt is up to you to extend this info further, instead of ship pointing 90 degree all time to counterpart vertical velocity, you can put in consideration that is on some angle and instead of full thrust force that engine can provide you can put only vertical fraction of velocity vector.\n\u003C/p\u003E\n\u003Cp\u003E\nIn case of celestial body with atmosphere you not need to worry that engines would start too late as drag force would only help engines to slow down ship and when you are very close to the ground it can be also disregarded. But you need to worry about it depending of ship shape/design because when your velocity is too high in atmosphere then your ship can flip and main engines no longer points in desired direction etc.\n\u003C/p\u003E\n\u003Cp\u003E\nI have also extended pieces of code shown above to put in consideration different height of landing legs or ship:alt:radar value, different veritcal velocity that is \u0022safe\u0022 to maintain in atmosphere without fliping rocket in undesired direction. Instead of landing imediately, I prefer to hover rocket 20 m above ground and switch to semi-automatic landing mode that allows me to choose better landing spot and so on.\n\u003C/p\u003E\n"},{"CreatedByName":"ElWanderer","CreatedById":114015,"CreatedDateTime":"2019-01-23T21:36:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223527624\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221548278519\u0022 data-ipsquote-userid=\u0022193247\u0022 data-ipsquote-username=\u0022squidgeny\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 minutes ago, squidgeny said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAlright I\u0027m a bit new to this and I\u0027m sure this has come up before so I apologise in advance but...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHow do I open the console on the launch pad if the computer is inside a shroud? I can\u0027t click on the part \u003Cspan\u003E\u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can get one to open automatically if you stick the following in a boot file:\n\u003C/p\u003E\n\u003Cp\u003E\nCORE:DOEVENT(\u0022Open Terminal\u0022).\n\u003C/p\u003E\n"},{"CreatedByName":"meyerweb","CreatedById":135212,"CreatedDateTime":"2019-01-23T22:02:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223527632\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221548279398\u0022 data-ipsquote-userid=\u0022114015\u0022 data-ipsquote-username=\u0022ElWanderer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 minutes ago, ElWanderer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can get one to open automatically if you stick the following in a boot file:\n\u003C/p\u003E\n\u003Cp\u003E\nCORE:DOEVENT(\u0022Open Terminal\u0022).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis did not work for me.\u00A0 Does there need to be a \u0060WAIT 1\u0060. before it or something?\n\u003C/p\u003E\n"}]}