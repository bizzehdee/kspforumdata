{"TopicId":122852,"ForumId":29,"TopicTitle":"Is there a way to build a shader without Unity IDE?","CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-10-12T09:46:09Z","PageNum":1,"Articles":[{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-10-12T09:46:09Z","Content":"\n\u003Cp\u003EI have a very simple shader written in CG that takes a param though. As I understand, in order to use a shader in KSP I need it to be wrapped with ShaderLab stuff which is done by Unity SL compiler but I would like to bypass downloading, installing and getting into several Gs of Unity dev tools just for the sake of a couple lines of code. Is there a way to make my shader SL compatible without the need to use Unity IDE itself?\u003C/p\u003E\u003Cp\u003EMy plan was to compile my shader with cg compiler (as it is much, much lighter than Unity\u0027s) and then just write the proper shader lab lines around the resulting assembly code. But while viewing other shaders already compiled with ShaderLab I found that\u0027s not that obvious. May be there\u0027s a standalone SL compiler or someone could explain how the cg-compiled assembly code could be properly wrapped with ShaderLab instructions?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-12T17:32:28Z\u0022 title=\u002210/12/2015 05:32  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 12, 2015\u003C/time\u003E by Ser\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-10-14T07:14:51Z","Content":"\n\u003Cp\u003EOver a hundred views. That\u0027s awesome : ))\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2015-10-19T12:37:30Z","Content":"\n\u003Cp\u003EI think it\u0027s not exactly possible. I\u0027ve got shaders in a couple mods, but I\u0027m using the Unity Cg compiler wrapper since Unity adds a number of #defines - I edit the Cg text in Notepad, and I use a batch file to run the Unity Cg compiler, but it\u0027s still entailed a Unity download (which, since I also work on IVAs, I needed anyway). You\u0027re welcome to look at the compiler output I\u0027ve got on GitHub (RasterPropMonitor project) to see if the Unity wrapper on the Cg output is something you can generate manually.\u003C/p\u003E\n"},{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-10-20T09:15:15Z","Content":"\n\u003Cp\u003EMOARdV, thanks, I\u0027ll look at your sources, but at the date I\u0027ve discovered that it\u0027s probably better to develop shaders with Unity, especially for beginners, for several reasons: it has means of quick editing, debugging and instant visualization plus the compiled code contains multiple profiles and different assembly under each that would be a little pain to reproduce manually.\u003C/p\u003E\u003Cp\u003EBuy the way, I\u0027ve ran into some trouble with my shader: I have a material in Unity with a texture and my shader assigned to it. I\u0027m struggling with the fragment function. The vertex output struct matches the fragment input. The trouble is when I try to take the input color and pass it through, I get a totally white output, no matter what I do with it. On the other hand, if I return a constant (or parameter-specified) color, the mesh is properly colored. Seems like vertex function\u0027s output color is messed up for some reason.\u003C/p\u003E\u003Cp\u003EWhat I\u0027m trying to achieve is to create a shader that will alter screen colors in KSP so I expect that the colors of the texture of that test mesh should be affected properly first.\u003C/p\u003E\u003Cp\u003EMay be you can help with that?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-20T09:34:55Z\u0022 title=\u002210/20/2015 09:34  AM\u0022 data-short=\u00228 yr\u0022\u003EOctober 20, 2015\u003C/time\u003E by Ser\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2015-11-03T13:27:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ser\u0022 data-cite=\u0022Ser\u0022\u003E\u003Cdiv\u003EBuy the way, I\u0027ve ran into some trouble with my shader: I have a material in Unity with a texture and my shader assigned to it. I\u0027m struggling with the fragment function. The vertex output struct matches the fragment input. The trouble is when I try to take the input color and pass it through, I get a totally white output, no matter what I do with it. On the other hand, if I return a constant (or parameter-specified) color, the mesh is properly colored. Seems like vertex function\u0027s output color is messed up for some reason.\u003Cp\u003EWhat I\u0027m trying to achieve is to create a shader that will alter screen colors in KSP so I expect that the colors of the texture of that test mesh should be affected properly first.\u003C/p\u003E\u003Cp\u003EMay be you can help with that?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESorry - I didn\u0027t have this thread watched, and I forgot about it. Did you sort out this problem? If not, do you have the shader fragments somewhere so I can look at them?\u003C/p\u003E\n"},{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-11-07T07:29:06Z","Content":"\n\u003Cp\u003EMOARdV, I\u0027ve stopped trying and concentrated on other things but would be glad if you could help.\u003C/p\u003E\u003Cp\u003EOnce again: I have a mesh with a material. There\u0027s a texture assigned to that material and my shader. The shader is supposed to pass through all the underlying texture\u0027s colors but instead it makes the mesh totally white.\u003C/p\u003E\u003Cp\u003ESeems like I can\u0027t get rid of some fundamental misconception.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003EShader \u0022My-shader\u0022 {\u003Cbr\u003E Properties {\u003Cbr\u003E _Magnitude (\u0022Magnitude\u0022, Float) = 0.0\u003Cbr\u003E }\u003Cbr\u003E SubShader {\u003Cbr\u003E Pass {\u003Cbr\u003E CGPROGRAM\u003Cbr\u003E #pragma target 3.0\u003Cbr\u003E #pragma vertex vertexFunction\u003Cbr\u003E #pragma fragment fragmentFunction\u003Cbr\u003E #include \u0022UnityCG.cginc\u0022\u003Cbr\u003E\u003Cbr\u003E uniform fixed _Magnitude;\u003Cbr\u003E\u003Cbr\u003E struct vertexInput {\u003Cbr\u003E float4 pos : POSITION;\u003Cbr\u003E float4 color : COLOR;\u003Cbr\u003E };\u003Cbr\u003E struct vertexOutput {\u003Cbr\u003E float4 pos : SV_POSITION;\u003Cbr\u003E float4 color : COLOR;\u003Cbr\u003E };\u003Cbr\u003E struct pvv2f {\u003Cbr\u003E float4 color : COLOR;\u003Cbr\u003E };\u003Cbr\u003E\u003Cbr\u003E vertexOutput vertexFunction(vertexInput vert) {\u003Cbr\u003E vertexOutput o;\u003Cbr\u003E o.pos = mul(UNITY_MATRIX_MVP, vert.pos);\u003Cbr\u003E o.color = vert.color;\u003Cbr\u003E return o;\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E pvv2f fragmentFunction(vertexOutput inp) {\u003Cbr\u003E float4 outcolor;\u003Cbr\u003E outcolor[0] = inp.color[0];\u003Cbr\u003E outcolor[1] = inp.color[1];\u003Cbr\u003E outcolor[2] = inp.color[2];\u003Cbr\u003E outcolor[3] = inp.color[3];\u003Cbr\u003E\u003Cbr\u003E pvv2f o;\u003Cbr\u003E o.color = outcolor;\u003Cbr\u003E return o;\u003Cbr\u003E }\u003Cbr\u003E ENDCG\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2015-11-07T13:46:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ser\u0022 data-cite=\u0022Ser\u0022\u003E\u003Cdiv\u003EMOARdV, I\u0027ve stopped trying and concentrated on other things but would be glad if you could help.\u003Cp\u003EOnce again: I have a mesh with a material. There\u0027s a texture assigned to that material and my shader. The shader is supposed to pass through all the underlying texture\u0027s colors but instead it makes the mesh totally white.\u003C/p\u003E\u003Cp\u003ESeems like I can\u0027t get rid of some fundamental misconception.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003EShader \u0022My-shader\u0022 {\u003Cbr\u003E Properties {\u003Cbr\u003E _Magnitude (\u0022Magnitude\u0022, Float) = 0.0\u003Cbr\u003E }\u003Cbr\u003E SubShader {\u003Cbr\u003E Pass {\u003Cbr\u003E CGPROGRAM\u003Cbr\u003E #pragma target 3.0\u003Cbr\u003E #pragma vertex vertexFunction\u003Cbr\u003E #pragma fragment fragmentFunction\u003Cbr\u003E #include \u0022UnityCG.cginc\u0022\u003Cbr\u003E\u003Cbr\u003E uniform fixed _Magnitude;\u003Cbr\u003E\u003Cbr\u003E struct vertexInput {\u003Cbr\u003E float4 pos : POSITION;\u003Cbr\u003E float4 color : COLOR;\u003Cbr\u003E };\u003Cbr\u003E struct vertexOutput {\u003Cbr\u003E float4 pos : SV_POSITION;\u003Cbr\u003E float4 color : COLOR;\u003Cbr\u003E };\u003Cbr\u003E struct pvv2f {\u003Cbr\u003E float4 color : COLOR;\u003Cbr\u003E };\u003Cbr\u003E\u003Cbr\u003E vertexOutput vertexFunction(vertexInput vert) {\u003Cbr\u003E vertexOutput o;\u003Cbr\u003E o.pos = mul(UNITY_MATRIX_MVP, vert.pos);\u003Cbr\u003E o.color = vert.color;\u003Cbr\u003E return o;\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E pvv2f fragmentFunction(vertexOutput inp) {\u003Cbr\u003E float4 outcolor;\u003Cbr\u003E outcolor[0] = inp.color[0];\u003Cbr\u003E outcolor[1] = inp.color[1];\u003Cbr\u003E outcolor[2] = inp.color[2];\u003Cbr\u003E outcolor[3] = inp.color[3];\u003Cbr\u003E\u003Cbr\u003E pvv2f o;\u003Cbr\u003E o.color = outcolor;\u003Cbr\u003E return o;\u003Cbr\u003E }\u003Cbr\u003E ENDCG\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis shader doesn\u0027t do any texture fetches. All it\u0027s doing is taking the color parameter from the vertex buffer (vertexInput) and passing it through unchanged. You have to include information about the texture in this shader in order to read from it. \u003Ca href=\u0022https://github.com/Mihara/RasterPropMonitor/blob/master/RasterPropMonitor/Shaders/RPM-FontShader.shader\u0022 rel=\u0022external nofollow\u0022\u003EThis shader\u003C/a\u003E from RasterPropMonitor is probably the simplest way to do that - you can ignore the first line of code in the vertex shader (multiplying alpha), but notice the variable _MainTex and the texture coordinate parameters. Those are what tell the shader there\u0027s a texture, and where in the texture you want to read.\u003C/p\u003E\u003Cp\u003EAll the COLOR parameter does is allow for coloring the vertices (and doing smooth color shading across the fragments). It can be used to apply tinting effects to your texture like you can see in the font shader I linked to, but it has nothing to do with the texture by itself.\u003C/p\u003E\n"},{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-11-07T17:47:55Z","Content":"\n\u003Cp\u003ESo if I want to take KSP\u0027s screen rendering and just alter its colors I have to use TEXCOORD even though I don\u0027t apply any additional texture in my shader?\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2015-11-07T19:22:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ser\u0022 data-cite=\u0022Ser\u0022\u003E\u003Cdiv\u003ESo if I want to take KSP\u0027s screen rendering and just alter its colors I have to use TEXCOORD even though I don\u0027t apply any additional texture in my shader?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you want to change what\u0027s drawn on the screen, it gets complicated. There are ways to apply post-processing effects in Unity, but I don\u0027t know Unity well enough to guide you through those steps. But, in short, yes, you\u0027d still need texture coordinates, but you\u0027d also have to bind the screen as a texture.\u003C/p\u003E\n"},{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-11-10T09:22:41Z","Content":"\n\u003Cp\u003EThanks, I\u0027ll try that. \u003C/p\u003E\u003Cp\u003EAll this time I was just hoping that a pixel shader deals with pixels directly.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-11-10T13:00:28Z","Content":"\n\u003Cp\u003EPixel shaders deals with texture pixels.\u003C/p\u003E\n"},{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-11-10T13:14:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EPixel shaders deals with texture pixels.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThen I still don\u0027t get it. We have a vertex program that takes POSITION and COLOR as input and output. Then we have the exactly same input structure for a fragment(pixel) program. It takes POSITION and COLOR and outputs COLOR. Aren\u0027t they the position and the color of every pixel of some image? And the result will be a color of what?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-10T13:17:37Z\u0022 title=\u002211/10/2015 01:17  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 10, 2015\u003C/time\u003E by Ser\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-11-15T13:55:14Z","Content":"\n\u003Cp\u003EGoogling for how the \u0022Blit\u0022 function is called in Unity I\u0027ve suddenly ran into an example of what exactly I needed so despite of some questions remaining the case is closed.\u003C/p\u003E\u003Cp\u003EThank you very much for your help.\u003C/p\u003E\n"}]}