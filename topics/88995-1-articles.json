{"TopicId":88995,"ForumId":36,"TopicTitle":"Interested in making a comprehensive \u0026quot;part failure\u0026quot; mod","CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-10-31T07:17:34Z","PageNum":1,"Articles":[{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-10-31T07:17:34Z","Content":"\n\u003Cp\u003EThere\u0027s been a lot of discussion on the forums about part failures, particularly in light of recent events involving a failed real-world launch. I personally am against random part failures, which is why I think that if KSP is going to have any such feature, it should be a robust system that doesn\u0027t rely entirely on chance and circumstance to mess up the player\u0027s chances. I\u0027ve composed a concept for such a system that would make parts much more interesting to play with while not sacrificing the current fun of the stock system. My main problem is, well, I don\u0027t really have the coding chops to write out the code for such a system...\u003C/p\u003E\u003Cp\u003ESo that\u0027s why I\u0027m here! I was hoping to recruit some coding talent to help me out with what I have in mind. I should warn you ahead of time that when I say \u0022comprehensive\u0022, I am \u003Cem\u003Enot\u003C/em\u003E kidding. Some of the subsystems involved include: quality, part lifespan, repair, analysis, failure states, damage, and tolerances. I am not willing to sacrifice the core functionality of any of these features to the RNG, either; while there will be some small RNG involvement in generating the initial parameter modifiers, everything will potentially be available to the player to uncover and work within the limits of.\u003C/p\u003E\u003Cp\u003EIf you\u0027d like to see the more in-depth document outlining the concepts I have in mind, \u003Ca href=\u0022http://www.skyrender.net/lp2/ksp/system_failure_planning.txt\u0022 rel=\u0022external nofollow\u0022\u003Eyou can read up on it here.\u003C/a\u003E Anyone who\u0027s interested in helping me out, just shoot me a PM and we\u0027ll work out the details.\u003C/p\u003E\n"},{"CreatedByName":"whaaw","CreatedById":69050,"CreatedDateTime":"2014-10-31T07:41:21Z","Content":"\n\u003Cp\u003Ehi !\u003C/p\u003E\u003Cp\u003Ei dont like rondom failure mods but i had a idea, (hard to explain it in english for me)\u003C/p\u003E\u003Cp\u003Ewhat if it depends on the Time a vessel spent in space. I mean as example: I have a upper stage in parking Orbit for about 2 kerbin years. after a failed mission i have to reactivate the upper stage. Now the failure mod kiks in it knows the stage was in orbit for 2 years and the chance for somthing go wrong when i activate it is now at 40% i imagine a message, when i switch to the stage say \u0022chance of engine will ignite is at 40%\u0022 or somthing.\u003C/p\u003E\u003Cp\u003EIm looking forward to a god part failure mod!\u003C/p\u003E\u003Cp\u003EPS: i cant help you coding im really a C# noob\u003C/p\u003E\n"},{"CreatedByName":"Buzzou","CreatedById":100703,"CreatedDateTime":"2014-10-31T08:11:38Z","Content":"\n\u003Cp\u003Eyou should send a PM to Ippo, maybe he can code some of your ideas into his Dang it! mod\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/81794-0-25-Alpha-4-4-Dang-It!-Now-with-perks!-(23-october)\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/81794-0-25-Alpha-4-4-Dang-It!-Now-with-perks!-(23-october)\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"OrbitusII","CreatedById":57305,"CreatedDateTime":"2014-10-31T13:02:44Z","Content":"\n\u003Cp\u003EWhile normally I would consider offering my coding services, I unfortunately don\u0027t have the time to commit to this. I\u0027d be willing and able to do some testing though! I\u0027m not one to go super realistic with my gameplay but it would add a nice challenge to my primary save.\u003C/p\u003E\n"},{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-10-31T19:18:14Z","Content":"\n\u003Cp\u003EI\u0027ve been toying about in Excel so far and came up with a fun little formula for quality that should give a very interesting range of possibilities. The randomizer gets more and more impact as the quality drops, to the point that below 25% quality you\u0027re getting into the territory of \u0022fails immediately upon going to the launchpad\u0022 risk. The discounts get much more generous as you go too, starting out at barely noticeable rates of around 1%, a healthy 51% discount at 20% quality, and climbing up to 80.3% for a 10% quality item (which, incidentally, will almost certainly fail at launch and will only perform at around 30% of a 99%-quality item\u0027s capacity if you get obscenely lucky and get the best possible results for all numbers; fat chance of that). I really hope I can make this mod happen!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-31T19:22:07Z\u0022 title=\u002210/31/2014 07:22  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 31, 2014\u003C/time\u003E by SkyRender\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-11-01T06:19:42Z","Content":"\n\u003Cp\u003EI\u0027ve made some more refinement to the quality variance formula I came up with, which is currently as follows: N \u002B ((1 - N) * rand()) - (1 / (1 \u002B N)) \u002B 0.5. N is a value between 0 and 1. This results in a very interesting distribution wherein the extremes between maximum and minimum values constantly rise as you drop N closer to 0 (hitting a 50% to -50% range at 0; it\u0027s a solid 100% to 100% \u0022range\u0022 at 1, and 83.33% to 33.33% at 0.5, to name a few example values). The data points look something like an undone zipper when you plug it into a chart. I\u0027m wondering if this formula can be refined any. Certainly it has all sorts of interesting potential use, though.\u003C/p\u003E\n"},{"CreatedByName":"whaaw","CreatedById":69050,"CreatedDateTime":"2014-11-01T10:32:34Z","Content":"\n\u003Cp\u003EHi Sky Render\u003C/p\u003E\u003Cp\u003Eabsolutly no fan from this Quality Idea, why should i attach a engine thats blows off with 90%? even if i get a 83.33% discount?\u003C/p\u003E\u003Cp\u003Emakes no sense for me. just my 2 cents\u003C/p\u003E\u003Cp\u003Emfg\u003C/p\u003E\n"},{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-11-01T17:09:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022whaaw\u0022 data-cite=\u0022whaaw\u0022\u003E\u003Cdiv\u003EHi Sky Render\u003Cp\u003Eabsolutly no fan from this Quality Idea, why should i attach a engine thats blows off with 90%? even if i get a 83.33% discount?\u003C/p\u003E\u003Cp\u003Emakes no sense for me. just my 2 cents\u003C/p\u003E\u003Cp\u003Emfg\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E I don\u0027t want that sort of thing either. That\u0027s why I want to make it comprehensive. Instafailure of parts doesn\u0027t even enter the equation until the quality\u0027s down to 28% with this particular formula, and part tolerances are unlikely to be exceeded unless you lower the quality to an extreme. I want it to give the player a wealth of options and proper risk/reward payout, not to punish the player by making it so their engine can explode just because they dropped the quality to 99%.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://www.skyrender.net/lp2/ksp/quality_variance.png\u0022 alt=\u0022quality_variance.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT: Just to highlight what this formula I\u0027ve come up with does, let\u0027s take your 90% quality example. At 90% quality, parts will perform between 87.37% and 97.37% of stock capacity, depending on how it rolls. At worst, you\u0027d be looking at slightly below standard-issue quality. With the ranges I have in mind, you\u0027d have to do something really crazy to cause a part to undergo failure even worst-case like that. The distribution of the quality formula is specifically designed so that you can decide for yourself how much risk you want to take, instead of just putting an arbitrary \u0022part fails 0.01% of the time regardless of circumstance\u0022. The entire idea of the mod is to actually \u003Cstrong\u003Egive\u003C/strong\u003E circumstance to failures in the form of tolerances (and give you the ability to make a reasonable estimate on how likely a part is to exceed those tolerances).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-01T18:03:42Z\u0022 title=\u002211/01/2014 06:03  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 1, 2014\u003C/time\u003E by SkyRender\u003C/strong\u003E\n\u003C/span\u003E\n"}]}