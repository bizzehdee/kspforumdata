{"TopicId":108915,"ForumId":36,"TopicTitle":"Old to New - DDS texture questions","CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-05-12T15:57:09Z","PageNum":1,"Articles":[{"CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-05-12T15:57:09Z","Content":"\n\u003Cp\u003EI have parts that the original author last updated in .24 - so far they have worked fine BUT, with the new fast loading DDS support I\u0027d like to convert the textures to DDS.\u003C/p\u003E\u003Cp\u003EI already know how to flip and convert the diffuse TGA textures to DDS BUT there are also XXX_NRM.tga normal maps that I don\u0027t quite know what to do with.\u003C/p\u003E\u003Cp\u003EDo they need to be greyscaled?\u003C/p\u003E\u003Cp\u003EDo they need to be made the alpha layer of the diffuse DDS?\u003C/p\u003E\u003Cp\u003EOr do they simply need to be flipped vertically and saved as a DXT1 DDS file?\u003C/p\u003E\n"},{"CreatedByName":"Konnor","CreatedById":95430,"CreatedDateTime":"2015-05-12T17:16:55Z","Content":"\n\u003Cp\u003EThey need to be flipped vertically and saved with DXT5nm compression.\u003C/p\u003E\u003Cp\u003EAlso, check \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/119873\u0022 rel=\u0022external nofollow\u0022\u003Ethis thread\u003C/a\u003E out.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-12T17:20:00Z\u0022 title=\u002205/12/2015 05:20  PM\u0022 data-short=\u00229 yr\u0022\u003EMay 12, 2015\u003C/time\u003E by Konnor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-05-12T18:14:12Z","Content":"\n\u003Cp\u003EGood resource!\u003C/p\u003E\u003Cp\u003EI use \u0022\u003Ca href=\u0022http://www.mwgfx.co.uk/programs/dxtbmp.htm\u0022 rel=\u0022external nofollow\u0022\u003EDXTBmp\u003C/a\u003E\u0022 which goes back to my Flight Simulator days - it simply lets you open/save various formats and separates the RGB and Alpha Channels.\u003C/p\u003E\u003Cp\u003EFor the part I was testing on (Turbo Nisu\u0027s big hemispherical tank) I found the following to be true\u003C/p\u003E\u003Cp\u003EbigTankCap.dds (made from bigTankCap.tga) needed an alpha channel added to it, which I made mostly black with a small bit of white for the \u0022bands\u0022 around the edge of the tank. this was based on a guess of what would look good after looking at the stock X200-16 textures. I\u0027m not sure what the Alpha channel is doing in this texture however.\u003C/p\u003E\u003Cp\u003EbigTankCap_NRM.dds (made from bigTankCap_NRM.tga) I had to move the normal map from the RGB to the Alpha (which made it greyscale) and then darken it a touch. I then set the RGB channel to the same grey color found in model001.dds texture of the X200-16 tank.\u003C/p\u003E\u003Cp\u003EI used the X200-16 tank as my research subject because Turbo Nisu\u0027s \u0022BigTankCap\u0022 is *Clearly* intended to match the visual style of the X200 tanks.\u003C/p\u003E\u003Cp\u003EDXTBmp refers to the RGB image as \u0022Norm\u0022 and the Alpha channel as \u0022Trans\u0022. \u003C/p\u003E\u003Cp\u003EBased on my experiments so far, I have concluded:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EDiffuse DDS:\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cbr\u003E[*=1]Norm (RGB) = visible texture image\u003Cbr\u003E[*=1]Trans (Alpha) = ????\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003ENormal Map DDS:\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cbr\u003E[*=1]Norm (RGB) = Reflection/Shine (is this called \u0022Specualrity?\u0022)\u003Cbr\u003E[*=1]Trans (Alpha) = Bump Map\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"shaw","CreatedById":64788,"CreatedDateTime":"2015-05-12T18:49:46Z","Content":"\n\u003Cp\u003EDiffuse texture: RGB = colour, alpha = depends on shader: can be transparency, \u0022specularity\u0022 or ignored.\u003C/p\u003E\u003Cp\u003ENormal map: red = ignored, green = Y component of normal vectors, blue = ignored, alpha = X component. Y is usually also copied to red and blue channels to lessen compression artefacts.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-12T18:54:14Z\u0022 title=\u002205/12/2015 06:54  PM\u0022 data-short=\u00229 yr\u0022\u003EMay 12, 2015\u003C/time\u003E by shaw\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-05-13T00:36:33Z","Content":"\n\u003Cp\u003EI assume \u0022X Component\u0022 = X Component of normal vectors?\u003C/p\u003E\u003Cp\u003EAnd in any case, can you show me to a resource that will learn me what \u0022Y component of normal vectors\u0022 means? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"shaw","CreatedById":64788,"CreatedDateTime":"2015-05-13T20:55:27Z","Content":"\n\u003Cp\u003Ex and y component of per-pixel normal vector relative to surface, e.g. [0, 0, 1] means that normal points straight out of the surface, [1, 0, 0] points in the direction of the first texture coordinate (tangent) and [0, 1, 0] points in the direction of the second texture coordinate (binormal).\u003C/p\u003E\u003Cp\u003EGoogle bump-mapping.\u003C/p\u003E\n"}]}