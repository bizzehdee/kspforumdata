{"TopicId":47341,"ForumId":29,"TopicTitle":"FlightCtrlState not working as I expect","CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2013-10-04T02:33:08Z","PageNum":1,"Articles":[{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2013-10-04T02:33:08Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EAnswered, see last post.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EOkay, this is a pretty big question and I figure the FlightCtrlState module is important enough to deserve its own thread so it shows up on the search function.\u003C/p\u003E\u003Cp\u003EFirst off, I am making a mod for controlling KSP via touchscreen and I have the flight control working as long as the SAS is turned off. As soon as the SAS is turned on, my button on screen stop working. \u003C/p\u003E\u003Cp\u003ETrying different things has not worked so I\u0027m hoping someone can help me out.\u003C/p\u003E\u003Cp\u003EFirst, my setup:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//trim everything excess\u003Cbr\u003E//inside my OnWindow() I have this\u003Cbr\u003E                    if (GUI.RepeatButton(new Rect(101 \u002B (3 * OSKWinScale), 25, 32 \u002B OSKWinScale, 32 \u002B OSKWinScale), PitchUpTx))\u003Cbr\u003E                    {\u003Cbr\u003E                        OSKPitchDown = true; //so OSKPitchDown is false until the button is pressed, and they becomes true as long as the button is held down. Note I\u0027m using GUI.RepeatButton, not GUI.Button.\u003Cbr\u003E                    }\u003Cbr\u003E\u003Cbr\u003E//OnWindow() ends, and start a new method\u003Cbr\u003E\u003Cbr\u003E                public void OSKAutoControl(FlightCtrlState OSKFlightCtrlState)\u003Cbr\u003E                {\u003Cbr\u003E\u003Cbr\u003E                    if (OSKPitchDown)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (OSKFlipPitch)\u003Cbr\u003E                        {\u003Cbr\u003E                            OSKFlightCtrlState.pitch = -1f;\u003Cbr\u003E                        }\u003Cbr\u003E                        else\u003Cbr\u003E                        {\u003Cbr\u003E                            OSKFlightCtrlState.pitch = 1f;\u003Cbr\u003E                        }\u003Cbr\u003E\u003Cbr\u003E                    } //end OSKAutoControl method\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                 public void FixedUpdate()\u003Cbr\u003E                {\u003Cbr\u003E                   OSKVessel.OnFlyByWire \u002B= OSKAutoControl; //apply actual control inputs here, this I think is the problem\u003Cbr\u003E                }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo, when the button is down (using RepeatButton so this is true as long as the button is held), I\u0027m inputting a pitch input of 1f.\u003C/p\u003E\u003Cp\u003ENow, here\u0027s where I get confused.\u003C/p\u003E\u003Cp\u003EIf I leave the last line at:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EOSKVessel.OnFlyByWire \u002B= OSKAutoControl;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMy controls work, as long as SAS is off. As soon as I turn SAS on, my on screen buttons stop working.\u003C/p\u003E\u003Cp\u003EIf I change the last line from \u002B= to just =, so \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EOSKVessel.OnFlyByWire = OSKAutoControl;\u003C/pre\u003E\u003Cp\u003E, my buttons on screen work 100% of the time (so with SAS both on and off), but I\u0027m overriding the SAS inputs so SAS is effectively off regardless of it\u0027s actual state.\u003C/p\u003E\u003Cp\u003EAnyone know how to make it so the on screen keys work as keyboard keys and I can move my ship around with SAS on?\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-10-05T02:50:46Z\u0022 title=\u002210/05/2013 02:50  AM\u0022 data-short=\u002210 yr\u0022\u003EOctober 5, 2013\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2013-10-04T09:35:23Z","Content":"\n\u003Cp\u003EHm, looks like the new SAS does set values instead of modifying it. So you have to make sure your wire callback is called after those mod-unfriendly new SAS.\u003C/p\u003E\u003Cp\u003E- Do not make the same mistake as the SAS module. Modify the values already in the flybywire data struct whenever possible instead of setting them. Though respect their valid ranges. This way you can have both.\u003C/p\u003E\u003Cp\u003E- Do NOT add a callback multiple times. In the worst case you add anther callback every frame. So after lets say 500 frames your flybywire gets called 500 times per frame.\u003C/p\u003E\u003Cp\u003E- One stupid... uhm, lets call it \u0022easy\u0022... solution to make sure your callback is called after SAS is to re-add you callback every frame. But please remove it, first.\u003C/p\u003E\u003Cp\u003ESo your basic approach would work after a few improvements and I haven\u0027t found any better one.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2013-10-04T13:48:06Z","Content":"\n\u003Cp\u003EOkay, so populate my mod\u0027s flightctrlstate with the current values somehow and modify them, I think I can do that.\u003C/p\u003E\u003Cp\u003EHowever, I\u0027m not clear on what you mean by call back.\u003C/p\u003E\u003Cp\u003EIf you mean the \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic void OSKAutoControl(FlightCtrlState OSKFlightCtrlState)\u003C/pre\u003E\u003Cp\u003E method, that is not inside any Update() call, it is directly under the OSK namespace.\u003C/p\u003E\u003Cp\u003EIf you mean \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EOSKVessel.OnFlyByWire \u002B= OSKAutoControl;\u003C/pre\u003E\u003Cp\u003E, does not that need to be called every frame for smooth control?\u003C/p\u003E\u003Cp\u003EI suspect I\u0027ve cut too much code out of my example and you are assuming I\u0027ve done something with the callback that I\u0027ve missed that is causing this problem I\u0027m seeing.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003Cp\u003Eedit: I just checked the API docs and they say the \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic void OSKAutoControl(FlightCtrlState OSKFlightCtrlState)\u003C/pre\u003E\u003Cp\u003E call back does in fact get called once every FixedUpdate() automatically even though I don\u0027t have it inside the FixedUpdate() method.\u003C/p\u003E\u003Cp\u003EHaving said that, it gets called once per fixedupdate once registered, so how do I keep it from registering every frame? (I\u0027m totally lost on this part.)\u003C/p\u003E\u003Cp\u003Eedit the 2nd: Wait, you mean I only need \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EOSKVessel.OnFlyByWire \u002B= OSKAutoControl;\u003C/pre\u003E\u003Cp\u003E once in my Start() or Awake() method, and then it will call \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic void OSKAutoControl(FlightCtrlState OSKFlightCtrlState)\u003C/pre\u003E\u003Cp\u003E once every FixedUpdate() for me?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-10-04T14:01:27Z\u0022 title=\u002210/04/2013 02:01  PM\u0022 data-short=\u002210 yr\u0022\u003EOctober 4, 2013\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2013-10-04T15:40:35Z","Content":"\n\u003Cp\u003ECallback is a method that is called back from someone elses code. Names like eventhandler or delegate can mean sth similar / the same. So yes, OSKFlightCtrlState is your callback method.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Eedit the 2nd: Wait, you mean I only need \u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EOSKVessel.OnFlyByWire \u002B= OSKAutoControl;\u003C/pre\u003E\u003Cp\u003E once in my Start() or Awake() method, and then it will call \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic void OSKAutoControl(FlightCtrlState OSKFlightCtrlState)\u003C/pre\u003E\u003Cp\u003E once every FixedUpdate() for me?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, doing it once in Start would be enough to let the game call your eventhandler / callback / OSKAutoControl method once per update. If you have a problem with other mods / SAS overwriting your values you could do sth like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EFixedUpdate(){\u003Cbr\u003E   vessel.OnFlyByWire -= OSKAutoControl;\u003Cbr\u003E   vessel.OnFlyByWire \u002B= OSKAutoControl;\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis would remove and re-add your callback as the last in the list on every frame. It isn\u0027t a very elegant solution, though.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2013-10-04T18:52:41Z","Content":"\n\u003Cp\u003EAlright, it works significantly differently then I expected then.\u003C/p\u003E\u003Cp\u003EI thought \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EOSKVessel.OnFlyByWire \u002B= OSKAutoControl;\u003C/pre\u003E\u003Cp\u003E was the actual passing of the modified inputs back to KSP (and so needed every FixedUpdate()), not that it was registering OSKAutoControl as what I needed to update to pass the inputs back.\u003C/p\u003E\u003Cp\u003ESo yes, the code snippet in my opening post is quite badly malformed to say the least.\u003C/p\u003E\u003Cp\u003EI\u0027ll pull this apart and report back on how things go.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2013-10-05T02:50:13Z","Content":"\n\u003Cp\u003EBleh, for the record when the SAS is enabled, it overrides OnFlyByWire, you have to set vessel.VesselSAS.ManualOverride(true), do your control inputs, then set vessel.VesselSAS.ManualOverride(false) on the next update without a control input to resume sas control.\u003C/p\u003E\u003Cp\u003EAnyways, thank you for the callback advice, I moved public void OSKAutoControl(FlightCtrlState OSKFlightCtrlState) to the Start() method and added the .ManualOverride = true logic when I\u0027m trying to input controls and everything works.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"a.g.","CreatedById":59470,"CreatedDateTime":"2013-10-09T06:04:47Z","Content":"\n\u003Cp\u003EI wonder if this should be reported as a bug to the developers, so that they can fix SAS to work with mod-provided user input. They probably just didn\u0027t consider this case when refactoring the SAS. I had this problem too in my mouse input patch for SteamGauges HUD.\u003C/p\u003E\n"}]}