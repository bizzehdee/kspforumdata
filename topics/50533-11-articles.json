{"TopicId":50533,"ForumId":34,"TopicTitle":"[1.8.x-1.12.x] Module Manager 4.2.3 (July 03th 2023) - Fireworks season","CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2013-10-25T13:01:36Z","PageNum":11,"Articles":[{"CreatedByName":"sirklick","CreatedById":76119,"CreatedDateTime":"2013-12-30T05:26:12Z","Content":"\n\u003Cp\u003EIn need of a nth pair of eyes. Attempting to remove a bunch of the default nodes from FusTek station parts with\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[Karmony*]\u003Cbr\u003E{\u003Cbr\u003E\t!MODULE[ModuleReactionWheel]\u003Cbr\u003E\t!MODULE[ModuleCommand]\u003Cbr\u003E\t!MODULE[MechJebCore]\u003Cbr\u003E\t!MODULE[ModuleSAS]\u003Cbr\u003E\t!MODULE[ModuleRemoteTechSPU]\u003Cbr\u003E\t!RESOURCE[MonoPropellant]\u003Cbr\u003E\t!MODULE[ModuleGenerator]\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ebut failing. Ideas?\u003C/p\u003E\u003Cp\u003EEdit: Solution found. DL\u0027ed 1.5.6 from a link deep in thread and ended each removal line with {}. Works now.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-30T06:25:50Z\u0022 title=\u002212/30/2013 06:25  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 30, 2013\u003C/time\u003E by sirklick\u003C/strong\u003E\n\u003Cbr\u003ESolution found\n\u003C/span\u003E\n"},{"CreatedByName":"Black-Talon","CreatedById":57463,"CreatedDateTime":"2013-12-30T16:00:34Z","Content":"\n\u003Cp\u003EI\u0027ve been thinking for awhile that it would be really nice if there was a utility that worked with Module Manager to do a few things with MM configs:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003ECreates a list/csv of changes applied by MM: [PartName][Key][stockValue][NewValue] - ideally this would use a shared parsing engine so it could be used to test if your configs are working without loading the game\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAn \u0022export configs from the in game database\u0022 in game - I don\u0027t have a great reason \u0022why\u0022 anyone would want this - but the idea is that actual part configs could be written out to disk that include all loaded ModuleManager config tweaks - perhaps then someone who doesn\u0027t want to run ModuleManager DLL could go back to the old days of overwriting stock config files - or at least an easy diff between files could show you the changes (getting you a poor man\u0027s version of #1)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E(bonus)Once I dream of a world with these things it feels obvious that there should be a reverse option to take a modified-from-stock config file and create a ModuleManager config that would correctly modify a stock config to the modified config (used in order to easily create/distribute your config changes to others). OR of course an easy part editor, spreadsheet driven, part editor that drives the creation of MM configs for distribution would be fun.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo #1 at least has always seemed super useful. Especially now that so many modders are in fact using the awesomeness of ModuleManager but without a lot of work you\u0027re never quite sure what has been changed (I always used to diff files to see updates, now I can\u0027t as easily). Does something like that already exist by chance? Tempted to make something myself but I know my time limits will likely prevent me.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2013-12-30T16:24:34Z","Content":"\n\u003Cp\u003EYou can check the in game value with the KSP debug menu (ALT F12) for PART, RESOURCE and others I forgot. It require to load the game but it\u0027s better than nothing at all.\u003C/p\u003E\n"},{"CreatedByName":"sirklick","CreatedById":76119,"CreatedDateTime":"2013-12-30T19:31:42Z","Content":"\n\u003Cp\u003EI would like to make a suggestion, include links to the point releases in the op. I understand the want/need to not rev MM frequently, but having easy to find fixes that address issues that people are having with the current major release would likely save people a lot of time and frustration. Thank you again for all of your work on MM.\u003C/p\u003E\n"},{"CreatedByName":"alacrity","CreatedById":70443,"CreatedDateTime":"2013-12-30T19:59:42Z","Content":"\n\u003Cp\u003EOk so after perusing a bulk of the thread, I am having problems getting started on the new syntax.\u003C/p\u003E\u003Cp\u003EI am just trying to add parts to the tech tree. After all the high end functioning I see noted in the posts here I feel a bit a nubbin but I just need the header for a basic config, or better yet the syntax bible.\u003C/p\u003E\u003Cp\u003EAlacrity\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2013-12-30T20:50:52Z","Content":"\n\u003Cp\u003Esirklick : Previous point version had bugs. I wanted to be sure the current one as none before putting it on the front page. Will do next year \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E\u003C/p\u003E\u003Cp\u003Ealacrity : all you need for that is in the second post. Here is 2 example for techlevel :\u003C/p\u003E\u003Cp\u003ESetting all part without a tech level to advScienceTech\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:HAS[~TechRequired[]]:Final\u003Cbr\u003E{\u003Cbr\u003E\tTechRequired=advScienceTech\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESetting one part to advScienceTech\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[NameOfThePart]:Final\u003Cbr\u003E{\u003Cbr\u003E\tTechRequired=advScienceTech\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Black-Talon","CreatedById":57463,"CreatedDateTime":"2013-12-30T21:05:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EYou can check the in game value with the KSP debug menu (ALT F12) for PART, RESOURCE and others I forgot. It require to load the game but it\u0027s better than nothing at all.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERight, I knew that. That helps you find out what a particular part\u0027s loaded settings are. And that\u0027s nice. But in order to understand what all the changes being made by module manager are you\u0027d need to know ahead of time what parts were being modified and what their stock values were in order to look them up in game. This is possible to do but requires opening up all the config files. That\u0027s A LOT of config files and A LOT of manually comparing files in order to understand all the changes being made.\u003C/p\u003E\u003Cp\u003EWhat I\u0027m thinking about making is something that allows you to quickly see all the changes ModuleManager has made to your parts. Ideally this would point out places where multiple changes are being made to the same part (potentially by separate mods, potentially conflicting). But much more importantly, answering the question, \u0022What changes have been made to the stock parts anyway!?\u0022 Without loading up all the MM Configs AND all the part configs to see what was changed to what.\u003C/p\u003E\n"},{"CreatedByName":"alacrity","CreatedById":70443,"CreatedDateTime":"2013-12-30T21:59:39Z","Content":"\n\u003Cp\u003EOk I found the reference post and got started... It is a little more complex than I thought... and too many parts to do one at a time. Please take a look at this a let me know where I am going wrong\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[JARFR_Tri*]:HAS[#category[Structural]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = advConstruction\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_TriStrutA*]:HAS[#category[Structural]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = basicRocketry\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[GE_THSS*]:HAS[#category[Structural]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = advConstruction\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[GE_THSS*]:HAS[#category[Control]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = specializedControl\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_*:HAS[#breakingForce[100]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = aerodynamicSystems\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_*:HAS[#breakingForce[200]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = aerodynamicSystems\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_Tri*]:HAS[@MODULE[ModuleEngines]:HAS[ @PROPELLANT[XenonGas]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = ionPropulsion\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_Tri*]:HAS[@MODULE[ModuleEngines]:HAS[ @PROPELLANT[LiquidFuel]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = heavierRocketry\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_TriStrutN*]:HAS[@MODULE[ModuleEngines]:HAS[ @PROPELLANT[LiquidFuel]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = heavierRocketry\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_Tri*]:HAS[#category[Control]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = specializedControl\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_Tri*]:HAS[#category[Pods]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = specializedControl\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_Tri*]:HAS[@Resource[MonoPropellant]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = fuelSystems\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_Tri*]:HAS[@Resource[LiquidFuel]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = fuelSystems\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[JARFR_Tri*]:HAS[@Resource[XenonGas]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = ionPropulsion\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[GE_THSS*]:HAS[@Resource[LiquidFuel]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = fuelSystems\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThanx in advance\u003C/p\u003E\u003Cp\u003EAlacrity\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2013-12-30T22:31:29Z","Content":"\n\u003Cp\u003E5th and 6th one have a missing closing square bracket. \u003C/p\u003E\u003Cp\u003EAnd I would avoid searching by breakingForce. Some other mod may change it before your patch.\u003C/p\u003E\n"},{"CreatedByName":"alacrity","CreatedById":70443,"CreatedDateTime":"2013-12-30T22:54:10Z","Content":"\n\u003Cp\u003ESilly question but is your wildcard operator this versatile?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*Heatshield]:HAS[#category[Structural]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = aerodynamicSystems\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[*Heatshield]:HAS[#category[Structural]]\u003Cbr\u003E{\u003Cbr\u003E TechRequired = aerodynamicSystems\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe naming convention on the mod I am playing with is a nightmare to navigate\u003C/p\u003E\u003Cp\u003EOk so that didn\u0027t work... only a few of them actually got added...section 3 and 4 made it, but nothing else seemed to take.\u003C/p\u003E\u003Cp\u003ENot seeing the differences but it may be conflicts in the wildcards\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EWell it seems that Module Manager does not like the JARFR_ naming convention for some reason... No ammount of changing the callout picks up the parts and places them...GRRRRRRRRR\u003C/p\u003E\u003Cp\u003EEDIT 2:\u003C/p\u003E\u003Cp\u003ESo it turns out that I am an idiot... the callouts are based on the NAME inside the part cfg not the name of the containing folder... I will now crawl into a hole and die of shame\u003C/p\u003E\u003Cp\u003EALacrity\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-31T01:06:27Z\u0022 title=\u002212/31/2013 01:06  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 31, 2013\u003C/time\u003E by alacrity\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"alacrity","CreatedById":70443,"CreatedDateTime":"2013-12-31T19:16:00Z","Content":"\n\u003Cp\u003EFinal update... I argued and stabbed and lied my way through but managed to put together a working cfg for the THSS mod.\u003C/p\u003E\u003Cp\u003ENaming conventions and crossover made it tricky but I managed to get things together without having to create an entry for every part.\u003C/p\u003E\u003Cp\u003EAlacrity\u003C/p\u003E\n"},{"CreatedByName":"Galane","CreatedById":77949,"CreatedDateTime":"2014-01-01T05:22:26Z","Content":"\n\u003Cp\u003EHad to Google ModuleManager_1_5_6.dll to find \u003Ca href=\u0022http://www.sarbian.com/sarbian/ModuleManager_1_5_6.dll\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.sarbian.com/sarbian/ModuleManager_1_5_6.dll\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EA happy new year gift would be a forum search that can find individual posts instead of just threads, and indexes common three and four letter terms used in KSP.\u003C/p\u003E\n"},{"CreatedByName":"rottielover","CreatedById":73403,"CreatedDateTime":"2014-01-01T18:01:28Z","Content":"\n\u003Cp\u003EQuestion (as I\u0027m not familiar with how this works). I downloaded RemoteTech2, AIES, and JohnsonWax\u0027s AIES module manager files for AIES. I made certain that I only have the ModuleManager 1.5.6 .dll file and no other module manager dll\u0027s anywhere in GameData. I\u0027m getting 2 antenna modules in each of the antenna anyway? \u003C/p\u003E\u003Cp\u003EIt\u0027s as if there are two module managers, but I\u0027ve done both Windows Search and visually went into each folder and could not find any more Module Manager DLL files. Any thoughts on what could be causing this?\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2014-01-01T19:46:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rottielover\u0022 data-cite=\u0022rottielover\u0022\u003E\u003Cdiv\u003EQuestion (as I\u0027m not familiar with how this works). I downloaded RemoteTech2, AIES, and JohnsonWax\u0027s AIES module manager files for AIES. I made certain that I only have the ModuleManager 1.5.6 .dll file and no other module manager dll\u0027s anywhere in GameData. I\u0027m getting 2 antenna modules in each of the antenna anyway? \u003Cp\u003EIt\u0027s as if there are two module managers, but I\u0027ve done both Windows Search and visually went into each folder and could not find any more Module Manager DLL files. Any thoughts on what could be causing this?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, duplicate cfg files. Or a single config file with duplicate entries.\u003C/p\u003E\n"},{"CreatedByName":"rottielover","CreatedById":73403,"CreatedDateTime":"2014-01-01T19:53:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Starwaster\u0022 data-cite=\u0022Starwaster\u0022\u003E\u003Cdiv\u003EYes, duplicate cfg files. Or a single config file with duplicate entries.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBingo! Thank you! Had a cfg hiding in a subfolder\u003C/p\u003E\n"},{"CreatedByName":"TheDude","CreatedById":45158,"CreatedDateTime":"2014-01-05T19:53:51Z","Content":"\n\u003Cp\u003EGreetings,\u003C/p\u003E\u003Cp\u003EHow do you change the atmospherecurve inside of the engine module?\u003C/p\u003E\u003Cp\u003EI\u0027ve tried this:\u003C/p\u003E\u003Cp\u003E@PART[My_Engine]:Final\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E @MODULE[ModuleEngines]\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E @maxThrust = 150\u003C/p\u003E\u003Cp\u003E @heatProduction = 325\u003C/p\u003E\u003Cp\u003E @atmosphereCurve\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E @key = 0 600\u003C/p\u003E\u003Cp\u003E @key = 0.25 463\u003C/p\u003E\u003Cp\u003E @key = 1 200\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EThe thrust and heat changes but for the life of me I can\u0027t get the atmosphere curves to change. They are always stay the original values as defined in the CFG file.\u003C/p\u003E\u003Cp\u003EBest regards,\u003C/p\u003E\u003Cp\u003EThe Dude\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-01-05T19:57:42Z","Content":"\n\u003Cp\u003E@atmosphereCurve\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E@key,0 = //value for first key in original atmosphereCurve, like 0 600\u003C/p\u003E\u003Cp\u003E@key,1 = // value for second key like 0.25 463\u003C/p\u003E\u003Cp\u003Ekey = 1 200 // since original curve only had 2 values, right?\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EOr probably better since it doesn\u0027t depend on knowing the number of keys:\u003C/p\u003E\u003Cp\u003E!atmosphereCurve {}\u003C/p\u003E\u003Cp\u003EatmosphereCurve\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003Ekey = 0 600\u003C/p\u003E\u003Cp\u003Ekey = 0.25 463\u003C/p\u003E\u003Cp\u003Ekey = 1 200\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\n"},{"CreatedByName":"TheDude","CreatedById":45158,"CreatedDateTime":"2014-01-05T20:12:58Z","Content":"\n\u003Cp\u003EYep, that worked. For future searches this worked for me:\u003C/p\u003E\u003Cp\u003E@PART[My_Engine]:Final\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E @MODULE[ModuleEngines]\u003C/p\u003E\u003Cp\u003E { \u003C/p\u003E\u003Cp\u003E !atmosphereCurve {}\u003C/p\u003E\u003Cp\u003E @maxThrust = 150\u003C/p\u003E\u003Cp\u003E @heatProduction = 325\u003C/p\u003E\u003Cp\u003E atmosphereCurve\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E key = 0 575\u003C/p\u003E\u003Cp\u003E key = 0.25 463\u003C/p\u003E\u003Cp\u003E key = 1 188\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\n"},{"CreatedByName":"velusip","CreatedById":60676,"CreatedDateTime":"2014-01-08T07:12:50Z","Content":"\n\u003Cp\u003EIt seems like the new RAPIER engine is missing the necessary tag variable required for this mod to query the multiple MODULES named ModuleEnginesFX independently. After adding appropriate tags to the RAPIER part, the following ModuleManager script works:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[RAPIER]\u003Cbr\u003E{   \u003Cbr\u003E    @maxTemp = 1800\u003Cbr\u003E    @MODULE[ModuleEnginesFX,AirBreathing]\u003Cbr\u003E    {   \u003Cbr\u003E        @heatProduction = 300\u003Cbr\u003E    }\u003Cbr\u003E    @MODULE[ModuleEnginesFX,ClosedCycle]\u003Cbr\u003E    {   \u003Cbr\u003E        @heatProduction = 250\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo be fair, the \u0022tag\u0022 feature of ModuleManager is a bit strange in that it imposes a part.cfg convention which Squad isn\u0027t necessarily going to follow. It would make more sense to open the syntax up a bit to allow queries for any variable or value. I thought that was what the new :HAS syntax is for, but I can\u0027t seem to make it work. In this case, we would like to query for the variable engineID which has either \u0022AirBreathing\u0022 or \u0022ClosedCycle\u0022 as a value. The following is one failed attempt of many, many variations:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[RAPIER]\u003Cbr\u003E{       \u003Cbr\u003E    @maxTemp = 1800\u003Cbr\u003E    @MODULE[ModuleEnginesFX]:HAS[@engineID[AirBreathing]]\u003Cbr\u003E    {       \u003Cbr\u003E        @heatProduction = 300\u003Cbr\u003E    }\u003Cbr\u003E    @MODULE[ModuleEnginesFX]:HAS[@engineID[ClosedCycle]]\u003Cbr\u003E    {       \u003Cbr\u003E        @heatProduction = 250\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf possible, how should I discern a particular NODE of many without using tag?\u003C/p\u003E\n"},{"CreatedByName":"DennyTX","CreatedById":92389,"CreatedDateTime":"2014-01-08T08:18:49Z","Content":"\n\u003Cp\u003Egentlemen\u003C/p\u003E\u003Cp\u003Eany way to do someting like this?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[*]:HAS[@MODULE[ModuleName]\u003Cbr\u003E[B][COLOR=\u0022#FF8C00\u0022]get ModuleName[moduleProperty][/COLOR][/B]\u003Cbr\u003E{\u003Cbr\u003E[B][COLOR=\u0022#FF8C00\u0022]IF (moduleProperty)\u0026gt;10[/COLOR][/B]\u003Cbr\u003E @MODULE[name]\u003Cbr\u003E   {\u003Cbr\u003E     [COLOR=\u0022#FF8C00\u0022][B]@moduleProperty*2[/B][/COLOR]\u003Cbr\u003E   }\u003Cbr\u003E[B][COLOR=\u0022#FF8C00\u0022]ELSE[/COLOR][/B]\u003Cbr\u003E @MODULE[ModuleName]\u003Cbr\u003E   {\u003Cbr\u003E    [B][COLOR=\u0022#FF8C00\u0022] @moduleProperty/2[/COLOR][/B]\u003Cbr\u003E   }\u003Cbr\u003E[B][COLOR=\u0022#FF8C00\u0022]ENDIF[/COLOR][/B]\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ethis for changing properties depends of its previous value\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-08T08:21:12Z\u0022 title=\u002201/08/2014 08:21  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 8, 2014\u003C/time\u003E by DennyTX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-01-08T10:06:24Z","Content":"\n\u003Cp\u003Evelusip it should be : \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[RAPIER]\u003Cbr\u003E{       \u003Cbr\u003E    @maxTemp = 1800\u003Cbr\u003E    @MODULE[ModuleEnginesFX]:HAS[#engineID[AirBreathing]]\u003Cbr\u003E    {       \u003Cbr\u003E        @heatProduction = 300\u003Cbr\u003E    }\u003Cbr\u003E    @MODULE[ModuleEnginesFX]:HAS[#engineID[ClosedCycle]]\u003Cbr\u003E    {       \u003Cbr\u003E        @heatProduction = 250\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDennyTX : no. MM is limited by the KSP parser.\u003C/p\u003E\n"},{"CreatedByName":"ZobrAA","CreatedById":65233,"CreatedDateTime":"2014-01-08T10:27:48Z","Content":"\n\u003Cp\u003ECan anyone give an example how % operator works?\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-01-08T16:57:03Z","Content":"\n\u003Cp\u003E@PART[foo]\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E%breakingForcce = 200 // will set breakingForce = 200, whether or not it exists.\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003Ejust using breakingForce = 200 will add a duplicate if a breakingForce line already exists; @breakingForce = 200 will fail if no breakingForce line exists.\u003C/p\u003E\n"},{"CreatedByName":"TheDude","CreatedById":45158,"CreatedDateTime":"2014-01-08T17:08:48Z","Content":"\n\u003Cp\u003EGreetings,\u003C/p\u003E\u003Cp\u003EI have several parts that I\u0027d like to remove and/or replace the some of the models that they\u0027re composed of. I assume adding a model would be straight forward as \u003C/p\u003E\u003Cp\u003E@PART[foo]:Final\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003EMODEL { bla bla bla bla}\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EHowever, Id\u0027 like to completly remove some models and replace others. Since the MODEL{} is in no particular order in the config files, I\u0027d need to search on the model name being loaded. \u003C/p\u003E\u003Cp\u003EBest regards,\u003C/p\u003E\u003Cp\u003EThe Dude\u003C/p\u003E\n"},{"CreatedByName":"velusip","CreatedById":60676,"CreatedDateTime":"2014-01-08T20:10:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003Evelusip it should be : \u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[RAPIER]\u003Cbr\u003E{       \u003Cbr\u003E    @maxTemp = 1800\u003Cbr\u003E    @MODULE[ModuleEnginesFX]:HAS[#engineID[AirBreathing]]\u003Cbr\u003E    {       \u003Cbr\u003E        @heatProduction = 300\u003Cbr\u003E    }\u003Cbr\u003E    @MODULE[ModuleEnginesFX]:HAS[#engineID[ClosedCycle]]\u003Cbr\u003E    {       \u003Cbr\u003E        @heatProduction = 250\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s one of the many variations I tried. While it would be nice if it worked that way, it doesn\u0027t. I\u0027m having a hard time following the the code, but I figure I\u0027ll start here and work backwards: \u003Ca href=\u0022https://github.com/sarbian/ModuleManager/blob/master/moduleManager.cs#L417\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/sarbian/ModuleManager/blob/master/moduleManager.cs#L417\u003C/a\u003E\u003C/p\u003E\n"}]}