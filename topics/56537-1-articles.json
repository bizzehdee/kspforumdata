{"TopicId":56537,"ForumId":18,"TopicTitle":"Facetrack NOIR","CreatedByName":"sacapuces","CreatedById":64360,"CreatedDateTime":"2013-12-17T21:00:16Z","PageNum":1,"Articles":[{"CreatedByName":"sacapuces","CreatedById":64360,"CreatedDateTime":"2013-12-17T21:00:16Z","Content":"\n\u003Cp\u003EHi,\u003C/p\u003E\u003Cp\u003EI\u0027ve been looking (without concrete solution so far) for ways to use facetrack noir with kerbal. Has anyone done this? Is it even possible?\u003C/p\u003E\u003Cp\u003EThank you.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-12-18T01:38:44Z","Content":"\n\u003Cp\u003Eprobibly can be made to work. might require a mod though.\u003C/p\u003E\u003Cp\u003Ee:\u003C/p\u003E\u003Cp\u003Eseems the api for the 3d mice is some proprietary hardware locked crap, so going through an emulation layer to provide a fake 3d mouse might be difficult (not that it hasn\u0027t been done before with trackir). joystick emulation doesn\u0027t work either because there is no absolute look axes you can bind them to (this is why trackir works in mechwarrior 2). we do have relative axes but if you look left for example, the camera will keep turning left, and if we center, it will just stop turning left, it wont go back to center. so thats not an option (unless you enjoy sore necks and nausea).\u003C/p\u003E\u003Cp\u003Eto get data out of the face tracking program, ftnoir has the option of using the freetrak api which is incredibly easy to use (you just need to export 4 functions and a struct from a dll), among other options (joystick emulation, its own api). but if you go with the freetrack api it also supports freetrack and trackir users (sort of, natural point made them take down that version, but you can still get it) out of the box.\u003C/p\u003E\u003Cp\u003Eyou still need to get the data into the game though, and apply it to the in game camera. you could do this with a plugin. i actually attempted this a long time ago. unfortunately i didnt have any experience with c# or unity so what i did was a dirty hack involving the hull cam source and this cs file that i wrote (im calling it public domain):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003E//using System.Collections.Generic;\u003Cbr\u003E//using System.Linq;\u003Cbr\u003E//using System.Text;\u003Cbr\u003Eusing System.Runtime.InteropServices;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace FreeTrack\u003Cbr\u003E{\u003Cbr\u003E    public class FreeTrackClient\u003Cbr\u003E    {\u003Cbr\u003E        //a struct for the freetrack data to go\u003Cbr\u003E        [StructLayout(LayoutKind.Sequential)]\u003Cbr\u003E        private struct FTData\u003Cbr\u003E        {\u003Cbr\u003E            public int dataid;\u003Cbr\u003E            public int camwidth, camheight;\u003Cbr\u003E            public Single Yaw, Pitch, Roll, X, Y, Z;\u003Cbr\u003E            public Single RawYaw, RawPitch, RawRoll;\u003Cbr\u003E            public Single RawX, RawY, RawZ;\u003Cbr\u003E            public Single x1, y1, x2, y2, x3, y3, x4, y4;\u003Cbr\u003E        }\u003Cbr\u003E        //do imports\u003Cbr\u003E        [DllImport(\u0022FreeTrackClient.dll\u0022)]\u003Cbr\u003E        private static extern bool FTGetData(ref FTData data);\u003Cbr\u003E        [DllImport(\u0022FreeTrackClient.dll\u0022)]\u003Cbr\u003E        private static extern string FTGetDllVersion();\u003Cbr\u003E        [DllImport(\u0022FreeTrackClient.dll\u0022)]\u003Cbr\u003E        private static extern void FTReportName(Int32 name);\u003Cbr\u003E        [DllImport(\u0022FreeTrackClient.dll\u0022)]\u003Cbr\u003E        private static extern string FTProvider();\u003Cbr\u003E\u003Cbr\u003E        //a bool to check if were inited\u003Cbr\u003E        private static bool ftInited;\u003Cbr\u003E        //a place to count consecutive update failures (for reset)\u003Cbr\u003E        private static int ftBadUpdates;\u003Cbr\u003E        public static int maxBadUpdates; //this is pulbic for tweaking purposes\u003Cbr\u003E        //data frame from the dll goes here\u003Cbr\u003E        private static FTData ftData;\u003Cbr\u003E        //a place to store output values\u003Cbr\u003E        private static Vector3 ftOffset;\u003Cbr\u003E        private static Quaternion ftRotate;\u003Cbr\u003E\u003Cbr\u003E        //the following vars and the four functions that follow are the external interface\u003Cbr\u003E        //you must init the code somewhere with initFreeTrack(), this returns a bool which wen true indicates a successful init, fail otherwise\u003Cbr\u003E        //you may then set the constraint variables and scalers (you can do this at any time)\u003Cbr\u003E        //then you must call updateFreeTrack() to update local position and rotation. its return is the same as initFreeTrack(). note that if the update fails it will still return true.\u003Cbr\u003E        //after that you can get the local camera rotation with getRotation(), which returns a quaternion\u003Cbr\u003E        //and you can get the local camera offset with getOffset(), which returns a vector\u003Cbr\u003E\u003Cbr\u003E        //constraints/scalers. can be changed at any time\u003Cbr\u003E        public static Vector3 minOffset, maxOffset;\u003Cbr\u003E        public static Vector3 minEuler, maxEuler;\u003Cbr\u003E        public static float transFactor, rotFactor;\u003Cbr\u003E\u003Cbr\u003E        //init function (call before using the class)\u003Cbr\u003E        public static bool init(){\u003Cbr\u003E            //tell the console what were doing\u003Cbr\u003E            UnityEngine.MonoBehaviour.print(\u0022Attempting to init FreeTrack\u0022);\u003Cbr\u003E            ftBadUpdates = 0;\u003Cbr\u003E            maxBadUpdates = 5;\u003Cbr\u003E\u003Cbr\u003E            //set things to zero\u003Cbr\u003E            ftOffset = new Vector3(0.0f, 0.0f, 0.0f);\u003Cbr\u003E            ftRotate = Quaternion.Euler(0.0f, 0.0f, 0.0f);\u003Cbr\u003E            //default constraints and scalers\u003Cbr\u003E            minOffset = new Vector3(-0.4f, -0.4f, 0.0f);\u003Cbr\u003E            maxOffset = new Vector3(0.4f, 0.4f, 0.4f);\u003Cbr\u003E            minEuler = new Vector3(-180.0f, -180.0f, -180.0f);\u003Cbr\u003E            maxEuler = new Vector3(180.0f, 180.0f, 180.0f);\u003Cbr\u003E            transFactor = 0.02f;\u003Cbr\u003E            rotFactor = 50.0f;\u003Cbr\u003E\u003Cbr\u003E            //output create output struct\u003Cbr\u003E            ftData = new FTData();\u003Cbr\u003E\u003Cbr\u003E            //handel no dll scenario\u003Cbr\u003E            try\u003Cbr\u003E            {\u003Cbr\u003E                ftInited = FTGetData(ref ftData);\u003Cbr\u003E            }\u003Cbr\u003E            catch (DllNotFoundException e)\u003Cbr\u003E            {\u003Cbr\u003E                UnityEngine.MonoBehaviour.print(\u0022 Error: \u0022\u002Be);\u003Cbr\u003E                ftInited = false;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            if (!ftInited)\u003Cbr\u003E            {\u003Cbr\u003E                UnityEngine.MonoBehaviour.print(\u0022 Cannot init. No FreeTrack client or error.\u0022);\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                UnityEngine.MonoBehaviour.print(\u0022 Init successful!\u0022);\u003Cbr\u003E                UnityEngine.MonoBehaviour.print(\u0022 Provider: \u0022 \u002B FTProvider());\u003Cbr\u003E                UnityEngine.MonoBehaviour.print(\u0022 DLL Version: \u0022 \u002B FTGetDllVersion());\u003Cbr\u003E                //report the game\u0027s id to freetrack (this doesnt work and causes an exception)\u003Cbr\u003E                FTReportName(3431); //escape velocity of kerbin, lol\u003Cbr\u003E            }\u003Cbr\u003E            return ftInited;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        //update function call it to refresh ftOffset and ftRotate. the return indicates if the interface has been inited, not if there was an update\u003Cbr\u003E        public static bool update() {\u003Cbr\u003E            //dont call a bunch of null functions\u003Cbr\u003E            if (ftInited)\u003Cbr\u003E            {\u003Cbr\u003E                //load data into the struct\u003Cbr\u003E                if (FTGetData(ref ftData))\u003Cbr\u003E                {\u003Cbr\u003E                    ftBadUpdates = 0;\u003Cbr\u003E                    //constrain eulers to within set constraints\u003Cbr\u003E                    Vector3 ftEuler = new Vector3(-ftData.Pitch, -ftData.Yaw, ftData.Roll);\u003Cbr\u003E                    ftEuler *= rotFactor;\u003Cbr\u003E                    if (ftEuler.x \u0026gt; maxEuler.x) ftEuler.x = maxEuler.x; else if (ftEuler.x \u0026lt; minEuler.x) ftEuler.x = minEuler.x;\u003Cbr\u003E                    if (ftEuler.y \u0026gt; maxEuler.y) ftEuler.y = maxEuler.y; else if (ftEuler.y \u0026lt; minEuler.y) ftEuler.y = minEuler.y;\u003Cbr\u003E                    if (ftEuler.z \u0026gt; maxEuler.z) ftEuler.z = maxEuler.z; else if (ftEuler.z \u0026lt; minEuler.z) ftEuler.z = minEuler.z;\u003Cbr\u003E                    //convert to quat\u003Cbr\u003E                    ftRotate = Quaternion.Euler(ftEuler);\u003Cbr\u003E\u003Cbr\u003E                    //constrain offset so it stays within a unit box (this box should probibly be defined in the part)\u003Cbr\u003E                    ftOffset = new Vector3(-ftData.X, ftData.Y, -ftData.Z);\u003Cbr\u003E                    ftOffset *= transFactor; //scale it, it seems way over sensitive \u003Cbr\u003E                    if (ftOffset.x \u0026gt; maxOffset.x) ftOffset.x = maxOffset.x; else if (ftOffset.x \u0026lt; minOffset.x) ftOffset.x = minOffset.x;\u003Cbr\u003E                    if (ftOffset.y \u0026gt; maxOffset.y) ftOffset.y = maxOffset.y; else if (ftOffset.y \u0026lt; minOffset.y) ftOffset.y = minOffset.y;\u003Cbr\u003E                    if (ftOffset.z \u0026gt; maxOffset.z) ftOffset.z = maxOffset.z; else if (ftOffset.z \u0026lt; minOffset.z) ftOffset.z = minOffset.z;\u003Cbr\u003E                }\u003Cbr\u003E                else\u003Cbr\u003E                {\u003Cbr\u003E                    ftBadUpdates\u002B\u002B;\u003Cbr\u003E                    //if this fails too many times assume the markers are off the camera and center everything\u003Cbr\u003E                    if (maxBadUpdates \u0026gt;= 0 \u0026amp;\u0026amp; ftBadUpdates \u0026gt; maxBadUpdates)\u003Cbr\u003E                    {\u003Cbr\u003E                        ftOffset = new Vector3(0.0f, 0.0f, 0.0f);\u003Cbr\u003E                        ftRotate = Quaternion.Euler(0.0f, 0.0f, 0.0f);\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            return ftInited;\u003Cbr\u003E        }\u003Cbr\u003E        //get rotation\u003Cbr\u003E        public static Quaternion getRotation() {\u003Cbr\u003E            return ftRotate;\u003Cbr\u003E        }\u003Cbr\u003E        //get offset\u003Cbr\u003E        public static Vector3 getOffset() {\u003Cbr\u003E            return ftOffset;\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eunfortunately my hack didnt age well and it stopped working as soon as the next ksp version came out. others have tried to make it work but no success. i presume that squad added some kind of security patch to the plugin loader that prevents loading external binaries but i dont know.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-18T02:49:35Z\u0022 title=\u002212/18/2013 02:49  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 18, 2013\u003C/time\u003E by Nuke\u003C/strong\u003E\n\u003C/span\u003E\n"}]}