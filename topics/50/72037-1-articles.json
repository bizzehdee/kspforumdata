{"TopicId":72037,"ForumId":50,"TopicTitle":"Docking and Vessel Type Rules (0.23.5)","CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-11T03:09:52Z","PageNum":1,"Articles":[{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-11T03:09:52Z","Content":"\n\u003Cp\u003EThis question of docking priorities and ship hierarchy has been floating around for a little while and came up again recently. While it may not be detrimental to the design of your ship, I\u0027ve explored the docking and undocking rules and will try to document them here. They\u0027re actually pretty simple from what I\u0027ve found so far. They are far less complex than the Fuel Flow rules.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003EDocking Parent/Child Establishment Rules (Root Vessel)\u003C/strong\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EWhen two ships dock, the rules are evaluated in ascending order (1, 2, 3...). If a rule is invoked, then the parent/child relationship is established and the VESSEL\u0027s heirachy is established. The choice of what becomes parent/child is a matter of three layers of priority. I\u0027m not certain of all these rules or where the thresholds are, but this is what some of my testing has shown.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 1\u003C/strong\u003E: Parent status does not depend on which vessel is \u0022in control\u0022 and which is the \u0022target\u0022 at the time of docking. The vessels become parent or child based on the rules below.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 2\u003C/strong\u003E: If the Vessel Types differ, parent status is assigned to the vessel with a higher priority Type.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Type priority order from lowest to highest is: Debris, Probe, Rover, Lander, Ship, Station, Base.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Easy way to remember priority order: the priority corresponds to the map filter order (buttons at top, from left to right).\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E The Vessel Type used is whatever is currently set via the \u0022Rename Vessel\u0022 menu.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 3\u003C/strong\u003E: If two Vessels are of the same type, the \u0022larger\u0022 Vessel becomes the parent.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E The \u0022Larger\u0022 vessel is the vessel with the highest part count.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 4\u003C/strong\u003E: If two Vessels are of the same type and size, the first one listed in the save file becomes the parent.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Generally, the first vessel in the save file will be the first one launched. However, if previous docking/undocking/decoupling was performed, order in the save file is established per the undocking/decoupling rules.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 5\u003C/strong\u003E: The child\u0027s root part ID and vessel type is stored by the parent. The child is then shuffled and re-rooted to connect via its docking port. The child\u0027s docking port then takes on the parent vessel\u0027s docking port as it\u0027s parent.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003EUndocking/Decoupling Vessel Type Rules\u003C/strong\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 1\u003C/strong\u003E: If the vessels were previously two separate vessels, the child vessel reverts to its previous Name and Type, regardless of re-naming or re-Typing of the parent.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 2\u003C/strong\u003E: If the vessels have been connected since launch:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E The vessel containing the original root part is the parent vessel and retains the Parent Name and Type. (There are a few instances where the parent is renamed with [Type] appended.)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E The child vessel is automatically assigned a Type via the \u0022Vessel Type at Time of Launch\u0022 rules. (Type preference is given to the highest priority vessel controller.)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E The child vessel is automatically assigned a Name in the form \u0022Parent\u0027s Name\u0022 \u002B [Type]. (If the parent is named \u0022Ares\u0022, then a separated probe core is named \u0022Ares Probe\u0022)\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 3\u003C/strong\u003E: The child vessel\u0027s MET timer resets after decoupling/undocking.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 4\u003C/strong\u003E: \u0022If Focus\u0022 shifts to the craft per the criteria below. This criteria is shaky, and sensitive to a lot of \u0022what ifs?\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E \u0022Control From Here\u0022 overrides all other priorities. Focus will stay with the vessel that has the \u0022Control\u0022 part, regardless of root part or if it has a valid control ability.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Any manned vessels have priority over unmanned and uncontrolled vessels. (Here, unmanned means vessels that could contain kerbals, but don\u0027t. Such as an empty Mk1 Pod.)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Probe cores have priority over unmanned vessels and uncontrolled parts. Except if the Unmanned pod recently had a Kerbal in it, then it will take focus.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E For two craft with the same priority (such as splitting two Mk1 pods, or splitting two OKTO2 probe cores), focus stays with vessel containing the original the root part.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003EVessel Type at time of Launch\u003C/strong\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s probably easier to understand the Vessel Type during initial decoupling/undocking operations by exploring the rules for how KSP determines the default Type for a vessel.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 1\u003C/strong\u003E: As before, Type priority order from lowest to highest is: Debris, Probe, Rover, Lander, Ship, Station, Base. If more than one of the rules below is present, the Type is set by the highest priority controller.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 2\u003C/strong\u003E: If a vessel has no source of control, it is assigned Type = Debris.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 3\u003C/strong\u003E: If a vessel uses a probe core (or rover body) for control, it is assigned Type = Probe.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 4\u003C/strong\u003E: If a vessel uses a lander can or cupola for control, it is assigned Type = Lander.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E It doesn\u0027t matter if the crew stations are unoccupied.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERule 5\u003C/strong\u003E: If a vessel uses a command pod or cockpit for control, it is assigned Type = Ship.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E It doesn\u0027t matter if the crew stations are unoccupied.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E- You can find and edit the default Type in each component\u0027s part.cfg file. Look for the line similar to \u0022vesselType = Lander\u0022 and change it to the desired default type. The type name is case sensitive.\u003C/p\u003E\u003Cp\u003E- Incidentally, the game loads a Kerbal into the first \u0022Lander\u0022 or \u0022Ship\u0022 that it comes to in the Vessel\u0027s hierarchy, regardless of priority.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-11T18:32:29Z\u0022 title=\u002205/11/2014 06:32  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 11, 2014\u003C/time\u003E by Claw\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Captain Sierra","CreatedById":74666,"CreatedDateTime":"2014-05-11T03:19:07Z","Content":"\n\u003Cp\u003EA fun fact about rules 4 and 5 for vessel type is that it is defined in the .cfg and can be edited.\u003C/p\u003E\u003Cp\u003EWhile the stock cupola pod reads as follows:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EvesselType = Lander\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMine has been edited to read:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EvesselType = Station\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis makes cupolas define crafts as stations for me, given that the cupola is used almost exclusively for stations and multi-part ships in my space program.\u003C/p\u003E\u003Cp\u003ERandom tidbit over.\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-11T03:28:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Captain Sierra\u0022 data-cite=\u0022Captain Sierra\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003ERandom tidbit over.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, and added. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Pecan","CreatedById":96332,"CreatedDateTime":"2014-05-11T16:53:06Z","Content":"\n\u003Cp\u003ENice work Claw, and useful info Capt. :-)\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-05-11T17:34:33Z","Content":"\n\u003Cp\u003EGood stuff. This should give me enough to be getting on with for the simulated undocking and redocking code in my mission planner. I\u0027ll let you know if I find any cases that break the rules or if the coding of the rules sheds any light on how they are probably implemented in the core game. I need to do some KSP/Unity UI research now to work out how it can actually be presented...\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-11T18:28:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pecan\u0022 data-cite=\u0022Pecan\u0022\u003E\u003Cdiv\u003ENice work Claw, and useful info Capt. :-)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks Pecan. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Padishar\u0022 data-cite=\u0022Padishar\u0022\u003E\u003Cdiv\u003EGood stuff. This should give me enough to be getting on with for the simulated undocking and redocking code in my mission planner. I\u0027ll let you know if I find any cases that break the rules or if the coding of the rules sheds any light on how they are probably implemented in the core game. I need to do some KSP/Unity UI research now to work out how it can actually be presented...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would be excellent. All updated info is good info. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve done quite a few experiments, but quite frankly they\u0027re relatively uninteresting. I\u0027m still deciding how best to show any examples that are useful beyond simply illustrating the point.\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-05-11T22:28:49Z","Content":"\n\u003Cp\u003EI have just posted an update to my \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/72062-Test-of-continuing-KER-developments-0-23-5\u0022 rel=\u0022external nofollow\u0022\u003Edevelopment version\u003C/a\u003E of KER that includes the button in the flight engineer tweakable I mentioned in the other thread that dumps the part tree to output_log.txt. The info includes the vessel name and type and also the vesselType and initialVesselName property of every part (as well as all sorts of info important to the deltaV simulation code). I\u0027m going to add some more info to it (showing the original root part after docking etc.) as soon as I get a bit more time...\u003C/p\u003E\n"},{"CreatedByName":"Bloojay","CreatedById":162865,"CreatedDateTime":"2017-07-07T09:41:25Z","Content":"\n\u003Cp\u003E\nIs this information still relevant or has it changed?\n\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2017-07-07T12:48:35Z","Content":"\n\u003Cp\u003E\nThere is a fairly high chance that the behaviour has changed at some point since 0.23.5 but I don\u0027t know for definite. \u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/100668-claw/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022100668\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/100668-claw/\u0022 rel=\u0022\u0022\u003E@Claw\u003C/a\u003E\u00A0hasn\u0027t been around on the forum for quite a while but it should be quite easy to run tests to confirm the rules (think along the lines of rovers with docking ports to make the tests easier)...\n\u003C/p\u003E\n"}]}