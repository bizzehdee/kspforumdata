{"TopicId":77627,"ForumId":35,"TopicTitle":"Combining efforts on proper mod management framework / tools / platform","CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-14T19:10:34Z","PageNum":1,"Articles":[{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-14T19:10:34Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003EPost below is mostly outdated. Hit the following link to see an up-to-date version:\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/85989-Combining-efforts-on-proper-mod-management-framework-tools-platform?p=1378713\u0026amp;viewfull=1#post1378713\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/85989-Combining-efforts-on-proper-mod-management-framework-tools-platform?p=1378713\u0026amp;viewfull=1#post1378713\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E---\u003C/p\u003E\u003Cp\u003EHey,\u003C/p\u003E\u003Cp\u003Eas for the immense number of mods out there, there definitely is a need for proper mod management tools and platforms. There has been are quite a few attempts to create such tools / platforms (\u003Ca href=\u0022\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-avc.cybutek.net/\u003C/a\u003E, \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/26031\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/26031\u003C/a\u003E, \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/13155\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/13155\u003C/a\u003E, to name a few). To me, neither of them satisfy my needs for such a tool. In my opinion mod management should include:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Eeasy installation\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003Evia built-in search\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Evia copy \u0026amp; paste of mod URL\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]reasy removal\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Evia simple [remove] button\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]easy version control\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Einstall specific version of selected mod\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]dependency management\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Eno more re-distributed third-party mods included in mod\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003Emodule manager for example is being shipped in different versions by many mods\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]automatic installation / update of dependencies\u003C/p\u003E\u003Cp\u003E[*]automatic removal of auto-installed dependencies\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]unified mod directory structure\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Ecurrently, each mod seems to have its own directory structure, instead of one standard (GameData/[Author]/[Mod]/{Plugins,PluginData,Parts,Flags,...})\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027d like to start such a project, working hand-in-hand with the mod/content developers, provided that I can find some talented, professional-working developers here.\u003C/p\u003E\u003Cp\u003EI\u0027m planning to use git as foundation and build upon that (similar to \u003Ca href=\u0022https://github.com/kerpak/Kerpak\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/kerpak/Kerpak\u003C/a\u003E, but with unified, standardized structures). The actual content (the mod) is then to be stored on a git hosting provider of your choice, as long as they support anonymous, direct access to files.\u003C/p\u003E\u003Cp\u003EBy using git for both, development and content distribution users can see what changed, when and why. I\u0027m currently using about 100\u002B mods, and it is a pain in the ass to update those whenever a new version of KSP gets released. Mostly because I do not really know which files came from which mod and what changed.\u003C/p\u003E\u003Cp\u003EI want the original developers to have the option to easily opt-in to this management solution, or, if they themselves do not want to change the way they work, let someone else maintain a ported version of their mod and continually merge new versions into the ported version. \u003C/p\u003E\u003Cp\u003EOne problem will be unlicensed content. We\u0027d have to find a way to support unlicensed content, without violating the copyright of the original author. I thought about some kind of meta-packages containing all the information needed by the mod manager application, as well as a link to the original source. This way (I think) we would not violate the copyright and could still integrate non-licensed work.\u003C/p\u003E\u003Cp\u003EAnother point would be to further integrate mods like CLS into other mods by providing ModManager configuration files. By Using GitHub, that could be done by a simple pull-request.\u003C/p\u003E\u003Cp\u003EAs for the framework: It\u0027s also a pain to debug most mods, because they do not add log-prefixes to their log entries. This way I get a ton of log messages which I cannot easily find out which mod caused them. My favorite message is \u0022[EXC] NullReferenceException: Object reference not set to an instance of an object\u0022 on which I spent a whole weeks to find out which mod caused this message, because It only occurs when some special conditions are met... I\u0027d like to fix that by patching the original sources and replacing all the mod\u0027s logging calls by proper ones, including mod name and line of code. Either in cooperation with the original developers, or as redistribution under the terms of the respective licenses.\u003C/p\u003E\u003Cp\u003EAs for the size of this project and my limited available time, I\u0027d need at least 3 or 4 supporters, helping with development and maintenance.\u003C/p\u003E\u003Cp\u003EIs there any interest here in such a solution? I\u0027d really like to combine efforts with some other ModManagement solutions and build upon that, if there is any interest. No need to re-invent the wheel over and over again.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T23:51:15Z\u0022 title=\u002208/27/2014 11:51  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"dudleypippin","CreatedById":38023,"CreatedDateTime":"2014-07-20T23:06:25Z","Content":"\n\u003Cp\u003EHaving recently taken an hour or two whipping up a bash-based mod manager for OSX/Linux, I\u0027ve determined that it\u0027s useless until the mod packagers standardize on file structure. Just downloading and looking through the zipfiles of ten different mods on curse was enough to make me give up in disgust. (My sample mod seemed ok, but then I grabbed one that included toolbar (which conflicted with the next that included a different version), and the next included a GameData folder instead of being a folder to include _in_ GameData, and then conflicting files named \u0022ReadMe.htm\u0022, etc., etc.) \u003C/p\u003E\u003Cp\u003EI assume the mod coders have discussed this; was there a consensus that they\u0027re working towards?\u003C/p\u003E\n"},{"CreatedByName":"dudleypippin","CreatedById":38023,"CreatedDateTime":"2014-07-20T23:51:28Z","Content":"\n\u003Cp\u003EAh, here\u0027s another attempt at what you\u0027re suggesting: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/64058-PROPOSAL-Package-Manager-style-for-KSP-Mods\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/64058-PROPOSAL-Package-Manager-style-for-KSP-Mods\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ETo be honest, the pushback from the mod authors in that thread is clear:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAnd besides that, the main reason there are multiple standards is that everyone thinks that their standard is the best one. It\u0027s not laziness, it\u0027s modders choosing what they perceive to be the best method of organizing things.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eand:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E...but the system we have now is already ideal in most ways\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere\u0027s also disbelief that trolling through zipfiles and figuring out the important bits and what goes where is something to be improved upon.\u003C/p\u003E\u003Cp\u003EGood luck!\u003C/p\u003E\u003Cp\u003EI think I\u0027m going to go give up and spend an hour getting all the mods set up so I can finally go play .24 a bit. Looking forward to doing it all again when .25 comes out! ($DIETY forbid I actually try to determine what\u0027s been updated since I\u0027ve installed them...)\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-23T20:14:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022dudleypippin\u0022 data-cite=\u0022dudleypippin\u0022\u003E\u003Cdiv\u003E[...] I\u0027ve determined that it\u0027s useless until the mod packagers standardize on file structure [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s why I\u0027m aiming to create a mod repository. Mods hosted there will have to follow certain rules on directory structure, providing a readme-file, a proper license, etc.\u003C/p\u003E\u003Cp\u003EWith my proposed concept the Mod-developers would not need to change anything on their side, as long as they follow some kind of standard in their releases.\u003C/p\u003E\u003Cp\u003EThen we could create simple mod-specific makefiles compiling the mods and creating the standardized package file which then gets uploaded to the repo.\u003C/p\u003E\u003Cp\u003EEven when they change standard from time to time, all we\u0027d need to do is update the makefile accordingy.\u003C/p\u003E\u003Cp\u003EIn combination with git we\u0027d always see what changed on developer-side, and what changed on repo-side between versions.\u003C/p\u003E\u003Cp\u003EAlso, we could re-distribute modified/patched versions of mods and send pull-requests/patches upstream to the original developers.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEdit:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThis is how such a repo could look like: \u003Ca href=\u0022https://github.com/ksprepo\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003ESo far it\u0027s just a proof of concept. It\u0027s not complete, everything (including commit history) is subject to change.\u003C/p\u003E\u003Cp\u003ESee DRE for an example: \u003Ca href=\u0022https://github.com/ksprepo/ksp_deadly-reentry\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo/ksp_deadly-reentry\u003C/a\u003E.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-23T20:20:00Z\u0022 title=\u002207/23/2014 08:20  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 23, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003Cbr\u003EAdded sample repo\n\u003C/span\u003E\n"},{"CreatedByName":"TheAlmightyOS","CreatedById":105590,"CreatedDateTime":"2014-07-28T19:13:30Z","Content":"\n\u003Cp\u003EI agree with the concept. I do not believe it will catch on. At least, not without a significant show of force by Squad.\u003C/p\u003E\u003Cp\u003EAt my work I deal with developers. Great people till you start telling them what to do. They get it in their head that they know EXACTLY what the end user wants or the best way label their code. Out of 13 Devs, they each have the RIGHT way to do things and everyone else is wrong. Then when something goes wrong it\u0027s the users fault, every time. And Modders are WORSE. Once again. GREAT people. Some of them downright awesome. Start telling them they must do something that is not required by the program and they resist \u003C/p\u003E\u003Cp\u003EThere IS a solution to this: FORCE STANDARDIZATION AT THE PROGRAM LEVEL. They will moan and cry and throw their temper-tantrums. But in the end, almost all mods will conform to minimum set of standards and most of the headaches will go away. \u003C/p\u003E\u003Cp\u003EIMHO, I do not feel like a Repo is a way to go about it. Don\u0027t get me wrong, I am a \u0027nix guy myself and think repo\u0027s are an awesome way to keep your system (or program) up to date. And if you could GET the modders to use it and someone could code some sort of mod organizer/updater then it would be perfect for KSP. BUT: You got to get the moders to use it\u003C/p\u003E\u003Cp\u003ERight now we got ~500 mods in the forums (just a quick and dirty query to get that number. don\u0027t know how many of them are active), another ~200 on \u003Ca href=\u0022http://www.curse.com/ksp-mods/kerbal\u0022 rel=\u0022external nofollow\u0022\u003ECurse\u003C/a\u003E, 37 @ github \u003Ca href=\u0022https://github.com/ksprepo\u0022 rel=\u0022external nofollow\u0022\u003EKSP Mod Repository\u003C/a\u003E, and 4 have found their way to the \u003Ca href=\u0022http://www.nexusmods.com/kerbalspaceprogram/?\u0022 rel=\u0022external nofollow\u0022\u003ENexus\u003C/a\u003E (wtf?\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E). There is another site out there too I just can\u0027t find it. Now, a lot of these numbers are replications such as a mod author posting to the forum, github and curse, still you can see for yourself the massive disconnect. We got modders posting everywhere \u003C/p\u003E\u003Cp\u003EIt\u0027s not WHERE that we need to change. It\u0027s the HOW. You make your repo, put in the requirements for a successful submission and then....what? the devs that don\u0027t like your way of doing things will just use another way to submit their mod. What is needed is end point changes in how mods are installed and maintained in KSP and that has to happen at Squad\u0027s level. It does not have to be much, a file required in each folder under GAMEDATA that has the mod information in the correct format would suffice.\u003C/p\u003E\u003Cp\u003EBut, unfortunately, all this is talk and not even productive talk. Nearly everyone looks at the current situation and knows it\u0027s no where near ideal but until we can get someone from Squad to sit in on this convo and actually hammer out something that would work for 84.7% of the community I foresee this situation getting worse. \u003C/p\u003E\u003Cp\u003EHowever, something DOES need to be done\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-07-28T21:26:28Z","Content":"\n\u003Cp\u003EI\u0027m workin (rlly slowly) on something similar. But my idea is little different. I do not think we can force modders to use any standards. My idea is to use json files with all mod informations and directory structure (example: where in zip is GameData dir) and direct link to download mod (dropbox etc.) This is quick dirty example of package json file \u003Ca href=\u0022http://pastebin.com/1FWeC82Y\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/1FWeC82Y\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"TheAlmightyOS","CreatedById":105590,"CreatedDateTime":"2014-07-28T22:15:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI\u0027m workin (rlly slowly) on something similar. But my idea is little different. I do not think we can force modders to use any standards. My idea is to use json files with all mod informations and directory structure (example: where in zip is GameData dir) and direct link to download mod (dropbox etc.) This is quick dirty example of package json file \u003Ca href=\u0022http://pastebin.com/1FWeC82Y\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/1FWeC82Y\u003C/a\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk. That is a thought. But who is going to maintain the json files? You said yourself we can\u0027t force the modders to use any standards (and I agree) so who is left holding the bag?\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-07-29T12:09:16Z","Content":"\n\u003Cp\u003E@keks: what you propose is very close to Debian system in which some people (debian \u0022developpers\u0022, one or more people in a team) create packages from software made by some other people (typical example: the Linux kernel). Their duty is to care about source software, make a proper package (with all files needed for the system to work), check dependencies, compile the source if relevant, ... \u003C/p\u003E\u003Cp\u003EEven is this system, there is big flaws as some wants to rush their package(s) into a release and mess up with potentially a lot\u0027s of packages, worth example: wrong dependency on libc6 version.\u003C/p\u003E\u003Cp\u003EAnyway, it could be achieve for KSP modding except one huge item: licence. \u003C/p\u003E\u003Cp\u003ESquad team made them mandatory for add-ons, but most people seems to don\u0027t know exactly what\u0027s exactly it is and just pick a random one then they sometimes add their own terms outside the chosen license (like no redistribution allowed for a CC licensed contents) all of this just to say that you\u0027ll face a big wall of repulsing/opposing forces, some won\u0027t let you touch their mods in any way, some won\u0027t allow redistribution, some this some that, ... \u003C/p\u003E\u003Cp\u003EI\u0027m not stubborn and I\u0027m open to any system which could really make things easier for everyone, but I\u0027m not confident on getting any standard tool/system any time soon.\u003C/p\u003E\u003Cp\u003EPerhaps you can make people change their mind not by forcing them (the stick), but by showing them how much benefits they can get with it (the carrot).\u003C/p\u003E\n"},{"CreatedByName":"TheAlmightyOS","CreatedById":105590,"CreatedDateTime":"2014-07-29T14:07:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EPerhaps you can make people change their mind not by forcing them (the stick), but by showing them how much benefits they can get with it (the carrot).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat do you propose as the carrot? Not being argumentative, just curious about your POV. I personally see no benefit that could sway the current modding community into standardization.\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-07-29T15:21:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003EWhat do you propose as the carrot? Not being argumentative, just curious about your POV. I personally see no benefit that could sway the current modding community into standardization.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI didn\u0027t wrote anything on this because for now I have no idea on it, but keks mention \u0022forcing people\u0022 thing, which lead to more or less a failure. The carrot could be anything from more support from players, more \u0022reputation\u0022, better compatibilities over KSP version and dependencies, easier to find mods (=more use from community) if at some point, such system would be integrated to the official KSP launcher.\u003C/p\u003E\u003Cp\u003EStandardization can also lead to less work, looks at tools like dh-make-perl (a debian helper which almost \u0022convert\u0022 a perl module package into a debian package source), it\u0027s help a lot by doing a big part of the chore, following the idea, if we have a \u0022modgen\u0022 tool which:\u003C/p\u003E\u003Cp\u003Ewhen invoked like (example of a CLI tool)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Emodgen --name=\u0022myawesomemod\u0022 --version=\u002B0.24.2 --type=parts --archive=zip --dep=modulemanager\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E-create base directory structure\u003C/p\u003E\u003Cp\u003E-add a version control file (for use with KSP-AVC for example)\u003C/p\u003E\u003Cp\u003E-add a dummy readme\u003C/p\u003E\u003Cp\u003E-create a script to create an archive automatically\u003C/p\u003E\u003Cp\u003E-compile the plug-in automatically \u002B create an update script for KSP update (this script recompile against the specified KSP version, create the archive, add a dummy changelog entry, ...)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Emyawesomemod-files/\u003Cbr\u003E    GameData/\u003Cbr\u003E          myawesomemod/\u003Cbr\u003E                 Parts/\u003Cbr\u003E                      ...\u003Cbr\u003E     readme.txt\u003Cbr\u003E     myawesomemod.version\u003Cbr\u003E     modzip.sh (or bat or anything)\u003Cbr\u003E     ...\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThere is plenty of room to make modders life easier, just need to know what was the most boring tasks done I guess, and strike there.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-07-29T19:51:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003EOk. That is a thought. But who is going to maintain the json files? You said yourself we can\u0027t force the modders to use any standards (and I agree) so who is left holding the bag?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI assume that there will be people willing to help. If the package creation will be a simple of course. I think part of data in the json file can be generated automatically by the tool for creating packages. Maintainer will have to enter only some information.\u003C/p\u003E\u003Cp\u003EAnother thing is my idea helps to avoid problems with licensing. As long as mod is on hosting with direct links \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EDistributing a package with information about mod is not redistribution a mod itself \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-29T20:13:16Z\u0022 title=\u002207/29/2014 08:13  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 29, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-30T23:35:39Z","Content":"\n\u003Cp\u003EGood to see some discussion going on in here \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003E[...] You got to get the moders to use it [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003E[...] You make your repo, put in the requirements for a successful submission and then....what? the devs that don\u0027t like your way of doing things will just use another way to submit their mod [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOf course it would be great if we could get all the modders to use such a standardized system, but with my approach this is not necessary. As longs as we get \u003Cstrong\u003Esomeone\u003C/strong\u003E to maintain the mod, the original modder does not have to do anything at all. They can still use the forums for distribution, then some maintainer picks up the new version and updates the repo.\u003C/p\u003E\u003Cp\u003EAs already stated earlier, we could create some helper scripts to create and maintain mods. A simple makefile-style approach could eliminate the need for the modders to change their directory structures. We could redistribute their mods as-is and provide a build-script which puts everything in place.\u003C/p\u003E\u003Cp\u003EWe could even make these scripts easily customizable (GUI frontend, maybe) for the end-user. Let them select what they want and where they want it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003E[...]Even is this system, there is big flaws as some wants to rush their package(s) into a release and mess up with potentially a lot\u0027s of packages [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat should not be a problem at all. It would work like it does right now. We add dependencies, but we do not make them \u0027fixed\u0027. You will still have the option to install packages ignoring its dependencies. Just like dpkg/apt works under debian. I\u0027d also not maintain \u0027stable\u0027 branches. I\u0027d just host the releases, and let the end-user decide which version to install. We could of course provide a \u0027latest\u0027 branch, always pointing to the latest release.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003E[...] Anyway, it could be achieve for KSP modding except one huge item: licence. [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe do not necessarily need to redistribute the mod itself, if the license does not allow that. As already stated in my earlier post, we could provide meta-packages pointing to the original release (for example the download link on the forums) and just distribute additional meta-data, like dependencies, proper readme files, build-scripts, etc. This way we do not violate any copyright at all.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003E[...] \u003Cspan style=\u0022color:#333333;\u0022\u003EPerhaps you can make people change their mind not by forcing them (the stick), but by showing them how much benefits they can get with it (the carrot). \u003C/span\u003E[...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s the plan. That\u0027s why I aim to create a system in which the original authors \u003Cstrong\u003Edo not have to change anything\u003C/strong\u003E\u003Cstrong\u003E\u003Cstrong\u003E about how they develop / redistribute their mods, unless they want to. I aim to only \u003C/strong\u003E\u003C/strong\u003E\u003Cstrong\u003E\u003Cstrong\u003E\u003Cstrong\u003Eadd features\u003C/strong\u003E\u003C/strong\u003E\u003C/strong\u003E, not forcing to change anything related to mod development.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003E][...] but keks mention \u0022forcing people\u0022 thing, which lead to more or less a failure [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t remember writing anything about forcing anyone to do anything. In fact, that\u0027s the opposite of what I aim to do (see me initial post). In my opinion that\u0027s the reason why the other projects failed, because they tried to force modders into using their system. \u003Cstrong\u003EI do not want to do that\u003C/strong\u003E, I want a opt-in solution, which also enables the community to maintain packages themselves, if the original author does not want to.\u003C/p\u003E\u003Cp\u003EThe integration-part really only consists of maintaining a build-script which puts things in place, and pushing changes to the repo. That\u0027s it.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-07-31T11:40:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003E[*]currently, each mod seems to have its own directory structure, instead of one standard (GameData/[Author]/[Mod]/{Plugins,PluginData,Parts,Flags,...})\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027ll have a hard time making me adopt that one.\u003C/p\u003E\u003Cp\u003EPutting the issue of making modders agree on something aside, you\u0027re scheme look complex. You are far from the first to come up with a variation of the \u0022let\u0027s use something that works for linux distrib\u0022 theme. But most of those schemes require modders to use (CLI) tools that may not be available or easy to use on their platform. It\u0027s one more hoop to jump thru for people who learn modding...\u003C/p\u003E\u003Cp\u003EAs fo the end users... do you expect player who need a tutorial to launch the game in 6bit to use a CLI tool and install their dependency ?\u003C/p\u003E\n"},{"CreatedByName":"AlphaAsh","CreatedById":105348,"CreatedDateTime":"2014-07-31T13:58:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAt my work I deal with developers. Great people till you start telling them what to do. They get it in their head that they know EXACTLY what the end user wants or the best way label their code. Out of 13 Devs, they each have the RIGHT way to do things and everyone else is wrong. Then when something goes wrong it\u0027s the users fault, every time. And Modders are WORSE. Once again. GREAT people. Some of them downright awesome. Start telling them they must do something that is not required by the program and they resist.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis. If you\u0027re going to do anything like what is being proposed in this thread, you\u0027re going to have to have a front-end that modders will want to use and then a back-end that does what it is that you want it to do. And even then you\u0027ll not be able to automate everything in that back-end. Not possible. You absolutely will not get modders conforming to anything.\u003C/p\u003E\n"},{"CreatedByName":"TheAlmightyOS","CreatedById":105590,"CreatedDateTime":"2014-07-31T15:41:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AlphaAsh\u0022 data-cite=\u0022AlphaAsh\u0022\u003E\u003Cdiv\u003EThis. If you\u0027re going to do anything like what is being proposed in this thread, you\u0027re going to have to have a front-end that modders will want to use and then a back-end that does what it is that you want it to do. And even then you\u0027ll not be able to automate everything in that back-end. Not possible. You absolutely will not get modders conforming to anything.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are absolutely right. Modders will only change if A) They have to (program requirements change) or \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E They [darn] well please\u003C/p\u003E\u003Cp\u003EI did not have a chance to read though all the suggestions, but has anyone thought of an auto-publishing tool?\u003C/p\u003E\u003Cp\u003EThe modder would open the tool, type in the changes made this version (auto-appends the readme), drag the files into their appropriate sections, update other tidbits of information, press \u0022SEND\u0022 and BOOM: Forum updated. Curse updated. Kerbal Stuff updated. Add your location here - Updated. The program zips up the data in a specific, standard format and sends it out. All we would need are the API\u0027s which should be easy enough. There are programs that automate tasks on forums other websites all the time. I know I am making it sound easier than it is but I know this can be done.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-31T17:53:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EYou\u0027ll have a hard time making me adopt that one.\u003Cp\u003EPutting the issue of making modders agree on something aside, you\u0027re scheme look complex. You are far from the first to come up with a variation of the \u0022let\u0027s use something that works for linux distrib\u0022 theme. But most of those schemes require modders to use (CLI) tools that may not be available or easy to use on their platform. It\u0027s one more hoop to jump thru for people who learn modding...\u003C/p\u003E\u003Cp\u003EAs fo the end users... do you expect player who need a tutorial to launch the game in 6bit to use a CLI tool and install their dependency ?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot to be rude, but I think most of the people here did not even read (or maybe not understand) what I am proposing here. As already stated several times, I do not want to force modders into anything at all! I do not want to force you to adopt a specific way of development. I do not want you to use CLI tools. I do not want you to care at all unless you decide to do so.\u003C/p\u003E\u003Cp\u003EThe actual work would be done in one or multiple files providing some information, like what goes where, which license is used, which dependencies exist, link to original content ...\u003C/p\u003E\u003Cp\u003EAll someone (does not have to be the original developer at all) would have to do is maintain these meta-files.\u003C/p\u003E\u003Cp\u003EModders would still use their own workflow, their own tools, their own directory structure, ... and we would just provide kind of a management tool which puts things in place. When using such a tool the underlying structure does not matter anymore, and we\u0027d be fine with every mod using its own structure as long as there are no conflicts. Of course, I\u0027d like to standardize directory layouts, but that would cause several mods to break because of hard-coded paths. But we really do not need to do change the layout for my proposal to work. Thats the whole idea behind it - I do not want to change anything, instead I want to add features to existing content.\u003C/p\u003E\u003Cp\u003ESo lets say we have a mod named \u0022ModuleManager\u0022, and a mod \u0022SomeCrazyComplexMod\u0022:\u003C/p\u003E\u003Cp\u003EBy default MM only consists of a single file called \u0022modulemanager_[version].dll\u0022. Where as our imaginary \u0027SomeCrazyComplexMod\u0027 consists of several deeply nested directories and also ships a lot of unnecessary content for whatever reason. Additionally \u0027SomeCrazyComplexMod\u0027 changes directory structure every time a new release comes our, because the developer suffers from schizophrenia. \u003C/p\u003E\u003Cp\u003EWhen installing mods by hand, this kinda sucks, because you cannot simply drop in the new version. This would cause multiple versions MM being installed at the same time, and result in a corrupted \u0027SomeCrazyComplexMod\u0027 installation.\u003C/p\u003E\u003Cp\u003ESo you will have to go through each mod and figure out what changed and what goes where manually, every time you update your mods. In my case, I have to update over 100 mods... Last time I updated them I spend a whole week updating them, as well as hunting down incompatibilities. That\u0027s why I didn\u0027t update to .24 yet, because it\u0027s just a pain in the ass...\u003C/p\u003E\u003Cp\u003ESo with my proposed solution we would provide a file \u0027meta.yaml\u0027 with the following contents:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/ksprepo/ksp_module-manager/blob/673288e1f651d5ecef20320da15f9f78e10c6318/meta.yaml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo/ksp_module-manager/blob/673288e1f651d5ecef20320da15f9f78e10c6318/meta.yaml\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIn addition to that, we would provide information where the files go:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efilemap:\u003Cbr\u003E  - source: \u0027/^modulemanager(\\.\\d\u002B)\u002B.dll$/i\u0027\u003Cbr\u003E    target: \u0027GameData/ModuleManager/Plugins/ModuleManager.dll\u0027\u003Cbr\u003E    sha512: fb48a92f6641191a0f580f3d73aa627b415ba1530f684ed1bd4dd3b14f9cfda4128ee0f7711ded6a93b27ad619fdbf91f5f9337a37787255c4ceaed541b6f8d4\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eor for \u0027SomeCrazyComplexMod\u0027 respectiely:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efilemap:\u003Cbr\u003E  - source: some/file\u003Cbr\u003E    target: GameData/SCCM/real_name\u003Cbr\u003E    sha512: aeae379a6e857728e44164267fdb7a0e27b205d757cc19899586c89dbb221930f1813d02ff93a661859bc17065eac4d6edf3c38a034e6283a84754d52917e5b0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  - source: very/deep/directory/structure/archive.zip\u003Cbr\u003E    unpack: GameData/SCCM/Parts/\u003Cbr\u003E    sha512: 2d58ba046462be04415ee0d39243c6893c36f3ae438b5b20fa32e5596227ead4c94599081acd1c603aad80088eb58b795683dde7e14c579e4bdae820e3628c33\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWe could also (as already stated earlyer) provide meta-packages for unlicensed content via the meta-files:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Efilemap:\u003Cbr\u003E  - download: https://ksp.sarbian.com/jenkins/job/ModuleManager/lastSuccessfulBuild/artifact/ModuleManager.2.2.0.dll\u003Cbr\u003E    source: \u0027/^modulemanager(\\.\\d\u002B)\u002B.dll$/i\u0027\u003Cbr\u003E    target: \u0027GameData/ModuleManager/Plugins/ModuleManager.dll\u0027\u003Cbr\u003E    sha512: aeae379a6e857728e44164267fdb7a0e27b205d757cc19899586c89dbb221930f1813d02ff93a661859bc17065eac4d6edf3c38a034e6283a84754d52917e5b0\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWe could also provide standardized version strings. Some people here use dates, others use numeric versions, others use alphanumeric versions, some use release candidates, etc... We could add a repo-specific version string (most likely M.m.p.b-v format) which exactly identifies a dependency version and add a map mapping these custom version to the official ones like so:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eversionmap:\u003Cbr\u003E  \u00272.2.0.0\u0027: 2.2.0\u003Cbr\u003E  \u00272.2.1.0\u0027: 2.2.1\u003Cbr\u003E  \u00272.2.1.2\u0027: 2.2.1b\u003Cbr\u003E  \u00272.2.1.2\u002Bksprepo-1\u0027: 2.2.1b\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis of couse may cause collisions, but then all we\u0027d have to do is bump the version by one. We also have the option to provide hotfixed versions (for example for future releases of KSP) for mods not updated yet (last example). See B9 for an example. When .23 came out it was quite a bit of work to find all the hints and workarounds spread all over the forums to get it working correctly.\u003C/p\u003E\u003Cp\u003EWe could provide a easy-to-use GUI for end-users in which they simply have to put the original mod-url (on the forums, on curse, on the repo, ...) and the tool then maps the entered URL to a mod repository. Downloads the meta-file and the actual mod, puts everything in place, checks dependencies, notifies the user of known compatibility issues, etc...\u003C/p\u003E\u003Cp\u003EThis could really become a very powerful tool for both, users and the modders. We could integrate automatic build, test and publish functions which automatically upload new version to the repo.\u003C/p\u003E\u003Cp\u003EMy goal is to create a tool that just works out of the box with no configuration effort at all. For both, modders as well as end-users.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-31T17:57:12Z\u0022 title=\u002207/31/2014 05:57  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 31, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TheAlmightyOS","CreatedById":105590,"CreatedDateTime":"2014-07-31T20:22:30Z","Content":"\n\u003Cp\u003EKeks, I am reading though what you want to do and, I am sorry, I am just not understanding what you are attempting to do. If I am reading your posts correctly, then in order for what you want to work each mod will need to be packaged with a meta.yaml file that may or may not be created by the modder. if it is not created by the modder it would be created by the user. \u003C/p\u003E\u003Cp\u003EAre you saying, that a group of individuals are going to create and maintain these meta.yaml files? A program? The IDEA of the file is fine but WHERE in the process is it being created?\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-31T23:40:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003EAre you saying, that a group of individuals are going to create and maintain these meta.yaml files? A program? The IDEA of the file is fine but WHERE in the process is it being created?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt would work the same way it works for package maintainers over at [insert linux distribution of your choice here]. When some individual (may be the modder himself or some random individual) decides to become the package maintainer, all he really has to do is create said meta file(s) and update them accordingly when the mod was updated. So the workflow could be as follows:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003Emodder creates a mod\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder creates a meta-file\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder uploads the mod including the meta file to [insert ksp repo name here]\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder updates his mod\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder updates the meta-file\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder uploads new version to [insert ksp repo name here]\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eor with an external maintainer it could be like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003Emodder creates a mod\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder uploads mod to [insert distribution channel here]\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer picks up released version\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer creates meta-file\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer uploads mod and/or meta-file to [insert ksp repo name here]\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder uploads new version of mod to [insert distribution channel here]\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer picks up updated version\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer updates meta-file\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer uploads new version to [insert ksp repo name here]\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo because we (ideally) only add meta-data, it really does not matter who maintains the mod, as long as the maintainer is somewhat reliable.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-01T10:38:39Z","Content":"\n\u003Cp\u003EThat\u0027s what I was thinking from the beginning. The ONLY standard of what we need to introduce it a standard packet metadata format. \u003C/p\u003E\u003Cp\u003EThen people will be able to use it in their projects (eg mod managers, packet generators, or even mods).\u003C/p\u003E\u003Cp\u003E-Package format should be discussed and approved by all interested persons.\u003C/p\u003E\u003Cp\u003E-It should be carefully thought out, so we did not have to modify it soon because it could cause a incompatibility of different tools.\u003C/p\u003E\u003Cp\u003E-In addition, these packages should be based on any known format, so it was easy to parse it in different programming languages \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9(I think about json or yaml but maybe you have better suggestions?)\u003C/p\u003E\u003Cp\u003EI\u0027m curious what you think \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EBTW. Sorry for my English if I made any mistake \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-01T20:00:29Z\u0022 title=\u002208/01/2014 08:00  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 1, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TheAlmightyOS","CreatedById":105590,"CreatedDateTime":"2014-08-01T17:19:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003ESo the workflow could be as follows:\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003Emodder creates a mod\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003Emodder creates a meta-file\u003C/span\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003Emodder uploads the mod including the meta file to [insert ksp repo name here]\u003C/span\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder updates his mod\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003Emodder updates the meta-file\u003C/span\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003Emodder uploads new version to [insert ksp repo name here]\u003C/span\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eor with an external maintainer it could be like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003Emodder creates a mod\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder uploads mod to [insert distribution channel here]\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer picks up released version\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer creates meta-file\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer uploads mod and/or meta-file to [insert ksp repo name here]\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emodder uploads new version of mod to [insert distribution channel here]\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer picks up updated version\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer updates meta-file\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emaintainer uploads new version to [insert ksp repo name here]\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk. now that I understand what you want to do I have to say that I do not agree that this will work. Once again, not trying to be argumentative. There are three major flaws I can see with this\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EMod Authors will not do this\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMod Authors post their mods to (at last count) 6\u002B different and district locations\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWhen you do have a team of dedicated maintainers checking everywhere \u002BMun for mods and uploading them into the repo, WHO is going to use said repo?! Like I said in #2, there are already 6\u002B locations to find mods. This repo would make 7\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI don\u0027t want to fight you cause I know deep down we want the same thing. But in my opinion this would create more chaos, not reduce it.\u003C/p\u003E\u003Cp\u003EIn my eyes, our only option (and yes, that is opinion again) is to fully back one of the currently used Mod hosts (my choice is Kerbal Stuff) and work on creating tools for devs/authors to produce standardized packages.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-01T19:59:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EMod Authors will not do this\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMod Authors post their mods to (at last count) 6\u002B different and district locations\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWhen you do have a team of dedicated maintainers checking everywhere \u002BMun for mods and uploading them into the repo, WHO is going to use said repo?! Like I said in #2, there are already 6\u002B locations to find mods. This repo would make 7\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1.At the beginning probably not, but over time may see the benefits of this solution.\u003C/p\u003E\u003Cp\u003E2 and 3. Most important mods first appears on the forum. In practice, maintainers must check only forum.\u003C/p\u003E\u003Cp\u003EWe will not upload mods to the repository. We will upload only small files containing information about the mods. Mods will be downloaded from its orginal location.\u003C/p\u003E\u003Cp\u003EThe repository will be used by mod install/update tool.\u003C/p\u003E\n"},{"CreatedByName":"TheAlmightyOS","CreatedById":105590,"CreatedDateTime":"2014-08-01T20:43:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003E1.At the beginning probably not, but over time may see the benefits of this solution.\u003Cp\u003E2 and 3. Most important mods first appears on the forum. In practice, maintainers must check only forum.\u003C/p\u003E\u003Cp\u003EWe will not upload mods to the repository. We will upload only small files containing information about the mods. Mods will be downloaded from its orginal location.\u003C/p\u003E\u003Cp\u003EThe repository will be used by\u003Cstrong\u003E mod install/update tool\u003C/strong\u003E.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk. I am with ya so far. I still have a few issues with your plan but for the sake of frying bigger fish let\u0027s fast forward a bit\u003C/p\u003E\u003Cp\u003EIn your plan, you have a client side tool that connects to multiple points (repo, all various download points) to keep the user updated and to install (search for?) mods.\u003C/p\u003E\u003Cp\u003EWhy not take it just one step further...\u003C/p\u003E\u003Cp\u003EMake it a Mod Submitter/Installer/Updater tool! Someone mentioned offering the authors a carrot earlier and I can think of no bigger then a tool that uploads and updates their mods over multiple locations with a click of a button. The program would standardize the submission format, generate the info file and, basically, do all the leg work. All the Author would have to do is set up his or her account settings to the various web services when they first set up the app then add the updated information when they create a new mod. And then updates are a push button away.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-02T06:11:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003E[...]Make it a Mod Submitter/Installer/Updater tool [...] standardize the submission format, generate the info file and, basically, do all the leg work [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would ultimately be the result of having such a standardized, central repository. But as you already said, we cannot make modders use it. Maybe some will, but certainly not all of them. I wanted the repo to e opt-in, so people and modders \u003Cstrong\u003Ecan\u003C/strong\u003E use it if they want, but do not have to. We\u0027d still be compatible with manual installation, not break anything, but (as already stated earlier) offer additional features like dependency management, easy update, etc...\u003C/p\u003E\u003Cp\u003EI also already mentioned the possibility of integrating build/test/publish-tools as soon as we have managed to create some kind of stable environment (including a detailed specification).\u003C/p\u003E\u003Cp\u003EThere would really not much work for modders/maintainers to do to enable support. For most of the mods their basic structure does not change, so they would only need to create such a meta-file \u003Cstrong\u003Eonce\u003C/strong\u003E and in future only need to update the release version string as well as dependencies. Thats (ideally) two lines of a plaintext file to be changed and can easily be automated with most IDE\u0027s and a little scripting with will ultimately (if done right) result in no work for the modders at all.\u003C/p\u003E\u003Cp\u003EWe could also (at some point later) implement some kind of opt-in statistics and crash-report plugin. There already exists some statistics plugin here upon which we could build (given the author agrees to work together with us). It may be a great help for modders to actually get standardized crash report data (including OS, architecture, version, installed mods, external dependencies, logfile entries, ...) instead of some vaguely phrased reports on the forums like the good old \u0022it does not work.\u0022.\u003C/p\u003E\u003Cp\u003EOver time I\u0027d really like to make this a complete and overall consistent solution to all the modding problems we currently have. Publishing and installing mods could be as easy as pushing a single button and you are done.\u003C/p\u003E\u003Cp\u003EI\u0027d really like to work together with some of the modders here. Especially the some of the bigger names. At the end-user side it\u0027s pretty clear what we want to see, but I\u0027d also like to hear what features modders would like to see on their end. What features they would like to have and how things should be organized for them. For example would you like to see an external standalone application or a tool integrated with your IDE? Could we get at least some of you to agree on a standard directory format (it\u0027s really not that complicated to follow squad\u0027s proposed format and wrap it up inside a directory representing your namespace ...)? Would you like to have a \u0022publish\u0022 feature, automatically uploading your new release to all the distribution channels (any possible conflicts with terms of use here, we have to care about?)? I want your input and I want to create tools for \u003Cstrong\u003Eyou\u003C/strong\u003E, too! Not just the end-user.\u003C/p\u003E\u003Cp\u003ETo the modders:\u003C/p\u003E\u003Cp\u003EI think we can all agree on the fact that modding is a big mess right now. It works (kind of) but is definitely not even remotely comfortable for users, as well as modders, unless they have absolutely no external dependencies. You have a chance here to work together here, work with a team that listens to your advice and wishes. You certanly don\u0027t like the way it is right now, but you also seem not to want to change anything about it... Do you think the problem will go away on it\u0027s own? Cause It certainly will not unless \u003Cstrong\u003Esomeone\u003C/strong\u003E does something about it. Squad does not seem to do anything, and I\u0027m sure they have enough work on their own. So I don\u0027t think we will see anything from them any time soon. I know you don\u0027t want to change the way you develop (because \u0027your way of doing it is the best and the only way to do it right\u0027 ... blah blah everyone else is stupid blah - I\u0027m a developer myself \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E ) but the community would really benefit from working together, making life easier for everyone :-) - just my opinion on this topic.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-02T06:24:44Z\u0022 title=\u002208/02/2014 06:24  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 2, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-02T09:24:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheAlmightyOS\u0022 data-cite=\u0022TheAlmightyOS\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EMake it a Mod Submitter/Installer/Updater tool!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs keks said earlier such a tool will probably be created over time. If all goes well will be several (for different IDE and standalone)\u003C/p\u003E\u003Cp\u003EThe only problem I see here is that when writing such a tool would be needed support from web developers of mod websites (API that allows to upload mods)\u003C/p\u003E\u003Cp\u003EI\u0027m not sure if Curses has something like this \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-08-02T15:44:22Z","Content":"\n\u003Cp\u003E@keks: good plan, lot\u0027s of ambition, but be careful, too much ambition at the beginning may lead to messy development (want to go everywhere at once like a rover with 4 wheels, each one on a side of a square \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E ). Maybe a simple tool to start: create base directory tree \u002B dummy files according to some parameter like debian packaging tool, then step up the game with dependencies management (not an easy part) and so on.\u003C/p\u003E\u003Cp\u003EBeware of evil statistics gatherer and crash reporter, some noisy people don\u0027t like this (see the great controversy thread).\u003C/p\u003E\u003Cp\u003EFor plug-in author, a checker may be useful: check if a version is provided inside the dll info \u002B eventually check against some fields, like mod version and warn if there is mismatch. I guess \u0022auto\u0022 recompilation with a chosen KSP version may be a great tool too.\u003C/p\u003E\u003Cp\u003EAs a part creator only, I don\u0027t need so much, I even don\u0027t upload like crazy. But I have doubt about auto uploading, as it will need one module per website, and worth, check those websites (especially the commercial one like most of spaces providers) regularly for updates they don\u0027t talk about (quite like JDownloader tool which have tons of plug-in for almost each single one online storage website).\u003C/p\u003E\n"}]}