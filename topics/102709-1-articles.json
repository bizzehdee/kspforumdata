{"TopicId":102709,"ForumId":36,"TopicTitle":"KSP Modding noob with somewhat basic questions","CreatedByName":"wpatter6","CreatedById":140000,"CreatedDateTime":"2015-03-26T02:45:17Z","PageNum":1,"Articles":[{"CreatedByName":"wpatter6","CreatedById":140000,"CreatedDateTime":"2015-03-26T02:45:17Z","Content":"\n\u003Cp\u003EHi, I have been going through the tutorials I could find, and couldn\u0027t find info about a couple of items. My next step was to dig through the source of existing mods but I was thinking maybe someone on here could answer my questions more easily, so here goes.\u003C/p\u003E\u003Cp\u003EMy main question is how are people typically storing data on the client? I\u0027ve tried setting up using the SQLite as well as Newtonsoft.Json dlls but every time I fire up the game it throws an error. For SQLite it says \u0022[Exception]: FileNotFoundException: Could not load file or assembly \u0027System.Data.SQLite, Version=1.0.96.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139\u0027 or one of its dependencies.\u0022 For Newtonsoft.Json it says \u0022[Error]: AssemblyLoader: Exception loading \u0027KerbalFeels\u0027: System.Reflection.ReflectionTypeLoadException: The classes in the module cannot be loaded.\u0022 \u003C/p\u003E\u003Cp\u003EI am using VS 2012 and added the assemblies in the normal way. I also made sure windows hadn\u0027t flagged them as \u0022blocked\u0022 in their properties. I\u0027m assuming that these packages are not allowed in the game and that\u0027s why the errors are being thrown, if so, is there some definition or logic behind what assemblies are and are not allowed? \u003C/p\u003E\u003Cp\u003EI\u0027m really just wondering what people are typically doing to store and retrieve data on the client in their add-ons. I\u0027ve tried googling and looking at the tutorials on the wiki but nothing seems to touch on this piece. If I\u0027m just being dumb and there\u0027s some other site or threads I should be looking at for info like this please link me and I\u0027ll be on my way, thanks.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-03-26T03:06:25Z","Content":"\n\u003Cp\u003EInteresting, are you looking at storing massive amounts of data?\u003C/p\u003E\u003Cp\u003EThe in-game system we have for data storage is the ConfigNode (in the class of the same name) which can be read/write to disk as a text file.\u003C/p\u003E\u003Cp\u003EThe other thing that error message implies is that the Net version is off. You have to build against Net version 3.5 to make a .dll file KSP can load.\u003C/p\u003E\u003Cp\u003EHope that helps,\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"wpatter6","CreatedById":140000,"CreatedDateTime":"2015-03-26T03:19:24Z","Content":"\n\u003Cp\u003EWell, probably not *massive* but I suppose it would want to be able to scale up to some degree... Hmm I thought I had gotten the 3.5 versions but, oh well, this ConfigNode looks to be a lot like Json so I think it\u0027ll probably work for what I\u0027m doing at the moment. I\u0027m really just taking broad strokes at the moment to see how feasible my idea is, thanks a lot for your help\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-03-26T03:24:20Z","Content":"\n\u003Cp\u003EThere are several common methods you can use depending on what you want to achieve.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EGeneral Plugin Settings\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EKSP.IO.PluginConfiguration is useful for easy storage of simple settings. It has the capacity for automatically handling defaults when no settings exist, but is awkward to use for save specific data or when you need multiple of the same dataset\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EKSP.IO.PluginConfiguration config;\u003Cbr\u003Econfig = KSP.IO.PluginConfiguration.CreateForType\u0026lt;AClass\u0026gt;();\u003Cbr\u003Econfig.load();\u003Cbr\u003E\u003Cbr\u003Evalue = config.GetValue(\u0022ValueID\u0022, defaultValue); // retrieve the data stored with \u0022ValueID\u0022 key, use defaultValue if not found\u003Cbr\u003Econfig[\u0022ValueID\u0022] = valueUpdate; // assign valueUpdate to the \u0022ValueID\u0022 key\u003Cbr\u003E\u003Cbr\u003Econfig.save();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/Crzyrndm/Analog-Control/blob/master/Analog%20Control/AnalogControl.cs#L66\u0022 rel=\u0022external nofollow\u0022\u003EExample\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPersistent Data (Save Files)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EPart Modules mostly use this, but partless plugins can also save/load data to/from the save file. These are saved as confignodes, but they are automatically associated with a specific save unlike a general confignode. A class inheriting from ScenarioModule can override the save/load methods like \u003Ca href=\u0022https://github.com/BobPalmer/Regolith/blob/master/Regolith/Regolith/Scenario/RegolithScenario.cs\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EConfigNodes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EUseful for storing multiple instances of a template and/or more complex data without having to worry about how serialisation is dealt with (which can be a pain with the pluginData method). No built in way to load default values though.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/Crzyrndm/Pilot-Assistant/blob/master/PilotAssistant/PresetManager.cs#L160\u0022 rel=\u0022external nofollow\u0022\u003EExample\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-03-26T03:39:28Z\u0022 title=\u002203/26/2015 03:39  AM\u0022 data-short=\u00229 yr\u0022\u003EMarch 26, 2015\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"}]}