{"TopicId":8075,"ForumId":29,"TopicTitle":"Altitude above ground level?","CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-03-13T18:40:02Z","PageNum":1,"Articles":[{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-03-13T18:40:02Z","Content":"\n\u003Cp\u003EThis might be obvious to some of you, but I haven\\\u0027t been able to figure it out: Which structure/class contains the ship\\\u0027s altitude above ground level (or the ground elevation at the ship\\\u0027s location)?\u003C/p\u003E\u003Cp\u003EI\\\u0027ve tried the following code in my \\\u0027onPartUpdate\\\u0027 handler:\u003C/p\u003E\u003Cp\u003EVector3d dR3Position = vessel.findWorldCenterOfMass();\u003C/p\u003E\u003Cp\u003EdASLAltitude = vessel.mainBody.GetAltitude(dR3Position);\u003C/p\u003E\u003Cp\u003EdLatitude = vessel.mainBody.GetLatitude(dR3Position);\u003C/p\u003E\u003Cp\u003EdLongitude = vessel.mainBody.GetLongitude(dR3Position);\u003C/p\u003E\u003Cp\u003EI\\\u0027ve then used those values in \\\u0027GetRelSurfacePosition\\\u0027 and \\\u0027GetWorldSurfacePosition\\\u0027. Both these functions take Lat/Lon/Alt as inputs. \u003C/p\u003E\u003Cp\u003EI assume that the return value for \\\u0027GetRelSurfacePosition\\\u0027 and \\\u0027GetWorldSurfacePosition\\\u0027 is a vector describing the distance between the ground at some reference location and the specified lat/lon/alt. I hacked at it for about an hour last night (using a callback function to display various values to the screen) but I couldn\\\u0027t find an algorithm to output altitude above ground level. I only seemed to be able to get various incarnations of altitude above sea level...\u003C/p\u003E\u003Cp\u003EI would have thought this should be easy. What am I missing? \u003C/p\u003E\u003Cp\u003EThanks in advance to anyone who can point me in the right direction.\u003C/p\u003E\n"},{"CreatedByName":"HarvesteR","CreatedById":4,"CreatedDateTime":"2012-03-13T23:39:14Z","Content":"\n\u003Cp\u003EThe GetRelSurfacePosition method doesn\\\u0027t take into account terrain elevation. It returns a position vector that is relative to the planet and it\\\u0027s own rotation.\u003C/p\u003E\u003Cp\u003ECurrently, there is no direct way to get the terrain height from the given position. What you can do though, is raycast down to the surface using a layerMask of 1 \u0026lt;\u0026lt; 15. If that hits something, you\\\u0027ll know there is terrain below, and you can then use the raycast distance (hit.distance) to get the \\\u0027radar altitude\\\u0027.\u003C/p\u003E\u003Cp\u003EFor more information on raycasts, check out the Unity documentation on Physics.Raycast.\u003C/p\u003E\u003Cp\u003EHope this helps.\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-03-14T19:03:58Z","Content":"\n\u003Cp\u003EThank you Harv! That seems to have worked. \u003C/p\u003E\u003Cp\u003ENow my next question is: What bit should be set in the layerMask so that water is also detected? The raycast function doesn\\\u0027t seem to detect water when only the 15th bit is set?\u003C/p\u003E\u003Cp\u003EI\\\u0027ll test it some more this evening.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2012-03-14T19:35:15Z","Content":"\n\u003Cp\u003EI used the current altitude to approximate height over water. Do let me know if you figure out the mask to detect it directly, though.\u003C/p\u003E\n"},{"CreatedByName":"Iskierka","CreatedById":2116,"CreatedDateTime":"2012-03-14T19:46:48Z","Content":"\n\u003Cp\u003EHeight over water is exactly the altitude reported by the functions like getAltitudeAtPos, no need to consider it approximate.\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-03-14T20:02:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Iskierka\u0022 data-cite=\u0022Iskierka\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EHeight over water is exactly the altitude reported by the functions like getAltitudeAtPos, no need to consider it approximate.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are right, but in order to use your suggestion, the module would need to detect whether it is over water or not.\u003C/p\u003E\u003Cp\u003EThe layerMask selectively filters out colliders when the raycast function is called. I suspect that water has its own filter bit in the layerMask. Maybe I\\\u0027ll just have to experiment to figure out what it is.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2012-03-14T23:17:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PakledHostage\u0022 data-cite=\u0022PakledHostage\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EYou are right, but in order to use your suggestion, the module would need to detect whether it is over water or not.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe Raycast function returns a success flag. If you\\\u0027re casting a ray from your ship to the center of the planet and you don\\\u0027t hit anything, you\\\u0027re over water. (I\\\u0027m trying to think of edge cases where this isn\\\u0027t true, but nothing\\\u0027s coming to me.)\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-03-15T00:23:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe Raycast function returns a success flag. If you\\\u0027re casting a ray from your ship to the center of the planet and you don\\\u0027t hit anything, you\\\u0027re over water. (I\\\u0027m trying to think of edge cases where this isn\\\u0027t true, but nothing\\\u0027s coming to me.)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmmm. That\\\u0027s not what I\\\u0027m experiencing. The raycast function also returns a hit distance. Its value is consistent with altitude AGL. \u003C/p\u003E\u003Cp\u003EIn my case, I still get an altitude when I hover over (or land in) the water. I assume that the value I\\\u0027m seeing is the distance through the water to the \u0027bottom\u0027? Maybe I need to fly further off shore to see the effect you\\\u0027re seeing? Have you tried hovering over the water close to KSC? What happens for you?\u003C/p\u003E\n"},{"CreatedByName":"Iskierka","CreatedById":2116,"CreatedDateTime":"2012-03-15T02:17:39Z","Content":"\n\u003Cp\u003EIf you want to return AGL or ASL, depending on which is closer, then you can use Mathf.Min( FlightGlobals.getAltitudeAtPos(...), {raycastthingy} ) to pick whichever value is least; ie, which you are closest to.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2012-03-15T22:30:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PakledHostage\u0022 data-cite=\u0022PakledHostage\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EHmmm. That\\\u0027s not what I\\\u0027m experiencing. The raycast function also returns a hit distance. Its value is consistent with altitude AGL. \u003C/p\u003E\u003Cp\u003EIn my case, I still get an altitude when I hover over (or land in) the water. I assume that the value I\\\u0027m seeing is the distance through the water to the \u0027bottom\u0027? Maybe I need to fly further off shore to see the effect you\\\u0027re seeing? Have you tried hovering over the water close to KSC? What happens for you?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you hover over the water very near KSC, you indeed hit the ground below. When you go further, Physics.Raycast() will return false.\u003C/p\u003E\u003Cp\u003EYou\\\u0027re correct that identifying a bitmask which also detects water would be more useful. To be honest, I might just raycast everything, so I can also detect landed ships. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"NovaSilisko","CreatedById":3897,"CreatedDateTime":"2012-03-15T22:32:20Z","Content":"\n\u003Cp\u003EYou could make it return erroneous results (eg, add a random variance to it) when over water, since it\\\u0027s not exactly the stillest of surfaces.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2012-03-16T16:33:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NovaSilisko\u0022 data-cite=\u0022NovaSilisko\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EYou could make it return erroneous results (eg, add a random variance to it) when over water, since it\\\u0027s not exactly the stillest of surfaces.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFor my purpose (landing computer) I actually simulate the water as being farther down than it really is. Coming to a near-stop at water level isn\\\u0027t so great, because then your engines shut off and the craft plunges in.\u003C/p\u003E\u003Cp\u003EI\\\u0027ve thought about making some kind of radar part which would give plugins easy access to this kind of information, but I imagine the requirements of each plugin are too different to neatly wrap them all up into one device.\u003C/p\u003E\n"},{"CreatedByName":"FourTee2","CreatedById":17900,"CreatedDateTime":"2012-03-16T22:48:24Z","Content":"\n\u003Cp\u003EA CCMPA System (Community Collaborative Modular Pilot-Assist)? If someone could organize that... that\\\u0027d be amazing.\u003C/p\u003E\n"},{"CreatedByName":"Corax","CreatedById":11311,"CreatedDateTime":"2012-03-29T23:19:03Z","Content":"\n\u003Cp\u003EThanks to all who contributed so far, this thread has been immensely helpful.\u003C/p\u003E\u003Cp\u003EI (think I) have finally managed to figure out how to get altitude above ground. What puzzles me is AGL appears conclusive up to about 10km (\u00C2\u00B1 ~3) ASL, but from then on Raycast() indicates no more hits.\u003C/p\u003E\u003Cp\u003EI\\\u0027m using [tt]Physics.Raycast(Vector3 origin, Vector3 direction, out RaycastHit hitInfo, float distance, int layerMask)[/tt] with\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eorigin = (Vector3)vessel.rigidbody.position // vessel\\\u0027s position\u003Cbr\u003Edirection = (Vector3)(-((origin - vessel.mainBody.position).normalized)) // vector to centre of reference body\u003Cbr\u003Edistance = (float)vessel.mainBody.GetAltitude (origin) \u002B 12345.6f // ASL plus some offset, just to be safe\u003Cbr\u003ElayerMask = 1\u0026lt;\u0026lt;15 // from Harv\\\u0027s post above\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI am wondering, is this some limitation of the physics engine, or am I missing something fundamental?\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:48px;\u0022\u003EPS.:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EJust FYI, as there appeared to be some uncertainty regarding the layer mask, the reported altitude appears correct over land as well as water, sea bottom seems to fall sharply in the waters east of KSC (and IIRC, even before the terrain update) \u00E2\u20AC\u201C as long as anything is reported at all, but I don\\\u0027t see any relation to whether it\\\u0027s above land or water.\u003C/p\u003E\n"},{"CreatedByName":"Causeless","CreatedById":5366,"CreatedDateTime":"2012-03-30T00:18:05Z","Content":"\n\u003Cp\u003EAnything lower than a terrain tile\\\u0027s highest detail has no collision.\u003C/p\u003E\n"},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2014-03-19T20:02:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EIf you hover over the water very near KSC, you indeed hit the ground below. When you go further, Physics.Raycast() will return false.\u003Cp\u003EYou\u0027re correct that identifying a bitmask which also detects water would be more useful. To be honest, I might just raycast everything, so I can also detect landed ships. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFound this thread when looking for a way to make rays collide with the ocean, and decided to try out raycasting with all 32 possible individual masks. Unfortunately, none of them collide with the ocean. However, there are other ways around this, of course, if you remember your trig. Obviously, this only matters if you need distance at an angle \u003Cstrong\u003Eother than\u003C/strong\u003E straight down, as pqs gives you that.\u003C/p\u003E\u003Cp\u003EUnfortunately, I had trig many years ago and have had extremely little use for it (until now!) and so I\u0027ve forgotten much of it. I\u0027m in the process of relearning it, but if someone else beats me to a solution, feel free to post it.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-03-19T20:22:01Z","Content":"\n\u003Cp\u003EAlso, it looks like some properties have been added since the original thread. I use the following in my height control mod for height from terrain.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif(FlightGlobals.ActiveVessel.heightFromTerrain \u0026gt;= 0) \u003Cbr\u003E{\u003Cbr\u003EAltitudeAboveGround = Mathf.Min(FlightGlobals.ActiveVessel.heightFromTerrain, FlightGlobals.ActiveVessel.altitude)\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E.altitude is your height above sea level as reported at the top of the screen.\u003C/p\u003E\u003Cp\u003E.heightFromTerrain is your height above terrain, ignoring water. So over shallow water, out to a seabed depth of about 600meters, .heightFromTerrain will return altitude to the sea bed. Deeper then that it looks like the \u0027terrain\u0027 object does not exist and .heightFromTerrain returns -1\u003C/p\u003E\u003Cp\u003ETherefore the IF statement is required to error trap the .heightFromTerrain value and give you your current height above ground or water.\u003C/p\u003E\u003Cp\u003ENote that both these are relative to your active vessel\u0027s center of mass, not the side of the vessel closest to ground.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-19T20:24:50Z\u0022 title=\u002203/19/2014 08:24  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 19, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"rbray89","CreatedById":48847,"CreatedDateTime":"2014-03-19T20:38:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Orum\u0022 data-cite=\u0022Orum\u0022\u003E\u003Cdiv\u003EFound this thread when looking for a way to make rays collide with the ocean, and decided to try out raycasting with all 32 possible individual masks. Unfortunately, none of them collide with the ocean. However, there are other ways around this, of course, if you remember your trig. Obviously, this only matters if you need distance at an angle \u003Cstrong\u003Eother than\u003C/strong\u003E straight down, as pqs gives you that.\u003Cp\u003EUnfortunately, I had trig many years ago and have had extremely little use for it (until now!) and so I\u0027ve forgotten much of it. I\u0027m in the process of relearning it, but if someone else beats me to a solution, feel free to post it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eunfortunately, PQS doesn\u0027t really work that well. I attached a gui element, used celestialBody.pqsController.GetSurfaceHeight(pos), and created a rover that displayed my terrain height and drove it around. There were lots of times where it was flat out wrong, dipping up or down (sometimes as much as 20m).\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-03-19T21:19:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EAlso, it looks like some properties have been added since the original thread. I use the following in my height control mod for height from terrain.\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif(FlightGlobals.ActiveVessel.heightFromTerrain \u0026gt;= 0) \u003Cbr\u003E{\u003Cbr\u003EAltitudeAboveGround = Mathf.Min(FlightGlobals.ActiveVessel.heightFromTerrain, FlightGlobals.ActiveVessel.altitude)\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E.altitude is your height above sea level as reported at the top of the screen.\u003C/p\u003E\u003Cp\u003E.heightFromTerrain is your height above terrain, ignoring water. So over shallow water, out to a seabed depth of about 600meters, .heightFromTerrain will return altitude to the sea bed. Deeper then that it looks like the \u0027terrain\u0027 object does not exist and .heightFromTerrain returns -1\u003C/p\u003E\u003Cp\u003ETherefore the IF statement is required to error trap the .heightFromTerrain value and give you your current height above ground or water.\u003C/p\u003E\u003Cp\u003ENote that both these are relative to your active vessel\u0027s center of mass, not the side of the vessel closest to ground.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnfortunately that does not work at all. I had a talk with Mu a while ago while I was figuring this out myself for RealChute. Turns out that vessel.heightFromTerrain should actually be a private field. It\u0027s rarely ever used for the game, and definitely isn\u0027t what you are looking for there. RealChute confirmed it the hard way for me (meeting a mountain at high velocity).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rbray89\u0022 data-cite=\u0022rbray89\u0022\u003E\u003Cdiv\u003Eunfortunately, PQS doesn\u0027t really work that well. I attached a gui element, used celestialBody.pqsController.GetSurfaceHeight(pos), and created a rover that displayed my terrain height and drove it around. There were lots of times where it was flat out wrong, dipping up or down (sometimes as much as 20m).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat one is going a little complex. Actually, the way to get terrain altitude is vessel.pqsAltitude. Mu directed me to that one actually, and I can confirm that it returns the height of the terrain, and that it does not clamp to ocean. However it\u0027s quite easy to get it with something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Edouble terrainAlt = this.vessel.ocean ? Math.Max(this.vessel.pqsAltitude, 0d) : this.vessel.pqsAltitude;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EHowever\u003C/em\u003E this returns the altitude directly below the ship\u0027s COM. You could indeed get it with some trig, and I could help you with it in #kspmodders if you wait for me to get home later \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-03-19T21:31:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EUnfortunately that does not work at all. I had a talk with Mu a while ago while I was figuring this out myself for RealChute. Turns out that vessel.heightFromTerrain should actually be a private field. It\u0027s rarely ever used for the game, and definitely isn\u0027t what you are looking for there. RealChute confirmed it the hard way for me (meeting a mountain at high velocity).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOdd, I guess I got lucky then.\u003C/p\u003E\u003Cp\u003EI\u0027ve been using it for several versions of my height control mod now and I display that value as height from terrain on my mod and when I look at it the number seems reasonable. \u003C/p\u003E\u003Cp\u003EI\u0027ve never checked when doing something that changes the CoM location though such as deploying a parachute does. (I assume deploying a parachute change the CoM location anyway.)\u003C/p\u003E\u003Cp\u003ESince that is straight from Mu though I\u0027ll look at switching to the the .pqsAltitude property.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-03-19T21:45:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EOdd, I guess I got lucky then.\u003Cp\u003EI\u0027ve been using it for several versions of my height control mod now and I display that value as height from terrain on my mod and when I look at it the number seems reasonable. \u003C/p\u003E\u003Cp\u003EI\u0027ve never checked when doing something that changes the CoM location though such as deploying a parachute does. (I assume deploying a parachute change the CoM location anyway.)\u003C/p\u003E\u003Cp\u003ESince that is straight from Mu though I\u0027ll look at switching to the the .pqsAltitude property.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf I remember correctly, this is only when the vessel is landed. Or something like that.\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-03-19T22:17:56Z","Content":"\n\u003Cp\u003EI\u0027ve been looking at KER recently and it uses:\u003C/p\u003E\u003Cp\u003Evessel.mainBody.GetAltitude(vessel.CoM) - vessel.terrainAltitude\u003C/p\u003E\u003Cp\u003E(well, it has some spurious \u0022this.\u0022 in there too).\u003C/p\u003E\u003Cp\u003EIs this wrong? I don\u0027t recall the readout being obviously wrong when driving a rover around...\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-03-19T23:16:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Padishar\u0022 data-cite=\u0022Padishar\u0022\u003E\u003Cdiv\u003EI\u0027ve been looking at KER recently and it uses:\u003Cp\u003Evessel.mainBody.GetAltitude(vessel.CoM) - vessel.terrainAltitude\u003C/p\u003E\u003Cp\u003E(well, it has some spurious \u0022this.\u0022 in there too).\u003C/p\u003E\u003Cp\u003EIs this wrong? I don\u0027t recall the readout being obviously wrong when driving a rover around...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAccording to Mu it could have unpredictable effects. On my side it had the effect of smashing my first test pods in the mountains when I first drafted RealChute. It doesn\u0027t seem to be as much on target as it always should.\u003C/p\u003E\n"},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2014-03-20T01:36:38Z","Content":"\n\u003Cp\u003EAnyway, this is what I came up with for distance \u0026amp; surface normal at an angle (with respect to the ocean--the intent being to take to compare with a raycast, take the min() of the distances, and then decide the correct normal based on that):\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/dAGb9jd.png\u0022 alt=\u0022dAGb9jd.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EI originally thought I could solve this relatively easily with the law of cosines, until I realized that that\u0027s intended for finding the angle between two known sides, and not when you have an angle next to only one known side. I still think it\u0027s applicable, just I have to derive exactly what I need correctly.\u003C/p\u003E\u003Cp\u003Ep.s. - In case it wasn\u0027t apparent, ignore the tangential line for the side of the triangle labeled \u0022r\u002Ba\u0022, as that is the length of the full side, not just to where it intersects the tangent.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-20T02:07:15Z\u0022 title=\u002203/20/2014 02:07  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 20, 2014\u003C/time\u003E by Orum\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-03-20T04:19:53Z","Content":"\n\u003Cp\u003EOkay, quick 5 second test.\u003C/p\u003E\u003Cp\u003EFlightGlobals.ActiveVessel.pqsAltitude (field) looks to be what to use. It returns the height of the terrain below the vessel\u0027s CoM as altitude above sea level (to the terrain, not the vessel).\u003C/p\u003E\u003Cp\u003EThere is also a FlightGlobals.ActiveVessel.PqsAltitude() method that also returns a double, but in a quick run in a rover around KSC, the .psqAltitude field was more accurate.\u003C/p\u003E\u003Cp\u003ENote that .pqsAltitude returns a negative number over water, so I will confirm that your vessel\u0027s current altitude above terrain is:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EVesselAboveTerrain = FlightGlobals.ActiveVessel.altitude - Math.Max(FlightGlobals.ActiveVessel.pqsAltitude,0);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe Math.Max ensures that if you are over water, the negative number for the seabed is not used.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"}]}