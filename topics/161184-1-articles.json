{"TopicId":161184,"ForumId":29,"TopicTitle":"C# Reflection and Extension methods?","CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-05-27T22:08:09Z","PageNum":1,"Articles":[{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-05-27T22:08:09Z","Content":"\n\u003Cp\u003E\nI\u0027m banging my head into the wall trying to figure out how to build a reflection wrapper for mechjeb. \u00A0 I\u0027ve got static methods working... \u00A0but now am trying to get the dynamic ones to work... \u00A0which I understand means getting the Master mechjeb core of the active vessel. \u00A0 \u00A0 But... as far as getting that to work... I\u0027m failing miserably. \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI THINK in the initialize method I\u0027m finding the types for both the core and the vessel extensions, and then the GetCore function looks in the extensions for the GetMasterMechJeb method and invokes it, passing it the active vessel as an argument. \u00A0 \u00A0 But it\u0027s throwing \u0022Object reference not set to an instance of an object\u0022 exceptions when invoked. \u00A0 \u00A0I read somewhere that extension methods were actually static methods that take the object they extend as the first parameter... \u00A0but.. I think I\u0027m doing it wrong?\n\u003C/p\u003E\n\u003Cp\u003E\nI necro\u0027ed an ancient post of mine trying to get help getting started... but... am now trying to dig in again and could use more specific help with this bit of it? \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nWhat I\u0027ve got at the moment (obviously cut down to just what I\u0027m working on for your convenience) -\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\u00A0 public class MJWrapper\n\u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 public static System.Type CoreType;\n\u00A0 \u00A0 \u00A0 \u00A0 public static System.Object core;\n\u00A0 \u00A0 \u00A0 \u00A0 public static Vessel vessel { get { return FlightGlobals.ActiveVessel; } }\n\u00A0 \u00A0 \u00A0 \u00A0 public static System.Type mjVesExtensions;\n\n\u00A0public static bool Initialize()\n\u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (Initialized)\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return true;\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AssemblyLoader.loadedAssemblies.TypeOperation(t =\u0026gt; { if (t.FullName == \u0022MuMech.MechJebCore\u0022) { CoreType = t; } });\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AssemblyLoader.loadedAssemblies.TypeOperation(t =\u0026gt; { if (t.FullName == \u0022MuMech.VesselExtensions\u0022) { mjVesExtensions = t; } });\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (CoreType == null) {return false;}\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (!GetCore()){ return false;}\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Initialized = true;\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return true;\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\n\u00A0 \u00A0 \u00A0 \u00A0 public static bool GetCore()\n\u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 MethodInfo GetMastr = mjVesExtensions.GetMethod(\u0022GetMasterMechJeb\u0022, BindingFlags.Public | BindingFlags.Static);\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 core= GetMastr.Invoke(null, new object[] { vessel });\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return (core != null);\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\n}\n\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-05-28T00:02:16Z\u0022 title=\u002205/28/2017 12:02  AM\u0022 data-short=\u00227 yr\u0022\u003EMay 28, 2017\u003C/time\u003E by artwhaley\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-05-30T11:06:55Z","Content":"\n\u003Cp\u003E\nI\u0027m totally at a loss on this and near giving up. \u00A0I\u0027ve wasted DAYS reading everything I can find on reflection and I still can\u0027t make it work.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI found an elegant looking wrapper for mechjeb reflection in the persistent rotation source code... \u00A0I copied it... \u00A0that didn\u0027t work at all. In the gravity turn source code I found a method that let me get the static methods... \u00A0but the method he used to get a dynamic property... \u00A0didn\u0027t work for me either. \u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I know I\u0027m not providing enough information in this post to get any help. \u00A0\u0022It didn\u0027t work\u0022 is a rough place to start... but at this point... \u00A0I don\u0027t even know what question to ask. \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI have an entire statically linked interface to Mechjeb working... \u00A0but it\u0027s really important to me to get it changed over to use reflection so it doesn\u0027t cause loading errors if mechjeb isn\u0027t installed.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-05-30T11:08:30Z\u0022 title=\u002205/30/2017 11:08  AM\u0022 data-short=\u00227 yr\u0022\u003EMay 30, 2017\u003C/time\u003E by artwhaley\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-05-30T11:32:39Z","Content":"\n\u003Cp\u003E\nI\u0027ll have a look but I am not sure I ll have the time today.\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-05-30T18:02:58Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57146-sarbian/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257146\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57146-sarbian/\u0022 rel=\u0022\u0022\u003E@sarbian\u003C/a\u003E\u00A0 I can\u0027t say thank you enough for looking at it. \u00A0 And no hurry! \u00A0 The whole first effort was here on gist.... \u00A0 in case I was closer before... \u00A0\u003Ca href=\u0022https://gist.github.com/artwhaley/f5bb453b8ed18fa89b53e47ffde46407\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://gist.github.com/artwhaley/f5bb453b8ed18fa89b53e47ffde46407\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-05-30T18:28:35Z","Content":"\n\u003Cp\u003E\nHum, your code seems to be working. Are you sure you are not calling it before the MJCore is actually on the vessel ?\n\u003C/p\u003E\n\u003Cp\u003E\nHere is my full test plugin that toggles the Ascent AP (you need the last \u003Cabbr title=\u0022Mechjeb (mod)\u0022\u003EMJ\u003C/abbr\u003E to have the call I use)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://gist.github.com/sarbian/829efb072f71691527ad4a95057b7884\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://gist.github.com/sarbian/829efb072f71691527ad4a95057b7884\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-05-30T18:29:04Z\u0022 title=\u002205/30/2017 06:29  PM\u0022 data-short=\u00227 yr\u0022\u003EMay 30, 2017\u003C/time\u003E by sarbian\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2017-05-30T20:28:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223073656\u0022 data-ipsquote-contentid=\u0022161184\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221496167378\u0022 data-ipsquote-userid=\u0022118388\u0022 data-ipsquote-username=\u0022artwhaley\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, artwhaley said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57146-sarbian/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257146\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57146-sarbian/\u0022 rel=\u0022\u0022\u003E@sarbian\u003C/a\u003E\u00A0 I can\u0027t say thank you enough for looking at it. \u00A0 And no hurry! \u00A0 The whole first effort was here on gist.... \u00A0 in case I was closer before... \u00A0\u003Ca href=\u0022https://gist.github.com/artwhaley/f5bb453b8ed18fa89b53e47ffde46407\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://gist.github.com/artwhaley/f5bb453b8ed18fa89b53e47ffde46407\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou might take a look at the code I use for RasterPropMonitor or Avionics Systems.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/MOARdV/AvionicsSystems/blob/master/Source/MASIMechJeb.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/MOARdV/AvionicsSystems/blob/master/Source/MASIMechJeb.cs\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-05-31T06:34:29Z","Content":"\n\u003Cp\u003E\nWell, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57146-sarbian/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257146\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57146-sarbian/\u0022 rel=\u0022\u0022\u003E@sarbian\u003C/a\u003E, I totally got your code to work! \u00A0This is a big step in the right direction. \u00A0I can\u0027t say enough how much I appreciate you of all people making time to help me. \u00A0 In the interest of maybe saving you the next IM you might get on the same subject, I\u0027m going to post the next step as I got it working; the following code demonstrates how to get one of the mechjeb computer modules and invoke a method in it.\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E            \u003C/span\u003E\u003Cspan\u003EMethodInfo\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E getmodule \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECoreType\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetMethod\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022GetComputerModule\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBindingFlags\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EPublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBindingFlags\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInstance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EType\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EDefaultBinder\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etypeof\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E},\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enull\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E   \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Note GetComputerModule is overloaded so Type.DefaultBinder and the parameters after it grab the method that takes a string.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EObject\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E getmodule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInvoke\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecore\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E object\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022MechJebModuleNodeExecutor\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E});\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Instance of the Node Execetor in the core object\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EMethodInfo\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EExecOne\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ENodeExecutor\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetMethod\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022ExecuteOneNode\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBindingFlags\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInstance\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBindingFlags\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EPublic\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \n            \u003C/span\u003E\u003Cspan\u003EExecOne\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInvoke\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E object\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E core \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E});\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//method belongs to NodeExecutor but gets passed the vessel master mechjeb as parameter!\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI am certain I\u0027m not done asking dumb questions on this project, and I most certainly WILL dig into the example that you\u0027ve posted\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/60950-moardv/\u0026amp;do=hovercard\u0022 data-mentionid=\u002260950\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/60950-moardv/\u0022 rel=\u0022\u0022\u003E@MOARdV\u003C/a\u003E\u00A0. \u00A0I don\u0027t know why I thought the RasterPropMonitor/Mechjeb link required statically linking at compile time. \u00A0 If I\u0027d remembered that you used reflection there I might have found my own answer sooner.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSarbian, would you like me to flesh this out and contribute it back to the Mechjeb repository as an example wrapper so others can see how to do it? \u00A0 \u00A0And if so... would you rather have the large finished wrapper that I\u0027m going to be using for my project - something that gives access to most of Mechjeb and is ready for people to just add to their project and use... \u00A0 or a slightly fleshed out and well commented version of essentially what you provided me here? \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThank you both for the help!\n\u003C/p\u003E\n"}]}