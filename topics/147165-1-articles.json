{"TopicId":147165,"ForumId":29,"TopicTitle":"Changing the rotation of the current vessel?","CreatedByName":"uknowmyname","CreatedById":168178,"CreatedDateTime":"2016-09-06T03:39:08Z","PageNum":1,"Articles":[{"CreatedByName":"uknowmyname","CreatedById":168178,"CreatedDateTime":"2016-09-06T03:39:08Z","Content":"\n\u003Cp\u003E\nHello,\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m creating a relatively simple mod that allows the user to point at a certain position\u00A0on the navball, and it is proving way harder than I thought. I\u0027ve looked at mechjeb\u0027s smart A.S.S code and can\u0027t make any sense of it due to the way it calls vars from other classes. I\u0027m essentially wanting to move from one point on the navball to the other. I\u0027ve tried a bunch of things (including inverting quaternions to manage differences between srfRot and worldRot) but I\u0027m getting nowhere. The vehicle just seems to move around randomly and sometimes fails to work altogether.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCan anybody point me to a thread/ github repo/ their personal experience?\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t want the vessel to jump to the specified angle, it should move to it, much like pointing at prograde or any other vector using \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSuper confused on this one.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-06T04:33:19Z\u0022 title=\u002209/06/2016 04:33  AM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 6, 2016\u003C/time\u003E by uknowmyname\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-09-06T06:18:38Z","Content":"\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/Crzyrndm/TweakableSAS/blob/master/TweakableSAS/TweakableSAS.cs#L197-L313\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Crzyrndm/TweakableSAS/blob/master/TweakableSAS/TweakableSAS.cs#L197-L313\u003C/a\u003E\u003Cbr\u003E\nI haven\u0027t updated it\u00A0recently (was intening to port the control core to PA, but never got around to it), but all the maths you\u0027ll need is in that ~100 lines (and the majority of that is the various targets...).\u00A0Outside that, both \u003Cabbr title=\u0022Mechjeb (mod)\u0022\u003EMJ\u003C/abbr\u003E and ^^ use a PID controller to handle the actual actuation (the maths is just to calc the rotational error :P)\n\u003C/p\u003E\n\u003Cp\u003E\nThe ArrowPointer class is very helpful for visualising vectors ingame\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBe warned, this is an area where the Quaternion rules supreme. Things can get bent out of shape really quickly so take it slow when making changes\n\u003C/p\u003E\n"},{"CreatedByName":"Harrie","CreatedById":168455,"CreatedDateTime":"2016-09-06T20:40:55Z","Content":"\n\u003Cp\u003E\nHey Crzyrndm,\n\u003C/p\u003E\n\u003Cp\u003E\nI was just looking at the code you linked above. How necessary is the updateAttitude() method in VesselData? Does this perform the actual attitude adjustment or is that done within the TweakableSAS class? I assume you use the VesselData class as a storage for vars, but the updateAttitude method is called at the beginning of your SASControl method. Can you provide any guidance?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThanks!\n\u003C/p\u003E\n"},{"CreatedByName":"Harrie","CreatedById":168455,"CreatedDateTime":"2016-09-06T21:09:44Z","Content":"\n\u003Cp\u003E\nNever mind, just had a proper look through that and realised what it does.\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-09-07T07:37:00Z","Content":"\n\u003Cp\u003E\nOops, missed that one.\n\u003C/p\u003E\n\u003Cp\u003E\nVesselData is where I store all the extra bits of information that the control system required for vessel speed/position/orientation/etc. that have to be calculated.\u00A0Update attitude gets called once per physics frame to keep those values up to date.\n\u003C/p\u003E\n\u003Cp\u003E\nThe vessel control update happens in the calls to \u0022setCtrlState\u0022. The function SASControl is a \u003Ca href=\u0022https://github.com/Crzyrndm/TweakableSAS/blob/master/TweakableSAS/TweakableSAS.cs#L91\u0022 rel=\u0022external nofollow\u0022\u003Ecallback\u003C/a\u003E that gets called by the vessel every physics frame and hands the function a reference to the control outputs that are to be applied this frame. There are actually three of them now (\u00A0\u0026lt;OnPre/On/OnPost\u0026gt;AutoPilotUpdate ) which can be quite useful, but the only one that will reliably overwrite stock \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E is OnPost\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-07T07:40:08Z\u0022 title=\u002209/07/2016 07:40  AM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 7, 2016\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Harrie","CreatedById":168455,"CreatedDateTime":"2016-09-07T16:49:52Z","Content":"\n\u003Cp\u003E\nAm I right in thinking that this code is used to change the attitude of the vessel? Looking through again, I don\u0027t see a point where you specify a pitch and heading to point towards. Am I just understanding this totally wrong?\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-09-08T05:38:01Z","Content":"\n\u003Cp\u003E\nThe direction (pitch/heading, no bank) to point towards is a subset of that represented by the vector ( \u003Cspan style=\u0022color:rgb(51,51,51);font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:12px;font-style:normal;font-weight:normal;letter-spacing:normal;line-height:20px;text-indent:0px;text-transform:none;white-space:pre;word-spacing:0px;float:none;background-color:rgb(248,238,199);\u0022\u003ETargetModeSwitch() * Vector3d.forward\u003C/span\u003E \u00A0). Everything after that is all about making the vessel point in that direction (calculate error on each axis, output control inputs). In TargetModeSwitch, the StabilityAssist-\u0026gt;Surface mode is where the pitch/yaw are input as a value in degrees (output as a Quat, then evaluated for control purposes)\n\u003C/p\u003E\n"}]}