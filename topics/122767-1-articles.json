{"TopicId":122767,"ForumId":29,"TopicTitle":"Does the \u0026quot;Specialist\u0026quot; actually improve efficiency of ModuleResourceConverter","CreatedByName":"westamastaflash","CreatedById":110546,"CreatedDateTime":"2015-10-11T02:34:19Z","PageNum":1,"Articles":[{"CreatedByName":"westamastaflash","CreatedById":110546,"CreatedDateTime":"2015-10-11T02:34:19Z","Content":"\n\u003Cp\u003EI cannot get the stock ModuleResourceConverter module to improve efficiency with a specialist. After turning on debug, \u0022CrewBon\u0022 is empty and remains so, even though I defined a crew bonus. I put bill into the unit and he is 3 stars, but the efficiency remains at 100%. \u003C/p\u003E\u003Cp\u003EHow do I get this to actually work so that an engineer makes this converter work better?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = ModuleResourceConverter\u003Cbr\u003E        ConverterName = Soylent Oxidation Unit\u003Cbr\u003E        StartActionName = Start Burning Waste\u003Cbr\u003E        StopActionName = Stop Burning Waste\u003Cbr\u003E        AutoShutdown = true\u003Cbr\u003E        GeneratesHeat = true\u003Cbr\u003E\t\tEfficiency = 1\u003Cbr\u003E\t\tEfficiencyBonus = 1\u003Cbr\u003E\t\tUseSpecialistBonus = true\u003Cbr\u003E\t\tSpecialistEfficiencyFactor = 0.2\u003Cbr\u003E\t\tSpecialistBonusBase = 0.05\u003Cbr\u003E\t\tSpecialty = Engineer\u003Cbr\u003E\t\tSpecialistHeatFactor = 0\u003Cbr\u003E\u003Cbr\u003E        INPUT_RESOURCE\u003Cbr\u003E        {\u003Cbr\u003E            ResourceName = ElectricCharge\u003Cbr\u003E            Ratio = 12\u003Cbr\u003E        }\u003Cbr\u003E        INPUT_RESOURCE\u003Cbr\u003E        {\u003Cbr\u003E            ResourceName = WasteWater\u003Cbr\u003E            Ratio = 0.00011398148148\u003Cbr\u003E        }\u003Cbr\u003E        INPUT_RESOURCE\u003Cbr\u003E        {\u003Cbr\u003E            ResourceName = Waste\u003Cbr\u003E            Ratio = 0.000012314814816\u003Cbr\u003E        }\u003Cbr\u003E        OUTPUT_RESOURCE\u003Cbr\u003E        {\u003Cbr\u003E            ResourceName = SterileOrganicSlurry\u003Cbr\u003E            Ratio = 0.00012629629632\u003Cbr\u003E            DumpExcess = false\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"hab136","CreatedById":75997,"CreatedDateTime":"2015-10-11T09:33:47Z","Content":"\n\u003Cp\u003EYou\u0027ve defined both \u0022Efficiency\u0022 and \u0022EfficiencyBonus\u0022.. have you tried just defining \u0022EfficiencyBonus\u0022?\u003C/p\u003E\n"},{"CreatedByName":"westamastaflash","CreatedById":110546,"CreatedDateTime":"2015-10-11T12:35:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hab136\u0022 data-cite=\u0022hab136\u0022\u003E\u003Cdiv\u003EYou\u0027ve defined both \u0022Efficiency\u0022 and \u0022EfficiencyBonus\u0022.. have you tried just defining \u0022EfficiencyBonus\u0022?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThose values appear to be related to the efficiency of the part itself, at least when I look at the IL/C# decompile in MonoDevelop. \u003C/p\u003E\u003Cp\u003EThe GetCrewBonus code in the BaseConverter class:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    protected float GetCrewBonus ()\u003Cbr\u003E    {\u003Cbr\u003E// removed some IL code that always returns true\u003Cbr\u003E// ...\u003Cbr\u003E// \u003Cbr\u003E        float result = 1;\u003Cbr\u003E        if (this.UseSpecialistBonus) {\u003Cbr\u003E            result = this.SpecialistBonusBase \u002B (1 \u002B (float)this.HasSpecialist (this.Specialty)) * this.SpecialistEfficiencyFactor;\u003Cbr\u003E        }\u003Cbr\u003E        this.debugCrewBon = result.ToString ();\u003Cbr\u003E        return result;\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo in my example, result should be = 0.05 \u002B (1 \u002B result of has HasSpecialist) * 0.2.\u003C/p\u003E\u003Cp\u003EBut it appears that in the OnFixedUpdate of the BaseConverter class, the specialist is never taken into account.\u003C/p\u003E\u003Cp\u003ESnippet...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            conversionRecipe.FillAmount = this.FillAmount;\u003Cbr\u003E            conversionRecipe.TakeAmount = this.TakeAmount;\u003Cbr\u003E            double deltaHeatThrottle = this.GetDeltaHeatThrottle (deltaTime);\u003Cbr\u003E            [B]double num = (double)this.EfficiencyBonus * deltaHeatThrottle;[/B]\u003Cbr\u003E            this.debugFinBon = num.ToString ();\u003Cbr\u003E            ConverterResults result = this.ResConverter.ProcessRecipe (deltaTime, conversionRecipe, base.part, (float)num);\u003Cbr\u003E            this.PostProcess (result, deltaTime);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOn top of this, I\u0027m not seeing anywhere that the actual module \u0022Efficiency\u0022 is taken into account. \u003C/p\u003E\u003Cp\u003ETesting seems to confirm this - I created the module with Efficiency = \u00220.5\u0022, but when I start up the generator, it comes on at 100% efficiency.\u003C/p\u003E\u003Cp\u003EIt looks like the only two numbers it takes into account is the EfficiencyBonus, and the throttling based on Heat. \u003C/p\u003E\u003Cp\u003EAnd it doesn\u0027t look like GetCrewBonus() is actually ever being called, hence why the debug string never shows a crew bonus in the right click menu.\u003C/p\u003E\u003Cp\u003ESo the only way to actually modify the efficiency of the converter with a specialist is to do something like MKS and use a DLL to hook into the moduleresourceconverter, modifing the EfficiencyBonus on the fly....\u003C/p\u003E\u003Cp\u003EEDIT: I\u0027ve filed a bug #5532.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-21T01:42:47Z\u0022 title=\u002210/21/2015 01:42  AM\u0022 data-short=\u00228 yr\u0022\u003EOctober 21, 2015\u003C/time\u003E by westamastaflash\u003C/strong\u003E\n\u003C/span\u003E\n"}]}