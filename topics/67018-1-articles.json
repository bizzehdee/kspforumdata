{"TopicId":67018,"ForumId":29,"TopicTitle":"Are there guarantees about atomicity of Update vs OnFlyByWire ?","CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-03-28T04:41:29Z","PageNum":1,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-03-28T04:41:29Z","Content":"\n\u003Cp\u003EI\u0027m trying to debug a problem that I think might be in the kOS mod that I didn\u0027t write, so I\u0027m looking through someone else\u0027s code and trying to work out a few things, but I\u0027m very very new to mod writing, so I have a basic question about the mod API:\u003C/p\u003E\u003Cp\u003EIt\u0027s possible for a mod writer to make \u0022Update\u0022 hooks that get called by KSP on a regular fast basis.\u003C/p\u003E\u003Cp\u003EIt\u0027s also possible for a mod writer to make \u0022OnFlyByWire\u0022 hooks that get called by KSP on a regular basis when KSP wants to ask you mod \u0022tell me how to move the ship controls\u0022.\u003C/p\u003E\u003Cp\u003EMy question is this: Are you guaranteed that it\u0027s impossible for KSP to call your OnFlyByWire hook in the middle of you executing a call to your Update hook?\u003C/p\u003E\u003Cp\u003EI see a case in the mod where a rather important variable used in flight control is temporarily in a nulled-out state during a particular small window of time during the execution of the Update hook, but then is set back to a good state by the end of the Update hook. If the OnFlyByWire hook was called in the midst of that, it could try to fly the ship using that temporarily null value, but I\u0027m not sure if that\u0027s a problem or not because I don\u0027t know when the hooks are actually called. If the calling of all those hooks is single-threaded such that you are guaranteed you\u0027ll never get an OnFlyByWire call in the midst of an Update call then this isn\u0027t a problem. But if they get triggered independently in separate threads, then this small window of time could be a problem.\u003C/p\u003E\n"},{"CreatedByName":"a.g.","CreatedById":59470,"CreatedDateTime":"2014-03-28T06:22:57Z","Content":"\n\u003Cp\u003EThere is no threading in Unity. That is, you can create threads, but only the main one is allowed to do anything with Unity objects.\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-03-28T12:57:25Z","Content":"\n\u003Cp\u003EYes, the game logic in unity is single threaded.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003Ebecause I don\u0027t know when the hooks are actually called.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is exactly the problem. Why don\u0027t you know? You should plaster your source with Debug.Log(...)\u0027s until you have verified everything is working as intended.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-15T19:49:33Z","Content":"\n\u003Cp\u003EWhether or not Unity is threaded is irrelevant. What matters is whether or not KSP is threaded. KSP is calling the update and the flybywire, not Unity.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-05-15T20:21:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWhether or not Unity is threaded is irrelevant. What matters is whether or not KSP is threaded. KSP is calling the update and the flybywire, not Unity.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMonoBehaviour.Update() (and almost all other MonoBehaviour functions) are actually called by Unity using some reflection magic. I don\u0027t know what\u0027s causing your issue, but keep in mind that your callback is one of many and any previous code reacting to OnFlyByWire is also capable of causing the variable to be null\u003C/p\u003E\n"}]}