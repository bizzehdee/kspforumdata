{"TopicId":129423,"ForumId":29,"TopicTitle":"[Solved] Causing Engine Failure","CreatedByName":"Ontresanas","CreatedById":142320,"CreatedDateTime":"2016-01-06T21:33:56Z","PageNum":1,"Articles":[{"CreatedByName":"Ontresanas","CreatedById":142320,"CreatedDateTime":"2016-01-06T21:33:56Z","Content":"\n\u003Cp\u003E\nI\u0027m trying to make engines have a random chance of failure in which an engine simply doesn\u0027t produce thrust.\u00A0 However, I can\u0027t seem to get this to work in a way that I like.\n\u003C/p\u003E\n\u003Cp\u003E\nSo far, I have tried setting the maxThrust of all ModuleEngines on the part to zero - which didn\u0027t work, I have tried removing all ModuleEngines - which didn\u0027t work, and I have tried shutting down all ModuleEngines whenever they become activated - which works, but produces an ungodly death rattle that I don\u0027t want.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis is the meat of the code I have currently.\u00A0 Does anyone have any insight into what I\u0027m doing wrong?\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html\u0022\u003E\npublic override void OnStart(PartModule.StartState state)\n{\n    if (state == StartState.Editor) return;\n\n    if (IsNewPart)\n    {\n        IsActive = true;\n        IsNewPart = false;\n        if (UnityEngine.Random.value \u0026lt; FailChance)\n            HasFailed = true;\n    }\n\n    if (HasFailed)\n        FailStatus = \u0022Engine Failed\u0022;\n    else FailStatus = \u0022Engine Working\u0022;\n}\n\npublic override void OnFixedUpdate()\n{\n    if (this.vessel == null)\n        return;\n\n    if (HasFailed)\n    {\n        foreach (PartModule M in part.Modules)\n        {\n            ModuleEngines E = M as ModuleEngines;\n            if (E == null) continue;\n            if(!E.engineShutdown)\n                E.Shutdown();\n        }\n    }\n}\u003C/pre\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-06T22:54:07Z\u0022 title=\u002201/06/2016 10:54  PM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 6, 2016\u003C/time\u003E by Ontresanas\u003C/strong\u003E\n\u003Cbr\u003EThread is solved\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-01-06T21:55:35Z","Content":"\n\u003Cp\u003E\nThe fields you probably want are \u0022EngineIgnited\u0022 and \u0022allowRestart\u0022. The method \u0022Shutdown()\u0022 (normally triggered from the right click menu) might be better to use than the ignited property\n\u003C/p\u003E\n"},{"CreatedByName":"Ontresanas","CreatedById":142320,"CreatedDateTime":"2016-01-06T22:10:41Z","Content":"\n\u003Cp\u003E\nThanks, that works!\u00A0 However, now I\u0027ve discovered that UnityEngine.Random.value doesn\u0027t seem to be giving legitimately random values.\u00A0 The same engines always fail or work regardless of what I do or how many times I launch in sequence (not reverting, actually launching a new rocket).\u00A0 Is there a \u0022correct\u0022 source of randomness that I should be using?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EUPDATE\u003C/strong\u003E: I\u0027ve dropped using UnityEngine.Random, and am now using a static System.Random object.\u00A0 This solves the randomness problem.\u00A0 Now, the hopefully-final question: is there any way to get a list of all the defined parts?\u00A0 Not on the current vessel, but rather, just a list of every part, like the VAB part selection screen.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-06T22:36:00Z\u0022 title=\u002201/06/2016 10:36  PM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 6, 2016\u003C/time\u003E by Ontresanas\u003C/strong\u003E\n\u003C/span\u003E\n"}]}