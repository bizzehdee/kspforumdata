{"TopicId":183837,"ForumId":29,"TopicTitle":"Trying to understand orbit position vectors.","CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2019-04-18T02:23:16Z","PageNum":1,"Articles":[{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2019-04-18T02:23:16Z","Content":"\n\u003Cp\u003E\nThe long version is below, but the short form of my question is:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EHow can I use vessel.orbit to find out what latitude and longitude a vessel will be at, at some specified UT time?\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo, let\u0027s say I\u0027m interested in getting the current position of a vessel, relative to the planet it\u0027s on.\u00A0 Here are a couple of ways I could do that:\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nTake vessel.latitude and vessel.longitude, and do math with that.\n\u003C/li\u003E\n\u003Cli\u003E\nTake vessel.orbit, and get the vessel\u0027s position at the current UT.\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\nI ought to be able to do either of those two methods, and come up with the same answer in both cases, doing some trigonometry and vector manipulation and such.\u00A0 However, I\u0027m having a dickens of a time getting them to line up.\n\u003C/p\u003E\n\u003Cp\u003E\nAs far as I can tell by checking it against other things (e.g. checking PQS for terrain altitude), I believe my math around latitude/longitude is correct.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever... I\u0027m doing something wrong with method #2, and haven\u0027t been able to work out where I\u0027m going astray.\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s an example of what \u003Cem\u003E\u003Cu\u003Edoesn\u0027t\u003C/u\u003E\u003C/em\u003E work:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E// Swap Y and Z axes because apparently KSP orbital calcs are funky that way\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003EVector3d\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E relPosition \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eorbit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EgetRelativePositionAtUT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003EPlanetarium\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetUniversalTime\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Exzy\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// then do stuff with relPosition\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI mean, if I do that, I get \u003Cem\u003E\u003Cu\u003Esome\u003C/u\u003E\u003C/em\u003E position... but it appears to be telling me a very different answer for my location than if I use latitude/longitude.\n\u003C/p\u003E\n\u003Cp\u003E\nIt \u003Cem\u003E\u003Cu\u003Edoes\u003C/u\u003E\u003C/em\u003E appear to be surface-relative-- e.g. if I just sit stationary on the surface, it gives numbers that don\u0027t change.\u00A0 It\u0027s just that it\u0027s telling me a different location.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E is almost perfectly on the equator, located at around 75 degrees west longitude.\n\u003C/p\u003E\n\u003Cp\u003E\nIf I do the above bit with calculating relPosition, I don\u0027t get anything like that.\u00A0 It does correctly put me at the expected \u003Cem\u003E\u003Cu\u003Elatitude\u003C/u\u003E\u003C/em\u003E, but the \u003Cem\u003E\u003Cu\u003Elongitude\u003C/u\u003E\u003C/em\u003E is screwy and I\u0027m not sure why.\u00A0 Furthermore, it\u0027s \u003Cem\u003E\u003Cu\u003Einconsistent\u003C/u\u003E\u003C/em\u003E-- let\u0027s say I launch, note the coordinates that relPosition is pointing me at, then I revert-to-launch, I get \u003Cem\u003E\u003Cu\u003Every different numbers\u003C/u\u003E\u003C/em\u003E as if I\u0027m on a completely different part of the planet, even though the ship hasn\u0027t budged a centimeter.\n\u003C/p\u003E\n\u003Cp\u003E\nClearly I\u0027m doing something wrong here, perhaps \u0022getRelativePositionAtUT\u0022 is returning something different than I think?\u00A0 But darned if I have any clue what that might be, or what else I should be calling.\n\u003C/p\u003E\n\u003Cp\u003E\nDoes anyone have any advice to offer?\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2019-04-18T02:40:29Z","Content":"\n\u003Cp\u003E\nI\u0027m not sure about RelativePositionAtUT, but SCANsat uses getPositionAtUT, along with a correction for rotation taking the current time vs the time being checked\u00A0(the part about fixLon/Lat is just for clamping the values).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/S-C-A-N/SCANsat/blob/release/SCANsat/SCANcontroller.cs#L2065-L2073\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/S-C-A-N/SCANsat/blob/release/SCANsat/SCANcontroller.cs#L2065-L2073\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-04-18T02:44:19Z\u0022 title=\u002204/18/2019 02:44  AM\u0022 data-short=\u00225 yr\u0022\u003EApril 18, 2019\u003C/time\u003E by DMagic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2019-04-18T03:35:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223585861\u0022 data-ipsquote-contentid=\u0022183837\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221555555229\u0022 data-ipsquote-userid=\u002257416\u0022 data-ipsquote-username=\u0022DMagic\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n52 minutes ago, DMagic said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m not sure about RelativePositionAtUT, but SCANsat uses getPositionAtUT, along with a correction for rotation taking the current time vs the time being checked\u00A0(the part about fixLon/Lat is just for clamping the values).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/S-C-A-N/SCANsat/blob/release/SCANsat/SCANcontroller.cs#L2065-L2073\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/S-C-A-N/SCANsat/blob/release/SCANsat/SCANcontroller.cs#L2065-L2073\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThank you!\u00A0 Will see what I can cobble together using that approach.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2019-06-12T00:41:38Z","Content":"\n\u003Cp\u003E\nDid you solve it ? I\u0027m having the exact same issue.\n\u003C/p\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2019-06-12T19:12:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223616794\u0022 data-ipsquote-contentid=\u0022183837\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560300098\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDid you solve it ? I\u0027m having the exact same issue.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYep.\u00A0 Have a look at the \u003Ca href=\u0022https://github.com/KSPSnark/AutoAGL\u0022 rel=\u0022external nofollow\u0022\u003Esource code for AutoAGL\u003C/a\u003E, which is my mod where I needed this.\u00A0 Start with the \u003Ca href=\u0022https://github.com/KSPSnark/AutoAGL/blob/master/src/AutoAGL.cs#L425\u0022 rel=\u0022external nofollow\u0022\u003EProjectTimeUntilImpact\u003C/a\u003E function and work from there.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2019-06-12T23:37:21Z","Content":"\n\u003Cp\u003E\nThanks.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003ESo, a quick follow up : from my tests, it seems that correcting the longitude for the mainbody rotation is necessary only if the reference frame is rotating (below 100 Km altitude at Kerbin), not once you get in the inertial frame.\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nEdit : I\u0027m dumb.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-13T03:48:38Z\u0022 title=\u002206/13/2019 03:48  AM\u0022 data-short=\u00225 yr\u0022\u003EJune 13, 2019\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"}]}