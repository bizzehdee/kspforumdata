{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":133,"Articles":[{"CreatedByName":"damerell","CreatedById":123074,"CreatedDateTime":"2015-07-07T13:58:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EI believe he is referring to something similar to Console.ReadLine() in C#, or cin \u0026gt;\u0026gt; in C\u002B\u002B,\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou don\u0027t say.\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Ewhich is a feature unfortunately lacking in kOS.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI feared so.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-07T21:56:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EI believe he is referring to something similar to Console.ReadLine() in C#, or cin \u0026gt;\u0026gt; in C\u002B\u002B, which is a feature unfortunately lacking in kOS.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt keeps getting put off because a prerequisite is to first provide users with proper string manipulations (length, substrings, check for isdigit(), etc) they can use in their scripts, and that kept getting pushed back. Without proper string manipulation, reading raw input is often useless (no way to go from the string \u002210000\u0022 to the number ten thousand that you can perform math operations on).\u003C/p\u003E\u003Cp\u003EString operations are planned for kOS 0.18.0. Depending on how fast they are to implement, maybe user input too, but it\u0027s more likely that user input ends up coming out after that. Because once you open up user input, detecting bogus input and reacting to it is one of those things that explodes code size and turns simple things into a mess of exception cases, we\u0027d like to give nice wrappers around all that to keep kOS having the sort of \u0022newbie-friendly\u0022 feel it has now. We get lots of users saying they\u0027ve never programmed before but they picked up kOS to give it a go. We want to keep it accessible for them. We\u0027ve been throwing around the idea of having one single kOS command that can specify an input field and just tell kOS something like \u0022this needs to be an integer between 1 and 100 please\u0022 and having kOS deal with the mess of enforcing that. This is all still pie-in-the-sky talk so don\u0027t take this as a promise.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-07T22:03:24Z\u0022 title=\u002207/07/2015 10:03  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 7, 2015\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Qigon","CreatedById":141819,"CreatedDateTime":"2015-07-08T01:51:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWe\u0027ve been throwing around the idea of having one single kOS command that can specify an input field and just tell kOS something like \u0022this needs to be an integer between 1 and 100 please\u0022 and having kOS deal with the mess of enforcing that. This is all still pie-in-the-sky talk so don\u0027t take this as a promise.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESounds very useful and also very cool! \u003C/p\u003E\u003Cp\u003ECan you add one more thing to the wish list? Some basic handle of units, like time and distance. So you\u0027d say set t to 10000 and it\u0027d print 5 days, or 10km, or 10.000 etc etc. And a very small number would print as 2.36/100.000 etc etc. Maybe it could be called pretty print.\u003C/p\u003E\n"},{"CreatedByName":"ABZB","CreatedById":98947,"CreatedDateTime":"2015-07-08T02:00:07Z","Content":"\n\u003Cp\u003EI would really like the ability to request user input via command line - for example, in my launch script, I would like to be able to set the acceleration that I want to maintain, or alter the steepness of the launch profile, without having to open the file and re-set the variables each time.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-08T03:38:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003Ekeep kOS having the sort of \u0022newbie-friendly\u0022 feel it has now. We get lots of users saying they\u0027ve never programmed before but they picked up kOS to give it a go. We want to keep it accessible for them.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd I have to say, as much as I appreciate this sentiment and commend you for the effort you\u0027ve gone through to make everything accessible to people new to programming, sometimes I find myself wishing there were an alternative available that used somewhat higher-level syntax. (and I don\u0027t mean that in the computational sense, just something like more like \u0022private foo = number;\u0022 instead of \u0022LOCAL foo IS number.\u0022) Hell, if I were good enough at programming, I\u0027d even start poking around under the hood and seeing what it might take to get a kOS-like mod that used straight C#. (Or, at the very least, something very close to it.) Unfortunately, I lack the knowledge and skills to even be able to determine whether or not that is actually feasible, much less execute it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ABZB\u0022 data-cite=\u0022ABZB\u0022\u003E\u003Cdiv\u003EI would really like the ability to request user input via command line - for example, in my launch script, I would like to be able to set the acceleration that I want to maintain, or alter the steepness of the launch profile, without having to open the file and re-set the variables each time.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are actually a couple of ways you could accomplish this. You could set all or some of those variables as parameters and then pass them as inputs to the program when it is run. For example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//myLaunchProgram.ks\u003Cbr\u003E\u003Cbr\u003EPARAMETER inclination\u003Cbr\u003EPARAMETER periapsis\u003Cbr\u003EPARAMETER apoapsis\u003Cbr\u003E...etc.\u003Cbr\u003E\u003Cbr\u003E//programmy stuff\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand then do:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ERUN myLaunchProgram(45,100,250). //45 degree inclination, 100km periapsis, 250km apoapsis.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr, if you have a second monitor like I do, you can keep the script open in a text editor on your second panel, (scripts stored in kOS\u0027s archive are in Kerbal Space Program/Ships/Script) run your program, watch your rocket explode, tweak some stuff in the text editor, CTRL\u002BS, then reload your rocket and do\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ECOPY myLaunchProgram.ks FROM ARCHIVE.\u003Cbr\u003ERUN myLaunchProgram.ks.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-08T03:45:57Z\u0022 title=\u002207/08/2015 03:45  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 8, 2015\u003C/time\u003E by VFB1210\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-08T05:21:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EAnd I have to say, as much as I appreciate this sentiment and commend you for the effort you\u0027ve gone through to make everything accessible to people new to programming, sometimes I find myself wishing there were an alternative available that used somewhat higher-level syntax. (and I don\u0027t mean that in the computational sense, just something like more like \u0022private foo = number;\u0022 instead of \u0022LOCAL foo IS number.\u0022) Hell, if I were good enough at programming, I\u0027d even start poking around under the hood and seeing what it might take to get a kOS-like mod that used straight C#. (Or, at the very least, something very close to it.) Unfortunately, I lack the knowledge and skills to even be able to determine whether or not that is actually feasible, much less execute it.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere already exists a kOS-like system that lets you write an autopilot directly in C#.\u003C/p\u003E\u003Cp\u003EIt\u0027s called Stock KSP.\u003C/p\u003E\u003Cp\u003EThis is why it\u0027s unlikely that C# would ever be supported by kOS. It would be a sort of large effort to get you something a bit similar to what you already can do today by writing your own mod.\u003C/p\u003E\u003Cp\u003EI really feel that this next point needs to be in a FAQ: \u003C/p\u003E\u003Cp\u003EPeople often operate under the misconception that kerboscript is hindering kOS. It\u0027s exactly the other way around. kOS is hindering kerboscript. As the underlying VM becomes more capable, those capabilites get exposed by adding them to kerboscript. If the language is missing a feature, it\u0027s because the VM is missing it.\u003C/p\u003E\u003Cp\u003EFor example, right now the VM can\u0027t store the notion of a user-defined struct. That also limits user-defined OOP things like classes and methods. Again, the VM causes this, and kerboscript follows suit.\u003C/p\u003E\u003Cp\u003EKerboscript is not the cause of the limitations. It\u0027s the *effect* of them.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-08T05:27:34Z\u0022 title=\u002207/08/2015 05:27  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 8, 2015\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-08T09:13:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EPeople often operate under the misconception that kerboscript is hindering kOS. It\u0027s exactly the other way around. kOS is hindering kerboscript. As the underlying VM becomes more capable, those capabilites get exposed by adding them to kerboscript. If the language is missing a feature, it\u0027s because the VM is missing it.\u003C/p\u003E\u003Cp\u003EFor example, right now the VM can\u0027t store the notion of a user-defined struct. That also limits user-defined OOP things like classes and methods. Again, the VM causes this, and kerboscript follows suit.\u003C/p\u003E\u003Cp\u003EKerboscript is not the cause of the limitations. It\u0027s the *effect* of them.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPlease don\u0027t get me wrong, I absolutely understand that, and I was in no way trying to say that kerboscript is holding the mod back. While I don\u0027t posses the programming skills to produce anything like kOS, I do know enough to know that is a massive undertaking, and that even though this mod has matured for a quite a long time already, it needs more time to become more well rounded and full-featured.\u003C/p\u003E\u003Cp\u003EIt\u0027s just that programming in kerboscript can sometimes feel...I\u0027m not exactly sure how to describe it; maybe a little juvenile? That sort of gets the sentiment across but sounds much more derogatory than I actually feel about it. And I\u0027d like to reiterate that I understand kerboscript\u0027s purpose and appreciate all of the work you\u0027ve done to make it so accessible. Without that accessibility the mod may not have garnered much support, without much support it probably wouldn\u0027t have been picked up by two new authors who have improved the mod so much, and I would be without a mod that I very much enjoy.\u003C/p\u003E\u003Cp\u003E It\u0027s just that part of me feels like something more C#/C\u002B\u002B like wouldn\u0027t have been \u003Cem\u003Etoo\u003C/em\u003E difficult for a complete noob to get used to. A good example to look at would be the Expression2 system from the Garry\u0027s Mod mod WireMod (say that 5 times fast!). Very similar premise to kOS, but is coded in a syntax very much like C\u002B\u002B (though it is distinctly its own--it isn\u0027t actually C\u002B\u002B). Despite that, new users without programming experience had little or no trouble picking it up.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure why I\u0027m saying all this though, it\u0027s not like I\u0027m entitled enough to think that such a large feature of the mod should be changed because I want it to scratch my \u0022I feel smart.\u0022 itch a little better. And to be perfectly honest, I would 100% rather keep kOS with all of its current features and kerboscript, rather than ditch kerboscript and lose features until they can be put back in with a new language.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-08T11:30:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m not sure why I\u0027m saying all this though, it\u0027s not like I\u0027m entitled enough to think that such a large feature of the mod should be changed because I want it to scratch my \u0022I feel smart.\u0022 itch a little better. And to be perfectly honest, I would 100% rather keep kOS with all of its current features and kerboscript, rather than ditch kerboscript and lose features until they can be put back in with a new language.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not entirely happy with the syntax decisions made early in Kerboscript by others (the dot to end commands was not entirely constructed correctly in the BNF grammar, where it should have been defined as a separator between statements. Instead it was defined as a PART of each of the statements, making it necessary to include it even in the midst of other expressions such as the new FROM loop). But despite being a bit weird, I sort of dislike drastic alterations in a language more than I do the weirdness of Kerboscript. I don\u0027t want it to become like Perl, where it\u0027s nearly unreadable because there\u0027s 4 or 5 different valid syntax expressions that all mean the same thing. It makes it more likely that when reading someone else\u0027s code, you\u0027ll encounter a syntax construct they used that is totally baffling and alien to you despite having used the language a lot.\u003C/p\u003E\u003Cp\u003EBasically, when the VM gets a new feature that allows a new expansion to kerboscript, I tend to prefer sticking to the look and feel of existing kerboscript as being more important than doing things the way I\u0027m used to from other languages. Thus why you initialize new variables with a word (\u0022is\u0022) rather than an equals sign.\u003C/p\u003E\u003Cp\u003EAlso, note that in the languages where you can use equals \u0027=\u0027 for assignment, they almost always also demand that you use double-equals \u0027==\u0027 for boolean checks. This isn\u0027t a coincidence. It\u0027s because these languages will sometimes allow assignment to also return a value (allowing you do do things like x = y = z = 1 to assign 3 variables at once) and therefore assignment statements are themselves also expressions. Since you can plug them both into the same place in the syntax, the compiler needs a way to differentiate which you meant. i.e. in C, \u0022if( x = 1 )\u0022 always is true, because it only uses one equals sign, it\u0027s *assigning* x to 1, not comparing it to 1, and then returning from that the value assigned (the 1), which is always true. I\u0027d rather keep kOS free of that sort of gotcha for the new programmers.\u003C/p\u003E\u003Cp\u003EIn order to continue to use the single-equals \u0027=\u0027 for comparison, it makes sense to keep using words for assignment, for now, just to help the compiler easily differentiate them. And lets face it, using \u0027=\u0027 for assignment isn\u0027t technically mathematically correct. It\u0027s just that we programmers have gotten used to the convention. (It\u0027s the reason older versions of BASIC used to require the word LET, as in LET X = 1, rather than just X = 1. It was to keep from rubbing the mathematicians the wrong way, back in the day when computer programming wasn\u0027t a separate profession unto itself, and most programmers were mathematicians first, and programmers second.)\u003C/p\u003E\n"},{"CreatedByName":"ABZB","CreatedById":98947,"CreatedDateTime":"2015-07-08T12:58:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThere are actually a couple of ways you could accomplish this. You could set all or some of those variables as parameters and then pass them as inputs to the program when it is run. For example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//myLaunchProgram.ks\u003Cbr\u003E\u003Cbr\u003EPARAMETER inclination\u003Cbr\u003EPARAMETER periapsis\u003Cbr\u003EPARAMETER apoapsis\u003Cbr\u003E...etc.\u003Cbr\u003E\u003Cbr\u003E//programmy stuff\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand then do:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ERUN myLaunchProgram(45,100,250). //45 degree inclination, 100km periapsis, 250km apoapsis.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr, if you have a second monitor like I do, you can keep the script open in a text editor on your second panel, (scripts stored in kOS\u0027s archive are in Kerbal Space Program/Ships/Script) run your program, watch your rocket explode, tweak some stuff in the text editor, CTRL\u002BS, then reload your rocket and do\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ECOPY myLaunchProgram.ks FROM ARCHIVE.\u003Cbr\u003ERUN myLaunchProgram.ks.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s funny - I do the latter, myself (I prefer to have GoT or a nice game of Yugioh up in the other screen, though (Card games in SPACE)). I must have missed the PARAMETER thing - Thanks!\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-08T13:32:59Z","Content":"\n\u003Cp\u003E^I\u0027m the same way, I usually have Netflix on while I\u0027m messing around. Usually my setup is KSP on the main monitor in -popupwindow mode, Visual Studio on my portrait screen, and then my phone plugged into my line in with Futurama playing. Oversaturation of media? Pft.\u003C/p\u003E\u003Cp\u003ENow in a vein actually related to kOS as it is, is it possible to pass variables around multiple scripts running on multiple processors? For instance, if I have a seperate processor that controls only the engine gimbal/throttle etc, could I pass things like throttle and steering information from a different kOS processing unit into that processor to keep guidance scripts clutter-free usable on different rockets, without LOCK STEERING shaking the rocket to pieces whenever SAS is not engaged.\u003C/p\u003E\n"},{"CreatedByName":"ABZB","CreatedById":98947,"CreatedDateTime":"2015-07-08T13:35:35Z","Content":"\n\u003Cp\u003EKOS:\u003C/p\u003E\u003Cp\u003EWe heard you like crashing, so we put a computer in your rocket, so you can crash while you crash \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"damerell","CreatedById":123074,"CreatedDateTime":"2015-07-08T15:28:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E(It\u0027s the reason older versions of BASIC used to require the word LET, as in LET X = 1, rather than just X = 1. It was to keep from rubbing the mathematicians the wrong way, back in the day when computer programming wasn\u0027t a separate profession unto itself, and most programmers were mathematicians first, and programmers second.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBBC BASIC did not, thankfully - but as someone who wrote BASIC in the 8-bit micro days, kerboscript is kind of comforting and familiar.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-09T06:49:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003E^I\u0027m the same way, I usually have Netflix on while I\u0027m messing around. Usually my setup is KSP on the main monitor in -popupwindow mode, Visual Studio on my portrait screen, and then my phone plugged into my line in with Futurama playing. Oversaturation of media? Pft.\u003Cp\u003ENow in a vein actually related to kOS as it is, is it possible to pass variables around multiple scripts running on multiple processors? For instance, if I have a seperate processor that controls only the engine gimbal/throttle etc, could I pass things like throttle and steering information from a different kOS processing unit into that processor to keep guidance scripts clutter-free usable on different rockets, without LOCK STEERING shaking the rocket to pieces whenever SAS is not engaged.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d like there to exist some sort of API to let kOS cores talk to other kOS cores, with a simplified message queue (as in SET MSG TO GETMESSAGE(). PRINT MSG:TIMESTAMP \u002B \u0022, \u0022 \u002B MSG:SOURCE \u002B \u0022, \u0022 \u002B MSG:DATA. // prints something like 9132, VESSEL(\u0022ship A\u0022), 3 to mean \u0022ship A sent you a \u00273\u0027 at time 9132 seconds\u0022.)\u003C/p\u003E\u003Cp\u003EBut that sort of thing doesn\u0027t exist yet.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-09T08:47:27Z","Content":"\n\u003Cp\u003E^That could be interesting, but I was more or less talking about a variable scope one step above global. Maybe SHARED or UNIVERSAL? I\u0027d probably go with SHARED, and only allow processors to access shared variables when they are within a certain distance of the core they were declared on. Perhaps even allow antennas to increase this distance.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2015-07-09T19:29:26Z","Content":"\n\u003Cp\u003EWhen I have a file foo.ks with\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efunction aponode {\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Efunction exenode {\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ehow do I access those functions from mission.ks?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eaponode().\u003Cbr\u003Eexenode().\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-09T22:32:35Z","Content":"\n\u003Cp\u003EWell, for one, those functions have nothing in them, and two, they need to be declared in every program you want to use them in. You call them just like you showed, using apnode() and exnode().\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-10T00:36:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EWell, for one, those functions have nothing in them, and two, they need to be declared in every program you want to use them in.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECorrection: They need to be RUN in every program you want to use them in. Not declared. The system is designed to allow you to have KS files that are effectively just libraries used by other programs.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// This is the body of a file called mylib.ks:\u003Cbr\u003E\u003Cbr\u003Efunction halfOf {\u003Cbr\u003E    declare parameter x.\u003Cbr\u003E    return (0.5)*x.\u003Cbr\u003E}.\u003Cbr\u003Efunction setmessage {\u003Cbr\u003E    declare parameter msg.\u003Cbr\u003E    print \u0022                                               \u0022 at (0,5).\u003Cbr\u003E    print msg at (0,5).\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// this is some other program, myprog.ks, that runs functions in mylib.ks\u003Cbr\u003E\u003Cbr\u003Eprint \u0022loading libraries\u0022.\u003Cbr\u003Erun mylib.\u003Cbr\u003Eprint \u0022library loaded\u0022.\u003Cbr\u003EsetMessage( \u0022half of 7 is \u0022 \u002B halfOf(7) ). // example using the library.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe functions in mylib.ks don\u0027t need to be declared inside myprog.ks to be run from myprog.ks. myprog.ks just has to run mylib.ks first at the top, and from then on it has the functions of mylib.ks in its memory.\u003C/p\u003E\n"},{"CreatedByName":"damerell","CreatedById":123074,"CreatedDateTime":"2015-07-10T01:34:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EWhen I have a file foo.ks with\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou \u0022run foo.ks.\u0022 in mission.ks before invoking those functions.\u003C/p\u003E\u003Cp\u003EThis is made clear by the kOS standard library. If you\u0027re anything like me, you are now saying \u0022wait, there\u0027s a standard library??\u0022\u003C/p\u003E\u003Cp\u003EThere is, it\u0027s at \u003Ca href=\u0022https://github.com/KSP-KOS/KSLib\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KSLib\u003C/a\u003E and jolly useful, it\u0027s also quite well hidden or perhaps I\u0027m just oblivious.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-10T01:37:35Z","Content":"\n\u003Cp\u003EWell I\u0027ll be damned. Awesome to know!\u003C/p\u003E\n"},{"CreatedByName":"Tafen","CreatedById":71585,"CreatedDateTime":"2015-07-10T15:37:17Z","Content":"\n\u003Cp\u003EI\u0027m trying to make an automated rover, but i want to use biomes instead of cordinates. So heres my question: Is there a command that relates to which biome one\u0027s in? so that i can just write something like \u0022if enters a new biome, then deploy/stop or something something\u0022 (not valid code speak back there, but you understand xD).\u003C/p\u003E\n"},{"CreatedByName":"MAV3RICK","CreatedById":128899,"CreatedDateTime":"2015-07-11T09:20:32Z","Content":"\n\u003Cp\u003EIs there some way of using the Kerbal Engineer redux values in kOS? I\u0027m wondering if there\u0027s a way to limit throttle on launch so that atmospheric efficiency is no greater than 100%\u003C/p\u003E\n"},{"CreatedByName":"thegreatgonz","CreatedById":135977,"CreatedDateTime":"2015-07-11T17:18:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MAV3RICK\u0022 data-cite=\u0022MAV3RICK\u0022\u003E\u003Cdiv\u003EIs there some way of using the Kerbal Engineer redux values in kOS? I\u0027m wondering if there\u0027s a way to limit throttle on launch so that atmospheric efficiency is no greater than 100%\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1. There\u0027s no way to access KER from kOS, as far as I know.\u003C/p\u003E\u003Cp\u003E2. In older versions of kOS, you could compute atmospheric efficiency easily: there was a function to get terminal velocity, and atmospheric efficiency is just the ratio of your velocity to terminal velocity. That function has been removed from kOS, but that\u0027s because...\u003C/p\u003E\u003Cp\u003E3. With the new aerodynamics model in KSP 1.0, terminal velocity is much harder to compute. I don\u0027t think KER is actually doing that; my hunch is it\u0027s just using the old model even though it no longer applies.\u003C/p\u003E\u003Cp\u003E4. I\u0027ve heard that 100% atmospheric efficiency is no longer a good rule of thumb for setting your launch velocity anyway.\u003C/p\u003E\n"},{"CreatedByName":"MAV3RICK","CreatedById":128899,"CreatedDateTime":"2015-07-11T17:37:53Z","Content":"\n\u003Cp\u003EAh, ok. Thanks for the reply anyway.\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-07-11T22:12:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MAV3RICK\u0022 data-cite=\u0022MAV3RICK\u0022\u003E\u003Cdiv\u003EIs there some way of using the Kerbal Engineer redux values in kOS? I\u0027m wondering if there\u0027s a way to limit throttle on launch so that atmospheric efficiency is no greater than 100%\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is a way to get a combined value for drag and lift. \u003C/p\u003E\u003Cp\u003EYou use:\u003C/p\u003E\u003Cp\u003E total force = mass * acceleration\u003C/p\u003E\u003Cp\u003Etotal force = engine thrust \u002B force due to gravity \u002B lift\u0026amp;drag\u003C/p\u003E\u003Cp\u003Ethis gives\u003C/p\u003E\u003Cp\u003Elift\u0026amp;drag = mass * (acceleration - gravity) - thrust\u003C/p\u003E\u003Cp\u003EIt requires the use of an accelerometer for the acceleration as i don\u0027t think kOS will let you get the acceleration without one.\u003C/p\u003E\u003Cp\u003EBut it should work.\u003C/p\u003E\u003Cp\u003E(am trying to put together a lib file for it now)\u003C/p\u003E\u003Cp\u003EEdit: if drag is assumed to be along the retrograde vector then lift and drag can be split up as well with the lift component being at right angles to the direction of travel.\u003C/p\u003E\u003Cp\u003EEdit2: it should be noted that this method can only be used on the fly and not for predictive calculations.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-12T00:10:37Z\u0022 title=\u002207/12/2015 12:10  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 12, 2015\u003C/time\u003E by TDW\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Qigon","CreatedById":141819,"CreatedDateTime":"2015-07-12T03:59:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TDW\u0022 data-cite=\u0022TDW\u0022\u003E\u003Cdiv\u003EThere is a way to get a combined value for drag and lift. \u003Cp\u003EYou use:\u003C/p\u003E\u003Cp\u003E total force = mass * acceleration\u003C/p\u003E\u003Cp\u003Etotal force = engine thrust \u002B force due to gravity \u002B lift\u0026amp;drag\u003C/p\u003E\u003Cp\u003Ethis gives\u003C/p\u003E\u003Cp\u003Elift\u0026amp;drag = mass * (acceleration - gravity) - thrust\u003C/p\u003E\u003Cp\u003EIt requires the use of an accelerometer for the acceleration as i don\u0027t think kOS will let you get the acceleration without one.\u003C/p\u003E\u003Cp\u003EBut it should work.\u003C/p\u003E\u003Cp\u003E(am trying to put together a lib file for it now)\u003C/p\u003E\u003Cp\u003EEdit: if drag is assumed to be along the retrograde vector then lift and drag can be split up as well with the lift component being at right angles to the direction of travel.\u003C/p\u003E\u003Cp\u003EEdit2: it should be noted that this method can only be used on the fly and not for predictive calculations.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENice. I\u0027d love to give that a try anytime. Anyway, a rough estimation will be more than enough for me. \u003C/p\u003E\u003Cp\u003EBTW is thrust a vector?\u003C/p\u003E\n"}]}