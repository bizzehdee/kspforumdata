{"TopicId":32427,"ForumId":29,"TopicTitle":"A Question about Textures and 0.20 - blurring","CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2013-06-11T12:33:17Z","PageNum":1,"Articles":[{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2013-06-11T12:33:17Z","Content":"\n\u003Cp\u003EHi, In the Kerbal Alarm Clock I use a number of png\u0027s as textures for buttons. I noticed in the change the 0.20 and above that there appears to be some graphical blurring occuring in the textures. I have narrowed it down to the way the textures are loaded and have the below.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EI used to load the textures by reading the png contents to a Byte array and then using the Texture2D.LoadImage() function with the Byte Array\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWhen I use the pngs as loaded by the GameDatabase using GameDatabase.Instance.GetTexture(\u0022Texture1\u0022,false) I can see blurring occuring of the texture even when the game is set at the highest settings\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/QN7yDrp.png\u0022 alt=\u0022QN7yDrp.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E* Easier to see if you zoom in a bit, particularly on the left most image and the DN arrow.\u003C/p\u003E\u003Cp\u003EDoes anybody have any idea about why this is occuring and if there is a way for me to get \u0022unaffected\u0022 Textures to use for Buttons? (The pngs are all 24bit color, and pretty small)\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2013-06-11T12:58:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trigger Au\u0022 data-cite=\u0022Trigger Au\u0022\u003E\u003Cdiv\u003EDoes anybody have any idea about why this is occuring and if there is a way for me to get \u0022unaffected\u0022 Textures to use for Buttons? (The pngs are all 24bit color, and pretty small)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy first impression is that it\u0027s a quantization artifact, possibly caused by converting the RGBA32 image to a DXT5 compressed format. DXT5 doesn\u0027t handle continuous tones, nor sharp edge transitions, particularly well, and its artifacts tend to show up in 4x4 grids, since that\u0027s what it uses for quantization. It might be with the new asset loader, Squad is loading the image and handing it to Unity to convert to a compressed format. That could also explain some of the higher memory usage that\u0027s been reported, if there\u0027s a memory leak in there. As for getting around it, that I don\u0027t know. I\u0027ve never used Unity.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-06-11T14:59:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MOARdV\u0022 data-cite=\u0022MOARdV\u0022\u003E\u003Cdiv\u003EMy first impression is that it\u0027s a quantization artifact, possibly caused by converting the RGBA32 image to a DXT5 compressed format. DXT5 doesn\u0027t handle continuous tones, nor sharp edge transitions, particularly well, and its artifacts tend to show up in 4x4 grids, since that\u0027s what it uses for quantization. It might be with the new asset loader, Squad is loading the image and handing it to Unity to convert to a compressed format. That could also explain some of the higher memory usage that\u0027s been reported, if there\u0027s a memory leak in there. As for getting around it, that I don\u0027t know. I\u0027ve never used Unity.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESounds logical. Seems to me that the test for that would be to convert some PNG to the format used and see if they still get altered once loaded. I also do not know Unity.\u003C/p\u003E\u003Cp\u003EAnyone with more knowledge have any ideas?\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2013-06-11T16:12:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003ESounds logical. Seems to me that the test for that would be to convert some PNG to the format used and see if they still get altered once loaded. I also do not know Unity.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI ran img_iconPauseEffect_100.png through Microsoft\u0027s texconv utility to convert it to DXT5 (BC3_UNORM) and back to PNG, and the results are pretty close to identical to what Trigger Au sees (I don\u0027t have a drop box to post the image, or I\u0027d include it). It\u0027s an artifact of DXT5 texture compression.\u003C/p\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2013-06-11T21:43:32Z","Content":"\n\u003Cp\u003EThanks for the thoughts/tests, I hadn\u0027t thought of Compression \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003ESo basically the way the new loader is converting the files to textures adds some compression, and without any way to control that I\u0027ll need to go back to the previous method. \u003C/p\u003E\u003Cp\u003ESound right?\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2013-06-11T23:15:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trigger Au\u0022 data-cite=\u0022Trigger Au\u0022\u003E\u003Cdiv\u003ESo basically the way the new loader is converting the files to textures adds some compression, and without any way to control that I\u0027ll need to go back to the previous method. \u003Cp\u003ESound right?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPretty much. If the current asset loader system automatically converts each image to a DXT format (which is what it looks like), you\u0027re going to have artifacts on your icons. If the old method still works, you might want to do that for the UI icons.\u003C/p\u003E\u003Cp\u003EI don\u0027t know if devs look at threads like this, but if they do: I\u0027d suggest \u0022small\u0022 textures (say, 64x64 or smaller) be stored as uncompressed RGBA32 format, instead of DXT compressed. If the texture is that small, you gain very little by compressing it, and, if it\u0027s a UI component like these are, the quality loss is substantial, and the memory cost is pretty small: RGBA32 64x64 textures use 16k, while DXT5 64x64 uses 4k (or 5k for a full mipchain) for the same data.\u003C/p\u003E\n"}]}