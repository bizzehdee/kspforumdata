{"TopicId":145679,"ForumId":44,"TopicTitle":"Rendezvous Calculations","CreatedByName":"alpha tech","CreatedById":84978,"CreatedDateTime":"2016-08-09T20:41:01Z","PageNum":1,"Articles":[{"CreatedByName":"alpha tech","CreatedById":84978,"CreatedDateTime":"2016-08-09T20:41:01Z","Content":"\n\u003Cp\u003E\nFor a while I have been trying to figure out how to calculate\u00A0when two space crafts will intersect each other and have come up with nothing so I was wondering if anybody else has figured it out?\n\u003C/p\u003E\n\u003Cp\u003E\nIf you want to know why I\u0027m thinking of a challenge to rendezvous an dock with another spacecraft without using map mode\n\u003C/p\u003E\n"},{"CreatedByName":"ElWanderer","CreatedById":114015,"CreatedDateTime":"2016-08-09T22:11:06Z","Content":"\n\u003Cp\u003E\nI had to figure it all out (with a lot of referring to online resources and other people\u0027s efforts) for my kOS scripts. I\u0027ve automated rendezvous from launch to taking up station 25m away from the target. I found matching inclination the hardest part to get my head around. Once you\u0027ve matched inclination and know that the to orbits intersect somewhere, it\u0027s all a matter of timing. I don\u0027t see how you\u0027d do all this without mods that supply additional information about your orbit and that of the target (\u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E, Mechjeb, etc.) or else just using a huge amount of delta-v to brute force it.\n\u003C/p\u003E\n"},{"CreatedByName":"alpha tech","CreatedById":84978,"CreatedDateTime":"2016-08-11T17:29:45Z","Content":"\n\u003Cp style=\u0022text-align:justify;\u0022\u003E\nFrom what I have determined about calculating\u00A0rendezvous is your position and your\u00A0orbital period\n\u003C/p\u003E\n"},{"CreatedByName":"cubinator","CreatedById":150330,"CreatedDateTime":"2016-08-11T23:59:29Z","Content":"\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.faa.gov/other_visit/aviation_industry/designees_delegations/designee_types/ame/media/Section%20III.4.1.5%20Maneuvering%20in%20Space.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.faa.gov/other_visit/aviation_industry/designees_delegations/designee_types/ame/media/Section III.4.1.5 Maneuvering in Space.pdf\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know how you\u0027d calculate the phase angle without some sort of in-game sextant.\n\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk2","CreatedById":167493,"CreatedDateTime":"2016-08-13T14:38:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222711180\u0022 data-ipsquote-contentid=\u0022145679\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470780666\u0022 data-ipsquote-userid=\u0022114015\u0022 data-ipsquote-username=\u0022ElWanderer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 10/08/2016 at 1:11 AM, ElWanderer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI had to figure it all out (with a lot of referring to online resources and other people\u0027s efforts) for my kOS scripts. I\u0027ve automated rendezvous from launch to taking up station 25m away from the target. I found matching inclination the hardest part to get my head around. Once you\u0027ve matched inclination and know that the to orbits intersect somewhere, it\u0027s all a matter of timing.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHere\u0027s the launch angle (azimuth) calculation. \u003Ca href=\u0022http://www.orbiterwiki.org/wiki/Launch_Azimuth\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.orbiterwiki.org/wiki/Launch_Azimuth\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis will get you very close to the target inclination.\n\u003C/p\u003E\n\u003Cp\u003E\nThe next trick in actually the launch time, which is actually an offset from the wiki formula.\n\u003C/p\u003E\n\u003Cp\u003E\nI take this as :-\u00A0\u00A0\u00A0 \u003Cstrong\u003ELaunch base longitude\u00A0 - (Time to orbit / 2)\u003C/strong\u003E,\u00A0 but it varies a bit depending on the rocket, parking orbit height.. etc.\n\u003C/p\u003E\n\u003Cp\u003E\nbut I\u0027ve settled on 8 minutes to orbit so subtract/add 240 seconds to the launch time.\n\u003C/p\u003E\n\u003Cp\u003E\nOnce in parking orbit you\u0027re still not accurate enough, so now have to make in-flight corrections to match Inclination and LAN.\n\u003C/p\u003E\n\u003Cp\u003E\nInclination corrections are done at Ascending and Decending nodes on the earths equator, and LAN corrections are done at the most Northerly\u00A0 and Southerly Latitude points of the orbit.\n\u003C/p\u003E\n\u003Cp\u003E\nYou should have this all wrapped up within 2 orbits (1 orbit if your launch is good).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFrom here it\u0027s a matter of timing, and doing orbit burns at the target apsides will help with accuracy.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m still testing Orbit times when I last left this... will get back to it sometime..\n\u003C/p\u003E\n\u003Cp\u003E\nThis is as far as I\u0027ve got that works... \u003Ca href=\u0022https://www.dropbox.com/s/v6ec9xoila6sw6z/ISS1_A.mp4?dl=0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.dropbox.com/s/v6ec9xoila6sw6z/ISS1_A.mp4?dl=0\u003C/a\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//******************************************************************************\n//\t\t\t\t\t\t\t\tCALCULATE LAUNCH ANGLE\n//******************************************************************************\nFunction Stg0_ShipLaunchAngle\n{\nLocal V_Orb is 0.\nLocal V_xrot is 0.\nLocal V_yrot is 0.\nLocal f_TmpA is 0.\nLocal f_TmpB is 0.\n\n\tSet b_INC_Reduction to FALSE.\t\t\t\t\t\t\t\t\t\t\t//\n\tSet f_TmpA to ABS(BASE_LAT).                                        \t//\n\tIF Targ_Inc \u0026gt; f_TmpA\t\t\t\t\t\t\t\t\t\t\t\t\t// INCLINATION limitation\n\t{                                                                   \t//\n\t\tSet f_TmpB to ARCSIN(COS(Targ_Inc)/COS(f_TmpA)).\t\t\t\t\t// Desired angle at Base Latitude\n\t\tSet V_Orb to SQRT(LUNARS:Mu/(LUNARS:Radius \u002B ParkingOrbit)).\t\t// End Maneuver velocity (orbit insertion)\n\t\tSet V_xrot to (V_Orb * SIN(f_TmpB)) - (465.9 * COS(f_TmpA)).\t\t// X-velocity component minus surface velocity at latitude.\n\t\tSet V_yrot to (V_Orb * COS(f_TmpB)).\t\t\t\t\t\t\t\t// Y-valocity component.\n\t\tSet f_TmpA to ARCCOS(COS(f_TmpB)/SIN(Targ_Inc)).\t\t\t\t\t// Asc Node to Base longitudes.\n\t\tSet f_TmpB to ARCTAN(V_xrot/V_yrot).\t\t\t\t\t\t\t\t// Launch angle\n\t\tIF b_AscNode = TRUE\t\t\t\t\t\t\t\t\t\t\t\t\t// Ascending node launch\n\t\t{                                                               \t//\n\t\t\tIF \tf_TmpB \u0026lt; 0 {Set f_TmpB to f_TmpB \u002B 360.}                \t//\n\t\t\tIF BASE_LAT \u0026gt; 0                                             \t//\n\t\t\t{                                                           \t//\n\t\t\t\tSet Ship_LAUNCHLong to (BASE_LONG - f_TmpA).            \t//\n\t\t\t}                                                           \t//\n\t\t\tELSE                                                        \t//\n\t\t\t{                                                           \t//\n\t\t\t\tSet Ship_LAUNCHLong to (BASE_LONG \u002B f_TmpA).            \t//\n\t\t\t}                                                           \t//\n\t\t}                                                               \t//\n\t\tELSE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Descending node launch\n\t\t{                                                               \t//\n\t\t\tSet f_TmpB to 180 - f_TmpB.                                 \t//\n\t\t\tIF \tf_TmpB \u0026lt; 0 {Set f_TmpB to f_TmpB \u002B 360.}                \t//\n\t\t\tIF BASE_LAT \u0026lt; 0                                             \t//\n\t\t\t{                                                           \t//\n\t\t\t\tSet Ship_LAUNCHLong to (BASE_LONG - f_TmpA).            \t//\n\t\t\t}                                                           \t//\n\t\t\tELSE                                                        \t//\n\t\t\t{                                                           \t//\n\t\t\t\tSet Ship_LAUNCHLong to (BASE_LONG \u002B f_TmpA).            \t//\n\t\t\t}                                                           \t//\n\t\t}                                                               \t//\n\t\tSet Ship_LaunchHead to f_TmpB - 0.9.                            \t//\n\t\tIF Ship_LAUNCHLong \u0026lt; 0 { Set Ship_LAUNCHLong to Ship_LAUNCHLong \u002B 360.}\n\t\tIF Ship_LAUNCHLong \u0026gt; 360 { Set Ship_LAUNCHLong to Ship_LAUNCHLong - 360.}\n\n\t\tSet DDINC to ABS(Ship_LaunchHead - (90 - Targ_Inc)).\t\t\t\t//\n\t\tIF DDINC \u0026gt; 10 {Set DDINC to 360 - DDINC.}                       \t//\n\t\tSet DDINC to DDINC/5.                                           \t//\n\n\t\t// FIRST SHIP GOES DIRECT TO 400KM.                             \t//\n\t\tIF b_Targ = FALSE {Set ParkingOrbit to Targ_StationHgt.}\t\t\t//\n\t}\n\tELSE\t//If Target inclination is below base latitude flag it and launch at 90\n\t{\n\t\tSet b_INC_Reduction to TRUE.\t\t\t\t\t\t\t\t\t\t//\n\t\tSet Ship_LaunchHead to 90.                                      \t//\n\t}                                                                   \t//\n}\n//******************************************************************************\n//\t\t\t\t\t\t\tDETERMINES LAUNCH TIME\n//******************************************************************************\nFunction Stg0_PreLaunch_Longitude\n{\nLocal tmpTime is 0.0.\nlocal m_Wop is 0.\n\n\tSet Targ_LanLong to (Targ_Lan - Ship:ORBIT:BODY:ROTATIONANGLE).\t\t\t// Current Longitude\n\tIF Targ_LanLong \u0026lt; 0 {Set Targ_LanLong to 360 \u002B Targ_LanLong.}\t\t\t// Bounds check\n\tIF Targ_LanLong \u0026gt; 360 {Set Targ_LanLong to Targ_LanLong - 360.}\t\n\n\tSet TtoLaunch to Targ_LanLong - Ship_LAUNCHLong.\t\t\t\t\t\t// Launch on Ascending node at the moment.\n\tSet TtoLaunch to TtoLaunch - 1.\t\t\t\t\t\t\t\t\t\t\t// - 240 seconds (LaunchTime/2)\n\tIF TtoLaunch \u0026lt; 0 {Set TtoLaunch to 360 \u002B TtoLaunch.}\t\t\t\t\t// Bounds check\n\tIF TtoLaunch \u0026gt; 360 {Set TtoLaunch to TtoLaunch - 360.}\t\t\t\t\t//\n\tSet TtoLaunch to TtoLaunch * 240.\t\t\t\t\t\t\t\t\t\t// Convert Long to seconds\n\n\tIf ABS(TtoLaunch) \u0026lt; 5\t\t\t\t\t\t\t\t\t\t\t\t\t// Start launch sequence at 5 seconds\n\t{                       \t\t\t\t\t\t\t\t\t\t\t\t//\n\n\t\tReturn TRUE.        \t\t\t\t\t\t\t\t\t\t\t\t// Flag time to start\n\t}                       \t\t\t\t\t\t\t\t\t\t\t\t//\n\tELSE\n\t{                       \t\t\t\t\t\t\t\t\t\t\t\t// We only do this when out of Countdown\n\t\tIF TtoLaunch \u0026lt; 20 {Set WARP to 0.}                                  // \u0027Warp Factor X Commander Data\u0027\n\t\tELSE IF TtoLaunch \u0026lt; 50 {Set WARP to 1.}                            \t//\n\t\tELSE IF TtoLaunch \u0026lt; 500 {Set WARP to 2.}                           \t//\n\t\tELSE IF TtoLaunch \u0026lt; 2000 {Set WARP to 3.}                           //\n\t\tELSE {Set WARP to 4.}                                               //\n\t\tReturn FALSE.       \t\t\t\t\t\t\t\t\t\t\t\t// Don\u0027t start yet\n\t}                       \t\t\t\t\t\t\t\t\t\t\t\t//\n}\u003C/pre\u003E\n\u003Cp\u003E\n}\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-13T15:02:10Z\u0022 title=\u002208/13/2016 03:02  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 13, 2016\u003C/time\u003E by ColKlonk2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2016-08-14T00:14:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222711105\u0022 data-ipsquote-contentid=\u0022145679\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470775261\u0022 data-ipsquote-userid=\u002284978\u0022 data-ipsquote-username=\u0022alpha tech\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 8/9/2016 at 1:41 PM, alpha tech said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFor a while I have been trying to figure out how to calculate\u00A0when two space crafts will intersect each other and have come up with nothing so I was wondering if anybody else has figured it out?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe family of equations this leads to cannot be solved analytically in general form. It\u0027s a significant limitation of orbital mechanics and central potentials in general.\n\u003C/p\u003E\n\u003Cp\u003E\nThis has to be solved numerically. If you know anything about programming, it\u0027s relatively easy to learn methods that will let you solve simple cases, like orbit-to-orbit transfers. If you don\u0027t, and you still want to be able to do it, you\u0027ll have to learn that first.\n\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk2","CreatedById":167493,"CreatedDateTime":"2016-08-15T20:41:55Z","Content":"\n\u003Cp\u003E\nIt\u0027s easier to get your Inclination and LAN as accurate as possible from launch.\n\u003C/p\u003E\n\u003Cp\u003E\nFrom there it\u0027s a minor \u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003EDv\u003C/abbr\u003E\u003C/abbr\u003E\u003C/abbr\u003E\u003C/abbr\u003E expense to make final adjustments in a lower \u0027parking orbit\u0027.\n\u003C/p\u003E\n\u003Cp\u003E\nAs\u00A0we\u0027re working with KOS \u002B KSP\u0027s idea of real time processing... I\u0027ve taken the lower altitude route.\n\u003C/p\u003E\n\u003Cp\u003E\nFrom a lower altitude you work out the comparative\u00A0orbit times between your ship and the target at every target apside.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd all you do is\u00A0fire prograde (at apsides) until the times intersect within a few 100 metres.\n\u003C/p\u003E\n\u003Cp\u003E\nFrom there you use vector maths to dock.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m still looking at \u003Cem\u003Eover/undershoot\u003C/em\u003E\u00A0wrt orbits, but have no time at the mo.\n\u003C/p\u003E\n\u003Cp\u003E\nAs K^2 says... numerical maths.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is nothing more than having a program loop, that branches out to other procedures, that services events.\n\u003C/p\u003E\n\u003Cp\u003E\nIn KSP/KOS we have no choice but to hope for the best.. that our sh\u0027t works the way it should work in RL.\n\u003C/p\u003E\n\u003Cp\u003E\nIt might be an idea to implement \u0027averaging\u0027 into one\u0027s calcs... downright pain, but is\u00A0a necessity wrt to KSP/KOS\n\u003C/p\u003E\n\u003Cp\u003E\nTalk about a \u003Cem\u003E\u003Cu\u003Epain killer\u003C/u\u003E\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-15T21:00:51Z\u0022 title=\u002208/15/2016 09:00  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 15, 2016\u003C/time\u003E by ColKlonk2\u003C/strong\u003E\n\u003C/span\u003E\n"}]}