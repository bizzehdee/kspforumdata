{"TopicId":147393,"ForumId":50,"TopicTitle":"Launch Azimuth: Or, How to Tilt Your Orbit, If You\u0026#039;re So Inclined","CreatedByName":"Samniss Arandeen","CreatedById":120179,"CreatedDateTime":"2016-09-10T07:39:51Z","PageNum":1,"Articles":[{"CreatedByName":"Samniss Arandeen","CreatedById":120179,"CreatedDateTime":"2016-09-10T07:39:51Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EIntroduction\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nMost of us are familiar with the simple \u0022due east launch\u0022: just gravity turn 90 degrees and get into an orbit. To most of us, orbital inclination is merely a consequence of, say, a Minmus or Mun encounter, rather than anything we try to pursue actively. But what if we want to achieve a specific orbit? Plane-change \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E is notoriously inefficient, and eats through a ship\u0027s fuel faster than you can say \u0022stranded in space\u0022. Or, say you\u0027ve landed and wish to take off again, or you\u0027re playing with Kerbin-Side and launching from an alternate spaceport. This will also apply to everyone who plays with \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E and has \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E set to the actual Kennedy Space Center launch site (22.5 degrees northerly latitude).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nFor the below tutorial, you will need:\n\u003C/p\u003E\n\u003Cp\u003E\n-Your launch site\u0027s latitude. Positive values are northerly, negative values are southerly. Zero latitude is directly on the Equator.\u003Cbr\u003E\n-Your target semi-major axis. For a circular orbit, it\u0027s the planet\u0027s radius plus whatever altitude is needed/wanted.\u003Cbr\u003E\n-The planet\u0027s gravitational parameter in m^3/s^2, sidereal rotation period in seconds, and equatorial radius in meters.\u003Cbr\u003E\n-The target orbit\u0027s inclination. Note that inclination can never be lower than the launch site\u0027s latitude without the help of a correction burn later on.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cstrong\u003ELaunch Azimuth\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nPut simply, the Launch Azimuth (\u03B2) is the heading along which a space launch is sent. Not only does this affect the inclination of the final orbit, but it affects the amount of \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E used to place the vessel into orbit.\n\u003C/p\u003E\n\u003Cp\u003E\nA handy formula to remember is: cos(i) = cos(\u03C6) * sin(\u03B2), where i is the inclination, \u03B2 is the launch azimuth, and \u03C6 is the launch latitude. Thank you, spherical trigonometry!\n\u003C/p\u003E\n\u003Cp\u003E\nLet\u0027s say we want to launch from the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E pad (at 0 degrees, 6 minutes, 9 seconds southerly latitude), heading into a 45 degree orbit to rendezvous with our space station.\n\u003C/p\u003E\n\u003Cp\u003E\nWe just solve our equation for \u03B2:\n\u003C/p\u003E\n\u003Cp\u003E\n\u03B2 = arcsin(cos(i)/cos(\u03C6))\n\u003C/p\u003E\n\u003Cp\u003E\nAnd plug in our values:\n\u003C/p\u003E\n\u003Cp\u003E\n\u03B2 = arcsin(cos(45)/cos(-.1025))\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0 = arcsin(.707/.999)\n\u003C/p\u003E\n\u003Cp\u003E\n\u03B2 = 45.000... degrees.\n\u003C/p\u003E\n\u003Cp\u003E\nGreat, so we have our launch azimuth, and we can space now, right?\n\u003C/p\u003E\n\u003Cp\u003E\nActually, no. While our equation is indispensable, it will only work in an inertial reference frame. Kerbin\u0027s surface is always rotating, and that velocity is transferred to our spacecraft. That velocity must be accounted for if we are to get a correct orbital inclination from the launch.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cstrong\u003EAccounting for Rotation\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nTo transition from the rotating (initial) to the inertial (final) references, we need a way to account for the velocity already possessed by our launch vehicle prior to liftoff.\n\u003C/p\u003E\n\u003Cp\u003E\nBut how much velocity do we already have by rotation, do you ask? It\u0027s rather simple. Kerbin has a radius of 600,000 meters. Its rotation takes exactly one day, and because we know the circumference of a circle based on its radius (it\u0027s 2*\u03C0*r) and the time taken to cover that circumference (one day), we can get rotational speed.\n\u003C/p\u003E\n\u003Cp\u003E\nBe careful, however. We can\u0027t use a solar day for this calculation. A solar day is calculated with respect to Kerbol; while this is fine for terrestrial timekee\u03C0ng and tracking the Sun\u0027s position, the rotation of Kerbin in a solar day is actually significantly more than one full revolution, as a solar day uses more rotation in order to keep the Sun in the same position at the same time of day. What we instead need is a measure of time called the \u0022Sidereal Day\u0022 - the time it takes for exactly one full rotation of Kerbin without respect to Kerbol.\n\u003C/p\u003E\n\u003Cp\u003E\nLooking around on the KSP Wiki, we see that Kerbin Sidereal Day = 21549.425 seconds, or 5 hours, 59 minutes, 9.425 seconds if you will.\n\u003C/p\u003E\n\u003Cp\u003E\nWe know that the circumference of Kerbin\u0027s Equator is (2*\u03C0*600000m), approx. 3769911.184 meters.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd with a rotation distance and time, we can get rotation speed. 3769911.184 meters/21549.425 seconds = 174.9425 meters/second velocity on Kerbin\u0027s equator. (Note: This value is also listed on Kerbin\u0027s entry on the KSP Wiki. I just wanted to show how it\u0027s calculated.)\n\u003C/p\u003E\n\u003Cp\u003E\nBut this value is on the equator, where the radius from the axis of rotation is equal to the radius of the planet. At increasing latitude, the radius from surface to axis progressively decreases, until finally at 90 degrees latitude, you\u0027re standing on the Pole itself and simply rotating coaxially with the planet. Luckily for us, the answer to this problem can be found by cutting Kerbin in half. That\u0027s right, by modeling our position on Kerbin as a right triangle, with the hypotaneuse represented by the radius from our launch site to Kerbin\u0027s center, we can simply take the cosine of our latitude to determine how much shorter our actual radius is - and just multiply that by our equatorial velocity. It really is that simple!\n\u003C/p\u003E\n\u003Cp\u003E\nVRot(\u03C6) = ((2*\u03C0*600000m)/21549.425s)*cos(\u03C6)\n\u003C/p\u003E\n\u003Cp\u003E\nVRot(-.1025) = ((2*\u03C0*600000m)/21549.425s)*cos(-.1025)\u003Cbr\u003E\nVRot(-.1025) = approx. 174.9422 m/s.\n\u003C/p\u003E\n\u003Cp\u003E\nNot a whole lot different in our example, but consider that if you\u0027re launching from higher latitudes, it\u0027s an important consideration.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nAlright, enough waffling about. We want to launch into a 45 degree orbit in an inertial reference plane. Our rotating planet moves us along due east at 174.9422 meters per second relative to the inertial frame. So how do we reconcile these into a number we can use? The answer is to use vector addition. If you think about it, our launch consists of a magnitude (delta V) and a direction (our azimuth). Our rotation is a magnitude (Vrot) and a direction (due east). If we add these vectors together, what we get is the final orbit magnitude (orbital velocity) and direction (inclination).\n\u003C/p\u003E\n\u003Cp\u003E\nIn an equation: Vlaunch \u002B Vrot = Vdest.\n\u003C/p\u003E\n\u003Cp\u003E\nSince we\u0027re solving for launch azimuth: Vlaunch = Vdest - Vrot.\n\u003C/p\u003E\n\u003Cp\u003E\nBut what is our orbital velocity? This is where we need to know exactly what orbit above Kerbin we want. This is important, as orbital velocity is affected by semi-major axis and altitude above Kerbin, and will differ depending on different orbits and mission goals. For our example, we want the 45 degree orbit to rendezvous with a space station in circular orbit 150 kilometers up.\n\u003C/p\u003E\n\u003Cp\u003E\n(For the purposes of this tutorial, hopefully you already know how to calculate orbital velocities given semi-major axis and radius. If not, I\u0027m just going to skim over my example briefly)\n\u003C/p\u003E\n\u003Cp\u003E\nSince this is a circular orbit we\u0027re going to, we can simply take our semi-major axis of 750 kilometers and treat that as our radius to simplify things. Remember that our SMA is 750 km, not 150, as the focus of our orbit is at the center of Kerbin. The velocity of a circular orbit is Vcirc = (GM/R)^(1/2), where GM is the planet\u0027s gravitational parameter and R is our previously calculated radius.\n\u003C/p\u003E\n\u003Cp\u003E\nSince we know Kerbin\u0027s GM = 3.5316*10^12 m^3/s^2, and our desired R is 750,000 m, we can calculate the velocity of destination orbit Vdest:\n\u003C/p\u003E\n\u003Cp\u003E\nVdest = (3.5316*10^12/750000)^(1/2)\u003Cbr\u003E\nVdest = 2169.976 m/s.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nA quick recap on what we know:\n\u003C/p\u003E\n\u003Cp\u003E\nVrot = 174.9422 m/s @ 90 degrees.\u003Cbr\u003E\nVdest = 2169.976 m/s @ 45 degrees (our inertial launch azimuth)\u003Cbr\u003E\nVlaunch = our horizontal delta-V requirement @ our rotational (compass) launch azimuth.\n\u003C/p\u003E\n\u003Cp\u003E\nVlaunch = Vdest - Vrot.\n\u003C/p\u003E\n\u003Cp\u003E\nLet\u0027s add these vectors, shall we? First, we split them into their X (east/west) and Y (north/south) components.\n\u003C/p\u003E\n\u003Cp\u003E\nObtaining the X component of a vector is as simple as multiplying its magnitude by the sine of its direction. Therefore:\n\u003C/p\u003E\n\u003Cp\u003E\nVrotx = 174.9422 m/s * sin(90) = 174.9422 m/s\u003Cbr\u003E\nVdestx = 2169.976 m/s * sin(45) = 1534.407 m/s\n\u003C/p\u003E\n\u003Cp\u003E\nVlaunchx = Vdestx - Vrotx\u003Cbr\u003E\nVlaunchx = 1534.407 - 174.9422 = 1359.465 m/s\n\u003C/p\u003E\n\u003Cp\u003E\nAnd for the Y component of a vector, the magnitude by the cosine of its direction. Thus:\n\u003C/p\u003E\n\u003Cp\u003E\nVroty = 174.9422 m/s * cos(90) = 0 m/s\u003Cbr\u003E\nVdesty = 2169.976 m/s * cos(45) = 1534.402\n\u003C/p\u003E\n\u003Cp\u003E\nVlaunchy = Vdesty - Vroty\u003Cbr\u003E\nVlaunchy = 1534.402 - 0 = 1534.402 m/s\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nWe finally have X and Y components of our rotational launch vector. By combining them, we can finally see how much horizontal \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E we need and what way to point it! It is at this point where I finally get to call in my good friend Pythagoreas. Since our X and Y velocities are perpendicular, we can treat them as sides of a right triangle.\n\u003C/p\u003E\n\u003Cp\u003E\nVlaunch = (Vlaunchx^2 \u002B Vlaunchy^2)^(1/2)\u003Cbr\u003E\nVlaunch = 2050.009 m/s\n\u003C/p\u003E\n\u003Cp\u003E\nAnd the launch azimuth, the heading from North we need to launch?\n\u003C/p\u003E\n\u003Cp\u003E\ntan(\u03B2) = Vlaunchx/Vlaunchy\u003Cbr\u003E\n\u03B2 = arctan(Vlaunchx/Vlaunchy)\u003Cbr\u003E\n\u03B2 = arctan(1359.465/1534.402)\n\u003C/p\u003E\n\u003Cp\u003E\n\u03B2 = 41.540 degrees.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EMathematician\u0027s Note:\u003C/strong\u003E What may seem like mathematical incongruities result from more than a few rounding errors. I use Excel to get my numbers, and it goes to several times more decimal places each operation than I care to write down for the purposes of this tutorial; to someone plugging my given numbers into their calculators, my truncated decimals will most certainly propagate error all the way down. Most notably, the reason sin(45) and cos(45) are unequal is due to such a truncation thanks to the -.1025 degree latitude of the launch site in the calculation.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ESpreadsheet:\u003C/strong\u003E I placed a copy of the aforementioned spreadsheet in my Dropbox, downloadable \u003Ca href=\u0022https://www.dropbox.com/s/lpjo0latdn066u0/StationOrbit.xlsx?dl=0\u0022 rel=\u0022external nofollow\u0022\u003EHERE\u003C/a\u003E. The fields for gravitational and orbital parameters have been placed on their own sheet to be edited, so you can use it as a calculation aid.\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2016-09-12T05:01:26Z","Content":"\n\u003Cp\u003E\nThat title, oh what a title! And thanks for the guide- it was nice reading through to see how it works.\u003Cbr\u003E\u003Cbr\u003E\nEdit: Also, I just noticed your icon is the truckers\u0027 stick shift. At first it didn\u0027t look weird because it\u0027s what I learned on. Now I have to know, why\u0027d you pick it?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-12T14:45:53Z\u0022 title=\u002209/12/2016 02:45  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 12, 2016\u003C/time\u003E by Cunjo Carl\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Aristarchus","CreatedById":127970,"CreatedDateTime":"2016-12-08T07:22:56Z","Content":"\n\u003Cp\u003E\nI have been dabbling in kOS and just finished a program designed to launch a vessel to match the inclination of a target in orbit. I wanted to test the impact accounting for the rotational velocity at launch could have, so I created a small experiment. I launched three identical vessels into low Kerbin orbit using the exact same flight path, controlled by my script. The target vessel was launched with a heading of 45 degrees and resulted in a final inclination of 40.1 degrees. The next two were launched exactly as the launch pad passed under the ascending node of the target vessel. The first\u00A0was launched to naively match that inclination and ascended with a heading of around 50 degrees (90-40). The final inclination was 35.6 degrees. The last vessel incorporated the method in this tutorial (which I very much appreciated). Like the target vessel, it settled on a heading of almost exactly 45 degrees on ascent, though the final inclination was about 38.6 degrees. So while the result wasn\u0027t perfect, it did cut the error by more than half. The visual distinction is quite stark.\n\u003C/p\u003E\n\u003Cp\u003E\nI was disappointed not to match the orbits exactly but I suspect the difference is due to an underpowered rocket that delivered far from instantaneous impulses. The orbital insertion burn took about a minute, mostly using the \u0022Spark\u0022 engine. But I suppose that means that if you are launching into a specific inclination to save \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E, the difference between properly calculating the heading and not is as important as properly designing the vehicle in the first place.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, this is just my long-winded attempt to say thanks for the tutorial!\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00223r36FvM.png\u0022 class=\u0022ipsImage\u0022 height=\u0022562\u0022 src=\u0022http://i.imgur.com/3r36FvM.png\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022alSxOyt.png\u0022 class=\u0022ipsImage\u0022 height=\u0022562\u0022 src=\u0022http://i.imgur.com/alSxOyt.png\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThe blue orbit is the target vessel. Yellow shows the adjusted ascent heading. White represents the nominal inclination heading.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-12-08T07:24:57Z\u0022 title=\u002212/08/2016 07:24  AM\u0022 data-short=\u00227 yr\u0022\u003EDecember 8, 2016\u003C/time\u003E by Aristarchus\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sebseb7","CreatedById":171651,"CreatedDateTime":"2016-12-21T16:26:58Z","Content":"\n\u003Cp\u003E\n\u003Cspan style=\u0022color:rgb(39,42,52);font-family:\u0027Helvetica Neue\u0027, Helvetica, Arial, sans-serif;font-size:14px;font-style:normal;font-weight:normal;letter-spacing:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;background-color:rgb(255,255,255);float:none;\u0022\u003EVdest = 2169.976 m/s.\u003Cbr\u003E\u003Cbr\u003E\nWould it be better when one uses the velocity at the point you enter vaccum?\u003Cbr\u003E\u003Cbr\u003E\nthis works for me:\u003Cbr\u003E\u003Cbr\u003E\nset incl to 10.\u003C/span\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:rgb(39,42,52);font-family:\u0027Helvetica Neue\u0027, Helvetica, Arial, sans-serif;font-size:14px;font-style:normal;font-weight:normal;letter-spacing:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;background-color:rgb(255,255,255);float:none;\u0022\u003Elock angle1 to arcsin(max(-1,min(1,cos(180\u002Bincl)/cos(ship:latitude)))).\u003Cbr\u003E\nlock vlaunchx to (1600 * sin(angle1*-1))-(174.9422*sin(90)).\u003Cbr\u003E\nlock vlaunchy to (1600 * cos(angle1*-1))-(174.9422*cos(90)).\u003Cbr\u003E\nlock newangle to 90-arctan(vlaunchx/vlaunchy).\u003Cbr\u003E\nlock steering to lookdirup( HEADING(arcsin(max(-1,min(1,cos(180\u002Bnewangle)/max(0.001,cos(ship:latitude))))), 90-pitch ):vector, ship:facing:topvector).\u003C/span\u003E\n\u003C/p\u003E\n"}]}