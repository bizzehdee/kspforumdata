{"TopicId":121096,"ForumId":51,"TopicTitle":"My Adventures Using kOS \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 Interim Report (Gravity Turn) \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 Posted 10/03/15","CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-17T16:14:26Z","PageNum":1,"Articles":[{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-17T16:14:26Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003ECurrent KSP/kOS Versions:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E9/17/2015 - [KSP 1.0.4]\u003C/p\u003E\u003Cp\u003E9/17/2015 - [kOS 0.17.3]\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOverview:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAs my username may suggest, my training is in Chemistry and the only programming experience I have goes back to about 8 years ago when I had to take two classes (C and C\u002B\u002B) as an undergraduate for my B.S. Nevertheless, I have recently starting playing around a little bit using kOS in KSP version 1.0.4. Now, I should note that, up to this point, I have only ever played stock with occasional forays into Squad\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s official mods \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 I have never used MechJeb or KER, and all of my flights since I joined back in v0.21 have been flown manually! So, at least for me, this should prove to be a . . . let\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s go with interesting . . . adventure!\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EGoal and Format:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EMy purpose in posting this thread is to create a log of missions I have run using kOS. It will serve three roles: mission reporting, beginner\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s tutorial, and a place for me to ask kOS gameplay questions.\u003C/p\u003E\u003Cp\u003ESince the missions themselves will be fairly routine, at least starting out, there probably won\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t be much writing or pictures for the report. So far, I have really liked using the PRINT command to display information on the kOS terminal so that will be the main picture and I may showcase a couple of in-flight shots. The bigger part of each report will be my commentary/analysis of the mission/code and areas where I might want to improve. As part of this, I will almost certainly include a couple of questions since I am still learning.\u003C/p\u003E\u003Cp\u003EI will also include the full code and craft files for each of my missions \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 this is kind of the tutorial part of each post. Anyone who wants may copy the code and give it a try with no need to give me credit or anything like that. Now, as I am a complete novice at programming, it will probably not be the best in the world, but it will be functional. Any suggestions for optimization are more than welcome and would be most appreciated!\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EFirst Mission:\u003C/strong\u003E Single-stage, liquid fueled rocket on a suborbital trajectory\u003C/p\u003E\u003Cp\u003EThanks in advance for reading and offering suggestions! I hope that at least someone will find these reports interesting and/or helpful!\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/sh/nylp0yoqjax8yp1/AACv6YVyfLRnGDaiLYWWGmUIa?dl=0\u0022 rel=\u0022external nofollow\u0022\u003ECode and Craft File Dropbox\u003C/a\u003E - Both a .ks and .txt version of the code are included since the .ks cannot be viewed online and I want people to have an option other than directly downloading. All craft are designed using only stock parts plus the kOS Scriptable Control System (obviously); no other mods are used.\u003C/p\u003E\u003Cp\u003E--------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMission Links\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E--------------\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/134502-My-Adventures-Using-kOS-%E2%80%93-Orbital-Flight-%E2%80%93-Posted-9-19-15?p=2202371\u0026amp;viewfull=1#post2202371\u0022 rel=\u0022external nofollow\u0022\u003EMission 01\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/134502-My-Adventures-Using-kOS-%E2%80%93-Orbital-Flight-%E2%80%93-Posted-9-19-15?p=2204808\u0026amp;viewfull=1#post2204808\u0022 rel=\u0022external nofollow\u0022\u003EMission 02\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/134502-My-Adventures-Using-kOS-%E2%80%93-Interim-Report-%28Staging%29-%E2%80%93-Posted-9-23-15?p=2209558\u0026amp;viewfull=1#post2209558\u0022 rel=\u0022external nofollow\u0022\u003E Interim Report A\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/134502-My-Adventures-Using-kOS-%E2%80%93-Interim-Report-%28Throttle-Control%29-%E2%80%93-Posted-9-26-15?p=2216379\u0026amp;viewfull=1#post2216379\u0022 rel=\u0022external nofollow\u0022\u003EInterim Report B\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/134502-My-Adventures-Using-kOS-%E2%80%93-Interim-Report-%28Throttle-Control%29-%E2%80%93-Posted-9-26-15?p=2226940\u0026amp;viewfull=1#post2226940\u0022 rel=\u0022external nofollow\u0022\u003EInterim Report C\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENext Link\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-05T20:55:38Z\u0022 title=\u002210/05/2015 08:55  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 5, 2015\u003C/time\u003E by BlkBltChemie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-18T15:30:10Z","Content":"\n\u003Cp\u003E--------------------------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMission 01: Suborbital Test Probe\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E--------------------------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EObjective:\u003C/strong\u003E Launch a single-stage, liquid-fueled rocket on a suborbital trajectory.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EReport:\u003C/strong\u003E Pretty straightforward mission to start off with. I have a Stayputnik probe core sitting on top of a LV-T30 engine. Programmed a fun little launch countdown based on the \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/index.html\u0022 rel=\u0022external nofollow\u0022\u003EQuickStart tutorial\u003C/a\u003E provided in the kOS documentation. Locked the throttle to 40%, started gravity turn at 2 km, and increased by 5\u00C3\u201A\u00C2\u00B0 every 2 km after that until the rocket reached 45\u00C3\u201A\u00C2\u00B0 at 20 km. Then, changed to 10\u00C3\u201A\u00C2\u00B0 every 5 km until horizontal at 40 km. On reaching space, I had the program detach the probe, extend its antennas (BEEP\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6BEEP\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6BEEP), and then print the ETA to apoapsis every 10 seconds. After reaching the apoapsis (~80km), the program printed the altitude every 10 seconds until reentry at which point the program ended and the probe was left to free-fall through the atmosphere into a glorious splash down.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAnalysis:\u003C/strong\u003E Lot of trial and error getting the code to work \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 from finding a good throttle level to setting up the gravity turn and making sure everything printed the way I wanted it to. I originally locked the steering to UP, but that caused the craft to rotate 180\u00C3\u201A\u00C2\u00B0 immediately after launching so I changed it to lock to the heading (0,90) = North, up. I was also confused the first time the probe decoupled in space because it just tumbled away from its heading and I thought something was wrong with the code. I forgot the Stayputnik has no reaction wheels so it could not orient itself after detaching from the rocket.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/O393Fm4.jpg\u0022 alt=\u0022O393Fm4.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/prUETTO.jpg\u0022 alt=\u0022prUETTO.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EOverall, the program works for this specific ship, but I want to work on writing programs that may be more generally applicable to a variety of designs.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERoom for Improvement:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EThrottle locked to 40%\u003C/span\u003E. As the fuel is burned off the TWR increases so this was not a very efficient launch. Another side effect of this is that locked throttle is very specific to this particular craft and is unlikely to work with other designs. Need to look into a way to vary the throttle as a function of TWR. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EManually entered gravity turn\u003C/span\u003E. So the code for the gravity turn was over 60 lines (14 altitudes). The real problem though is that the code is essentially a step function not a smooth curve (see graph). Need to look into a way of optimizing the gravity turn code. \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/eo8hKeQ.jpg\u0022 alt=\u0022eo8hKeQ.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003EQuestions:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EWhen you move the rocket to the pad, the throttle defaults to 50%. If you run the program, when it ends and unlocks the controls, the throttle reverts back to the default which can cause problems if you still have an engine attached. I pressed \u00C3\u00A2\u00E2\u201A\u00AC\u00CB\u0153X\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2 at the beginning of launch to avoid this which works ok, but is there another way to do it? \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EIs there a way to print the terminal output to a .txt file? \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E \u003Cstrong\u003ECode and Craft File: \u003C/strong\u003E\u003Ca href=\u0022https://www.dropbox.com/sh/8moxgyccvqj3v34/AACKe-p9a7TwVhCpRf2ryBwWa?dl=0\u0022 rel=\u0022external nofollow\u0022\u003EMission 01\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENext Mission\u003C/strong\u003E: Two-stage, liquid fueled rocket to orbit\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-05T20:56:02Z\u0022 title=\u002210/05/2015 08:56  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 5, 2015\u003C/time\u003E by BlkBltChemie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-09-18T16:48:51Z","Content":"\n\u003Cp\u003EFor the 50% default throttle problem, which IMO is one of the most annoying unwanted features SQUAD ever implemented - NOBODY wants it to work that way, do this:\u003C/p\u003E\u003Cp\u003EDuring your script, execute this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAt the start, and just before it ends.\u003C/p\u003E\u003Cp\u003EIt changes not what the script\u0027s throttle is, but what the pilot\u0027s remembered throttle is (the throttle it will shift back to when you quit the script).\u003C/p\u003E\u003Cp\u003EThe reason for also doing it again right before you finish the script is that if the player hit \u0027shift\u0027 or \u0027x\u0027 while not focussed on the window, it will have secretly moved the pilot throttle without showing any effect until the script ends.\u003C/p\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-18T17:34:47Z","Content":"\n\u003Cp\u003EFantastic! Thanks for the tip and explanation of how it works! I certainly agree - not sure what the motivation was behind setting the default throttle on launch to 50%.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-09-18T17:53:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BlkBltChemie\u0022 data-cite=\u0022BlkBltChemie\u0022\u003E\u003Cdiv\u003EFantastic! Thanks for the tip and explanation of how it works! I certainly agree - not sure what the motivation was behind setting the default throttle on launch to 50%.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThey claimed it was so newbie users would still see something happen when they put a rocket on the pad and hit spacebar without knowing the other keybindings.\u003C/p\u003E\u003Cp\u003EBut what\u0027s dumb about that is that you still need to know SOME keybindings to know to hit spacebar in the first place, so it\u0027s not like it\u0027s gaining you anything.\u003C/p\u003E\n"},{"CreatedByName":"r_rolo1","CreatedById":26192,"CreatedDateTime":"2015-09-18T18:28:25Z","Content":"\n\u003Cp\u003EHum, your \u0022gravity turn\u0022 function looks somewhat iffy due to the stepwise nature ( also , forcing pitch ensures you\u0027re not actually doing a gravity turn: you only do a gravity turn when you let gravity turn your rocket \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E ) and if you used it in a more flexible rocket, if can lead to laggy response, or worse, ressonating oscilations. Also, it might get you in hot water in the 1.x atmo , where sudden changes in pitch during ascent can lead to disastrous results. How about getting a if-else cycle ensuring that the prograde is never too far away of the velocity vector?\u003C/p\u003E\u003Cp\u003EAlso in the throttle department , you might want to consider to look on keeping a stable TWR. Locked throttle can give you issues when going trans-sonic in the 1.x atmo ( aka rocket flipping upside down ).\u003C/p\u003E\u003Cp\u003EP.S Other Chemist around ? Yay \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E Atleast they taught you C, instead of Matlab \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-19T01:02:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022r_rolo1\u0022 data-cite=\u0022r_rolo1\u0022\u003E\u003Cdiv\u003E ( also, forcing pitch ensures you\u0027re not actually doing a gravity turn: you only do a gravity turn when you let gravity turn your rocket \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E ) \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood point and very true! So yeah in 1.0.0 I had no trouble manually pitching over about 5-10 degrees at 50 m/s, turning off SAS and letting my rocket fly itself to orbit with throttle adjustments. Not so much in 1.0.2/1.0.4. I\u0027ve had to use SAS more again and input a lot more manual control authority. I\u0027m not sure if it is something to do with drag being increased (as I recall) in 1.0.2. \u003C/p\u003E\u003Cp\u003EYou were also spot on, with the step function. The prograde marker generally lagged about 5-10 degrees behind the pitch angle. The gravity turn is definitely something I want to work on. A lot of examples I\u0027ve looked over are using a variety of different loops: mostly if-else if. I really want to try to tie it to throttle instead of altitude/pitch angle as that will resolve both problems in one go - the gravity turn and the TWR issues - and make the code more generally applicable instead of just working for this craft.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EP.S Other Chemist around ? Yay \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E Atleast they taught you C, instead of Matlab \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep, I think there are a few of us here! All science majors had to take one computer science class at my undergrad and since I was a double major of Chemistry and Math, I had to take a second one for the Math. The most fun was the final where we had to use a pseudo-random number generator to code paper-rock-scissors and be able to \u0022play\u0022 against the computer. I think one of my calculus classes used Matlab and another one used Maple. Never really liked either. For PChem we used Mathematica which was by far my favorite.\u003C/p\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-20T03:42:46Z","Content":"\n\u003Cp\u003E-------------------------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMission 02: Orbital Test Probe\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E-------------------------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EObjective:\u003C/strong\u003E Launch a two-stage, liquid-fueled rocket to deploy a probe in a stable orbit.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EReport:\u003C/strong\u003E I made a couple modifications to the craft used in the previous mission by adding a second stage with an LV-909 engine. I also remembered to add a reaction wheel to keep the Stayputnik probe oriented after I decouple it. The launch was pretty much the same (although I did add the line of code from Steven Mading to sort out the default throttle issue). The first stage was decoupled at 32 km. Orbital insertion was started 8 seconds before apoapsis at full throttle and gave a final orbit of 81 km x 85 km. Finally I had the probe timewarp until its electric charge was expended (the probe doesn\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t have any solar panels) \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 did not quite make a full orbit.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/Faorjb8.jpg\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/Faorjb8.jpg\u0022 alt=\u0022Faorjb8.jpg\u0022\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/yh2xD5h.jpg\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/yh2xD5h.jpg\u0022 alt=\u0022yh2xD5h.jpg\u0022\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003EAnalysis:\u003C/strong\u003E Because I really wanted to try to achieve orbit, I used the same launch code I had programmed for the previous mission instead of working on any optimizations. I had a lot of trouble getting the conditional statements right for staging (see below). The circularization code required a lot of trial and error and I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m not really happy with how it ended up. My first try was to lock heading to prograde and burn 5 seconds before apoapsis, but that gave me a highly elliptic orbit and I ran out of fuel before the periapsis was high enough. I played around with when I started the burn \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 various times between 5 adn 15 seconds before apoapsis \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 and ultimately settled on 8 sec which gave a fairly circular orbit. This isn\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t a very good solution, in my opinion, since it will only work for this craft and required a lot of trial and error. (I really want to get to the point of making my code more generally applicable to different designs and knowing it will work at launch instead of relying on trial and error.)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERoom for Improvement:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ESince I used more or less the same code as for the suborbital mission, and as r_rolo1 commented above, there is definitely room for improvement in the (not really a) gravity turn sequence. The plan is to try to use an if-else if loop to vary the throttle while keeping a constant TWR after an initial pitch over once speed is greater than 50 m/s. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESpecifically for this mission I want to work on the code for staging and circularization (see below). What I used worked, but like I said above only for this ship. \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E \u003Cstrong\u003EQuestions:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ESo...staging. I know there are some issues if the decoupler and engine are in the same stage \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 you can\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t use STAGE:LIQUIDFUEL\u0026lt;0.1 because KSP for some reason adds the fuel that is in the next stage up. (I did try with them in the same stage as well as in separate stages; neither worked.) It will work with STAGE:LIQUIDFUEL \u0026lt; 90.1 (for this craft), but I went with SHIP:LIQUIDFUEL instead just because. I tried using LIST ENGINES to check for FLAMEOUT \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 not sure if I wrote the code incorrectly or what but I just could not get that to work. (I also could not get an IF loop to work and ended up using WAIT UNTIL, which is really unreliable.) Any suggestions? (Related, when do I need to use PRESERVE?) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ENext, what is the best way to circularize such that Ap and Pe have minimal deviation? There are several variables \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 when you start the burn, how much thrust you use, and where you aim. When I manually burn in my stock save, I start aiming below the horizon (before Ap), move to prograde at the apoapsis, and then continue above the horizon (after Ap). Is there a way to write a code for this (or another option for precision circularization)? \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EFinally, is there a good way to code something like \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cwarp ahead this many complete orbits?\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E \u003Cstrong\u003ECode and Craft File: \u003C/strong\u003E\u003Ca href=\u0022https://www.dropbox.com/sh/b479blfmbzlmh34/AAC5iIm2S1_BxHIK6PmTzVYza?dl=0\u0022 rel=\u0022external nofollow\u0022\u003EMission 02\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENext Mission\u003C/strong\u003E: Optimization! (This one will probably be a little while in the making since it will take some more research and lots of testing on my part.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-05T20:56:31Z\u0022 title=\u002210/05/2015 08:56  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 5, 2015\u003C/time\u003E by BlkBltChemie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"r_rolo1","CreatedById":26192,"CreatedDateTime":"2015-09-20T18:15:07Z","Content":"\n\u003Cp\u003EGood work so far \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E Now let me try to help to the extent of my knowledge of kOS ( admitedly not very extensive )\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BlkBltChemie\u0022 data-cite=\u0022BlkBltChemie\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E \u003Cstrong\u003EQuestions:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ESo...staging. I know there are some issues if the decoupler and engine are in the same stage \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 you can\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t use STAGE:LIQUIDFUEL\u0026lt;0.1 because KSP for some reason adds the fuel that is in the next stage up. (I did try with them in the same stage as well as in separate stages; neither worked.) It will work with STAGE:LIQUIDFUEL \u0026lt; 90.1 (for this craft), but I went with SHIP:LIQUIDFUEL instead just because. I tried using LIST ENGINES to check for FLAMEOUT \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 not sure if I wrote the code incorrectly or what but I just could not get that to work. (I also could not get an IF loop to work and ended up using WAIT UNTIL, which is really unreliable.) Any suggestions? (Related, when do I need to use PRESERVE?)\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003EWell, I really not sure on this one, but I think ( take this with a pint of salt ) that checking for Liquid fuel avaliability is a bad idea, due to the change Squad did on liquid fuel routing in 1.0 ( basically, jet engines will act like RCS engines and check for LF in all the ship, regardless of passing through parts that don\u0027t allow for fuel flow, so maybe kOS is being fooled by that ). Maybe checking for other consumable would work better ? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BlkBltChemie\u0022 data-cite=\u0022BlkBltChemie\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENext, what is the best way to circularize such that Ap and Pe have minimal deviation? There are several variables \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 when you start the burn, how much thrust you use, and where you aim. When I manually burn in my stock save, I start aiming below the horizon (before Ap), move to prograde at the apoapsis, and then continue above the horizon (after Ap). Is there a way to write a code for this (or another option for precision circularization)?\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003EWell, circularization is the first big hurdle on using kOS, simply because a good general method for it requires you to juggle around with orbital mechanics and not just code. \u003Cp\u003ELet\u0027s divide the issue in some parts:\u003C/p\u003E\u003Cp\u003Ea) As you know, the time you need to burn to any manouver depends both of the dV you need and of both the Isp of the engine at the time ( I\u0027m assuming just one engine , for sanity sake at this point. Also note that Isp of engines can change with exterior atmo pressure. Beware ) and the rate the engine burns fuel. Isp and fuel burn rate are engine parameters that IIRC can be called by kOS on demand ( or, in worst case scenario, from the \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Parts\u0022 rel=\u0022external nofollow\u0022\u003Ewiki\u003C/a\u003E ), and if you also know the dV needed, you can use the bread and butter of rocket equations, the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Tsiolkovsky_rocket_equation\u0022 rel=\u0022external nofollow\u0022\u003ETsiolkovsky rocket equation\u003C/a\u003E to know how much mass you need to burn, and as consequence, the time needed to burn it.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E Now, how to know the dV needed? Remember that, before anything else, dV is a change of velocity, and, specifically in this case, the diference in velocity needed in Apoapsis before and after circularization ( since the velocity in both cases would be colinear and in the same direction before and after circularization, it is just a diference in the module of the velocity before and after ). You can get the velocities you need by the liberal use of the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Vis-viva_equation\u0022 rel=\u0022external nofollow\u0022\u003EVis-viva equation\u003C/a\u003E ( remember, the semi-major axis of a orbit is (Ap\u002BPe)/2 \u003Cem\u003Eif you measure both Ap and Pe from the center of the planet you are orbiting.\u003C/em\u003E Say, a Ap of 70 km around Kerbin as displayed in game is actually 600\u002B70 = 670 Km from the center of Kerbin .Also, while the mass of the planets is not given directly in game, you can get G.M on kOS via calling \u0022Mu\u0022 IIRC \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E )\u003C/p\u003E\u003Cp\u003ESo in somewhat pseudo code:\u003C/p\u003E\u003Cp\u003E1) You call the Ap and Pe of the current orbit ( it might be a good idea to check if you are out of the atmosphere before doing this BTW \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E ), calculate the semi-major axis of your current orbit and using that you calculate the speed you will have in your current Ap using the Vis-Viva equation\u003C/p\u003E\u003Cp\u003E2) You do the same for a circular orbit with the distance between the center of the planet and your current Ap ( remember that in a circular orbit the semi-major axis is equal to the radius by definition \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E ) using the same equation\u003C/p\u003E\u003Cp\u003E3) Use 1) and 2) to calculate the dV needed for the circularization manouver ( basically the speed you will have in a circular orbit minus the speed you will have in your current Ap if you don\u0027t burn. Also, in this point you might want to check for the signal here because that will tell you if you need to burn prograde or retrograde ( because you might want to circularize from a orbit higher than the current one \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E ) )\u003C/p\u003E\u003Cp\u003E4) Get the engine Isp and fuel burn rate of your engine ( I assume you can get both via calling partmodules IIRC. Again take this with a pint of salt )\u003C/p\u003E\u003Cp\u003E5) Using the Isp from 4) and the dV from 3), use the Tsiolkovsky rocket equation to get m0/m1 from that equation ( the mass the ship had at start of burn divided by the mass the ship will have at end of burn to get the desired dV out ) and , from there, m0-m1 ( aka change of mass )\u003C/p\u003E\u003Cp\u003E6) From 5) and the fuel burn rate you got in 4) , calculate the time you need to burn the fuel you need to burn , aka the burn time you wanted to know \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E ( P.S I\u0027m assuming 100% throttle. If not, you need to make the apropriate corrections \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E )\u003C/p\u003E\u003Cp\u003EYup, it is hard work. But well, rocket science didn\u0027t got it\u0027s fame of being hard work for nothing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BlkBltChemie\u0022 data-cite=\u0022BlkBltChemie\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EFinally, is there a good way to code something like \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cwarp ahead this many complete orbits?\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003EAgain, orbital mechanics to the rescue \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cp\u003EYou can calculate the orbital period if you know G.M ( aka \u0022Mu\u0022 ) of the body you\u0027re orbiting and the semimajor axis of your orbit ( I assume you read the above answer \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E ) via the use of the Kepler third law ( \u003Ca href=\u0022https://en.wikipedia.org/wiki/Orbital_period\u0022 rel=\u0022external nofollow\u0022\u003Esome pointers on this\u003C/a\u003E ). If you know the orbital period, \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cwarp ahead this many complete orbits\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 becomes \u0022warp ahead for this number of orbital periods\u0022 or, in other words \u0022 Warp to n*\u0022orbital period\u0022 after this moment\u0022\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-20T18:36:02Z\u0022 title=\u002209/20/2015 06:36  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 20, 2015\u003C/time\u003E by r_rolo1\u003C/strong\u003E\n\u003Cbr\u003EMinor corrections\n\u003C/span\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-21T19:08:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022r_rolo1\u0022 data-cite=\u0022r_rolo1\u0022\u003E\u003Cdiv\u003EGood work so far \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E Now let me try to help to the extent of my knowledge of kOS ( admitedly not very extensive )\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks! Definitely a pretty steep learning curve, but I\u0027m having fun! And the help is definitely appreciated!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWell, I really not sure on this one, but I think ( take this with a pint of salt ) that checking for Liquid fuel avaliability is a bad idea, due to the change Squad did on liquid fuel routing in 1.0 ( basically, jet engines will act like RCS engines and check for LF in all the ship, regardless of passing through parts that don\u0027t allow for fuel flow, so maybe kOS is being fooled by that ). Maybe checking for other consumable would work better ? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGreat idea! I had completely forgotten about the fuel routing change. I ran a test for oxidizer yesterday, but it ran into the same problems, unfortunately. I need to look at some more recent examples for a good approach to auto-staging.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EWell, circularization is the first big hurdle on using kOS, simply because a good general method for it requires you to juggle around with orbital mechanics and not just code. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAha, I was wondering when the rocket science would come into play! Thanks for the excellent explanation and general overview - I\u0027ll give this a few more read-throughs, take a look at some examples, and then give it a shot!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EYou can calculate the orbital period if you know G.M ( aka \u0022Mu\u0022 ) of the body you\u0027re orbiting and the semimajor axis of your orbit ( I assume you read the above answer \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E ) via the use of the Kepler third law ( \u003Ca href=\u0022https://en.wikipedia.org/wiki/Orbital_period\u0022 rel=\u0022external nofollow\u0022\u003Esome pointers on this\u003C/a\u003E ). If you know the orbital period, \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cwarp ahead this many complete orbits\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 becomes \u0022warp ahead for this number of orbital periods\u0022 or, in other words \u0022 Warp to n*\u0022orbital period\u0022 after this moment\u0022\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve been delving some more into the kOS documentation and it looks like there is actually a command to call for the orbital period so this should be pretty easy! (I just didn\u0027t know where to start.)\u003C/p\u003E\u003Cp\u003EThanks again for the great suggestions and explanations! I think I should be able to sort out circularization and orbiting now and have looked at quite a few examples for gravity turns. Now if only I can smooth out the staging...\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-09-21T20:02:05Z","Content":"\n\u003Cp\u003EIn general most people seem to circularize with some variant of getting periapsis and apoapsis altitudes within a tolerance of each other, but that\u0027s frought with error - if you take too long to burn, it can be the case that it\u0027s actually impossible to do this and the script fails to realize that you\u0027ve already done the best you possibly can and it\u0027s time to stop trying.\u003C/p\u003E\u003Cp\u003EThis very simple bit of code does circularization sort of okay:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Number of seconds you want to start the burn before of the apoapsis.\u003Cbr\u003E// There\u0027s precise ways to measure this, involving the Tchaikovsky rocket equation,\u003Cbr\u003E// but for a first go, just hardcode it depending on your ship design:\u003Cbr\u003Eset apoapsis_lead_time to 5.\u003Cbr\u003E\u003Cbr\u003Elock steering to prograde.\u003Cbr\u003Elock throttle to 0.\u003Cbr\u003Ewait until eta:apoapsis \u0026lt; apoapsis_lead_time.\u003Cbr\u003E\u003Cbr\u003E// Thrusts until the apoapsis and periapsis have started to swap positions with each other,\u003Cbr\u003E// i.e the ship is in the half of the orbit that is closer to Pe than it is to Ap:\u003Cbr\u003Elock throttle to 1.\u003Cbr\u003Ewait until ship:obt:trueanomaly \u0026lt; 90 or ship:obt:trueanomaly \u0026gt; 270.\u003Cbr\u003Elock throttle to 0.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022That\u0027s as good as it gets.  I should now be halfway between apo and peri.\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"kujuman","CreatedById":28299,"CreatedDateTime":"2015-09-21T20:29:39Z","Content":"\n\u003Cp\u003EFor staging, it might be worthwhile to explore using the acceleration of the rocket. You don\u0027t want to look for 0gs (particularly if you\u0027re still in atmo) but perhaps a reduction in G by some amount (maybe average the prior frames 15-10 against 5-current frame to help avoid physics issues). You might also want to couple this to another metric (if you have no exposed solar panels or rtgs and your engines in a stage have alternators, maybe look for a drain in electric charge to signal when the engines cut off) as a backup.\u003C/p\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-22T16:19:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIn general most people seem to circularize with some variant of getting periapsis and apoapsis altitudes within a tolerance of each other, but that\u0027s frought with error - if you take too long to burn, it can be the case that it\u0027s actually impossible to do this and the script fails to realize that you\u0027ve already done the best you possibly can and it\u0027s time to stop trying.\u003Cp\u003EThis very simple bit of code does circularization sort of okay:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks! I can see how taking an iterative approach to a set tolerance can cause the code to blow up. I really appreciate the comments explaining what the example code is doing. I understand how \u0022trueanomaly\u0022 specifies the angle before/after Pe when I looked through some of the kOS documentation after reading this post. I\u0027m a little confused though as to the \u0022obt\u0022 part of the call. Is that just shorthand for \u0022orbit?\u0022\u003C/p\u003E\u003Cp\u003EThat also sounds like a useful way to warp to a specific point in the orbit. You could set trueanomaly to the desired value and use an until loop to warp there, correct?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kujuman\u0022 data-cite=\u0022kujuman\u0022\u003E\u003Cdiv\u003EFor staging, it might be worthwhile to explore using the acceleration of the rocket. You don\u0027t want to look for 0gs (particularly if you\u0027re still in atmo) but perhaps a reduction in G by some amount (maybe average the prior frames 15-10 against 5-current frame to help avoid physics issues). You might also want to couple this to another metric (if you have no exposed solar panels or rtgs and your engines in a stage have alternators, maybe look for a drain in electric charge to signal when the engines cut off) as a backup.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis actually sounds pretty similar to some examples I have seen that rely on a change in the maxthrust, particularly for asparagus staging.\u003C/p\u003E\u003Cp\u003EI\u0027ve been working on my staging script the last couple evenings. I think I almost have it so I will post an interim report a little later after some more testing tonight.\u003C/p\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-23T02:24:55Z","Content":"\n\u003Cp\u003E---------------------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EInterim Report A: Staging\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E---------------------------\u003C/p\u003E\u003Cp\u003EThe last few evenings, I have been working on optimizing the staging code I used in Mission 02. In that program, I used:\u003C/p\u003E\u003Cp\u003E[spoiler=]\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EWAIT UNTIL SHIP:LIQUIDFUEL \u0026lt; 90.1.\u003Cbr\u003E\u003Cbr\u003E    PRINT \u0022 \u0022.\u003Cbr\u003E    PRINT \u0022...Stage 1 exhausted, activating Stage 2.\u0022.\u003Cbr\u003E    LOCK THROTTLE TO 0.0.\u003Cbr\u003E    WAIT 0.5.\u003Cbr\u003E    STAGE.\u003Cbr\u003E    PRINT \u0022...Stage 1 separation complete.\u0022.\u003Cbr\u003E    WAIT 0.5.\u003Cbr\u003E    LOCK THROTTLE TO 0.6.\u003Cbr\u003E    WAIT 0.5.\u003Cbr\u003E    STAGE.\u003Cbr\u003E    PRINT \u0022...2nd stage ignition successful!\u0022. \u003Cbr\u003E    PRINT \u0022 \u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESince the WAIT UNTIL command is a sequential design, it could potentially be disastrous if placed in the wrong part of the overall code. This drastically limits its applicability to different designs. From the kOS documentation on design patterns, two alternatives are setting up loops either for condition checking (IF/ELSE) or for triggers (WHEN/THEN). I have seen several examples using both types of loops for autostaging based on parameters like fuel level, change in maxthrust, and engine status.\u003C/p\u003E\u003Cp\u003EI generally like to separate my decoupler and engine activation into two stages with a small time delay between. Since you can\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t WAIT in a WHEN/THEN loop, I focused on using an IF loop to check for conditions. Fuel levels are occasionally unreliable for STAGE:RESOURCE (sometimes KSP and consequently kOS adds the fuel of the next stage), so I really wanted to use engine status.\u003C/p\u003E\u003Cp\u003EAs I said in the Mission 02 post, I actually tried using a check for engine flameout, but couldn\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t get it to work. The (partial) code was:\u003C/p\u003E\u003Cp\u003E[spoiler=]\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ELIST ENGINES IN MyList.\u003Cbr\u003EFOR eng IN MyList \u003Cbr\u003E    {\u003Cbr\u003E        IF eng:flameout\u003Cbr\u003E        {\u003C/pre\u003E\u003Cp\u003E[INDENT] .\u003Cbr\u003E .\u003Cbr\u003E .\u003Cbr\u003E }\u003Cbr\u003E[/INDENT]\u003C/p\u003E\u003Cp\u003E\u003Cbr\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI defined the parameter to check but forgot to state what condition I want it to check \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 ENG:FLAMEOUT can be true or false. After much trial and error I finally have a staging code I am pretty happy with based on when the engine cuts out:\u003C/p\u003E\u003Cp\u003E [spoiler=]\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ELIST ENGINES IN MyList.\u003Cbr\u003E\u003Cbr\u003EUNTIL STAGE:NUMBER = 0\u003Cbr\u003E{\u003Cbr\u003E    FOR eng IN MyList \u003Cbr\u003E    {\u003Cbr\u003E        IF eng:flameout = true\u003Cbr\u003E        {\u003Cbr\u003E            PRINT \u0022Decoupling Stage \u0022 \u002B stage:number.\u003Cbr\u003E            PRINT \u0022 \u0022.\u003Cbr\u003E            STAGE. \u003Cbr\u003E            WAIT 1.\u003Cbr\u003E            STAGE.\u003Cbr\u003E            PRINT \u0022Stage \u0022 \u002B stage:number \u002B \u0022 activated!\u0022.\u003Cbr\u003E            LIST ENGINES IN MyList.\u003Cbr\u003E            WAIT 1.\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E(Note: Right now, I am only working with a single, central stack \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 if I use boosters or asparagus staging, I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m sure I will need to adjust this.)\u003C/p\u003E\u003Cp\u003EIn addition to actually setting the ENG:FLAMEOUT check condition, it took me a while to figure out that I needed to relist the engines after staging within the loop. (I thought I remembered reading somewhere that the engine was automatically removed from the list after being decoupled?) If it is not included in the IF loop, the program uses the original list and will continue to stage since ENG:FLAMEOUT is still true for the decoupled engine. I am actually kind of proud about how I did the troubleshooting to discover that by printing ENG:IGNITION and ENG:FLAMEOUT each loop (not included in the above code).\u003C/p\u003E\u003Cp\u003EI\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m not entirely sure about the condition I have for the UNTIL loop. Let\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s consider two cases: Case 1 = a satellite that decouples without an engine (i.e. Stage 0 is just a decoupler). Case 2 = a Mun lander (i.e. Stage 0 is a decoupler \u002B engine).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cimg src=\u0022http://i.imgur.com/t2K9sj4.jpg\u0022 alt=\u0022t2K9sj4.jpg\u0022\u003E\u003C/blockquote\u003E\u003Cp\u003EIf the second engine cuts out in Case 1, it automatically decouples the satellite, which is something I don\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t really want \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 I would rather do that on my own. I can simply change to:\u003C/p\u003E\u003Cp\u003E[spoiler=]\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUNTIL STAGE:NUMBER = 1\u003Cbr\u003E{\u003Cbr\u003E.\u003Cbr\u003E.\u003Cbr\u003E.\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis works but isn\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t general enough for any design, but only changing 1 character isn\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t too bad. I also tried testing for when the ship is out of fuel:\u003C/p\u003E\u003Cp\u003E[spoiler=]\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUNTIL SHIP:LIQUIDFUEL \u0026lt; 0.1\u003Cbr\u003E{\u003Cbr\u003E.\u003Cbr\u003E.\u003Cbr\u003E.\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis does not automatically detach the satellite and works for both the probe and Mun lander cases! However, if the ship never runs out of fuel (leftover fuel after achieving orbit/landing) the loop will never end. (I suppose this is also true for the IF loop as the engine would never flameout either.) So with either UNTIL condition, I need to go back and add a BREAK condition to exit the loop.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EFor the BREAK condition (landed/in orbit), my instinct is saying that it needs to be part of the UNTIL loop (not the IF or FOR loops), right? \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EIn Case 1 for the satellite, I may want to stay in the loop until I finish orbital maneuvers\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6is it ok to just let a small loop keep running indefinitely?\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003EIf, later in the code, I manually decouple the satellite after finalizing the orbit, will the loop automatically end since it the longer has engines attached or will it throw an error? \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EIf an error, is there a way to say IF MyList = empty {break.}? (Sorry for the pseudo-code.) \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]At this point, I am not sure which (if either) condition for the UNTIL loop is better? \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E-----------------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EUPDATE (9/23/2015):\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E-----------------------\u003C/p\u003E\u003Cp\u003EI just discovered that if I move LIST ENGINES IN MyList into the UNTIL loop, that I do not have to relist the engines as part of the IF loop!\u003C/p\u003E\u003Cp\u003E[spoiler=]\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUNTIL STAGE:NUMBER = 0\u003Cbr\u003E{\u003Cbr\u003E    LIST ENGINES IN MyList.\u003Cbr\u003E    FOR eng IN MyList \u003Cbr\u003E    {\u003Cbr\u003E        IF eng:flameout\u003Cbr\u003E        {\u003Cbr\u003E            PRINT \u0022Decoupling Stage \u0022 \u002B stage:number.\u003Cbr\u003E            PRINT \u0022 \u0022.\u003Cbr\u003E            STAGE. \u003Cbr\u003E            WAIT 1.\u003Cbr\u003E            STAGE.\u003Cbr\u003E            PRINT \u0022Stage \u0022 \u002B stage:number \u002B \u0022 activated!\u0022.\u003Cbr\u003E            WAIT 1.\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E    IF SHIP:APOAPSIS \u0026gt; 200000\u003Cbr\u003E    {\u003Cbr\u003E    BREAK.\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd I was also right - the BREAK condition worked in the parent UNTIL loop!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-24T01:55:02Z\u0022 title=\u002209/24/2015 01:55  AM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 24, 2015\u003C/time\u003E by BlkBltChemie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-09-23T05:42:12Z","Content":"\n\u003Cp\u003Esmall hint:\u003C/p\u003E\u003Cp\u003EThis:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        IF eng:flameout = true\u003Cbr\u003E        {\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eis redundant because all Boolean values work that way without the \u0027= true\u0027 tacked on, as follows:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        IF eng:flameout\u003Cbr\u003E        {\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eeng:flameout already *is* a boolean expression by itself, because it\u0027s a boolean variable that can be false or true, just like an expression with \u0027=\u0027 can be false or true.\u003C/p\u003E\u003Cp\u003EIn fact, depending on what you\u0027re doing, it\u0027s usually a good habit to avoid any boolean expression where you\u0027re doing \u0022= true\u0022 or \u0022= false\u0022, for this reason: It works fine when using a type that is restricted to only being allowed to be two enumerated values: 0 which is aliased to \u0022false\u0022, or 1 which is aliased to \u0022true\u0022, like a Boolean tries to be, but given that you can make a Boolean interpretation of any integer value, doing \u0022= true\u0022 gets wonky results when the value in question is, say neither a 0 nor a 1, but say a 2. By the rules of Boolean logic, anything that is not zero is true, so a 2 should be a true value. But the check \u0022foo = true\u0022, if foo was 2, would yield a false, which is wrong.\u003C/p\u003E\u003Cp\u003EGranted, this isn\u0027t a problem when you put the burden on the language to restrict the values to only being capable of being 0 or 1 and nothing else, but as a general programming practice, it\u0027s best to avoid it so it doesn\u0027t mess you up when you come across more low level languages that don\u0027t do this coercion and really treat all boolean expressions as integers (like C or C\u002B\u002B for example).\u003C/p\u003E\u003Cp\u003EPlus it just looks weird to redundantly say \u0022= true\u0022 when that\u0027s what the Boolean value already meant by itself.\u003C/p\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-24T01:45:09Z","Content":"\n\u003Cp\u003EThanks for the tip! I had originally tried using if \u0022eng:flameout\u0022 in Mission 02, but it did not work which is why I added \u0022= true\u0022 here. I just ran a test without \u0022= true\u0022 and this new script worked just fine. Unfortunately I don\u0027t have a copy of the older code that did not work so there must have been something else wrong. I wonder...I don\u0027t think I put the \u0022if\u0022 loop inside an \u0022until\u0022 loop so maybe it was just checking once and then done since it was false. Anyway, it works now so thanks!\u003C/p\u003E\u003Cp\u003ENext up: I almost have throttle control worked out and will probably do another interim report for that as well.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-24T01:50:14Z\u0022 title=\u002209/24/2015 01:50  AM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 24, 2015\u003C/time\u003E by BlkBltChemie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-26T23:41:39Z","Content":"\n\u003Cp\u003E------------------------------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EInterim Report B: Throttle Control\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E------------------------------------\u003C/p\u003E\u003Cp\u003EThe next step, after having worked out a better method for staging, is to start improving launch efficiency by controlling the throttle. Working on this was kind of fun for me as a chemist, because I never really delved that deeply into physics or orbital mechanics. The basic idea is to control the throttle by keeping a constant thrust-to-weight ratio. \u003C/p\u003E\u003Cp\u003ETWR = thrust/(mass*gravity) -\u0026gt; thrust = TWR*(mass*gravity)\u003C/p\u003E\u003Cp\u003EA few things to keep in mind:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EShip mass changes as fuel is burned\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003ETWR increases (mass decreases) \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]Gravitational acceleration changes with altitude\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ETWR increases (gravity decreases) \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]Post KSP 1.0, engine thrust changes with altitude\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ETWR increases (thrust increases, usually) \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]In a gravity turn, not all of the thrust is used to counter gravity so the TWR is defined by the effective thrust. (I will not get into this for current report and will save it for next time.)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ETWR decreases (more thrust is horizontal so less fights gravity) \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo do this, I need to loop calculations of mass, gravity, and thrust. At 100% throttle, the thrust = max thrust of the engine so if I have a target TWR in mind, I calculate the thrust needed (above) and the ratio of thrust/max thrust gives me the throttle setting I need. The math and resulting code are below:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EUniversal Law of Gravitation: F = G(m\u003Csub\u003E1\u003C/sub\u003Em\u003Csub\u003E2\u003C/sub\u003E)/r\u003Csup\u003E2\u003C/sup\u003E\u003C/p\u003E\u003Cp\u003EWhen one body is much larger: g = -GM/r\u003Csup\u003E2\u003C/sup\u003E\u003Cstrong\u003E\u00C3\u02C6\u00E2\u20AC\u0153 \u003C/strong\u003E(vector)\u003C/p\u003E\u003Cp\u003EStandard Gravitational Parameter: \u00C3\u017D\u00C2\u00BC = GM\u003C/p\u003E\u003Cp\u003Er = radius \u002B altitude\u003C/p\u003E\u003Cp\u003EMagnitude of g = \u00C3\u017D\u00C2\u00BC/(radius \u002B altitude)\u003Csup\u003E2\u003C/sup\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWe can either use this formula at each altitude or we can use: g\u003Csub\u003Eh\u003C/sub\u003E=g\u003Csub\u003E0\u003C/sub\u003E (r/(r\u002Bh))\u003Csup\u003E2\u003C/sup\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003ELIST ENGINES IN MyLIST.\u003Cbr\u003E\u003Cbr\u003E FOR eng IN MyList \u003Cbr\u003E {\u003Cbr\u003E SET tmax to eng:maxthrust.\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003EUNTIL SHIP:LIQUIDFUEL \u0026lt; 0.1\u003Cbr\u003E{\u003Cbr\u003E IF SHIP:VERTICALSPEED \u0026gt; 50\u003Cbr\u003E {\u003Cbr\u003E SET g to KERBIN:MU / ((KERBIN:RADIUS \u002B SHIP:ALTITUDE)*(KERBIN:RADIUS \u002B SHIP:ALTITUDE)).\u003Cbr\u003E SET t to 2*(SHIP:MASS*g). //Change 2 to desired TWR\u003Cbr\u003E LOCK THROTTLE TO t/tmax.\u003Cbr\u003E SET twr to t/(SHIP:MASS*g).\u003Cbr\u003E PRINT \u0022maxthrust = \u0022 \u002B round(tmax) \u002B \u0022, thrust = \u0022 \u002B round(t) \u002B \u0022, TWR = \u0022 \u002B round(twr,2) \u002B \u0022, Throttle = \u0022 \u002B round(throttle,2).\u003Cbr\u003E PRINT \u0022 \u0022.\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003EWAIT 5.\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EThe big question, for me anyway was will this work for different designs, and the answer is yes!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/U7rCp7l.jpg\u0022 alt=\u0022U7rCp7l.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EOk, so where I had the most trouble was tying in my code for staging - the problem was that when I staged, the maxthrust was reported as 0 so throttle = t/tmax was trying to divide by 0 which doesn\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t work so I went back to relisting the engines after I staged. I have something that finally works but feedback here would definitely be great (particularly if there is an alternative to using the two FOR loops), because it does not seem very optimal to me, but then again, I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m still pretty new at this.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003ELIST ENGINES IN MyLIST.\u003Cbr\u003E\u003Cbr\u003EUNTIL SHIP:LIQUIDFUEL \u0026lt; 0.1\u003Cbr\u003E{\u003Cbr\u003E FOR eng IN MyList \u003Cbr\u003E {\u003Cbr\u003E IF eng:flameout\u003Cbr\u003E {\u003Cbr\u003E PRINT \u0022Decoupling Stage \u0022 \u002B stage:number.\u003Cbr\u003E PRINT \u0022 \u0022.\u003Cbr\u003E STAGE. \u003Cbr\u003E WAIT 1.\u003Cbr\u003E STAGE.\u003Cbr\u003E LIST ENGINES IN MyLIST.\u003Cbr\u003E PRINT \u0022Stage \u0022 \u002B stage:number \u002B \u0022 activated!\u0022.\u003Cbr\u003E PRINT \u0022 \u0022.\u003Cbr\u003E WAIT 1.\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E FOR eng IN MyLIST\u003Cbr\u003E {\u003Cbr\u003E SET tmax to eng:maxthrust.\u003Cbr\u003E PRINT eng:name \u002B \u0022, \u0022 \u002B round(eng:maxthrust).\u003Cbr\u003E PRINT \u0022 \u0022.\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E IF SHIP:VERTICALSPEED \u0026gt; 50\u003Cbr\u003E {\u003Cbr\u003E SET g to KERBIN:MU / ((KERBIN:RADIUS \u002B SHIP:ALTITUDE)*(KERBIN:RADIUS \u002B SHIP:ALTITUDE)).\u003Cbr\u003E SET t to 2*(SHIP:MASS*g). //Change 2 to desired TWR\u003Cbr\u003E LOCK THROTTLE TO t/tmax.\u003Cbr\u003E SET twr to t/(SHIP:MASS*g).\u003Cbr\u003E PRINT \u0022maxthrust = \u0022 \u002B round(tmax) \u002B \u0022, thrust = \u0022 \u002B round(t) \u002B \u0022, TWR = \u0022 \u002B round(twr,2) \u002B \u0022, Throttle = \u0022 \u002B round(throttle,2).\u003Cbr\u003E PRINT \u0022 \u0022.\u003Cbr\u003E WAIT 1.\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EWAIT 5.\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003ENext up: Gravity turn! (I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m hoping to do a true gravity turn where I do an initial pitch over and then unlock the steering and let gravity and throttle control do the rest. I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m really curious to see how well the code I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2ve written here works especially after I modify it to account for the effective thrust.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-26T23:44:05Z\u0022 title=\u002209/26/2015 11:44  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 26, 2015\u003C/time\u003E by BlkBltChemie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"r_rolo1","CreatedById":26192,"CreatedDateTime":"2015-09-27T18:01:39Z","Content":"\n\u003Cp\u003EGood job so far. I also agree that the two For loops do not seem optimal, but I really don\u0027t see at a glance how could you do better. OTOH , why that particular limit on the vertical speed to the TWR adjustement ? I understand the idea behind ( basically, it is just saying that you want some velocity between you and the ground before starting messing with the throttle ), but magic numbers are \u003Cem\u003Eevil\u003C/em\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E and you want this piece of code to work in all of your takeoffs, no matter in what planet. For a example, 50m/s is more than the escape velocity of Gilly and more than 1/4 of the one of Pol \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E I know, work in progress, like all the staging occuring when you have no fuel at all ( not optimal if you want to have chutes working \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E ), just pointing out stuff you need to take care in the future.\u003C/p\u003E\u003Cp\u003EJust another point I wanted to remind you about thrust: It does not change with altitude, it changes with presssure. Better said, \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/67606-Fuel-consumption-as-a-function-of-atmospheric-pressure\u0022 rel=\u0022external nofollow\u0022\u003EIsp changes with pressure\u003C/a\u003E and the math can get wicked at that point if you want to be rigourous. It would probably be better to just ask the engine what is their thrust at the moment than to try to calculate it while in atmo, especially if we are talking about jet engines, or worse, dual mode engines ( in game ATM it is just the RAPIER ).\u003C/p\u003E\u003Cp\u003EAnyway, I foresee liberal use of the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Tsiolkovsky_rocket_equation\u0022 rel=\u0022external nofollow\u0022\u003ETsiolkovsky rocket equation\u003C/a\u003E in your near future. Brace yourself \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-09-28T16:59:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022r_rolo1\u0022 data-cite=\u0022r_rolo1\u0022\u003E\u003Cdiv\u003E why that particular limit on the vertical speed to the TWR adjustement ? I understand the idea behind ( basically, it is just saying that you want some velocity between you and the ground before starting messing with the throttle ), but magic numbers are \u003Cem\u003Eevil\u003C/em\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E and you want this piece of code to work in all of your takeoffs, no matter in what planet. For a example, 50m/s is more than the escape velocity of Gilly and more than 1/4 of the one of Pol \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, great question! 50 m/s is when I start my gravity turn on Kerbin. I was thinking ahead to my next optimization step. It is actually going well so far - still in need of some polishing though. (Preview: I have set up a TWR 2 launch until I get to 50 m/s then drop the TWR to 1.5 as I start the gravity turn and begin taking into account pitch angle. At least for the craft I\u0027m currently testing, with steering unlocked after an initial 5 degree pitch over it hits 45 degrees right at 20,000 m.) Also, I am not planning on using this particular code for takeoff from every celestial - mainly because I call the planet\u0027s mu, radius, etc to calculate g.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI know, work in progress, like all the staging occuring when you have no fuel at all ( not optimal if you want to have chutes working \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E ), just pointing out stuff you need to take care in the future.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESorry, not sure I followed this - the staging stops when the ship is out of fuel. I see the no fuel at all primarily as a limitation for potential refuelling missions - I don\u0027t want to stage if I have a tanker ready to rendezvous and refuel. As for parachutes (and fairings for that matter), I\u0027m leaning more towards using action groups.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EJust another point I wanted to remind you about thrust: It does not change with altitude, it changes with presssure. Better said, \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/67606-Fuel-consumption-as-a-function-of-atmospheric-pressure\u0022 rel=\u0022external nofollow\u0022\u003EIsp changes with pressure\u003C/a\u003E and the math can get wicked at that point if you want to be rigourous. It would probably be better to just ask the engine what is their thrust at the moment than to try to calculate it while in atmo, especially if we are talking about jet engines, or worse, dual mode engines ( in game ATM it is just the RAPIER ).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI may not be reading this correctly, but I think I am having the engine tell me its thrust (well max thrust) at a given altitude/pressure. The thrust I\u0027m calculating is the thrust I need to obtain my target TWR. But like I said, maybe I am misreading/misunderstanding something here.\u003C/p\u003E\n"},{"CreatedByName":"BlkBltChemie","CreatedById":135033,"CreatedDateTime":"2015-10-03T16:58:52Z","Content":"\n\u003Cp\u003E--------------------------------\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EInterim Report C \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 Gravity Turn\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E--------------------------------\u003C/p\u003E\u003Cp\u003EThings are really starting to come together in the launch optimization process and I finally have a code that I (mostly) like for a \u003Cem\u003E\u003Cstrong\u003Etrue\u003C/strong\u003E\u003C/em\u003E gravity turn! This also incorporates the staging and throttle control from the previous interim reports. In Missions 01 and 02, I used a sequence of WHEN/THEN triggers to turn over x degrees at y altitude; however, with the 1.0 aerodynamics, I wanted to use a true gravity turn without locking steering.\u003C/p\u003E\u003Cp\u003EThe basic profile is to launch with steering locked vertically \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 I use (0,90) to keep the launch orientation, then (90,90) to rotate once it clears the launch clamps. At 50 m/s, I lock the steering to (90,85), allow a few seconds to stabilize, and then unlock steering for the rest of the flight. \u003C/p\u003E\u003Cp\u003E[spoiler=]\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ECLEARSCREEN.\u003Cbr\u003E\u003Cbr\u003E//Setup\u003Cbr\u003E\u003Cbr\u003ESET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.              //Thanks to Steven Mading on the KSP forum for this override of the default 50% throttle on launch\u003Cbr\u003ESET twr to 1.6.                            //Change as needed depending on vessel design\u003Cbr\u003ELIST ENGINES IN MyList.\u003Cbr\u003E\u003Cbr\u003EPRINT \u0022All systems go for launch!\u0022.\u003Cbr\u003EPRINT \u0022 \u0022.\u003Cbr\u003EWAIT 2.\u003Cbr\u003E\u003Cbr\u003ESET runmode to 1.\u003Cbr\u003E\u003Cbr\u003E//Flight Control\u003Cbr\u003E\u003Cbr\u003EUNTIL runmode = 0                        //Runmode format based on code found at https://gist.github.com/KK4TEE/c41b4fb789a01cef6122\u003Cbr\u003E{\u003Cbr\u003E    FOR eng IN MyList \u003Cbr\u003E    {\u003Cbr\u003E        IF eng:flameout\u003Cbr\u003E        {\u003Cbr\u003E            LOCK THROTTLE TO 0.\u003Cbr\u003E            LOCK STEERING TO SHIP:FACING.                //May not be needed depending on craft design\u003Cbr\u003E            PRINT \u0022Decoupling Stage \u0022 \u002B stage:number.\u003Cbr\u003E            PRINT \u0022 \u0022.\u003Cbr\u003E            STAGE. \u003Cbr\u003E            WAIT 1.\u003Cbr\u003E\u003Cbr\u003E            STAGE.\u003Cbr\u003E            LIST ENGINES in MyList.\u003Cbr\u003E            PRINT \u0022Stage \u0022 \u002B stage:number \u002B \u0022 activated!\u0022.\u003Cbr\u003E            PRINT \u0022 \u0022.\u003Cbr\u003E\u003Cbr\u003E            UNLOCK STEERING.    \u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    IF runmode = 1            //Launch Sequence\u003Cbr\u003E    {\u003Cbr\u003E        STAGE.\u003Cbr\u003E        FOR eng IN MyList \u003Cbr\u003E        {\u003Cbr\u003E            SET tmax to eng:maxthrust.\u003Cbr\u003E        }\u003Cbr\u003E        SET g to KERBIN:MU / ((KERBIN:RADIUS \u002B SHIP:ALTITUDE)*(KERBIN:RADIUS \u002B SHIP:ALTITUDE)).\u003Cbr\u003E        SET t to twr*(SHIP:MASS*g).\u003Cbr\u003E        LOCK THROTTLE TO t/tmax.\u003Cbr\u003E        LOCK STEERING TO HEADING(0, 90).\u003Cbr\u003E        PRINT \u0022Main engine ignition!\u0022.\u003Cbr\u003E        PRINT \u0022 \u0022.\u003Cbr\u003E        WAIT 2.\u003Cbr\u003E\u003Cbr\u003E        STAGE.\u003Cbr\u003E        PRINT \u0022Launch clamps disengaged!\u0022.\u003Cbr\u003E        PRINT \u0022WE HAVE LIFTOFF!!!\u0022.\u003Cbr\u003E        PRINT \u0022 \u0022.\u003Cbr\u003E        WAIT 2.\u003Cbr\u003E        LOCK STEERING TO HEADING(90, 90).        //Potentially add a wait here for large vessels with less control authority (SAS/RCS)\u003Cbr\u003E\u003Cbr\u003E        SET runmode to 2.\u003Cbr\u003E    }    \u003Cbr\u003E\u003Cbr\u003E    ELSE IF runmode = 2        //Gravity turn\u003Cbr\u003E    {\u003Cbr\u003E        IF SHIP:VERTICALSPEED \u0026gt; 50            //Change as needed depending on vessel design\u003Cbr\u003E        {\u003Cbr\u003E            LOCK STEERING TO HEADING(90, 85).\u003Cbr\u003E            PRINT \u0022Commencing gravity turn.\u0022.\u003Cbr\u003E            PRINT \u0022 \u0022.            \u003Cbr\u003E            WAIT 3.\u003Cbr\u003E\u003Cbr\u003E            UNLOCK STEERING.\u003Cbr\u003E\u003Cbr\u003E            SET runmode to 3.\u003Cbr\u003E        }    \u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    ELSE IF runmode = 3        //Throttle control\u003Cbr\u003E    {\u003Cbr\u003E        FOR eng IN MyList \u003Cbr\u003E        {\u003Cbr\u003E            IF eng:ignition AND NOT eng:flameout    //Need this because stowed/flameout give maxthrust = 0\u003Cbr\u003E            {\u003Cbr\u003E                SET tmax to eng:maxthrust.\u003Cbr\u003E            }\u003Cbr\u003E        }        \u003Cbr\u003E        SET g to KERBIN:MU / ((KERBIN:RADIUS \u002B SHIP:ALTITUDE)*(KERBIN:RADIUS \u002B SHIP:ALTITUDE)).\u003Cbr\u003E        SET p to VECTORANGLE(ship:facing:vector, ship:up:vector).        //90-p = angle above horizon, p = angle from straight up; Formula from https://github.com/KSP-KOS/KOS/issues/664\u003Cbr\u003E        SET teff to twr*(SHIP:MASS*g).                        \u003Cbr\u003E        SET t to teff / COS(p).\u003Cbr\u003E        LOCK THROTTLE TO t/tmax.        \u003Cbr\u003E                                            //Change as needed depending on vessel design (or omit??)\u003Cbr\u003E        WHEN SHIP:ALTITUDE \u0026gt; 12000 THEN                        //11.5 km -\u0026gt; 0.1 atm\u003Cbr\u003E        {                                    \u003Cbr\u003E            SET twr to 1.3.\u003Cbr\u003E        }\u003Cbr\u003E        WHEN SHIP:ALTITUDE \u0026gt; 24000 THEN                        //23 km -\u0026gt; 0.01 atm\u003Cbr\u003E        {\u003Cbr\u003E            SET twr to 1.0.\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        IF SHIP:APOAPSIS \u0026gt; 100000                        \u003Cbr\u003E        {\u003Cbr\u003E            LOCK THROTTLE TO 0.\u003Cbr\u003E            LOCK STEERING TO PROGRADE.\u003Cbr\u003E            PRINT \u0022Suborbital trajectory achieved.\u0022.\u003Cbr\u003E            PRINT \u0022Current AP: \u0022 \u002B round(SHIP:APOAPSIS).\u003Cbr\u003E            PRINT \u0022 \u0022.\u003Cbr\u003E\u003Cbr\u003E            SET runmode to 0.\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003ESET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.\u003Cbr\u003EWAIT UNTIL SHIP:ALTITUDE \u0026gt; 70000.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EChallenge 1 was adjusting the throttle control because as the rocket pitches over, \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Thrust-to-weight_ratio\u0022 rel=\u0022external nofollow\u0022\u003Enot all of the thrust goes to counteracting gravity\u003C/a\u003E. The effective thrust then, can be calculated by thrust(eff) = thrust * cosine(pitch angle). The real challenge was calling the pitch angle because SHIP: PITCH returns something else because of the original kOS design. Fortunately, I found a \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/664\u0022 rel=\u0022external nofollow\u0022\u003Ecommand \u003C/a\u003Ethat computes the angle between the SHIP:FACING and SHIP:UP vectors, which corresponds to the pitch from vertical. So with thrust(eff) = twr*(mass*g), where g is a function of altitude, and thrust = thrust(eff)/cos(angle), I can still adjust the throttle by thrust/maxthrust. Now it is a function of both altitude and angle. (Essentially, it throttles down with increasing altitude and up with increasing angle.)\u003C/p\u003E\u003Cp\u003EI\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m not sure if I like this but I included a couple triggers to change the desired twr at 12 km and 24 km which correspond to 1/10 and 1/100 sea level pressure. It does give a shallower trajectory once leaving the thickest part of the atmosphere and also avoids temperature indicators appearing. I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m still experimenting with this part of the code.\u003C/p\u003E\u003Cp\u003EChallenge 2 was dealing with staging which gave me a lot of trouble \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 (a) when an engine is stowed or out of fuel, it returns a maxthrust of 0 meaning I was trying to divide by 0 for throttle = thrust/maxthrust which breaks the code. This was easy to fix by adding an if loop to only set tmax to maxthrust if the engine had been activated and was not flameout. (\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E Harder to fix was the rocket flipping out during staging. I locked throttle to 0 during staging so it wasn\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t trying to use the last throttle from the launch stage. I also played around with a temporary steering lock and then unlocking again after the engine ignited. Unfortunately, without fins on the upper stage, the craft always flipped out. After adding fins, I actually didn\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t have to add the temporary steering lock for the 1.25 m design. If locked to SHIP: PROGRADE, the craft actually started flipping again, but SHIP:FACING or SHIP:HEADING kept the upper stage on course. For the 2.5 m design, I did have to lock the steering, and SHIP:FACING worked best. The images below using SHIP:FACING for both designs.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cimg src=\u0022http://i.imgur.com/Ao6CrIs.jpg\u0022 alt=\u0022Ao6CrIs.jpg\u0022\u003EI think it is interesting how different the final trajectories are in map mode as well as when different events occurred. I may still need some more optimizations to improve the general applicability.\u003C/blockquote\u003E\u003Cp\u003EAnother big change was changing to a runmode format to separate the steps of the mission. I adapted the basic outline from a\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/videoseries?list=PLEpK8nolWr1rghS5cOEOL-JQ33h4CgPAP\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E and the \u003Ca href=\u0022https://gist.github.com/KK4TEE\u0022 rel=\u0022external nofollow\u0022\u003Ecorresponding code\u003C/a\u003E.\u003Cp\u003ENext Up: Optimizing orbital circularization using some suggestions given previously. I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2m really looking forward to comparing the efficiency of the launch to the Mission 02 code. Since this will return to an ordinary mission report, I\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2ve uploaded the code and craft files from the interim reports to Dropbox. (I have a separate save for the optimization testing from my standard missions - to explain any inconsistencies with file naming.)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ECode and Craft Files:\u003C/strong\u003E \u003Ca href=\u0022https://www.dropbox.com/sh/uinb6ogewezw8ua/AAB7DIvvfnp-M4UEL9eH34Tta?dl=0\u0022 rel=\u0022external nofollow\u0022\u003EInterim A-C\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-05T20:57:12Z\u0022 title=\u002210/05/2015 08:57  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 5, 2015\u003C/time\u003E by BlkBltChemie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"urlme","CreatedById":151882,"CreatedDateTime":"2015-10-03T17:00:52Z","Content":"\n\u003Cp\u003EHi it is hard to understand cause long article need patience\u003C/p\u003E\n"},{"CreatedByName":"r_rolo1","CreatedById":26192,"CreatedDateTime":"2015-10-03T18:08:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BlkBltChemie\u0022 data-cite=\u0022BlkBltChemie\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESorry, not sure I followed this - the staging stops when the ship is out of fuel. I see the no fuel at all primarily as a limitation for potential refuelling missions - I don\u0027t want to stage if I have a tanker ready to rendezvous and refuel. As for parachutes (and fairings for that matter), I\u0027m leaning more towards using action groups.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat I\u0027m saying is that normally you don\u0027t want to stage all up in quick sucession until you burn all your fuel. Say, in most launches you\u0027ll hit suborbital flight still quite low in the atmo ( say, 30ish Km ) and you\u0027ll need to cut out engines until you reach Apoapsis ... it is very rare the launch where you burn all the thing in one go. Same OFC for fairings deployment ( you only want to do that high in atmo ) or the chutes, but those are easly action grouped as you said, so it is a minor concern.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BlkBltChemie\u0022 data-cite=\u0022BlkBltChemie\u0022\u003E\u003Cdiv\u003EI may not be reading this correctly, but I think I am having the engine tell me its thrust (well max thrust) at a given altitude/pressure. The thrust I\u0027m calculating is the thrust I need to obtain my target TWR. But like I said, maybe I am misreading/misunderstanding something here.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk, this one is my fault. I was actually saying you were doing it the best way, but also saying that if you \u003Cem\u003Ereally\u003C/em\u003E wanted, you could do the whole math based on the change of Isp with pressure, the change of pressure with altitude and your exact flight plan .... and in case of airbreathing engines in atmo mode, you also have to consider the speed of the ship ... in other words, the issue can get quite mathy ( and I strongly advice you to \u003Cem\u003Enot\u003C/em\u003E go that way \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E ).\u003C/p\u003E\u003Cp\u003ENow, onto the Report \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"r_rolo1","CreatedById":26192,"CreatedDateTime":"2015-10-03T19:17:31Z","Content":"\n\u003Cp\u003EThe issues you\u0027re having with staging , if I\u0027m reading your rocket and your programming correctly( I might not ), might be because you\u0027re staging when the ship velocity is close of the speed of sound. In 1.x there is a huge spike in drag in the transsonic region and staging at that velocity ( in fact even keeping prograge if the ship top is convoluted enough ) ) can be hugely problematic if the top of your ship is draggy enough. There are three ways of dealing with that: giving your ship more control authority ( like you did ), reduce drag ( mostly fairings usage ) or to make that the separation occurs at a time the ship is not suffering so much drag. The last one can be done by either increasing or decreasing speed at separation if you don\u0027t want to change the ship, but increasing it might send you to too much steep launch profile, so IMHO it would probably be better to reduce the speed ( or alternatively reduce the TWR at launch a little so that the separation occurs a little later and higher : less air=less drag= less issues ).\u003C/p\u003E\u003Cp\u003EThat said, I don\u0027t think you need to avoid the thermal gauges too much. In fact, due to the fact that KSP was forced to make their parts to heat up a lot more than RL because otherwise there would be no reentry heat to speak off ( Kerbin typical low orbit orbital speeds are just a little above Mach 9, so if realistical heating was up, you would most likely not see any heating at all until you got above Kerbin escape velocity ), thermal gauges light up too soon on launches and if you go by them, your launch will cost a couple hundreds of m/s in dV. My rule of thumb is that if I don\u0027t see reds, there is no issue \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EOn the code proper ... it looks good enough. I would add some sanity checks at certain points ( say, the typical 45ish degrees at 10 km high ) just to see if stuff is not going down the drain. Redundancy, is key \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"}]}