{"TopicId":152958,"ForumId":51,"TopicTitle":"kOS Testing #1: Network Deployment","CreatedByName":"Geschosskopf","CreatedById":69507,"CreatedDateTime":"2016-12-04T01:26:03Z","PageNum":1,"Articles":[{"CreatedByName":"Geschosskopf","CreatedById":69507,"CreatedDateTime":"2016-12-04T01:26:03Z","Content":"\n\u003Cp\u003E\nThe Boffins have not been idle despite it having been a long time since the Circus did anything. \u00A0No, they\u0027ve been hard at work testing and tweaking stuff for the next chapter of the Glorious Kerbal Space Empire. \u00A0Their current project is to develop a kOS script to facilitate the deployment of what they call \u0022Moonsats\u0022. \u00A0In the Circus concept of communications networks (see the link in my sig), there are 2 general species of commsats: \u00A0Main Relays, which have huge antennae and are in highly eccentric polar orbits over the central body in each planetary system, and Moonsats, which are in moderately low circular orbits, usually but not necessarily around moons of the central body. \u00A0There usually needs to be more than 1 of these latter per \u0022moon\u0022, and they need to be spaced neatly, and that requires more math than the Boffins want to do manually. \u00A0Thus, the goal was to make KAL9000 (actually the name of the computer part in kOS) do crunch the numbers\u00A0for them \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, the project has gone from the drawing board to partial implementation and successful completion of early milestones in the course of today. \u00A0The Boffins are feeling a little proud of themselves so decided to show off what they\u0027ve done so far. \u00A0And here it is:\n\u003C/p\u003E\n\u003Ca href=\u0022https://flic.kr/p/NBowJB\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u002201-01 SatSpacer Terminal\u0022 class=\u0022ipsImage\u0022 src=\u0022https://farm6.staticflickr.com/5773/30592884543_a352baba98_b.jpg\u0022\u003E\u003C/a\u003E\n\u003Cp\u003E\nReally, that\u0027s all it does right now, just calculate and display those 5 particular numbers, only 2 of which are really important at the moment. \u00A0But that was the main challenge. \u00A0The rest of the project should be somewhat simpler as it traverses known ground. \u00A0Today the Boffins had to learn more about the \u0022anomalous rectums\u0022 (actual technical term) of orbits than they ever wanted to know \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0. \u00A0There\u0027s a non-negligible amount of code and a lot of research behind this simple display.\n\u003C/p\u003E\n\u003Cp\u003E\nThe idea of the whole project is as follows:\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nA carrier vehicle (CV) with 3 moonsats aboard gets into an elliptical orbit at the desired inclination around the body the Circus wants to hang a network on. \u00A0At this point, the kOS script is activated.\n\u003C/li\u003E\n\u003Cli\u003E\nThe kOS script figures out a good altitude for the moonsats to orbit the body and adjusts the CV\u0027s \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E to that altitude.\n\u003C/li\u003E\n\u003Cli\u003E\nThe kOS script determines the orbital period for a circular orbit at this altitude, then multiplies that by 1.33333 to get the desired orbital period of the CV.\n\u003C/li\u003E\n\u003Cli\u003E\nThe kOS script calculates the \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E needed by the CV to have that orbital period and adjusts the CV\u0027s \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E as needed.\n\u003C/li\u003E\n\u003Cli\u003E\nOnce so adjusted, the CV releases 1 moonsat per orbit, each of which then circularizes at the \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E of the elliptical CV orbit. \u00A0Because the CV\u0027s orbital period is 1/3 longer than that of the moonsats, each time it or a released moonsat reaches \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E, it will be 1/3 of an orbit behind the previous moonsat, so they end up evenly spaced and able to see each other around the body.\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\nTo accomplish this, the Boffins broke the project up into phases:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nPhase I: \u00A0Develop the basic algorithms for computing the required orbital parameters, in such a way that the same script can be used at any body with a reasonably large \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E. \u00A0Just print these numbers on the screen and test their validity by performing the necessary maneuvers manually. \u00A0This is actually the only important phase because the system is workable at this point. \u00A0The later phases are gravy.\n\u003C/li\u003E\n\u003Cli\u003E\nPhase II: \u00A0Add the ability to deploy n \u0026gt;= 3 satellites, and add automation so the CV performs all maneuvers itself.\n\u003C/li\u003E\n\u003Cli\u003E\nPhase III. \u00A0Write a separate program for the moonsats so they can tweak their own orbits automatically.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nToday, the Boffins are please to report that Phase I is complete! \u00A0It\u0027s that output which appears in the pic above.\n\u003C/p\u003E\n\u003Cp\u003E\nThe process starts by determining a \u0022good\u0022 altitude for the moonsats. \u00A0This has to be high enough that they can see the adjacent moonsats sharing the orbit without the planet in the way, plus have some margin of error for imprecise maneuvers getting there. \u00A0For the 3-moonsat problem, this altitude is determined as follows:\n\u003C/p\u003E\n\u003Ca href=\u0022https://flic.kr/p/PMBQ2w\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u002201-01A Moonsat Altitude\u0022 class=\u0022ipsImage\u0022 src=\u0022https://farm6.staticflickr.com/5756/31365000896_86583a5441_z.jpg\u0022\u003E\u003C/a\u003E\n\u003Cp\u003E\nThe desired quantities are\u00A0the line CS (for calculation purposes) and also CS\u00A0minus the radius of the planet (orbital altitude for maneuvering purposes). \u00A0The length of the line CF is arbitrary, whatever you think gives enough clearance between the edge of the planet (and atmosphere, if present) and the LOS between adjacent moonsats. \u00A0In Phase I, the Boffins chose 120% of the body\u0027s radius. \u00A0This turned out to be just a tad too short in practice, so will be increased to 150% in the next round of testing. \u00A0In any case, for the 3-moonsat problem, Triangle CFS is a 30-60-90 right triangle so with CF given, calculating the length CS is just 1 trig function away.\n\u003C/p\u003E\n\u003Cp\u003E\nThe next step is to calculate the orbital period for a circular orbit of radius CS. \u00A0Just plug the numbers into Kepler\u0027s 3rd Law:\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nT = SQRT[(4 *\u00A0\u03C0\u003Csup\u003E2\u003C/sup\u003E * R\u003Csup\u003E3\u003C/sup\u003E) / (G * M\u003Csub\u003EP\u003C/sub\u003E)]\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nwhere T is the period, R is CS, G is 6.673 x 10\u003Csup\u003E-11\u003C/sup\u003E, and M\u003Csub\u003EP\u003C/sub\u003E is the mass of the body you\u0027re orbiting.\n\u003C/p\u003E\n\u003Cp\u003E\nSimply multiple this value by 1.3333 to get the period of the CV/s desired elliptical orbit.\n\u003C/p\u003E\n\u003Cp\u003E\nIt was at this point that the Boffins started running into all the \u0022anomalous rectums\u0022 and thought they were going to have to do a bunch more calculations using them to figure out the CV/s desire \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E by way of the semi-major axis. \u00A0But fortunately, the Boffins figured out a shortcut after a chance reading of a footnote buried deep in dense pages of complex equations. \u00A0That life-saving footnote said this:\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\n\u0022A circular orbit with a radius equal to an elliptical orbit\u0027s semi-major axis has the same period as the elliptical orbit.\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nThe Boffins already now had the period of the elliptical orbit so could plug that back into Kepler\u0027s 3rd Law (above) rearranged to solve for R, which in this case would be the semi-major axis of the CV\u0027s elliptical orbit.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nR = [(T\u003Csup\u003E2\u003C/sup\u003E * G * M\u003Csub\u003EP\u003C/sub\u003E) / (4 *\u00A0\u03C0\u003Csup\u003E2\u003C/sup\u003E)]^(1/3)\n\u003C/p\u003E\n\u003Cp\u003E\nThen, because the planet is at one focus\u00A0of the ellipse, the altitude of the CV\u0027s desired \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E would simply be:\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\n\u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E = [( 2 * SMA ) - CF] - the body\u0027s radius.\n\u003C/p\u003E\n\u003Cp\u003E\nWow. \u00A0That wasn\u0027t so hard, thanks to the shortcut \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0 Anyway, with all these numbers determined, the script simply printed them out as shown above. \u00A0All this worked fine at Kerbin in an equatorial orbit but to really test Phase I, the Boffins sent a wad of 3 moonsats to Mun and had them arrive with a 60^ inclination. \u00A0Here they all are still attached to the CV en route to Mun.\n\u003C/p\u003E\n\u003Ca href=\u0022https://flic.kr/p/NBowEP\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u002201-02 Moonsats En Route\u0022 class=\u0022ipsImage\u0022 src=\u0022https://farm6.staticflickr.com/5594/30592884323_855d7372aa_b.jpg\u0022\u003E\u003C/a\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd here they are being deployed, all being flown manually using the numbers calculated by KAL9000 using the script. \u00A0You can see the CV is in a slightly elliptical orbit with the 1st moonsat in place and the next in-process.\n\u003C/p\u003E\n\u003Ca href=\u0022https://flic.kr/p/NBowAa\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u002201-03 Deploying Mun Relays\u0022 class=\u0022ipsImage\u0022 src=\u0022https://farm6.staticflickr.com/5596/30592884053_fe74af3df3_b.jpg\u0022\u003E\u003C/a\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWith all 3 moonsats in place, the Boffins de-orbited the CV.\n\u003C/p\u003E\n\u003Ca href=\u0022https://flic.kr/p/NBoww2\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u002201-04 The Result\u0022 class=\u0022ipsImage\u0022 src=\u0022https://farm6.staticflickr.com/5575/30592883813_2b237b8f64_b.jpg\u0022\u003E\u003C/a\u003E\n\u003Cp\u003E\nAs it turns out, 2 of the moonsats can\u0027t quite see each other and the others are borderline due to their orbits being a shade too low. \u00A0As mentioned above, fixing this is just tweaking 1 scalar value so really isn\u0027t important here. \u00A0What is important is that the Boffins managed to code this script without any egregious logic errors, despite not knowing much about fancy orbital mechanics, and that the algorithms work well enough to provide good results even with substantial rounding errors (for clarity in the display of the numbers) and the imprecision of manual flying.\n\u003C/p\u003E\n\u003Cp\u003E\nSo now the Boffins are celebrating with their traditional whiskey and wondering if it\u0027s even worth the trouble to go on with Phases II and III.\n\u003C/p\u003E\n"},{"CreatedByName":"Geschosskopf","CreatedById":69507,"CreatedDateTime":"2016-12-04T17:58:54Z","Content":"\n\u003Cp\u003E\nOK, the tweak of the line CF from 120% to 150% of the planet\u0027s radius seems to be what it needed.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://flic.kr/p/PDryNE\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u002201-05 Tweaked\u0022 class=\u0022ipsImage\u0022 src=\u0022https://farm6.staticflickr.com/5452/31272466602_37c92eb230_z.jpg\u0022\u003E\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo, here\u0027s the script as it stands so far. \u00A0I don\u0027t know if I\u0027ll ever do any more to it because it\u0027s no trouble to do the flying yourself. \u00A0Be sure to read the \u0022tips on usage\u0022 section for best results.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// SatSpacer.ks by Bullethead\n// v 1.0 2016-12-04\n// This script is an aid for evenly spacing 3 relay satellites in a circular orbit of arbitrary inclination\n// around any planet or moon with a reasonably large \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E.  3 relays evenly spaced and high enough to be able\n// to see each other past the planet will give 360^ coverage on the ground at that planet, but will have blind\n// spots at the poles.  To cover them, send another group of 3 relays and put them at an inclination \u0026gt; 45^.\n//\n// Starting Conditions:\n// 1.  A carrier vehicle (CV) carries all 3 relay satellites into a closed orbit at the target planet or moon.\n// 2.  The relay satellites need enough \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E to circularize.\n// 3.  Run this script on the CV.\n//\n// What this script does:\n// The end result is that the CV will be in an elliptical orbit with \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E at the altitude of the relay satellites\n// and \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E set so that the CV\u0027s orbital period is 1/3 greater than a circular orbit at its \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E.  This script calculates\n// and displays the \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E and \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E for the CV to accomplish this.  It\u0027s then up to you to get the CV into this orbit,\n// either manually, with \u003Cabbr title=\u0022Mechjeb (mod)\u0022\u003EMJ\u003C/abbr\u003E, or writing your own script to fly it there.  Whatever.  This script is just a calculator.\n//\n// Tips on Usage:\n// Satisfy the starting conditions then maneuver the CV into the specified elliptical orbit.  It\u0027s a good idea to set the\n// CV\u0027s \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E first, then its \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E.  This way, the CV will be at \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E when you\u0027re done.  At this point, turn the CV prograde and\n// release all 3 relays in succession, giving them just a few m/s to slowly drift apart.  All 4 ships will now be flying in\n// formation.  Switch to the 1st relay, adjust its \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E back to the desired value if required, then circularize it when it\n// gets back to \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E 1 orbit later.  Determine its orbital period (use \u003Cabbr title=\u0022Mechjeb (mod)\u0022\u003EMJ\u003C/abbr\u003E, \u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E, etc.) and write this down.  Switch to the 2nd\n// relay and repeat.  After it circularizes, use \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E (with thrust limited down to like 2-3) to tweak its orbital period to\n// be within 0.1 seconds of the 1st relay\u0027s period.  Then switch to the 3rd relay and repeat.  Then deorbit the CV.  Done.\n\n// Figuring out where we are, how big it is, and how high we need to be.\n//   NOTE:  All this is based on distance from center of planet.  Must convert later to ASL altitude.\nCLEARSCREEN.\nSET OurPlanet TO SHIP:BODY.\nSET SLRad TO OurPlanet:RADIUS.\nIF (OurPlanet:ATM:EXISTS)\n\t{\n\tSET TotRad TO (SLRad \u002B OurPlanet:ATM:HEIGHT).\n\t}.\n\tELSE\n\t{\n\tSET TotRad TO SLRad.\n\t}.\nSET ClearRad TO (TotRad \u002B (0.5 * TotRad)). // Gives a clearance of 50% for LOS between relays in same orbit\n//  NOTE:  ClearRad will be used later to dtermine commsat orbital altitude vis trig and geometry\n\n\n// Determining commsat orbital altitude in terms of distance from center of planet based on ClearRad\n//    Imagine 3 commsats forming an equilateral triangle around the planet.  ClearRad drawn from the\n//    planet\u0027s center bisects one of the sides of the equilateral triangle at a right angle.  Another\n//    line drawn from the center of the planet to a vertex of the equilateral triangle thus creates\n//    a 30-60-90 triangle with this second line as the hypotenuse.  We need to find the length of\n//    this line, which is ClearRad / sin30.\nSET DistFromCenter TO (ClearRad / SIN(30)).\n\n// Converting DistFromCenter to orbital altitude ASL to give where we want to park the commsats.\n//   Then make sure it\u0027s considerably less than the planet\u0027s \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E radius.\nSET SatAlt TO (DistFromCenter - SLRad).\nIF SatAlt \u0026lt;= (0.75 * OurPlanet:SOIRADIUS)\n\t{\n\tPRINT \u0022Commsat altitude:  \u0022 \u002B ROUND((SatAlt/1000),3) \u002B \u0022 km\u0022.\n\t}.\n\tELSE\n\t{\n\tPRINT \u0022\u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E not big enough.  Need more satellites\u0022.\n\tEND.\n\t}.\n\n\n// Determining commsat and carrier vehicle orbital periods \nSET GConst TO 0.00000000006673.\nSET PlanetMass TO OurPlanet:MASS.\nSET SatPer TO SQRT((4 * (CONSTANT:PI)^2 * (DistFromCenter^3))/(GConst * PlanetMass)).\nPRINT \u0022 \u0022.\nPRINT \u0022Commsat orbital period: \u0022 \u002B ROUND(SatPer,2) \u002B \u0022 seconds\u0022.\nSET CarPer TO SatPer * 1.3333.\nPRINT \u0022 \u0022.\nPRINT \u0022Carrier vehicle orbital period: \u0022 \u002B ROUND(Carper,2) \u002B \u0022 seconds\u0022.\n\n\n// Determining carrier vehicle \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E given its \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E and period\n//  Step 1:  Finding semi-major axis.  Elliptical orbital period is same as for circular\n//     orbit with radius = to SMA.\nSET CarSMA TO (((CarPer)^2 * GConst * PlanetMass) / (4 * (CONSTANT:PI)^2))^(1/3).\nPRINT \u0022 \u0022.\nPRINT \u0022Carrier SMA = \u0022 \u002B ROUND((CarSMA/1000),3) \u002B \u0022 km\u0022.\n//  Step 2:  Determining \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E distance from planet\u0027s center using SMA and \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E distance from center\n//    (\u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E DFC) = SMA \u002B (SMA - (\u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E DFC)) because the planet is one of the foci\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-12-04T17:59:30Z\u0022 title=\u002212/04/2016 05:59  PM\u0022 data-short=\u00227 yr\u0022\u003EDecember 4, 2016\u003C/time\u003E by Geschosskopf\u003C/strong\u003E\n\u003C/span\u003E\n"}]}