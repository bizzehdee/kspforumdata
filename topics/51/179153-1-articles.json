{"TopicId":179153,"ForumId":51,"TopicTitle":"KOS Automated Space Program - Second Tutorial","CreatedByName":"Alpha 360","CreatedById":166007,"CreatedDateTime":"2018-10-21T10:21:24Z","PageNum":1,"Articles":[{"CreatedByName":"Alpha 360","CreatedById":166007,"CreatedDateTime":"2018-10-21T10:21:24Z","Content":"\n\u003Cp\u003E\nCough cough.\n\u003C/p\u003E\n\u003Cp\u003E\n**Starts speaking in a dull narrator voice\n\u003C/p\u003E\n\u003Cp\u003E\nThis mission report documents the history of the Automated Space Program, lead by none other than the fearless HAL 9000, the A.I designed to run a space program. Why didn\u0027t a Kerbal of remarkable talent step up to the plate instead of this automaton? Because the Kraken banned space travel from kerbals. If a single cell of kerbal flesh escaped the upper atmosphere, then the Kraken would slaughter the population of Kerbin!\n\u003C/p\u003E\n\u003Cp\u003E\nOr so our several hundred mages/witch doctors/wizards kerbs state after coming out of intense trances huddled together in their holy places. Everyone knew that they spoke the truth. After all, they said that sensibility was an evil not to be practiced, which we have followed up to the extreme. We have NO cities whatsoever, and yet we built\u00A0a magnificent space center. There are literally no other structures on the planet, except those which were related to the space program of the distant past. Also, our mages/witch doctors/wizards have spawned in green monoliths in random places, because they were being insensible in accordance with the Kraken\u0027s laws.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, enough backstory, lets get into the meat of this story.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n**Changes to a scholarly voice, full of appreciation for his subject\n\u003C/p\u003E\n\u003Cp\u003E\nI have been messing around with the KOS mod for a little while, and I have decided to create this mission report series so that I will practice this to hopefully great effect. I will make this series primarily about the substance, that is, how I programmed X to do Y and not Z, but pop in the occasion joke, as seen above. I will launch NO kerbals, not one, doing everything with\u00A0KOS. I will use kerbonauts inside the atmosphere, and rescue them from orbit, but nothing else.\u00A0My install of KSP is 1.4.4, so mods that work for me probably won\u0027t work for those in KSP 1.5\u002B.\n\u003C/p\u003E\n\u003Cp\u003E\nI have installed a fairly large mod pack, roughly 30 mods, seen below.\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n1. Kerbal Engineer\n\u003C/p\u003E\n\u003Cp\u003E\n2. Kerbal Alarm Clock\n\u003C/p\u003E\n\u003Cp\u003E\n3. Remote Tech\n\u003C/p\u003E\n\u003Cp\u003E\n4.Community Resource Pack\n\u003C/p\u003E\n\u003Cp\u003E\n5.Community Tech Tree\n\u003C/p\u003E\n\u003Cp\u003E\n6. kerbal Operating Script (kOS)\n\u003C/p\u003E\n\u003Cp\u003E\n7. Custom Asteroid pack\n\u003C/p\u003E\n\u003Cp\u003E\n8. Kerbal Reusability Expansion\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n9. Kerbnet Controller\n\u003C/p\u003E\n\u003Cp\u003E\n10. Dynamic Battery Storage\n\u003C/p\u003E\n\u003Cp\u003E\n11. DMagic Orbital Science\n\u003C/p\u003E\n\u003Cp\u003E\n12. Contract Window \u002B\n\u003C/p\u003E\n\u003Cp\u003E\n13. Near Future Suite\n\u003C/p\u003E\n\u003Cp\u003E\n14. Lithobrake technologies\n\u003C/p\u003E\n\u003Cp\u003E\n15 .KSP ExtendedAntennaProgression\n\u003C/p\u003E\n\u003Cp\u003E\n16. Capcom\n\u003C/p\u003E\n\u003Cp\u003E\n17. Stock Remote Tech\n\u003C/p\u003E\n\u003Cp\u003E\n18. B9 Part Switch\n\u003C/p\u003E\n\u003Cp\u003E\n19. Community Category Kit\n\u003C/p\u003E\n\u003Cp\u003E\n20. Firespitter Core\n\u003C/p\u003E\n\u003Cp\u003E\n21. Contract Parser\n\u003C/p\u003E\n\u003Cp\u003E\n22. Rasterprop core\n\u003C/p\u003E\n\u003Cp\u003E\n23. Rasterpropmoniter\n\u003C/p\u003E\n\u003Cp\u003E\n24. kOS For All!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0And with this, I wish all comers,\n\u003C/p\u003E\n\u003Cp\u003E\nHappy Explosions!\n\u003C/p\u003E\n"},{"CreatedByName":"roboslacker","CreatedById":175473,"CreatedDateTime":"2018-10-21T11:24:32Z","Content":"\n\u003Cp\u003E\nNeat.\n\u003C/p\u003E\n"},{"CreatedByName":"Kerbalstar","CreatedById":154159,"CreatedDateTime":"2018-10-21T19:17:46Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/166007-alpha-360/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022166007\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/166007-alpha-360/\u0022 rel=\u0022\u0022\u003E@Alpha 360\u003C/a\u003E, you\u0027re back! Looking forward to some missions!\n\u003C/p\u003E\n"},{"CreatedByName":"Alpha 360","CreatedById":166007,"CreatedDateTime":"2018-10-25T15:04:11Z","Content":"\n\u003Cp\u003E\nThanks for the welcome, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/154159-kerbalstar/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022154159\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/154159-kerbalstar/\u0022 rel=\u0022\u0022\u003E@Kerbalstar\u003C/a\u003E!\n\u003C/p\u003E\n\u003Cp\u003E\n(Quick Note: It is vital to have KOS installed to do the tutorial below. Its on the forums as well as \u003Cabbr title=\u0022Comprehensive Kerbal Archive Network (a KSP mod manager)\u0022\u003ECKAN\u003C/abbr\u003E, if you use it.)\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTo get down to business,\u00A0here are the settings for the career mode I have created.\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022MiEhhEg.png\u0022 src=\u0022https://i.imgur.com/MiEhhEg.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022mME8xDV.png\u0022 src=\u0022https://i.imgur.com/mME8xDV.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022YfwNBbP.png\u0022 src=\u0022https://i.imgur.com/YfwNBbP.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022T9HqNYJ.png\u0022 src=\u0022https://i.imgur.com/T9HqNYJ.png\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo, you all know the drill. I get into the career mode, head to the mission control and take up the two contracts, launch first vessel and collect first science report. I then build the usual flea booster with the mk1 capsule on the top.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022WGLIbI1.jpg\u0022 src=\u0022https://i.imgur.com/WGLIbI1.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThis is where my career mode differs from any other. As I have installed, \u0022KOS for All\u0022, I can use KOS to launch this without the special parts. So then the tutorial really starts as well.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have KOS installed, when you click the icon you are confronted with a menu. By clicking on the name of the processor you want to activate, a programming terminal opens up. As I had no KOS part, when I clicked on the Mk1 Capsule tag I also brought up the programming terminal.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022hXkmIz8.jpg\u0022 src=\u0022https://i.imgur.com/hXkmIz8.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nTo explain what I am doing here, have typed in \u003Ci\u003Eswitch to 0\u003C/i\u003E. This means that the programming terminal effectively resets any potential programs still running. Next, I wrote \u003Ci\u003Erun Mk1.0AutomousDrone\u003C/i\u003E. This is the name of the script I wrote to control the active vessel. As one can see, just by typing these two simple lines of code, I can access a larger script in storage, eliminating cut and paste.\n\u003C/p\u003E\n\u003Cp\u003E\nSo where is the storage for these scripts? Open up the spoiler below to find out.\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nOpen up your KSP Game file. Scroll down to the \u0022Ships\u0022 tab, and open it.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022oIPHaT5.png\u0022 src=\u0022https://i.imgur.com/oIPHaT5.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nFrom there, click the \u0022Script\u0022 tag and ta-da!\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022jNIogbQ.png?1\u0022 src=\u0022https://i.imgur.com/jNIogbQ.png?1\u0022\u003E\u003Cimg alt=\u0022qpBlRY0.png\u0022 src=\u0022https://i.imgur.com/qpBlRY0.png\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nNow that you are at your script tab, what do you do? Find a (preferably) free, downloadable\u00A0code editor like Notepad\u002B\u002B or Brackets or any other program. Once you have downloaded one of these programs, open up a new script.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCheck to see which programming language your new script\u00A0is using in the program. Each client does each one differently, but one should be able to change what programming language is being used in the new script when saved. Before typing any new code, be sure to save the new program as whatever you want, but add\u0022.ks\u0022 to the end of it, and save as \u0022text file\u0022.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nKOS uses a special programming language called kerboscript, signified by the period-ks. When you write \u0022.ks\u0022\u00A0, it makes sure that the KOS mod can interpret the text file into something it can use to manipulate the game. That\u0027s what you want to happen, obviously.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAfter you have saved your new file as \u0022--------.ks\u0022 as a text file, then start at the top and write, or copy, these lines of code.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cem\u003Elock throttle to 0.\u00A0\u003Cbr\u003E\ngear off.\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003Eclearscreen.\u003C/em\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nWhile kerboscript is not case sensitive, it is required that one place periods after each \u0022Statement\u0022.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhat does this short script do? It basically is your basic \u0022Setting\u0022. It locks\u00A0the throttle to 0, and turns off the gear. Simple, right? Kerboscript is very easy to learn, so don\u0027t worry too much. The problem is mastery, something which I haven\u0027t even done yet, and plan to do by starting this tutorial.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOne notices the \u0022clearscreen\u0022 statement at the bottom. It means that it sets the statements above \u0027behind the scenes\u0027 so to speak. They will be overlaid by new statements\u00A0in the rest of the script, but will stay active as long as not counter-commanded.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nNext, copy this next statement.\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cem\u003Eset runmode to 1.\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003Euntil runmode = 0 {\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0if runmode = 1 {\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0lock\u00A0steering to UP.\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0set TVAL to 1.\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0stage.\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0set runmode to 2.\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0}\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0else if runmode = 2 and VELOCITY = -1\u00A0{\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0 \u00A0 \u00A0 \u00A0 chutes.\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0set runmode to 0.\u00A0\u00A0\u00A0\u00A0\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0}\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0set finalTVAL to TVAL.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0lock throttle to finalTVAL.\u003Cbr\u003E\n}\u003C/em\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nNow this looks like real programming, right? That is correct. This is the meat of the program I have written.\u00A0By going through this one step at a time, I believe by four paragraphs, you will know enough kerboscript to start experimenting! Anyway, question one is obviously what is that line of code at the very top? That is a variable. Yes, your Algebra days have come back to haunt you. Variables in coding are not unknown values, rather they are values created by the programmer which doesn\u0027t exist anywhere else. By using the \u0022set\u0022 command, one can create a variable or set a value to a global variable.\n\u003C/p\u003E\n\u003Cp\u003E\nThe next line of code is an \u0022Until\u0022 statement. Its brackets \u0022hold\u0022 everything inside, making sure that everything inside is only run when it is active. Also just another note, there are no periods when there are brackets used by the statement. This statement basically keeps the program running UNTIL a certain variable is met. For example, I have already created the variable \u0022runmode\u0022 and if it is set to 0 the until statement will end. Right now it is undefined, but later I will redefine it.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAfter this is an \u0022if\u0022 statement. These are your best friends, activating when a condition is met. For the first one, it only activates if runmode equals one. This means that it activates, as this condition is true. Next come a few pre-installed variables. I lock the steer to \u0022UP.\u0022 this means that it points up at the sky. I then set the throttle to 1, or max throttle. I stage by simply typing in stage, and then I change the value of runmode, changing it to 2. As this makes the \u0022if\u0022 statement invalid, the current statement deactivates.\n\u003C/p\u003E\n\u003Cp\u003E\nThe next \u0022if\u0022 statement has two conditions, which is perfectly plausible. Also, by inserting the word, \u0022Else\u0022, it means that this if statement will not be able to run at the same time as the previous \u0022if\u0022 statement. By using the two and symbols, one can add as many conditions to a single function. In this case, the \u0022if: statement will only activate if runmode equals 2, and if it is going down. Its as simple as that. When it activates, it arms the chutes and then changes runmode to 0. Since this meets the\u00A0UNTIL function\u0027s criteria, the function shuts down and the program is ended!\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTime for a little housekeeping. The next sentence states, \u0022lock throttle to final TVAL\u0022. This means that the ability to throttle the engines is transferred to this value, which is already bound to \u0022TVAL\u0022. You\u0027ve already seen the key \u0022lock\u0022, and unlike a door, it cannot be locked and unlocked. Basically the \u0022set\u0022 key can be reversible while the \u0022lock\u0022 key cannot.\u00A0This grouping of variables allows me to just use TVAL for any situation, instead of messing around with different variables. The one thing to remember that as a programmer, you are trying to make things\u00A0\u003Cem\u003EEASIER\u003C/em\u003E\u00A0for yourself all the time.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd that is all. Here are some photos of my flight.\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nOn the launch pad, about to activate the code.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00226gESxG2.png\u0022 src=\u0022https://i.imgur.com/6gESxG2.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nA second after hitting enter.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022GbEULfS.png\u0022 src=\u0022https://i.imgur.com/GbEULfS.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n(I forgot to edit the code directly, leading to the second statement being mixed up. Don\u0027t worry though, the version of the code I have posted here works, because I tested it after this launch.)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022Da47qVw.png\u0022 src=\u0022https://i.imgur.com/Da47qVw.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nTouching down after the flight which brought kerbalkind 10,000 meters above sea level.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022QAVu82A.png\u0022 src=\u0022https://i.imgur.com/QAVu82A.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nTech tree after completing the contracts and such.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022pgGISJt.png\u0022 src=\u0022https://i.imgur.com/pgGISJt.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nNow that I have the probe, crews will be nearly worthless except for planes as they will not leave the atmosphere. In the next installment, we will be launching into space itself and hopefully autonomously collecting science reports.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nThe next tutorial should be up in a week, documenting how to get to use multiple stages in a launch sequence. If you want to go to the source of all my information, \u003Ca href=\u0022https://ksp-kos.github.io/KOS/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E is the link. Until then,\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHappy Explosions!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-10-31T03:59:04Z\u0022 title=\u002210/31/2018 03:59  AM\u0022 data-short=\u00225 yr\u0022\u003EOctober 31, 2018\u003C/time\u003E by Alpha 360\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2018-10-25T16:41:23Z","Content":"\n\u003Cp\u003E\nNeat.\u00A0 Happy kOSing.\n\u003C/p\u003E\n\u003Cp\u003E\nJust a heads-up about something that will likely come back to bite you later - this code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nif runmode = 2 and ALT:RADAR = 1000\uFEFF \u003C/pre\u003E\n\u003Cp\u003E\nThere\u0027s almost no chance that check will ever be true.\n\u003C/p\u003E\n\u003Cp\u003E\nBecause, let\u0027s say you\u0027re descending.\u00A0 One moment when you check, your ALT:RADAR might be 1021.3, then the next time you check it\u0027s 1004.12, then you check again and it\u0027s 999.83, then again and it\u0027s 994.1, then again and it\u0027s 990.43, etc...\u00A0 It\u0027s never going to be *exactly* 1000.00000 right at the very instant you happen to be checking it.\u00A0 You might prefer something like a \u0022\u0026lt;\u0022 to an \u0022=\u0022 check here.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Kerbalstar","CreatedById":154159,"CreatedDateTime":"2018-10-25T18:34:16Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/166007-alpha-360/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022166007\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/166007-alpha-360/\u0022 rel=\u0022\u0022\u003E@Alpha 360\u003C/a\u003E, looking good so far! I might try KOS again because of this!\n\u003C/p\u003E\n"},{"CreatedByName":"Alpha 360","CreatedById":166007,"CreatedDateTime":"2018-10-26T05:20:13Z","Content":"\n\u003Cp\u003E\nThank you \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/63481-steven-mading/\u0026amp;do=hovercard\u0022 data-mentionid=\u002263481\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/63481-steven-mading/\u0022 rel=\u0022\u0022\u003E@Steven Mading\u003C/a\u003E, for the tip. I realized just now that there are actually several different ways to do this, but due to an interesting overlay of remote-tech and KOS, I couldn\u0027t do it. Specifically, if remote tech is installed, it is necessary for the active vessel to be connected to it to run different parts of the code. For example, I was going to branch out the \u0022Background Settings\u0022 to include shutting off \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E, but since in the early game I had no connection, remote tech said no. Same with less than and greater than signs. It just wouldn\u0027t work and there would be an error.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nNow that I have unlocked communications antennae, I will be using everything that KOS has to offer. The next tutorial should be much more fleshed out than this one with more fallback and should work 100% of the time. Thanks for the comments, and until the next post,\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHappy Explosions!\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Alpha 360","CreatedById":166007,"CreatedDateTime":"2018-10-30T04:49:39Z","Content":"\n\u003Cp\u003E\nHere\u0027s the next tutorial!\n\u003C/p\u003E\n\u003Cp\u003E\nI will be covering how to fly multiple stages, set fallbacks, and use Remote Tech and its pros and cons.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFirst, below is the rocket I will be using, \u0022Piloted_Drone_2\u0022\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022s0HqiVK.jpg\u0022 src=\u0022https://i.imgur.com/s0HqiVK.jpg\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n(outdated photo. The one on the launch pad simply had one less canard)\n\u003C/p\u003E\n\u003Cp\u003E\nHere it is on the launch pad as well. Jebediah is bravely sitting on the top of this hazardous candle of BOOM, sweating apprehensively. If his code goes wrong, then the rocket might breach the atmosphere, and UNLEASH THE KRAKEN.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022https://i.imgur.com/2FdvcBY.jpg\u0022 alt=\u00222FdvcBY.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n*voice changes abruptly* At least according to the lore\u00A0\u003Cimg alt=\u0022:sticktongue:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 title=\u0022:sticktongue:\u0022\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, to the code!\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E off.\u003Cbr\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E on.\u003Cbr\u003E\nlock throttle to 0.\u003Cbr\u003E\ngear off.\u003Cbr\u003E\nlights on.\n\u003C/p\u003E\n\u003Cp\u003E\nclearscreen.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nYou have already seen a gutted version of this. As I have said before, this is just a background program. These setting will be overrode eventually, but they get your code going in the right direction.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nNext, there\u0027s a few more things.\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nset targetApoapsis to 60000.\n\u003C/p\u003E\n\u003Cp\u003E\nset activeStaging to true.\n\u003C/p\u003E\n\u003Cp\u003E\nset runmode to 2.\u00A0\u003Cbr\u003E\nif ALT:RADAR \u0026lt; 50 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set runmode to 1.\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nYou can guess at what the top is. Its a variable, stating the target Apoapsis, or the highest point of the trajectory. Since kerbals are not allowed to breech the atmosphere in my play-through, I\u0027ll put it the target Apoapsis at 60,000 meters.\n\u003C/p\u003E\n\u003Cp\u003E\nI set another variable here. You needn\u0027t worry about that right now, for I will explain its meaning when the time comes.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAfter this, I have set the runmode outside of this if statement, and you notice I have set it at two. Why? In the if statement, it states that if the ship\u0027s altitude is less than 50 meters above the ground, then it will switch the runmode to 1.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s a nice, large block of copiable text which I will break up into two parts: the runtime, and the housekeeping.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nPART 1\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nuntil runmode = 0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0if runmode = 1 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set heading to UP.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0stage.\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 wait 2.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set runmode to 2.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0else if runmode = 2 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if SHIP:SOLIDFUEL \u0026lt; 1 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set activeStaging to false.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if ALT:RADAR \u0026gt;= 5000 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set heading to PROGRADE.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if\u00A0 \u00A0activeStaging = false\u00A0 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set runmode to 3.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0else if runmode = 3 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0lock heading to RETROGRADE.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0if ALT:RADAR \u0026lt; 10000 and VELOCITY \u0026lt; 300 {\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0set runmode to 0.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nAgain, here is the until statement. Extremely useful to define large lines of code and run them as previously demonstrated.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIn the first IF statement, its much like my previous one, excepting one more line\u00A0of code: \u0022wait\u0022. The \u0022WAIT\u0022 global variable delays the next action by the number of seconds written down. This is extremely useful when transitioning between active stages. Here I use it to make sure my vessel keeps going up, and then sets heading to PROGADE and starts its gravity turn. Later on, I will be creating a code to carry a vessel to orbit in the most efficient manner. But that is for another day.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe second IF statement contains several IF statements within it. At the beginning, I set a variable called, \u0022activeStaging\u0022 and I set it to true. What does that mean? It means that \u0022activeStaging\u0022 is the carrier of a \u0027Boolean\u0027:\u00A0\u0022TRUE\u0022. (Look up \u003Ca href=\u0022https://www.youtube.com/watch?v=9kpzJKczOrw\u0022 rel=\u0022external nofollow\u0022\u003EBooleans\u003C/a\u003E!) Booleans are basically a form of data type which can either be true or false. This can be an easy On/Off switch, which I used here. The first interior IF Statement states that if APOAPSIS\u00A0is greater than the targetApoapsis, then \u0022activeStaging\u0022 is false, or switched off.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe next IF Statement inside the second container (That\u0027s what I\u0027ll start calling statements using brackets as a vague term so that I don\u0027t repeat myself too often \u003Cimg alt=\u0022;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E), has a single requirement, that is activeStaging is off, which changes the runmode to 3 and the program\u00A0switches over to the final \u0022runtime\u0022 container.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThen there\u0027s this short IF statement that\u00A0locks the capsule to face retrograde for reentry and\u00A0then ends the program. This is where you deploy the chutes quick, fast, and in a hurry.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n(Still haven\u0027t figured out how to use chutes in kOS yet\u00A0\u003Cimg alt=\u0022:/\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon1.png\u0022 title=\u0022:/\u0022\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nPART 2\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nIf stage:SOLIDFUEL \u0026lt; 1 and activeStaging = true\u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0stage.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0wait 5.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0stage.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0print \u0022RUNMODE: \u00A0 \u00A0\u0022 \u002B runmode \u002B \u0022 \u00A0 \u00A0 \u00A0\u0022 at (5,4).\u003Cbr\u003E\n\u00A0 \u00A0 print \u0022ALTITUDE: \u00A0 \u0022 \u002B round(SHIP:ALTITUDE) \u002B \u0022 \u00A0 \u00A0 \u00A0\u0022 at (5,5).\u003Cbr\u003E\n\u00A0 \u00A0 print \u0022APOAPSIS: \u00A0 \u0022 \u002B round(SHIP:APOAPSIS) \u002B \u0022 \u00A0 \u00A0 \u00A0\u0022 at (5,6).\u003Cbr\u003E\n\u00A0 \u00A0 print \u0022ETA to AP: \u00A0\u0022 \u002B round(ETA:APOAPSIS) \u002B \u0022 \u00A0 \u00A0 \u00A0\u0022 at (5,8).\u003Cbr\u003E\n}\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nHere is more housekeeping! A little bit more complex, however. This IF statement will be active the entire time, as long as\u00A0activeStaging is true, and will be activated when the stage\u0027s SOLIDFUEL is less than 1, or empty. Because I have so many stages that would need to be timed, I decided to go the repeatable route. Basically, it stages and decouples the empty stage, waits 5 seconds, and then activates the next stage.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFinally, there is a list of commands which print words to the screen. These give the info on which Runmode is currently active, the current Altitude, the Apoapsis, and the time to Apoapsis.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd that is all. Rather more complex than the previous code, but with more reliability, and flexibility. I would suggest altering this code to suit one\u0027s needs, as this code will not allow the breaching of the atmosphere.\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022ZTwHrtX.png\u0022 src=\u0022https://i.imgur.com/ZTwHrtX.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022pd6LQgk.jpg\u0022 src=\u0022https://i.imgur.com/pd6LQgk.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAnd then I hit enter.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022VpDnB3i.jpg\u0022 src=\u0022https://i.imgur.com/VpDnB3i.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022QfiDjQi.jpg\u0022 src=\u0022https://i.imgur.com/QfiDjQi.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThe Staging IF Statements works! Boy I was happy about that.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022v2ECwO5.png\u0022 src=\u0022https://i.imgur.com/v2ECwO5.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAnd we hit the upper atmosphere, and gather all the useful science! I had too take the craft down manually, due to an error in my code. I fixed it up here though, so you shouldn\u0027t have this problem. After landing safely, I did some research.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022TX1an6Q.png\u0022 src=\u0022https://i.imgur.com/TX1an6Q.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI unlocked all the liquid fuel technologies necessary to reach orbit! Our next destination in this Tutorial.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nAbove are the photos of the mission. Next time we will achieve orbit and deorbit, using two separate programs which should be versatile enough to launch anything to orbit and return it (provided it has a heatshield) back to Kerbin. Until then,\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHappy Explosions!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-10-31T03:58:26Z\u0022 title=\u002210/31/2018 03:58  AM\u0022 data-short=\u00225 yr\u0022\u003EOctober 31, 2018\u003C/time\u003E by Alpha 360\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Kerbalstar","CreatedById":154159,"CreatedDateTime":"2018-10-31T02:06:37Z","Content":"\n\u003Cp\u003E\nLooking good and coding fine, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/166007-alpha-360/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022166007\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/166007-alpha-360/\u0022 rel=\u0022\u0022\u003E@Alpha 360\u003C/a\u003E!\n\u003C/p\u003E\n"},{"CreatedByName":"Alpha 360","CreatedById":166007,"CreatedDateTime":"2018-10-31T03:36:18Z","Content":"\n\u003Cp\u003E\nPlease tell me if my code doesn\u0027t work, or if there is a better solution. This request goes out to all viewers of this thread. I would hate it if my code didn\u0027t work, and that some poor kerbal(s) would suffer because of it.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, the next tutorial should be soon(ish). Until then,\n\u003C/p\u003E\n\u003Cp\u003E\nHappy Explosions!\n\u003C/p\u003E\n"},{"CreatedByName":"Chel","CreatedById":176173,"CreatedDateTime":"2018-10-31T03:42:07Z","Content":"\n\u003Cp\u003E\nThis mission report is a bit... unusual, but nevertheless it looks interesting!\n\u003C/p\u003E\n"}]}