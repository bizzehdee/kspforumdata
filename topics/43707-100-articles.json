{"TopicId":43707,"ForumId":34,"TopicTitle":"kOS Scriptable Autopilot System 0.9","CreatedByName":"KevinLaity","CreatedById":68050,"CreatedDateTime":"2013-08-24T14:28:17Z","PageNum":100,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-22T09:00:17Z","Content":"\n\u003Cp\u003E(when talking about adding arrays)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis would be useful of course, but also adds complexity for beginners. It is fundamental to programming, but also initially potentially confusing.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think it\u0027s important to categorize complexities into two very distinct categories:\u003C/p\u003E\u003Cp\u003E1 - Complex things that the mod requires a user to use.\u003C/p\u003E\u003Cp\u003E2 - Complex things that the mod allows a user to use.\u003C/p\u003E\u003Cp\u003EArrays would belong in category 2. That makes it far less confusing than a thing in category 1 would be.\u003C/p\u003E\u003Cp\u003EExamples of things that are in category 1 right now would be Euler rotation tuples. You can\u0027t get anything done without understanding them (and, importantly, finding out the super-secret undocumented fact about the order in which the rotations occur. The same rotation tuple gets different results depending on if you roll, pitch, then yaw, or yaw, roll, then pitch, or pitch, roll, then yaw, etc. And I only found out which way it is because I found a webpage about the Unity engine describing how they do it, and presumed that kOS is using Unity functions so it must be doing it in the same order. That\u0027s an example of a complexity that users MUST learn to make sense of the mod, whereas arrays are a complexity the user only adds when they choose to.\u003C/p\u003E\n"},{"CreatedByName":"togfox","CreatedById":17083,"CreatedDateTime":"2013-12-22T09:02:28Z","Content":"\n\u003Cp\u003ECan\u0027t get this line to work:\u003C/p\u003E\u003Cp\u003EDeclare throtsetting\u003C/p\u003E\u003Cp\u003Eset throtsetting = 0.15\u003C/p\u003E\u003Cp\u003Eif alt:radar \u0026gt; 50 and verticalspeed \u0026gt; -3 { set throtsetting to throtsetting \u002B 0.1 . } . \u0026lt;---- this line throws an error.\u003C/p\u003E\u003Cp\u003Elock throttle to throtsetting.\u003C/p\u003E\u003Cp\u003EI\u0027m trying to regulate throttle as the craft descends for landing. There are loops and other things that adjust throttle but I\u0027ve extracted this line only to keep this simple.\u003C/p\u003E\u003Cp\u003EAny clues? Thx.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-22T09:26:37Z","Content":"\n\u003Cp\u003EI do not think the problem is that line, but the two before. Because you do not have used any terminating periods, kOS sees less lines than you intended. kOS will see only three lines:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EDeclare throtsettingset throtsetting = 0.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E15if alt:radar \u0026gt; 50 and verticalspeed \u0026gt; -3 { set throtsetting to throtsetting \u002B 0.1 . } .\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Elock throttle to throtsetting.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESee the problem? Them periods are important \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E Also, the syntax in the first line is not correct. Try:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset throtsetting to 0.15.\u003Cbr\u003Eif alt:radar \u0026gt; 50 and verticalspeed \u0026gt; -3 {set throtsetting to throtsetting \u002B 0.1.}. \u003Cbr\u003Elock throttle to throtsetting.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI removed the declaration as you set the variable right after (implicitly declaring it). What you did is not wrong (and some will argue it is more correct), but as you waste clockcycles it is a bit of an optimization. As long as you are aware what you are doing and why, either way is fine.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-22T12:39:36Z\u0022 title=\u002212/22/2013 12:39  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 22, 2013\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-22T09:36:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIn other words, kosscript. which looks nothing like c\u002B\u002B or c#. There is exactly 1 thing ONLY it shares with C\u002B\u002B and that\u0027s the curly braces. That\u0027s IT. Nothing else looks anything remotely like C\u002B\u002B. To claim it looks like C\u002B\u002B is to reduce C\u002B\u002B down to one single teeny tiny aspect of the language and ignore everything else about it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think he did not mean to say kOS looks like C\u002B\u002B, but just that \u003Cem\u003Eas long\u003C/em\u003E as it does not look like that, it is fine by him. You noted correctly that there is little to no resemblance, which means that kOS as it stands looks fine to him \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI think it\u0027s important to categorize complexities into two very distinct categories:\u003C/p\u003E\u003Cp\u003E1 - Complex things that the mod requires a user to use.\u003C/p\u003E\u003Cp\u003E2 - Complex things that the mod allows a user to use.\u003C/p\u003E\u003Cp\u003EArrays would belong in category 2. That makes it far less confusing than a thing in category 1 would be.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are correct. However, the ease of getting into something depends on a number of factors. As a beginner - if all the code you see in this topic contains things you can not fathom, it will not only discourage you, but it will also make it harder to learn from those examples.\u003C/p\u003E\u003Cp\u003EI am not trying to say arrays should not be implemented, just that it does have consequences for those that do not use or understand them. I am with you on the Euler rotations - kOS users should not be bothered with those unless they have the desire to.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-22T09:56:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI think he did not mean to say kOS looks like C\u002B\u002B, but just that \u003Cem\u003Eas long\u003C/em\u003E as it does not look like that, it is fine by him. You noted correctly that there is little to no resemblance, which means that kOS as it stands looks fine to him \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EYou are correct. However, the ease of getting into something depends on a number of factors. As a beginner - if all the code you see in this topic contains things you can not fathom, it will not only discourage you, but it will also make it harder to learn from those examples.\u003C/p\u003E\u003Cp\u003EI am not trying to say arrays should not be implemented, just that it does have consequences for those that do not use or understand them. I am with you on the Euler rotations - kOS users should not be bothered with those unless they have the desire to.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs a new user, the main thing I had trouble with is \u0060how do I point the nose of my craft the way I want\u0060. \u002Br(x,y,z) was not helpful and slowed my progress. The \u002Br(x,y,z) bit really should be in the advanced maths section. The \u0060lock steering to heading (ptch,hdng).\u0060 command should be the only one in the beginner users section.\u003C/p\u003E\u003Cp\u003EWhen you can do that then the rest is a lot easier.\u003C/p\u003E\u003Cp\u003EAs for arrays, I agree they should also be in the advanced maths section as they are advanced maths for most people.\u003C/p\u003E\u003Cp\u003EThe way to think is \u0060can I fly to Mun without it\u0060 and use that to decide what is for beginners and what is advanced. Beginners just need to be able to get to Mun and land. Same progression as the main game.\u003C/p\u003E\u003Cp\u003EBeginners just try first to launch, then orbit, then land, then go to the Mun. After that you are past beginner IMO.\u003C/p\u003E\u003Cp\u003EI\u0060m currently trying to do that using as basic code as I can (maths wise at least, for new players to understand it) When I am happy I will release my code with my KerPollo 7.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-22T10:00:48Z\u0022 title=\u002212/22/2013 10:00  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 22, 2013\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"togfox","CreatedById":17083,"CreatedDateTime":"2013-12-22T12:35:06Z","Content":"\n\u003Cp\u003EThanks for the syntax tips. I forget about the periods. Its unnatural to me but I get it. I also have a \u0027=\u0027 in there which it doesn\u0027t like.\u003C/p\u003E\u003Cp\u003EI now have a script that will deorbit a craft, point retro, and control vertical speed all the way down to touch down. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E That is a pretty cool feeling. 8)\u003C/p\u003E\u003Cp\u003ENext stage is to move laterally if there is evidence that the craft is over a steep gradient. Might call on some help with that later on.\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2013-12-22T15:04:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022togfox\u0022 data-cite=\u0022togfox\u0022\u003E\u003Cdiv\u003EAny syntax that doesnt look like c\u002B/c# is fine by me!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECOBOL? BASIC? Assembly? INTERCAL? If those are the other options, C based syntax would be fine.\u003C/p\u003E\u003Cp\u003E(Actually, kOS reminds me of my early days mucking with BASIC. Even if it \u003Cem\u003Estill\u003C/em\u003E doesn\u0027t hava a GOTO statement.)\u003C/p\u003E\n"},{"CreatedByName":"Rosco P. Coltrane","CreatedById":61065,"CreatedDateTime":"2013-12-22T16:00:55Z","Content":"\n\u003Cp\u003EFrom my experience teaching people programming, I found arrays are quite easy for them to understand. First don\u0027t call them \u0022arrays\u0022, call them \u0022lists\u0022. Second avoid having to explain that an array has a predefined size and if you want it to grow, it\u0027s slow because it\u0027s a continuous piece of RAM and you have to move everything and... in other words, avoid explaining how it works under the hood.\u003C/p\u003E\u003Cp\u003EIn this case, kOS could have a \u0022list\u0022: you call Get, you call Add and you call Remove. Efficient, inefficient, don\u0027t care about that now, just use the list. Sorta like in any OOP language where you have a List class that you don\u0027t know how it works, but for beginners it\u0027s just fine.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2013-12-22T16:18:36Z","Content":"\n\u003Cp\u003EIm working on arrays and a bootloader and i have some questions for the group.\u003C/p\u003E\u003Cp\u003EWould a limit to simple values ( string, int ) be ok? or would you want the ability to store more complicated values like vectors and nodes be so much more useful?\u003C/p\u003E\u003Cp\u003EI was thinking about storing a bootloader in the Vessels description from the VAB/SPH. That way each ship can define its own \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ecopy program from 0.\u003Cbr\u003Erun program.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eor whatever else you want to get done. I would also add a launch button when the ship is in PRELAUNCH but otherwise it could run whenever the ship boots up?\u003C/p\u003E\u003Cp\u003EDoes anyone disagree with this plan? It would have a script header like #!/kerboscript that would run everything below that point so people could still use it to describe the vessel on top.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-22T16:21:44Z\u0022 title=\u002212/22/2013 04:21  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 22, 2013\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2013-12-22T17:06:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWould a limit to simple values ( string, int ) be ok? or would you want the ability to store more complicated values like vectors and nodes be so much more useful?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe ability to store an array with any kind of variable that is possible to define in kerboscript. Really need that. \u003C/p\u003E\u003Cp\u003EAnd thanks.\u003C/p\u003E\u003Cp\u003EAbout the bootloader, I will probably never use it, unless there was a way after kOS boots to select one specific program from a list. That would be possible if kerboscript is expanded with the INPUT statement, but as it stands now I can\u0027t see a way out.\u003C/p\u003E\n"},{"CreatedByName":"togfox","CreatedById":17083,"CreatedDateTime":"2013-12-22T23:33:20Z","Content":"\n\u003Cp\u003EDOS veterans call the boot loader the \u0027autoexec\u0027 but i acknowledge that is very platform specific.\u003C/p\u003E\u003Cp\u003EBoot loader is not noob friendly i fear. Maybe a file in archive call \u0027autostart\u0027 is all we need?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-23T02:16:19Z","Content":"\n\u003Cp\u003EChanging the name of the bootloader per vessel is kind of ugly. How about making it based on vessel NAME. If I call my vessel \u0022QWERTY1\u0022 then it will bootload the archive program called \u0022QWERTY1.TXT\u0022.\u003C/p\u003E\u003Cp\u003EI;e;. if vessel name is QWERY1, then it will:\u003C/p\u003E\u003Cp\u003Ecopy QWERTY1 from 0.\u003C/p\u003E\u003Cp\u003Erun QWERTY1.\u003C/p\u003E\u003Cp\u003EAfter it finishes loading the vessel and engaging the physics engine on the lauchpad.\u003C/p\u003E\u003Cp\u003EI would assume that arrays would be dynamically growable in order to make it noob friendly. Also, if they don\u0027t contain all generic kos objects then there\u0027s no point in having them. (and, if you make them contain all generic KOS objects and the array itself is also a generic KOS object then you get multidimensional arrays for free without any additional implementation work - a 2D array is an array whose elements are themselves also arrays. Just make sure that the syntax parsing tolerates this without having to perform additional statements. i.e. something like arr:thingAt(i):thingAt(j) or arr(i)(j) needs to work as opposed to needing to resort to getting it in two statements like set row = arr(i). set thing to row(j).)\u003C/p\u003E\u003Cp\u003EAs for array size, one style that has been done in the past is to tolerate any array index by simply growing the array as needed to fit the subscript used. i.e. if you have an array of size zero, and try to store something in arr[10], then it grows the array to size 10 and then stores the thing there, rather than erroring out. This approach is very noob friendly, but it does open up the possibility of accidentally carving off an enormous amount of memory and thus crashing the system if you say something like set arr[altitude] to 0 when you meant to say set arr[0] to altitude.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-23T02:21:22Z","Content":"\n\u003Cp\u003EOne of the reasons I\u0027d find arrays useful is that they\u0027d give a way to make the various LIST commands usable by scripts. Right now they\u0027re only usable by humans because the data they spew out appears only in screen text and can\u0027t be read by the script. But if arrays existed then you\u0027d also be able to alter the LIST commands to say things like LIST PARTS INTO myArr. (Now myArr is an array containing the strings of the part names.)\u003C/p\u003E\n"},{"CreatedByName":"KvickFlygarn87","CreatedById":76314,"CreatedDateTime":"2013-12-23T08:32:44Z","Content":"\n\u003Cp\u003EIs this mod broken or does it work for .23?\u003C/p\u003E\u003Cp\u003EAlso, where has Kevin Laity gone?\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-23T10:43:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EIm working on arrays and a bootloader and i have some questions for the group.\u003Cp\u003EWould a limit to simple values ( string, int ) be ok? or would you want the ability to store more complicated values like vectors and nodes be so much more useful?\u003C/p\u003E\u003Cp\u003EI was thinking about storing a bootloader in the Vessels description from the VAB/SPH. That way each ship can define its own \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ecopy program from 0.\u003Cbr\u003Erun program.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eor whatever else you want to get done. I would also add a launch button when the ship is in PRELAUNCH but otherwise it could run whenever the ship boots up?\u003C/p\u003E\u003Cp\u003EDoes anyone disagree with this plan? It would have a script header like #!/kerboscript that would run everything below that point so people could still use it to describe the vessel on top.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI find that the command to run the program is not that much different from the command to run the batch that runs the program. I wouldn\u0060t want it to just launch without me telling it to either.\u003C/p\u003E\u003Cp\u003EI have programs in my archive for all my craft that do exactly what you describe. Kerpollo.txt for example loads itself then calls all the programs needed in the right order for a Mun mission with the right parameters for each subroutine and all is good. I am failing to see the benefit from the different workflow.\u003C/p\u003E\u003Cp\u003EI\u0060d like the default volume to be archive(0) though, is there any way of setting that? (that would half the commands needed to launch) then you could just \u0022run program\u0022 for each craft.\u003C/p\u003E\u003Cp\u003EFor arrays, I like the suggestions so far with auto expansion and ability to store all data types.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-23T10:58:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIn other words, kosscript. which looks nothing like c\u002B\u002B or c#. There is exactly 1 thing ONLY it shares with C\u002B\u002B and that\u0027s the curly braces. That\u0027s IT. Nothing else looks anything remotely like C\u002B\u002B. To claim it looks like C\u002B\u002B is to reduce C\u002B\u002B down to one single teeny tiny aspect of the language and ignore everything else about it.\u003Cp\u003EIt\u0027s an impossible dream to a certain extent. unless you sacrifice functionality to get simplicity. Programming languages are complex not because programmers go around trying on purpose to make life harder for themselves, but because there\u0027s a minimum complexity inherent in their flexibility.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMyself I like languages that have easy parts that enable you to do something fun with only a little knowledge but have the depth and advanced features that enable you to do really cool stuff when you have the skill.\u003C/p\u003E\u003Cp\u003EThen you could essentially have a \u0060noob\u0060 command set and an \u0060advanced\u0060 command set over the top which would let the new users do some stuff almost straight away (launch, orbit, land) while giving advanced users the features they crave (multidimensional arrays etc). There might even be a setting to open up the advanced commands which would mean you wouldn\u0060t have to deal with the really complex stuff until you were ready.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-23T11:00:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EI find that the command to run the program is not that much different from the command to run the batch that runs the program. I wouldn\u0060t want it to just launch without me telling it to either.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe launchpad its not the only place a bootloader would run. It would also run whenever an SCS is rebooted. (And if it doesn\u0027t then it\u0027s implemented wrong).\u003C/p\u003E\u003Cp\u003EThat makes it a lot more useful.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-23T11:28:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022KvickFlygarn87\u0022 data-cite=\u0022KvickFlygarn87\u0022\u003E\u003Cdiv\u003EIs this mod broken or does it work for .23?\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESomeone tried making a version for 0.23 that will make it work for KSP 0.23 but it introduced other problems that makes it a pain to use. (I suspect this is because it also contains other github changes people have made that haven\u0027t been regression tested and are not in the main code. At any rate it broke the ability to test against a literal string and that would require a lot of editing of my scripts to get them to work with it, so I decided not to pursue it any further until there\u0027s a more formal project admin back at the helm again to decide what pull requests are in and what ones are out.).\u003C/p\u003E\u003Cp\u003ELuckily I knew that KSP updates tend to break mods, and I knew that we had no mod admin right now, and I knew 0.23 was coming soon, so I copied off my entire 0.22 install of KSP before the update came. If I want to play with kOS I go over into my KSP 0.22 copy to do so.\u003C/p\u003E\u003Cp\u003EBut right now, if you\u0027re somebody who didn\u0027t do that, or you are only just getting into kOS now after the 0.23 update, then you\u0027re sort of out of luck.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAlso, where has Kevin Laity gone?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo idea. Buzz got one limited cryptic message about \u0022dealing with personal stuff\u0022 but nothing about whether or not he\u0027d like someone else to take over managing the project or if he\u0027s planning to come back to it soon.\u003C/p\u003E\u003Cp\u003EThe fact that the version on spaceport doesn\u0027t work for 0.23 is sort of forcing the issue. We\u0027ll need to pick a new admin and set up a new fork of the project, I fear, since nobody can get a hold of Kevin Laity to ask his opinion on what to do with his project.\u003C/p\u003E\u003Cp\u003EI\u0027d volunteer except for the fact that all my programming experience has been in UNIX, where hardly anybody uses C# or Mono, so I have zero experience with them. The admin should be someone well versed in the core system being used, and that someone isn\u0027t me. I barely consider myself qualified to contribute a one or two line change here or there.\u003C/p\u003E\u003Cp\u003EIt\u0027s licensed using GPL, which being one of the open source licenses means that starting a new branch of the code should be no problem, legally.\u003C/p\u003E\u003Cp\u003EBut out of respect for Kevin, I think we should be clear in the naming of the branched project that it\u0027s something distinct from Kevin\u0027s. I.e. calling it \u0022KOS 2.0\u0022 would be a bit rude to Kevin. Perhaps a name like \u0022CommunityKos\u0022 or another punning of old-school computer products akin to KOS could be used, like \u0022DR-kOS\u0022 (Derived Respectfully kOS).\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-23T11:59:34Z","Content":"\n\u003Cp\u003EThe other reason for me suggesting a name change like DR-kOS is so that releases can end up on Spaceport. As it is, I don\u0027t think anyone other than Kevin can change what\u0027s on the Spaceport page for kOS, but if this was a second project with a new name, it could have its own new Spaceport page.\u003C/p\u003E\n"},{"CreatedByName":"Sacred Aardvark","CreatedById":85856,"CreatedDateTime":"2013-12-23T13:14:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EBut out of respect for Kevin, I think we should be clear in the naming of the branched project that it\u0027s something distinct from Kevin\u0027s. I.e. calling it \u0022KOS 2.0\u0022 would be a bit rude to Kevin. Perhaps a name like \u0022CommunityKos\u0022 or another punning of old-school computer products akin to KOS could be used, like \u0022DR-kOS\u0022 (Derived Respectfully kOS).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESeconded on the distinct name, though not sure about keeping the kOS bit in. It\u0027d be a nice nod to Kevin, but on the other hand if Kevin comes back and decides to pick up where he left off, it could create slight confusion to have DR/MS/PC/WE-kOS* and kOS. Maybe k64? kerbbodore? Since kOS uses that c64 lookalike thing for visuals. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E*(Must Save / Preserved by Community / WhatEver)\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-23T16:27:53Z","Content":"\n\u003Cp\u003ESo it seems KOS is only up to 0.22 then. I wish you luck in your fork.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-23T16:57:45Z\u0022 title=\u002212/23/2013 04:57  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 23, 2013\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-23T16:39:22Z","Content":"\n\u003Cp\u003EI suspect it will work if you make a string variable first:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset str to \u0022Mun\u0022.\u003Cbr\u003Eif encounter = str {print \u0022Mun encounter\u0022.}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s only comparing to a literal string that broke.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-23T17:31:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI suspect it will work if you make a string variable first:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset str to \u0022Mun\u0022.\u003Cbr\u003Eif encounter = str {print \u0022Mun encounter\u0022.}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s only comparing to a literal string that broke.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAah. cool. So\u003C/p\u003E\u003Cp\u003Eset text to \u0022Mun\u0022.\u003C/p\u003E\u003Cp\u003Eif encounter=text {print \u0022Mun encounter\u0022.}.\u003C/p\u003E\u003Cp\u003Ewould work then. I\u0060m ok with that as a change. (made them already and all is good, tank you very much) Are there any other 0.23 issues anybody knows about as far as KOS goes?\u003C/p\u003E\u003Cp\u003EP.S. My vote for the new name is KHAOS\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-23T20:59:13Z\u0022 title=\u002212/23/2013 08:59  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 23, 2013\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-23T18:38:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EChanging the name of the bootloader per vessel is kind of ugly. How about making it based on vessel NAME. If I call my vessel \u0022QWERTY1\u0022 then it will bootload the archive program called \u0022QWERTY1.TXT\u0022.\u003Cp\u003EI;e;. if vessel name is QWERY1, then it will:\u003C/p\u003E\u003Cp\u003Ecopy QWERTY1 from 0.\u003C/p\u003E\u003Cp\u003Erun QWERTY1.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPlease no, that would force you to keep a whole list of archived boot files, one for every craft. I liked your earlier idea much better, where any local file called \u003Cem\u003Eboot\u003C/em\u003E would be executed upon booting. \u003C/p\u003E\u003Cp\u003EIf you wanted to prevent having to copy that bootfile on the launchpad, you could make it a rule that when no bootfile is present, the default boot from archive is copied and used. That way the user could set an empty boot file when there is no need for one, or have a specific custom boot file in the archive. I am not sure it is a whole lot of work to just manually copy the bootfile though.\u003C/p\u003E\u003Cp\u003EAlso, I would very much like craft to run a script from where it left off when unloaded, but I can imagine this takes some doing. It would reduce the amount of boots in a massive way and makes missions where kOS is used flow much more naturally. Things like station keeping all of a sudden become a lot more viable.\u003C/p\u003E\n"},{"CreatedByName":"sirkut","CreatedById":57229,"CreatedDateTime":"2013-12-23T18:38:47Z","Content":"\n\u003Cp\u003EBeing that I forked Damned Robotics into Infernal Robotics I wish you the best luck. It\u0027s tough.\u003C/p\u003E\n"}]}