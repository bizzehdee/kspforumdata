{"TopicId":114753,"ForumId":36,"TopicTitle":"Using the YongeTech tech tree plug-in","CreatedByName":"Wolf Baginski","CreatedById":138549,"CreatedDateTime":"2015-07-01T12:09:48Z","PageNum":1,"Articles":[{"CreatedByName":"Wolf Baginski","CreatedById":138549,"CreatedDateTime":"2015-07-01T12:09:48Z","Content":"\n\u003Cp\u003EOne of the recent add-ons is the YongeTech tech-tree plug-in. This does two things. It allows a KSP install to run multiple different tech trees, selected when the new Squad is created. To do this, it specifies the link between a Part and a Tech Tree node in the TechTree.cfg rather than in the Part.cfg.\u003C/p\u003E\u003Cp\u003EAnd you can still run a game with the Stock Tech Tree.\u003C/p\u003E\u003Cp\u003EThe release thread is here \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/125338-1-0-3-YongeTech-Tech-Trees-Plugin-%28v1-2-1%29?highlight=Yongetech\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/125338-1-0-3-YongeTech-Tech-Trees-Plugin-%28v1-2-1%29?highlight=Yongetech\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EWhile there is a demo tech tree, just having one is a bit pointless, and a day or two ago I started looking at things to see if a YT version was possible. That needed a bit of work to actually get a list of what stock parts were linked to which stock node.\u003C/p\u003E\u003Cp\u003EI decided to make a YT version of the stock Tech Tree, which is maybe a little pointless, but provides a base for other Tech Trees. It actually lists the relationship between stock parts and tech nodes.\u003C/p\u003E\u003Cp\u003EI then turned this into a YT version of the CTT.\u003C/p\u003E\u003Cp\u003EThese seem to work, and I figure they would be useful for Mod creators. At this stage, it needs other eyes than mine to check things. Are any parts missing? Are all the nodes in the right place? That sort of question. Also, importantly, how is a new part, node not specified in the Tech Tree, located?\u003C/p\u003E\u003Cp\u003EIncidentally, there are a few extra bits in the Stock Tech Tree entries which don\u0027t seem to be used.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    RDNode\u003Cbr\u003E    {\u003Cbr\u003E        id = start\u003Cbr\u003E        title = Start\u003Cbr\u003E        description = The technology we started out with.\u003Cbr\u003E        cost = 0\u003Cbr\u003E        hideEmpty = False\u003Cbr\u003E        nodeName = node0_start               //What does this do?\u003Cbr\u003E        anyToUnlock = False\u003Cbr\u003E        icon = RDicon_start\u003Cbr\u003E        pos = -2568,1199,-1                     // A few nodes have numbers after the decimal point which seems over-precise\u003Cbr\u003E        scale = 0.6\u003Cbr\u003E        Unlocks                   // This is the YongeTech method of linking parts \u0026amp; nodes\u003Cbr\u003E        {\u003Cbr\u003E                        part = basicFin\u003Cbr\u003E                        part = mk1pod\u003Cbr\u003E                        part = solidBooster_sm\u003Cbr\u003E                        part = GooExperiment\u003Cbr\u003E                        part = trussPiece1x\u003Cbr\u003E                        part = parachuteSingle\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI still want to make one or two tests before I make the trees available. Does anyone have a suggestion for how to label them in a way that Module Manager can recognise and act on? I don\u0027t want to mess up how a parts mod might set tech node links.\u003C/p\u003E\n"},{"CreatedByName":"Wolf Baginski","CreatedById":138549,"CreatedDateTime":"2015-07-04T10:10:32Z","Content":"\n\u003Cp\u003EI\u0027ve hit a brick wall. But there looks to be a new version of the plug-in.\u003C/p\u003E\u003Cp\u003EIt seems to be the interactions with Module Manager.\u003C/p\u003E\u003Cp\u003EThe savefile ends up pointing to ModuleManager.TechTree which is essentially the Stock tree\u003C/p\u003E\u003Cp\u003EI am wondering how Module Manager does the test NEEDS[CommunityTechTree]\u003C/p\u003E\u003Cp\u003EThis is frustrating.\u003C/p\u003E\n"},{"CreatedByName":"Shad0wCatcher","CreatedById":98819,"CreatedDateTime":"2015-07-04T10:33:45Z","Content":"\n\u003Cp\u003EWith regards to :NEEDS lines; modulemanager runs a test to see if there\u0027s a folder named CommunityTechTree in the GameData folder; if it exists, then the condition passes and modulemanager runs whatever code comes after it; otherwise it fails and ignores whatever comes after it.\u003C/p\u003E\n"}]}