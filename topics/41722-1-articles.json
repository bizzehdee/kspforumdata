{"TopicId":41722,"ForumId":29,"TopicTitle":"[Question] How to get Vessel ElectricCharge Total?","CreatedByName":"ChaseHQ","CreatedById":77156,"CreatedDateTime":"2013-08-09T03:22:22Z","PageNum":1,"Articles":[{"CreatedByName":"ChaseHQ","CreatedById":77156,"CreatedDateTime":"2013-08-09T03:22:22Z","Content":"\n\u003Cp\u003EHow do I go about retrieving the ElectricCharge Total for the current Vessel? \u003C/p\u003E\u003Cp\u003EI\u0027ve kinda taken it from the ResourceDisplay by the following Method.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evar ElecQuery = from item in ResourceDisplay.Instance.resourceItems where item.nameText.text == \u0022ElectricCharge\u0022 select item;\u003Cbr\u003E                _ElectricResource = ElecQuery.First();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWithin the ResourceItem is the vesselResourceCurrent and vesselResourceTotal, but I can not grab it until the resource display has been shown. There has got to be a better way to get the information about Resources.\u003C/p\u003E\u003Cp\u003EThanks in advance!\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2013-08-09T12:25:49Z","Content":"\n\u003Cp\u003EThe plugins i have seen doing sth like that are simply looping though all parts and sum them up. Duno if there is any better solution.\u003C/p\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2013-08-09T15:44:55Z","Content":"\n\u003Cp\u003EThis is how I do it. Like Faark said, just iterating through all the parts and looking at the electrical charge in it.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Edouble electricCharge = 0;\u003Cbr\u003Edouble electricMax = 0;\u003Cbr\u003EVessel active = FlightGlobals.ActiveVessel;\u003Cbr\u003Eforeach (Part p in active.parts)\u003Cbr\u003E{\u003Cbr\u003E     if (p.Resources.Contains(\u0022ElectricCharge\u0022))\u003Cbr\u003E     {\u003Cbr\u003E          foreach (PartResource pr in p.Resources)\u003Cbr\u003E          {\u003Cbr\u003E               if (pr.resourceName.Equals(\u0022ElectricCharge\u0022))\u003Cbr\u003E               {\u003Cbr\u003E                    electricCharge \u002B= pr.amount;\u003Cbr\u003E                    electricMax \u002B= pr.maxAmount;\u003Cbr\u003E                    break;\u003Cbr\u003E              }\u003Cbr\u003E         }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2013-08-09T18:10:43Z","Content":"\n\u003Cp\u003EEfficiency bit: ditch the if...Contains. You\u0027re doing the same loop twice there.\u003C/p\u003E\n"},{"CreatedByName":"ChaseHQ","CreatedById":77156,"CreatedDateTime":"2013-08-09T22:26:51Z","Content":"\n\u003Cp\u003EYup, ended up doing it this way, just feel so inefficient rolling a loop every update. And numerobis you need the if as a part can contain multiple resources, this singles out just electriccharge.\u003C/p\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2013-08-10T00:10:25Z","Content":"\n\u003Cp\u003EGood point numerobis.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-08-10T00:30:43Z","Content":"\n\u003Cp\u003EKethaneGenerator does this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evar resources = Misc.GetConnectedResources(part, \u0022ElectricCharge\u0022);\u003Cbr\u003Evar ratio = resources.Sum(r =\u0026gt; r.amount) / resources.Sum(r =\u0026gt; r.maxAmount);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMisc.GetConnectedResources is just a convenience wrapper for Part.GetConnectedResources(). This works for other resources, too, and will only look at resources that can be accessed through a RequestResource call.\u003C/p\u003E\n"}]}