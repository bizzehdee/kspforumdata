{"TopicId":34021,"ForumId":36,"TopicTitle":"How to make generators stop working when you run out of a resource?","CreatedByName":"Gojira","CreatedById":10884,"CreatedDateTime":"2013-06-20T22:25:08Z","PageNum":1,"Articles":[{"CreatedByName":"Gojira","CreatedById":10884,"CreatedDateTime":"2013-06-20T22:25:08Z","Content":"\n\u003Cp\u003EThe question is above, but is elaborated a tiny bit below.\u003C/p\u003E\u003Cp\u003EHow do I make generators stop working (e.g. the stock RTG) when they run out of a certain resource (e.g. RefinedBlutonium)? What would the .cfg look like?\u003C/p\u003E\u003Cp\u003EThanks,\u003C/p\u003E\u003Cp\u003EGojira\u003C/p\u003E\n"},{"CreatedByName":"Mach56","CreatedById":57826,"CreatedDateTime":"2013-06-21T09:59:08Z","Content":"\n\u003Cp\u003EI think they would just stop working when they run out of said resource.\u003C/p\u003E\n"},{"CreatedByName":"Gojira","CreatedById":10884,"CreatedDateTime":"2013-06-21T18:11:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mach56\u0022 data-cite=\u0022Mach56\u0022\u003E\u003Cdiv\u003EI think they would just stop working when they run out of said resource.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBut how would I do that?\u003C/p\u003E\n"},{"CreatedByName":"King Jareth","CreatedById":63223,"CreatedDateTime":"2013-06-21T18:45:46Z","Content":"\n\u003Cp\u003EI think (not tried it) it would be something like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleGenerator\u003Cbr\u003E\tisAlwaysActive = true\u003Cbr\u003E\u003Cbr\u003E        INPUT_RESOURCE\u003Cbr\u003E        {\u003Cbr\u003E\t   name = RefinedBluetonium\u003Cbr\u003E\t   rate = 0.1\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tOUTPUT_RESOURCE\u003Cbr\u003E\t{\u003Cbr\u003E\t   name = ElectricCharge\u003Cbr\u003E\t   rate = 1\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAs long as you have defined Refinedbluetonium with a RESOURCE_DEFINITION in a cfg file and the generator has access to some of it.\u003C/p\u003E\n"},{"CreatedByName":"loppnessmonsta","CreatedById":58525,"CreatedDateTime":"2013-06-21T20:31:11Z","Content":"\n\u003Cp\u003Ethe problem i think gojira is getting at, though, is that with that configuration, if you have two inputs (Like LFO), when one empties, your generator will stop providing output.... but continue draining the other input.\u003C/p\u003E\n"},{"CreatedByName":"King Jareth","CreatedById":63223,"CreatedDateTime":"2013-06-21T23:34:06Z","Content":"\n\u003Cp\u003EOh okay, then add the line\u003C/p\u003E\u003Cp\u003ErequiresAllInputs = true\u003C/p\u003E\u003Cp\u003Ein there as well.\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-08-05T23:45:55Z","Content":"\n\u003Cp\u003EIs the requiresAllInputs suggestion correct/still true?\u003C/p\u003E\u003Cp\u003EThe behavior I\u0027m seeing is that active ModuleGenerators will always consume available inputs. Setting requiresAllInputs to true just stops any output being produced if an input is missing (otherwise the output rate will be reduced to e.g. 50% if only one of two inputs are available).\u003C/p\u003E\u003Cp\u003EPost #4 probably got the original question, so apologies for the necro. I\u0027m hitting #5 with a greenhouse that should *stop* consuming CO2 during the night so that it can be converted during daylight.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-08-06T05:32:23Z","Content":"\n\u003Cp\u003EModuleGenerator is fairly underwhelming at this point, I don\u0027t believe requiresAllInputs would ever have made it stop, it would make it so if any input is missing the output would cease. There is no stock partmodule that will do this, but a plugin to make a better system shouldn\u0027t be difficult\u003C/p\u003E\n"},{"CreatedByName":"Ignamious","CreatedById":60779,"CreatedDateTime":"2013-08-06T15:37:09Z","Content":"\n\u003Cp\u003EIf you get right down to it an RTG Wont just stop working for a very very long time. It\u0027s output would just get weaker. It is a radioactive source so it would be based off its half life. So rather then just cutting it to zero, it would be an exponenetial drop off. Just can\u0027t remember the formula right now. \u003C/p\u003E\u003Cp\u003EIf you are going to mod the RTG so it\u0027s not unlimited you should model it off that. Rather then just cutting power. So if the half life is 30 years. After 30 years the power output would be (theoretically) half of what it was\u003C/p\u003E\n"},{"CreatedByName":"CaptRobau","CreatedById":41695,"CreatedDateTime":"2013-08-06T16:07:27Z","Content":"\n\u003Cp\u003EI think that\u0027s what the efficiency thing will do. It\u0027s always 100% now, but in a future update they\u0027ll probably make it degrade with time.\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-08-06T22:48:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003EModuleGenerator is fairly underwhelming at this point, I don\u0027t believe requiresAllInputs would ever have made it stop, it would make it so if any input is missing the output would cease. There is no stock partmodule that will do this, but a plugin to make a better system shouldn\u0027t be difficult\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFound a few possibilities for implementing that. If I find a clean one (or convince myself there isn\u0027t one), I\u0027ll toss code up in a new thread for everyone to share (and/or pick over for bugs \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-08-09T03:25:15Z","Content":"\n\u003Cp\u003ETo close this out before it gets any more stale:\u003C/p\u003E\u003Cp\u003EThe cleanest way to handle reactions with multiple inputs is to check the quantity of everything before you RequestResource. The sanest way to check available resources and storage seems to be with:\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EList\u0026lt;PartResources\u0026gt; resources = new List\u0026lt;PartResources\u0026gt;();\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Epart.GetConnectedResources( PartResourceLibrary.Instance.resourceDefinitions[\u0022ResourceName\u0022], resources);\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EFor a good example of how this works, grab the Kethane source and look at KethaneGenerator.OnFixedUpdate.\u003C/p\u003E\n"}]}