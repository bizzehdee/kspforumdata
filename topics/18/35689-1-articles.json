{"TopicId":35689,"ForumId":18,"TopicTitle":"KSP on VM","CreatedByName":"Temeriki","CreatedById":3039,"CreatedDateTime":"2013-07-02T23:42:34Z","PageNum":1,"Articles":[{"CreatedByName":"Temeriki","CreatedById":3039,"CreatedDateTime":"2013-07-02T23:42:34Z","Content":"\n\u003Cp\u003ESo I had a thought, Im not an expert on CPU virtualization, I understand the concept and can set up and use them, but I have no clue how the emulation magic works. My question is could you use 4 cores to power one virtual core. I figure you wouldnt be able to exceed the clock speed of the virtual processor faster than the onboard CPU, you would need some sort of emulation sorcery and use something to convert 32 bit virtual operations into 64bit physical operations then back into 32 bit answers (if that did work, in theory you could almost quadruple your base clock speed with 4 cores). But I dont understand how emulation sorcery works maybe someone else could throw their brain at it?\u003C/p\u003E\n"},{"CreatedByName":"CleverClothe","CreatedById":60997,"CreatedDateTime":"2013-07-03T05:32:49Z","Content":"\n\u003Cp\u003EUnfortunately that is now how virtualization works. You can\u0027t make a CPU any better than what it is.\u003C/p\u003E\n"},{"CreatedByName":"Temeriki","CreatedById":3039,"CreatedDateTime":"2013-07-03T06:52:57Z","Content":"\n\u003Cp\u003EIt wasnt to make it better, it was to artificially increase the clock speed using 4 cores to visualize a single core, since KSP can only utilize one core I was thinking of ways around that.\u003C/p\u003E\n"},{"CreatedByName":"Awaras","CreatedById":15671,"CreatedDateTime":"2013-07-03T07:10:14Z","Content":"\n\u003Cp\u003EAMD was working on something like this. There was a lot of talk about their K8 chips back around 2006. The buzzword for it was \u0027Anti-Hyperthreading\u0027 where two or more cores would act as a single faster core.\u003C/p\u003E\u003Cp\u003EAs far as I know, nothin much came of it. Not sure if it was scrapped or simply did not provide a significant boost in performance...\u003C/p\u003E\u003Cp\u003E*edit* Never mind, after doing some research, I now see that it was an unsubstantiated rumour...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-03T10:56:42Z\u0022 title=\u002207/03/2013 10:56  AM\u0022 data-short=\u002211 yr\u0022\u003EJuly 3, 2013\u003C/time\u003E by Awaras\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sturmstiger","CreatedById":60543,"CreatedDateTime":"2013-07-03T09:20:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Temeriki\u0022 data-cite=\u0022Temeriki\u0022\u003E\u003Cdiv\u003ESo I had a thought, Im not an expert on CPU virtualization, I understand the concept and can set up and use them, but I have no clue how the emulation magic works. My question is could you use 4 cores to power one virtual core. I figure you wouldnt be able to exceed the clock speed of the virtual processor faster than the onboard CPU, you would need some sort of emulation sorcery and use something to convert 32 bit virtual operations into 64bit physical operations then back into 32 bit answers (if that did work, in theory you could almost quadruple your base clock speed with 4 cores). But I dont understand how emulation sorcery works maybe someone else could throw their brain at it?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot you can\u0027t. No existing virtual machine hypervisor can do this, and don\u0027t expect it to come anytime soon. What you are talking about is called \u0022automatic parallelization\u0022, which is a very hard problem in computer science.\u003C/p\u003E\n"},{"CreatedByName":"Temeriki","CreatedById":3039,"CreatedDateTime":"2013-07-04T17:00:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sturmstiger\u0022 data-cite=\u0022sturmstiger\u0022\u003E\u003Cdiv\u003ENot you can\u0027t. No existing virtual machine hypervisor can do this, and don\u0027t expect it to come anytime soon. What you are talking about is called \u0022automatic parallelization\u0022, which is a very hard problem in computer science.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you very much, thats what I though. I do computer repair for fun, so I spent years trying to ignore the theories and science.\u003C/p\u003E\n"}]}