{"TopicId":31822,"ForumId":18,"TopicTitle":"Akin\u0026#039;s laws of spacecraft design","CreatedByName":"KSP orbiter","CreatedById":3241,"CreatedDateTime":"2013-06-07T07:51:59Z","PageNum":1,"Articles":[{"CreatedByName":"KSP orbiter","CreatedById":3241,"CreatedDateTime":"2013-06-07T07:51:59Z","Content":"\n\u003Cp\u003EI\u0027m just going to leave these real-world rules here...\u003C/p\u003E\u003Cp\u003E1. Engineering is done with numbers. Analysis without numbers is only an opinion.\u003C/p\u003E\u003Cp\u003E2. To design a spacecraft right takes an infinite amount of effort. This is why it\u0027s a good idea to design them to operate when some things are wrong .\u003C/p\u003E\u003Cp\u003E3. Design is an iterative process. The necessary number of iterations is one more than the number you have currently done. This is true at any point in time.\u003C/p\u003E\u003Cp\u003E4. Your best design efforts will inevitably wind up being useless in the final design. Learn to live with the disappointment.\u003C/p\u003E\u003Cp\u003E5. (Miller\u0027s Law) Three points determine a curve.\u003C/p\u003E\u003Cp\u003E6. (Mar\u0027s Law) Everything is linear if plotted log-log with a fat magic marker.\u003C/p\u003E\u003Cp\u003E7. At the start of any design effort, the person who most wants to be team leader is least likely to be capable of it.\u003C/p\u003E\u003Cp\u003E8. In nature, the optimum is almost always in the middle somewhere. Distrust assertions that the optimum is at an extreme point.\u003C/p\u003E\u003Cp\u003E9. Not having all the information you need is never a satisfactory excuse for not starting the analysis.\u003C/p\u003E\u003Cp\u003E10. When in doubt, estimate. In an emergency, guess. But be sure to go back and clean up the mess when the real numbers come along.\u003C/p\u003E\u003Cp\u003E11. Sometimes, the fastest way to get to the end is to throw everything out and start over.\u003C/p\u003E\u003Cp\u003E12. There is never a single right solution. There are always multiple wrong ones, though.\u003C/p\u003E\u003Cp\u003E13. Design is based on requirements. There\u0027s no justification for designing something one bit \u0022better\u0022 than the requirements dictate.\u003C/p\u003E\u003Cp\u003E14. (Edison\u0027s Law) \u0022Better\u0022 is the enemy of \u0022good\u0022.\u003C/p\u003E\u003Cp\u003E15. (Shea\u0027s Law) The ability to improve a design occurs primarily at the interfaces. This is also the prime location for screwing it up.\u003C/p\u003E\u003Cp\u003E16. The previous people who did a similar analysis did not have a direct pipeline to the wisdom of the ages. There is therefore no reason to believe their analysis over yours. There is especially no reason to present their analysis as yours.\u003C/p\u003E\u003Cp\u003E17. The fact that an analysis appears in print has no relationship to the likelihood of its being correct.\u003C/p\u003E\u003Cp\u003E18. Past experience is excellent for providing a reality check. Too much reality can doom an otherwise worthwhile design, though.\u003C/p\u003E\u003Cp\u003E19. The odds are greatly against you being immensely smarter than everyone else in the field. If your analysis says your terminal velocity is twice the speed of light, you may have invented warp drive, but the chances are a lot better that you\u0027ve screwed up.\u003C/p\u003E\u003Cp\u003E20. A bad design with a good presentation is doomed eventually. A good design with a bad presentation is doomed immediately.\u003C/p\u003E\u003Cp\u003E21. (Larrabee\u0027s Law) Half of everything you hear in a classroom is crap. Education is figuring out which half is which.\u003C/p\u003E\u003Cp\u003E22. When in doubt, document. (Documentation requirements will reach a maximum shortly after the termination of a program.)\u003C/p\u003E\u003Cp\u003E23. The schedule you develop will seem like a complete work of fiction up until the time your customer fires you for not meeting it.\u003C/p\u003E\u003Cp\u003E24. It\u0027s called a \u0022Work Breakdown Structure\u0022 because the Work remaining will grow until you have a Breakdown, unless you enforce some Structure on it.\u003C/p\u003E\u003Cp\u003E25. (Bowden\u0027s Law) Following a testing failure, it\u0027s always possible to refine the analysis to show that you really had negative margins all along.\u003C/p\u003E\u003Cp\u003E26. (Montemerlo\u0027s Law) Don\u0027t do nuthin\u0027 dumb.\u003C/p\u003E\u003Cp\u003E27. (Varsi\u0027s Law) Schedules only move in one direction.\u003C/p\u003E\u003Cp\u003E28. (Ranger\u0027s Law) There ain\u0027t no such thing as a free launch.\u003C/p\u003E\u003Cp\u003E29. (von Tiesenhausen\u0027s Law of Program Management) To get an accurate estimate of final program requirements, multiply the initial time estimates by pi, and slide the decimal point on the cost estimates one place to the right.\u003C/p\u003E\u003Cp\u003E30. (von Tiesenhausen\u0027s Law of Engineering Design) If you want to have a maximum effect on the design of a new engineering system, learn to draw. Engineers always wind up designing the vehicle to look like the initial artist\u0027s concept.\u003C/p\u003E\u003Cp\u003E31. (Mo\u0027s Law of Evolutionary Development) You can\u0027t get to the moon by climbing successively taller trees.\u003C/p\u003E\u003Cp\u003E32. (Atkin\u0027s Law of Demonstrations) When the hardware is working perfectly, the really important visitors don\u0027t show up.\u003C/p\u003E\u003Cp\u003E33. (Patton\u0027s Law of Program Planning) A good plan violently executed now is better than a perfect plan next week.\u003C/p\u003E\u003Cp\u003E34. (Roosevelt\u0027s Law of Task Planning) Do what you can, where you are, with what you have.\u003C/p\u003E\u003Cp\u003E35. (de Saint-Exupery\u0027s Law of Design) A designer knows that he has achieved perfection not when there is nothing left to add, but when there is nothing left to take away.\u003C/p\u003E\u003Cp\u003E36. Any run-of-the-mill engineer can design something which is elegant. A good engineer designs systems to be efficient. A great engineer designs them to be effective.\u003C/p\u003E\u003Cp\u003E37. (Henshaw\u0027s Law) One key to success in a mission is establishing clear lines of blame.\u003C/p\u003E\u003Cp\u003E38. Capabilities drive requirements, regardless of what the systems engineering textbooks say.\u003C/p\u003E\u003Cp\u003E39. The three keys to keeping a new manned space program affordable and on schedule:\u003C/p\u003E\u003Cp\u003E 1) No new launch vehicles.\u003C/p\u003E\u003Cp\u003E 2) No new launch vehicles.\u003C/p\u003E\u003Cp\u003E 3) Whatever you do, don\u0027t decide to develop any new launch vehicles.\u003C/p\u003E\u003Cp\u003E40. Space is a completely unforgiving environment. If you screw up the engineering, somebody dies (and there\u0027s no partial credit because most of the analysis was right...)\u003C/p\u003E\u003Cp\u003ETaken from \u003Ca href=\u0022http://spacecraft.ssl.umd.edu/akins_laws.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://spacecraft.ssl.umd.edu/akins_laws.html\u003C/a\u003E\u003C/p\u003E\n"}]}