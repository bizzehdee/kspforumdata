{"TopicId":2002,"ForumId":18,"TopicTitle":"Son, it ain\u0026#039;t rocket science!","CreatedByName":"Wayward son","CreatedById":5166,"CreatedDateTime":"2011-08-28T06:10:32Z","PageNum":1,"Articles":[{"CreatedByName":"Wayward son","CreatedById":5166,"CreatedDateTime":"2011-08-28T06:10:32Z","Content":"\n\u003Cp\u003EWell Dad, evidently it is!\u003C/p\u003E\u003Cp\u003EThe ability of programers and gamers has pretty much surpassed the abilities (and computer memory) of my early days.\u003C/p\u003E\u003Cp\u003EHeck, they took a man to the moon and brought him back with less computing power than what is found in a cheap digital watch.\u003C/p\u003E\u003Cp\u003ESlide rulers and long form have given way to CAD designs and Gigs of data.\u003C/p\u003E\u003Cp\u003EThis game uses more memory than all Apollo flights together, man I feel old.\u003C/p\u003E\u003Cp\u003ETime for a Martini and the hot tub...\u003C/p\u003E\n"},{"CreatedByName":"Rocket Surgeon","CreatedById":3719,"CreatedDateTime":"2011-08-28T06:12:18Z","Content":"\n\u003Cp\u003EI feel like I should make a post here for some reason...\u003C/p\u003E\n"},{"CreatedByName":"HarvesteR","CreatedById":4,"CreatedDateTime":"2011-09-01T23:00:50Z","Content":"\n\u003Cp\u003EI think the ability of programmers in general has actually decayed... I mean, now we have much more advanced tools that allow us to think on a higher level, and produce more interesting things, but 30 years ago, programmers had to really use their brains to produce just about anything.\u003C/p\u003E\u003Cp\u003EIt\u0027s sad, but I think languages like ActionScript, Python and Javascript are producing a generation of programmers who don\u0027t really understand how software works.\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"softweir","CreatedById":2795,"CreatedDateTime":"2011-09-02T00:29:45Z","Content":"\n\u003Cp\u003EI agree that \u003Cem\u003Eon average\u003C/em\u003E, programmers are less capable than they used to be. The new development tools have made things so easy for them that people whe once would never have had a chance to produce large projects can now do so and make a living at it.\u003C/p\u003E\u003Cp\u003EBUT: I suspect that there are just as many genius programmers as ever - people with real talent and the determination to use it. They tend to be the people who are creating the new tools that everybody else uses. Unfortunately, their visible impact is diluted by the herd of less capable coders.\u003C/p\u003E\n"},{"CreatedByName":"Asgar","CreatedById":4343,"CreatedDateTime":"2011-09-02T01:07:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI think the ability of programmers in general has actually decayed... I mean, now we have much more advanced tools that allow us to think on a higher level, and produce more interesting things, but 30 years ago, programmers had to really use their brains to produce just about anything.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think a big problem is the abundance of software we have today. You don\u0027t need to hack your own software today \u00E2\u20AC\u201C everything is available. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIt\u0027s sad, but I think languages like ActionScript, Python and Javascript are producing a generation of programmers who don\u0027t really understand how software works.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t really think languages are to blame, especially not a great language like Python. Languages are just tools. A good programmer is one who knows what tool to use for what task. That includes knowing more than one tool, so someone who just fiddles around a bit with actionscript is certainly no programmer.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022softweir\u0022 data-cite=\u0022softweir\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI agree that \u003Cem\u003Eon average\u003C/em\u003E, programmers are less capable than they used to be. The new development tools have made things so easy for them that people whe once would never have had a chance to produce large projects can now do so and make a living at it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd thanks god for better development tools. People often complain about modern software, but I maintain it just got better and better. Anyone who disagrees should try data entry with original 1970 software and hardware.\u003C/p\u003E\n"},{"CreatedByName":"McLuv","CreatedById":2085,"CreatedDateTime":"2011-09-02T02:50:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI think the ability of programmers in general has actually decayed... I mean, now we have much more advanced tools that allow us to think on a higher level, and produce more interesting things, but 30 years ago, programmers had to really use their brains to produce just about anything.\u003C/p\u003E\u003Cp\u003EIt\u0027s sad, but I think languages like ActionScript, Python and Javascript are producing a generation of programmers who don\u0027t really understand how software works.\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ehmmm, I both agree and disagree on this point. While the older generation of programmers had a much closer view on the computing and what their software \u003Cem\u003Eactually\u003C/em\u003E did, the fact that most programmers work on levels above that allows them to accomplish most higher order tasks faster.\u003C/p\u003E\u003Cp\u003EThe book Godel, Escher, Bach goes a great deal in discussing this and similar heirarchies. Of course it\u0027s sad when programmers learn to accept the limitations of their systems, when if they had learned to program on lower levels as well, they could allow for the syntax needed to accomplish what they really need in a clean, optimized fashion.\u003C/p\u003E\n"},{"CreatedByName":"Xenoc","CreatedById":4213,"CreatedDateTime":"2011-09-02T06:42:39Z","Content":"\n\u003Cp\u003EI\u0027m not sure programmers are worse, as much as they\u0027ve just been able to get lazy with resources; the rampant improvement in memory and processing potential in computing have meant that higher level programming languages are used for almost everything. That results in a lack of optimisation.\u003C/p\u003E\u003Cp\u003EThe example I always use in this is the game \u003Ca href=\u0022https://en.wikipedia.org/wiki/Elite_(video_game)\u0022 rel=\u0022external nofollow\u0022\u003EElite\u003C/a\u003E; a massive sprawling universe with real physics and a consistent and functioning economy, all in 16k of memory (i.e.16,000 Bytes, as opposed to the 2,000,000,000 Bytes many games can easily eat up these days).\u003C/p\u003E\n"},{"CreatedByName":"Asgar","CreatedById":4343,"CreatedDateTime":"2011-09-02T11:17:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Xenoc\u0022 data-cite=\u0022Xenoc\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m not sure programmers are worse, as much as they\u0027ve just been able to get lazy with resources; the rampant improvement in memory and processing potential in computing have meant that higher level programming languages are used for almost everything. That results in a lack of optimisation.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s very true. With a billion instructions per second, you often don\u0027t notice performance flaws right away. O(n), O(n^3), the one is instantaneous, the other takes half a second.\u003C/p\u003E\u003Cp\u003EOn the other hand, many languages today have blazingly fast and highly optimized standard libraries, often fail-fast and lazy. So if you have good code and libraries, you have no lack of optimisation. If you\u0027re not doing number-crushing, you can often do better with a high-level language than in C.\u003C/p\u003E\n"},{"CreatedByName":"foamyesque","CreatedById":2982,"CreatedDateTime":"2011-09-02T13:48:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Xenoc\u0022 data-cite=\u0022Xenoc\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m not sure programmers are worse, as much as they\u0027ve just been able to get lazy with resources; the rampant improvement in memory and processing potential in computing have meant that higher level programming languages are used for almost everything. That results in a lack of optimisation.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThing is, compilers are now, and have been for some time, better at optimising code than any but the very best programmers anyways. In some languages it\u0027s true you take performance hits-- Java, I\u0027m looking at you-- but human brainshare is much better spent on figuring out \u003Cem\u003Ewhat\u003C/em\u003E you want computers to do than sorting out the precise order of your Assembly/binary level jump tables.\u003C/p\u003E\n"},{"CreatedByName":"Entroper","CreatedById":1594,"CreatedDateTime":"2011-09-02T21:53:00Z","Content":"\n\u003Cp\u003EI don\u0027t think programmers are getting worse. I think the fact that the tools are getting better is lowering the bar, so people who would not have been smart/talented enough to be programmers 20, 30, 40 years ago, can be programmers today. There are still plenty of smart and talented programmers today, but the average might be weighed down.\u003C/p\u003E\n"},{"CreatedByName":"cray","CreatedById":3499,"CreatedDateTime":"2011-09-03T00:38:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022softweir\u0022 data-cite=\u0022softweir\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EBUT: I suspect that there are just as many genius programmers as ever - people with real talent and the determination to use it. They tend to be the people who are creating the new tools that everybody else uses. Unfortunately, their visible impact is diluted by the herd of less capable coders.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI saw an interesting New York Times blog about piano virtuosos becoming increasingly common:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.nytimes.com/2011/08/14/arts/music/yuja-wang-and-kirill-gerstein-lead-a-new-piano-generation.html?_r=3\u0026amp;pagewanted=1\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.nytimes.com/2011/08/14/arts/music/yuja-wang-and-kirill-gerstein-lead-a-new-piano-generation.html?_r=3\u0026amp;pagewanted=1\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAmong the observations were the new generation of students: \u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u0027A reason that pianists are getting technically stronger is that as in sports, teachers and students are just learning to practice the craft better, becoming better conditioned and getting better results. But as Mr. Kalish suggests, another reason is that pianists are rising to the challenges of new music that pushes boundaries. \u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u0027When the 1996 movie \u00E2\u20AC\u0153Shine,\u00E2\u20AC about the mentally ill pianist David Helfgott, raised curiosity about Rachmaninoff\u00E2\u20AC\u2122s Third Piano Concerto, Mr. Lowenthal was asked by reporters whether this piece was as formidably difficult as the movie had suggested. He said that he had two answers: \u00E2\u20AC\u0153One was that this piece truly is terribly hard. Two was that all my 16-year-old students were playing it.\u00E2\u20AC\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u0027Some months ago I was speaking about the issue with the pianist Gilbert Kalish, who teaches at Stony Brook University on Long Island. He said that when Gyorgy Ligeti\u00E2\u20AC\u2122s \u00C3\u00A9tudes, which explore new realms of texture, sound and technique at the piano, gained attention in the 1990s, they were considered nearly impossible. Only experts like the French pianist Pierre-Laurent Aimard could play them, it was thought. But now, thanks to greater familiarity, Mr. Kalish said, \u00E2\u20AC\u0153my students at Stony Brook play them quite comfortably.\u00E2\u20AC\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u0027But audiences and critics tolerated a lot of playing that would be considered sloppy today. Listen to 1920s and \u00E2\u20AC\u212230s recordings of the pianist Alfred Cortot, immensely respected in his day. He would probably not be admitted to Juilliard now. Despite the refinement and \u00C3\u00A9lan in his playing, his recording of Chopin\u00E2\u20AC\u2122s 24 \u00C3\u00A9tudes from the early 1930s is, by today\u00E2\u20AC\u2122s standards, littered with clinkers.\u0027\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m wondering if this applies to programmers.\u003C/p\u003E\u003Cp\u003EIn addition to more powerful computers and simplified high-level programming languages, programmers - like pianists - have several more advantages of those of the 1960s - 1980s:\u003C/p\u003E\u003Cp\u003E1) Knowledge that\u0027s it has been done. 90% of groundbreaking science and engineering is proving something is possible. After you successfully run the Manhattan Project once, everyone else is going to have proof that, yes, you can make nukes. The rest is just repeating the engineering. The Manhattan Project was an epic undertaking for the US; 10 years later, a frosty little country of a few million people felt it was quite reasonable to make a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Bandkanon_1\u0022 rel=\u0022external nofollow\u0022\u003Efully automatic atomic cannon.\u003C/a\u003E Today, we\u0027ve solved a lot of software problems - like bipedal robots - which stalled computer programmers for decades. \u003C/p\u003E\u003Cp\u003E2) Those solutions are readily available. There are algorithms and programming techniques available with a brief internet search that weren\u0027t even conceived in the 1960s. Hell, I just learned more about sorting algorithms with a 15-minute wikipedia binge last week than I learned in a year of early 1990s high school programming (and I\u0027m 20 years out of practice with programming).\u003C/p\u003E\u003Cp\u003E3) Thorough dissemination of successes and availability of information sets, programmers - like pianists - have higher goals they know are achievable. \u003C/p\u003E\u003Cp\u003EThere are far more programmers now than in the 1960s. You can have a dozen Java-stunted drones for every virtuoso and still have more genius programmers than in the 1960s. Today, it\u0027s a hobby for a small group of folks to produce a 64-bit GUI, web-capable OS written in assembly that fits on a single 3.5\u0027 floppy.\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2011-09-03T03:16:57Z","Content":"\n\u003Cp\u003EI have produced a few small programs that work with repeat (I) {...} every sixtieth of a second and it doesn\u0027t compute this fast enough to do anything else. It just crashes. It basically equates to: read something from a map structure, add 1 to a variable, do it eight times. It cancels out ALL of the drawing events and sends back \u0027Not Responding\u0027.\u003C/p\u003E\u003Cp\u003EI even made a debug file which told me what it was doing and when. Here\u0027s an extract:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E#####.## LINES_init started - if you do not see this before the next LINES_init, the program has crashed: \u0027-- End of Log --\u0027\u003C/p\u003E\u003Cp\u003E#####.## LINES_draw started execution\u003C/p\u003E\u003Cp\u003E#####.## LINES_draw executed successfully\u003C/p\u003E\u003Cp\u003E#####.## LINES_step started execution\u003C/p\u003E\u003Cp\u003E#####.## LINES_step started execution\u003C/p\u003E\u003Cp\u003E#####.## LINES_step started execution\u003C/p\u003E\u003Cp\u003E#####.## LINES_step started execution\u003C/p\u003E\u003Cp\u003E#####.## LINES_step started execution\u003C/p\u003E\u003Cp\u003E#####.## LINES_step started execution\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd so on. Took out the data reading and it was fine.\u003C/p\u003E\n"}]}