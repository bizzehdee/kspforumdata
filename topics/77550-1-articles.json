{"TopicId":77550,"ForumId":16,"TopicTitle":"What\u0026#039;s so special about 64-bit KSP?","CreatedByName":"Blind Dead McJones","CreatedById":109600,"CreatedDateTime":"2014-07-14T02:10:20Z","PageNum":1,"Articles":[{"CreatedByName":"Blind Dead McJones","CreatedById":109600,"CreatedDateTime":"2014-07-14T02:10:20Z","Content":"\n\u003Cp\u003EI\u0027ve seen people discussing it before as being an improvement to the standard 32-bit KSP, and some people get KSP to work this way even though there\u0027s no official support. Now in the new video about version 0.24, they said that it was made in the new 64-bit version of the game. This apparently is a big deal.\u003C/p\u003E\u003Cp\u003ESo what is the difference? Does it run faster? Does it allow for more mods? Is it more compatible with some computers?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-14T15:54:31Z\u0022 title=\u002207/14/2014 03:54  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 14, 2014\u003C/time\u003E by Blind Dead McJones\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Starwhip","CreatedById":83990,"CreatedDateTime":"2014-07-14T02:18:02Z","Content":"\n\u003Cp\u003EFor those people with 64-bit computers (like me), I believe that it will allow for a more complete effort on the part of the computer, leading to hardware fryout and \u0022mystical blue smoke\u0022 with unrenowned speed.\u003C/p\u003E\u003Cp\u003EJust kidding, it should improve performance.\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2014-07-14T02:22:33Z","Content":"\n\u003Cp\u003E64bit allows KSP to access more RAM, is the simple answer. What this means in detail is that at the moment, KSP loads everything at the start - plugins, model, parts, textures.. everything. If the total memory used goes over about 3.5GB of RAM, the game will crash because there\u0027s no more room to load stuff into. What 64bit does is increase that 3.5GB limit (up to such a high number, no home computer can even dream of attaining it) which means more can be loaded into the memory - this mainly applies to textures which means it\u0027ll mostly affect mods which include a lot of/high-res textures in that it\u0027ll load them and won\u0027t hit the memory cap. Things like physics calculations are still single threaded so there won\u0027t be any improvement with large part count ships, but it means you\u0027ll be able to look at them with texture detail on high, with \u0027melt my computer!\u0027 settings for EVE etc..\u003C/p\u003E\u003Cp\u003EIn short, it won\u0027t affect stock KSP much, but is a godsend to those who mod.\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-07-14T02:31:03Z","Content":"\n\u003Cp\u003EYes to everything Obsessed said.\u003C/p\u003E\u003Cp\u003EPlus this little gem:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ObsessedWithKSP\u0022 data-cite=\u0022ObsessedWithKSP\u0022\u003E\u003Cdiv\u003EWhat 64bit does is increase that 3.5GB limit (up to such a high number, no home computer can even dream of attaining it) ...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhich is entertaining to me because this line has been uttered countless times by computer engineers and scientists for decades.\u003C/p\u003E\u003Cp\u003E\u0022Who needs more than 128kb of ram anyway...\u0022 :\u003C/p\u003E\u003Cp\u003E/sidetrack\u003C/p\u003E\n"},{"CreatedByName":"Duke17776","CreatedById":115108,"CreatedDateTime":"2014-07-14T06:13:12Z","Content":"\n\u003Cp\u003EFrom what i understand 64-bit systems could theoretically use \u003Cspan style=\u0022font-family:Arial;\u0022\u003E\u003Cspan style=\u0022color:#000000;\u0022\u003E16.8 million terabytes of memory. so I think it will be good for a while. maybe a year or two \u003C/span\u003E\u003C/span\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 alt=\u0022:rolleyes:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Monger","CreatedById":4143,"CreatedDateTime":"2014-07-14T07:06:46Z","Content":"\n\u003Cp\u003EIn a nutshell, 64 Bit basically has three big advantages:\u003C/p\u003E\u003Cp\u003E- it allows 64 Bit calculations within one pass (which is relevant e.g. for floating number calculations)\u003C/p\u003E\u003Cp\u003E- it allows to use a lot more physical RAM than before\u003C/p\u003E\u003Cp\u003E- it allows an easier memory layout, and therefore avoids memory fragmentation and swapping\u003C/p\u003E\u003Cp\u003EThe last one is a limitation from the OS. Actually, Windows only allows to directly address 2 GB of virtual memory to a single 32 Bit process. You can circumvent this limitation with a dirty hack so you can get up to 3.5 GB (Large address aware flag), but it comes with a small performance penalty. Also: Windows on Windows 64 (i.e. the \u0022emulation\u0022 of a 32 Bit process on a native 64 Bit OS) comes with a small performance penalty as well.\u003C/p\u003E\u003Cp\u003EOn the other hand, there are so many other factors that need to be counted in. For example, does the physics engine that Unity provides actually make any use of native 64 Bit floating numbers (i.e. \u0022Double\u0022)? Is the .NET Runtime able to manage so much memory properly, or will the garbage collector fail at some point?\u003C/p\u003E\u003Cp\u003EThere is only one way to find out if switching to 64Bit actually does any good: you have to try it out. It depends a lot on your hardware, on the mods you have installed and what you exactly are doing in the game. But at least it is moderatively save to say that you won\u0027t have any disadvantages, so just give it a try.\u003C/p\u003E\u003Cp\u003EIn fact: if Squad provides a proper launcher that selects the correct version at the start, you probably won\u0027t even notice that you are using 64 Bit now.\u003C/p\u003E\n"},{"CreatedByName":"Streetwind","CreatedById":98962,"CreatedDateTime":"2014-07-14T07:54:44Z","Content":"\n\u003Cp\u003EI\u0027m not expecting 64bit KSP to deliver noticable performance improvements, and I don\u0027t expect it to be rock stable for the next version or three.\u003C/p\u003E\u003Cp\u003EHowever I do have 16 GB RAM in my computer and appreciate being able to use more of it, and as for the rest, I will be happy to be proven wrong \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"qazsedcft","CreatedById":114699,"CreatedDateTime":"2014-07-14T10:27:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Monger\u0022 data-cite=\u0022Monger\u0022\u003E\u003Cdiv\u003EIn a nutshell, 64 Bit basically has three big advantages:\u003Cp\u003E- it allows 64 Bit calculations within one pass (which is relevant e.g. for floating number calculations)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIntel processors (and clones) natively calculate using 80-bit floating-point math (long double) and convert to a narrower type afterwards [1]. But in any case, this has nothing to do with whether you\u0027re running in 64-bit mode, which only determines the addressing and integer calculations.\u003C/p\u003E\u003Cp\u003E[1]: I\u0027m talking about native FPU only, not the packed types like SIMD.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Monger\u0022 data-cite=\u0022Monger\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E- it allows an easier memory layout, and therefore avoids memory fragmentation and swapping\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s only a concern for the operating system as applications see one unfragmented virtual address space. See: \u003Ca href=\u0022https://en.wikipedia.org/wiki/Virtual_memory\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Virtual_memory\u003C/a\u003E. The mapping is done in hardware so it does not have any effect on performance.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Monger\u0022 data-cite=\u0022Monger\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOn the other hand, there are so many other factors that need to be counted in. For example, does the physics engine that Unity provides actually make any use of native 64 Bit floating numbers (i.e. \u0022Double\u0022)? Is the .NET Runtime able to manage so much memory properly, or will the garbage collector fail at some point?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs noted above, 64-bit mode is irrelevant to floating-point math. I don\u0027t know whether Unity uses floats or doubles but that will not change when you switch to 64-bit mode. Anyway, don\u0027t they use GPUs for physics stuff these days?\u003C/p\u003E\u003Cp\u003ESo the only advantages are more RAM and no 32-bit virtualization.\u003C/p\u003E\u003Cp\u003ESorry, I\u0027m into OS development and could not let this slip through. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-14T10:43:27Z\u0022 title=\u002207/14/2014 10:43  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 14, 2014\u003C/time\u003E by qazsedcft\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-07-14T10:56:55Z","Content":"\n\u003Cp\u003EA short answer is for stock players, 64bit won\u0060t change much at all.\u003C/p\u003E\u003Cp\u003EFor people who use mods they can run more mods without crashing or slowing down.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022qazsedcft\u0022 data-cite=\u0022qazsedcft\u0022\u003E\u003Cdiv\u003EAnyway, don\u0027t they use GPUs for physics stuff these days?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot KSP. Unity is multi platform and there are too many GPU types or some run with no GPU. All the phys-x in KSP is software, and single threaded at that.\u003C/p\u003E\u003Cp\u003EThe latest Unity has multi threaded phys-x so personally I\u0060m looking forward to that.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-14T10:59:21Z\u0022 title=\u002207/14/2014 10:59  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 14, 2014\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Streetwind","CreatedById":98962,"CreatedDateTime":"2014-07-14T11:05:40Z","Content":"\n\u003Cp\u003EKSP could probably port its physics engine to run on GPUs, as Unity\u0027s physics runtime environment (Nvidia PhysX) is GPU-compliant to begin with.\u003C/p\u003E\u003Cp\u003EOf course, that would also mean that you would have to buy a Nvidia card in order to play KSP. I\u0027m fairly sure that nobody here wants Squad to open that particular can of worms... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_dry.png\u0022 alt=\u0022\u0026lt;_\u0026lt;\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2014-07-14T11:30:30Z","Content":"\n\u003Cp\u003EMore address space for the program is the biggest gain, permitting more mods before running up against the limit and crashing.\u003C/p\u003E\u003Cp\u003E[Nitpick] Programs don\u0027t have access to RAM, only the OS does. [/Nitpick]\u003C/p\u003E\n"},{"CreatedByName":"Mast","CreatedById":98292,"CreatedDateTime":"2014-07-14T11:34:13Z","Content":"\n\u003Cp\u003E64-bit might not be that interesting for stock players currently, but do note KSP is still under development.\u003C/p\u003E\u003Cp\u003EThe memory consumption of stock might gradually go up with more features added. Not having to worry about 32-bit limitations leaves more time to worry about actually getting things done.\u003C/p\u003E\n"},{"CreatedByName":"Monger","CreatedById":4143,"CreatedDateTime":"2014-07-15T06:29:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022qazsedcft\u0022 data-cite=\u0022qazsedcft\u0022\u003E\u003Cdiv\u003EIntel processors (and clones) natively calculate using 80-bit floating-point math (long double) and convert to a narrower type afterwards [1]. But in any case, this has nothing to do with whether you\u0027re running in 64-bit mode, which only determines the addressing and integer calculations.\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThere are some applications that have enormous performance gains through 64Bit, like 7-Zip. So does this mean applications like that are heavy on integer calculations? Well, makes sense, I guess.\u003C/p\u003E\u003Cp\u003EStill I wonder: even if the CPU can natively calculate 64Bit float, the OS still has to address and store it. And memory pointers are limited to x86 for x86 processes, and need to be remapped. This should have a performance penalty compared to native 64Bit.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022qazsedcft\u0022 data-cite=\u0022qazsedcft\u0022\u003E\u003Cdiv\u003EThat\u0027s only a concern for the operating system as applications see one unfragmented virtual address space. See: \u003Ca href=\u0022https://en.wikipedia.org/wiki/Virtual_memory\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Virtual_memory\u003C/a\u003E. The mapping is done in hardware so it does not have any effect on performance.\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThat\u0027s what I meant. The application won\u0027t notice it. (In Case of Unity and other .NET application especially, because they are boxed in the runtime anyway). But still: the OS usually performs a little better, because memory mapping becomes easier.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022qazsedcft\u0022 data-cite=\u0022qazsedcft\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAnyway, don\u0027t they use GPUs for physics stuff these days?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThere is still not a single standardized GPGPU API on Windows, let alone one for .NET. And even then it is far from being transparent, i.e. that the OS can decide on the fly whether calculcations should be done on the GPU or CPU, depending which is currently less stressed. Microsoft has announced plans for this some time ago, but they are still not there yet.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"RuBisCO","CreatedById":59540,"CreatedDateTime":"2014-07-15T07:28:38Z","Content":"\n\u003Cp\u003ESomeday ram and harddrives will become one (after they get around to mass producing MRAM or something) but I really don\u0027t think we are going to hit the 64 bit memory addressing limit any time soon: it is over 4 million gigabytes!\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2014-07-15T09:39:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Monger\u0022 data-cite=\u0022Monger\u0022\u003E\u003Cdiv\u003EStill I wonder: even if the CPU can natively calculate 64Bit float, the OS still has to address and store it. And memory pointers are limited to x86 for x86 processes, and need to be remapped. This should have a performance penalty compared to native 64Bit.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMemory pointers have to be remapped for all processes, 32 or 64 bit. No userspace program has direct access to RAM, only the OS does.\u003C/p\u003E\n"},{"CreatedByName":"Monger","CreatedById":4143,"CreatedDateTime":"2014-07-15T11:20:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022 data-cite=\u0022Red Iron Crown\u0022\u003E\u003Cdiv\u003EMemory pointers have to be remapped for all processes, 32 or 64 bit. No userspace program has direct access to RAM, only the OS does.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes of course, but 64Bit data types are mapped differently into memory under 32Bit than under 64Bit. If I remember right, WoW64 always maps 32Bit addresses 1:1 on a 64Bit address, and 64Bit values are splitted into two addresses.\u003C/p\u003E\n"},{"CreatedByName":"qazsedcft","CreatedById":114699,"CreatedDateTime":"2014-07-15T12:21:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Monger\u0022 data-cite=\u0022Monger\u0022\u003E\u003Cdiv\u003EThat\u0027s what I meant. The application won\u0027t notice it. (In Case of Unity and other .NET application especially, because they are boxed in the runtime anyway). But still: the OS usually performs a little better, because memory mapping becomes easier.\u003Cp\u003EYes of course, but 64Bit data types are mapped differently into memory under 32Bit than under 64Bit. If I remember right, WoW64 always maps 32Bit addresses 1:1 on a 64Bit address, and 64Bit values are splitted into two addresses.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t think you really understand how that works. There is no difference at all in how the mapping is done. It\u0027s all done by the CPU at the hardware level. The program specifies an address and the CPU just looks up some translation tables and either reads it from RAM or calls the OS to load a page from the disk. In the case of 32-bit programs the upper half of the address is simply set to zero. That\u0027s it. There is absolutely nothing \u0022easier\u0022 or \u0022harder\u0022 about it.\u003C/p\u003E\u003Cp\u003EThe only (slight) performance penalty is for system calls. See this: \u003Ca href=\u0022http://msdn.microsoft.com/en-us/library/windows/desktop/aa384219%28v=vs.85%29.aspx\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://msdn.microsoft.com/en-us/library/windows/desktop/aa384219%28v=vs.85%29.aspx\u003C/a\u003E\u003C/p\u003E\n"}]}