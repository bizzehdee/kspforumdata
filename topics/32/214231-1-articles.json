{"TopicId":214231,"ForumId":32,"TopicTitle":"The Kerbal KAL Logic \u0026 Computing Laboratory [WIP]","CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-02T18:51:58Z","PageNum":1,"Articles":[{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-02T18:51:59Z","Content":"\n\u003Ctable border=\u00226\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:100%;\u0022\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:36px;\u0022\u003EThe Kerbal KAL Logic \u0026amp; Computing Laboratory\u003C/span\u003E\u003C/strong\u003E\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003C/tbody\u003E\n\u003C/table\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cimg alt=\u0022thumbnail\u0022 class=\u0022ipsImage\u0022 src=\u0022https://codeberg.org/Nazalassa/KALlogic/raw/branch/main/thumbnail\u0022\u003E\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\nKerbalX hangar is \u003Ca href=\u0022https://kerbalx.com/hangars/164039\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E, git repo is \u003Ca href=\u0022https://codeberg.org/Nazalassa/KALlogic\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\nIMPORTANT NOTE: It is normal this project is going slowly. We\u0027re still working on it, but not very fast.\n\u003C/p\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E \u002B-----\u002B\n | LOG |\n \u002B-----\u002B\n\n [ 230302.1751 ] Created thread.\n [ 230303.1542 ] Experiment 1: analog addition attempt (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/\u0026amp;do=findComment\u0026amp;comment=4250799\u0022 rel=\u0022\u0022\u003E23.1\u003C/a\u003E and analysis \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/\u0026amp;do=findComment\u0026amp;comment=4250836\u0022 rel=\u0022\u0022\u003E23.2\u003C/a\u003E)\n [ 230304.0937 ] Working bus (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/\u0026amp;do=findComment\u0026amp;comment=4251621\u0022 rel=\u0022\u0022\u003E23.3\u003C/a\u003E)\n [ 230305.1452 ] Working adder (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/\u0026amp;do=findComment\u0026amp;comment=4252551\u0022 rel=\u0022\u0022\u003E23.4\u003C/a\u003E)\n [ 230308.1649 ] Working instruction KALs (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/\u0026amp;do=findComment\u0026amp;comment=4254970\u0022 rel=\u0022\u0022\u003E23.5\u003C/a\u003E)\n [ 230319.1713 ] Thread got accidentally moved (see incident \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/\u0026amp;do=findComment\u0026amp;comment=4262293\u0022 rel=\u0022\u0022\u003E23.6\u003C/a\u003E)\n [ 230330.1446 ] Experiment 2: KAL curves outside time range [0,1] attempt (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/\u0026amp;do=findComment\u0026amp;comment=4267364\u0022 rel=\u0022\u0022\u003E23.7\u003C/a\u003E)\n [ 230422.1602 ] Experiment 3: \u0022Tape\u0022 memory idea \u002B .craft file AG modification attempt (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/\u0026amp;do=findComment\u0026amp;comment=4275892\u0022 rel=\u0022\u0022\u003E23.8\u003C/a\u003E)\n [ 230506.1621 ] CFG File Parser (CFP) finished.\n [ 230714.1055 ] Bus with MOV instruction experiment (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/?do=findComment\u0026amp;comment=4302358\u0022 rel=\u0022\u0022\u003E23.9\u003C/a\u003E)\n [ 240118.1815 ] CFP 0.3 finished: now usable and finally good. (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/?do=findComment\u0026amp;comment=4360159\u0022 rel=\u0022\u0022\u003E24.1\u003C/a\u003E)\n [ 240121.1126 ] 256 register bank wiring finished, now all that\u0027s left is to implement the MOV instruction. (see log \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/topic/214231-the-kerbal-kal-logic-computing-laboratory-wip/?do=findComment\u0026amp;comment=4360821\u0022 rel=\u0022\u0022\u003E24.2\u003C/a\u003E)\n\u003C/pre\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E \u002B----------------\u002B\n | HARDWARE PACKS |\n \u002B----------------\u002B\n Usable (and generaly more user-friendly) sets of hardware, packed together in a single contraption, like computers\n \n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/256-Analog-Computer-Prototype\u0022 rel=\u0022external nofollow\u0022\u003E256 Analog Early Computer Prototype\u003C/a\u003E ] An adder \u002B registers pack, which also has instruction KALs you can run (TAB, ADD, etc.). Still not a computer. [I may redo this description]\n []\n\u003C/pre\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E \u002B-------------------------\u002B\n | BINARY HARDWARE LIBRARY |\n \u002B-------------------------\u002B\n Hardware that operates on a single bit per KAL\n \n [ \u003Ca href=\u0022https://kerbalx.com/HB_Stratos/AND-Gate\u0022 rel=\u0022external nofollow\u0022\u003E1-bit AND Gate\u003C/a\u003E ] 1-bit AND Gate.\n [ \u003Ca href=\u0022https://kerbalx.com/HB_Stratos/AND-Gate-Simplified\u0022 rel=\u0022external nofollow\u0022\u003E1-bit AND Gate Simplified\u003C/a\u003E ] Simplified version of the above 1-bit AND gate.\n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/6bitAdder\u0022 rel=\u0022external nofollow\u0022\u003E6-bit Adder\u003C/a\u003E ] A simple binary adder that adds two 6-bit numbers. Why 6-bit? Because there was only room for 6 KALs.\n []\n\u003C/pre\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E \u002B-----------------------------\u002B\n | I/O BINARY HARDWARE LIBRARY |\n \u002B-----------------------------\u002B\n Hardware that handle I/O (Input/Output) with one bit per KAL\n \n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/8bit7segmDisplayer\u0022 rel=\u0022external nofollow\u0022\u003E8-bit Triple 7-Segment Display\u003C/a\u003E ] Displays an 8-bit number.\n []\u003C/pre\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E \u002B-------------------------\u002B\n | ANALOG HARDWARE LIBRARY |\n \u002B-------------------------\u002B\n Hardware that operate on KAL play positions, to represents larger numbers in a single KAL\n \n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/8-bit-bus-prototype\u0022 rel=\u0022external nofollow\u0022\u003E256 Bus with 3 Registers\u003C/a\u003E ] 256 analog bus prototype, with 3 analog registers.\n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/256-Analog-Adder\u0022 rel=\u0022external nofollow\u0022\u003E256 Analog Adder\u003C/a\u003E ] Adds two 256 analog numbers. It has a carry in and a carry out, allowing it to be stacked.\n [ \u003Ca href=\u0022https://kerbalx.com/HB_Stratos/Analog-Subtraction\u0022 rel=\u0022external nofollow\u0022\u003EAnalog Subtraction\u003C/a\u003E ] Note: may require some investigations (to determine range etc.)\n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/256-Analog-Bus-with-Adder\u0022 rel=\u0022external nofollow\u0022\u003E256 Analog Bus (3 Registers) \u002B Adder\u003C/a\u003E ] 256 analog bus prototype, with 3 analog registers. It has an adder that can add two 256 analog numbers (A\u002BB \u2192 A).\n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/bus-mov-test\u0022 rel=\u0022external nofollow\u0022\u003EMOV-256 Bus\u003C/a\u003E ] 256 analog bus prototype, featuring a MOV instruction. It can therefore have up to 256 registers.\n [ \u003Ca href=\u0022https://kerbalx.com/crafts/80789\u0022 rel=\u0022external nofollow\u0022\u003EMOV-BUS-256 Register Pack\u003C/a\u003E ] A pack of 256 registers, with a working bus and MOV instruction. \u003C/pre\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E \u002B-----------------------------\u002B\n | I/O ANALOG HARDWARE LIBRARY |\n \u002B-----------------------------\u002B\n Hardware that handle analog I/O (Input/Output) with KAL play positions\n \n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/7segmDisplayer\u0022 rel=\u0022external nofollow\u0022\u003E256 Triple 7-Segment Display\u003C/a\u003E ] Displays a 256 analog number.\n [ \u003Ca href=\u0022https://kerbalx.com/HB_Stratos/Smoothed-State-Follower\u0022 rel=\u0022external nofollow\u0022\u003ESmoothed State Follower\u003C/a\u003E ] Note: may require some investigations (to determine range etc.)\n []\n\u003C/pre\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E \u002B------------------------\u002B\n | OTHER HARDWARE LIBRARY |\n \u002B------------------------\u002B\n Hardware that convert between binary and analog, etc.\n \n [ \u003Ca href=\u0022https://kerbalx.com/Nazalassa/8bit2KALposConverter\u0022 rel=\u0022external nofollow\u0022\u003E8-bit 256 Binary to Analog Converter\u003C/a\u003E ] Converts an 8-bit binary number into a 256 analog number.\n [ 256 8-bit Analog to Binary Converter ] (Not made yet, but that\u0027s a logical thing to do)\n []\n\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E \u002B------------------\u002B\n | PYTHON UTILITIES |\n \u002B------------------\u002B\n Python scripts that help using KALs, such as track generators, etc.\n\n [ \u003Ca href=\u0022https://github.com/Nazalassa/Files/raw/main/misc/cfp.tgz\u0022 rel=\u0022external nofollow\u0022\u003ECFP\u003C/a\u003E ] A craft file editor, which supports scripts. Comes with KAL-Utils script suite.\n [ \u003Ca href=\u0022https://github.com/Nazalassa/Misc/raw/Misc-files-to-host/cfp.tar.gz\u0022 rel=\u0022external nofollow\u0022\u003EOld CFG File Parser (CFP)\u003C/a\u003E ] A graphical program that uses Tk, to view and edit .craft files (and KSP cfgs in general).\n [ \u003Ca href=\u0022https://github.com/Nazalassa/Misc/raw/Misc-files-to-host/generateKALcurve\u0022 rel=\u0022external nofollow\u0022\u003EQnD Generate KAL Curve\u003C/a\u003E ] A quick-and-dirty python script that takes a list of values, and makes them a KAL curve. Can be used with CFP.\n []\n\u003C/pre\u003E\n\u003Cpre style=\u0022background-color:rgb(248,249,250);border:1px solid rgb(234,236,240);color:rgb(0,0,0);font-size:14px;padding:1em;\u0022\u003E\n\u00A0\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor those who want to study KALs without having access to KSP, here\u0027s an extract of a .craft file, showing a KAL:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003EPART\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tpart \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E controller1000_4294451462\n\tpartName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tpersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2563744445\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tpos \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.663985729\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10.0025492\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.706833422\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tattPos \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.699999988\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0166683197\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1.34075487\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tattPos0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0166683197\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.640754819\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\trot \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.707106709\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.707106829\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tattRot \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tattRot0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.707106709\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.707106829\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tmir \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tsymMethod \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EMirror\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tautostrutMode \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EOff\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\trigidAttachment \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tistg \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tresPri \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tdstg \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tsidx \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tsqor \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tsepI \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tattm \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tsameVesselCollision \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tmodCost \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tmodMass \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tmodSize \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tsrfN \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E srfAttach\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstructuralPanel2_4294458818\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epanel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tEVENTS\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tACTIONS\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EToggleSameVesselInteraction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESetSameVesselInteraction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERemoveSameVesselInteraction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tPARTDATA\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tMODULE\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tname \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleRoboticController\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tisEnabled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tpersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2591903450\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tdisplayName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E INPUT A5\n\t\tsequencePosition \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tsequencePlaySpeed \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tsequenceLength \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tcontrollerEnabled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tpriorityField \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\twindowPosition \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E246\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E392\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\twindowSize \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E618\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E419\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tstagingEnabled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tsequenceIsPlaying \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tsequenceDirection \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EForward\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tsequenceLoopMode \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERepeat\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tEVENTS\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tACTIONS\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETogglePlayAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom10\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EToggleLoopModeAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EToggleDirectionAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EToggleControllerEnabledAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EToggleControllerEnabledOn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EToggleControllerEnabledOff\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPlaySequenceAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStopSequenceAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESequenceForwardAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESequenceReverseAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESequenceLoopOnceAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESequenceLoopRepeatAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESequenceLoopPingPongAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESequenceLoopOnceRestartAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESequencePlaySpeedZeroAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESequencePlaySpeedFullAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tactionGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\twasActiveBeforePartWasAdjusted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tAXISGROUPS\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tsequencePosition\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisIncremental \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisSpeedMultiplier \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisInverted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\toverrideIncremental0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\toverrideIncremental1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\toverrideIncremental2 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\toverrideIncremental3 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tsequencePlaySpeed\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisGroup \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisIncremental \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisSpeedMultiplier \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisInverted \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\toverrideIncremental0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\toverrideIncremental1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\toverrideIncremental2 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\toverrideIncremental3 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EYaw\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERoll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETranslateZ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelSteer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EWheelThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom02\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom03\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECustom04\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tCONTROLLEDAXES\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tAXIS\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tpersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E210973617\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tmoduleId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4023821551\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tpartNickName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESpotlight\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EMk1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\trowIndex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lightR\n\t\t\t\ttimeValueCurve\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.498\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.5\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tAXIS\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tpersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E210973617\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tmoduleId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4023821551\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tpartNickName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESpotlight\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EMk1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\trowIndex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lightG\n\t\t\t\ttimeValueCurve\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.498\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.5\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tAXIS\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tpersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E210973617\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tmoduleId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4023821551\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tpartNickName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESpotlight\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EMk1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\trowIndex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lightB\n\t\t\t\ttimeValueCurve\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.498\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.5\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\tAXIS\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tpersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E3915516560\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tmoduleId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E3186489012\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\tpartNickName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E KAL\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EController\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\trowIndex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\taxisName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sequencePosition\n\t\t\t\ttimeValueCurve\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.5\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.51\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\tkey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tCONTROLLEDACTIONS\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tUPGRADESAPPLIED\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tMODULE\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tname \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleCargoPart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tisEnabled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tbeingAttached \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tbeingSettled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\treinitResourcesOnStoreInVessel \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tstagingEnabled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tEVENTS\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tACTIONS\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tUPGRADESAPPLIED\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-03-03T15:37:57Z\u0022 title=\u002203/03/2024 03:37  PM\u0022 data-short=\u0022Mar 3\u0022\u003EMarch 3\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003Cbr\u003EMoved image to Codeberg and added link to git repo\n\u003C/span\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-03T16:31:34Z","Content":"\n\u003Cp\u003E\nAnalog calculations will be fast and very KAL efficient, but as with real analog computers compounding errors will become a problem. This will be an issue for \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E Codes and precise integer ops, but should be fine for most general purpose calculations. After all, this only runs on floats, and well floats even outside of KALs have their limits on precision. For \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E Codes though we will need to have a stairstepped KAL to rule out any reading errors, cause if you\u0027re .1 off it doesn\u0027t matter much, but if you do ADD instead of POP STACK that will become a major issue.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-03T16:42:56Z","Content":"\n\u003Ctable align=\u0022center\u0022 border=\u00224\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:50%;\u0022\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003ELog 23.1\u003C/span\u003E\u003C/strong\u003E\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003C/tbody\u003E\n\u003C/table\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnalog logic gets too imprecise if the required precision (in this case 1/256, to represent 8-bit numbers) gets too small. All in the picture below:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00226mbg90X.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002285.92\u0022 width=\u00221200\u0022 src=\u0022https://i.imgur.com/6mbg90X.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI entered at least 8 significant digits for all coordinates of all points in all curves, I made the curve between points segments (using the editor function), and the precision is like uuuh...\u003Cbr\u003E\nIf operations need to be chained, this will be an issue. A big issue. In the example I gave, chaining two additions will give wrong results. This is the fault of KSP\u0027s lack of precision on plenty of things. Don\u0027t worry, I double-checked my math.\n\u003C/p\u003E\n\u003Cp\u003E\nSo yes it appears that we can store ROM as play positions, but operations, unless we want hundreds or even thousands of points, will likely be bitwise. Of course I can use the python script to give a specific value to each integer play position, but in this case the .craft will be veeeeery long, and even if I don\u0027t mind pasting 32768 lines in a .craft, we should find other ideas.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-06T16:30:29Z\u0022 title=\u002205/06/2023 04:30  PM\u0022 data-short=\u00221 yr\u0022\u003EMay 6, 2023\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003Cbr\u003EMoved Experiment 1 log here\n\u003C/span\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-03T17:10:58Z","Content":"\n\u003Ctable align=\u0022center\u0022 border=\u00224\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:50%;\u0022\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003EAnalysis 23.2\u003C/span\u003E\u003C/strong\u003E\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003C/tbody\u003E\n\u003C/table\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224250782\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677861094\u0022 data-ipsquote-userid=\u0022187428\u0022 data-ipsquote-username=\u0022HB Stratos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 3/3/2023 at 5:31 PM, HB Stratos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnalog calculations will be fast and very KAL efficient, but as with real analog computers compounding errors will become a problem. This will be an issue for \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003E\u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E\u003C/abbr\u003E Codes and precise integer ops, but should be fine for most general purpose calculations. After all, this only runs on floats, and well floats even outside of KALs have their limits on precision. For \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003E\u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E\u003C/abbr\u003E Codes though we will need to have a stairstepped KAL to rule out any reading errors, cause if you\u0027re .1 off it doesn\u0027t matter much, but if you do ADD instead of POP STACK that will become a major issue.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think it would be fine if we made like 8-bit blocks (between 0 and 255) and stick two of them together when we need 16 bits etc., and hardcode very precise values with the help of the python script. As the script generates things like that:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\u002B---------------------\u002B\n|                 ___ |\n|           _____|    |\n|     _____|          |\n| ___|                |\n\u002B-0-----1-----2-----3-\u002B\u003C/pre\u003E\n\u003Cp\u003E\nSo if there\u0027s a tiny, tiny imprecision, it will be corrected.\n\u003C/p\u003E\n\u003Cp\u003E\nAfter analysing the way the analog adder I made works, I think that the issue is that I made something like tha instead:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\u002B------------------\u002B\n|             _,-\u0027 |\n|         _,-\u0027     |\n|     _,-\u0027         |\n| _,-\u0027             |\n\u002B-0----1----2----3-\u002B\u003C/pre\u003E\n\u003Cp\u003E\n(Imagine the line is a straight line between start and stop)\u003Cbr\u003E\nSo the source of the imprecision is probably just the fact that I was lazy and didn\u0027t literally hardcode the values in the \u0022flat\u0022 way I showed above (the first one). I\u0027ll try to use the first way and see if it works.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224250782\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677861094\u0022 data-ipsquote-userid=\u0022187428\u0022 data-ipsquote-username=\u0022HB Stratos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 3/3/2023 at 5:31 PM, HB Stratos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnalog calculations will be fast and very KAL efficient,\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAlso I noticed bitwise addition is like 1 physics tick or something, the lower that we can get.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-06T16:30:12Z\u0022 title=\u002205/06/2023 04:30  PM\u0022 data-short=\u00221 yr\u0022\u003EMay 6, 2023\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003Cbr\u003EMoved Experiment 1 analysis here\n\u003C/span\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-03T17:21:11Z","Content":"\n\u003Cp\u003E\nOK I just copy-pasted around 2,000 lines of timestamps in the .craft. Time to see how it behaves.\n\u003C/p\u003E\n\u003Cp\u003E\n(cross your fingers\u00A0:P)\n\u003C/p\u003E\n\u003Cp\u003E\n--\n\u003C/p\u003E\n\u003Cp\u003E\nOh great, 0 parts in 1 stage. I guess KSP doesn\u0027t like it.\n\u003C/p\u003E\n\u003Cp\u003E\nWe have to find another way, I\u0027ll post the script in the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003E\u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E\u003C/abbr\u003E rn (doc will follow)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-06T16:26:09Z\u0022 title=\u002205/06/2023 04:26  PM\u0022 data-short=\u00221 yr\u0022\u003EMay 6, 2023\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"darthgently","CreatedById":204885,"CreatedDateTime":"2023-03-03T17:25:51Z","Content":"\n\u003Cp\u003E\nAm I to understand you are looking at using the KAL as a l low level computer instead of a high level controller?\u00A0 If not what am I missing?\u00A0 Interesting exercise.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nInspired by logic design courses while in college I made a fixed point basic op library for the Amiga 1000 blitter chip that could do add, subtract, and multiply on huge arrays of fixed point numbers (the blitter is for doing logical bit ops on entire bitplanes, mostly used for graphics).\u00A0 I got stumped on a division op that had decent precision and finals were coming up so let it fade away from my to-do list.\u00A0 Yes, years ago before FPUs and mega graphics cards were super common\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-03-03T17:27:38Z\u0022 title=\u002203/03/2023 05:27  PM\u0022 data-short=\u00221 yr\u0022\u003EMarch 3, 2023\u003C/time\u003E by darthgently\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-03T22:14:39Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224250869\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677864351\u0022 data-ipsquote-userid=\u0022204885\u0022 data-ipsquote-username=\u0022darthgently\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, darthgently said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAm I to understand you are looking at using the KAL as a l low level computer instead of a high level controller?\u00A0 If not what am I missing?\u00A0 Interesting exercise.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nInspired by logic design courses while in college I made a fixed point basic op library for the Amiga 1000 blitter chip that could do add, subtract, and multiply on huge arrays of fixed point numbers (the blitter is for doing logical bit ops on entire bitplanes, mostly used for graphics).\u00A0 I got stumped on a division op that had decent precision and finals were coming up so let it fade away from my to-do list.\u00A0 Yes, years ago before FPUs and mega graphics cards were super common\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, we are looking at making a computer out of KALs. if you want to look at the basic writeups I did of the underlying things we can do with KALs, look here:\u00A0\u003Ca href=\u0022https://kerbalx.com/HB_Stratos/Analog-Subtraction\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kerbalx.com/HB_Stratos/Analog-Subtraction\u003C/a\u003E\u00A0,\u00A0\u003Ca href=\u0022https://kerbalx.com/HB_Stratos/Smoothed-State-Follower\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kerbalx.com/HB_Stratos/Smoothed-State-Follower\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nalso \u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/217956-nazalassa/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022217956\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/217956-nazalassa/\u0022 rel=\u0022\u0022\u003E@Nazalassa\u003C/a\u003E\u00A0I am currently writing a parser for .craft files in python that will output nested dictionaries similar what the python json.loads() does. Might be of use to combine with your script once it\u0027s done, then you don\u0027t have to copy-paste into craft files anymore.\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"darthgently","CreatedById":204885,"CreatedDateTime":"2023-03-03T22:33:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224251143\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677881679\u0022 data-ipsquote-userid=\u0022187428\u0022 data-ipsquote-username=\u0022HB Stratos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 minutes ago, HB Stratos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYes, we are looking at making a computer out of KALs. if you want to look at the basic writeups I did of the underlying things we can do with KALs, look here:\u00A0\u003Ca href=\u0022https://kerbalx.com/HB_Stratos/Analog-Subtraction\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kerbalx.com/HB_Stratos/Analog-Subtraction\u003C/a\u003E\u00A0,\u00A0\u003Ca href=\u0022https://kerbalx.com/HB_Stratos/Smoothed-State-Follower\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kerbalx.com/HB_Stratos/Smoothed-State-Follower\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nalso \u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/217956-nazalassa/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022217956\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/217956-nazalassa/\u0022 rel=\u0022\u0022\u003E@Nazalassa\u003C/a\u003E\u00A0I am currently writing a parser for .craft files in python that will output nested dictionaries similar what the python json.loads() does. Might be of use to combine with your script once it\u0027s done, then you don\u0027t have to copy-paste into craft files anymore.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat is very cool.\u00A0 I\u0027ve done smooth control of parts with kOS but overall have stopped using robotic parts as DockRotate \u002B PicoPorts for joints works for most of what I want to do.\u00A0 \u00A0But yours will work without mods from what I can tell\n\u003C/p\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-04T10:31:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224251143\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677881679\u0022 data-ipsquote-userid=\u0022187428\u0022 data-ipsquote-username=\u0022HB Stratos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, HB Stratos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nalso \u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/217956-nazalassa/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022217956\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/217956-nazalassa/\u0022 rel=\u0022\u0022\u003E@Nazalassa\u003C/a\u003E\u00A0I am currently writing a parser for .craft files in python that will output nested dictionaries similar what the python json.loads() does. Might be of use to combine with your script once it\u0027s done, then you don\u0027t have to copy-paste into craft files anymore.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNice! Then if we couple both scripts it\u0027ll be easier \u003Cspan\u003E:)\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI think I have an idea for a 8-bit analog bus with 8-bit analog registers, it would use 1 KAL for the bus itself and 3 KALs per register.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224250869\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677864351\u0022 data-ipsquote-userid=\u0022204885\u0022 data-ipsquote-username=\u0022darthgently\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, darthgently said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAm I to understand you are looking at using the KAL as a l low level computer instead of a high level controller?\u00A0 If not what am I missing?\u00A0 Interesting exercise.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe main reason we do that is probably because it\u0027s fun and we \u003Cs\u003Emay\u003C/s\u003E will learn things about how computers work.\n\u003C/p\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-04T10:33:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224251165\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677882829\u0022 data-ipsquote-userid=\u0022204885\u0022 data-ipsquote-username=\u0022darthgently\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, darthgently said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat is very cool.\u00A0 I\u0027ve done smooth control of parts with kOS but overall have stopped using robotic parts as DockRotate \u002B PicoPorts for joints works for most of what I want to do.\u00A0 \u00A0But yours will work without mods from what I can tell\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah that\u0027s the plan.. sadly Sensors (except for a single use collision sensor) are outside the range of possibility for now, so a PID controller would not be possible not because it can\u0027t be coded with KALs, but because we don\u0027t have any real world data we can use as input\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-04T10:37:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224251616\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677925999\u0022 data-ipsquote-userid=\u0022187428\u0022 data-ipsquote-username=\u0022HB Stratos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 3/4/2023 at 11:33 AM, HB Stratos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYeah that\u0027s the plan.. sadly Sensors (except for a single use collision sensor) are outside the range of possibility for now, so a PID controller would not be possible not because it can\u0027t be coded with KALs, but because we don\u0027t have any real world data we can use as input\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt would be totally possible to detect staging (at least when something decouples) or keyboard inputs that trigger either a specific action group, or pitch yaw that kind of things.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n-- [ MERGED WITH BELOW POST ] --\n\u003C/p\u003E\n\u003Ctable align=\u0022center\u0022 border=\u00224\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:50%;\u0022\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003ELog 23.3\u003C/span\u003E\u003C/strong\u003E\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003C/tbody\u003E\n\u003C/table\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOK the bus works! yeeeey \u003Cimg alt=\u0022\u0026amp;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 title=\u0022\u0026amp;)\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_025.png\u0022 src=\u0022https://web.archive.org/web/20230304134542/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_025.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nOriginal state (I changed the values of the registers myself)\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_026.png\u0022 src=\u0022https://web.archive.org/web/20230304134542/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_026.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nRegister A writes to the bus (AR A WRITE is enabled) and register B loads from the bus (AR B READ is enabled), effectively doing an A to B transfer.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_027.png\u0022 src=\u0022https://web.archive.org/web/20230304134542/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_027.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nNow register C writes to the bus and register B reads, transfering data from C to B.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_028.png\u0022 src=\u0022https://web.archive.org/web/20230304134542/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_028.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s how it works! Each of the three lines is a register. Each register has 3 KALs, from left to right: read, store, write. Normally read and write are disabled, although store is always enabled. When write is enabled, it writes the contents of the register to the bus. When read is enabled, it stores the contents of the bus into the register.\n\u003C/p\u003E\n\u003Cp\u003E\nThe thing works like that: Basically each KAL is a buffer, the bus writes into the read KALs, which each write into their register\u0027s store KAL, which does the same with the write KAL, which writes to the bus again. It\u0027s like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003ER \u2192 S \u2192 W  ]-- Register\n  \u2196   \u2199\n   Bus     ]-- Bus\u003C/pre\u003E\n\u003Cp\u003E\nHowever, the read and write KALs of each register aren\u0027t always enabled, which means that we can decide when we want eachregister to read/write from/to the bus.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOh, by the way, here\u0027s how it looks in one KAL:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_024.png\u0022 src=\u0022https://web.archive.org/web/20230304134542/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_024.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nInstead of having the sloped stuff from the adder, I used my script to generate a buffer, which basically sets the play position of the target KAL to the one of the current one.\n\u003C/p\u003E\n\u003Cp\u003E\nDownload: \u003Ca href=\u0022https://kerbalx.com/Nazalassa/8-bit-bus-prototype\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kerbalx.com/Nazalassa/8-bit-bus-prototype\u003C/a\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-03-04T07:20:54Z\u0022 title=\u002203/04/2024 07:20  AM\u0022 data-short=\u0022Mar 4\u0022\u003EMarch 4\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003Cbr\u003EImages to web.archive.org\n\u003C/span\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-04T11:50:41Z","Content":"\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cspan style=\u0022color:#999999;\u0022\u003E[ WARNING | This post has been repurposed. It is roughly \u003Cem\u003Eone day younger\u003C/em\u003E. ]\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nI modified the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003E\u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E\u003C/abbr\u003E and added a library to keep track of all the KAL logic \u0026amp; computing stuff we do :)\u003Cbr\u003E\nRight now there are the crafts from \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/187428-hb-stratos/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022187428\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/187428-hb-stratos/\u0022 rel=\u0022\u0022\u003E@HB Stratos\u003C/a\u003E and me.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf we want to make a CPU I suggest we first try to make an all-8-bit one, 256 bytes of total memory (maybe 192 program ROM, the rest is I/O, RAM, and possibly stack), with a small set of operations (LDA, LDB, STA, STB, LAV, LBV, JMP, ADD, NOP, maybe SUB and BNE-like things).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-03-05T13:13:49Z\u0022 title=\u002203/05/2023 01:13  PM\u0022 data-short=\u00221 yr\u0022\u003EMarch 5, 2023\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003Cbr\u003EPost repurposed.\n\u003C/span\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-05T15:52:28Z","Content":"\n\u003Ctable align=\u0022center\u0022 border=\u00224\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:50%;\u0022\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003ELog 23.4\u003C/span\u003E\u003C/strong\u003E\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003C/tbody\u003E\n\u003C/table\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI finally got a 256 analog adder working!\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_029.png\u0022 src=\u0022https://web.archive.org/web/20240304072323/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_029.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s pretty straightforward. Two inputs, a carry in, a carry out, and the result. It can be stacked.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI then connected it to the bus! So now we have a bus with three registers and some kind of simple ALU.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_033.png\u0022 src=\u0022https://web.archive.org/web/20240304072326/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_033.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_035.png\u0022 src=\u0022https://web.archive.org/web/20240304072304/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_035.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHow to operate it: well I already said how transferring stuff between registers work in a post above, so I won\u0027t repeat it. By default, the adder processor in enabled and the adder output is disabled. The result has the value of A\u002BB. In order to transfer this result to the A register, here\u0027s how to proceed:\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nDisable the adder processor, so that the result won\u0027t change;\n\u003C/li\u003E\n\u003Cli\u003E\nEnable, then disable, the adder output, to transfer the data from it to the A register (make sure the A register isn\u0027t reading from the bus);\n\u003C/li\u003E\n\u003Cli\u003E\nFinally, re-enable the adder processor.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nI also added the \u0027LDC\u0027 controller, which has the purpose of loading the C register with whatever\u0027s in it, when it\u0027s enabled (you\u0027ll need to set the value while it is enabled for the value to be actually loaded into C). This way you can load any register by transfering from C to it.\n\u003C/p\u003E\n\u003Cp\u003E\nBy default the thing is disabled, but it can be left enabled (in fact, you should). Press \u00270\u0027, or whatever key is associated with AG 10, to toggle it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nKerbalX: \u003Ca href=\u0022https://kerbalx.com/Nazalassa/256-Analog-Adder\u0022 rel=\u0022external nofollow\u0022\u003Eadder\u003C/a\u003E \u003Ca href=\u0022https://kerbalx.com/Nazalassa/256-Analog-Bus-with-Adder\u0022 rel=\u0022external nofollow\u0022\u003Eadder\u002Bbus\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAfter doing all of that I wonder how to actually execute opcodes. Maybe one KAL per opcode? That would play whenever needed and enable / disable KALs as needed.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-03-04T07:26:26Z\u0022 title=\u002203/04/2024 07:26  AM\u0022 data-short=\u0022Mar 4\u0022\u003EMarch 4\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003Cbr\u003EMoved log 23.4 here\n\u003C/span\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-06T01:37:04Z","Content":"\n\u003Cp\u003E\nAbsolutely awesome work! I don\u0027t have much time rn, university exam season and all. but this is actually proving to be feasible.\n\u003C/p\u003E\n\u003Cp\u003E\nI was always wondering how a full loop of KALs would work. Usually there\u0027s the problem that a KAL cannot be disabled as when you set a KALs position from another KAL it skips around, never playing action groups. But in this case we can just have one single KAL that does actually play with a play speed above zero, essentially acting as our clock. And that one would be the only one allowed to use action groups to set a KAL playing or not for the bus to work. If that\u0027s not an option, the slightly messy workaround of having one KAL set the play speed of another KAL which is set to loop and will click an action group if play speed is increased would also work.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nA word of caution though, when playing with complex KAL mechanics on my 1k part concorde I have run into the issue of larger time skips causing issues with the averaging skipping around more. If we end up running into lag we may need to clock down the CPU beyond what the physics tick rate dropping would already do to ensure reliable function. Also, we cannot use axis groups as input, at least not without major filtering. Even when set to playing axis grouped KAL appear to be updating on a different clock cycle, therefore making the averaged output of that KAL and another one flutter between a real average and the value of the non-axis KAL.\n\u003C/p\u003E\n\u003Cp\u003E\nBy the way, is your adder compatible with negative numbers with my method of just treating the middle of the play positon space as zero?\n\u003C/p\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-06T17:42:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224252869\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221678066624\u0022 data-ipsquote-userid=\u0022187428\u0022 data-ipsquote-username=\u0022HB Stratos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 3/6/2023 at 2:37 AM, HB Stratos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAbsolutely awesome work! I don\u0027t have much time rn, university exam season and all. but this is actually proving to be feasible.\n\u003C/p\u003E\n\u003Cp\u003E\nI was always wondering how a full loop of KALs would work. Usually there\u0027s the problem that a KAL cannot be disabled as when you set a KALs position from another KAL it skips around, never playing action groups. But in this case we can just have one single KAL that does actually play with a play speed above zero, essentially acting as our clock. And that one would be the only one allowed to use action groups to set a KAL playing or not for the bus to work. If that\u0027s not an option, the slightly messy workaround of having one KAL set the play speed of another KAL which is set to loop and will click an action group if play speed is increased would also work.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nA word of caution though, when playing with complex KAL mechanics on my 1k part concorde I have run into the issue of larger time skips causing issues with the averaging skipping around more. If we end up running into lag we may need to clock down the CPU beyond what the physics tick rate dropping would already do to ensure reliable function. Also, we cannot use axis groups as input, at least not without major filtering. Even when set to playing axis grouped KAL appear to be updating on a different clock cycle, therefore making the averaged output of that KAL and another one flutter between a real average and the value of the non-axis KAL.\n\u003C/p\u003E\n\u003Cp\u003E\nBy the way, is your adder compatible with negative numbers with my method of just treating the middle of the play positon space as zero?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFor the adder: unfortunately I guess it isn\u0027t. Oh well, if you do the 2\u0027s complement-plus-one thing yourself it will probably work, one more piece of hardware to do \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI think that for running actions we could like have all of them happen in less than 0.04 sec. (one phys-frame) in a single KAL. Like maybe we can have one KAL for each OPcode or something, that plays a sequence that basically enables/disables other KALs. I don\u0027t know if enabling then disabling a KAL in the same phys-frame would enable it for a bt, or not. More experiments to do I guess...\n\u003C/p\u003E\n\u003Cp\u003E\nI tried a 2-KAL-loop and oh well. The game doesn\u0027t seem to like it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EEDIT from roughly one day later:\u003C/span\u003E I\u0027ll try extra-short KALs in the following days to see what we can do it the whole KAL plays in one phys-frame.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-03-07T17:33:26Z\u0022 title=\u002203/07/2023 05:33  PM\u0022 data-short=\u00221 yr\u0022\u003EMarch 7, 2023\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003Cbr\u003EOne day later...\n\u003C/span\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-08T17:49:07Z","Content":"\n\u003Ctable align=\u0022center\u0022 border=\u00224\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:50%;\u0022\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003ELog 23.5\u003C/span\u003E\u003C/strong\u003E\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003C/tbody\u003E\n\u003C/table\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWheee!\n\u003C/p\u003E\n\u003Cp\u003E\nThrough testing, I found some interesting stuff: It seems that, as long as we have 1 action or less for 0.04s the sequence is correctly executed. If there are more, some may go missing.\u003Cbr\u003E\nAn example is my try at a TAB operation (A-\u0026gt;B), it works only if the length of the KAL is 0.08s or more. I don\u0027t know what it does if there\u0027s some lag. Needs testing I guess.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, I\u0027ve added the six transfer instructions to the adder\u002Bbus thing, as well as ADD (A\u002BB-\u0026gt;A). One KAL is reserved for ADC (ADD with carry). I\u0027ll probably add a carry storage once I\u0027ll be done with that, should be soon.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_043.png\u0022 src=\u0022https://web.archive.org/web/20240304072704/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_043.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis \u0022thing\u0022 (tell me if you have a better name) can be either active or inactive, the latter being the default state. It will only do meaningful operations when activated, and to switch between states press \u00270\u0027, or whatever key is associated with AG 10.\n\u003C/p\u003E\n\u003Cp\u003E\nThe seven possible instructions have been packed in seven different KALs: TAB, TBA, TAC, TCA, TBC, TCB, ADD. Their location is shown in the picture above.\n\u003C/p\u003E\n\u003Cp\u003E\nTo execute an instruction, simply play the associated KAL. Nothing more!\u003Cbr\u003E\nOK, avoid executing two instructions simultaneously please... That\u0027ll break stuff - but otherwise it\u0027s safe.\n\u003C/p\u003E\n\u003Cp\u003E\nIn order to be able to load stuff into the registers, I connected a KAL (labelled \u0022C Register Loader\u0022) to the C register. If it is enabled and you write in it, whatever you write will be stored into the C register. You can then use one of the transfer instructions to put that data into another register.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n\u003Cu\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003EInstruction Set\u003C/span\u003E\u003C/strong\u003E\u003C/u\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n* \u003Cstrong\u003ETAB\u003C/strong\u003E : Copies data from the A register into the B register.\u003Cbr\u003E\n* \u003Cstrong\u003ETBA\u003C/strong\u003E : Copies data from the B register into the A register.\u003Cbr\u003E\n* \u003Cstrong\u003ETAC\u003C/strong\u003E : Copies data from the A register into the C register.\u003Cbr\u003E\n* \u003Cstrong\u003ETCA\u003C/strong\u003E : Copies data from the C register into the A register.\u003Cbr\u003E\n* \u003Cstrong\u003ETBC\u003C/strong\u003E : Copies data from the B register into the C register.\u003Cbr\u003E\n* \u003Cstrong\u003ETCB\u003C/strong\u003E : Copies data from the C register into the B register.\u003Cbr\u003E\n* \u003Cstrong\u003EADD\u003C/strong\u003E : Adds the values of registers A and B, then puts the result back in A. For the moment, there\u0027s no carry support.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMore pictures:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_040.png\u0022 src=\u0022https://web.archive.org/web/20230311194514/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_040.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg class=\u0022ipsImage\u0022 alt=\u0022KALlogic_042.png\u0022 src=\u0022https://web.archive.org/web/20240304072706/https://raw.githubusercontent.com/Nazalassa/Files/main/KSP/KALlogic/KALlogic_042.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, if you want to check the 133.4 MiB gif where I add 42\u002B71, it\u0027s here: \u003Ca href=\u0022https://imgur.com/vRdED09.gif\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://imgur.com/vRdED09.gif\u003C/a\u003E [sorry, it has been cut by Imgur... \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E ]\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nDownload: \u003Ca href=\u0022https://kerbalx.com/Nazalassa/256-Analog-Computer-Prototype\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kerbalx.com/Nazalassa/256-Analog-Computer-Prototype\u003C/a\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-03-04T07:28:26Z\u0022 title=\u002203/04/2024 07:28  AM\u0022 data-short=\u0022Mar 4\u0022\u003EMarch 4\u003C/time\u003E by Nazalassa\u003C/strong\u003E\n\u003Cbr\u003EMoved log 23.5 here\n\u003C/span\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-10T01:19:16Z","Content":"\n\u003Cp\u003E\nSuper cool stuff, love to see it. I think by now we have proven that a full computer is possible, and I\u0027m excited to see how far we can go.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI in the meantime have made progress on the parser. It still is very janky, in desperate need of a re-write. It will break on stuff like the panther engine where one engine with two same moduleEngines exist, but otherwise it appears to be working, if very ugly (unused code, unreadable code, outdated comments, etc) . Since it is so heavily WIP I will not throw it on github yet, but if you\u0027re interested in using it already and maybe helping me fix stuff, here it is:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\u003Cspan class=\u0022kwd\u0022\u003Efrom\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E pprint \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E pprint\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E re\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E collections\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eabc \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E# for deep_update\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#from https://stackoverflow.com/questions/3232943/update-value-of-a-nested-dictionary-of-varying-depth\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E deep_update\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etarget\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E update\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E k\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E update\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eitems\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E():\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E isinstance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ev\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E collections\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eabc\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EMapping\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            target\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ek\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E deep_update\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etarget\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eget\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ek\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{}),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            target\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ek\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E target\n\n\n\n\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u0022\u0022\ndef findFirstLineWithPattern(data:str, pattern:str) -\u0026gt; int :\n\n    pattern:pattern = re.compile(pattern)\n\n    match = re.search(pattern, data)\n    if match:\n        index = data[:match.start()].count(\u0022\\n\u0022)\n    else:\n        raise ValueError(\u0022no match for pattern found in data\u0022)\n\n    return index\n\u0022\u0022\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parseCraftHeader\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EheaderString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    headerDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    headerLines\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elist \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E headerString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Esplit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\\n\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E headerLines\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 = \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            key\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E value \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Esplit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 = \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            headerDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ekey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E value\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            headerDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eline\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E headerDict\n\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E splitStringByMODULE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E list\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    outputList \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    index \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efind\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022{\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E index \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eraise\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EValueError\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022No { defining a module could be found\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        previousLineIndex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erfind\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\\n\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E index\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        outputList \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpreviousLineIndex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E],\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpreviousLineIndex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:]]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E outputList\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E splitIntoSections\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E list \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    outputList \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    i \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003ETrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \n\n        i \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _processLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etry\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E key\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E value \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Esplit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 = \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eexcept\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EValueError\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003ENone\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ekey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E value\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _recurseAddToPartDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EinputDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Edict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elist\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E len\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EnameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EnameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E inputDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EnameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _recurseAddToPartDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EinputDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:])}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E recurseParseCraftPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ElineList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elist\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n\n    \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u0022\u0022\n    while True:\n        if line = ALLCAPS, followed by {\n            find matching closing brace\n                throw content into recursion\n                remove content from lineList\n    \n    \u0022\u0022\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    partDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    tempDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    indexStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elist \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    nameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elist \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    processedIndices\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elist \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    currentDepth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    previousDepth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E enumerate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ElineList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022{\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etry\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lineList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ei\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eexcept\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EIndexError\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eraise\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EValueError\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022open brace had no NAME, corruption?\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            indexStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eappend\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ei\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E# do -1 because of NAME before {\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            nameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eappend\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ElineList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ei\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n            previousDepth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E currentDepth\n            currentDepth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022}\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n            start \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E indexStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epop\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            currentSection \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lineList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ei\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#i\u002B1 to truncate NAME and to make it inclusive\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            currentNAME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epop\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            currentDepth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n            \n\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E localIndex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E enumerate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcurrentSection\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                realIndex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E localIndex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E start \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#\u002B1 needed as we start the currentSection at start\u002B1, lovely off-by-one error\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E realIndex \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E processedIndices \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Econtinue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022{\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022}\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Econtinue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n                    tempDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022#NAME\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E currentNAME\n                    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#for line in currentSection: \u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                    tempDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eupdate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_processLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eline\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E range\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n                \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enot\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E processedIndices\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E processedIndices\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eappend\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ei\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nameStack \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                updateDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _recurseAddToPartDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E({\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcurrentNAME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E tempDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E},\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nameStack\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                partDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E deep_update\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpartDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E updateDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\\n-----\\n\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            pprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EtempDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sort_dicts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\\n\\n\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            pprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EupdateDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sort_dicts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\\n\\n\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            pprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpartDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sort_dicts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            tempDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eclear\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    pprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpartDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sort_dicts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partDict\n\n\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parseCraftPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpartString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    partDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#nestedList = re.findall(r\u0022{(?:[^{}]|(?R))*}\u0022, partString)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#build a nested list of all curly braces\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#loop over all curly braces, handle stuff\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    partDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E recurseParseCraftPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpartString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Esplit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\\n\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partDict\n\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parseCraftParts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpartsString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n    partsDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    partsList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elist \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E re\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Esplit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Er\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022(?=PART\\n)\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partsString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#new_list = [expression for item in iterable if condition]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    partsList \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partsList \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E part \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partsList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        partsDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eupdate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EparseCraftPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partsDict\n\n\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parseCraft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcraftData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    craftDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    craftData \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E craftData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ereplace\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027\\t\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#create a string slice of craftData containing only the header so we don\u0027t have to split the entire string\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    headerEnd \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E re\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Esearch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022PART\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcraftData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    headerString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E craftData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EheaderEnd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    partsString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estr \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E craftData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EheaderEnd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n\n    craftDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022header\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parseCraftHeader\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EheaderString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n    craftDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022parts\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parseCraftParts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpartsString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E craftDict\n\n\ncraftFile \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E open\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027Kal Test.craft\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027r\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcraftFile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\ncraftData \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E craftFile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eread\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#turns out craft files are not really json, but kinda close\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\ncraftDict \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parseCraft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcraftData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\npprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcraftDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sort_dicts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcraftDict\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-03-10T01:20:13Z\u0022 title=\u002203/10/2023 01:20  AM\u0022 data-short=\u00221 yr\u0022\u003EMarch 10, 2023\u003C/time\u003E by HB Stratos\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-10T17:11:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224255885\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221678411156\u0022 data-ipsquote-userid=\u0022187428\u0022 data-ipsquote-username=\u0022HB Stratos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, HB Stratos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSuper cool stuff, love to see it. I think by now we have proven that a full computer is possible, and I\u0027m excited to see how far we can go.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell ,I got working RAM -- the registers. Even if it won\u0027t be really usable in large clusters -- three KALs per byte... Er, no, that\u0027s too much.\n\u003C/p\u003E\n\u003Cp\u003E\nWe need to find a way to put more RAM into less KALs, but concatenating two values into one KAL will be impossible, due to potentialprecision errors. Maybe some kind of... Grid? Data compression? I don\u0027t know.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI think I\u0027ll start working on a python script with tk to have a \u0022user-friendly\u0022 way to directly edit KAL sequences. I think. I may start working on it in some time. May.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:right;\u0022\u003E\n(sorry, not the month)\n\u003C/p\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-10T17:31:10Z","Content":"\n\u003Cp\u003E\nAlso I think it\u0027s time to start thinking about sensors. Like, we can have single-use \u0022same-ship\u0022 sensors (i.e sensors that can tell whether they\u0027re attached to the ship, or not, in which case they either exploded or were thrown away), but...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nInput sensors (Action groups) can be made, that\u0027s quite easy.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs for output, anything that can be controlled by action groups can be made. Like wheel speed and turning, \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E thrusting, engines, ladders, or even science experiments.\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe there is a way to trick the game into storing say, a pressure or temperature data into a KAL (with play position)? Maybe. Needs experiments.\n\u003C/p\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-10T17:37:46Z","Content":"\n\u003Cp\u003E\nI have done some research on sensors. as far as I know I invented the impact sensor, and make some torpedos with explosion triggers with that. But actual sensors that are more than single use have this far proven to be near impossible. I haven\u0027t found a way yet to have something - anything in the environment influence the play position of a KAL.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSome theories that come to mind would be that we have proven that breaking links is detectable, so maybe breaking a docking port and redocking would be resettable, but I doubt the KAL would gain the curves it lost back.\u00A0\u003Cbr\u003E\nSo I guess we need to look deeper, perhaps abuse changing tick rates or KAL update rates somehow. I don\u0027t know how yet, but that\u0027s the best I can think of so far. All my other sensors have been using purely mechanical systems. for example my full auto spoilers don\u0027t need a single KAL to function.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Nazalassa","CreatedById":217956,"CreatedDateTime":"2023-03-10T17:46:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224256255\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221678469866\u0022 data-ipsquote-userid=\u0022187428\u0022 data-ipsquote-username=\u0022HB Stratos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, HB Stratos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo I guess we need to look deeper, perhaps abuse changing tick rates or KAL update rates somehow. I don\u0027t know how yet, but that\u0027s the best I can think of so far.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy guess on this is that we need to know how much events can happen in a single phys-tick, however it seems infinite... So um, I don\u0027t think we can \u0022push\u0022 a KAL\u0027s update time by just putting a bunch of other things that add some \u0022latency\u0022 (understand: generating enough events to make the KAL not update during this phys-frame).\n\u003C/p\u003E\n\u003Cp\u003E\nNow, I \u003Cem\u003Ethink\u003C/em\u003E a throttle sensor \u003Cstrong\u003Eis\u003C/strong\u003E possible. Just hook the KAL\u0027s play position to the \u0022throttle\u0022 axis group (AG) and it will work (I hope).\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, sensors for player (ship control) input can be done the same way, just hooked to one of the rotate/translate AGs.\n\u003C/p\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-10T18:16:52Z","Content":"\n\u003Cp\u003E\nAxis group \u0022sensors\u0022 aren\u0027t really sensors. They are more like a keyboard, player input. Also because axis groups only respond to player input, and sadly don\u0027t respond to \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E and the like. If they did we\u0027d have a real-world sensor right there.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso worth noting is that the update rate for Axis groups affecting a KAL appears to be different to that of a KAL updating another KAL, which leads to a flickering input if a KAL and an Axis group affect another KAL simultaneously. That sort of tick rate flickering is what I was theorizing that it could be used for some sort of sensor, though I don\u0027t know how yet.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnother thing, there\u0027s this section in the KALs craft file:\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv style=\u0022background-color:#1e1e1e;color:#d4d4d4;font-size:14px;\u0022\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 AXISGROUPS\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 {\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 sequencePosition\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 axisGroup = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003ENone\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 axisIncremental = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 axisSpeedMultiplier = \u003C/span\u003E\u003Cspan style=\u0022color:#b5cea8;\u0022\u003E0\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 axisInverted = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003ENone\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 overrideIncremental0 = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 overrideIncremental1 = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 overrideIncremental2 = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 overrideIncremental3 = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 sequencePlaySpeed\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 axisGroup = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003ENone\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 axisIncremental = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 axisSpeedMultiplier = \u003C/span\u003E\u003Cspan style=\u0022color:#b5cea8;\u0022\u003E0\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 axisInverted = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003ENone\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 overrideIncremental0 = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 overrideIncremental1 = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 overrideIncremental2 = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 overrideIncremental3 = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EPitch, Yaw, Roll, TranslateX, TranslateY, TranslateZ, WheelSteer, WheelThrottle, Custom01, Custom02, Custom03, Custom04\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 }\u003C/span\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nI wonder whether it would be possible to hack this somehow so that e.g. the position of a sensor would affect the play position of a KAL. sounds near impossible... but maaaaybe..\n\u003C/p\u003E\n"},{"CreatedByName":"Jacob Kerman","CreatedById":223574,"CreatedDateTime":"2023-03-10T19:23:52Z","Content":"\n\u003Cp\u003E\nSo let me get this straight.\n\u003C/p\u003E\n\u003Cp\u003E\nYou two are building a computer out of modules of KAL-1000 controllers.\n\u003C/p\u003E\n\u003Cp\u003E\nIt can only sense one type of event.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd it is soon to reach basic 8-bit computer standards.\n\u003C/p\u003E\n\u003Cp\u003E\nPlease tell me how this works, as I have no idea about how this works. I can tell\u00A0you how to fix a car, how to build a rocket, and how to wire a house, but I know very little about coding.\n\u003C/p\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-10T21:29:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224256321\u0022 data-ipsquote-contentid=\u0022214231\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221678476232\u0022 data-ipsquote-userid=\u0022223574\u0022 data-ipsquote-username=\u0022Jacob Kerman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Jacob Kerman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo let me get this straight.\n\u003C/p\u003E\n\u003Cp\u003E\nYou two are building a computer out of modules of KAL-1000 controllers.\n\u003C/p\u003E\n\u003Cp\u003E\nIt can only sense one type of event.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd it is soon to reach basic 8-bit computer standards.\n\u003C/p\u003E\n\u003Cp\u003E\nPlease tell me how this works, as I have no idea about how this works. I can tell\u00A0you how to fix a car, how to build a rocket, and how to wire a house, but I know very little about coding.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI can\u0027t fully explain everything, but you can read up on the basics of what you can do with KAls on my kerbalX posts:\u00A0\u003Ca href=\u0022https://kerbalx.com/HB_Stratos/Analog-Subtraction\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kerbalx.com/HB_Stratos/Analog-Subtraction\u003C/a\u003E\u00A0,\u00A0\u003Ca href=\u0022https://kerbalx.com/HB_Stratos/Smoothed-State-Follower\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kerbalx.com/HB_Stratos/Smoothed-State-Follower\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/217956-nazalassa/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022217956\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/217956-nazalassa/\u0022 rel=\u0022\u0022\u003E@Nazalassa\u003C/a\u003E\u00A0by the way in my research of craft files I discovered something:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nLook at that movementTransformName... You can enter any transform there. So far I have gotten it to work with model, light_08 and spotlight. The first two make the entire spotlight move including it\u0027s base, while the last one only makes the light move without even moving the lamp (It\u0027s the spotlight you can pitch and yaw around). I am currently trying to find out which unity function they are using to parse that string, and then try to do path traverse so I can modify parts outside of the current part to move around. Would you have any ideas how any of this could work?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv style=\u0022background-color:#1e1e1e;color:#d4d4d4;font-size:14px;\u0022\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003EMODULE\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 {\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 name = \u003C/span\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003EModuleLight\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 isEnabled = \u003C/span\u003E\u003Cspan style=\u0022color:#569cd6;\u0022\u003ETrue\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 isOn = \u003C/span\u003E\u003Cspan style=\u0022color:#569cd6;\u0022\u003ETrue\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 uiWriteLock = \u003C/span\u003E\u003Cspan style=\u0022color:#569cd6;\u0022\u003EFalse\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 disableColorPicker = \u003C/span\u003E\u003Cspan style=\u0022color:#569cd6;\u0022\u003EFalse\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 lightR = \u003C/span\u003E\u003Cspan style=\u0022color:#b5cea8;\u0022\u003E0.875\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 lightG = \u003C/span\u003E\u003Cspan style=\u0022color:#b5cea8;\u0022\u003E0.875\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 lightB = \u003C/span\u003E\u003Cspan style=\u0022color:#b5cea8;\u0022\u003E0.875\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 castLight = \u003C/span\u003E\u003Cspan style=\u0022color:#569cd6;\u0022\u003ETrue\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0\u003Cstrong\u003E \u00A0 movementTransformName = \u003C/strong\u003E\u003C/span\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#ce9178;\u0022\u003ELamp\u003C/span\u003E\u003C/strong\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 isBlinking = \u003C/span\u003E\u003Cspan style=\u0022color:#569cd6;\u0022\u003EFalse\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 rotationAngle = \u003C/span\u003E\u003Cspan style=\u0022color:#b5cea8;\u0022\u003E0\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 pitchAngle = \u003C/span\u003E\u003Cspan style=\u0022color:#b5cea8;\u0022\u003E-22\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 blinkRate = \u003C/span\u003E\u003Cspan style=\u0022color:#b5cea8;\u0022\u003E1\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 stagingEnabled = \u003C/span\u003E\u003Cspan style=\u0022color:#569cd6;\u0022\u003ETrue\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 EVENTS\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cspan style=\u0022color:#d4d4d4;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 {\u003C/span\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n"},{"CreatedByName":"HB Stratos","CreatedById":187428,"CreatedDateTime":"2023-03-10T22:02:56Z","Content":"\n\u003Cp\u003E\nI had assumed that they likely use the unity transform.Find() function, which would allow path traverse with e.g. spotlight_08/Lamp/spotlight, but it doesn\u0027t appear to work. With said path traverse ./Lamp should equal Lamp, but only the latter actually works. So I am not entirely sure which function behind the scenes is evaluating this\u003Cbr\u003E\n\u003Ca href=\u0022https://nodachisoft.com/common/en/article/en000181/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://nodachisoft.com/common/en/article/en000181/\u003C/a\u003E\u003Cbr\u003E\n\u003Ca href=\u0022https://docs.unity3d.com/ScriptReference/Transform.Find.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://docs.unity3d.com/ScriptReference/Transform.Find.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-03-10T22:03:15Z\u0022 title=\u002203/10/2023 10:03  PM\u0022 data-short=\u00221 yr\u0022\u003EMarch 10, 2023\u003C/time\u003E by HB Stratos\u003C/strong\u003E\n\u003C/span\u003E\n"}]}