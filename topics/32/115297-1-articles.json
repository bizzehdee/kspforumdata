{"TopicId":115297,"ForumId":32,"TopicTitle":"Just why is KSP Physics so slow? (NOT a Rant)","CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-07T15:26:09Z","PageNum":1,"Articles":[{"CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-07T15:26:09Z","Content":"Ok, this seirously is a question out of genuine interest.\n\nNow, everyone knows the current version of PhysX is - ah \u0022seriously suboptimal\u0022 in it\u0027s internals and the new one is a lot better.\n\nMy problem is another one: How can KSP challenge a core with a 300 part rocket...\n\n...when there are demos where you have thousands of particles simulated in real time?\n\nBeing a programmer that never did any physics work - I wonder what the difference here is. I am not accusing Squad of crappy programming - please, this is not a rant. I just have a mental problem moving from 300 parts taxing a core to PhysX demos showing thousands of cubes falling onto a table, so to say. What is it that is eating all this processing power?\n\nTHere are also other (simpler) games where you can build spaceships out of cubes (space engineer) and that has no problem with spaceships being a lot larger than 300 parts.\n\nI am quite sure I overlook something - if someone can enlight me?"},{"CreatedByName":"xtoro","CreatedById":79015,"CreatedDateTime":"2015-07-07T15:27:13Z","Content":"PhysX uses the GPU, KSP uses the CPU... GPU\u0027s can run many more calculations per second (GFLOPS) and have specific functions for physics calculations (PhysX).\n\n**Edited \u003Ctime datetime=\u00222015-07-07T15:46:13Z\u0022 title=\u002207/07/2015 03:46  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 7, 2015\u003C/time\u003E by xtoro**"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-07-07T15:43:17Z","Content":"\u003E \n\u003E PhysX uses the GPU, KSP uses the CPU...\n\nPhysX runs on CPUs, too, in fact that is the more common implementation. GPU-accelerated PhysX is the exception rather than the norm. KSP\u0027s physics bubble runs PhysX on the CPU.\n\nTheTom, the difference is that independent particles can be easily threaded, they only threadlock when they collide and even then only for the particles colliding. KSP vessels are a set of chained, constrained rigidbodies, the motion of each body is dependent on the others and it is not an easily threadable task. Performance seems to be tied to partcount, and is worse than O(n), perhaps as bad as O(n!)\n\nAs I understand it Space Engineer melds the component parts into a single rigidbody for increased performance and rigidity. Such a solution could theoretically increase performance for KSP, but we\u0027d lose the \u0022wobbliness\u0022 and individual part destruction. Whether this is a good tradeoff is left as an exercise for the reader, but AFAIK the devs are fairly set on keeping some wobbliness in KSP spacecraft."},{"CreatedByName":"DaMichel","CreatedById":93697,"CreatedDateTime":"2015-07-07T15:43:56Z","Content":"In your usual particle systems the motion of each particle can be advanced independent of all the others. But with joints between parts, one cannot do that any more and one has to solve the equations of motion of the entire system simultaneously. AFAIK that is quite expensive. \n\nPlus particle systems use mostly point particles so only position degrees of freedom are there. With rigid bodies one has to deal with rotation degrees of freedom, too.\n\nIf there are multiple ships in the scene, collision detection is performed in addition to everything else, which is also rather costly.\n\nEdit: Ninjad! ![:wink:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)\n\n**Edited \u003Ctime datetime=\u00222015-07-07T15:47:17Z\u0022 title=\u002207/07/2015 03:47  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 7, 2015\u003C/time\u003E by DaMichel**"},{"CreatedByName":"Arsonik","CreatedById":79705,"CreatedDateTime":"2015-07-07T15:47:20Z","Content":"\u003E \n\u003E PhysX runs on CPUs, too, in fact that is the more common implementation. GPU-accelerated PhysX is the exception rather than the norm. KSP\u0027s physics bubble runs PhysX on the CPU.\n\u003E TheTom, the difference is that independent particles can be easily threaded, they only threadlock when they collide and even then only for the particles colliding. KSP vessels are a set of chained, constrained rigidbodies, the motion of each body is dependent on the others and it is not an easily threadable task. Performance seems to be tied to partcount, and is worse than O(n), perhaps as bad as O(n!)\n\u003E \n\u003E As I understand it Space Engineer melds the component parts into a single rigidbody for increased performance and rigidity. Such a solution could theoretically increase performance for KSP, but we\u0027d lose the \u0022wobbliness\u0022 and individual part destruction. Whether this is a good tradeoff is left as an exercise for the reader, but AFAIK the devs are fairly set on keeping some wobbliness in KSP spacecraft.\n\nWhat if we could \u0022weld\u0022 individual stages together? I\u0027m not talking about the Ubizor mod. That thing was buggy as hell, fun as it was. A stock implementation.. Optional perhaps? A huge construct would still wobble like crazy between stages. But it wouldn\u0027t look like fuel tanks are made of paper-mache anymore. And? Lowered part count! I\u0027m sure SQUAD has already considered all the possibilities of full/partial ship welding since Ubizor has been around for quite awhile now and been rather popular. Im not really preaching for or against part welds, but I think this would make a cool stock implementation."},{"CreatedByName":"xtoro","CreatedById":79015,"CreatedDateTime":"2015-07-07T15:49:38Z","Content":"I came up with a theoretical solution to multithread the physics here: [http://forum.kerbalspaceprogram.com/threads/126094-Is-Kerbal-Space-Program-Single-Threaded?p=2032605\u0026viewfull=1#post2032605](https://forum.kerbalspaceprogram.com/threads/126094-Is-Kerbal-Space-Program-Single-Threaded?p=2032605\u0026viewfull=1#post2032605)\n\n(post #15)\n\n**Edited \u003Ctime datetime=\u00222015-07-07T15:58:23Z\u0022 title=\u002207/07/2015 03:58  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 7, 2015\u003C/time\u003E by xtoro**"},{"CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-07T16:29:11Z","Content":"Well, thanks so far.\n\nI think KSP would greatly benefit from SOME automatic welding happening. IGnore the wobbleness of the heavy parts - but what about the tons of small stuff that never gets problematic?\n\nI just now watch a capsulre approach Minimus that has 3 lights, 3 parachutes, 4 packs of 6 experiments each (and those are small, the largest is the mistery goo). Right there (including the capsule carrying it all) that is 28 parts to 1 ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)\n\nSo, if welding brings something - start with the small amounts of stuff that never has an issue. Experiments, RCS ports etc. that do not really factor into the wobble.\n\nThat said - Space Engineer is NOT welding the parts together. If you watch\n\n\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/N64VM3__HO0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n at least you can see how the welding is falling apart quite fast. Or at least they do track damage still on a per voxel level - the colissions do not \u0022destroy\u0022 the vessels as much as they damage them (and destory voxels).\nSo, going down you basically tell me that this is a crap problem with worse than O(n) because threading simply is not possible? Then this is quite a PhysX limitation. It seems some others (engines) can do more here (bullet and I found something about multi threaded rigidbdy using OpenCL on a GPU - though a research paper) - but man, it is quite a limitation."},{"CreatedByName":"Arsonik","CreatedById":79705,"CreatedDateTime":"2015-07-07T16:44:03Z","Content":"\u003E \n\u003E That said - Space Engineer is NOT welding the parts together. If you watch\n\u003E \n\u003E \n\u003E \u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/N64VM3__HO0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n\u003E  at least you can see how the welding is falling apart quite fast.\n\nThe destruction in that video simply didn\u0027t look anything like that in KSP in my opinion."},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-07-07T16:45:48Z","Content":"\u003E \n\u003E That said - Space Engineer is NOT welding the parts together. If you watch\n\u003E \n\u003E \u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/N64VM3__HO0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n\u003E  at least you can see how the welding is falling apart quite fast. Or at least they do track damage still on a per voxel level - the colissions do not \u0022destroy\u0022 the vessels as much as they damage them (and destory voxels).\n\nI haven\u0027t played SE, but in the video it looks like each vessel is a single rigidbody, a rigidbody that is changed on the fly to represent damage (witness how the ships do not flex at all despite energetic collisions). That\u0027s a pretty sophisticated damage model, would be great for KSP to have something similar.\n\n\u003E \n\u003E So, going down you basically tell me that this is a crap problem with worse than O(n) because threading simply is not possible? Then this is quite a PhysX limitation. It seems some others (engines) can do more here (bullet and I found something about multi threaded rigidbdy using OpenCL on a GPU - though a research paper) - but man, it is quite a limitation.\n\nBullet doesn\u0027t multithread constrained rigidbody chains afaik, everything I\u0027ve read about multithreaded implementations is still in academia (and in fairness that is reasonable; few if any games other than KSP use constrained chains for single objects, certainly not chains consisting of hundreds or thousands of rigidbodies).\n\nFor better or worse this is what KSP has: A difficult-to-thread model of vessels and an engine that has some limitations. I don\u0027t see the game changing engines at this point (maybe if they ever make a KSP 2), best we can hope for is better performance from Unity (which it looks like we\u0027ll see to some degree with Unity 5) or possibly some form of stock part amalgamation."},{"CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-07T17:02:15Z","Content":"Again, this was not meant as a rant.... so yes, it looks like rigidbody is a fundamental issue and KSP just goes crazy on it (due to what the game does). So yes, welding would be likely the only solution for that. Damn, would never have thought that this really is that unusual.\n\nWatches something about some racing game that looks amazing in their crashes and the dev blog said their physics engine (for around 20 or so cars) runs with 200 FPS... And crashes are deforming. You are not telling me this is not rigidbody either? I mean, how can you make a car and track deformation and damage zones and NOT simulate the car at least as some parts... But then, O(n2) or something worse means every part counts."},{"CreatedByName":"Vicomt","CreatedById":93574,"CreatedDateTime":"2015-07-07T17:12:33Z","Content":"On the Space Engineers side, a ship is essentially a cube-grid, damage is done to individual cubes within the grid, running physics calcs for player movement, inertia, limited (weird) gravity, and grid/grid intersections is a whole lot quicker then working on the proper physics we have in KSP.\n\nIt\u0027s like the difference between linear and quadratic curves, SE\u0027s increase of 100x the number of blocks is computationally the equivalent of 10x the number of KSP parts (numbers mangled for the benefit of me not having to do actual maths)"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-07-07T17:20:12Z","Content":"I\u0027m not really familiar with the racing game mentioned, but there are a few things that could be happening:\n\n- With multiple rigidbody chains it is relatively easy to have a thread for each chain; in KSP this is of limited usefulness for single vessels but would help with multiple loaded vessels and staging events (and I think this is coming with Unity5). For a racing game with many cars it is much more useful, one thread per car means the load can be spread around multiple cores.\n\n- Using primitives rather than meshes for the colliders can increase performance. In KSP most (all?) parts use meshes for their colliders (both for better accuracy and because the common primitive shapes aren\u0027t suitable for most parts). If the components of the racecar (of which there are only a handful, I\u0027d bet) are all using primitive colliders then performance should be better.\n\n- It is possible it is not a rigidbody at all, but instead a single deformable body. I don\u0027t know enough about those to comment on the relative performance of modelling them."},{"CreatedByName":"Nigeth","CreatedById":146838,"CreatedDateTime":"2015-07-07T17:34:24Z","Content":"It would help if the stock game stopped treating vessels as a collection of individual parts and didn\u0027t apply physics calculations to any part individually. While this is useful or even necessary for some components it\u0027s not for others.\n\nI think the biggest performance gain in stock could come from using a \u0022FAR-like\u0022 approach to physics modelling and to replace stock components with procedural parts where apropriate. In that case you wouldn\u0027t have to apply your model to a lot of individual wing parts because you can either treat them as/replace it with a single component that you then apply the modelling to.\n\nIf we had procedural tanks for example one wouldn\u0027t have to build big tanks by stacking smaller ones on top of each other and if we had procedural wings one wouldn\u0027t have to build big wings by putting smaller ones together. In that example the physics model would then only have to be applied to one part rather than a collection of smaller ones that pretend to be one bigger part."},{"CreatedByName":"Laie","CreatedById":110461,"CreatedDateTime":"2015-07-07T17:53:50Z","Content":"For me, it has become a lot worse since heat is a thing.\n\nI expect that multithreading \\*will\\* help, at least when it comes to heat. I don\u0027t know if and how wobble and thrust can be computed in parallel, but the heat system seems to be independent of the structural system. They should be able to run alongside each other nicely.\n\nThe need to make everything pointy has inflated my part counts, big\\_adapter-\u003Esmall\\_adapter-\u003Enosecone... if multithreading cannot improve the physics situation, Squad should really really consider some means of reducing part count, be it through welding or otherwise."},{"CreatedByName":"11of10","CreatedById":90592,"CreatedDateTime":"2015-07-07T23:12:23Z","Content":"Regarding procedural parts, you can find some here:\n\nProcedural fairings: [http://forum.kerbalspaceprogram.com/threads/39512](https://forum.kerbalspaceprogram.com/threads/39512)\n\nProcedural tanks might be here: [http://forum.kerbalspaceprogram.com/threads/64117](https://forum.kerbalspaceprogram.com/threads/64117)\n\nor here: [http://forum.kerbalspaceprogram.com/threads/64118](https://forum.kerbalspaceprogram.com/threads/64118)\n\n(not sure exactly)\n\nand some procedural wings here: [http://forum.kerbalspaceprogram.com/threads/29862](https://forum.kerbalspaceprogram.com/threads/29862)\n\nand the welding of parts: [http://forum.kerbalspaceprogram.com/threads/107273](https://forum.kerbalspaceprogram.com/threads/107273)"},{"CreatedByName":"NoMrBond","CreatedById":69263,"CreatedDateTime":"2015-07-07T23:54:47Z","Content":"It is possible APEX modules (physics solver extensions) will be supported by Unity in the future (provided those modules support OpenCL), this has been hinted at but not confirmed.\n\nIf this did happen mesh deformation and destruction could be handled with the APEX Destruction extension for PhysX"},{"CreatedByName":"clivman","CreatedById":139191,"CreatedDateTime":"2015-07-08T00:07:31Z","Content":"Rigid body physics would improve performance by removing the need for struts(physics calculations are run on all of them too) as well. I vote for that."},{"CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-08T05:22:19Z","Content":"Seriously, if you ask me about that then I think the biggest change would be to structure the ship. The current staging approach gets ridiculous when you carry complex payloads.\n\nSeparate the ship and possible dormant payloads. Payloads get recalculated into a welded part with resistance numbers (how much pressure, shock can it handle). Then they are ONE part. Heck, if you WANT you can later run them as separate \u0022units\u0022 On separate threads in 5.\n\nSo, a launcher with 3 satellites on top would have all the parts of the launcher, and 3 parts - one for each satellite. The satellite either breaks or not. Once the fairing opens or through another event.... then the satellite gets activated and simulated properly.\n\nIt also means all the elements of the satellites would not show up in the staging - and that is not really negative.\n\nAnd for the heat - I also would ask how often that needs to be computed ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif) Physics in itself has to be very fine grained, but hat distribution could be handled a lot less often ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif) Possibly. What is the old rule for programming? NEVER guess performance, always attach a profiler. Right now it is flow, and I have no idea which part is wasting the performance.\n\nBut ok, I got from that thread what I wanted - and that is basically that it seems that I overlooked how crazy complex connected rigid body physics turns with the part count growing. Ouch. I was not aware this is fundamentally one of those really extremely computing explosive problems."},{"CreatedByName":"rkman","CreatedById":15721,"CreatedDateTime":"2015-07-08T07:59:28Z","Content":"\u003E \n\u003E My problem is another one: How can KSP challenge a core with a 300 part rocket...\n\u003E \n\u003E ...when there are demos where you have thousands of particles simulated in real time?\n\nBecause PhysX\u0027 typical use does not involve all particles (parts) constantly colliding with one another. In KSP adjacent parts are constantly colliding/interacting with one another and that makes for a lot more calculations than particles that mostly just fly through the air on their own and only bounce off a wall or floor a few times."},{"CreatedByName":"tomf","CreatedById":57809,"CreatedDateTime":"2015-07-08T08:15:09Z","Content":"I believe the purose of the physicsless flag if to effectively weld the parts to their parent and remove the need to run physics on them."},{"CreatedByName":"Sharpy","CreatedById":145504,"CreatedDateTime":"2015-07-08T08:33:21Z","Content":"BTW, do these thousands of cubes demos run on CPU or on GPU? What is their performance on CPU?"},{"CreatedByName":"Temeter","CreatedById":58056,"CreatedDateTime":"2015-07-08T08:37:48Z","Content":"\u003E \n\u003E PhysX runs on CPUs, too, in fact that is the more common implementation. GPU-accelerated PhysX is the exception rather than the norm. KSP\u0027s physics bubble runs PhysX on the CPU.\n\u003E TheTom, the difference is that independent particles can be easily threaded, they only threadlock when they collide and even then only for the particles colliding. KSP vessels are a set of chained, constrained rigidbodies, the motion of each body is dependent on the others and it is not an easily threadable task. Performance seems to be tied to partcount, and is worse than O(n), perhaps as bad as O(n!)\n\u003E \n\u003E As I understand it Space Engineer melds the component parts into a single rigidbody for increased performance and rigidity. Such a solution could theoretically increase performance for KSP, but we\u0027d lose the \u0022wobbliness\u0022 and individual part destruction. Whether this is a good tradeoff is left as an exercise for the reader, but AFAIK the devs are fairly set on keeping some wobbliness in KSP spacecraft.\n\nThere is one thing I don\u0027t understand: Why can\u0027t you just e.g. \u0027cut\u0027 a ship in two pieces and then let two threads (or in reality cores) calculate each half? KSP\u0027s tree structure means normally parts only have single connections. Shouldn\u0027t it be possible to make some process communicate said connection between the two threads? Maybe it would be somewhat more lenient or slightly lagging behind, but, without coding knowledge, it\u0027s hard to imagine what could go wrong in this case.\n\nI mean, if we can communicate a thousand boxes touching between multiple cores, why not a single connection?\n\n**Edited \u003Ctime datetime=\u00222015-07-08T08:43:26Z\u0022 title=\u002207/08/2015 08:43  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 8, 2015\u003C/time\u003E by Temeter**"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2015-07-08T09:30:39Z","Content":"\u003E \n\u003E I just now watch a capsulre approach Minimus that has 3 lights, 3 parachutes, 4 packs of 6 experiments each (and those are small, the largest is the mistery goo).\n\nI didn\u0027t see this addressed elsewhere in this thread, sorry if I missed it. Most of those parts are physicsless, which (from 1.0 on) means that their mass is added to the part they\u0027re stuck to, not themselves; and (since they introduced the concept to the game) that physics ignores them. Your Minmus probe likely has less than 10 parts in it an could actually just have 3 (probe, fuel, engine) as far as physics is concerned."},{"CreatedByName":"selfish_meme","CreatedById":125899,"CreatedDateTime":"2015-07-08T09:54:55Z","Content":"What I get confused about is PhysX, originally this was a hardware/software company purchased by Nvidia, and Then Unity 3d uses PhysX as the name of its physics engine, which may or may not be the same thing as apparently Unity upgrades to use PhysX, not the other way around."},{"CreatedByName":"Temeter","CreatedById":58056,"CreatedDateTime":"2015-07-08T10:28:07Z","Content":"\u003E \n\u003E What I get confused about is PhysX, originally this was a hardware/software company purchased by Nvidia, and Then Unity 3d uses PhysX as the name of its physics engine, which may or may not be the same thing as apparently Unity upgrades to use PhysX, not the other way around.\n\nIt\u0027s the same. NVidia bought Ageia when the crappy physics-cards didn\u0027t get anywhere, put PhysX chips on their cards and tried to use it for marketing purposes. Besides the chip, PhysX is a real physics engine. Pretty crappy at the beginning, apparently also too excacerbate the need for special chips and using very inefficient code. It\u0027s supposedly quite fine now and used by a number of games as a more general concurrent to engines like Havok. PhysX-effects are still somewhat of a marketing gag, but games like KSP don\u0027t even profit by NVidia GPUs. Long story short, Unity licensed PhysX as it\u0027s prime physics engine and integrated it into their engine."}]}