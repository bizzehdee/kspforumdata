{"TopicId":65040,"ForumId":32,"TopicTitle":"Update process?","CreatedByName":"Dimetime35c","CreatedById":78776,"CreatedDateTime":"2014-03-06T15:00:54Z","PageNum":1,"Articles":[{"CreatedByName":"Dimetime35c","CreatedById":78776,"CreatedDateTime":"2014-03-06T15:00:54Z","Content":"\n\u003Cp\u003EOkay I\u0027ve been wondering. What is the actual process that is used to create a update to the game? Say .23 cause from an outsiders point of view how would you pick what to tackle, I\u0027d try and do everything that needed doing and never get an update out.\u003C/p\u003E\n"},{"CreatedByName":"Pecan","CreatedById":96332,"CreatedDateTime":"2014-03-06T17:13:11Z","Content":"\n\u003Cp\u003EAn early agile software development method (DSDM) defined what is known as the MoSCoW rules for defining the scope of a release:\u003C/p\u003E\u003Cp\u003EMust Haves - there\u0027s no point to the release without any of these\u003C/p\u003E\u003Cp\u003EShould haves - important but not essential\u003C/p\u003E\u003Cp\u003ECould haves - while we\u0027re at it, it\u0027s easy to do this\u003C/p\u003E\u003Cp\u003EWould likes - write a letter to santa\u003C/p\u003E\u003Cp\u003EOnce you have a list like that the \u0027timebox\u0027 approach is to take the time it will need (with testing, etc) to include the top/most do-able \u0027must haves\u0027 (which define the release). Add on a bit of time for one or two easier \u0027should haves\u0027 and contingency and say \u0022that\u0027s when we\u0027ll release\u0022. Any unused contingency (you planned well) is used for a \u0027could have\u0027 or maybe even a \u0027would like\u0027 if one of the developers feels like it. If you run out of time you release with what you\u0027ve got, as long as it includes at least one \u0027must have\u0027. This approach is particularly useful where you have to co-ordinate and schedule with outside teams/agencies because you\u0027re telling them exactly when you\u0027ll be ready (if not what they\u0027ll get ^^).\u003C/p\u003E\u003Cp\u003EAn alternative is the \u0027workbox\u0027 approach where you decide on very specific functions that will be included but can\u0027t estimate how long it\u0027ll take (perhaps you know you \u003Cem\u003Ehave\u003C/em\u003E to have multiplayer but you don\u0027t even know where to start yet). In this you say \u0022It\u0027ll be ready when it\u0027s ready\u0022 - and people know what to expect, but not when. This is useful if you have long lead-times on things like printing manuals and publicity as they can plan accordingly.\u003C/p\u003E\u003Cp\u003EIn practice, of course, it\u0027s usually a bit of both and, in any case, modern agile methods are designed to allow for changes as you go along.\u003C/p\u003E\u003Cp\u003EThe older methods came from physical engineering and construction and mean you spend most of your time in planning meetings and by the time you make something it isn\u0027t what you\u0027d intended or the customer wants any more.\u003C/p\u003E\u003Cp\u003E[incidentally - you might like to ask this in the modding forum - all those poor developers get requests for additions and changes all the time and have to work out what they can do, when]\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-06T17:16:39Z\u0022 title=\u002203/06/2014 05:16  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 6, 2014\u003C/time\u003E by Pecan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-03-06T17:43:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pecan\u0022 data-cite=\u0022Pecan\u0022\u003E\u003Cdiv\u003Eall those poor developers get requests for additions and changes all the time and have to work out what they can do, when\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOr \u003Cstrong\u003EIF\u003C/strong\u003E, if you don\u0027t mind me adding that.\u003C/p\u003E\n"},{"CreatedByName":"FITorion","CreatedById":7606,"CreatedDateTime":"2014-03-06T18:27:47Z","Content":"\n\u003Cp\u003EFrom what I\u0027ve gleaned from watching this game for a while...\u003C/p\u003E\u003Cp\u003EThey have a meeting ... or a few meetings... where they discuss what they will put into the next update after they\u0027ve finished the current update. Items consist of must haves and at least one nice to have item. Then they go off and do that and each person or persons tests as best they can their piece. Then everything gets integrated together and it goes to the testing team. Bugfixing... then release.\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2014-03-06T18:33:55Z","Content":"\n\u003Cp\u003ETed\u0027s blog should help here, \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/entries/905-Branching-Out!\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003Etake a look \u003C/strong\u003E\u003C/a\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}