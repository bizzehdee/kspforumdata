{"TopicId":120160,"ForumId":32,"TopicTitle":"Use Git to manage Kerbal Space Program saves, ships and CKAN mods","CreatedByName":"jonasrosland","CreatedById":140857,"CreatedDateTime":"2015-09-04T22:46:27Z","PageNum":1,"Articles":[{"CreatedByName":"jonasrosland","CreatedById":140857,"CreatedDateTime":"2015-09-04T22:46:27Z","Content":"\n\u003Cp\u003EHi fellow Kerbonauts!\u003C/p\u003E\u003Cp\u003EI use a mix of Windows and Mac and I play KSP on both. I wanted to have the same setup (saves, ships and mods) on both, so I created a (fairly) simple to use guide to keep things in sync. What do you think?\u003C/p\u003E\u003Cp\u003EThe guide is located here: \u003Ca href=\u0022https://gist.github.com/jonasrosland/38ae48312267c6c9dd3b\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://gist.github.com/jonasrosland/38ae48312267c6c9dd3b\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"lincourtl","CreatedById":72218,"CreatedDateTime":"2015-09-05T01:28:15Z","Content":"\n\u003Cp\u003EGreat idea, regardless of whether you use CKAN or not. An easier way to do it might be to use a .gitignore file in the KSP root. However anyone does it, they should be certain they\u0027re not uploading Squad\u0027s IP to a public Github repo.\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-09-05T02:23:05Z","Content":"\n\u003Cp\u003EBut, don\u0027t you have to commit and push your save every time you leave the game?\u003C/p\u003E\u003Cp\u003ESeems like Dropbox and symbolic links would be more automatic. (Does Mac have symbolic links?)\u003C/p\u003E\u003Cp\u003EEDIT: Apparently it does. So yeah, put the save and GameData directory in Dropbox and then symbolic link it over to the KSP folder and the Dropbox app will upload changes automatically.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-05T02:26:49Z\u0022 title=\u002209/05/2015 02:26  AM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 5, 2015\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"LordFerret","CreatedById":111598,"CreatedDateTime":"2015-09-05T02:28:55Z","Content":"\n\u003Cp\u003EWouldn\u0027t a flash drive be easier?\u003C/p\u003E\n"},{"CreatedByName":"jonasrosland","CreatedById":140857,"CreatedDateTime":"2015-09-05T04:24:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lincourtl\u0022 data-cite=\u0022lincourtl\u0022\u003E\u003Cdiv\u003EGreat idea, regardless of whether you use CKAN or not. An easier way to do it might be to use a .gitignore file in the KSP root. However anyone does it, they should be certain they\u0027re not uploading Squad\u0027s IP to a public Github repo.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYup, that\u0027s true. I added the scenario and tutorial folder to .gitignore, a better way could probably be to gitignore everything and just force the folders you want to sync.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alshain\u0022 data-cite=\u0022Alshain\u0022\u003E\u003Cdiv\u003EBut, don\u0027t you have to commit and push your save every time you leave the game?\u003Cp\u003ESeems like Dropbox and symbolic links would be more automatic. (Does Mac have symbolic links?)\u003C/p\u003E\u003Cp\u003EEDIT: Apparently it does. So yeah, put the save and GameData directory in Dropbox and then symbolic link it over to the KSP folder and the Dropbox app will upload changes automatically.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s way too easy, that\u0027s not the Kerbal way!\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022LordFerret\u0022 data-cite=\u0022LordFerret\u0022\u003E\u003Cdiv\u003EWouldn\u0027t a flash drive be easier?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou can do that too, but I wanted a way to share my stuff as well (like entire setups, saves, ships etc) for anyone who\u0027d like to see anything someone else has created.\u003C/p\u003E\n"},{"CreatedByName":"amorymeltzer","CreatedById":111542,"CreatedDateTime":"2015-09-05T04:46:04Z","Content":"\n\u003Cp\u003EIf you want to use git, you could simply automate this - a rudimentary bash script could take care of all the the adding and committing. Personally, I just backup persistent.sfs after I quit, placed into dropbox with the time and date. Simple script, run it when I\u0027m done, no thinking. \u003Ca href=\u0022https://github.com/Amorymeltzer/dotfiles/blob/master/bin/ksp_backup_files.sh\u0022 rel=\u0022external nofollow\u0022\u003EHere\u0027s the source\u003C/a\u003E, also copied below:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E#!/usr/bin/env bash\u003Cbr\u003E# ksp_backup_files.sh by Amory Meltzer\u003Cbr\u003E# Simply copy pilot files to a save directory\u003Cbr\u003E\u003Cbr\u003Edateandtime=$(date \u002B%Y.%m.%d_%H%M%S)\u003Cbr\u003Efolderpath=\u0027/Users/Amory/Dropbox/KSPstuff/pilot_backups/\u0027$dateandtime\u003Cbr\u003Eksppath=\u0027/Applications/KSP_osx\u0027\u003Cbr\u003E\u003Cbr\u003Euserlist=$(ls -1 $ksppath\u0027/saves\u0027 | grep -v scenarios | grep -v training)\u003Cbr\u003E\u003Cbr\u003Emkdir \u0022$folderpath\u0022\u003Cbr\u003E\u003Cbr\u003Efor i in $userlist\u003Cbr\u003Edo\u003Cbr\u003E    cp \u0022$ksppath/saves/$i/persistent.sfs\u0022 \u0022$folderpath/$i.persistent.sfs\u0022\u003Cbr\u003Edone\u003Cbr\u003E\u003Cbr\u003Els -lFGh \u0022$folderpath/\u0022\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"jwenting","CreatedById":57735,"CreatedDateTime":"2015-09-05T04:48:01Z","Content":"\n\u003Cp\u003Ecould work if you run KSP from a batch/command file and add the commands to update and commit the persistence file before and after running KSP. Trick is getting the script to wait until operations complete.\u003C/p\u003E\u003Cp\u003ESo:\u003C/p\u003E\u003Cp\u003E- update\u003C/p\u003E\u003Cp\u003E- wait for completion\u003C/p\u003E\u003Cp\u003E- run KSP\u003C/p\u003E\u003Cp\u003E- wait until KSP terminates (tricky as it\u0027s run in a different process?)\u003C/p\u003E\u003Cp\u003E- commit\u003C/p\u003E\n"},{"CreatedByName":"Joshwoo70","CreatedById":111345,"CreatedDateTime":"2015-09-05T04:50:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alshain\u0022 data-cite=\u0022Alshain\u0022\u003E\u003Cdiv\u003EBut, don\u0027t you have to commit and push your save every time you leave the game?\u003Cp\u003ESeems like Dropbox and symbolic links would be more automatic. (Does Mac have symbolic links?)\u003C/p\u003E\u003Cp\u003EEDIT: Apparently it does. So yeah, put the save and GameData directory in Dropbox and then symbolic link it over to the KSP folder and the Dropbox app will upload changes automatically.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhen you have over 300mb of gamedata files... wait long long for dropbox to sync!\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-09-05T05:04:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Joshwoo69\u0022 data-cite=\u0022Joshwoo69\u0022\u003E\u003Cdiv\u003EWhen you have over 300mb of gamedata files... wait long long for dropbox to sync!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo your 300mb of mods change that frequently? If they do I would say you are doing something wrong. Dropbox only syncs files that change.\u003C/p\u003E\n"},{"CreatedByName":"katateochi","CreatedById":35181,"CreatedDateTime":"2015-09-05T13:48:00Z","Content":"\n\u003Cp\u003EI\u0027ve used git to maintain my KSP saves for a long time, mostly to have version control, but it has also been useful to be able to push/pull saves about.\u003C/p\u003E\u003Cp\u003EI don\u0027t init the repo in the root of KSP, I create a separate repo inside each save. So each repo just has craft and save files and no bits of Squad IP. \u003C/p\u003E\u003Cp\u003EInitially I used to just manually add/commit files as I played, then I wrote a tool to automate it and make it so someone with zero git experience can use it: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/72212-Jebretary-Automatic-Version-Control-%28backups%29-for-craft-and-saves-v0-4-0\u0022 rel=\u0022external nofollow\u0022\u003EJebretary\u003C/a\u003E, is a bit out of date, and has querks, but it still works in the current version of KSP (it\u0027s stand-alone so kinda immune to KSP update issues). Basically you tell it where KSP is installed (it can track multiple installs) and it sets up git repos in your save folders, then as you play KSP it watches for changes in files and automatically adds and commits them. It tracks every single change to persistent/quicksave files, with craft it waits until you launch the craft before committing, so you have a restore point for each variation that you launch (you can also tell it to commit whenever). \u003C/p\u003E\u003Cp\u003EFor tracking saves and craft files git is a perfect tool, it\u0027s something like 1000 times more space efficient while retaining the same resolution on changes. But I\u0027m not so sure about using it on GameData; when dealing with binary files it can\u0027t track individual line changes, so the whole file is duplicated each time it\u0027s updated and committed, even if the only change was the file\u0027s timestamp. So if you have a mod with a large texture, each time that mod is updated it will get updated in the repo resulting in another copy of that large texture file. So repo size can balloon quite quickly when dealing with large binary files. And anyway, if you have a 2GB GameData folder and you commit it, you now also have a 2GB repo.\u003C/p\u003E\u003Cp\u003EWith CKAN (and assuming all your mods are available via CKAN), then you could use git to track your saves and also track the installed-default.ckan file in the CKAN folder along with each commit. That way you could restore the mods you had installed for a particular save-backup by giving that file to CKAN. So no need to add mods to repos (which might inadvertently get put somewhere public).\u003C/p\u003E\n"},{"CreatedByName":"_stilgar_","CreatedById":147818,"CreatedDateTime":"2015-09-05T15:55:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022katateochi\u0022 data-cite=\u0022katateochi\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EFor tracking saves and craft files git is a perfect tool, it\u0027s something like 1000 times more space efficient while retaining the same resolution on changes. But I\u0027m not so sure about using it on GameData; when dealing with binary files it can\u0027t track individual line changes, so the whole file is duplicated each time it\u0027s updated and committed, even if the only change was the file\u0027s timestamp. So if you have a mod with a large texture, each time that mod is updated it will get updated in the repo resulting in another copy of that large texture file. So repo size can balloon quite quickly when dealing with large binary files. And anyway, if you have a 2GB GameData folder and you commit it, you now also have a 2GB repo.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGit Annex is the tool you are looking for. \u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://git-annex.branchable.com/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://git-annex.branchable.com/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EYou can keep files in git without actually keeping them in git \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E This solves the problem with binary files in repo.\u003C/p\u003E\n"},{"CreatedByName":"LordFerret","CreatedById":111598,"CreatedDateTime":"2015-09-05T16:33:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022jwenting\u0022 data-cite=\u0022jwenting\u0022\u003E\u003Cdiv\u003Ecould work if you run KSP from a batch/command file and add the commands to update and commit the persistence file before and after running KSP. Trick is getting the script to wait until operations complete.\u003Cp\u003ESo:\u003C/p\u003E\u003Cp\u003E- update\u003C/p\u003E\u003Cp\u003E- wait for completion\u003C/p\u003E\u003Cp\u003E- run KSP\u003C/p\u003E\u003Cp\u003E- wait until KSP terminates (tricky as it\u0027s run in a different process?)\u003C/p\u003E\u003Cp\u003E- commit\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou could grab the PID of the exec\u0027d process (updater, KSP, backup) and wait and loop and watch for it to terminate (but I find that \u0027wasteful\u0027, plus you\u0027d lose any termination/error conditions on exit) ... or ... you could trap the exec (a series of them, functions) and watch for desired exit signals, effectively \u0027pausing\u0027 the batch file, as well as monitoring/insuring the success of the backup itself.\u003C/p\u003E\n"},{"CreatedByName":"Gasofidas","CreatedById":150144,"CreatedDateTime":"2015-09-05T20:10:40Z","Content":"\n\u003Cp\u003ESomething like \u003Cspan style=\u0022font-family:\u0027Helvetica Neue\u0027;\u0022\u003Einotifywait \u003C/span\u003E\u003Ca href=\u0022https://github.com/rvoicilas/inotify-tools\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022font-family:\u0027Helvetica Neue\u0027;\u0022\u003E(lin)\u003C/span\u003E\u003C/a\u003E\u003Cspan style=\u0022font-family:\u0027Helvetica Neue\u0027;\u0022\u003E \u003C/span\u003E\u003Ca href=\u0022https://github.com/thekid/inotify-win\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022font-family:\u0027Helvetica Neue\u0027;\u0022\u003E(win)\u003C/span\u003E\u003C/a\u003E\u003Cspan style=\u0022font-family:\u0027Helvetica Neue\u0027;\u0022\u003E can monitor a file/folder for changes and execute a command in result of that, dunno how often the savefile is changed during a KSP session, but I presume it\u0027s a lot which may lead to a lot of commits, and a very detailed carreer history also \u003C/span\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"LordFerret","CreatedById":111598,"CreatedDateTime":"2015-09-05T23:34:19Z","Content":"\n\u003Cp\u003E\u003Cem\u003Einotifywait\u003C/em\u003E would be ok to monitor the update/backup process itself (the files/folders involved), but better yet would be to \u003Cem\u003Etrap\u003C/em\u003E the execution of \u003Cem\u003Egit-annex\u003C/em\u003E as \u003Cstrong\u003E_stilgar_\u003C/strong\u003E suggests and mentions above. You\u0027ll want to act only on normal (successful) termination of each of the processes, because by then all open files would be closed.\u003C/p\u003E\n"},{"CreatedByName":"jonasrosland","CreatedById":140857,"CreatedDateTime":"2015-09-06T05:12:28Z","Content":"\n\u003Cp\u003EYou should only put things in git that are relevant to your setup. Having Gamedata and all the mods there doesn\u0027t make sense IMHO. CKAN is special, since having the installed-default.ckan in git doesn\u0027t work, as it\u0027ll be overwritten first time you do a \u0022ckan scan\u0022 or \u0022ckan list\u0022. That\u0027s why I do a copy of the original to another file so I can keep that file up to date and use it to keep my CKAN install up to date.\u003C/p\u003E\u003Cp\u003EI looked into Jebretary, it looks neat! I saw you needed some help with it as well, any specifics?\u003C/p\u003E\n"}]}