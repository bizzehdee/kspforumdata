{"TopicId":37272,"ForumId":32,"TopicTitle":"Math questions about KSP","CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-16T03:17:23Z","PageNum":1,"Articles":[{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-16T03:17:23Z","Content":"\n\u003Cp\u003EI was wondering how KSP calculates its rotational force applied with ASAS. What is the equation if anyone knows it?\u003C/p\u003E\u003Cp\u003EThe second thing i wanted to bring up was the ISP. If I reverse calculate the Specific Impulse of the nerve nuclear engine in vacuum i go through this process..\u003C/p\u003E\u003Cp\u003E800\u003C/p\u003E\u003Cp\u003E800x\u002BC 400x^2\u002BCx\u002BD ((800x^3)/3)\u002B(Cx^2)/2)\u002BDx\u002BE where C,D, and E are all constants and x is time in seconds.\u003C/p\u003E\u003Cp\u003Ethe first value of 800 is the engines specific impulse in vacuum, the next equation is the engines acceleration, then speed, and finally position.\u003C/p\u003E\u003Cp\u003Eyou might note that in space the possibilities for acceleration are infinite due to the lack of resistance. As such the acceleration function shown is actually an exponential function. \u003C/p\u003E\u003Cp\u003EI have two questions about this.. the first is: did i do the math correctly? and the second: Is there any test i can do or experiment that i could use to find out the value of these constants?\u003C/p\u003E\n"},{"CreatedByName":"lammatt","CreatedById":21777,"CreatedDateTime":"2013-07-16T04:23:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E 800x\u002BC 400x^2\u002BCx\u002BD ((800x^3)/3)\u002B(Cx^2)/2)\u002BDx\u002BE \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ethis way of writing is pretty hard to read\u003C/p\u003E\u003Cp\u003Edo it properly in MS Word using the equation editor please\u003C/p\u003E\u003Cp\u003Eor else... not many ppl bother spending some extra seconds to try comprehending it.\u003C/p\u003E\u003Cp\u003E(yes i am that lazy)\u003C/p\u003E\n"},{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-16T04:51:30Z","Content":"\n\u003Cimg src=\u0022http://i40.tinypic.com/2zoc0pd.png\u0022 alt=\u00222zoc0pd.png\u0022\u003E here is the image version of the equations\n"},{"CreatedByName":"CCKinnison","CreatedById":71439,"CreatedDateTime":"2013-07-16T05:04:59Z","Content":"\n\u003Cp\u003EOkay, the only Constant \u0022C\u0022 is lightspeed. So I don\u0027t know what C, D, and E represent in your equations.\u003C/p\u003E\u003Cp\u003ESecond, there IS resistance to the Nerva\u0027s acceleration... Inertia. Or, more simply, the Mass the Nerva is accelerating. Acceleration will never be infinite due to the Mass of the Nerva itself.\u003C/p\u003E\u003Cp\u003EThird, I\u0027m not sure why you\u0027re trying to back-calculate the ISP of the engine... or what you hope to do with it. The game simply treats the given ISP number as part of an equation telling it how fast to burn fuel. I *seriously* doubt that the game is truly calculating the exhaust velocity and expansion of spent fuel, and deriving thrust in a \u0022real-world\u0022 way.\u003C/p\u003E\n"},{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-16T05:23:38Z","Content":"\n\u003Cp\u003EI was trying to find acceleration, and velocity at a given point in time. C does not represent the speed of light in this equation. it is just some constant number that i don\u0027t have, just like D and E. Mostly I am trying to better understand the math the game for my own satisfaction.\u003C/p\u003E\n"},{"CreatedByName":"tomf","CreatedById":57809,"CreatedDateTime":"2013-07-16T09:18:07Z","Content":"\n\u003Cp\u003EThe acceleration of a rocket varies over time as it burns fuel and its mass decreases. Also it makes little sense to think about the velocity over time of a rocket as it will be moving through a non-constant gravitational field. It is more usual to talk about the delta-v of a rocket, which is it\u0027s total ability to change it\u0027s velocity.\u003C/p\u003E\u003Cp\u003EFor most rockets in KSP the time taken to get from body to body is a matter of what route you choose to take. The route also affects the amount of delta-v required. \u003Ca href=\u0022http://alexmoon.github.io/ksp/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://alexmoon.github.io/ksp/\u003C/a\u003E can tell you both the delta-v required for a journey and the time it is going to take.\u003C/p\u003E\u003Cp\u003EThe delta-v of a rocket is found using the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Tsiolkovsky_rocket_equation\u0022 rel=\u0022external nofollow\u0022\u003E/Tsiolkovsky_rocket_equation\u003C/a\u003E, for which the ISP is an input.\u003C/p\u003E\u003Cp\u003EIf you wanted to know how long it will take to do a burn, say of 1000 m/s you would plug the starting mass, ISP and dv into the equation to find the total mass of fuel burnt. time=Isp*mass*g/thrust.\u003C/p\u003E\n"},{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-16T13:13:10Z","Content":"\n\u003Cp\u003EDelta V is another way to say the directive of velocity or more specifically acceleration, and ISP or specific impulse is the derivative of acceleration or Delta A i suppose.\u003C/p\u003E\u003Cp\u003EThe rocket equation is a much better way to find the information than i used to be sure. \u003C/p\u003E\u003Cp\u003EThat leaves me with my first question however. How does KSP calculate the amount of force it uses in pod torque and rcs thrust to adjust it\u0027s vector?\u003C/p\u003E\n"},{"CreatedByName":"astocky","CreatedById":59854,"CreatedDateTime":"2013-07-16T13:24:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fancycat\u0022 data-cite=\u0022fancycat\u0022\u003E\u003Cdiv\u003EDelta V is another way to say the directive of velocity or more specifically acceleration, and ISP or specific impulse is the derivative of acceleration or Delta A i suppose.\u003Cp\u003EThe rocket equation is a much better way to find the information than i used to be sure. \u003C/p\u003E\u003Cp\u003EThat leaves me with my first question however. How does KSP calculate the amount of force it uses in pod torque and rcs thrust to adjust it\u0027s vector?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Parts\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Parts\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThis wiki page has all the information on the equations used. \u003C/p\u003E\u003Cp\u003ETo specifically answer your question though the SAS has a limit torque that it can apply to the ship, and using a simple control algorithm it applies that maximum specified torque to counter whatever rotation it is trying to correct. Once it over-corrects the control algorithm applies a reduced torque in the opposite direction and continues to do so until the value is zero (actually very small).\u003C/p\u003E\u003Cp\u003EAdvanced SAS works differently as it uses RCS and control surfaces to control the force applied. It uses a similar control algorithm, but that is why you get lots of control surface wobble and RCS use. The system does not have fine enough control over movement and does not get to the small value to stop. Especially with complex shapes that can bend or flex.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Control_loop\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Control_loop\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThis wikipedia page has some really good information on control loops. It should be noted that C7 is implementing a PID controller for 0.21 - which should be a game changer.\u003C/p\u003E\n"},{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-16T13:44:30Z","Content":"\n\u003Cp\u003EThat defiantly explains the wobble. I just caught a video of the asas in .21 and it implements the changes i was thinking about. It looks like they take the distance from target vector and apply that as torque minus the speed of rotation. at a specific point the speed of rotation is higher than the distance so the craft begins to thrust opposite its target vector to slow its rotation to a full stop at the exact vector desired. \u003C/p\u003E\u003Cp\u003EI used a similar setup for an auto tracking turret i build for another game. Either way I am glad they have made the change \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"devinejoh","CreatedById":16503,"CreatedDateTime":"2013-07-16T14:57:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022CCKinnison\u0022 data-cite=\u0022CCKinnison\u0022\u003E\u003Cdiv\u003EOkay, the only Constant \u0022C\u0022 is lightspeed. So I don\u0027t know what C, D, and E represent in your equations.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EC, D, and E are just arbitrary constants, they are created when you integrate a function, which is what fancycat was showing. They are unknown constants because he integrated indefinitely, or without constants to the function.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.wolframalpha.com/input/?i=intergrate\u002B800\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.wolframalpha.com/input/?i=intergrate\u002B800\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Kaleb","CreatedById":73828,"CreatedDateTime":"2013-07-16T16:36:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fancycat\u0022 data-cite=\u0022fancycat\u0022\u003E\u003Cdiv\u003EDelta V is another way to say the directive of velocity or more specifically acceleration, and ISP or specific impulse is the derivative of acceleration or Delta A i suppose.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI need to clear this up: delta-V is *not* the time-derivative of velocity (which is, as you correctly say, acceleration), nor is Isp the time-derivative of acceleration. Dimensional analysis (looking at the units of the quantities involved) is your friend! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Delta-V is just the \u003Cem\u003Edifference\u003C/em\u003E between two velocities (its not the derivative, even though it\u0027s often written as \u0022dV\u0022), and its in units of \u003Cem\u003Em/s\u003C/em\u003E, while acceleration (time-derivative of velocity) is in units of \u003Cem\u003Em/s^2\u003C/em\u003E. Similarly, Isp is measured in \u003Cem\u003Eseconds\u003C/em\u003E, while da/dt would be in \u003Cem\u003Em/s^3\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EThink of it like this: If a car accelerates from 40 mph to 60 mph, the delta-V is just the difference between the two (20 mph, in this case). But the acceleration tells you how quickly that delta-V occurred. If you go from 40 to 60 in 10 seconds, your average acceleration is 2 mph/s (1/30th mi/s^2), but if you make that same increase in speed over 1 second, your average acceleration is ten times that (1/3rd mi/s^2).\u003C/p\u003E\u003Cp\u003EIsp is harder to quantify in this example, but its an efficiency rating, more like your car\u0027s miles per gallon. Except instead telling you the distance you can go per mass of fuel, it tells you the maximum delta-V you can reach when a given fraction of your ship\u0027s mass is propellant (according the the rocket equation that others have mentioned).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-16T16:42:24Z\u0022 title=\u002207/16/2013 04:42  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 16, 2013\u003C/time\u003E by Kaleb\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-17T17:28:55Z","Content":"\n\u003Cp\u003EThat was a remarkably helpful reply. thank you very much. i had assumed Delta was a rate of change instead of a difference in change. i will do some additional research for some fun planning.\u003C/p\u003E\n"},{"CreatedByName":"Brenok","CreatedById":49609,"CreatedDateTime":"2013-07-17T17:35:09Z","Content":"\n\u003Cp\u003EUsually, rates of change are represented by a lowercase \u0022d\u0022, like in d/dx. Delta (\u00C3\u017D\u00E2\u20AC) almost always refers to a simple difference (not a difference in change, whatever this means)\u003C/p\u003E\n"},{"CreatedByName":"Kaleb","CreatedById":73828,"CreatedDateTime":"2013-07-17T17:51:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fancycat\u0022 data-cite=\u0022fancycat\u0022\u003E\u003Cdiv\u003EThat was a remarkably helpful reply. thank you very much. i had assumed Delta was a rate of change instead of a difference in change. i will do some additional research for some fun planning.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027re welcome! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E (Although, I just noticed I computed those sample acceleration numbers wrong -- they\u0027re off by a factor of 60! I can do Calculus, just not simple Arithmetic...) \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 alt=\u0022:rolleyes:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-17T18:59:09Z","Content":"\n\u003Cp\u003EThats what happens when you learn calc. you forget your basic math. in my class the professor used the delta symbol interchangeably with d/dx, which is why i was so confused.\u003C/p\u003E\u003Cp\u003Ewhat is the percentage of fuel you need to have thoes number be accurate by the way? it doesn\u0027t seem to say.\u003C/p\u003E\n"},{"CreatedByName":"Flixxbeatz","CreatedById":29991,"CreatedDateTime":"2013-07-17T19:02:09Z","Content":"\n\u003Cp\u003EMy brain now wants to leave my head by just reading the equation OP posted.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\n\u003C/em\u003E\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/M9xMuPWAZW8?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n"},{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-19T17:50:54Z","Content":"\n\u003Cp\u003Ewith the new information about what delta means. i was thinking asas should try working like the following....\u003C/p\u003E\u003Cp\u003EB = Bearing where left of current position is negative and right is positive where the maximum and minimum values are 1 and -1\u003C/p\u003E\u003Cp\u003ED = Delta B and the maximum and minimum possible values if D are 1 and -1\u003C/p\u003E\u003Cp\u003E [(Dx10)\u002B(Bx2)]x-1= this equation only applies across one plane so you will need an xy and an xz. the only problem with the equation here is that it doesn\u0027t consider the limitations on the thrust power of rcs. Does anyone have any ideas on how to incorporate this.\u003C/p\u003E\u003Cp\u003Ei may have confused myself...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-19T17:59:13Z\u0022 title=\u002207/19/2013 05:59  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 19, 2013\u003C/time\u003E by fancycat\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Kaleb","CreatedById":73828,"CreatedDateTime":"2013-07-19T19:02:01Z","Content":"\n\u003Cp\u003EYou\u0027re on the right track here! The ASAS (and many other real-world applications) use what is known as a PID controller (I had to implement one of these in a robotics course, once). PID stands for Proportional, Integral, Derivative. The wikipedia article is somewhat dense, but the basic idea is that you have a variable x that you want to control by creating a response that is \u003Cem\u003Eproportional\u003C/em\u003E to its error at a given time, e(t) = x(t) - x_desired (this is basically a delta, though its not written as such). In addition to just the current error, however, you also look at how quickly the error is changing (d/dt e(t)) and how much error has accumulated over time (Integral e(t) dt). The response of the system (e.g. RCS or flaps) is then determined by a linear combination of these terms. Apparently, the technique of using all three of these terms to determine your response was originally inspired by watching how helmsmen steered ships -- I think that\u0027s cool!\u003C/p\u003E\u003Cp\u003EInstead of using specific constants like \u002210\u0022 and \u00222\u0022 in your formula, the generic approach uses named constants (Kp, Ki, and Kd) which can be \u0022tuned\u0022 to values that work best for a specific application. In KSP, you can actually modify these K values directly in the part cfg files, if you so chose. There\u0027s also \u003Ca href=\u0022http://kerbalspaceprogram.com/trimmable-asas/\u0022 rel=\u0022external nofollow\u0022\u003Ea mod\u003C/a\u003E that lets you dynamically modify them in-game.\u003C/p\u003E\u003Cp\u003ESo the overall formula then, would look something like:\u003C/p\u003E\u003Cp\u003EResponse = Kp*e(t) \u002B Kd*(d/dt)e(t) \u002B Ki*(Integral e(t) dt)\u003C/p\u003E\u003Cp\u003EYou are also correct that this only applies in one dimension, and has to be done for all three. Actually, they work along the three rotational axes (roll, pitch, and yaw). One of the (many) improvements to ASAS that\u0027s slated for 0.21 is that the PID will be disabled for an axis that you are trying to steer along. So you pull the nose up your aircraft, the pitch PID will be disabled (while keeping the other ones on). This lets you steer with ASAS on!\u003C/p\u003E\u003Cp\u003EOne major thing to point out, though, is that the variable being controlled here is the \u003Cem\u003Erotational rate\u003C/em\u003E (angular velocity), instead of the \u003Cem\u003Ebearing\u003C/em\u003E. Obviously, the desired rotation is 0. So your formula for the ASAS correction has three terms:\u003C/p\u003E\u003Cp\u003EKp * (how fast are you spinning)\u003C/p\u003E\u003Cp\u003EKd * (how fast is your spin accelerating)\u003C/p\u003E\u003Cp\u003EKi * (how much spin has accumulated over time, i.e. how far off the initial angle are you)\u003C/p\u003E\u003Cp\u003EIt\u0027s that last Ki term that tries to put you back to your initial heading, by eliminating the accumulated spin.\u003C/p\u003E\u003Cp\u003EThere\u0027s a lot of advanced control theory focused on applying that equation, which is well beyond what I know, but these are the basics.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-19T19:06:09Z\u0022 title=\u002207/19/2013 07:06  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 19, 2013\u003C/time\u003E by Kaleb\u003C/strong\u003E\n\u003Cbr\u003EAdded link to mod\n\u003C/span\u003E\n"},{"CreatedByName":"fancycat","CreatedById":73684,"CreatedDateTime":"2013-07-19T21:13:15Z","Content":"\n\u003Cp\u003EMy equation deals specifically with tracking to a vector instead of maintaining it though it would work that way as well. Thanks for the reply \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}