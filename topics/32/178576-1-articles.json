{"TopicId":178576,"ForumId":32,"TopicTitle":"Progress in Theoretical Rocket Cost Optimization","CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2018-09-27T03:50:43Z","PageNum":1,"Articles":[{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2018-09-27T03:50:43Z","Content":"\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:20px;\u0022\u003E\u003Cimg alt=\u0022\u0026amp;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 title=\u0022\u0026amp;)\u0022\u003E All set and ready to go!\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022:blink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_blink.png\u0022 title=\u0022:blink:\u0022\u003E\u003Cs\u003EPost still under construction! \u003C/s\u003E\u003C/span\u003ELarge posts never seem to save consistently or work first try for me, so I\u0027m editing it all in piece by piece. I work slowly these days, so it may be a few days before it\u0027s all together, fixed for readability and proofed. Thanks for the patience!\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I\u0027m never sure where to put the mathy stuff. Feel free to move the post around as desired! This felt like a general thing, so I went with it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:22px;\u0022\u003EProgress in Theoretical Rocket Cost Optimization\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u003Cspan style=\u0022font-family:Tahoma, Geneva, sans-serif;\u0022\u003E \u2022\u003C/span\u003E \u00A0 What\u0027s the most bang for your buck?\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022sSw1WFx.png\u0022 class=\u0022ipsImage\u0022 height=\u0022140\u0022 src=\u0022https://i.imgur.com/sSw1WFx.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/dC is the bang for your buck in (m/s)/(\u003Cimg alt=\u0022:funds:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/Funds.png\u0022 title=\u0022:funds:\u0022\u003E/ton). Everything on the right hand side is a materials property, situation or design choice for your rocket. Knowing these things, we can compute the optimum design choices! There\u0027s some notable caveats involved- there\u0027s no doubt this is a first order solution. Still, you gotta start somewhere!\u003Cbr\u003E\u003Cbr\u003E\nTerms Above: (T = Dry mass fraction of the fuel tanks. E = TWRrocket/TWRengines. P = Stage payload fraction. C = Launch cost per ton up to this point . Cf cost of Fuel per ton . Ce = Cost of Engines per ton.)\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003EResults\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhen designing a stage, we need to chose how big this stage will be relative to the next one. This size difference is called the payload fraction, P. A big P means lots of small stages, and a small P means fewer big stages. The figure below shows how P effects the look, cost and mass efficiency of a rocket (which is oddly triangular and not quite to scale). Each of the options below are made to push the same final payload the same amount of deltaV, so from a design perspective all of the rockets below are doing the same job. Each black line on the rockets represents the engines between stages, and because it\u0027s the most mass efficient the middle rocket should be considered as the \u0027normally best option\u0027. (Figure 1 below)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022sqrnnUV.png\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/sqrnnUV.png\u0022 style=\u0022width:800px;height:auto;\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nUsing this idea, the very most efficient rockets we can design with a single kind of engine look like the ones below. Notice the cost efficient option on the right! (Figure 2 below)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00226lKyJVj.png\u0022 class=\u0022ipsImage\u0022 height=\u0022765\u0022 src=\u0022https://i.imgur.com/6lKyJVj.png\u0022 style=\u0022width:800px;height:auto;\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThough this same concept will apply in rockets which have more than one kind of engine, we\u0027ll stick with one kind for this to keep things simple and so we know that what we\u0027re talking about is inherent to rocket design, not our engine choices.\n\u003C/p\u003E\n\u003Cp\u003E\nRegardless, P is a very convenient variable for us to use when trying to optimize a rocket. The amount of engines our stage brings along is fixed because they need to push our required \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, meanwhile the rest of the mass is free to be either payload or fuel tanks, and how much of each we bring winds up being described through P. Since the top equation describes our cost efficiency in terms of P, we\u0027re able to use it to find find and compare the most cost-optimal engines and configurations in different situations! This is the best 1:1 comparison we can make (to date) without plugging your whole travel itinerary into a solver (which is also an effective solution). The graph below shows the cost difference between the best possible configurations of three engines (Poodle, Skipper and Dart) in terms of their cost per ton per-deltaV versus what I\u0027ve been calling the accumulated launch cost, or in other words how much money we\u0027ve spent to get to where we are in the mission. The chart shows that to be the most cost effective at \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=1.7, the first few stages are best as Poodles, then one or two as Skippers, and finally we would switch to Darts deep into the mission. Of course all this would make for a silly rocket, but it makes for a great thought experiment to guide our intuition, because we can ask \u0027why?\u0027 and relate things back to the rockets\u0027 properties. So, why?\n\u003C/p\u003E\n\u003Cp\u003E\nThe Poodle is by far the cheapest (best cost per thrust), so when we\u0027re in \u0027big dumb rocket\u0027 mode near the beginning it\u0027s the perfect choice. That said, despite its wonderful Isp, at a \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E of 1.7 its high drymass actually causes it to be _less_ mass efficient than the other options. By the time we\u0027re 5,000 Funds/tonne into a mission, the cost of our components begin to matter less and their mass efficiency matters more so the higher \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and decent price of the Skipper makes it the best choice next. However, eventually the ridiculously expensive Dart finally comes into its own when 20,000 Funds/tonne into the mission mass efficiency is all that matters. (Figure 3 below)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022Blmr9Ms.png\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/Blmr9Ms.png\u0022 style=\u0022width:600px;height:auto;\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nNow we\u0027ve had a chance to look at where all of this is going, let\u0027s go back to the beginning and discuss how we came to these conclusions and how we can use them (or things very similar) to inform our rocket design. To start with, a ton of conversational stuff that need saying!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003EThe Talky Stuff\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EHooray!\u003C/strong\u003E\u003Cbr\u003E\nI finally got some good headway on the cost problem I figured I\u0027d share! I\u0027ve been poking at the problem for a long time, and whacked my head into hilariously many promising-looking dead ends, so I feel lucky in the end that my intuition kept dragging me along and nagging me to stick with it- there are some interesting an unexpected effects to see! I finally realized the right way to pose the problem about a month ago, and it\u0027s been smooth sailing since. The trick came in the form of abstracting away large portions of reality, and adding them back in later as boundary conditions and correction factors. This trick is used fairly commonly in some sciences, such as in chemical thermodynamics. It\u0027s a bit of a surprise in this context! But it makes sense now in retrospect.\n\u003C/p\u003E\n\u003Cp\u003E\nFor those who happen to be familiar with my personal story, the length of the post is probably a surprise! I\u0027ve been working on it for ages, the last two weeks in particular, but I\u0027m glad to finally get it out there. I\u0027ll probably take a well-needed break from typing (couple weeks) after answering the first couple rounds of responses.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EState of the Work\u003C/strong\u003E\u003Cbr\u003E\nThere\u0027s still plenty of work to be done, but these opening steps are to the point where we can see a number of fascinating interrelationships involved in rocket cost optimization. Naturally, the amount of work left to do is much greater than what\u0027s been done so far. The way I see it, after bumping my head on every tree in the forest I\u0027ve finally blazed the trail to base camp so now we get to try climbing the mountain.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThe Cow in the Room\u003C/strong\u003E\u003Cbr\u003E\nI know megathreads of doom aren\u0027t generally the best reading, but my intended audience here is the crazy few who will read it anyways and probably prefer the detail. I\u0027ve tried to organize this post so that cherry picking through it would be easy. And, though I\u0027ve tried to write succinctly, there\u0027s been a lot to say. Thanks in advance for taking the time to check through! Another cow in the room is the information flow with some of the results being up front. It just kinda felt right,.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EA Practical Launch System\u003C/strong\u003E\u003Cbr\u003E\nFor people looking to push orange tanks into orbit, this post may not be for you! This said, for a quick, easy, cost efficient rocket I can recommend 4xKickBacks surrounding a TwinBoar\u002Bfuel through (detachable) structural pylons as a first stage and a half. It works great!\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EWhy use theory?\u003C/strong\u003E\u003Cbr\u003E\nThere\u0027s a ton of more practical ways to make a cost efficient rocket than diving into theory. For example, there\u0027s been a few great KSP challenges, which leverage intuitive guess-and-check, and the industry apparently uses FEA solvers. However, this post is all about theory! Though it may not be the most practical, by looking at the elements of the theory and how they come together we can understand not just _what_ the best rocket is but _why_ it\u0027s the best rocket. Though understanding is the main goal (and there will be some great surprises along the way) another side benefit of a solid theoretical model is it makes programming numerical approaches waaay simpler, often with faster results, better starting conditions and more meaningful/fundamental readouts. No guarantee here, but it\u0027s a hope. Mostly though, it\u0027s to allow us to see how the different forms of efficiency (\u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, Isp, Cost, drymass) interplay together.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ENovelty\u003C/strong\u003E\u003Cbr\u003E\nLooking at the form of the solution, I believe it\u0027s unique. And, as far as I\u0027ve seen in my limited experience, I believe it\u0027s novel. That\u0027s not to say \u0022it\u0027s the most amazing thing ever!\u0022, but rather that all the tools and conclusions we can make from here will be treading new ground.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EPremise / Starting Assumptions / Where\u0027s the SRBs?\u003C/strong\u003E\u003Cbr\u003E\nThis will be looking at staged rockets. Though SSTOs are fascinating in their own right, optimizing them is centrally dependent on minimizing parasitic drag, which is good fun but also a tricky moving target in KSP. For our staged rocket, there\u0027s several things we could add to our model without a lot of extra mathematical work, but they\u0027ll be omitted from the main derivation for simplicity: SRBs, LFBs, Asparagus, Mixed stages, decouplers and other utilities. I\u0027ve tacked on a very rough version of the math for them near the end. Also for mathematical simplicity, everything will be assumed to launch in vacuum without launch losses. However, these could be estimated through experiment in KSP or with a spreadsheet launch solver using the equations in this post (||||||).\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ENomenclature Notes\u003C/strong\u003E\u003Cbr\u003E\nFirst, some nomenclature, sorry! By necessity, I\u0027ll be using some terms out of their ordinary context, so I\u0027m mentioning them here. Though it\u0027s backwards from KSP, I\u0027ll be referring to the biggest stage of the rocket as the first stage, aka. stage 1, and the smallest stage as stage 5. From here, I\u0027ll use the term payload to refer to the what\u0027s being pushed by any stage, whether it\u0027s the final payload or not. Likewise, \u0027launch cost\u0027 will refer to the amount we spent to get to wherever we\u0027re talking about, regardless of whether we\u0027re on final payload or not. Finally, \u0027Effective Isp\u0027 will be conceptually the same as the one used in aviation, but will appear very different in this context. In this context, it\u0027s synonymous with mass efficiency.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EExpected Simplifications in Limits\u003C/strong\u003E\u003Cbr\u003E\nWhen first attacking a problem, it\u0027s nice to figure out what answers we\u0027d expect in certain extremes (where the problem simplifies nicely and intuitively), so we have a way to double check our work as we go and can expect what terms will show up. If we have a 5 stage rocket, and we\u0027re trying to optimize one of the final stages (say stage 4) we\u0027d expect the _cost_ efficiency of that stage to be mostly determined by\u00A0 its _mass_ efficiency. After all, the main cost by that point was the cost required to launch it to where it is, so mass efficiency there is key (seen later as Ispeff). Also in the limit of fuel and engines costing the same, we would expect the cost efficiency problem to simplify to a mass efficiency as well (seen later as Ce-Cf). On the other hand, in the limits of right-at-launch and cheap fuel, we would expect the required engine\u0027s thrust per cost to play a major roll (seen later in the form of E*Ce).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThings that don\u0027t work\u003C/strong\u003E\u003Cbr\u003E\nThere\u0027s a ton of wonderfully intuitive ways to attack this problem which sadly don\u0027t pan out. For example, we could consider that our rocket has a cost per payload = Sum(stageCosts)/massPayload , and create various systems for describing stage costs in terms of their fuels, engines and payload fractions. While great for tabulating, this setup has a key weakness that it doesn\u0027t allow you to compare the value of two rockets with different deltaV. In other words, if I have two identically priced rockets one with 12000m/s and the other with 12001m/s, what\u0027s the difference in value between the two? Unfortunately, because deltaV and cost share an exponential relationship, it\u0027s very difficult to meaningfully compare the two without choosing an arbitrary deltaV or energy goal (eg. C3). There\u0027s several ways to try rolling with the punches such as requiring precomputed optimal stage sizes, removing the deltaV discrepancy by adding extra \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, and measuring the deltaV difference with the cost\u003Cabbr\u003E and \u003C/abbr\u003E\u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E of a reference engine. But all the options (that I found) wind up covering up some interesting or important aspect of cost optimization.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EResult: The working equation\u003C/strong\u003E\u003Cbr\u003E\nThere\u0027s a few final forms of the cost equation. Just to make it explicit, the most useful one for maths is the working equation (eq. 46). It can be integrated to relate rocket cost to deltaV, which is kinda handy. On the other hand, because its inverse eq 45 has a beautiful linear nature, I used it to make most of the charts. In eq. 45, straight lines represent rockets and stages possible in the real world, and the tangents of the curved lines represent real rockets/stages as well (this is explained more later in the more results section). Also good to note, a real stage will be represented as a given length along any of these lines. All this said, even though they\u0027re not physically possible, I like to think of those continuous curved lines as the equations for what a rocket _wants_ to be, in the absence of our terrible limitation that it must be built out of real world materials. The cow wants to be spherical!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cspan style=\u0022font-size:22px;\u0022\u003EMajor Assumptions\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWe\u0027re going to make two major assumptions called \u0027uniform\u0027 and \u0027continuous\u0027 that I think are easiest to talk about now. Uniform means that each stage, rocket, or differential slice we\u0027re talking about has the same properties (like engine(s), \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, payload fraction, etc) all the way throughout it. Continuous means that our equations will describe the rocket at any scale: rocket, stage, or even a differential slice. These assumptions can be \u0027undone\u0027 later by integrating and applying certain boundary conditions. The differential slice in particular isn\u0027t a real thing, but they can be added together to make a real stage in a way that\u0027s mathematically very convenient. When made together, I\u0027ve taken to calling the assumptions the \u0027homogeneous\u0027 rocket . That said, a much sillier but also fitting name would be the \u0027bolognese\u0027 rocket instead. It\u0027s rather perfect because bolognese is a discrete thing (meat) made homogeneous and sliced thin for easy use. It\u0027s also a double meaning for \u0027fake\u0027 or \u0027stupid\u0027, which I think will be a fun thing for potential nay-sayers of the assumption.\n\u003C/p\u003E\n\u003Cp\u003E\nThe figure below shows how this assumption works in its main context of creating the concept of mass efficiency, and is used later to extend the concept to differential slices of rocket. Both of the rockets shown below are identical (by definition) from all engineering standpoints, except the homogeneous one on the right is differentiable by its nature, which makes it a useful model for math. From a conceptual standpoint, if you were to watch the homogeneous rocket burning, you would see it slowly and continuously burning away from the bottom to the top, like a magical caseless solid motor. (Figure 4 below)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022DVFmLnj.png\u0022 class=\u0022ipsImage\u0022 height=\u0022767\u0022 src=\u0022https://i.imgur.com/DVFmLnj.png\u0022 style=\u0022width:800px;height:auto;\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003EQuick and Easy Derivation\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003EThe \u003Cstrong\u003E00 equations\u003C/strong\u003E are a hammy run through of the derivation which work well enough for the conceptually curious but leave some admitted gaps for the rigorously demanding. Still, I think it\u0027s a good in-between relative to the 50 equation romp that is the real thing! Probably the most important thing to note during the derivation is how the mass of our differential slice of rocket cancels out when we consider \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E / dCost. We can imagine it as making a rocket equation that works directly in terms of cost rather than math. Descriptions for each step below.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022n1w5wCU.png\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/n1w5wCU.png\u0022 style=\u0022width:800px;height:auto;\u0022 width=\u0022950\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ETerms:\u003C/strong\u003E\u003Cbr\u003E\nCx = Cost per ton of x\u003Cbr\u003E\nmx = mass of x\u003Cbr\u003E\nr = rocket (including payload)\u003Cbr\u003E\np = payload\u003Cbr\u003E\nf = fuel (including tanks)\u003Cbr\u003E\ne = engines\n\u003C/p\u003E\n\u003Cp\u003E\n00-1. Let\u0027s start with making an example to have in mind for this \u0027derivation\u0027, let\u0027s say we\u0027ve spent 1000Funds/tonne to get a fully fueled space craft into \u003Cabbr title=\u0022Low Kerbin Orbit\u0022\u003ELKO\u003C/abbr\u003E on a transfer stage. We\u0027d like to optimize that transfer stage and use it to know what our craft\u0027s final cost per ton will be after decoupling the transfer stage. In other words, in the beginning the cost was 1000funds/t, let\u0027s call it C0, what will the cost per ton be after the transfer burn? What\u0027s the change? We\u0027ll call the change per ton deltaC, and then this times the mass of our payload (deltaC*mp) would be the total change in cost caused by our transfer stage.\u003Cbr\u003E\u003Cbr\u003E\nThe total change in cost caused by our transfer stage should be made by 3 things summed together: Launch cost, fuel cost and engine cost. Specifically: 1. The 1000Funds/tonne (C0) times the starting mass of the transfer stage without its payload (massRocket - massPayload).\u00A0 2. Adding in the cost of the fuel, which will be Cf*mf. Here, we know the mass of fuel (including tanks) will be everything in the rocket that\u0027s not engines or payload so this becomes Cf*(mr-mp-me). 3. And finally, we add the cost of the engines Ce*me.\n\u003C/p\u003E\n\u003Cp\u003E\n00-2. Algebra! Pull out a mr-mp for use later. Note that the term me/mr = TWRcraft/TWRengines, and is something set when we choose our engines and \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E. Notice how this equation separated into two sections: mr-mp on the left, which describes the size of the transfer stage, and everything in the parenthesis on the right which describes design properties of the stage not directly affecting its size. Don\u0027t mind the leading 1/mp. It will cancel out soon.\n\u003C/p\u003E\n\u003Cp\u003E\n00-3. Let\u0027s imagine the cost of a differential uniform slice of this stage by bringing mr-mp -\u0026gt; dm (see major assumptions section for the continuous assumption). It\u0027s mathematically very hard to compare the values of entire stages, but the differential slices can be easily compared. This equation now shows us the cost per mass of a differential slice of rocket, but what\u0027s the deltaV of this slice?\n\u003C/p\u003E\n\u003Cp\u003E\n00-4. To find the deltaV per differential slice, we\u0027ll need a version of the rocket equation which is aware of both the exhaust mass and the drymass associated with it. As engineers, we just care about how much total mass was lost and how much deltaV we got for it. Let\u0027s use this to make a correction factor for the standard exhaust-mass-centric rocket equation to take these things into account. If we were to count all discarded mass (rather than just exhaust) the rocket equation would like deltaV = -X*ln(mpayload / mrocket) where X is some constant. It\u0027s much simpler than the standard one! However, to be useful it must be equivalent to the actual rocket equation\u0027s deltaV = -g0Isp*ln(mdry/mwet) in all cases, so next we\u0027ll find the value of X which allows that.\n\u003C/p\u003E\n\u003Cp\u003E\n00-5. Let\u0027s find this X and call it g0*Ispeff. The only tricky part is calculating the rocket equation\u0027s mdry = mrocket - mburnedFuel. The mass of burned fuel is the mass of the fuel tanks (mf) times their wet mass fraction ((mFullTanks - mEmptyTanks)/mFullTanks). Since the fuel tanks are everything in the rocket that\u0027s not payload or engines we can substitute mf = mr - mp - me . After plugging these in, we isolate X (aka g0*IspEff), and we\u0027re set!\n\u003C/p\u003E\n\u003Cp\u003E\n00-6. Let\u0027s use g0*IspEff to find the deltaV of our differential slice of rocket. To derive the rocket equation, we use conservation of momentum to say that the total momentum before and after using some stage is the same. Before the mass was mp\u002Bdm, traveling at V velocity. After, the rocket will be just mp mass, but will be traveling at V\u002B\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E velocity, meanwhile the spent mass will be traveling at V-Ve,eff\u00A0 , where Ve,eff equals the g0Ispeff we just found. This makes sense, because the Ve,eff is just an \u003Cstrong\u003Eaverage\u003C/strong\u003E of the actual exhaust velocity (Ve=g0*Isp) and the 0m/s drymass we\u0027ll be dropping after the stage burns out. This average must be a special logarythic average cognizant of the nature of the rocket equation, and it is because of how we defined it. It\u0027s just an average though.\n\u003C/p\u003E\n\u003Cp\u003E\n00-7. Algebra!\n\u003C/p\u003E\n\u003Cp\u003E\n00-8. Leibnitz rule to victory. Notice how (talking about the inverse of our equation here) \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/dC is the bang for your buck, or in other words the cost efficiency. And, it\u0027s made of \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/dm the mass efficiency and dm/dC the cost per mass. All of the properties involved are materials properties and design parameters of the rocket. So, by maximizing \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/dC (or minimizing the inverse dC/\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E) we can optimize the rocket parameters (most importantly mp/mr = P) based on the material properties.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s all pretty easy going in this context! There\u0027s a ton of little nit-pickable tricks and troubles being swept under the rug here, and showing they\u0027re ok by purely conceptual reasoning would be quite tricky. That\u0027s why there\u0027s the full derivation, which circumvents the troubles by going around the long way... the reeeaally long way.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003EFull Derivation\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ESummary of the Math\u003C/strong\u003E\u003Cbr\u003E\nFirst we\u0027ll recap mass efficiency, Ispeff. Then we\u0027ll find a way to discuss cost that allows us to talk about any stage of the rocket without reference to the others besides their total cost. After that, we\u0027ll go full spherical cow and describe differential slices of a rocket in a way that its predictions can always be related back to the discrete rockets of our real world. The correct form of these differential equations are the ones which will integrate to make the correct answer every time. So, we\u0027ll find the correct deltaVs and costs for an n stage rocket, bring them together, and then find the derivative which will produce these. Finally, we\u0027ll check our work by using the differential equations to once again describe a real rocket.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cstrong\u003ETerms\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022ifLQqv6.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/ifLQqv6.png\u0022 style=\u0022width:510px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022LKSW5Fj.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/LKSW5Fj.png\u0022 style=\u0022width:500px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ECalculating the deltaV of a stage\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n1. The mass of a whole rocket is the sum of its payload, fuel and engines. \u0022Payload\u0022 is used to describe whatever a stage is pushing, whether it\u0027s the final payload or not.\n\u003C/p\u003E\n\u003Cp\u003E\n2. Dividing all terms by mr puts them into their fraction forms. These are much more convenient as they can describe rockets of all sizes.\n\u003C/p\u003E\n\u003Cp\u003E\n3. Rearrangement for later substitution\n\u003C/p\u003E\n\u003Cp\u003E\n4. A new equation: Rocket drymass is the same as wet mass, but with the full fuel tanks (mf) replaced with empty fuel tanks (T*mf).\n\u003C/p\u003E\n\u003Cp\u003E\n5. The difference between a full and empty rocket is mf-T*mf. This is rearranged for later convenience.\n\u003C/p\u003E\n\u003Cp\u003E\n6. Divide both sides by the rocket mass to put this into the fraction form.\n\u003C/p\u003E\n\u003Cp\u003E\n7. F isn\u0027t useful later, so we substitute it out with eq. 3. Then isolate the term on the left.\n\u003C/p\u003E\n\u003Cp\u003E\n8. Rearrange to the preferred form. Speaking relative to wet mass, the dry mass of a rocket would be T (fuel tank drymass fraction) at its minimum. This is added to the drymass of P (payload) and E (engines), but we need a (1-T) term on these to not double count them with the T from earlier.\n\u003C/p\u003E\n\u003Cp\u003E\n9. Plug it in to the rocket equation to get deltaV!\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022cz8wJNw.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/cz8wJNw.png\u0022 style=\u0022width:600px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ECalculating Mass Efficiency, also the deltaV and payload fraction of an n-stage rocket.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n10. The defining equation for Ispeff, the mass efficiency.\n\u003C/p\u003E\n\u003Cp\u003E\n11. DeltaV for a rocket must be equal no matter how we calculate it, so eq.9 = eq.10 . This is the easiest form of the Ispeff equation, and it can be maximized with respect to P to maximize mass efficiency of the stage it represents. This said, Ispeff can represent the mass efficiency of any stage, optimized or not. The nuances can be found in steps 00-4 through 00-6 in the quick derivation.\n\u003C/p\u003E\n\u003Cp\u003E\n12. Showing that Ispeff remains constant whether we\u0027re talking about stages or rockets made of n equivalent stages. This is a requirement for anything defining rocket mass efficiency, and Ispeff (and those things related to it by a simple factor) are unique in satisfying it. In earlier works, the Ispeff for rockets made of different kinds of stages is also shown to be sum(ln(Pi)*Ispeff,i)/sum(ln(Pi)). Back to our rocket, if it has n stages each with a given deltaV, the whole rocket will have n*deltaV total. A rocket of n stages, each with payload fraction P has a total P^n payload fraction between the final payload and the initial full rocket.\n\u003C/p\u003E\n\u003Cp\u003E\n13. Restate and rearranging eq.12\n\u003C/p\u003E\n\u003Cp\u003E\n14. Rearranging to isolate P^n\n\u003C/p\u003E\n\u003Cp\u003E\n15. Substituting P^n with b^-n and simplifying to the final form used in a substitution later along.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022GTPMJ1L.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/GTPMJ1L.png\u0022 style=\u0022width:600px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ECalculating the cost of a single stage in convenient terms.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n16. For this, \u0022Launch Cost\u0022 describes the cost to put a thing wherever it is, such as: \u00A0\u00A0 in orbit, around the Sun, or 20m off the launch pad. \u0022Payload\u0022 is used to describe whatever a stage is pushing, whether it\u0027s the final payload or not. The launch cost of each subsequent stage in a rocket is the launch cost of the stage before it (payload included), plus the cost of the fuel and engines in that stage. Note that we don\u0027t care how it got there, just how much it cost.\n\u003C/p\u003E\n\u003Cp\u003E\n17. Substitute cost terms ($) with their cost per ton terms times mass (m*C).\n\u003C/p\u003E\n\u003Cp\u003E\n18. Substitute the not-very-usefull fuel mass term (mf) with mr - mp - me. This is equivalent to F=1-P-E substitution from earlier, we\u0027re just leaving it in masses this time so a few later equations would have a simpler real world meaning.\n\u003C/p\u003E\n\u003Cp\u003E\n19. Redistribute. The real world meaning of this equation would be: The cost to put the payload where it is = the mass of the whole rocket times the cost per ton as if it were all fuel including the initial launch cost. Then there\u0027s two correction terms, one to say the payload isn\u0027t fuel, and the other to say that the engines cost a different amount than fuel. Though a little silly, this form of equation winds up being a necessary abstraction to drastically simplify later math.\n\u003C/p\u003E\n\u003Cp\u003E\n20. Subtract mp*C0 from both sides. Now we\u0027re talking about the change in launch cost caused by this stage.\n\u003C/p\u003E\n\u003Cp\u003E\n21. Simplify\n\u003C/p\u003E\n\u003Cp\u003E\n22. Divide both sides by mp to make the equation describe rockets of any size. mr/mp = 1/P\u00A0\u00A0 mp/mp = 1\u00A0\u00A0 me/mp = (me/mr)/(mp/mr) = E/P\n\u003C/p\u003E\n\u003Cp\u003E\n23. Substitute the P terms with the convenience variable b=1/P to simplify things later. b describes how much bigger the full rocket is than just its payload, normal values being between 2-5. I call it relative stage size. This is the final form of this equation, describing the change in launch costs per ton of payload caused by a single stage. It can be described as:\u003Cbr\u003E\n\u00A0 \u0022Everything that\u0027s not payload\u0022 (b-1)\u003Cbr\u003E\n\u00A0 \u0022Costs the initial launch cost, plus the cost of fuel\u0022 *(C0\u002BCf)\u003Cbr\u003E\n\u00A0 \u0022But the engines...\u0022 \u002B E*b\u003Cbr\u003E\n\u00A0 \u0022Cost a different amount we need to correct for.\u0022 *(Ce-Cf)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022pKWaGY9.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/pKWaGY9.png\u0022 style=\u0022width:700px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cstrong\u003EExtend the cost equation eq. 23 to multistage rockets, starting with a 2 stager where both stages have identical properties.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n24. The change in launch costs between the second payload and the initial rocket (C2-C0) is the change in launch costs of the second stage (C2-C1) \u002B the change in launch cost of the first stage (C1-C0).\n\u003C/p\u003E\n\u003Cp\u003E\n25. If we imagine eq.23 is a function with respect to C0, we can say f(C0) = (C1-C0) = the change in launch cost of the first stage,\u00A0\u00A0\u00A0 and f(f(C0)) = (C2-C1) = the change in launch costs of the second stage. So, in total, we have C2-C0 = f(f(C0)) \u002B f(C0)\n\u003C/p\u003E\n\u003Cp\u003E\n26. Simplify the mess. Notice the equation has remained largely the same as eq 23. That\u0027s the reason for this silly form!\n\u003C/p\u003E\n\u003Cp\u003E\n27. Generalize to the nth stage. I originally wrote this equation directly from a picture of an n-stage rocket, and I\u0027ll try to add it in, but this can also be seen from the math if you do the simplification in eq. 25 yourself.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022h3ozLLG.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/h3ozLLG.png\u0022 style=\u0022width:700px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ESimplifying the sum\u003C/strong\u003E\u003Cbr\u003E\u003Cbr\u003E\nThat sum(i=0 -\u0026gt; n of b^i) term is a gnarly one that won\u0027t let us use calculus easily, so we\u0027ll take the time to convert it into something convenient in standard closed form. I originally did this by finding the patterns in b=2, b=3 and b=4, and then finding the pattern to the pattern. From there I back calculated what the derivation must have been, so if it looks like I pull some of the following steps from nowhere, I probably did.\n\u003C/p\u003E\n\u003Cp\u003E\n28. sum(i=0 -\u0026gt; n of b^i) shown in terms of its elements\n\u003C/p\u003E\n\u003Cp\u003E\n29. Magic. Multiply by 1 = (b-1)/(b-1). Pay attention to the (b-1) term on top...\n\u003C/p\u003E\n\u003Cp\u003E\n30. ...The b term shifts the whole pattern forward by one, while the 1 leaves the pattern in its original place...\n\u003C/p\u003E\n\u003Cp\u003E\n31. ...The only elements not canceled out are the very last (b^(n\u002B1)) and the very first (b^0 = 1)\n\u003C/p\u003E\n\u003Cp\u003E\n32. It would be really nice to wrestle that b^(n\u002B1) term down into b^n so we can consolidate terms with the b^n in eq. 27. Let\u0027s turn the -1 into -(b-1)/(b-1) and see what happens.\n\u003C/p\u003E\n\u003Cp\u003E\n33. The double negative on the 1 turned it into a \u002B1, which cancels the -1 from the other term, leaving us with (b^(n\u002B1)-b)/(b-1) . Now we just factor out a b from the top to get the extremely convenient equation shown.\n\u003C/p\u003E\n\u003Cp\u003E\n34. Why wait? Plug it into eq. 27!\n\u003C/p\u003E\n\u003Cp\u003E\n35. Factor out the (b^n-1). This term describes the mass of the entire rocket relative to its payload. This is a very convenient way to know the cost of a uniformly designed rocket given its size (b^n), \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E (E), and payload fraction (b/(b-1)) = (1/(1-P)) . This final term (b/(b-1)) which will later be (1/(1-P)) is significant and would have been difficult to guess about without doing one of the derivations.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022eUBpQXE.png\u0022 class=\u0022ipsImage\u0022 height=\u0022737\u0022 src=\u0022https://i.imgur.com/eUBpQXE.png\u0022 style=\u0022width:700px;height:auto;\u0022 width=\u0022861\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EBringing the equations together, applying the continuous and uniform assumptions, and making the form differential\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n36-38. Restating equations 9,10,11 and 15 here for convenience.\u00A0 and 38 (being used for convenience) as a substitution slightly later.\n\u003C/p\u003E\n\u003Cp\u003E\n39. Substituting the b^n term from eq. 35 with eq. 37 . Now we can talk about the cost of a real (albeit uniformly designed) rocket with respect to its deltaV. Ispeff is being used as a convenience variable here, and will be substituted out later.\n\u003C/p\u003E\n\u003Cp\u003E\n40. Bring in the \u0022continuous\u0022 assumption to turn the n-stage rocket into a differential slice of a rocket. See the major assumptions section for more on this.\n\u003C/p\u003E\n\u003Cp\u003E\n41. Oh no! There\u0027s a differential in an exponent! Fortunately, the linearization of e^x-1 = x is exact when done on a differential. For more on this see the Taylor and Maclaurin expansions.\n\u003C/p\u003E\n\u003Cp\u003E\n42. Substitute e^(\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/g0Ispeff)-1 = \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/g0Ispeff\n\u003C/p\u003E\n\u003Cp\u003E\n43. Divide both sides by \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022H8VdIou.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/H8VdIou.png\u0022 style=\u0022width:700px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EFinal Forms\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nMake the final rearrangements. Equations 44-47 are all useful forms of the equation. Eq. 46 is the working form of the equation for use in solvers. Eq. 45 is used to make the plots because of its nice linear relationship.\n\u003C/p\u003E\n\u003Cp\u003E\n44. Substitute Ispeff (convenience variable) with eq. 38. This form is optimized with respect to P and used to make the graphs.\n\u003C/p\u003E\n\u003Cp\u003E\n45. Noticing eq. 44 takes the form y=mx\u002Bb, factor it out as such. This is the form used to make the \u0027mass optimal\u0027 lines given pre-computed mass optimal values for P. Here we\u0027re using Ispeff for convenience once again for visual clarity.\n\u003C/p\u003E\n\u003Cp\u003E\n46. The working equation. It\u0027s main use would be by choosing a set P and integrating until the area (the deltaV) = g0*Ispeff*ln(P). However, it can also be useful by maximizing this differential form for P at each value of C. Then the area under the reulting curve from C0 -\u0026gt; Cn is the deltaV of the best possible configuration of a stage with continuously varying properties. The result is of course non-physical, but still interesting.\n\u003C/p\u003E\n\u003Cp\u003E\n47. A Rearrangement to emphasize the aspects of cost efficiency shared with the mass-optimal solution (First two groups) and then the aspects that are different from the mass optimal solution (Final group)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00224ug58uA.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/4ug58uA.png\u0022 style=\u0022width:800px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAnd, one more form. We can swap out P for 1-E-F, and 1-P for E\u002BF thanks to eq. 2. This makes a form which may be more intuitive in some circumstances, where rather than discussing a stage\u0027s size in terms of how big its payload is, we discuss it in terms of how big the engines and fuel tanks are relative to the whole thing. It looks a lot simpler in many ways! Although I think it\u0027s a little less useful.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022i426A9X.png\u0022 class=\u0022ipsImage\u0022 height=\u0022233\u0022 src=\u0022https://i.imgur.com/i426A9X.png\u0022 style=\u0022width:700px;height:auto;\u0022 width=\u0022921\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cstrong\u003EDouble check the equations work\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n48-54. Just showing the proof in the pudding that the working equations can be integrated across C0 -\u0026gt; Cn to find deltaV, and then back calculating past the uniform/continuous assumptions to the single stage case. Undoing your work is always a good dummy check, and I figured I\u0027d include it. This does also mean that the costs and deltaVs provided by the equations will always be correct, and the tricky assumptions only cause inadequacies in optimization and simple graphing. As a note, the simultaneous requirement could also be deltaV = -n*g0*Isp*ln(T\u002B(1-T)*(E\u002BP)) for a given constant P and the integer n describing the number of stages in question.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022t9oIRn5.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/t9oIRn5.png\u0022 style=\u0022width:600px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003EFurther Results\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo what can we do with it? As I\u0027ve mentioned, math from here is best done with the working equation (eq. 46) which describes \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/dC because it can be integrated across a cost range to give the deltaV you\u0027d get for spending that price. Plotted directly though, it\u0027s difficult to read, because the lines are all of the form 1/x! Eq. 45 for dC/\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E plots much more nicely because it reduces to straight lines for stages with (realistically) constant properties. Seen below is 3 different engines being compared in this way across a range corresponding to maybe the first 3 stages of a craft. I purposefully chose 3 similar engines because they can actually be alternatives for eachother, so it\u0027s interesting to see how they compare. This said, comparing very different engines like SRBs and the LV-N would make for a much more dramatic plot!\n\u003C/p\u003E\n\u003Cp\u003E\nIn the plot the lines represent cost so lower is better. The slopes of the lines are determined by the inverse of the mass efficiency (1/g0Ispeff) and the Y intercept is determined by their cost on the launch pad divided by their mass efficiency. An \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E would have a very low Y intercept and a very steep slope. These can be seen in the \u0027engine plots\u0027 section.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00223cOAIvG.png\u0022 class=\u0022ipsImage\u0022 height=\u0022686\u0022 src=\u0022https://i.imgur.com/3cOAIvG.png\u0022 style=\u0022width:600px;height:auto;\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhen zoomed out though, trying to compare similar engines is difficult (see below) so we\u0027ll try a different kind of plotting in a moment.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022GC1EkI2.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/GC1EkI2.png\u0022 style=\u0022width:600px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe difference between two engines in dC/\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003Eplots really nicely even deep into a mission, so I think they\u0027re a good way to go. To interpret the graph, for now, we can be happy with knowing that a lower value of Cost/deltaV is always better for our rocket, so go with the lowest \u003Cspan\u003E\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/span\u003E! That said, I believe the values of these differences are actually useful and comparable even at different points on the x-axis (different C -\u0026gt; different lengths into the mission) based on the following shaky reasoning: The values of dC/\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E (see above) grow roughly linearly with C so the _relative_ differences between engines are inversely proportional to C. Relative differences in dC/\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E are proportional to relative differences in its inverse \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/dC. Finally, to find a deltaV for a stage, the integration bounds for the stage in \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/dC are roughly linearly proportional to C. Put all together, the change in area (deltaV) caused by the differences shown in the plot below will be proportional to the differences * 1/C * 1 * C . It\u0027s more than a bit shaky, I know, and I\u0027ll try to link it more explicitly later. For now, I\u0027m happy with the \u0027lower is better\u0027 explanation, but I figure I\u0027d mention where I was trying to go with it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022Blmr9Ms.png\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/Blmr9Ms.png\u0022 style=\u0022width:600px;height:auto;\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo I\u0027ve been making a big deal that even for a single engine the most mass efficient approach isn\u0027t necessarily the most cost effective when we\u0027re early in the mission. The following plot shows this effect and how it changes as the mission progresses (and launch costs increase). The effect is in the 2-20% range for most liquid engines in the early mission. The setup of engine/\u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E/fuel-cost is the same here as in the above plots.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022yiT1jjk.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/yiT1jjk.png\u0022 style=\u0022width:600px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe plots above show curves of the best possible costs, but only straight lines are possible for real stages to have. Fortunately any straight line tangent to the above curves will describe a real stage. Since stages have a fixed cost, the line representing a single stage will have a fixed width in the x-axis (C), and early in the mission these lines can be quite short (only a few hundred Funds/ton in width), meanwhile the curvature is often very gentle and broad being as much as 20,000-ish funds/ton across. While it\u0027s not always true, in quite a few cases the curvature really isn\u0027t a big deal, so we can consider our real stages to be pretty close to what\u0027s on the curve.\n\u003C/p\u003E\n\u003Cp\u003E\nBelow is a plot showing rockets made of real stages (straight lines) with different payload fractions (P). Notice how these different payload fractions are better than eachother at different points in the mission (different accumulated launch costs). Bringing them all together, the straight lines will form the shape of the curve from above! This particular example is just using a dummy engine.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022v3fxILy.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/v3fxILy.png\u0022 style=\u0022width:600px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nSo in the plot above, the lower P values are useful for their lower intercept (cheaper cost on the launch pad), and the higher P values are good for their lower/better slopes (more mass efficient). Let\u0027s take a look at how these two aspects vary in the plot below. The initial dC/\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E is the intercept, and IspEff is the inverse of the slope. Since they have different units, they\u0027re just being compared via arbitrary \u0027happiness points\u0027 \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E . In some cases the optima for these two things almost line up, so there\u0027s not a lot of difference between the most mass efficient design and the most cost efficient design. This can be seen with the Poodle a couple plots up. In other cases though, the optima are spaced quite broadly like here (also see the Dart a couple plots up). I\u0027ve been finding that the optima seem to be the most \u0027different\u0027 (= narrowest and most spaced) when E = TWRcraft/TWRengine = ~ 1/6 . Not sure why yet.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EAnyways, from the plot below we can see why there\u0027s only a certain range of P values that\u0027s worth using regardless of the conditions. Below we can see that, P values beneath .12 start to actually increase initial dC/\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E (the Y intercept) while also raising slope in the expected way, \u00A0 and P values above \u003C/span\u003E.29 will actually start to reduce mass efficiency (raising the slope) while also raising the intercept in the expected way. Only P values between the two optima below can every be useful. The plot below is also just using a dummy engine.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022uXyra3W.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/uXyra3W.png\u0022 style=\u0022width:600px;height:auto;\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo what\u0027s the best P value (Payload fraction)? As we\u0027ve been seeing in the above two plots, we need to choose the best one for where we are in the mission, and that value can vary heavily. Using the Dart as an example once again, early in the mission 0.18 would be best, and very late in the mission 0.42 is best. This is super noticeable! Put in another way, early in the mission each stage should be 5.6 (= 1/0.18) times bigger than the stage it pushes, and late in the mission each stage should only be 2.4 (= 1/0.42) times bigger than the stage it pushes. Since 5.6 ~ 2.4^2, this means the stages are packed twice as tightly late in the mission compared to early on even when we\u0027re using the same engine all the way through! These values are for the Dart, and it\u0027s normal for some engines to be less pronounced in this effect. It\u0027s also normal for us to change to new kinds of engine during a mission which muddies things somewhat, but the effect is still present and can be profound in magnitude.\n\u003C/p\u003E\n\u003Cp\u003E\nBut what the heck do we call it?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00228mV6rnR.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/8mV6rnR.png\u0022 style=\u0022width:600px;height:auto;\u0022\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003EEngine Plots\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThese are a few plots put in as a first-blush example of the of what could be done with the equations.\n\u003C/p\u003E\n\u003Cp\u003E\nI have to say, there\u0027s really no useful surprises going on with these plots below. For the most part, the SRBs and Twinboar are good engines at launch, and the Poodle\u0027s good for everything else! That\u0027s of course a bit of an oversimplification, but it holds pretty well. There is one surprise though! It happens not to affect anything, but it is interesting to notice...\n\u003C/p\u003E\n\u003Cp\u003E\nSo just from the glance, it seems that the Thumper actually becomes a better choice than Kickback at \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E\u0026gt;1.9 or so. This is pretty important, because with SRBs you really want to fly off the pad to not have heavy launch losses. With my setups, I typically like \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E~2.4 or so, but I know there\u0027s different thoughts on the matter. So we might expect that for high \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E launches we should always use thumper! But, the super common trick with kickbacks is to launch with the kickbacks acting just as strap on boosters for a twin boar, in which case they\u0027re only responsible for less than \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=1.8 worth of acceleration because the twin boars are helping as well!\u003Cbr\u003E\nSo TwinBoar\u002BKickback \u0026gt; TwinBoar\u002BThumper \u0026gt; Thumper \u0026gt; Kickback \u0026gt; TwinBoar .\n\u003C/p\u003E\n\u003Cp\u003E\nIn other words, the TwinBoar\u002BKickback combo is a special combo greater than the sum of its parts.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00225zxQtGx.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/5zxQtGx.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022Lvkk23I.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/Lvkk23I.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022dWSjlsr.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/dWSjlsr.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022r0lLRcC.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/r0lLRcC.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022H3yEoJP.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/H3yEoJP.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022pNuikGg.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/pNuikGg.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022f3c1CvO.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/f3c1CvO.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022anbhi1b.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/anbhi1b.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cimg alt=\u0022F5cLeJL.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/F5cLeJL.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cspan style=\u0022font-size:22px;\u0022\u003EBehaviour in limits\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFinally, we should double check the behaviour in limits, make sure it meets our earlier expectations and see if there\u0027s any interesting tidbits.\n\u003C/p\u003E\n\u003Cp\u003E\n56. In the limit of C0 and Cf being small (ie we\u0027re on the launch pad and fuel is cheap), we can expect the cost of engines to dominate the equation.\n\u003C/p\u003E\n\u003Cp\u003E\n57. In the same limit, rememberring that E=me/mr=TWRcraft/TWRengine, we can get an interesting form showing that on the launch pad our bang for buck has a very convenient term of g0*Isp*\u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E/CostPerMass . Since I learned what Isp and \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E were I\u0027ve been wanting to multiply them together, so it\u0027s wonderful to have this excuse!\n\u003C/p\u003E\n\u003Cp\u003E\n58. In the same limit, since \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and Ce are both in terms of mass, the masses can cancel and we\u0027re left g0*Isp*Thrust/Cost. This completes the search for how Thrust per Cost relates to engine performance!\n\u003C/p\u003E\n\u003Cp\u003E\n59. In the limit of C0 \u0026gt;\u0026gt; Cf or Ce (ie very late in a mission), the bang for buck simplifies to being entirely determined by IspEff, regardless of cost of the engines being used.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022UzSBJ43.png\u0022 class=\u0022ipsImage\u0022 height=\u0022465\u0022 src=\u0022https://i.imgur.com/UzSBJ43.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\u003Cspan style=\u0022font-size:22px;\u0022\u003EDiscussion - Handling the Assumptions\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ETroubles faced from here\u003C/strong\u003E\u003Cbr\u003E\nThe work has been a great success for its main goal of gaining more understanding of what mechanisms play into optimizing a rocket\u0027s cost. When handled as stated, the equations will always provide the correct cost and deltaV for a rocket, however there are still some notable weak points when it comes to the optimization. It\u0027s natural to try to patch in the weak points and extend things farther, so here\u0027s the weak points, what they do, and how we might approach them.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ETroubles of the Uniform Assumption\u003C/strong\u003E\u003Cbr\u003E\nThere\u0027s two aspects of a real rocket that can allow us to improve upon the \u0027optimum\u0027 recommended by the equations shown. The first, and simpler, is the concept of \u0027dilution\u0027. When optimizing a rocket made of many stages, we can often eke a bit of extra efficiency by making the more efficient stages bigger (lower P) and the less efficient stages smaller (greater P) in order to dilute away the bad effects of the inefficient stages. This can be done even when it makes both stages individually less efficient. This is seen in both mass optimization and cost optimization. For small perturbations, the effect can be handled with linear optimization techniques. For large perturbations, I believe it can only be handled numerically. Though this is a possible way to eke a bit of extra optimization, it does have a drawback. We normally use less efficient stages (perhaps with high \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, good gimballing) for a reason (eg. we need them to land), and by decreasing the size of the less efficient (landing) stage, we may be shooting ourselves in the foot from a design standpoint. The place where I\u0027ve found this crop up most often in a useful way is that in KSP, large engines have slightly better efficiency (and slightly fuel costs) which will promote us to make the big early stages even larger than we would expect from the simple optimization using the formulas and graphs shown here. The effect can also be seen in simple mass efficiency in the mixed stage Ispeff equation Rocket_IspEff = sum(ln(P_i)*IspEff_i)/sum(ln(P_i)).\u00A0 Normal values for the mass optimum have been stages increasing/decreasing in size by ~10-100m/s per stage and gaining a couple percent overall efficiency for the rocket.\n\u003C/p\u003E\n\u003Cp\u003E\nThe second and trickier aspect of optimizing beyond the uniform assumption is that Ce-Cf (engine cost) is assumed constant and governs our expectation that making fewer-and-bigger stages will save on engine costs in the first stages of a rocket. This is true, but because engine costs (and payload fractions) will vary, it\u0027s hard to tell exactly how much is warranted. This can be handled in various ways, but the one\u0027s I\u0027ve found so far are a little too tabular for my liking. I think putting some work into the continuous assumption first would be best. It may simplify/complicate this a bit. Left to my own devices, this is the thing I\u0027ll poke at next.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ETroubles of the Continuous Assumption\u003C/strong\u003E\u003Cbr\u003E\nThe main issue with the continuous assumption is that if we want to integrate the equations into a real rocket we need to use an extra condition during the integration to apply the requirement that rockets can\u0027t change their properties mid stage. We can do this by simply fixing the design variables (like P) to be constant, but in this case determining exactly what value is optimal (for P in particular) requires iteration at present. This condition isn\u0027t necessary to compare engines, but it is for building a whole rocket from theory in a way we could optimize. Also, it\u0027s easy to estimate the most optimum P by grabbing a value from the curves at the end of the More Results section. The exact optimum though can\u0027t be found in this way. However, because the differential equations for cost and deltaV are actually very simple (1/a)dy = dx/(x\u002Bb) I\u0027m hoping to formulate a way to \u0027solve\u0027 the system of equations in a graphical form with some transforms or alternatively find an approximate but acceptable linearization to make a closed form solution. If neither pans out, this aspect would probably need to be left computational which would be a real shame.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\u003Cspan style=\u0022font-size:22px;\u0022\u003EHandling SRBs, LFBs and the like\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFortunately, it\u0027s fairly easy to incorporate SRBs, LFBs , asparagus and the like. Things like their \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and cost per mass would just be calculated in the normal ways from the following (\u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E = Thrust/Mass). As a note, I\u0027m doing these without my notebook handy, so I\u0027m just doing them fresh from memory. I\u0027m 98% sure everything will be right, but this is much more likely to have a mistake than the rest.\u003Cbr\u003E\u003Cbr\u003E\nSRBs can be handled as follows:\u003Cbr\u003E\nThrust = Thrust\u003Cbr\u003E\nEngine Mass = \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E drymass\u003Cbr\u003E\nEngine Cost = Empty cost\u003Cbr\u003E\nFuel Mass = full mass - dry mass\u003Cbr\u003E\nFuel Cost = full cost - empty cost\u003Cbr\u003E\nT = 0 (all of the fuel tank is already incorporated into the engine)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 P = 1-E-F\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 \u00A0 (E\u002BF) \u0026lt;/= E*(fullMass/dryMass)\u00A0\u00A0\u00A0\u00A0\u00A0 ... The fuel tanks can be underfilled but not over filled, so E\u002BF must be \u0026lt; or = E*(fullMass/dryMass)\u003Cbr\u003E\nMin P = 1-E*(fullMass/dryMass)\n\u003C/p\u003E\n\u003Cp\u003E\nLFBs are discontinuous and must be handled in 2 ways. When the LFB is being used with a partially filled tank and no extra fuel, it should be handled just as an \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E. When an LFB is being used with additional fuel it should be handled as follows:\u003Cbr\u003E\nThrust = Thrust\u003Cbr\u003E\nEngine Mass = dryMass - (fullMass - dryMass)*T/(1-T)\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 ...\u00A0 The mass of the engine is the dry mass minus the mass of the tanks. The tanks are the mass of the burnable fuel (full-dry) times T/(1-T)\u003Cbr\u003E\nEngine Cost = Full Cost - Cf*(fullMass - dryMass)/(1-T)\u003Cbr\u003E\nFuel Cost/Mass = Cf\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 P = 1-E-F\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 Minimum Initial Fuel Mass per Engine = (fullMass - dryMass)/(1-T)\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .... Then divide this by the mass per engine to get...\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 F/E \u0026gt; [fullMass - dryMass)/(1-T)] \u00A0 /\u00A0 [ dryMass - (fullMass - dryMass)*T/(1-T) ]\u00A0 = 1/(\u00A0 (dryMass/(fullMass-dryMass))*(1-T) - T\u00A0 )\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 \u00A0 (E\u002BF) \u0026gt;/= E*(1\u002B 1/((dryMass/(fullMass-dryMass))*(1-T) - T) )\u003Cbr\u003E\nMax P = 1-E*(1\u002B 1/((dryMass/(fullMass-dryMass))*(1-T) - T) )\n\u003C/p\u003E\n\u003Cp\u003E\nDecouplers and other extra sources of mass can be handled like engines. They can have a X = mx/mr\u00A0 and a Cx = $x/mx, and otherwise their path through the derivation just follows the engines till the end, winding up as an extra term like: E*(1/(1-P))*(Ce-Cf) \u002B X*(1/(1-P))*(Cx-Cf) .\u00A0\u00A0 and IspEff = Isp*ln(T\u002B(1-T)*(E\u002BX\u002BP))/ln(P)\n\u003C/p\u003E\n\u003Cp\u003E\nAsparagus can be handled by tracking the free \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E being provided by each stage starting at the top of the rocket and working down. If a stage provides free \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, the amount it provides the next stage down is \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E*P, so the amount the next stage will need to provide itself is (TWR_next - P*\u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E) . This sets that stage\u0027s E. Then combined Isps occur in the standard way.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cstrong\u003EReal World Applications\u003C/strong\u003E\u003Cbr\u003E\nNot many. Yet at least!\u003Cbr\u003E\nApplying this to KSP is fairly straightforward due to the way the game ignores (I believe smartly) many aspects of rocket science. The exception to this is fuel cost for small tanks (2.25t and less), which becomes\u00A0 scale dependent, but in a predictable way (I think). Applying these equations to the industry is even more complicated. Many terms taken to be constant in this work are actually very scale sensitive in real life. An example would be T, the fuel tank dry mass fraction, which in real life scales roughly with square-cube law (the surface area to volume ratio). Fortunately, many of these correction factors can be plugged in directly to the working equation (eq. 46) without refactoring any of the derivation, it\u0027s mostly a question of how jumbled it will get. I very much doubt this will change anything in the industry, but for us arm chair rocket scientists who value understanding over the bottom dollar, I think it\u0027s still very worth while!\u003Cbr\u003E\u003Cbr\u003E\u003Cstrong\u003EFurther Work\u003C/strong\u003E\u003Cbr\u003E\nToo many things!\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EErrata\u003C/strong\u003E\u003Cbr\u003E\nHave you found a typo in the math, or a confusing explanation that could use some work? Let me know! I\u0027m going to try editting the main post to make this as accessible as possible. Please note that for health reasons my ability to type is very limited, so changes may take a while, but thanks in advance for bringing things to my attention.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ECode\u003C/strong\u003E\u003Cbr\u003E\nI can make the solver code available if desired.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EA note on the term \u0022Effective Isp\u0022\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0So, it\u0027s been mentioned in an earlier thread that the term effective Isp is already in use in aviation, so I probably shouldn\u0027t use it. I\u0027ve thought it over carefully, and I think I\u0027ll stick with it on the basis that the effective Isp here and the effective Isp in aviation (jet engines) describe a very similar concept just in different contexts. In jet engines, the term Isp is used to describe how fuel is burned with incoming air to make a jet of exhaust that would have a certain Isp, but then energy is bled out (with a turbine) and used to push surrounding air (with a bypass fan) which increases the effective mass flow and effectively increases the impulse. This use of energy doesn\u0027t technically have an Isp any more than the fuel burning for energy in a prop plane\u0027s internal combustion engine does, but mathematically (and conceptually) we can handle it as if it did! Similarly, when our rocket dumps spent tanks and engines, it\u0027s not really dropping a 0 m/s exhaust stream, but we can treat it mathematically is if it were! In both cases all\u0027s we\u0027re trying to do is relate the total mass lost to the total impulse created despite the greater system doing something complicated.\n\u003C/p\u003E\n\u003Cp\u003E\nPlus, what else would we call it? \u003Cimg alt=\u0022^_^\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_happy.png\u0022 title=\u0022^_^\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd finally,\n\u003C/p\u003E\n\u003Cp\u003E\nThanks again for giving a glance, and I hope it\u0027s been interesting to ponder! It\u0027s always fun to see how these concepts we\u0027ve learned intuitively really come together.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-09-30T03:35:26Z\u0022 title=\u002209/30/2018 03:35  AM\u0022 data-short=\u00225 yr\u0022\u003ESeptember 30, 2018\u003C/time\u003E by Cunjo Carl\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ajiko","CreatedById":175351,"CreatedDateTime":"2018-09-27T09:04:02Z","Content":"\n\u003Cp\u003E\nSeems interesting, but what the conclusions?\n\u003C/p\u003E\n\u003Cp\u003E\nSeems Skipper\u002BPoodle pair must have top cost efficiency for LfOx rockets stages, right?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-09-27T09:07:37Z\u0022 title=\u002209/27/2018 09:07  AM\u0022 data-short=\u00225 yr\u0022\u003ESeptember 27, 2018\u003C/time\u003E by Ajiko\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Sharpy","CreatedById":145504,"CreatedDateTime":"2018-09-27T09:13:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223458564\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538039042\u0022 data-ipsquote-userid=\u0022175351\u0022 data-ipsquote-username=\u0022Ajiko\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, Ajiko said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSeems interesting, but what the conclusions?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nConclusion is \u0022 \u003Cspan style=\u0022font-size:20px;\u0022\u003EPost still under construction!\u003C/span\u003E \u0022 and this promises some quite useful tables of what engines, what \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E on them per stage etc. Currently it\u0027s not quite \u0022edible for general public\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/162109-cunjo-carl/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022162109\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/162109-cunjo-carl/\u0022 rel=\u0022\u0022\u003E@Cunjo Carl\u003C/a\u003E: Consider an option that appears rather frequently in the literature: heavy crappy lowest stage (\u0022big dumb rocket\u0022), and better, more efficient, more expensive engines on subsequent stages.\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2018-09-27T21:49:32Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223458564\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538039042\u0022 data-ipsquote-userid=\u0022175351\u0022 data-ipsquote-username=\u0022Ajiko\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, Ajiko said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSeems interesting, but what the conclusions?\n\u003C/p\u003E\n\u003Cp\u003E\nSeems Skipper\u002BPoodle pair must have top cost efficiency for LfOx rockets stages, right?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe conclusion is that the most cost efficient engine and stage size can actually depend heavily on your \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and on where you are in your mission, specifically on how many funds you\u0027ve spent up to this point.\n\u003C/p\u003E\n\u003Cp\u003E\nMost people already have an intuitive feel for this because KSP is fantastic for building intuition along that line, so this doesn\u0027t change any of the quintessential cost-effective rocket recipes like Kickbacks\u0026amp;Twinboar -\u0026gt; Skipper or Poodle -\u0026gt; Terrier -\u0026gt; Spark. It does explain \u0027why\u0027 though, which let\u0027s us figure do things like figure out exactly what the \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E cutoff is between Poodle or Dart being the better engine... Apparently above \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=0.75 Dart\u0027s a better choice than Poodle if you\u0027re extremely deep into a mission.\u00A0 Then, above \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=2.5, skipper would become the better choice. If you happen to be interested in more, here\u0027s the old v1.4 mass efficiency plots! \u003Ca href=\u0022https://drive.google.com/open?id=1TQUZmyqrDSCHopF3RR1x-hTuCoQZ-O0U\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://drive.google.com/open?id=1TQUZmyqrDSCHopF3RR1x-hTuCoQZ-O0U\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSharpy\u0027s right that the end idea is that we\u0027ll probably make plots/charts/programs based on this cost analysis as well, but for now the post is mostly for the chart and plot makers!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223458568\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538039638\u0022 data-ipsquote-userid=\u0022145504\u0022 data-ipsquote-username=\u0022Sharpy\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 hours ago, Sharpy said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nConclusion is \u0022 \u003Cspan style=\u0022font-size:20px;\u0022\u003EPost still under construction!\u003C/span\u003E \u0022 and this promises some quite useful tables of what engines, what \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E on them per stage etc. Currently it\u0027s not quite \u0022edible for general public\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/162109-cunjo-carl/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022162109\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/162109-cunjo-carl/\u0022 rel=\u0022\u0022\u003E@Cunjo Carl\u003C/a\u003E: Consider an option that appears rather frequently in the literature: heavy crappy lowest stage (\u0022big dumb rocket\u0022), and better, more efficient, more expensive engines on subsequent stages.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTotally agreed about the big dumb booster! I got back into this project (which is mostly for KSP) thinking about the recently proposed Pyrios booster\u0027s F1-B engines, which are a _less_ efficient but cheaper version of the old Saturn F1 engine. The juxtapose of less efficient but more modern is a fun one. Taking it a step farther, the once-proposed Sea Dragon is the pinnacle of big dumb booster\u0027ing, and I\u0027ve always wondered at exactly what point do we go from smart money-conscious design to just wasting money with inefficient boosters fizzling away fuel and dragging around the spent tanks.\n\u003C/p\u003E\n\u003Cp\u003E\nThe effect that really struck me from all this was that a big dumb booster actually has a cost incentive to be even bigger than its most mass efficient setup, so in KSP rather than using the standard 2000m/s per stage they might be more cost efficient at 2300m/s per stage (numbers from a hat). They\u0027re happy to trade out lost efficiency from being oversized (and pushing empty fuel tanks) in order to make next stage a little smaller than it would otherwise need to be. This is even the case if the next stage isn\u0027t any more expensive! That\u0027s one aspect of the big dumb booster concept that really surprised me. Naturally if the next stage is pricier, the effect becomes even greater. So to answer the question \u0027how big?\u0027 the answer is apparently \u0027really big!\u0027\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-09-28T05:03:25Z","Content":"\n\u003Cp\u003E\nThis looks like an excellent post. It might take me a while to read it though. Are you using making history? I\u0027d be curious to see whether the wolfhound is balanced in terms of cost.\n\u003C/p\u003E\n"},{"CreatedByName":"drhay53","CreatedById":150399,"CreatedDateTime":"2018-09-28T21:53:17Z","Content":"\n\u003Cp\u003E\nAs is typical for me, I went for the Monte Carlo like approach. The discrete nature of rocket building makes it a little harder so I had to learn something new to do it.\n\u003C/p\u003E\n\u003Cp\u003E\nI have tables of engines and fuel tank\u00A0properties (mostly for SSTU), including SRBs,\u00A0and I use simulated annealing to minimize the cost that will successfully launch a payload of a given mass. I have grown to love simulated annealing as an algorithm in place of brute force combinatorics in a large discrete parameter space.\n\u003C/p\u003E\n\u003Cp\u003E\nLaunch vehicle is considered valid if \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E \u0026gt; 3600 and sea-level \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E is between 1.2 and 1.3.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI commend you for the work in your post, but I\u0027m a better empiricist than theorist \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2018-09-29T17:22:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223459380\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538171597\u0022 data-ipsquote-userid=\u0022150399\u0022 data-ipsquote-username=\u0022drhay53\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 hours ago, drhay53 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs is typical for me, I went for the Monte Carlo like approach. The discrete nature of rocket building makes it a little harder so I had to learn something new to do it.\n\u003C/p\u003E\n\u003Cp\u003E\nI have tables of engines and fuel tank\u00A0properties (mostly for SSTU), including SRBs,\u00A0and I use simulated annealing to minimize the cost that will successfully launch a payload of a given mass. I have grown to love simulated annealing as an algorithm in place of brute force combinatorics in a large discrete parameter space.\n\u003C/p\u003E\n\u003Cp\u003E\nLaunch vehicle is considered valid if \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E \u0026gt; 3600 and sea-level \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E is between 1.2 and 1.3.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI commend you for the work in your post, but I\u0027m a better empiricist than theorist \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI happen to be working in particle physicist at the moment so Monte Carlo is near and dear to me as well! I\u0027m not familiar with simulated annealing, I\u0027ll be sure to give it a look.\n\u003C/p\u003E\n\u003Cp\u003E\nHave you been finding that \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E 1.2-1.3 is the most practical for your launchers? I\u0027d been having a hard time getting the SaturnV style stroll to work for me in KSP.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223459022\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538111005\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 9/27/2018 at 10:03 PM, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis looks like an excellent post. It might take me a while to read it though. Are you using making history? I\u0027d be curious to see whether the wolfhound is balanced in terms of cost.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027d be happy to do a comparison with Wolfhound, I\u0027m a little curious as well. Could you tell me the \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E you\u0027d be interested in?\n\u003C/p\u003E\n\u003Cp\u003E\nI think, along the same lines as you, I find the \u0027balance\u0027 of the new engines to be a bit of a misnomer when it comes to the Wolfhound \u003Cimg alt=\u0022^_^\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_happy.png\u0022 title=\u0022^_^\u0022\u003E, so it\u0027ll be interesting to see if its cost winds up being balanced.\n\u003C/p\u003E\n"},{"CreatedByName":"drhay53","CreatedById":150399,"CreatedDateTime":"2018-09-29T22:34:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223459751\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538241738\u0022 data-ipsquote-userid=\u0022162109\u0022 data-ipsquote-username=\u0022Cunjo Carl\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Cunjo Carl said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI happen to be working in particle physicist at the moment so Monte Carlo is near and dear to me as well! I\u0027m not familiar with simulated annealing, I\u0027ll be sure to give it a look.\n\u003C/p\u003E\n\u003Cp\u003E\nHave you been finding that \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E 1.2-1.3 is the most practical for your launchers? I\u0027d been having a hard time getting the SaturnV style stroll to work for me in KSP.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m an experimental astrophysicist myself (supernova cosmology to be exact) though at the moment I work\u00A0on HST and JWST data from a technical standpoint rather than mostly research. Once I learned python back in graduate school\u00A0I found that solving a problem quickly with a monte carlo or empirical approach was usually good enough for me outside of work \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EI like a low \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E for liftoff because it \u0022feels\u0022 the least \u0022wasteful\u0022. I haven\u0027t optimized that this is true, but it seems like it\u0027s the right combination of engine cost with necessary fuel; too much \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and you\u0027re probably overspending on the engine, and a cheaper option should be available. That\u0027s only true if the engines in your save are well balanced in terms of \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E, thrust, and cost though. I also like the low \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E because it works well with mods like GravityTurn for the ascent profile; typically my launchers are \u003Cabbr title=\u0022Single Stage to Orbit\u0022\u003ESSTO\u003C/abbr\u003E (occasionally requiring SRBs) and the circularization burn is less than 100 m/s. I feel like a low \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and a small circularization burn is more \u0022realistic\u0022.\u00A0\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSince I\u0027ve been playing with SSTU, I\u0027ve noticed I frequently don\u0027t need SRBs for typical launches, but as you\u0027re going through the tech tree, the annealing frequently picks SRBs to punch up that initial \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E while using a more efficient engine once they come off. I don\u0027t simulate the \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E atmospheric curve in my procedure, but I do keep track of how long the burns are and the rate of fuel consumption, so the code knows how much sea level \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E will be there when the SRBs come off. I require it to be \u0026gt; 1, which in practice\u00A0means it\u0027s a bit higher than that since usually the SRBs burn for 30-45 seconds and the \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E and thrust have come up a bit.\n\u003C/p\u003E\n\u003Cp\u003E\nMy philosophy for this particular code was \u0022don\u0027t let perfect be the enemy of good enough\u0022 \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0With SSTU and my code I can build a launcher for any payload in \u0026lt; 10 minutes and I don\u0027t have to build a collection of payload-rated subassemblies. I did that once and it took me weeks. And then I wanted to change mods for my next career and most of my launchers didn\u0027t work. So I wrote this to be flexible about the options available in any particular save and so that I could build the most cost-efficient launcher for any payload super fast.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-09-29T22:35:58Z\u0022 title=\u002209/29/2018 10:35  PM\u0022 data-short=\u00225 yr\u0022\u003ESeptember 29, 2018\u003C/time\u003E by drhay53\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-09-30T22:11:34Z","Content":"\n\u003Cp\u003E\nI just finished reading the post, very impressive work. I don\u0027t yet know enough calculus to follow the derivation, but the results are very satisfying, and align with my intuition and the common sense\u00A0advice on the forums. It\u0027s super interesting how the idea of using more expensive engines only when going very far shows up in the graphs.\n\u003C/p\u003E\n\u003Cp\u003E\nWhere does the NERV cross the poodle\u0027s line at 0.8 \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E? And does it cross it faster at 0.2 \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E?\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223459751\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538241738\u0022 data-ipsquote-userid=\u0022162109\u0022 data-ipsquote-username=\u0022Cunjo Carl\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 9/29/2018 at 10:22 AM, Cunjo Carl said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027d be happy to do a comparison with Wolfhound, I\u0027m a little curious as well. Could you tell me the \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E you\u0027d be interested in?\n\u003C/p\u003E\n\u003Cp\u003E\nI think, along the same lines as you, I find the \u0027balance\u0027 of the new engines to be a bit of a misnomer when it comes to the Wolfhound \u003Cimg alt=\u0022^_^\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_happy.png\u0022 title=\u0022^_^\u0022\u003E, so it\u0027ll be interesting to see if its cost winds up being balanced.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027d be most interested in 0.8 \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E or thereabouts, but I wonder how it would look at 1.2 \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E or higher.\n\u003C/p\u003E\n\u003Cp\u003E\nI agree, but I was surprised to see how well balanced the vector was for cost. (Only justifiable for reusable first stages)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-09-30T22:12:03Z\u0022 title=\u002209/30/2018 10:12  PM\u0022 data-short=\u00225 yr\u0022\u003ESeptember 30, 2018\u003C/time\u003E by Mad Rocket Scientist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2018-10-01T18:03:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223460211\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538345494\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 hours ago, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI just finished reading the post, very impressive work. I don\u0027t yet know enough calculus to follow the derivation, but the results are very satisfying, and align with my intuition and the common sense\u00A0advice on the forums. It\u0027s super interesting how the idea of using more expensive engines only when going very far shows up in the graphs.\n\u003C/p\u003E\n\u003Cp\u003E\nWhere does the NERV cross the poodle\u0027s line at 0.8 \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E? And does it cross it faster at 0.2 \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027d be most interested in 0.8 \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E or thereabouts, but I wonder how it would look at 1.2 \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E or higher.\n\u003C/p\u003E\n\u003Cp\u003E\nI agree, but I was surprised to see how well balanced the vector was for cost. (Only justifiable for reusable first stages)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks! And thanks for taking the time to read through.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s true about the vector- I also really appreciate how it fills a funny niche of having the best thrust per size in the game. It was the first time I\u0027d ever exploded a rocket from overheating while going up!\n\u003C/p\u003E\n\u003Cp\u003E\n(plots in the spoiler)\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022https://i.imgur.com/R01aZbp.png\u0022 class=\u0022ipsImage\u0022 alt=\u0022R01aZbp.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://i.imgur.com/CE1SCaZ.png\u0022 class=\u0022ipsImage\u0022 alt=\u0022CE1SCaZ.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://i.imgur.com/3YMF7eq.png\u0022 class=\u0022ipsImage\u0022 alt=\u00223YMF7eq.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://i.imgur.com/F9phyDi.png\u0022 class=\u0022ipsImage\u0022 alt=\u0022F9phyDi.png\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg src=\u0022https://i.imgur.com/2Qau7R3.png\u0022 class=\u0022ipsImage\u0022 alt=\u00222Qau7R3.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nSo the interplay between Poodle and NERV seems to be an interesting one. Above a \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E ~.75, Poodle actually winds up being more mass efficient, and since it\u0027s already much cheaper, there\u0027s no real benefit for NERV above there. NERV winds up becoming useful for late missions with \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=0.5, and early mission (ie. circularizing to \u003Cabbr title=\u0022Low Kerbin Orbit\u0022\u003ELKO\u003C/abbr\u003E) with \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=0.2 . At this low \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=0.2, Dawn then becomes cost efficient for the late mission, or more likely for me, any time the NERV is too big and clunky! Dawn is much more _mass_ efficient than NERV everywhere beneath a \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E~~0.5, but it\u0027s also far and away more expensive. For that reason, it seems to mostly be useful for very late missions or times when a smaller engine is unavoidable.\n\u003C/p\u003E\n\u003Cp\u003E\nSomething important to note, the cost problems of NERV or Dawn can be heavily offset if they\u0027re used on dockable/refillable craft with a mothership. In these cases, if they happen to better on paper late mission, they\u0027ll actually be better anytime.\n\u003C/p\u003E\n\u003Cp\u003E\nSo it turns out Wolfhound is just massively better than Poodle in every way. It\u0027s actually really disappointing! It has better \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E, Isp and Cost per thrust than the Poodle, so on paper there\u0027s no cases where you\u0027d ever want to use the old stand by, given the choice. It wasn\u0027t until I plugged the values into my spreadsheets that I noticed the cost per thrust of Wolfhound is only 4.48F/kN, which is easily the best for any liquid fueled engine in the game! It even edged out the previous cheapest Reliant at 4.58, so Poodle didn\u0027t stand a chance (5.2F/kN). Out of some puckish curiosity, I plotted Poodle and Wolfhound alongside Thud (representing KSP\u0027s worst medium-sized \u003Cabbr title=\u0022Liquid Fuel and Oxidizer\u0022\u003ELFO\u003C/abbr\u003E engine), and well, I think the plot almost speaks for itself! Wolfhound is as much better than Poodle as Poodle\u0027s better than Thud!\u003Cbr\u003E\u003Cbr\u003E\u003Cimg class=\u0022ipsImage\u0022 height=\u0022598\u0022 src=\u0022https://i.imgur.com/OBjz3YB.png\u0022 style=\u0022width:500px;height:auto;\u0022 width=\u00221024\u0022 alt=\u0022OBjz3YB.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI of course have no idea, but I\u0027ve always wondered if they designed the specs for new engines like Wolfhound so that certain of their missions would work out conveniently. That\u0027s all I can imagine, at least? Or someone just had a really big crush on the AJ10!\n\u003C/p\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-10-01T21:26:15Z","Content":"\n\u003Cp\u003E\nWow, looks like it\u0027s better than the poodle in\u00A0\u003Cem\u003Eevery\u00A0\u003C/em\u003Ecase, and better than the NERV in a surprising number\u00A0of cases. How does it compare to the terrier?\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2018-10-01T22:45:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223460633\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538429175\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n48 minutes ago, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWow, looks like it\u0027s better than the poodle in\u00A0\u003Cem\u003Eevery\u00A0\u003C/em\u003Ecase, and better than the NERV in a surprising number\u00A0of cases. How does it compare to the terrier?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTerrier is slightly worse than Poodle in all three categories (Isp, \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and Cost/thrust), so it\u0027ll always wind up being slightly less cost effective than Poodle on a per-ton-of-payload basis. That means that Wolfhound is better than Terrier to an even greater degree than it\u0027s better than Poodle! As far as I can see, Wolfhound is the simply the best by a wide margin for \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=~0.7 to \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E=~3 in vacuum.\n\u003C/p\u003E\n\u003Cp\u003E\nI haven\u0027t run the numbers, but just looking at its stats, Skiff is pretty fantastic looking as a launch engine (used as a stage-and-a-half with Kickback boosters), being almost as good on the launch pad as the two present reigning champions Skipper and TwinBoar, while it manages to handily outclass them in \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and Isp above 8km when the kickbacks would separate.\n\u003C/p\u003E\n\u003Cp\u003E\nThe engines from the original game have a lot of interesting niches and nuances, which I think we\u0027ve all found over the years. As far as I can see (and saying this as someone who hasn\u0027t played with the new engines), on paper it looks like Kickback, Skiff and Wolfhound could outclass everything else from the launch pad up, assuming \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E\u0026gt;0.7 .\u00A0 It\u0027s a bit of a dull conclusion, and to be honest, I think it\u0027s one of the big reasons I never adopted the new engines, despite having been a been a big fan of the other new parts and features. For others though, I\u0027m glad they make for some exciting missions.\n\u003C/p\u003E\n"},{"CreatedByName":"Nich","CreatedById":145678,"CreatedDateTime":"2018-10-01T23:28:49Z","Content":"\n\u003Cp\u003E\nCould the wolfhound be good because of economics of scale?\u00A0 Also if you are using the wolfhound you have an enormous payload.\u00A0 Perhaps you need to be more efficient with your payload.\u00A0 I have always wished I had versions of the terrier and poodle that were 70% smaller.\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2018-10-02T01:01:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223460684\u0022 data-ipsquote-contentid=\u0022178576\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221538436529\u0022 data-ipsquote-userid=\u0022145678\u0022 data-ipsquote-username=\u0022Nich\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Nich said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCould the wolfhound be good because of economics of scale?\u00A0 Also if you are using the wolfhound you have an enormous payload.\u00A0 Perhaps you need to be more efficient with your payload.\u00A0 I have always wished I had versions of the terrier and poodle that were 70% smaller.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCould be, the economics of scale definitely appear in the engines, where larger versions are typically a little bit better on the whole than smaller versions. The most direct example is Poodle/Terrier or Mamoth/Mainsail, but it\u0027s definitely a trend in KSP that bigger is in general a bit better. That said, despite them sharing a niche, Wolfhound (2.5tonne) is dramatically better than Rhino (9tonne) in almost all conditions they\u0027d normally be used in, so I don\u0027t think economics of scale quite cover it here...\n\u003C/p\u003E\n\u003Cp\u003E\n(** Here using economics of scale to refer to larger objects being cheaper per mass rather than the other meaning of things being cheaper by the dozen)\n\u003C/p\u003E\n\u003Cp\u003E\nAs for payload efficiency, it\u0027s definitely super important. But fortunately, the whole kit\u0027n\u0027kaboodle up at the top is expressly to find the best possible payload efficiency, so that\u0027s all covered! It\u0027s been a long time coming.\n\u003C/p\u003E\n\u003Cp\u003E\nI also wish we could tweak the scale of the engines. I\u0027d totally want a little baby twin boar for trips to Eve!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-10-02T01:06:50Z\u0022 title=\u002210/02/2018 01:06  AM\u0022 data-short=\u00225 yr\u0022\u003EOctober 2, 2018\u003C/time\u003E by Cunjo Carl\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"farmerben","CreatedById":190194,"CreatedDateTime":"2018-10-05T02:10:37Z","Content":"\n\u003Cp\u003E\nOutstanding post!\u00A0 I\u0027m slowly figuring out the answers to my first few questions.\u00A0 I\u0027ll have to reread the entire thing again sometime.\u00A0 Thanks.\u00A0\u00A0\n\u003C/p\u003E\n"}]}