{"TopicId":62283,"ForumId":32,"TopicTitle":"The Physics Glitchers: a case study of KSP\u0027s rigidbody breakdowns","CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-02-05T19:26:58Z","PageNum":1,"Articles":[{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-02-05T19:26:58Z","Content":"\n\u003Cp\u003E\u003Cimg src=\u0022http://www.skyrender.net/lp2/ksp/physics_glitcher.jpg\u0022 alt=\u0022physics_glitcher.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E As we all know, KSP\u0027s rigid-body physics are currently a bit... wonky, shall we say? And by \u0022a bit\u0022 I of course mean \u0022a lot\u0022. Some very strange things happen when you distribute mass across certain parts. In particular, a number of structural parts are so rigid that they cause fluctuations when conditions are right. But what conditions? I decided to do !SCIENCE! on the subject, and here are my results. You can try out any and all of them \u003Ca href=\u0022http://www.skyrender.net/lp2/ksp/physics_glitchers.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003ETest 1: Physics Glitcher\u003C/p\u003E\u003Cp\u003E The classic (pictured above): 8 long girders with FL-T200 tanks attached. Invariably, it shakes itself apart in seconds. Delightful.\u003C/p\u003E\u003Cp\u003ETest 2: Physics Glitcher Bi-Symmetrical Edition\u003C/p\u003E\u003Cp\u003E In the interest of fairness, I decided to test symmetry first. And the results... were surprising. The first test put a lot of weight on those girders, and they behaved more or less how they should.\u003C/p\u003E\u003Cp\u003ETest 3: Physics Glitcher Tri-Symmetrical Edition\u003C/p\u003E\u003Cp\u003E But what if we added more? Still no breakdown.\u003C/p\u003E\u003Cp\u003ETest 4: Physics Glitcher Quad-Symmetrical Edition\u003C/p\u003E\u003Cp\u003E But what if we added \u003Cem\u003Emore\u003C/em\u003E? Now we get both a breakdown and a breakdance as the rocket does the electric slide across the launchpad. Excellent.\u003C/p\u003E\u003Cp\u003ETest 5: Physics Glitcher Hex-Symmetrical Edition\u003C/p\u003E\u003Cp\u003E But what if we added \u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cem\u003Emore\u003C/em\u003E\u003C/span\u003E? Yep, we\u0027re back in familiar self-destructing territory. Conclusion this far: higher symmetry levels are all affected.\u003C/p\u003E\u003Cp\u003ETest 6: Physics Glitcher Pocket Edition\u003C/p\u003E\u003Cp\u003E So are the Pocket Edition I-Beams also affected? You bet your booties they are!\u003C/p\u003E\u003Cp\u003ETest 7: Physics Glitcher Jumbo Edition\u003C/p\u003E\u003Cp\u003E How about the huge thick girders? Oh yes they are.\u003C/p\u003E\u003Cp\u003ETest 8: Physics Glitcher Jumbo Pocket Edition\u003C/p\u003E\u003Cp\u003E And the third-size thick girders? Well...! No. They don\u0027t seem to be affected, or at least not to the degree that the others were since I didn\u0027t observe any fluctuations. In fact, they behave swimmingly.\u003C/p\u003E\u003Cp\u003ETest 9: Physics Glitcher Hardpoint Edition\u003C/p\u003E\u003Cp\u003E Surely hardpoints aren\u0027t affected! It seems like they aren\u0027t, so that\u0027s a bullet dodged.\u003C/p\u003E\u003Cp\u003ETest 10: Physics Glitcher Micro Edition\u003C/p\u003E\u003Cp\u003E One last test: Cubic Octagonal Struts. Other than when you do part-clipping, they seem to actually hold up just fine.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EConclusions\u003C/strong\u003E: The biggest conclusion we can draw from all of this is that high symmetry levels plus long girder segments plus heavy weights on the end equals problems. But some other fun stuff came out of these experiments, like the quad-symmetry version that shuffled off to Buffalo. These were all very short tests, however. Further long-term tests need to be run to see how stable objects are when left in orbit for a time with girders attached, as well as when they\u0027re left on the surface for some time in the same state.\u003C/p\u003E\n"},{"CreatedByName":"InterCity","CreatedById":98462,"CreatedDateTime":"2014-02-05T19:39:46Z","Content":"\n\u003Cp\u003ENice experiment. \u003C/p\u003E\u003Cp\u003EBut they have an one-stop fix for that: Kerbal Joint Reinforcement mod.\u003C/p\u003E\n"},{"CreatedByName":"Roastduck","CreatedById":98490,"CreatedDateTime":"2014-02-05T19:42:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JebKerboom\u0022 data-cite=\u0022JebKerboom\u0022\u003E\u003Cdiv\u003ENice experiment. \u003Cp\u003EBut they have an one-stop fix for that: Kerbal Joint Reinforcement mod.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ethis, or (hopefully, if I\u0027m not reading too much into the dev notes) .24\u003C/p\u003E\n"},{"CreatedByName":"Psycix","CreatedById":76916,"CreatedDateTime":"2014-02-05T19:43:08Z","Content":"\n\u003Cp\u003E.24 is likely going to overhaul physics. It\u0027d be interesting to see if that fixes these issues.\u003C/p\u003E\n"},{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-02-05T19:48:27Z","Content":"\n\u003Cp\u003EI\u0027m very much looking forward to seeing what 0.24 does. And I would not be surprised in the least if Ferram\u0027s joint reinforcement mod can in fact prevent these self-shake-apart rockets from doing their thing.\u003C/p\u003E\n"},{"CreatedByName":"Javster","CreatedById":74613,"CreatedDateTime":"2014-02-05T20:06:10Z","Content":"\n\u003Cp\u003E\u0022But what if we added more\u0022\u003C/p\u003E\u003Cp\u003EIs that an xkcd quote?\u003C/p\u003E\n"},{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-02-05T20:07:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Javster\u0022 data-cite=\u0022Javster\u0022\u003E\u003Cdiv\u003E\u0022But what if we added more\u0022\u003Cp\u003EIs that an xkcd quote?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom the What If series, yes. I like xkcd quite a bit.\u003C/p\u003E\n"},{"CreatedByName":"boxman","CreatedById":61559,"CreatedDateTime":"2014-02-05T20:40:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThe classic (pictured above): 8 long girders with FL-T200 tanks attached. Invariably, it shakes itself apart in seconds. Delightful.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs it just me or did you forget to post actual screenshot?? Because I dont see any..\u003C/p\u003E\n"},{"CreatedByName":"SpaceSphereOfDeath","CreatedById":69754,"CreatedDateTime":"2014-02-05T20:42:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SkyRender\u0022 data-cite=\u0022SkyRender\u0022\u003E\u003Cdiv\u003EFrom the What If series, yes. I like xkcd quite a bit.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s actually \u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://what-if.xkcd.com/imgs/a/13/laser_pointer_more_power.png\u0022 alt=\u0022laser_pointer_more_power.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EBut on topic, a nice experiment, science within science.\u003C/p\u003E\n"},{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-02-05T21:24:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022boxman\u0022 data-cite=\u0022boxman\u0022\u003E\u003Cdiv\u003EIs it just me or did you forget to post actual screenshot?? Because I dont see any..\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy site doesn\u0027t seem to work for everyone, but it\u0027s definitely there. Try accessing it \u003Ca href=\u0022http://www.skyrender.net/lp2/ksp/physics_glitcher.jpg\u0022 rel=\u0022external nofollow\u0022\u003Evia url\u003C/a\u003E instead.\u003C/p\u003E\n"},{"CreatedByName":"Comrade Jenkens","CreatedById":59544,"CreatedDateTime":"2014-02-05T21:29:11Z","Content":"\n\u003Cp\u003EI believe that we are both trying our hardest to break KSP here. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"HarvesteR","CreatedById":4,"CreatedDateTime":"2014-02-05T22:47:17Z","Content":"\n\u003Cp\u003EThese test results are consistent with the PhysX documentation tips about joint stability. The problem with wonky joints comes from a single source. The rigidbody solver has issues converging (finding a stable solution within the allowed iteration steps) when you have very high mass objects constraining low mass objects. On the test here, this was happening with the base of the test craft, which was constrained between the ground and an ever increasing load from the top of the craft.\u003C/p\u003E\u003Cp\u003ETry this for confirmation. Have the base object of the rocket be heavier, say, a large tank. Then stack the same test rig on top, and check the stability of the system in the same way. My prediction is that it will either take a lot more mass to make it start to wobble, or that the wobble will be happening between other joints.\u003C/p\u003E\u003Cp\u003ELastly, there is another situation which we can already say will be wholly cured with the new joints system. When you have long objects linked together, like a long truss or tank, up until now, that meant attached objects would end up creating a long joint between their attach point and the long object\u0027s center of mass. That means you\u0027d see on many occasions, objects dancing around on top of each other. With the new joints system, we have solved that. Now the attachment points are linked node-to-node, or in case of surface attachments, node-to-wherever-the-node-is-relative-to-the-surface... That means the joint itself is kept as short as possible, so that \u0027dancing wobble\u0027 effect is gone now.\u003C/p\u003E\u003Cp\u003EThere are a few cases still where we see flexing in the current state of the new system, some of those are intended, because we do want attachments that look flimsy to behave flimsy. We\u0027re still working to ensure those are the only cases where attachments are allowed to bend, but in any case, from what we can test here, there\u0027s already been a very noticeable improvement over the old system. \u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"SkyRender","CreatedById":10651,"CreatedDateTime":"2014-02-05T23:01:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003EThese test results are consistent with the PhysX documentation tips about joint stability. The problem with wonky joints comes from a single source. The rigidbody solver has issues converging (finding a stable solution within the allowed iteration steps) when you have very high mass objects constraining low mass objects. On the test here, this was happening with the base of the test craft, which was constrained between the ground and an ever increasing load from the top of the craft.\u003Cp\u003ETry this for confirmation. Have the base object of the rocket be heavier, say, a large tank. Then stack the same test rig on top, and check the stability of the system in the same way. My prediction is that it will either take a lot more mass to make it start to wobble, or that the wobble will be happening between other joints.\u003C/p\u003E\u003Cp\u003ELastly, there is another situation which we can already say will be wholly cured with the new joints system. When you have long objects linked together, like a long truss or tank, up until now, that meant attached objects would end up creating a long joint between their attach point and the long object\u0027s center of mass. That means you\u0027d see on many occasions, objects dancing around on top of each other. With the new joints system, we have solved that. Now the attachment points are linked node-to-node, or in case of surface attachments, node-to-wherever-the-node-is-relative-to-the-surface... That means the joint itself is kept as short as possible, so that \u0027dancing wobble\u0027 effect is gone now.\u003C/p\u003E\u003Cp\u003EThere are a few cases still where we see flexing in the current state of the new system, some of those are intended, because we do want attachments that look flimsy to behave flimsy. We\u0027re still working to ensure those are the only cases where attachments are allowed to bend, but in any case, from what we can test here, there\u0027s already been a very noticeable improvement over the old system. \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E Thanks for the clarification, Harv! I suspected it was PhysX at fault, as I\u0027ve actually observed variants of this behavior in other games that use the PhysX engine. I also knew that it wasn\u0027t something that could easily be addressed, or it would have been by now since it\u0027s been a problem pretty much from day one (and of course you guys knew; how could you miss it when it seems like half the fixes involve fixing problems with PhysX limits?). It\u0027d be a lot of trouble to model parts that aren\u0027t rigid-body for the girders, making it so that they can actually bend. I don\u0027t think I\u0027ve ever seen a game that allows for dynamic part flexing of that variety, in fact!\u003C/p\u003E\n"}]}