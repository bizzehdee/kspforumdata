{"TopicId":146962,"ForumId":32,"TopicTitle":"Am I right?","CreatedByName":"TheDestroyer111","CreatedById":160216,"CreatedDateTime":"2016-09-02T10:27:00Z","PageNum":1,"Articles":[{"CreatedByName":"TheDestroyer111","CreatedById":160216,"CreatedDateTime":"2016-09-02T10:27:00Z","Content":"\n\u003Cp\u003E\nAm I right that KSP can allocate RAM memory to itself only once (on startup), but can give back the memory to other applications as many times as other apps request it? If not, then why does the game develop pulsating fps drop like if it went out of RAM after I open up some stuff on the internet with KSP in the background, but the FPS drops continue even after I close all other applications than KSP? (If this problem doesn\u0027t exist on Windows, does it exist on a Mac? It happens mainly on my Mac, my other computer with Windows is very powerful and very rarely gets less than 60 fps in KSP anyway)\n\u003C/p\u003E\n"},{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2016-09-02T12:24:04Z","Content":"\n\u003Cp\u003E\nKSP can request additional memory from the operating system whenever needed, but before asking the OS for more RAM, it first checks if it has some memory already allocated that contains no longer needed data, and will reuse that memory if possible. This process is called \u0022\u003Ca href=\u0022https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\u0022 rel=\u0022external nofollow\u0022\u003Egarbage collection\u003C/a\u003E\u0022, and it sadly causes a noticable load spike.\n\u003C/p\u003E\n\u003Cp\u003E\nHow often this garbage collection happens depends on how much \u0022new\u0022 memory the game requires over time. Game developers typically try to keep this amount as small as possible, and currently the KSP developers are \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/142712-devnote-tuesday-smashing-buttons/\u0026amp;page=1\u0022 rel=\u0022\u0022\u003Eworking on exactly that issue\u003C/a\u003E. Another possible source of garbage are mods (if the mod\u0027s authors don\u0027t keep garbage avoidance in mind...), so when comparing your Windows and Mac installation, make sure to use the same mods on both.\n\u003C/p\u003E\n\u003Cp\u003E\nA long explanation of the whole process can be found in the Unity Engine\u0027s Manual page on \u003Ca href=\u0022https://docs.unity3d.com/Manual/UnderstandingAutomaticMemoryManagement.html\u0022 rel=\u0022external nofollow\u0022\u003EUnderstanding Automatic Memory Management\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nI would not expect KSP (or any other program) to care about the RAM usage of other applications, and other applications cannot demand memory back from KSP (not counting the operating system\u0027s out-of-memory killer, but if that would be running, you\u0027d notice it more drastically than by stuttering...). There is one thing though that could cause similar stuttering, and that\u0027s \u003Ca href=\u0022https://en.wikipedia.org/wiki/Paging\u0022 rel=\u0022external nofollow\u0022\u003Epaging\u003C/a\u003E. It doesn\u0027t have much to do with KSP (except that KSP uses lots of RAM...), but simply with the condition that physical RAM gets full. Once all open applications together require more RAM than there\u0027s physically available on the computer, the OS will start to move data that hasn\u0027t beem accessed in a while from RAM to HDD. If now a process wants to access that data, it has to be copied back from disk to RAM, and the disk access can cause a performance impact (if paging happens excessively, it\u0027s colloquiall called \u0022swapping hell\u0022 due to the performance impact...). In your case, what could happen imght be that KSP\u002Bwhatever you do in the background causes paging of data which is later on copied back to RAM in small portions whenever something accesses those portions.\n\u003C/p\u003E\n"},{"CreatedByName":"Warzouz","CreatedById":140055,"CreatedDateTime":"2016-09-02T12:53:35Z","Content":"\n\u003Cp\u003E\nFor what I understand, programs don\u0027t allocate \u0022physical memory\u0022, but just memory. The OS manage pages of memory block and swap them from physical memory to page file (stored on HD). when you start a program, this program request memory. The OS give it and if there is not enough physical\u00A0 memory it stores pages of memory of other less used programs on drive to free physical memory for that new program. But if the program don\u0027t use it, the memory will quickly be stored.\n\u003C/p\u003E\n\u003Cp\u003E\nOn my last computer on Win XP and also on Win7, I had this issue. Sometimes, my computer would slow down quite harshly. As my computer had 8GB, I forbid the usage of pagefile. Slowdown vanished. Only one game (I don\u0027t recall which one) had trouble because there was no pagefile on my computer (but a later patch removed this bug).\n\u003C/p\u003E\n\u003Cp\u003E\nNow, I\u0027m on Win10 with a SSD as primary disc (OS, softwares and games). I don\u0027t have any problem with pagefile. Maybe it\u0027s due to the better chipset infrastructure, or on Win 10 management, or on my 16GB or on my SSD. I don\u0027t know.\n\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2016-09-02T13:00:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739403\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472820815\u0022 data-ipsquote-userid=\u0022140055\u0022 data-ipsquote-username=\u0022Warzouz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, Warzouz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFor what I understand, programs don\u0027t allocate \u0022physical memory\u0022, but just memory. The OS manage pages of memory block and swap them from physical memory to page file (stored on HD). when you start a program, this program request memory. The OS give it and if there is not enough physical\u00A0 memory it stores pages of memory of other less used programs on drive to free physical memory for that new program. But if the program don\u0027t use it, the memory will quickly be stored.\n\u003C/p\u003E\n\u003Cp\u003E\nOn my last computer on Win XP and also on Win7, I had this issue. Sometimes, my computer would slow down quite harshly. As my computer had 8GB, I forbid the usage of pagefile. Slowdown vanished. Only one game (I don\u0027t recall which one) had trouble because there was no pagefile on my computer (but a later patch removed this bug).\n\u003C/p\u003E\n\u003Cp\u003E\nNow, I\u0027m on Win10 with a SSD as primary disc (OS, softwares and games). I don\u0027t have any problem with pagefile. Maybe it\u0027s due to the better chipset infrastructure, or on Win 10 management, or on my 16GB or on my SSD. I don\u0027t know.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou are aware that Windows will still page things out even with the pagefile disabled? Your performance increase with it disabled is likely due to it not having to do writes to do so. Personally, I\u0027ve found it best to set the pagefile size to 0MB minimum and system managed maximum, it\u0027s basically free protection from out of memory crashes.\n\u003C/p\u003E\n"},{"CreatedByName":"Warzouz","CreatedById":140055,"CreatedDateTime":"2016-09-02T14:17:28Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739411\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472821236\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou are aware that Windows will still page things out even with the pagefile disabled? Your performance increase with it disabled is likely due to it not having to do writes to do so. Personally, I\u0027ve found it best to set the pagefile size to 0MB minimum and system managed maximum, it\u0027s basically free protection from out of memory crashes.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes but it won\u0027t write pages on drive (which is very slow compared to RAM). Writing pages in SSD may be much faster though. Maybe that\u0027s why I don\u0027t tweak this option any more.\n\u003C/p\u003E\n\u003Cp\u003E\nEven with 8GB I never had out of memory problems.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for your option to let the system handle it (with 0 min), I this it\u0027s the defaut option now on windows 10. But back in win XP (and maybe win 7), even with that option, page \u003Cu\u003Efile\u003C/u\u003E would quickly rise even if there was free physical memory. As if the system would store old pages to disc even if there was plenty physical memory.\n\u003C/p\u003E\n\u003Cp\u003E\nTo be clear : my XP computer which was turned into win 7 at one time (I don\u0027t remember when though) had 4GB at first. It was quite slow. I increased RAM to 8GB. But as the computer was still quite slow and did a lot of had drive access even when doing quite nothing, I was bothered. I noticed that bringing back to front a old task also came with slowdown and drive access, even there was much free physical RAM.\n\u003C/p\u003E\n\u003Cp\u003E\nI turn down the page swapfile. Slow downs disappeared ans disc access became much more scared.\n\u003C/p\u003E\n\u003Cp\u003E\nUnder win 10, as I didn\u0027t noticed the same issue, I didn\u0027t tweaked this option. As I have a SSD, the issue may still be present but unnoticeable.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-02T14:24:43Z\u0022 title=\u002209/02/2016 02:24  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 2, 2016\u003C/time\u003E by Warzouz\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2016-09-02T15:38:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739411\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472821236\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPersonally, I\u0027ve found it best to set the pagefile size to 0MB minimum and system managed maximum, it\u0027s basically free protection from out of memory crashes.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nA piece of advice that has circulated, in the past, has been \u0022set the minimum and maximum file sizes to be the same.\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nThe idea behind such advice:\u00A0 Doing that forces the system to allocate a single, fixed-size file, right at the time that it\u0027s set up, which typically results in a single contiguous file that\u0027s not fragmented (distributed around the disk).\u00A0 Since it\u0027s a fixed size, all the various reads and writes that happen during normal operation only ever overwrite the existing blocks of the file-- those operations would never actually deallocate or re-allocate file blocks (since the size doesn\u0027t change), so the file stays nice and unfragmented.\u00A0 Having a variable-size pagefile means that the file could become fragmented over time, making a significant difference to performance.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever... it was a lot of years ago that I formed the knee-jerk habit of \u0022always make a constant-size pagefile\u0022 for good OS hygiene.\u00A0 There\u0027s been a lot of water under the bridge since then, and Windows has been through many major version upgrades, so I have no idea whether that bit of wisdom is still relevant or not.\u00A0 I\u0027ve also seen conflicting opinions on whether this ever actually helped all that much in the first place.\u00A0 Also, with the advent of SSDs, which don\u0027t have the \u0022seek times\u0022 that physical platters do, file fragmentation might not matter anymore.\n\u003C/p\u003E\n\u003Cp\u003E\nSo I could be completely out of date and incorrect on this.\u00A0 \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0 Just something to be aware of, on the off chance that it might still be relevant in some cases.\n\u003C/p\u003E\n\u003Cp\u003E\nI tried a bit of rummaging around to see if the above advice is pertinent.\u00A0 Some references that turned up:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nFrom 2009:\u00A0 \u003Ca href=\u0022http://serverfault.com/questions/48151/swap-file-fragmentation-fact-or-fiction\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://serverfault.com/questions/48151/swap-file-fragmentation-fact-or-fiction\u003C/a\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nWikipedia entry, marked in 2014 as \u0022needs update\u0022: \u003Ca href=\u0022https://en.wikipedia.org/wiki/Paging#Fragmentation\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://en.wikipedia.org/wiki/Paging#Fragmentation\u003C/a\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nFrom 2009, calls the \u0022make it constant size to avoid fragmentation\u0022 idea \u0022silly\u0022:\u00A0 \u003Ca href=\u0022https://lifehacker.com/5426041/understanding-the-windows-pagefile-and-why-you-shouldnt-disable-it\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://lifehacker.com/5426041/understanding-the-windows-pagefile-and-why-you-shouldnt-disable-it\u003C/a\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n...so, I\u0027m not seeing anything conclusive one way or the other, and nothing super recent.\u00A0 So, take the idea with however large a grain of salt you may prefer.\u00A0 \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2016-09-02T15:49:16Z","Content":"\n\u003Cp\u003E\nFragmentation of the pagefile never mattered much anyway, since it was being written to and read from in 4kB chunks at random locations within the file (occasionally stringing together enough of them to hit a few MB). The only issue with a large maximum size is if the OS has to enlarge it the system can slow\u00A0to a crawl while resizing the pagefile on a spinning disk, but consider that it is doing this\u00A0\u003Cem\u003Einstead of crashing\u003C/em\u003E. And that additional space consumed would be recovered upon next system restart. There is basically no downside to allowing the system to increase the pagefile size; it\u0027s free insurance against crashing.\n\u003C/p\u003E\n\u003Cp\u003E\nOf course, if you are hitting the pagefile regularly then really you should attack the root of the problem and add more RAM.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2016-09-02T17:21:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739573\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472831356\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOf course, if you are hitting the pagefile regularly then really you should attack the root of the problem and add more RAM.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt was more of an issue back when computers had a tiny fraction of the RAM they do now.\u00A0 Hard drives got big before RAM did.\u00A0 \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n(Thus my caveat about \u0022maybe it\u0027s not relevant anymore\u0022)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-09-02T17:39:39Z","Content":"\n\u003Cp\u003E\nFile Fragmentation was only an issue on traditional HDD.\u00A0 Fragmentation in itself meant the files were stored in such a way on the drive that the swing arm inside the drive had to move further out to access the data, or worse, had to move in for part of it and out for the rest.\u00A0 This would increase seek time.\n\u003C/p\u003E\n\u003Cp\u003E\nOn SSD, fragmentation will not cause this issue because it is accessed directly like RAM and in fact fragmentation (of sorts) is beneficial to the life of the Solid State chips.\u00A0 Solid state has a limited amount of writes and erases (but not reads) so modern operating systems (or possibly the drive itself, I\u0027m not entirely sure) automatically use a technique called wear leveling.\u00A0 This causes data to be written across all storage locations of the drive evenly, because if you wrote to the same location on one of the chips over and over again that would wear out that chip quickly while the rest of the chips on the drive were intact but unusable due to the exhausted chip.\u00A0 Wear leveling in itself is a form of purposeful and targeted fragmentation.\u00A0 Using wear leveling, your drive will probably last longer than you really need it to since you will probably want a bigger one eventually.\u00A0 Furthermore, attempting to defragment an SSD will actually cause more wear and and thus can harm your drive.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, back to the page file.\u00A0 Setting it\u0027s size to be fixed doesn\u0027t matter on an SSD.\u00A0 The drive and/or OS will wear level anyway so you are actually using the whole drive for the page file at some point.\u00A0 You just can\u0027t see it, it happens behind the scenes and the OS presents it as if it were the same storage space the whole time, even though it isn\u0027t.\u00A0 Furthermore, the drives are so blazing fast that it\u0027s read/write processes take no time at all.\n\u003C/p\u003E\n\u003Cp\u003E\nThere is some argument that a page file on an SSD is a bad thing because they are written and erased so many times compared to traditional file storage for programs and such.\u00A0 However with wear leveling in place it likely will not matter.\u00A0 Your drive is going to outlast your need for it or some other piece of the circuitry will fail before the solid state chips do.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-02T17:41:50Z\u0022 title=\u002209/02/2016 05:41  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 2, 2016\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Green Baron","CreatedById":107381,"CreatedDateTime":"2016-09-02T17:42:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739307\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472812020\u0022 data-ipsquote-userid=\u0022160216\u0022 data-ipsquote-username=\u0022TheDestroyer111\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, TheDestroyer111 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAm I right that KSP can allocate RAM memory to itself only once (on startup), but can give back the memory to other applications as many times as other apps request it? If not, then why does the game develop pulsating fps drop like if it went out of RAM after I open up some stuff on the internet with KSP in the background, but the FPS drops continue even after I close all other applications than KSP? (If this problem doesn\u0027t exist on Windows, does it exist on a Mac? It happens mainly on my Mac, my other computer with Windows is very powerful and very rarely gets less than 60 fps in KSP anyway)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI do not know about the internals of unity, c# and ksp, but i would assume that memory is allocated each time an object, method or function requests. When ksp is running the memory usage usually varies, mostly not towards lower numbers, so some internals do request memory and free it again, the source of so much anger these days :-)\n\u003C/p\u003E\n\u003Cp\u003E\nExample: on a scene change from ksp-view to \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003Evab\u003C/abbr\u003E the editor might request memory for the representation of all the parts, the graphics system has it\u0027s own memory but might also request some for the buffers it uses textures and things. When leaving the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003Evab\u003C/abbr\u003E, that memory is freed again (that\u0027s were we usually hold our breath). When enetering vessel view than other objects need memory, like props, the physics engine, etc. So memory usage \u0022breathes\u0022 with the objects in use.\n\u003C/p\u003E\n\u003Cp\u003E\nAn fps-drop might have other reasons than memory usage and may even be outside of ksp. On linux i didn\u0027t realize any drops even after hours of play.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Diche Bach","CreatedById":76097,"CreatedDateTime":"2016-09-02T17:51:11Z","Content":"\n\u003Cp\u003E\nGlad to see this thread. My modded build gets pretty unplayable after a few hours, and especially if I spend a couple hours designing big complex ships in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E. Glad to hear that Squad is looking at ways to reduce RAM usag\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-09-02T18:05:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739755\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472838671\u0022 data-ipsquote-userid=\u002276097\u0022 data-ipsquote-username=\u0022Diche Bach\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 minutes ago, Diche Bach said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nGlad to see this thread. My modded build gets pretty unplayable after a few hours, and especially if I spend a couple hours designing big complex ships in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E. Glad to hear that Squad is looking at ways to reduce RAM usag\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThey aren\u0027t looking to reduce RAM usage, they are looking to reduce the amount of garbage collection and other processes.\u00A0 This can mean reduced RAM usage as a byproduct, but it can actually mean more RAM usage as well.\u00A0 Programmers have the ability to choose when their program requests memory from the system.\u00A0 We call this \u0022Scope\u0022.\u00A0 It used to be taught that variables should be declared (storage space requested) in as narrow a scope as possible.\u00A0 This meant that the moment that function or subroutine terminated the memory would be freed.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, in modern languages it can often be the other way around with garbage collection.\u00A0 We have lots of memory but GC is slow, so the idea now is to declare frequently used variables (like loop incrementers which are used all the time) at a higher scope so they do not get turned over to garbage collection, however that also means they allocated persistently in memory.\u00A0 Therefore, more RAM usage.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s kind of like the computer programming version of recycling.\u00A0 Instead of making a new variable (or worse, instantiating a new object), we reset the existing one and use it again.\u00A0 You do have to be careful, though, that two subroutines are not using the same variable at the same time.\n\u003C/p\u003E\n\u003Cp\u003E\nPeople who moved from ANSI C and C\u002B\u002B to C# really have to fight the urge to declare variables at a narrow scope \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-02T18:07:20Z\u0022 title=\u002209/02/2016 06:07  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 2, 2016\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Corona688","CreatedById":2511,"CreatedDateTime":"2016-09-02T18:52:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739747\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472838141\u0022 data-ipsquote-userid=\u0022107381\u0022 data-ipsquote-username=\u0022Green Baron\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Green Baron said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI do not know about the internals of unity, c# and ksp, but i would assume that memory is allocated each time an object, method or function requests.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUnity, C#, whatever -- in the end, it\u0027s either C, or a language someone wrote in C, or a language in a language in a language someone wrote in C.\u00A0 At its very basics, memory is the same for everything.\n\u003C/p\u003E\n\u003Cp\u003E\nIgnoring details, a program gets an undifferentiated blob of memory from point A to point B which it can use however it pleases.\u00A0 It can also ask the operating system to extend the length between A and B.\n\u003C/p\u003E\n\u003Cp\u003E\nC manages this block of memory kind of like you would manage blocks on a hard drive -- giving sections to objects objects and remembering what sections aren\u0027t used.\u00A0 It doesn\u0027t give them back to the operating system when it\u0027s done with them, just keeps a record for itself of what points inside its assigned blob aren\u0027t occupied.\u00A0 This is called the heap.\n\u003C/p\u003E\n\u003Cp\u003E\nIn short:\u00A0 Once a program gets memory, it doesn\u0027t ever give it back.\u00A0 The OS can page it to disk if it has to, but can\u0027t force it to not exist.\n\u003C/p\u003E\n\u003Cp\u003E\nIf lots of tiny program objects are created and deleted frequently, the heap can fragment.\u00A0 This is nothing to do with hard drive fragmentation except that it\u0027s the same kind of problem -- there might be thousands of 64-byte chunks scattered around, but to find a 6\u003Cstrong\u003E5\u003C/strong\u003E-byte one, it might have to ask the OS for more.\u00A0 It just looks like the program\u0027s using more and more memory for no reason, when the wasted memory is really the too-small-to-use filler between objects in use.\u00A0 It\u0027s a major culprit of slowly bloating memory use, especially in high-level languages.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-02T19:08:07Z\u0022 title=\u002209/02/2016 07:08  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 2, 2016\u003C/time\u003E by Corona688\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-09-02T19:54:37Z","Content":"\n\u003Cp\u003E\nThe reference compiler for C# (called \u0027Roslyn\u0027) is written in C# and bootstrapped from previous versions of itself.\u00A0 So, no it\u0027s not written in C.\u00A0 The project is \u003Ca href=\u0022https://github.com/dotnet/roslyn\u0022 rel=\u0022external nofollow\u0022\u003Eopen source\u003C/a\u003E.\u00A0 The earliest version was likely compiled using a compiler written in C or C\u002B\u002B but bear in mind at the time of use it is machine language.\u00A0 That\u0027s what a compiler does after all.\u00A0 So the language of the compiler originally compiling a compiler for a new language is irrelevant, it\u0027s all machine language in the end.\n\u003C/p\u003E\n\u003Cp\u003E\n(if you completely understood that last sentence, kudos to you!)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-02T20:04:32Z\u0022 title=\u002209/02/2016 08:04  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 2, 2016\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Corona688","CreatedById":2511,"CreatedDateTime":"2016-09-02T20:04:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739873\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472846077\u0022 data-ipsquote-userid=\u0022110959\u0022 data-ipsquote-username=\u0022Alshain\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, Alshain said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe reference compiler for C# (called \u0027Roslyn\u0027) is written in C# and bootstrapped from previous versions of itself.\u00A0 So, no it\u0027s not written in C.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt still deals with the same memory interface, a \u0022block\u0022 from A to B, probably managed by its own private heap.\u00A0 That\u0027s not a programming language artifact, it\u0027s just the way things work.\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-09-02T20:15:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739882\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472846669\u0022 data-ipsquote-userid=\u00222511\u0022 data-ipsquote-username=\u0022Corona688\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 minutes ago, Corona688 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt still deals with the same memory interface, a \u0022block\u0022 from A to B, probably managed by its own private heap.\u00A0 That\u0027s not a programming language artifact, it\u0027s just the way things work.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt is, however the great power of memory managed and garbage collected languages means you don\u0027t have to do it yourself.\u00A0 This makes it hard to fragment the heap, and memory is released to the system.\u00A0 However it is cpu intensive. \u00A0 There are also exceptions where the garbage collector can not access that can cause heap fragmentation.\u00A0 The only one I know offhand is the Read and Write buffers on a socket.\u00A0 Typically you want to pool socket objects rather than make new ones.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-02T20:16:57Z\u0022 title=\u002209/02/2016 08:16  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 2, 2016\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Corona688","CreatedById":2511,"CreatedDateTime":"2016-09-02T20:33:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739897\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472847309\u0022 data-ipsquote-userid=\u0022110959\u0022 data-ipsquote-username=\u0022Alshain\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 minutes ago, Alshain said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt is, however the great power of memory managed and garbage collected languages means you don\u0027t have to do it yourself.\u00A0 This makes it hard to fragment the heap\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nGarbage-collected languages are among the \u003Cstrong\u003Eworst offenders\u003C/strong\u003E.\u00A0 Java for instance is infamous for it.\u00A0 Garbage collection is great for the programmer, but means lots of tiny allocations and deallocations for simple tasks.\u00A0 Fragmentation was inevitable anyway, but happens faster.\n\u003C/p\u003E\n\u003Cp\u003E\nTracking use is insufficient to avoid fragmentation, it has to \u003Cstrong\u003Emove memory that\u0027s being used.\u00A0 \u003C/strong\u003EIf it does that, I can certainly believe it\u0027d be CPU intensive!\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nand memory is released to the system.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis I really, \u003Cem\u003Ereally \u003C/em\u003Edoubt -- because it shouldn\u0027t in most circumstances.\u00A0 Frequently allocating and freeing memory at the segment level encourages fragmentation in the OS itself, and generally a waste of time anyway.\u00A0 If the program\u0027s still busy doing things, it\u0027s going to need it right back.\u00A0 That\u0027s why the heap segment is used this way.\n\u003C/p\u003E\n\u003Cp\u003E\nIt probably \u003Cem\u003Ecan\u0027t\u003C/em\u003E, either, unless it suddenly finds itself with a few hundred surplus megabytes all stuck together at the very end of the heap segment.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-02T20:37:04Z\u0022 title=\u002209/02/2016 08:37  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 2, 2016\u003C/time\u003E by Corona688\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Green Baron","CreatedById":107381,"CreatedDateTime":"2016-09-02T21:05:28Z","Content":"\n\u003Cp\u003E\nMemory is released to (and requested from) the kernel, who has the last word over the resources. It has the algorithms for the management. And yeah, in C\u002B\u002B one is strongly encouraged to keep the scope as small as possible :-)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWasn\u0027t aware that C#-compiler also makes machine-code, thought of some sort of p-code that has to be interpreted, interesting ... :-)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"TheDestroyer111","CreatedById":160216,"CreatedDateTime":"2016-09-02T21:05:40Z","Content":"\n\u003Cp\u003E\nAaaaannddd another\u00A0question got turned into a crazy discussion about everything and nothing xD\n\u003C/p\u003E\n\u003Cp\u003E\nSo, do I\u00A0understand it right that my case of pulsing FPS drops is caused by paging, meaning that due to Out Of RAM, some of the data gets onto temporary disk space and lag spikes appear when KSP tries to move the data from temporary disk space back to normal RAM?\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-09-02T21:17:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739957\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472850340\u0022 data-ipsquote-userid=\u0022160216\u0022 data-ipsquote-username=\u0022TheDestroyer111\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, TheDestroyer111 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAaaaannddd another\u00A0question got turned into a crazy discussion about everything and nothing xD\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSorry, but you opened with a very technical question \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739957\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472850340\u0022 data-ipsquote-userid=\u0022160216\u0022 data-ipsquote-username=\u0022TheDestroyer111\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 minutes ago, TheDestroyer111 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo, do I\u00A0understand it right that my case of pulsing FPS drops is caused by paging, meaning that due to Out Of RAM, some of the data gets onto temporary disk space and lag spikes appear when KSP tries to move the data from temporary disk space back to normal RAM?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s one possibility, it honestly could be a lot of things.\u00A0 Visual effects like engine smoke and such can cause lag spikes as well.\u00A0 Part count can cause physics lag.\u00A0 What are your system specs?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Corona688","CreatedById":2511,"CreatedDateTime":"2016-09-02T21:19:36Z","Content":"\n\u003Cp\u003E\nProbably better to check OSX\u0027s system monitor or equivalent thing rather than guess.\u00A0 Maybe it\u0027s paging, maybe it\u0027s not.\n\u003C/p\u003E\n"},{"CreatedByName":"TheDestroyer111","CreatedById":160216,"CreatedDateTime":"2016-09-02T21:25:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739973\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472851042\u0022 data-ipsquote-userid=\u0022110959\u0022 data-ipsquote-username=\u0022Alshain\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, Alshain said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSorry, but you opened with a very technical question \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s one possibility, it honestly could be a lot of things.\u00A0 Visual effects like engine smoke and such can cause lag spikes as well.\u00A0 Part count can cause physics lag.\u00A0 What are your system specs?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nJust like Alshain typically does, he didn\u0027t read the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E at all. Read the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nAs a reminder, the specific type of lag\u00A0I mean is a lag that pulses between 5-15 fps once every few seconds (AFAIK this kind of pulsating is typically caused by Out Of RAM). This never appears right after getting into the game, and instead it appears when I open some stuff in other programs than KSP. Thing is, the specific type of lag I mean does NOT stop happening when I close all other programs after the lag appeared.\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-09-02T21:26:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739956\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472850328\u0022 data-ipsquote-userid=\u0022107381\u0022 data-ipsquote-username=\u0022Green Baron\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 minutes ago, Green Baron said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWasn\u0027t aware that C#-compiler also makes machine-code, thought of some sort of p-code that has to be interpreted, interesting ... :-)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt can do both.\u00A0 The specification for C# does not require any specific runtime, however it can also use runtimes like Mono or .NET.\n\u003C/p\u003E\n"},{"CreatedByName":"Diche Bach","CreatedById":76097,"CreatedDateTime":"2016-09-02T21:27:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739766\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472839507\u0022 data-ipsquote-userid=\u0022110959\u0022 data-ipsquote-username=\u0022Alshain\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Alshain said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThey aren\u0027t looking to reduce RAM usage, they are looking to reduce the amount of garbage collection and other processes.\u00A0 This can mean reduced RAM usage as a byproduct, but it can actually mean more RAM usage as well.\u00A0 Programmers have the ability to choose when their program requests memory from the system.\u00A0 We call this \u0022Scope\u0022.\u00A0 It used to be taught that variables should be declared (storage space requested) in as narrow a scope as possible.\u00A0 This meant that the moment that function or subroutine terminated the memory would be freed.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, in modern languages it can often be the other way around with garbage collection.\u00A0 We have lots of memory but GC is slow, so the idea now is to declare frequently used variables (like loop incrementers which are used all the time) at a higher scope so they do not get turned over to garbage collection, however that also means they allocated persistently in memory.\u00A0 Therefore, more RAM usage.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s kind of like the computer programming version of recycling.\u00A0 Instead of making a new variable (or worse, instantiating a new object), we reset the existing one and use it again.\u00A0 You do have to be careful, though, that two subroutines are not using the same variable at the same time.\n\u003C/p\u003E\n\u003Cp\u003E\nPeople who moved from ANSI C and C\u002B\u002B to C# really have to fight the urge to declare variables at a narrow scope \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAh, so C# does suck just as bad as Java then eh!?\u00A0\u003Cimg alt=\u0022:sticktongue:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 title=\u0022:sticktongue:\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t pretend to have mastered the use of pointers and data structures yet, but I\u0027d much rather struggle to learn and use them effectively, i.e., write in C\u002B\u002B.\n\u003C/p\u003E\n\u003Cp\u003E\nSkyrim, Stellaris, Jagged Alliance 2, Fallout 4: all designed with engines based on C\u002B\u002B, all perform well with\u00A0enormous numbers of mods (120 to 200 separate plugins)\u00A0as long as they are not mutually exclusive mods). KSP, not so much . . . indeed KSP seems to handle heavily modded builds actually worse than Minecraft does.\n\u003C/p\u003E\n\u003Cp\u003E\nSo am I being too simplistic or not quite getting anything right here?\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-09-02T21:27:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222739985\u0022 data-ipsquote-contentid=\u0022146962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221472851549\u0022 data-ipsquote-userid=\u0022160216\u0022 data-ipsquote-username=\u0022TheDestroyer111\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, TheDestroyer111 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nJust like Alshain typically does, he didn\u0027t read the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E at all. Read the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nAs a reminder, the specific type of lag\u00A0I mean is a lag that pulses between 5-15 fps once every few seconds (AFAIK this kind of pulsating is typically caused by Out Of RAM). This never appears right after getting into the game, and instead it appears when I open some stuff in other programs than KSP. Thing is, the specific type of lag I mean does NOT stop happening when I close all other programs after the lag appeared.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOk, well everything I mentioned could cause that but since you are being rude, you are on your own.\n\u003C/p\u003E\n"}]}