{"TopicId":117211,"ForumId":16,"TopicTitle":"Finding normal vector to arbitrary orbit","CreatedByName":"Aristarchus","CreatedById":127970,"CreatedDateTime":"2015-07-29T21:49:01Z","PageNum":1,"Articles":[{"CreatedByName":"Aristarchus","CreatedById":127970,"CreatedDateTime":"2015-07-29T21:49:01Z","Content":"\n\u003Cp\u003EHi All,\u003C/p\u003E\u003Cp\u003EI am trying to write a KOS script that can automatically match an arbitrary orbit (like for the launch satellite contracts). The parameters given are: apoapsis, periapsis, inclination, longitude of ascending node (LAN), and argument of periapsis. I am stuck trying to find the normal vector given these parameters. I know I need to take the cross-product of two vectors within the plane, the LAN and Arg. of Per. stand out, but I can\u0027t seem to find them. I have been using this image from wikipedia as a guide.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/wikipedia/commons/e/eb/Orbit1.svg\u0022 alt=\u0022Orbit1.svg\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnd came up with the following equations for the vectors.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E   LAN        ArgPer\u003Cbr\u003Ex  cos(        cos(b\u002Bc)*sin(a)\u003Cbr\u003Ey  0            cos(a)\u003Cbr\u003Ez  sin(      sin(b\u002Bc)*sin(a)\u003Cbr\u003E\u003Cbr\u003Ea=inclination\u003Cbr\u003Eb=longitude of ascendng node\u003Cbr\u003Ec=argument of periapsis\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut when I try to visualize them they are all over the place, as you can see.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022\u0022 alt=\u0022a\u0026gt;\u0022\u003E\u003C/p\u003E\u003Cp\u003EDoes anyone have a better way to find the normal, or could perhaps help me with my equations? My code is below if it is of interest.\u003C/p\u003E\u003Cp\u003EThanks,\u003C/p\u003E\u003Cp\u003EA\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eclearvecdraws().\u003Cbr\u003E\u003Cbr\u003E//Create a vector to center of kerbin\u003Cbr\u003Eset geo to kerbin:position.\u003Cbr\u003Eset geo:mag to (ship:altitude/2).\u003Cbr\u003E//print geo:mag.\u003Cbr\u003E//SET anArrow2 TO VECDRAW(V(0,0,0),geo,RGB(0,0,1),\u0022Geo?\u0022,5.0,TRUE).\u003Cbr\u003E\u003Cbr\u003E//Draw global axes for frame of reference\u003Cbr\u003E//                      /startPos/ /vector/  //color//        /label/  /size/\u003Cbr\u003Eset xAxis to VECDRAWARGS( geo, V(200000,0,0), RGB(1.0,0.5,0.5), \u0022X axis\u0022, 5, TRUE ).\u003Cbr\u003Eset yAxis to VECDRAWARGS( geo, V(0,200000,0), RGB(0.5,1.0,0.5), \u0022Y axis\u0022, 5, TRUE ).\u003Cbr\u003Eset zAxis to VECDRAWARGS( geo, V(0,0,200000), RGB(0.5,0.5,1.0), \u0022Z axis\u0022, 5, TRUE ).\u003Cbr\u003E\u003Cbr\u003E//readin standard orbrit parameters\u003Cbr\u003Eset a to ship:obt:inclination.\u003Cbr\u003Eset b to ship:obt:LAN.\u003Cbr\u003Eset c to ship:obt:argumentofperiapsis.\u003Cbr\u003E\u003Cbr\u003E//I am naturally thinking of the xy plane being equatorial and z axis through the \u003Cbr\u003E//poles but kos run z axis through poles so I might still be thinking of this step wrong\u003Cbr\u003E//set b to 360.\u003Cbr\u003E//x=r*cos(theta)*sin(phi)\u003Cbr\u003E//y=r*sin(theta)*sin(phi)\u003Cbr\u003E//z=r*cos(phi)\u003Cbr\u003E//theta=incl\u003Cbr\u003E//phi=LAN\u003Cbr\u003E\u003Cbr\u003E//this table summarizes my vector equations.\u003Cbr\u003E//so LAN      ArgPer\u003Cbr\u003E//x  cos(   cos(b\u002Bc)*sin(c)\u003Cbr\u003E//y  0           cos(c)\u003Cbr\u003E//z  sin(   sin(b\u002Bc)*sin(c)\u003Cbr\u003E\u003Cbr\u003E//            x     y   z\u003Cbr\u003Eset lan to V(cos(,0,sin().  //LAN runs through the equatorial xz-plane\u003Cbr\u003Eset lan:mag to 200000.\u003Cbr\u003ESET anArrow TO VECDRAW(geo,lan,RGB(1,0,0),\u0022LAN?\u0022,5.0,TRUE ).\u003Cbr\u003E\u003Cbr\u003E//The argument of periapsis is tilted into the y plane by the inclination, \u003Cbr\u003E//the angle appears to be measured from the LAN\u003Cbr\u003Eset argper to V(cos(b\u002Bc)*sin(a),cos(c),sin(b\u002Bc)*sin(a)). \u003Cbr\u003Eset argper:mag to 200000.\u003Cbr\u003ESET anArrow0 TO VECDRAW(geo,ArgPer, RGB(0,0,1), \u0022ArgPer?\u0022,5.0,TRUE).\u003Cbr\u003E\u003Cbr\u003ESET norm to VCRS(velocity:orbit, ship:body:position).\u003Cbr\u003Eset norm:mag to 50000.\u003Cbr\u003ESET anArrow1 TO VECDRAW(V(0,0,0),norm,RGB(0,1,0),\u0022Normal\u0022,5.0,TRUE ).\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-04T06:07:24Z\u0022 title=\u002208/04/2015 06:07  AM\u0022 data-short=\u00228 yr\u0022\u003EAugust 4, 2015\u003C/time\u003E by Aristarchus\u003C/strong\u003E\n\u003Cbr\u003Efix equation\n\u003C/span\u003E\n"},{"CreatedByName":"jkool702","CreatedById":146465,"CreatedDateTime":"2015-07-29T22:20:47Z","Content":"\n\u003Cp\u003ESo I\u0027m not familiar with kOS, but i have an idea you might be able to try. I think the cross product you would need to take is (vector to center of kerbin) x (current velocity vector) (note that these might need to be reversed or else it might be off by a negative sign). You seen to be able to get the vector to the center of kerbin, maybe there is an easy way for kOS to pull up a vector describing your current velocity?\u003C/p\u003E\u003Cp\u003EIf not, maybe you can numerically approximate it? i.e. make vector from position(@t=t0) to position(@t=t0\u002Beps)?\u003C/p\u003E\n"},{"CreatedByName":"Aristarchus","CreatedById":127970,"CreatedDateTime":"2015-07-29T22:31:56Z","Content":"\n\u003Cp\u003EThanks for the reply. I just got started with KOS, and am more an aspiring than actual programmer. I am actually just using the vessel orbit as a test case and have found that normal exactly the way you suggested. The problem comes when I try to find the normal to an unoccupied orbit, like what you get when you accept a satellite contract. In that case I only have the five values the game gives. Everything else should be definable from these, but I can\u0027t find a match.\u003C/p\u003E\u003Cp\u003EThanks,\u003C/p\u003E\u003Cp\u003EA\u003C/p\u003E\n"},{"CreatedByName":"FancyMouse","CreatedById":142946,"CreatedDateTime":"2015-07-29T22:56:40Z","Content":"\n\u003Cp\u003EI don\u0027t think argument of periapsis ever matters - inclination and LAN should be enough to determine your normal vector of the orbital plane. I haven\u0027t found an easier way to compute (would need to involve an equivalent form of quarternions for 3D rotation and I haven\u0027t worked out details), but first try substituting the b,c in your formula with either a,b or b,a?\u003C/p\u003E\n"},{"CreatedByName":"Aristarchus","CreatedById":127970,"CreatedDateTime":"2015-07-29T23:45:15Z","Content":"\n\u003Cp\u003EI have to admit, I am not sure what you are saying, but I did meddle with the angles without any luck. I did find an error in my equation as written, but it didn\u0027t solve my problem. I have been focusing on getting the LAN matched, since that only requires one variable. Still no luck though.\u003C/p\u003E\n"},{"CreatedByName":"Pecan","CreatedById":96332,"CreatedDateTime":"2015-07-29T23:53:09Z","Content":"\n\u003Cp\u003EI suspect I\u0027m missing something very important here and am feeling too stupid to see it (excuses: it\u0027s very late, I\u0027m very tired and have been to the pub).\u003C/p\u003E\u003Cp\u003E\u0027Normal\u0027 is 90-degrees to the inclination, rotated by the longitude (of An, or Dn if you want the anti-normal). Radial is a type of tyre. Prograde is what the experts get. Please tell me what the other stuffs about, by PM if it\u0027s less annoying to everyone else.\u003C/p\u003E\n"},{"CreatedByName":"FancyMouse","CreatedById":142946,"CreatedDateTime":"2015-07-30T00:21:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pecan\u0022 data-cite=\u0022Pecan\u0022\u003E\u003Cdiv\u003EI suspect I\u0027m missing something very important here and am feeling too stupid to see it (excuses: it\u0027s very late, I\u0027m very tired and have been to the pub).\u003Cp\u003E \u0027Normal\u0027 is 90-degrees to the inclination, rotated by the longitude (of An, or Dn if you want the anti-normal). Radial is a type of tyre. Prograde is what the experts get. Please tell me what the other stuffs about, by PM if it\u0027s less annoying to everyone else.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOP understand what normal means. OP is trying to figure out the exact value of the normal vector based on the orbital parameters, i.e. pure math, not just concept of it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Aristarchus\u0022 data-cite=\u0022Aristarchus\u0022\u003E\u003Cdiv\u003EI have to admit, I am not sure what you are saying, but I did meddle with the angles without any luck. I did find an error in my equation as written, but it didn\u0027t solve my problem. I have been focusing on getting the LAN matched, since that only requires one variable. Still no luck though.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETry (sin(a)*sin(\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E, cos(a), -sin(a)*cos(\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E). You may need to swap x and z components, and/or flip signs as I can\u0027t distinguish from your picture which is x axis and which is z axis, nor their directions.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-30T00:25:11Z\u0022 title=\u002207/30/2015 12:25  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 30, 2015\u003C/time\u003E by FancyMouse\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pecan","CreatedById":96332,"CreatedDateTime":"2015-07-30T00:40:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022FancyMouse\u0022 data-cite=\u0022FancyMouse\u0022\u003E\u003Cdiv\u003EOP understand what normal means...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnyone understand what \u0022I suspect \u003Cstrong\u003EI\u0027m\u003C/strong\u003E missing something very important here...\u0022 means?\u003C/p\u003E\u003Cp\u003ELike, amongst all this learned discussion of vector maths; how come I only see what look like scalars?\u003C/p\u003E\u003Cp\u003EYou\u0027ve made my head hurt now because I tried to read that code. Is that KOS these days?\u003C/p\u003E\n"},{"CreatedByName":"FancyMouse","CreatedById":142946,"CreatedDateTime":"2015-07-30T00:50:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pecan\u0022 data-cite=\u0022Pecan\u0022\u003E\u003Cdiv\u003EAnyone understand what \u0022I suspect \u003Cstrong\u003EI\u0027m\u003C/strong\u003E missing something very important here...\u0022 means?\u003Cp\u003ELike, amongst all this learned discussion of vector maths; how come I only see what look like scalars?\u003C/p\u003E\u003Cp\u003EYou\u0027ve made my head hurt now because I tried to read that code. Is that KOS these days?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI did read that and I tried to clarify things to you as objective as I can. Sorry if it still sounds offending to you and I didn\u0027t mean that.\u003C/p\u003E\u003Cp\u003EI don\u0027t feel anything strange about that piece of kOS code, but I admit I go into this world pretty late - in fact, I\u0027ve been in this game for just several months and I don\u0027t know how kOS used to be.\u003C/p\u003E\n"},{"CreatedByName":"mhoram","CreatedById":78756,"CreatedDateTime":"2015-07-30T01:04:59Z","Content":"\n\u003Cp\u003EAn other way to get vectors that are in the orbital plane is to use the current Position and Velocity vector of the ship relative to the planets core. Both vectors are within the orbital plane and can be used for the cross product.\u003C/p\u003E\n"},{"CreatedByName":"Aristarchus","CreatedById":127970,"CreatedDateTime":"2015-07-30T04:52:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pecan\u0022 data-cite=\u0022Pecan\u0022\u003E\u003Cdiv\u003EAnyone understand what \u0022I suspect \u003Cstrong\u003EI\u0027m\u003C/strong\u003E missing something very important here...\u0022 means?\u003Cp\u003ELike, amongst all this learned discussion of vector maths; how come I only see what look like scalars?\u003C/p\u003E\u003Cp\u003EYou\u0027ve made my head hurt now because I tried to read that code. Is that KOS these days?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPlease don\u0027t judge KOS based on my crummy programming ability. I have a little experience but I am far from experienced and have rarely needed to display my code. The challenge I am having is how to create the vectors given the scalar properties of the orbit. Once I have that it is just a matter of taking a few cross-products to find the orbital nodes. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ETry (sin(a)*sin(\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E, cos(a), -sin(a)*cos(\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E). You may need to swap x and z components, and/or flip signs as I can\u0027t distinguish from your picture which is x axis and which is z axis, nor their directions.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI tried a variation of this equation and got a near miss, so I will keep playing with it and see how it works with different orbits. I have been assuming that the x-axis points toward the reference point, but that assumption might be invalid. If the axis was wrong I should just be off by 90 degrees, not ten. Now my head hurts, but I will figure this out.\u003C/p\u003E\u003Cp\u003EEdit: It seems that not only does the x-axis not point in the reference direction, but it doesn\u0027t point to anything in particular and is not fixed. So the analytic approach may prove fruitless due to the limitations of KOS and the KSP coordinate system.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-30T05:17:29Z\u0022 title=\u002207/30/2015 05:17  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 30, 2015\u003C/time\u003E by Aristarchus\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-30T08:06:34Z","Content":"\n\u003Cp\u003EThe missing piece of information is what is the Reference Direction of the KSP\u0027 solar system, expressed in whatever the current game\u0027s XYZ axes are rotated to, which varies as you play the game for complex reasons, which is why it\u0027s not just always the x axis or always the z axis. The Reference Direction is some arbitrary made-up direction that stays constant (even though if expressed in XYZ coords it won\u0027t appear to be constant, because the universe\u0027s coords rotation changes every time you ascend/descend to a planet or moon and the game swaps between planet-fixed and planet-rotating modes.) Usually in Astronomy the Reference Direction refers to some distant star that doesn\u0027t move much over time relative to our solar system but is findable in a telescope. That\u0027s why we\u0027re helpless to figure out what it means in KSP - there is no such thing as a distant star on which to base the vector - the universe outside the solar system doesn\u0027t exist - that backdrop of stars is just a fake painting.\u003C/p\u003E\u003Cp\u003EWithout that Reference Direction, the Longitude of the Ascending Node is meaningless, and it\u0027s THAT that you need to really answer the question.\u003C/p\u003E\u003Cp\u003EIn other cases we\u0027ve been able to get around this problem because there\u0027s an object actually in the orbit so you can get the normal by looking at that object\u0027s velocity vector and its position vector. This works great for trying to match orbits for a rendezvous or a dock - but for an orbit that doesn\u0027t exist on any object yet, you can\u0027t get that information.\u003C/p\u003E\u003Cp\u003EIn digging through the mostly undocumented KSP API over the last hour or so, trying to find anything called a \u0022reference direction\u0022 of any sort, I come up with a google hit or two where other modders claim \u0022Planetarium.Right\u0022 might be the reference direction of the LAN. If so, then at the moment you\u0027re out of luck because kOS doesn\u0027t expose that information to scripts. But if the mysteriously named \u0022Planetarium.Right\u0022 is the undocumented secret reference direction of the orbital parameters, then kOS should be updated to expose it, as it is necessary information for the rest of the orbital parameters it returns to be complete.\u003C/p\u003E\u003Cp\u003EI\u0027ve made an issue for this over on the kOS GITHUB site. But I don\u0027t know how long it will be before a release containing it is out:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1116\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/issues/1116\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mhoram\u0022 data-cite=\u0022mhoram\u0022\u003E\u003Cdiv\u003EAn other way to get vectors that are in the orbital plane is to use the current Position and Velocity vector of the ship relative to the planets core. Both vectors are within the orbital plane and can be used for the cross product.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe difficulty the OP is having is that in this case there is no such object to get a position and velocity of, because the orbit is a contract parameter defined ONLY by giving the Keplerian values as described. These are the sorts of colored hypothetical future orbits you see in the game when you accept a contract for a satellite but haven\u0027t fulfilled it yet and the map view has a colored orbit with nothing in it to help show you were you need to end up. Those sorts of \u0022orbits\u0022 don\u0027t contain any current object in them.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-30T08:01:43Z\u0022 title=\u002207/30/2015 08:01  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 30, 2015\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"mhoram","CreatedById":78756,"CreatedDateTime":"2015-07-30T08:33:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe difficulty the OP is having is that in this case there is no such object to get a position and velocity of, because the orbit is a contract parameter defined ONLY by giving the Keplerian values as described.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for the hint ... I missed that point.\u003C/p\u003E\u003Cp\u003EIt is possible to convert Kepler coordinates to Position\u002BVelocity vector. This is a well known procedure.\u003C/p\u003E\u003Cp\u003EHere are two documents with the necessary formula:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://downloads.rene-schwarz.com/dc/category/19\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://downloads.rene-schwarz.com/dc/category/19\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Eand\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/93426\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/93426\u003C/a\u003E (chapter 8)\u003C/p\u003E\u003Cp\u003EThe best documentation of the kOS reference frames I could find is here:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/math/ref_frame.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/math/ref_frame.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EBut it also does not specify what the Reference Direction is.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-30T14:18:58Z","Content":"\n\u003Cp\u003EIn discussing this with devs, one of the others (hvacengi) did have a way you could use to calculate the Reference Direction indirectly. I consider it a stopgap until a new release is out that just returns the value directly, but for now you can do this:\u003C/p\u003E\u003Cp\u003EEven though your intended orbit itself has no item in orbit yet, plenty of other objects do exist in orbit and you should be able to use one of them to get the value this way:\u003C/p\u003E\u003Cp\u003Estep 1 - Pick any object you like that is orbiting your same SOI body as your intended orbit (i.e. your ship, or maybe the Mun if you\u0027re in Kerbin\u0027s SOI).\u003C/p\u003E\u003Cp\u003Estep 2 - Get that object\u0027s following orbital parameters: Longitude of ascending node (otherLAN) , Argument of Periapsis (otherAOP), True Anomaly (otherTA).\u003C/p\u003E\u003Cp\u003Estep 3 - run this calculation: SET UNI_LONG to otherLAN \u002B otherAOP \u002B otherTA.\u003C/p\u003E\u003Cp\u003EYou now know what the universal longitude of THAT object is right now in it\u0027s current position. \u0022Universal Longitude\u0022 meaning its angle around its SOI body relative to where the Reference Direction is.\u003C/p\u003E\u003Cp\u003EFrom that, if you like, could could derive the Reference Vector. You know what that object\u0027s PLANETARY longitude is on its SOI body, and what its UNI_LONG is - the difference between them tells you how far your SOI body is rotated from the universe\u0027s Reference Direction. With that, you can convert the orbital LAN to a planetary LONGITUDE. (remember the planet is rotating so this is only temporarily true for an instant). From a planetary Longitude you can get a GEOPOSITION, from which you can get a XYZ position. That is the position of the Ascending node in XYZ space right now, or at least the position of the surface of the planet underneath it, which is good enough for what you need (it will move, so use it fast to come up with your needed info).\u003C/p\u003E\u003Cp\u003EIt\u0027s a lot of steps and you shouldn\u0027t have to go through that, but it may be a while before there\u0027s another kOS release so you might have to do this.\u003C/p\u003E\u003Cp\u003EI deliberately left the actual code for you to write, because if you\u0027re using kOS it\u0027s probably because you want to do that sort of thing yourself.\u003C/p\u003E\n"},{"CreatedByName":"Aristarchus","CreatedById":127970,"CreatedDateTime":"2015-07-31T05:30:52Z","Content":"\n\u003Cp\u003EOk, that makes a lot of sense (sort of). I woke up in the middle of the night last night with a similar idea. Maybe you could let me know if it could work. The only plane that I have absolute knowledge of is the xz-plane. I can cross that with my orbit to find the vector of my ship\u0027s LAN and find the angle between that and the x-axis. I can then subtract ship:obt:LAN from that angle to find the angle of the reference vector with respect to the x-axis. From there I just have to add the reference vector angle to the LAN of my target orbit.\u003C/p\u003E\u003Cp\u003EI seem to have picked a doozy for my first KOS project, but if the above works I\u0027ll feel like a genius. \u003C/p\u003E\u003Cp\u003EThanks again,\u003C/p\u003E\u003Cp\u003EA\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIn discussing this with devs,...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre you one of the devs for KOS? If so just let me publicly thank you for helping to create a great mod.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-31T05:42:52Z\u0022 title=\u002207/31/2015 05:42  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 31, 2015\u003C/time\u003E by Aristarchus\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-31T05:55:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Aristarchus\u0022 data-cite=\u0022Aristarchus\u0022\u003E\u003Cdiv\u003EOk, that makes a lot of sense (sort of). I woke up in the middle of the night last night with a similar idea. Maybe you could let me know if it could work. The only plane that I have absolute knowledge of is the xz-plane. I can cross that with my orbit to find the vector of my ship\u0027s LAN and find the angle between that and the x-axis. I can then subtract ship:obt:LAN from that angle to find the angle of the reference vector with respect to the x-axis. From there I just have to add the reference vector angle to the LAN of my target orbit.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI had originally said you can use any orbiting object, like the Mun, but now that I think of it, the Mun may be a problem given that it is locked on a perfectly zero-incline equatorial orbit. That means its LAN isn\u0027t particularly meaningful. I suspect the floating point math will be most stable if you use an object that has the best of both worlds, being both inclined (unlike the Mun), and locked on rails (unlike your ship). Minmus would fit the bill well I think.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAre you one of the devs for KOS? If so just let me publicly thank you for helping to create a great mod.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOne of them. I did a lot of work a few months ago - adding functions and local variables, and a few months before that, adding executable suffixes (previously suffixes were passive members that can\u0027t take arguments) - but lately I\u0027ve slowed down a bit and the next update likely won\u0027t have a lot of my own work in it. I\u0027m in danger of leaving it too long so I\u0027m starting to forget the archetecture and get rusty. I\u0027ve got to pick a project and dive back in again.\u003C/p\u003E\n"},{"CreatedByName":"Sharpy","CreatedById":145504,"CreatedDateTime":"2015-07-31T05:57:27Z","Content":"\n\u003Cp\u003EOf course not an answer to what OP is asking, but in case someone finds this topic searching for an answer not for script but in game:\u003C/p\u003E\u003Cp\u003EJust pull the Normal marker until it starts \u0022wiggling\u0022 switching sides between normal and antinormal rapidly. The resulting orbit is perpendicular to current.\u003C/p\u003E\n"},{"CreatedByName":"tomf","CreatedById":57809,"CreatedDateTime":"2015-07-31T09:01:02Z","Content":"\n\u003Cp\u003Eusing the PE vector is going to give you problems it it happend to equal the ascending node. Would you be better of taking the vector (0,0,1) and doing the matrix operation to rotate it by tyhe inclination value around the LAN vector?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-31T16:38:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tomf\u0022 data-cite=\u0022tomf\u0022\u003E\u003Cdiv\u003Eusing the PE vector is going to give you problems it it happend to equal the ascending node. Would you be better of taking the vector (0,0,1) and doing the matrix operation to rotate it by tyhe inclination value around the LAN vector?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFirst you\u0027ve got to get the LAN vector in the first place, which is where the sticking problem was. LAN is expressed in degrees rotated from the universal reference direction, but that universal reference direction is hidden from a kOS script at the moment (although there\u0027s a messy way to derive it if you have an orbiting object to use to reverse engineer what it is).\u003C/p\u003E\n"}]}