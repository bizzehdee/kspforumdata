{"TopicId":60281,"ForumId":36,"TopicTitle":"[Hardware, Plugin] Arduino based physical display \u002B serial port io\u002B tutorial (24-11-19)","CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-01-18T01:25:25Z","PageNum":39,"Articles":[{"CreatedByName":"lekkimsm2500","CreatedById":8591,"CreatedDateTime":"2015-05-02T10:10:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Freshmeat\u0022 data-cite=\u0022Freshmeat\u0022\u003E\u003Cdiv\u003EDo a truckload of example sketches and try to change little things in them first. Try to guess the meaning of the words you are writing and how you can do something a little bit different. Learn how to use a switch. Then learn how to use a switch to assign a value. Learn how to use a potmeter, and how to do simple math in Arduino C so you can assign that value. Then try to change something simple in zitronens code. It is quite a road if you start from scratch, but a highly rewarding summer could await you. \u003Cp\u003EI don\u0027t know the contents of the starter kit, but a breadboard, switches, a couple of LEDs and 1k resistors, and a slide or rotary potmeter goes an extremely long way.\u003C/p\u003E\u003Cp\u003EProgramming is all about breaking complex bits into simple bits, and then solve them one by one. If you read zitronens code, it is rather user friendly in form documentation on how to change simple things. And if you can ask a specific question, some of the gurus around here are very friendly and helpful.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECoding comes natural to some people, and to some other people, it comes extremely opposite of natural. I have an extremely hard time comprehending any kind of code. Especially trying to set it up and build anything. \u003C/p\u003E\u003Cp\u003EBut even worse, i really wanna learn it, but just can\u0027t seem to grasp it.\u003C/p\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2015-05-02T10:45:31Z","Content":"\n\u003Cp\u003EGood news is that anyone can learn it. Bad news is that the main ingredient is a ton of work. I tried to learn to play music but never got the hang of it, because I could not be sufficiently interested to train every day. My physical fitness is poor because I do not work out (thank God I have to stand and walk while working, or I would be heavily overweight). You need to make up your mind whether you feel comfortable spending 5-10 hours a week for the next several months learning the mindset, or cut your losses right now.\u003C/p\u003E\n"},{"CreatedByName":"I_KILL_HORSES","CreatedById":143023,"CreatedDateTime":"2015-05-04T14:00:37Z","Content":"\n\u003Cp\u003EHello everybody! After lurking quite a lot in this thread i felt the need for creating an account and joining this thread.\u003C/p\u003E\u003Cp\u003EI am in the works of building a control panel, I am still waiting for parts and using my time waiting to test basic functions. I have spent a few hours fiddling with a 7 segment display, 8 digits with the MAX7219 driver. I finaly got it to do what i want. However, I am a true beginner at code, and I wanted to have your opinion of my coding.\u003C/p\u003E\u003Cp\u003EAfter using code to get the display started, via Ledcontrol.h, I basically put this in the void loop: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid loop(){  \u003Cbr\u003E  input();\u003Cbr\u003E  output();\u003Cbr\u003E  if (VData.RAlt \u0026lt; 9999)                          //If radar altitude is below 9999 meters\u003Cbr\u003E      {printNumLED(0, (long)(VData.RAlt), \u0027 \u0027,0); //print radar altitude to display 0\u003Cbr\u003E      }\u003Cbr\u003E  else                                            //If above, print H16H (high)\u003Cbr\u003E       {lc.setChar(0,3,\u0027H\u0027,false);\u003Cbr\u003E        lc.setChar(0,2,\u00271\u0027,false);\u003Cbr\u003E        lc.setChar(0,1,\u00276\u0027,false);\u003Cbr\u003E        lc.setChar(0,0,\u0027H\u0027,false);\u003Cbr\u003E      }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt works perfectly, but somewhere in this thread i remember someone saying that putting it in the void loop is not ideal.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003EA problem I do have is when I set my display to:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EprintNumLED(0, (long)(VData.AP/1000),\u0027A\u0027,0);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI of course get the AP in KM, and with a \u0022A\u0022 on the first number of the display. I do not want this A, but all I have tried have resulted in either characters in this location, or just a blank. If my ap is 15001200 km, the display shows 5001200, because of this blank space.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-04T14:53:52Z\u0022 title=\u002205/04/2015 02:53  PM\u0022 data-short=\u00229 yr\u0022\u003EMay 4, 2015\u003C/time\u003E by I_KILL_HORSES\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"T.A.P.O.R.","CreatedById":137748,"CreatedDateTime":"2015-05-04T21:01:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022I_KILL_HORSES\u0022 data-cite=\u0022I_KILL_HORSES\u0022\u003E\u003Cdiv\u003EHello everybody! After lurking quite a lot in this thread i felt the need for creating an account and joining this thread.\u003Cp\u003EI am in the works of building a control panel, I am still waiting for parts and using my time waiting to test basic functions. I have spent a few hours fiddling with a 7 segment display, 8 digits with the MAX7219 driver. I finaly got it to do what i want. However, I am a true beginner at code, and I wanted to have your opinion of my coding.\u003C/p\u003E\u003Cp\u003EAfter using code to get the display started, via Ledcontrol.h, I basically put this in the void loop: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid loop(){  \u003Cbr\u003E  input();\u003Cbr\u003E  output();\u003Cbr\u003E  if (VData.RAlt \u0026lt; 9999)                          //If radar altitude is below 9999 meters\u003Cbr\u003E      {printNumLED(0, (long)(VData.RAlt), \u0027 \u0027,0); //print radar altitude to display 0\u003Cbr\u003E      }\u003Cbr\u003E  else                                            //If above, print H16H (high)\u003Cbr\u003E       {lc.setChar(0,3,\u0027H\u0027,false);\u003Cbr\u003E        lc.setChar(0,2,\u00271\u0027,false);\u003Cbr\u003E        lc.setChar(0,1,\u00276\u0027,false);\u003Cbr\u003E        lc.setChar(0,0,\u0027H\u0027,false);\u003Cbr\u003E      }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt works perfectly, but somewhere in this thread i remember someone saying that putting it in the void loop is not ideal.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003EA problem I do have is when I set my display to:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EprintNumLED(0, (long)(VData.AP/1000),\u0027A\u0027,0);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI of course get the AP in KM, and with a \u0022A\u0022 on the first number of the display. I do not want this A, but all I have tried have resulted in either characters in this location, or just a blank. If my ap is 15001200 km, the display shows 5001200, because of this blank space.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHi there I_Kill_Horses,\u003C/p\u003E\u003Cp\u003EWelcome to the forum.\u003C/p\u003E\u003Cp\u003EYou are quite right about the void loop.\u003C/p\u003E\u003Cp\u003EYou can find my working solution in the body of this thread somewhere or in the opening post of the thread linked in my signature below.\u003C/p\u003E\u003Cp\u003EMy project is in bits at the moment, so I can\u0027t test this, but maybe try this to fix your blank problem: \u003Cem\u003E\u003Cspan style=\u0022color:#3E3E3E;\u0022\u003EprintNumLED(0, (long)(VData.AP/1000),0) \u003C/span\u003E\u003C/em\u003E\u003Cspan style=\u0022color:#3E3E3E;\u0022\u003Eif I\u0027m wrong one of the skilled folks should be along to correct it\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EAlso, I think I might steal er.... \u003Cem\u003Eborrow\u003C/em\u003E your idea re: the radar height cutoff;)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-04T21:04:56Z\u0022 title=\u002205/04/2015 09:04  PM\u0022 data-short=\u00229 yr\u0022\u003EMay 4, 2015\u003C/time\u003E by T.A.P.O.R.\u003C/strong\u003E\n\u003Cbr\u003Efor clarity\n\u003C/span\u003E\n"},{"CreatedByName":"I_KILL_HORSES","CreatedById":143023,"CreatedDateTime":"2015-05-05T00:28:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022T.A.P.O.R.\u0022 data-cite=\u0022T.A.P.O.R.\u0022\u003E\u003Cdiv\u003EHi there I_Kill_Horses,\u003Cp\u003EWelcome to the forum.\u003C/p\u003E\u003Cp\u003EYou are quite right about the void loop.\u003C/p\u003E\u003Cp\u003EYou can find my working solution in the body of this thread somewhere or in the opening post of the thread linked in my signature below.\u003C/p\u003E\u003Cp\u003EMy project is in bits at the moment, so I can\u0027t test this, but maybe try this to fix your blank problem: \u003Cem\u003E\u003Cspan style=\u0022color:#3E3E3E;\u0022\u003EprintNumLED(0, (long)(VData.AP/1000),0) \u003C/span\u003E\u003C/em\u003E\u003Cspan style=\u0022color:#3E3E3E;\u0022\u003Eif I\u0027m wrong one of the skilled folks should be along to correct it\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EAlso, I think I might steal er.... \u003Cem\u003Eborrow\u003C/em\u003E your idea re: the radar height cutoff;)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks a lot!Funny thing, I already found your thread and put all my display code in the utilities. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI also tried ommiting the \u0027A\u0027, but then the display think that the \u003Cem\u003EprintNumLED(0, (long)(VData.AP/1000),\u003C/em\u003E\u003Cstrong\u003E\u003Cem\u003E0\u003C/em\u003E\u003C/strong\u003E\u003Cem\u003E) \u003C/em\u003Erefers to \u00270\u0027, and prints a \u00220\u0022 at the first sign. Like this\u003C/p\u003E\u003Cp\u003EAP=10km, - represents a blank screen\u003C/p\u003E\u003Cp\u003E0-----10.\u003C/p\u003E\u003Cp\u003EThis problem frustrates me, as I see no reason to waste a digit for A, P or whatever, I can just paint that on my case.\u003C/p\u003E\u003Cp\u003EYou, and everybody else, are of course welcome to copy my code!\u003C/p\u003E\n"},{"CreatedByName":"T.A.P.O.R.","CreatedById":137748,"CreatedDateTime":"2015-05-05T09:53:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022I_KILL_HORSES\u0022 data-cite=\u0022I_KILL_HORSES\u0022\u003E\u003Cdiv\u003EThanks a lot!Funny thing, I already found your thread and put all my display code in the utilities. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EI also tried ommiting the \u0027A\u0027, but then the display think that the \u003Cem\u003EprintNumLED(0, (long)(VData.AP/1000),\u003C/em\u003E\u003Cstrong\u003E\u003Cem\u003E0\u003C/em\u003E\u003C/strong\u003E\u003Cem\u003E) \u003C/em\u003Erefers to \u00270\u0027, and prints a \u00220\u0022 at the first sign. Like this\u003C/p\u003E\u003Cp\u003EAP=10km, - represents a blank screen\u003C/p\u003E\u003Cp\u003E0-----10.\u003C/p\u003E\u003Cp\u003EThis problem frustrates me, as I see no reason to waste a digit for A, P or whatever, I can just paint that on my case.\u003C/p\u003E\u003Cp\u003EYou, and everybody else, are of course welcome to copy my code!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmmm...\u003C/p\u003E\u003Cp\u003EHow about this?\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EprintNumLED(0, (long)(VData.AP/1000),0,0)\u003C/em\u003E\u003C/p\u003E\u003Cp\u003Eor this\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EprintNumLED(0, (long)(VData.AP/1000))\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EWish I could test it for you, but that\u0027s a couple of weeks away (lousy exams).\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2015-05-05T14:32:45Z","Content":"\n\u003Cp\u003EObviously Amelia wrote the function to suit her needs, she probably wanted to always display something in the first digit. You can try commenting out the line 85:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Elc.setChar(_dispnum,7,c,false);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eto \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//lc.setChar(_dispnum,7,c,false);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"I_KILL_HORSES","CreatedById":143023,"CreatedDateTime":"2015-05-06T01:40:16Z","Content":"\n\u003Cp\u003ENeither of these methods work. Ommiting line 85 will result in first digit being blank, as will \u003Cem\u003EprintNumLED(0, (long)(VData.AP/1000)). \u003C/em\u003E\u003Cem\u003EAnd\u003C/em\u003E\u003Cem\u003EprintNumLED(0, (long)(VData.AP/1000),0,0) \u003C/em\u003Eresults in a static 0 printed in the first digit.\u003C/p\u003E\u003Cp\u003EHowever, there is a lot of lines of code refering to \u0022char c\u0022 and like in the original code. In line 29 for example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid printNumLED(int _dispnum, double _value, char c)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI will try tomorrow to edit this code, but I doubt I will be able to. This author, Amelia, does she have an account for this forum?\u003C/p\u003E\u003Cp\u003EThank you for your help!\u003C/p\u003E\n"},{"CreatedByName":"T.A.P.O.R.","CreatedById":137748,"CreatedDateTime":"2015-05-06T08:49:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022I_KILL_HORSES\u0022 data-cite=\u0022I_KILL_HORSES\u0022\u003E\u003Cdiv\u003ENeither of these methods work. Ommiting line 85 will result in first digit being blank, as will \u003Cem\u003EprintNumLED(0, (long)(VData.AP/1000)). \u003C/em\u003E\u003Cem\u003EAnd\u003C/em\u003E\u003Cem\u003EprintNumLED(0, (long)(VData.AP/1000),0,0) \u003C/em\u003Eresults in a static 0 printed in the first digit.\u003Cp\u003EHowever, there is a lot of lines of code refering to \u0022char c\u0022 and like in the original code. In line 29 for example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid printNumLED(int _dispnum, double _value, char c)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI will try tomorrow to edit this code, but I doubt I will be able to. This author, Amelia, does she have an account for this forum?\u003C/p\u003E\u003Cp\u003EThank you for your help!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eyep, had responded to this thread and is super helpful via pm \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"I_KILL_HORSES","CreatedById":143023,"CreatedDateTime":"2015-05-06T11:42:23Z","Content":"\n\u003Cp\u003EI PM\u0027ed her. I hope there is a simple solution to this. If so, I will post it in this thread.\u003C/p\u003E\n"},{"CreatedByName":"I_KILL_HORSES","CreatedById":143023,"CreatedDateTime":"2015-05-09T10:34:44Z","Content":"\n\u003Cp\u003EI have recieved an answer from Amelia, containing this code:\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E\u0022Here is the new function:\u0022\u003C/span\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[COLOR=#333333][I]//-------------------------------------------------------------------------------------//[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]void printNumLEDnew(int _dispnum, long _value, char c, int _decplace, int _base)[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]{[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]//char c is now made redundant, only kept in the header for a consistent input field.[/I][/COLOR]\u003Cbr\u003E\u003Cbr\u003E[COLOR=#333333][I]//prints number to LEDmatrix chip.[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]//for (int ch=0;ch\u0026lt;8;ch\u002B\u002B) {[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]// numdisp.setChar(loopval,ch,\u0027-\u0027,false);//false flag is for decpnt control.[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]//}//end for[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]if (numdisp.getDeviceCount()\u0026lt;=_dispnum) return;//cannot enter info on displays that do not exist.[/I][/COLOR]\u003Cbr\u003E\u003Cbr\u003E[COLOR=#333333][I]boolean IsNeg=false;[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]if (_value\u0026lt;0) {[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]IsNeg=true;[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]_value=-_value;//make positive num[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]}[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]boolean decpoint;[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]int placeval=0;int tempval;[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]//digitalWrite(LED_CSstart\u002B_dispnum,LOW);//activate !CS[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]//numdisp.SPI_CS=LED_CSstart\u002B_dispnum;//change CS for current display[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]do {[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]tempval=_value%_base; _value=_value/_base;[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]decpoint=false; if ((_decplace)==placeval) decpoint=true;[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]numdisp.setDigit(_dispnum,placeval,tempval,decpoint);[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]//placeval\u002B\u002B;[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]} while ((placeval\u002B\u002B\u0026lt;7 \u0026amp;\u0026amp; _value\u0026gt;0) || (placeval\u0026lt;=_decplace));[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]if (IsNeg) {[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]numdisp.setChar(_dispnum,placeval\u002B\u002B,\u0027-\u0027,false);[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]}[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]for (placeval=placeval;placeval\u0026lt;8;placeval\u002B\u002B) {[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]numdisp.setChar(_dispnum,placeval,\u0027 \u0027,false);[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]}[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]//numdisp.setChar(_dispnum,7,c,false);[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]//digitalWrite(36\u002B_dispnum,HIGH);[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333][I]}[/I][/COLOR]\u003Cbr\u003E\u003Cbr\u003E[COLOR=#333333][I]//-------------------------------------------------------------------------------------//[/I][/COLOR]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E\u0022I\u0027ve given it a different name so that you can use the old and the new in the same program; just throw that function in the \u0027LedControlFunctions\u0027 tab \u003C/span\u003E\u003C/em\u003E:)\u0022\u003C/p\u003E\u003Cp\u003EI have tried this, and it throws up a few errors: I do not know how to fix this, but I think that someone in this thread might be able to help me:\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino: In function \u0027void printNumLEDnew(int, long int, char, int, int)\u0027:\u003C/span\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino:175:5: error: \u0027numdisp\u0027 was not declared in this scope\u003C/span\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino:189:1: error: \u0027numdisp\u0027 was not declared in this scope\u003C/span\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino:193:1: error: \u0027numdisp\u0027 was not declared in this scope\u003C/span\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino:196:1: error: \u0027numdisp\u0027 was not declared in this scope\u003C/span\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003EError compiling.\u003C/span\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#000000;\u0022\u003EI have of course asked Amelia for help, but due to time difference our \u003C/span\u003Ecorrespondence is pretty slow. Anyone here who can help me with how and where to declare \u0027numdisp\u0027?\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2015-05-09T14:54:55Z","Content":"\n\u003Cp\u003EYou need to post more of your code for people to help you, like how are you using the function?\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2015-05-09T16:42:42Z","Content":"\n\u003Cp\u003E\u003Cspan\u003EUpdate 0.17.2\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EChanged:\u003C/p\u003E\u003Cp\u003EAdded SOI output. So I changed my mind again \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 alt=\u0022:sticktongue:\u0022\u003E, I\u0027m now sending SOI name as a single byte. \u003C/p\u003E\u003Cp\u003EThe way it works right now is decimal format: sun-planet-moon\u003C/p\u003E\u003Cp\u003E\u0022sun\u0022 = 100\u003C/p\u003E\u003Cp\u003E\u0022moho\u0022= 110\u003C/p\u003E\u003Cp\u003E\u0022eve\u0022 = 120\u003C/p\u003E\u003Cp\u003E\u0022gilly\u0022 = 121\u003C/p\u003E\u003Cp\u003E\u0022kerbin\u0022 = 130\u003C/p\u003E\u003Cp\u003E\u0022mun\u0022 = 131\u003C/p\u003E\u003Cp\u003E\u0022minmus\u0022 = 132\u003C/p\u003E\u003Cp\u003E\u0022duna\u0022 = 140\u003C/p\u003E\u003Cp\u003E\u0022ike\u0022 = 141\u003C/p\u003E\u003Cp\u003E\u0022dres\u0022 = 150\u003C/p\u003E\u003Cp\u003E\u0022jool\u0022 = 160\u003C/p\u003E\u003Cp\u003E\u0022laythe\u0022 = 161\u003C/p\u003E\u003Cp\u003E\u0022vall\u0022 = 162\u003C/p\u003E\u003Cp\u003E\u0022tylo\u0022 = 163\u003C/p\u003E\u003Cp\u003E\u0022bop\u0022 = 164\u003C/p\u003E\u003Cp\u003E\u0022pol\u0022 = 165\u003C/p\u003E\u003Cp\u003E\u0022eeloo\u0022 = 170\u003C/p\u003E\u003Cp\u003E\u0022unknown\u0022 = 0\u003C/p\u003E\u003Cp\u003EI will leave how to write the arduino code as an exercise to the reader \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. A simple switch-case statement should do. \u003C/p\u003E\u003Cp\u003EPlease let me know if you find any problems.\u003C/p\u003E\u003Cp\u003EPlugin:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://sites.google.com/site/zitronfiles/KSPSerialIO_017_2.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://sites.google.com/site/zitronfiles/KSPSerialIO_017_2.zip\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EArduino Code:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://sites.google.com/site/zitronfiles/KSPIODemo11.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://sites.google.com/site/zitronfiles/KSPIODemo11.zip\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"I_KILL_HORSES","CreatedById":143023,"CreatedDateTime":"2015-05-10T09:54:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zitronen\u0022 data-cite=\u0022zitronen\u0022\u003E\u003Cdiv\u003EYou need to post more of your code for people to help you, like how are you using the function?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI will just copy all of my code, I do not know how much I need to post for someone to troubleshoot it for me.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E[CODE\\\u003Cbr\u003E\u003Cbr\u003E#include \u0026lt;LedControl.h\u0026gt; //to be made redundant - BIG power drain. 8x7 seg display with the maxim chip.\u003Cbr\u003E #define LEDClkPin 6\u003Cbr\u003E #define LEDChipSel 5 \u003Cbr\u003E #define LEDDatain 7\u003Cbr\u003E //these pins were set up for an Arduino Uno, adjust as appropriate.\u003Cbr\u003E\u003Cbr\u003E LedControl lc=LedControl(LEDDatain,LEDClkPin,LEDChipSel,12);//1==num of 8x8pixel arrays in line. can be up to 8.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//pins for LEDs\u003Cbr\u003E#define GLED 5\u003Cbr\u003E#define YLED 6\u003Cbr\u003E#define RLED 7\u003Cbr\u003E#define SASLED 11\u003Cbr\u003E#define RCSLED 12\u003Cbr\u003E#define CG1LED 13\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//pins for input\u003Cbr\u003E#define SASPIN 8\u003Cbr\u003E#define RCSPIN 9\u003Cbr\u003E#define CG1PIN 10\u003Cbr\u003E#define THROTTLEPIN 0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E#define THROTTLEDB 4 //Throttle axis deadband\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//Input enums\u003Cbr\u003E#define SAS 7\u003Cbr\u003E#define RCS 6\u003Cbr\u003E#define LIGHTS 5\u003Cbr\u003E#define GEAR 4\u003Cbr\u003E#define BRAKES 3\u003Cbr\u003E#define PRECISION 2\u003Cbr\u003E#define ABORT 1\u003Cbr\u003E#define STAGE 0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//Action group statuses\u003Cbr\u003E#define AGSAS 0\u003Cbr\u003E#define AGRCS 1 \u003Cbr\u003E#define AGLight 2 \u003Cbr\u003E#define AGGear 3\u003Cbr\u003E#define AGBrakes 4 \u003Cbr\u003E#define AGAbort 5 \u003Cbr\u003E#define AGCustom01 6\u003Cbr\u003E#define AGCustom02 7 \u003Cbr\u003E#define AGCustom03 8 \u003Cbr\u003E#define AGCustom04 9 \u003Cbr\u003E#define AGCustom05 10\u003Cbr\u003E#define AGCustom06 11 \u003Cbr\u003E#define AGCustom07 12 \u003Cbr\u003E#define AGCustom08 13 \u003Cbr\u003E#define AGCustom09 14 \u003Cbr\u003E#define AGCustom10 15\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//macro \u003Cbr\u003E#define details(name) (uint8_t*)\u0026amp;name,sizeof(name)\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//if no message received from KSP for more than 2s, go idle\u003Cbr\u003E#define IDLETIMER 2000\u003Cbr\u003E#define CONTROLREFRESH 25\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//warnings\u003Cbr\u003E#define GWARN 9 //9G Warning\u003Cbr\u003E#define GCAUTION 5 //5G Caution\u003Cbr\u003E#define FUELCAUTION 10.0 //10% Fuel Caution\u003Cbr\u003E#define FUELWARN 5.0 //5% Fuel warning\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eunsigned long deadtime, deadtimeOld, controlTime, controlTimeOld;\u003Cbr\u003Eunsigned long now;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eboolean Connected = false;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ebyte caution = 0, warning = 0, id;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Estruct VesselData\u003Cbr\u003E{\u003Cbr\u003E byte id; //1\u003Cbr\u003E float AP; //2\u003Cbr\u003E float PE; //3\u003Cbr\u003E float SemiMajorAxis; //4\u003Cbr\u003E float SemiMinorAxis; //5\u003Cbr\u003E float VVI; //6\u003Cbr\u003E float e; //7\u003Cbr\u003E float inc; //8\u003Cbr\u003E float G; //9\u003Cbr\u003E long TAp; //10\u003Cbr\u003E long TPe; //11\u003Cbr\u003E float TrueAnomaly; //12\u003Cbr\u003E float Density; //13\u003Cbr\u003E long period; //14\u003Cbr\u003E float RAlt; //15\u003Cbr\u003E float Alt; //16\u003Cbr\u003E float Vsurf; //17\u003Cbr\u003E float Lat; //18\u003Cbr\u003E float Lon; //19\u003Cbr\u003E float LiquidFuelTot; //20\u003Cbr\u003E float LiquidFuel; //21\u003Cbr\u003E float OxidizerTot; //22\u003Cbr\u003E float Oxidizer; //23\u003Cbr\u003E float EChargeTot; //24\u003Cbr\u003E float ECharge; //25\u003Cbr\u003E float MonoPropTot; //26\u003Cbr\u003E float MonoProp; //27\u003Cbr\u003E float IntakeAirTot; //28\u003Cbr\u003E float IntakeAir; //29\u003Cbr\u003E float SolidFuelTot; //30\u003Cbr\u003E float SolidFuel; //31\u003Cbr\u003E float XenonGasTot; //32\u003Cbr\u003E float XenonGas; //33\u003Cbr\u003E float LiquidFuelTotS; //34\u003Cbr\u003E float LiquidFuelS; //35\u003Cbr\u003E float OxidizerTotS; //36\u003Cbr\u003E float OxidizerS; //37\u003Cbr\u003E uint32_t MissionTime; //38\u003Cbr\u003E float deltaTime; //39\u003Cbr\u003E float VOrbit; //40\u003Cbr\u003E uint32_t MNTime; //41\u003Cbr\u003E float MNDeltaV; //42\u003Cbr\u003E float Pitch; //43 \u003Cbr\u003E float Roll; //44 \u003Cbr\u003E float Heading; //45\u003Cbr\u003E uint16_t ActionGroups; //46 status bit order:SAS, RCS, Light, Gear, Brakes, Abort, Custom01 - 10\u003Cbr\u003E};\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Estruct HandShakePacket\u003Cbr\u003E{\u003Cbr\u003E byte id;\u003Cbr\u003E byte M1;\u003Cbr\u003E byte M2;\u003Cbr\u003E byte M3;\u003Cbr\u003E};\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Estruct ControlPacket {\u003Cbr\u003E byte id;\u003Cbr\u003E byte MainControls; //SAS RCS Lights Gear Brakes Precision Abort Stage \u003Cbr\u003E byte Mode; //0 = stage, 1 = docking, 2 = map\u003Cbr\u003E unsigned int ControlGroup; //control groups 1-10 in 2 bytes\u003Cbr\u003E byte AdditionalControlByte1; //other stuff\u003Cbr\u003E byte AdditionalControlByte2;\u003Cbr\u003E int Pitch; //-1000 -\u0026gt; 1000\u003Cbr\u003E int Roll; //-1000 -\u0026gt; 1000\u003Cbr\u003E int Yaw; //-1000 -\u0026gt; 1000\u003Cbr\u003E int TX; //-1000 -\u0026gt; 1000\u003Cbr\u003E int TY; //-1000 -\u0026gt; 1000\u003Cbr\u003E int TZ; //-1000 -\u0026gt; 1000\u003Cbr\u003E int WheelSteer; //-1000 -\u0026gt; 1000\u003Cbr\u003E int Throttle; // 0 -\u0026gt; 1000\u003Cbr\u003E int WheelThrottle; // 0 -\u0026gt; 1000\u003Cbr\u003E};\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EHandShakePacket HPacket;\u003Cbr\u003EVesselData VData;\u003Cbr\u003EControlPacket CPacket;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid setup(){\u003Cbr\u003E Serial.begin(38400);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E initLEDS();\u003Cbr\u003E InitTxPackets();\u003Cbr\u003E controlsInit();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E LEDSAllOff();\u003Cbr\u003E\u003Cbr\u003Efor (int loopval=0;loopval \u0026lt; lc.getDeviceCount();loopval\u002B\u002B) {\u003Cbr\u003E //getDeviceCount will get the number of dev\u0027s attached \u003Cbr\u003E //so I don\u0027t have to re-write all the vars as the code changes \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cbr\u003E //digitalWrite(36\u002Bloopval,LOW);//activate !CS\u003Cbr\u003E //lc.SPI_CS=LED_CSstart\u002Bloopval;//change CS for current display\u003Cbr\u003E lc.shutdown(loopval,false);\u003Cbr\u003E lc.setIntensity(loopval,3);//val up to 15, zero is invalid (use shutdown method)\u003Cbr\u003E lc.clearDisplay(loopval);//likely not needed for init, but is nicer coding.\u003Cbr\u003E }\u003Cbr\u003E // Initialize the MAX7219 device\u003Cbr\u003E/* lc.shutdown(0,false); // Enable display\u003Cbr\u003E lc.setIntensity(0,5); // Set brightness level (0 is min, 15 is max)\u003Cbr\u003E lc.clearDisplay(0); // Clear display register// */\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003Evoid loop()\u003Cbr\u003E{ \u003Cbr\u003E input();\u003Cbr\u003E output();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid Handshake(){\u003Cbr\u003E digitalWrite(GLED,HIGH); \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E HPacket.id = 0;\u003Cbr\u003E HPacket.M1 = 3;\u003Cbr\u003E HPacket.M2 = 1;\u003Cbr\u003E HPacket.M3 = 4;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E KSPBoardSendData(details(HPacket));\u003Cbr\u003E //Serial.println(F(\u0022KSP;0\u0022)); \u003Cbr\u003E //delay(1000);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/div\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// Handshake\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003C/blockquote\u003E\u003C/blockquote\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E now = millis();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if (KSPBoardReceiveData()){\u003Cbr\u003E deadtimeOld = now;\u003Cbr\u003E returnValue = id;\u003Cbr\u003E switch(id) {\u003Cbr\u003E case 0: //Handshake packet\u003Cbr\u003E Handshake();\u003Cbr\u003E break;\u003Cbr\u003E case 1:\u003Cbr\u003E Indicators();\u003Cbr\u003E break;\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E //We got some data, turn the green led on\u003Cbr\u003E digitalWrite(GLED,HIGH);\u003Cbr\u003E Connected = true;\u003Cbr\u003E }\u003Cbr\u003E else\u003Cbr\u003E { //if no message received for a while, go idle\u003Cbr\u003E deadtime = now - deadtimeOld; \u003Cbr\u003E if (deadtime \u0026gt; IDLETIMER)\u003Cbr\u003E {\u003Cbr\u003E deadtimeOld = now;\u003Cbr\u003E Connected = false;\u003Cbr\u003E LEDSAllOff();\u003Cbr\u003E } \u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E return returnValue;\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ebyte ControlStatus(byte n)\u003Cbr\u003E{\u003Cbr\u003E return ((VData.ActionGroups \u0026gt;\u0026gt; n) \u0026amp; 1) == 1;\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eint input() {  int returnValue = -1;\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E/*This is current draw for one 8 digit 7 segment display, printing A88888.88\u003Cbr\u003E15= 147\u003Cbr\u003E14= 140\u003Cbr\u003E13= 132\u003Cbr\u003E12= 124\u003Cbr\u003E11= 116\u003Cbr\u003E10= 105\u003Cbr\u003E 9= 99\u003Cbr\u003E 8= 89\u003Cbr\u003E 7= 81\u003Cbr\u003E 6= 72\u003Cbr\u003E 5= 62\u003Cbr\u003E 4= 52\u003Cbr\u003E 3= 42\u003Cbr\u003E 2= 32\u003Cbr\u003E 1= 22 All in mA */\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//-------------------------------------------------------------------------------------//\u003Cbr\u003Evoid blankLEDscreens()\u003Cbr\u003E{\u003Cbr\u003E for (int loopval=0;loopval \u0026lt; lc.getDeviceCount();loopval\u002B\u002B) {\u003Cbr\u003E //getDeviceCount will get the number of dev\u0027s attached \u003Cbr\u003E //so I don\u0027t have to re-write all the vars as the code changes \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cbr\u003E //digitalWrite(36\u002Bloopval,LOW);//activate !CS\u003Cbr\u003E //lc.SPI_CS=LED_CSstart\u002Bloopval;//change CS for current display\u003Cbr\u003E lc.shutdown(loopval,false);\u003Cbr\u003E lc.setIntensity(loopval,1);//val up to 15, zero is invalid (use shutdown method)\u003Cbr\u003E lc.clearDisplay(loopval);//likely not needed for init, but is nicer coding.\u003Cbr\u003E //digitalWrite(36\u002Bloopval,HIGH);//close !CS\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E }//end for\u003Cbr\u003E for (int loopval=0;loopval \u0026lt; lc.getDeviceCount();loopval\u002B\u002B) {\u003Cbr\u003E //lc.SPI_CS=LED_CSstart\u002Bloopval;//change CS for current display\u003Cbr\u003E for (int ch=0;ch\u0026lt;8;ch\u002B\u002B) {\u003Cbr\u003E //digitalWrite(36\u002Bloopval,LOW);//activate !CS\u003Cbr\u003E lc.setChar(loopval,ch,\u0027-\u0027,false);//false flag is for decpnt control.\u003Cbr\u003E //digitalWrite(36\u002Bloopval,HIGH);\u003Cbr\u003E }//end for\u003Cbr\u003E }//end for loopval\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E//-------------------------------------------------------------------------------------//\u003Cbr\u003E//-------------------------------------------------------------------------------------//\u003Cbr\u003Evoid printNumLED(int _dispnum, double _value, char c)\u003Cbr\u003E{\u003Cbr\u003E //needs to automatically calc where the decimal place goes.\u003Cbr\u003E if (isEqual(_value-((long)_value),0)) printNumLED(_dispnum, (long)_value, c, -1, DEC);\u003Cbr\u003E else if (isEqual(_value*10-((long)(_value*10)),0)) printNumLED(_dispnum, (long)(_value*10), c, 1, DEC);\u003Cbr\u003E else if (isEqual(_value*100-((long)(_value*100)),0)) printNumLED(_dispnum, (long)(_value*100), c, 2, DEC);\u003Cbr\u003E else if (isEqual(_value*1000-((long)(_value*1000)),0)) printNumLED(_dispnum, (long)(_value*1000), c, 3, DEC);\u003Cbr\u003E else if (isEqual(_value*10000-((long)(_value*10000)),0)) printNumLED(_dispnum, (long)(_value*10000), c, 4, DEC);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E //printNumLED(_dispnum, _value, \u0027 \u0027, 0, 10);\u003Cbr\u003E}\u003Cbr\u003E//----------------//\u003Cbr\u003Evoid printNumLED(int _dispnum, long _value)\u003Cbr\u003E{\u003Cbr\u003E printNumLED(_dispnum, _value, \u0027 \u0027, -1, DEC);\u003Cbr\u003E}\u003Cbr\u003E//----------------//\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid printNumLED(int _dispnum, long _value, char c)\u003Cbr\u003E{\u003Cbr\u003E printNumLED(_dispnum, _value, c, -1, DEC);\u003Cbr\u003E}\u003Cbr\u003E//----------------//\u003Cbr\u003Evoid printNumLED(int _dispnum, long _value, char c, int _decplace)\u003Cbr\u003E{\u003Cbr\u003E printNumLED(_dispnum, _value, c, _decplace, DEC);\u003Cbr\u003E}\u003Cbr\u003E//----------------//\u003Cbr\u003Evoid printNumLED(int _dispnum, long _value, char c, int _decplace, int _base)\u003Cbr\u003E{\u003Cbr\u003E //prints number to LEDmatrix chip.\u003Cbr\u003E //for (int ch=0;ch\u0026lt;8;ch\u002B\u002B) {\u003Cbr\u003E // lc.setChar(loopval,ch,\u0027-\u0027,false);//false flag is for decpnt control.\u003Cbr\u003E //}//end for\u003Cbr\u003E boolean IsNeg=false;\u003Cbr\u003E if (_value\u0026lt;0) {\u003Cbr\u003E IsNeg=true;\u003Cbr\u003E _value=-_value;//make positive num\u003Cbr\u003E }\u003Cbr\u003E boolean decpoint;\u003Cbr\u003E int placeval=0;int tempval;\u003Cbr\u003E //digitalWrite(LED_CSstart\u002B_dispnum,LOW);//activate !CS\u003Cbr\u003E //lc.SPI_CS=LED_CSstart\u002B_dispnum;//change CS for current display\u003Cbr\u003E do {\u003Cbr\u003E tempval=_value%_base; _value=_value/_base;\u003Cbr\u003E decpoint=false; if ((_decplace)==placeval) decpoint=true;\u003Cbr\u003E lc.setDigit(_dispnum,placeval,tempval,decpoint);\u003Cbr\u003E //placeval\u002B\u002B;\u003Cbr\u003E } while ((placeval\u002B\u002B\u0026lt;6 \u0026amp;\u0026amp; _value\u0026gt;0) || (placeval\u0026lt;=_decplace));\u003Cbr\u003E if (IsNeg) {\u003Cbr\u003E lc.setChar(_dispnum,placeval\u002B\u002B,\u0027-\u0027,false);\u003Cbr\u003E }\u003Cbr\u003E for (placeval=placeval;placeval\u0026lt;7;placeval\u002B\u002B) {\u003Cbr\u003E lc.setChar(_dispnum,placeval,\u0027 \u0027,false);\u003Cbr\u003E }\u003Cbr\u003E // lc.setChar(_dispnum,7,c,false);\u003Cbr\u003E //digitalWrite(36\u002B_dispnum,HIGH);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//-------------------------------------------------------------------------------------//\u003Cbr\u003Evoid printLeadingZeroFloatNumLED(int _dispnum, double _value, float _digits, char c, int _base)\u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E int _lowerplaceval=(int(_digits*10)%10);\u003Cbr\u003E int _newdigits=int(_digits)\u002B_lowerplaceval;\u003Cbr\u003E\u003Cbr\u003E long _newvalue=(long)(_value*exponent(10,_lowerplaceval));\u003Cbr\u003E\u003Cbr\u003E //printNumLED(_dispnum, _newvalue, c, _lowerplaceval, _base);\u003Cbr\u003E printLeadingZeroNumLED(_dispnum, _newvalue, _newdigits, c, _lowerplaceval, _base);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//----------------//\u003Cbr\u003Evoid printLeadingZeroNumLED(int _dispnum, long _value, int _digits)\u003Cbr\u003E{\u003Cbr\u003E printLeadingZeroNumLED(_dispnum,_value,_digits,\u0027 \u0027,-1,DEC);\u003Cbr\u003E}\u003Cbr\u003E//----------------//\u003Cbr\u003Evoid printLeadingZeroNumLED(int _dispnum, long _value, int _digits, char c)\u003Cbr\u003E{\u003Cbr\u003E printLeadingZeroNumLED(_dispnum,_value,_digits,c,-1,DEC);\u003Cbr\u003E}\u003Cbr\u003E//----------------//\u003Cbr\u003Evoid printLeadingZeroNumLED(int _dispnum, long _value, int _digits, char c, int _decplace)\u003Cbr\u003E{\u003Cbr\u003E printLeadingZeroNumLED(_dispnum,_value,_digits,c,_decplace,DEC);\u003Cbr\u003E}\u003Cbr\u003E//----------------//\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid printLeadingZeroNumLED(int _dispnum, long _value, int _digits, char c, int _decplace, int _base)\u003Cbr\u003E{\u003Cbr\u003E //prints number to LEDmatrix chip.\u003Cbr\u003E //for (int ch=0;ch\u0026lt;8;ch\u002B\u002B) {\u003Cbr\u003E // lc.setChar(loopval,ch,\u0027-\u0027,false);//false flag is for decpnt control.\u003Cbr\u003E //}//end for\u003Cbr\u003E boolean IsNeg=false;\u003Cbr\u003E if (_value\u0026lt;0) {\u003Cbr\u003E IsNeg=true;\u003Cbr\u003E _value=-_value;//make positive num\u003Cbr\u003E if (_digits\u0026gt;6) _digits=6;//forces the negative sign to be shown, even if number is cut short.\u003Cbr\u003E }\u003Cbr\u003E boolean decpoint;\u003Cbr\u003E int placeval=0;int tempval;\u003Cbr\u003E do {\u003Cbr\u003E tempval=_value%_base; _value=_value/_base;\u003Cbr\u003E decpoint=false; if ((_decplace)==placeval) decpoint=true;\u003Cbr\u003E lc.setDigit(_dispnum,placeval,tempval,decpoint);\u003Cbr\u003E //placeval\u002B\u002B;\u003Cbr\u003E } while ((placeval\u002B\u002B\u0026lt;6 \u0026amp;\u0026amp; _value\u0026gt;0) || (placeval\u0026lt;_digits));\u003Cbr\u003E if (IsNeg) {\u003Cbr\u003E lc.setChar(_dispnum,placeval\u002B\u002B,\u0027-\u0027,false);\u003Cbr\u003E }\u003Cbr\u003E for (placeval=placeval;placeval\u0026lt;7;placeval\u002B\u002B) {\u003Cbr\u003E lc.setChar(_dispnum,placeval,\u0027 \u0027,false);\u003Cbr\u003E }\u003Cbr\u003E lc.setChar(_dispnum,7,c,false);\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//-------------------------------------------------------------------------------------//\u003Cbr\u003E[COLOR=#ff0000]void printNumLEDnew(int _dispnum, long _value, char c, int _decplace, int _base)[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]{[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]//char c is now made redundant, only kept in the header for a consistent input field.[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]\u003Cbr\u003E[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]//prints number to LEDmatrix chip.[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]//for (int ch=0;ch\u0026lt;8;ch\u002B\u002B) {[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]// numdisp.setChar(loopval,ch,\u0027-\u0027,false);//false flag is for decpnt control.[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]//}//end for[/COLOR]\u003Cbr\u003E[B][COLOR=#ff0000]if (numdisp.getDeviceCount()\u0026lt;=_dispnum) return;//cannot enter info on displays that do not exist.[/COLOR][/B]\u003Cbr\u003E[COLOR=#ff0000]\u003Cbr\u003E[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]boolean IsNeg=false;[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]if (_value\u0026lt;0) {[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]IsNeg=true;[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]_value=-_value;//make positive num[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]}[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]boolean decpoint;[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]int placeval=0;int tempval;[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]//digitalWrite(LED_CSstart\u002B_dispnum,LOW);//activate !CS[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]//numdisp.SPI_CS=LED_CSstart\u002B_dispnum;//change CS for current display[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]do {[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]tempval=_value%_base; _value=_value/_base;[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]decpoint=false; if ((_decplace)==placeval) decpoint=true;[/COLOR]\u003Cbr\u003E[B][COLOR=#ff0000]numdisp.setDigit(_dispnum,placeval,tempval,decpoint);[/COLOR][/B]\u003Cbr\u003E[COLOR=#ff0000]//placeval\u002B\u002B;[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]} while ((placeval\u002B\u002B\u0026lt;7 \u0026amp;\u0026amp; _value\u0026gt;0) || (placeval\u0026lt;=_decplace));[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]if (IsNeg) {[/COLOR]\u003Cbr\u003E[B][COLOR=#ff0000]numdisp.setChar(_dispnum,placeval\u002B\u002B,\u0027-\u0027,false);[/COLOR][/B]\u003Cbr\u003E[COLOR=#ff0000]}[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]for (placeval=placeval;placeval\u0026lt;8;placeval\u002B\u002B) {[/COLOR]\u003Cbr\u003E[B][COLOR=#ff0000]numdisp.setChar(_dispnum,placeval,\u0027 \u0027,false);[/COLOR][/B]\u003Cbr\u003E[COLOR=#ff0000]}[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]//numdisp.setChar(_dispnum,7,c,false);[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]//digitalWrite(36\u002B_dispnum,HIGH);[/COLOR]\u003Cbr\u003E[COLOR=#ff0000]}[/COLOR]\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//-------------------------------------------------------------------------------------//\u003Cbr\u003Eboolean isEqual(double _var, double _valtotest)\u003Cbr\u003E{\u003Cbr\u003E return isEqual( _var, _valtotest, 0.001);//default tolerance is real low.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//----------------//\u003Cbr\u003Eboolean isEqual(double _var, double _valtotest, double _tolerance)\u003Cbr\u003E{\u003Cbr\u003E //tests if two values (e.g \u0022if (x==_number)\u0022, but allowing floating point nums;\u003Cbr\u003E //which have a habit of rounding errors.\u003Cbr\u003E\u003Cbr\u003E //(fabs(result - expectedResult) \u0026lt; 0.0001)\u003Cbr\u003E if (fabs(_var - _valtotest) \u0026lt; _tolerance) return true;\u003Cbr\u003E else return false;\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//-------------------------------------------------------------------------------------//\u003Cbr\u003Eunsigned long exponent(unsigned long _base, int _exp)\u003Cbr\u003E{\u003Cbr\u003E //raises _base to the power of _exp\u003Cbr\u003E //i.e. _base ^ _exp\u003Cbr\u003E //example call: bignum=exponent(2,8); //bignum=2^8=256\u003Cbr\u003E\u003Cbr\u003E if (_exp==0) return(1);//anything to the power of 0 = 1.\u003Cbr\u003E if (_base\u0026lt;1) return(0);//only valid base num\u0027s please! (note: 0^x (x\u0026gt;0) is always zero anyway.)\u003Cbr\u003E if (_exp\u0026lt;0) return(0);//no negative exponents! we call that \u0027division\u0027. take that .... elsewhere!\u003Cbr\u003E\u003Cbr\u003E unsigned long result=1;\u003Cbr\u003E\u003Cbr\u003E for (int indx=1;indx\u0026lt;=_exp;indx\u002B\u002B)\u003Cbr\u003E {\u003Cbr\u003E //exponent is multiple multiples... i.e. 10^5 == 10*10*10*10*10\u003Cbr\u003E //so loop that ....!\u003Cbr\u003E if ((result*_base) \u0026lt; result) {\u003Cbr\u003E result=0;\u003Cbr\u003E break;//return 0 if overflow.\u003Cbr\u003E }\u003Cbr\u003E result=result*_base;\u003Cbr\u003E\u003Cbr\u003E }//end for\u003Cbr\u003E return(result);\u003Cbr\u003E //keep in mind, that if result \u0026gt; ~4x10^9 that result will overflow and give a garbage result.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//-------------------------------------------------------------------------------------//\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EAs I said before, this throws up these \u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino: In function \u0027void printNumLEDnew(int, long int, char, int, int)\u0027:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino:175:5: error: \u0027numdisp\u0027 was not declared in this scope\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino:189:1: error: \u0027numdisp\u0027 was not declared in this scope\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino:193:1: error: \u0027numdisp\u0027 was not declared in this scope\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003ELedControlFunctions.ino:196:1: error: \u0027numdisp\u0027 was not declared in this scope\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003EError compiling\u003C/span\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003Ebyte buffer[256]; //address for temporary storage and parsing buffer\u003Cbr\u003Euint8_t structSize;\u003Cbr\u003Euint8_t rx_array_inx; //index for RX parsing buffer\u003Cbr\u003Euint8_t calc_CS; //calculated Chacksum\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//This .... contains stuff borrowed from EasyTransfer lib\u003Cbr\u003Eboolean KSPBoardReceiveData() {\u003Cbr\u003E if ((rx_len == 0)\u0026amp;\u0026amp;(Serial.available()\u0026gt;3)){\u003Cbr\u003E while(Serial.read()!= 0xBE) {\u003Cbr\u003E if (Serial.available() == 0)\u003Cbr\u003E return false; \u003Cbr\u003E }\u003Cbr\u003E if (Serial.read() == 0xEF){\u003Cbr\u003E rx_len = Serial.read(); \u003Cbr\u003E id = Serial.read(); \u003Cbr\u003E rx_array_inx = 1;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E switch(id) {\u003Cbr\u003E case 0:\u003Cbr\u003E structSize = sizeof(HPacket); \u003Cbr\u003E address = (byte*)\u0026amp;HPacket; \u003Cbr\u003E break;\u003Cbr\u003E case 1:\u003Cbr\u003E structSize = sizeof(VData); \u003Cbr\u003E address = (byte*)\u0026amp;VData; \u003Cbr\u003E break;\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E //make sure the binary structs on both Arduinos are the same size.\u003Cbr\u003E if(rx_len != structSize){\u003Cbr\u003E rx_len = 0;\u003Cbr\u003E return false;\u003Cbr\u003E } \u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if(rx_len != 0){\u003Cbr\u003E while(Serial.available() \u0026amp;\u0026amp; rx_array_inx \u0026lt;= rx_len){\u003Cbr\u003E buffer[rx_array_inx\u002B\u002B] = Serial.read();\u003Cbr\u003E }\u003Cbr\u003E buffer[0] = id;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if(rx_len == (rx_array_inx-1)){\u003Cbr\u003E //seem to have got whole message\u003Cbr\u003E //last uint8_t is CS\u003Cbr\u003E calc_CS = rx_len;\u003Cbr\u003E for (int i = 0; i\u0026lt;rx_len; i\u002B\u002B){\u003Cbr\u003E calc_CS^=buffer[i];\u003Cbr\u003E } \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if(calc_CS == buffer[rx_array_inx-1]){//CS good\u003Cbr\u003E memcpy(address,buffer,structSize);\u003Cbr\u003E rx_len = 0;\u003Cbr\u003E rx_array_inx = 1;\u003Cbr\u003E return true;\u003Cbr\u003E }\u003Cbr\u003E else{\u003Cbr\u003E //failed checksum, need to clear this out anyway\u003Cbr\u003E rx_len = 0;\u003Cbr\u003E rx_array_inx = 1;\u003Cbr\u003E return false;\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E return false;\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid KSPBoardSendData(uint8_t * address, uint8_t len){\u003Cbr\u003E uint8_t CS = len;\u003Cbr\u003E Serial.write(0xBE);\u003Cbr\u003E Serial.write(0xEF);\u003Cbr\u003E Serial.write(len);\u003Cbr\u003E\u003Cbr\u003E for(int i = 0; i\u0026lt;len; i\u002B\u002B){\u003Cbr\u003E CS^=*(address\u002Bi);\u003Cbr\u003E Serial.write(*(address\u002Bi));\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E Serial.write(CS);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Euint8_t rx_len;uint8_t * address;\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E controlTime = now - controlTimeOld; \u003Cbr\u003E if (controlTime \u0026gt; CONTROLREFRESH){\u003Cbr\u003E controlTimeOld = now;\u003Cbr\u003E controls();\u003Cbr\u003E } \u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid controls() {\u003Cbr\u003E if (Connected) {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if (digitalRead(SASPIN)) //--------- This is how you do main controls\u003Cbr\u003E {MainControls(SAS, HIGH);}\u003Cbr\u003E else\u003Cbr\u003E {MainControls(SAS, LOW);}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if (digitalRead(RCSPIN))\u003Cbr\u003E MainControls(RCS, HIGH);\u003Cbr\u003E else\u003Cbr\u003E MainControls(RCS, LOW);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if (digitalRead(CG1PIN)) //--------- This is how you do control groups\u003Cbr\u003E ControlGroups(1, HIGH);\u003Cbr\u003E else\u003Cbr\u003E ControlGroups(1, LOW);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E //This is an example of reading analog inputs to an axis, with deadband and limits\u003Cbr\u003E //AVAKTIVERAD CPacket.Throttle = constrain(map(analogRead(THROTTLEPIN),THROTTLEDB,1024-THROTTLEDB,0,1000),0, 1000);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E KSPBoardSendData(details(CPacket));\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid controlsInit() {\u003Cbr\u003E pinMode(SASPIN, INPUT_PULLUP);\u003Cbr\u003E pinMode(RCSPIN, INPUT_PULLUP);\u003Cbr\u003E pinMode(CG1PIN, INPUT_PULLUP);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid MainControls(byte n, boolean s) {\u003Cbr\u003E if (s)\u003Cbr\u003E CPacket.MainControls |= (1 \u0026lt;\u0026lt; n); // forces nth bit of x to be 1. all other bits left alone.\u003Cbr\u003E else\u003Cbr\u003E CPacket.MainControls \u0026amp;= ~(1 \u0026lt;\u0026lt; n); // forces nth bit of x to be 0. all other bits left alone.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid ControlGroups(byte n, boolean s) {\u003Cbr\u003E if (s)\u003Cbr\u003E CPacket.ControlGroup |= (1 \u0026lt;\u0026lt; n); // forces nth bit of x to be 1. all other bits left alone.\u003Cbr\u003E else\u003Cbr\u003E CPacket.ControlGroup \u0026amp;= ~(1 \u0026lt;\u0026lt; n); // forces nth bit of x to be 0. all other bits left alone.\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid output() {  now = millis();\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E CLK=6 GREEN\u003Cbr\u003E DIN=7 ORANGE1 */\u003Cbr\u003E//RADAR ALT------------------------------------------------------------------------------------\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if (VData.RAlt \u0026lt; 100) {\u003Cbr\u003E printNumLED(0, (long)(VData.RAlt*10), \u0027 \u0027,1); //Below 100m, print with 1 decimal. \u003Cbr\u003E }\u003Cbr\u003E else if (VData.RAlt \u0026lt;10000){\u003Cbr\u003E printNumLED(0, (long)(VData.RAlt), \u0027 \u0027,0); //Above 100m, print without decimals.\u003Cbr\u003E }\u003Cbr\u003E else if (VData.RAlt \u0026gt; 10000) { //Above 10000m, print H16H (high)\u003Cbr\u003E lc.setChar(0,3,\u0027H\u0027,false);\u003Cbr\u003E lc.setChar(0,2,\u00271\u0027,false); \u003Cbr\u003E lc.setChar(0,1,\u00276\u0027,false);\u003Cbr\u003E lc.setChar(0,0,\u0027H\u0027,false);}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//RADAR ALT----------------------------------------------------------------------------------------------\u003Cbr\u003E//FUEL PERCENTAGE ---------------------------------------------------------------------------------\u003Cbr\u003E/*\u003Cbr\u003E if (VData.LiquidFuel/VData.LiquidFuelTot==1) //When stage is full, print \u0022FULL\u0022\u003Cbr\u003E { \u003Cbr\u003E lc.setChar(0,3,\u0027F\u0027,false);\u003Cbr\u003E lc.setRow(0,2,62); //62= Capital U\u003Cbr\u003E lc.setChar(0,1,\u0027L\u0027,false);\u003Cbr\u003E lc.setChar(0,0,\u0027L\u0027,false);\u003Cbr\u003E }\u003Cbr\u003E else if(VData.LiquidFuel/VData.LiquidFuelTot\u0026lt;1)\u003Cbr\u003E { //When stage is not full, print stage fuel %\u003Cbr\u003E printNumLED(0, (long)(VData.LiquidFuel/VData.LiquidFuelTot*10000),\u0027 \u0027, 2);\u003Cbr\u003E }\u003Cbr\u003E else if(VData.LiquidFuel\u0026lt;=0){ //When stage is 0 or below (SIC) print \u0022null\u0022\u003Cbr\u003E lc.setRow(0,3,0x15); // \u0022n\u0022\u003Cbr\u003E lc.setRow(0,2,0x1c); // \u0022u\u0022\u003Cbr\u003E lc.setChar(0,1,\u00271\u0027,false); // \u0022l\u0022\u003Cbr\u003E lc.setChar(0,0,\u00271\u0027,false);} // \u0022l\u0022\u003Cbr\u003E //the null print is because when you drop the last tank before it is empty, wierd negative\u003Cbr\u003E //numbers can appear appear. With this, the display will show null instead of these numbers.\u003Cbr\u003E */\u003Cbr\u003E//FUEL PERCENTAGE-------------------------------------------------------------------------------------------- \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//printNumLED(0, (long)(VData.Alt/1000*1000),\u00270\u0027,2);//will display apoapsis, with the decimal point separating km and m.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E caution = 0;\u003Cbr\u003E warning = 0;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E caution \u002B= VData.G \u0026gt; GCAUTION;\u003Cbr\u003E warning \u002B= VData.G \u0026gt; GWARN;\u003Cbr\u003E caution \u002B= VData.LiquidFuelS/VData.LiquidFuelTotS*100 \u0026lt; FUELCAUTION;\u003Cbr\u003E warning \u002B= VData.LiquidFuelS/VData.LiquidFuelTotS*100 \u0026lt; FUELWARN;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if (caution != 0)\u003Cbr\u003E digitalWrite(YLED,HIGH);\u003Cbr\u003E else\u003Cbr\u003E digitalWrite(YLED,LOW);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E if (warning != 0)\u003Cbr\u003E digitalWrite(RLED,HIGH);\u003Cbr\u003E else\u003Cbr\u003E digitalWrite(RLED,LOW);\u003Cbr\u003E\u003Cbr\u003E digitalWrite(SASLED,ControlStatus(AGSAS));\u003Cbr\u003E digitalWrite(RCSLED,ControlStatus(AGRCS));\u003Cbr\u003E digitalWrite(CG1LED,ControlStatus(AGCustom01));\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid initLEDS() {\u003Cbr\u003E pinMode(GLED,OUTPUT);\u003Cbr\u003E digitalWrite(GLED,HIGH);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E pinMode(YLED,OUTPUT);\u003Cbr\u003E digitalWrite(YLED,HIGH);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E pinMode(RLED,OUTPUT);\u003Cbr\u003E digitalWrite(RLED,HIGH);\u003Cbr\u003E\u003Cbr\u003E pinMode(SASLED,OUTPUT);\u003Cbr\u003E digitalWrite(SASLED,HIGH);\u003Cbr\u003E\u003Cbr\u003E pinMode(RCSLED,OUTPUT);\u003Cbr\u003E digitalWrite(RCSLED,HIGH);\u003Cbr\u003E\u003Cbr\u003E pinMode(CG1LED,OUTPUT);\u003Cbr\u003E digitalWrite(CG1LED,HIGH);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid LEDSAllOff() {\u003Cbr\u003E digitalWrite(GLED,LOW);\u003Cbr\u003E digitalWrite(YLED,LOW);\u003Cbr\u003E digitalWrite(RLED,LOW);\u003Cbr\u003E digitalWrite(SASLED,LOW);\u003Cbr\u003E digitalWrite(RCSLED,LOW);\u003Cbr\u003E digitalWrite(CG1LED,LOW);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Evoid InitTxPackets() {\u003Cbr\u003E HPacket.id = 0; \u003Cbr\u003E CPacket.id = 101;\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid Indicators() {/* CS=5 YELLOW\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EI would really appreciate if someone has the time and energy to help me solve this. It\u0027s really frustrating not to be able to find out what\u0027s wrong by myself.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-10T09:59:08Z\u0022 title=\u002205/10/2015 09:59  AM\u0022 data-short=\u00229 yr\u0022\u003EMay 10, 2015\u003C/time\u003E by I_KILL_HORSES\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Sputnix","CreatedById":141420,"CreatedDateTime":"2015-05-10T11:07:08Z","Content":"\n\u003Cp\u003EZitronen: \u003C/p\u003E\u003Cp\u003EThanks so much for the hard work you\u0027ve put (and continue to put) into this effort. Your work (along with many others) has inspired me to learn the Arduino, and begin working on my own simpit/console! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m currently reading the archives (up to page 16/96) - but I was wondering if you had a feature-request form? Or some way for us to see what features have been requested (apart from going through all the posts) / are being worked on?\u003C/p\u003E\u003Cp\u003EI\u0027ve been thinking that it would be nifty to be able to get overheat warnings when something overheats \u0026gt; 50% [such as rockets at launch]\u003C/p\u003E\u003Cp\u003E[The latest version of KSP also seems to have \u0027health\u0027 for various parts of the craft, such as parachutes exposed to the re-entry have a health bar show up - which could be useful to output a warning about]\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://pfpfree.net/images/ksp_health.png\u0022 alt=\u0022ksp_health.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2015-05-10T12:07:47Z","Content":"\n\u003Cp\u003E@zitronen: You just saved me a SOI slider. Thanks for the update. Let us just hope that Squad does not plug in three new planets, or the scheme will be broken.\u003C/p\u003E\n"},{"CreatedByName":"Dmitrik","CreatedById":143725,"CreatedDateTime":"2015-05-11T08:51:45Z","Content":"\n\u003Cp\u003E2zitronen: Hi! your plugin is awesome. I\u0060m doing my own hardware controller too, and looks like you saved a ton of my time. I would like to make a powered landing helper, that would show me when it\u0060s time to start suicide burn. And take-off helper, that wil show me how far I\u0060m from terminal velocity. For those I need a TWR, or even better - current thrust and mass of a vessel. Is it possible to get that kind of data through your plugin?\u003C/p\u003E\n"},{"CreatedByName":"T.A.P.O.R.","CreatedById":137748,"CreatedDateTime":"2015-05-11T10:13:27Z","Content":"\n\u003Cp\u003EHi Dimitrik,\u003C/p\u003E\u003Cp\u003EI don\u0027t think KSPIO will be able to give you that\u003C/p\u003E\u003Cp\u003EThe opening post has the data that is already supported\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[StructLayout(LayoutKind.Sequential, Pack = 1)]\u003Cbr\u003Epublic struct VesselData\u003Cbr\u003E    {\u003Cbr\u003E        public byte id;             //1   packet id\u003Cbr\u003E        public float AP;            //2   apoapsis (m to sea level)\u003Cbr\u003E        public float PE;            //3   periapsis (m to sea level)\u003Cbr\u003E        public float SemiMajorAxis; //4   orbit semi major axis (m)\u003Cbr\u003E        public float SemiMinorAxis; //5   orbit semi minor axis (m)\u003Cbr\u003E        public float VVI;           //6   vertical velocity (m/s)\u003Cbr\u003E        public float e;             //7   orbital eccentricity (unitless, 0 = circular, \u0026gt; 1 = escape)\u003Cbr\u003E        public float inc;           //8   orbital inclination (degrees)\u003Cbr\u003E        public float G;             //9   acceleration (Gees)\u003Cbr\u003E        public int TAp;             //10  time to AP (seconds)\u003Cbr\u003E        public int TPe;             //11  time to Pe (seconds)\u003Cbr\u003E        public float TrueAnomaly;   //12  orbital true anomaly (degrees)\u003Cbr\u003E        public float Density;       //13  air density (presumably kg/m^3, 1.225 at sea level)\u003Cbr\u003E        public int period;          //14  orbital period (seconds)\u003Cbr\u003E        public float RAlt;          //15  radar altitude (m)\u003Cbr\u003E        public float Alt;           //16  altitude above sea level (m)\u003Cbr\u003E        public float Vsurf;         //17  surface velocity (m/s)\u003Cbr\u003E        public float Lat;           //18  Latitude (degree)\u003Cbr\u003E        public float Lon;           //19  Longitude (degree)\u003Cbr\u003E        public float LiquidFuelTot; //20  Liquid Fuel Total\u003Cbr\u003E        public float LiquidFuel;    //21  Liquid Fuel remaining\u003Cbr\u003E        public float OxidizerTot;   //22  Oxidizer Total\u003Cbr\u003E        public float Oxidizer;      //23  Oxidizer remaining\u003Cbr\u003E        public float EChargeTot;    //24  Electric Charge Total\u003Cbr\u003E        public float ECharge;       //25  Electric Charge remaining\u003Cbr\u003E        public float MonoPropTot;   //26  Mono Propellant Total\u003Cbr\u003E        public float MonoProp;      //27  Mono Propellant remaining\u003Cbr\u003E        public float IntakeAirTot;  //28  Intake Air Total\u003Cbr\u003E        public float IntakeAir;     //29  Intake Air remaining\u003Cbr\u003E        public float SolidFuelTot;  //30  Solid Fuel Total\u003Cbr\u003E        public float SolidFuel;     //31  Solid Fuel remaining\u003Cbr\u003E        public float XenonGasTot;   //32  Xenon Gas Total\u003Cbr\u003E        public float XenonGas;      //33  Xenon Gas remaining\u003Cbr\u003E        public float LiquidFuelTotS;//34  Liquid Fuel Total (stage)\u003Cbr\u003E        public float LiquidFuelS;   //35  Liquid Fuel remaining (stage)\u003Cbr\u003E        public float OxidizerTotS;  //36  Oxidizer Total (stage)\u003Cbr\u003E        public float OxidizerS;     //37  Oxidizer remaining (stage)\u003Cbr\u003E        public UInt32 MissionTime;  //38  Time since launch (s)\u003Cbr\u003E        public float deltaTime;     //39  Time since last packet (s)\u003Cbr\u003E        public float VOrbit;        //40  Orbital speed (m/s)\u003Cbr\u003E        public UInt32 MNTime;       //41  Time to next node (s) [0 when no node]\u003Cbr\u003E        public float MNDeltaV;      //42  Delta V for next node (m/s) [0 when no node]\u003Cbr\u003E        public float Pitch;         //43  Vessel Pitch relative to surface (degrees)\u003Cbr\u003E        public float Roll;          //44  Vessel Roll relative to surface (degrees)\u003Cbr\u003E        public float Heading;       //45  Vessel Heading relative to surface (degrees)\u003Cbr\u003E        public UInt16 ActionGroups; //46  status bit order:SAS, RCS, Light, Gear, Brakes, Abort, Custom01 - 10  [COLOR=#333333]    }\u003Cbr\u003E[/COLOR]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2015-05-11T10:58:02Z","Content":"\n\u003Cp\u003EI have started thinking recently that TWR would be good to have available. Playing with FAR in 0.90 and the awesome new stock aero in 1.0 and up I find that the one thing I eyeball very carefully on ascent is Kerbal Engineer\u0027s TWR display for the current stage.\u003C/p\u003E\u003Cp\u003EWhen some more free time magically appears I was thinking I might try to add vessel mass and current thrust to the VesselData packet, and let my controller compute current TWR. The thrust at least probably has other uses.\u003C/p\u003E\n"},{"CreatedByName":"T.A.P.O.R.","CreatedById":137748,"CreatedDateTime":"2015-05-11T11:21:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stibbons\u0022 data-cite=\u0022stibbons\u0022\u003E\u003Cdiv\u003EI have started thinking recently that TWR would be good to have available. Playing with FAR in 0.90 and the awesome new stock aero in 1.0 and up I find that the one thing I eyeball very carefully on ascent is Kerbal Engineer\u0027s TWR display for the current stage.\u003Cp\u003EWhen some more free time magically appears I was thinking I might try to add vessel mass and current thrust to the VesselData packet, and let my controller compute current TWR. The thrust at least probably has other uses.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood thing I haven\u0027t done the decals yet!\u003C/p\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2015-05-11T11:26:34Z","Content":"\n\u003Cp\u003EJust build all your panel labels like this. No worries.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://aarcoproducts.com/22e.gif\u0022 alt=\u002222e.gif\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dmitrik","CreatedById":143725,"CreatedDateTime":"2015-05-11T11:38:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022T.A.P.O.R.\u0022 data-cite=\u0022T.A.P.O.R.\u0022\u003E\u003Cdiv\u003EHi Dimitrik,\u003Cp\u003EI don\u0027t think KSPIO will be able to give you that\u003C/p\u003E\u003Cp\u003EThe opening post has the data that is already supported\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was hoping that it\u0060s some kind of undocumented feature, or such obvious thing that is not worth documenting. It\u0060s a pity. \u003C/p\u003E\u003Cp\u003EIt seems that telemachus is not helpful eather - no mass and no thrust. Maybe there are some other sources for that kind of data? kOs seems like can give much more.\u003C/p\u003E\u003Cp\u003EOr it will be easier to make a branch of this fine plugin?\u003C/p\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2015-05-11T11:57:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dmitrik\u0022 data-cite=\u0022Dmitrik\u0022\u003E\u003Cdiv\u003EI was hoping that it\u0060s some kind of undocumented feature, or such obvious thing that is not worth documenting. It\u0060s a pity. \u003Cp\u003EIt seems that telemachus is not helpful eather - no mass and no thrust. Maybe there are some other sources for that kind of data?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe information is either directly accessible through the API or easily derived. I use KER a lot, which seems to have no trouble displaying it all.\u003C/p\u003E\u003Cp\u003EThe code for this plugin is pretty easy to get the hang of, even for stubborn sysadmins like me. I highly recommend forking the github repo, adding it in and submitting a pull request. If you don\u0027t, I\u0027ll have a crack at it in the next few weeks. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2015-05-11T12:54:04Z","Content":"\n\u003Cp\u003EMaybe I can inspire you with my intentions for expanding my project. The second arduino in my console (the module I named COLOSSUS) will read a precomputed ascent trajectory calculated by Ascent Komputron from a SD card. It then gives you ascent guidance by displaying the desired pitch angle for your trajectory at the current altitude. More interesting for you is that Ascent Komputron has thrust data for all stages available\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// KHDL description of vessel \u0022Kerbal X\u0022 with final sequence stage = 4\u003Cbr\u003E// Komputron version: 1.4.2.0, file generated on 12/18/2014 12:13:12 PM\u003Cbr\u003E// This is an automatic conversion: please make sure the source design is compliant with the conversion rules and check the results for consistency \u0026lt;\u0026lt;\u003Cbr\u003EVESSEL=Kerbal_X DRYMASS=46.820 DRYDRAG=0.1945\u003Cbr\u003E\u003Cbr\u003E// Region #5, 2 parts\u003Cbr\u003E// Region is treated as payload, total mass = 4.300t \u0026lt;\u0026lt;\u003Cbr\u003E// 1 x Mk1-2 Command Pod\u003Cbr\u003E\u003Cbr\u003E// Region #4, 14 parts\u003Cbr\u003E// Region is treated as payload, total mass = 11.700t \u0026lt;\u0026lt;\u003Cbr\u003E// 1 x Rockomax X200-16 Fuel Tank, resources = [LiquidFuel / Oxidizer]\u003Cbr\u003E// 1 x Rockomax \u0022Poodle\u0022 Liquid Engine, propellants = [LiquidFuel / Oxidizer]\u003Cbr\u003E\u003Cbr\u003E// Region #3, 14 parts, dry mass = 12.520t\u003Cbr\u003E// Region not decoupled \u0026lt;\u0026lt;\u003Cbr\u003E// 1 x Rockomax \u0022Mainsail\u0022 Liquid Engine, propellants = [LiquidFuel / Oxidizer]\u003Cbr\u003EENGINE=LFE3_8 THRUST=1500.000 VACISP=360.000 KSLISP=320.000\u003Cbr\u003E// 3 x Rockomax X200-32 Fuel Tank, resources = [LiquidFuel / Oxidizer]\u003Cbr\u003ETANK=LFT3 FUEL=48.000 FUELDRAG=0.2000 RESERVE=0.000\u003Cbr\u003ECONNECTSRC=LFT3 CONNECTDEST=LFE3_8\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFrom this data you can read dry weight and thrust of the vehicle and the individual stages.\u003C/p\u003E\u003Cp\u003EI let my arduinos communicate on i2c bus and share that information.\u003C/p\u003E\u003Cp\u003EOne day I want to see chamber pressure and temperature on my console and have status lights for individual engines. One day...\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2015-05-11T12:59:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022I_KILL_HORSES\u0022 data-cite=\u0022I_KILL_HORSES\u0022\u003E\u003Cdiv\u003EI will just copy all of my code, I do not know how much I need to post for someone to troubleshoot it for me.\u003Cp\u003EI would really appreciate if someone has the time and energy to help me solve this. It\u0027s really frustrating not to be able to find out what\u0027s wrong by myself.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELooks like you can just replace \u0022numdisp\u0022 with \u0022lc\u0022? \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sputnix\u0022 data-cite=\u0022Sputnix\u0022\u003E\u003Cdiv\u003EZitronen: \u003Cp\u003EThanks so much for the hard work you\u0027ve put (and continue to put) into this effort. Your work (along with many others) has inspired me to learn the Arduino, and begin working on my own simpit/console! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m currently reading the archives (up to page 16/96) - but I was wondering if you had a feature-request form? Or some way for us to see what features have been requested (apart from going through all the posts) / are being worked on?\u003C/p\u003E\u003Cp\u003EI\u0027ve been thinking that it would be nifty to be able to get overheat warnings when something overheats \u0026gt; 50% [such as rockets at launch]\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere was a spread sheet like thing awhile back. Most of the things on there are now implemented. The best place for feature request would be github I guess. I\u0027ll have a look at how easy/hard it would be to add overheat.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Freshmeat\u0022 data-cite=\u0022Freshmeat\u0022\u003E\u003Cdiv\u003E@zitronen: You just saved me a SOI slider. Thanks for the update. Let us just hope that Squad does not plug in three new planets, or the scheme will be broken.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf they add more planets then F- it we are going 16bit! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dmitrik\u0022 data-cite=\u0022Dmitrik\u0022\u003E\u003Cdiv\u003E2zitronen: Hi! your plugin is awesome. I\u0060m doing my own hardware controller too, and looks like you saved a ton of my time. I would like to make a powered landing helper, that would show me when it\u0060s time to start suicide burn. And take-off helper, that wil show me how far I\u0060m from terminal velocity. For those I need a TWR, or even better - current thrust and mass of a vessel. Is it possible to get that kind of data through your plugin?\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stibbons\u0022 data-cite=\u0022stibbons\u0022\u003E\u003Cdiv\u003EI have started thinking recently that TWR would be good to have available. Playing with FAR in 0.90 and the awesome new stock aero in 1.0 and up I find that the one thing I eyeball very carefully on ascent is Kerbal Engineer\u0027s TWR display for the current stage.\u003Cp\u003EWhen some more free time magically appears I was thinking I might try to add vessel mass and current thrust to the VesselData packet, and let my controller compute current TWR. The thrust at least probably has other uses.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThrust is not trivial to get. You would need to iterate through all the parts, find which parts are engines, whether they are active and have fuel. In 1.0 thrust also changes with atmo. Even then you could have situations where you have engines facing each other (as an extreme example) so their net thrust is zero. I think we would need to steal some code from mechjeb/engineer for that unless stibbons wants to do the dirty work \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E. You can make a simple landing computer with some nested PID controller loops on decent velocity, acceleration and predicted impact time. Obviously won\u0027t be quite as good as a true suicide burn, but this can be done with the currently available data.\u003C/p\u003E\u003Cp\u003EI\u0027ve been messing around with aerodynamics lately, I am planning on also adding indicated airspeed, Mach number, and maybe angle of attack.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-11T13:10:24Z\u0022 title=\u002205/11/2015 01:10  PM\u0022 data-short=\u00229 yr\u0022\u003EMay 11, 2015\u003C/time\u003E by zitronen\u003C/strong\u003E\n\u003C/span\u003E\n"}]}