{"TopicId":86681,"ForumId":35,"TopicTitle":"[PYTHON][LIBRARY][WIP] PyKSP: A Python KSP interface library","CreatedByName":"Coffeeman","CreatedById":69966,"CreatedDateTime":"2014-10-09T18:56:54Z","PageNum":1,"Articles":[{"CreatedByName":"Coffeeman","CreatedById":69966,"CreatedDateTime":"2014-10-09T18:56:54Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EPresenting...\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF8C00;\u0022\u003E\u003Cspan style=\u0022font-size:36px;\u0022\u003EPyKSP\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EA Linear, Pythonic KSP API For Telemachus\u003C/span\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EGet yours today: \u003C/span\u003E\u003Ca href=\u0022https://github.com/602p/pyksp\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003Ehttps://github.com/602p/pyksp\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003ETHIS IS A MOD OF A MOD! YOU NEED TELEMACHUS RUNNING TO INTERACT WITH KSP!\u003C/span\u003E\u003C/span\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EInteract with KSP (thru telemachus) using code as simple as\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eimport pyksp,time\u003Cbr\u003E\u003Cbr\u003Evessel=pyksp.WrappedVessel()\u003Cbr\u003Evessel.subscribe(\u0022vessel_altitude\u0022)\u003Cbr\u003Evessel.start()\u003Cbr\u003Evessel.sas()\u003Cbr\u003Etime.sleep(2)\u003Cbr\u003Evessel.stage()\u003Cbr\u003Ewhile 1:\u003Cbr\u003E    print vessel.vessel_altitude\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Chr\u003E\u003Cp\u003EA quick runthru:\u003C/p\u003E\u003Cp\u003EImport pyksp: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eimport pyksp\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ECreate and start a Vessel object: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ev=pyksp.WrappedVessel()\u003Cbr\u003Ev.subscribe(\u0022vessel_altitude\u0022)\u003Cbr\u003Ev.start()\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDo whatever LINEAR code jazz you want:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evessel.sas()\u003Cbr\u003Etime.sleep(2)\u003Cbr\u003Evessel.stage()\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EReceive data WITHOUT even needing to call update:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ewhile 1:\u003Cbr\u003E    print vessel.vessel_altitude\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Chr\u003E\u003Cp\u003EThere are two classes,\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E ActiveVessel\u003C/span\u003E, and its subtype \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EWrappedVessel\u003C/span\u003E. And they bolth talk to python thru Telemachus (IP and Port configurable!)\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EActiveVessel\u003C/span\u003E allows you to \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Esubscribe_string(\u0022vessel_vertical_speed\u0022)\u003C/span\u003E,do \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Erun_command(\u0022action_group_3\u0022)\u003C/span\u003E, and \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Eget(\u0022resource_lf_max\u0022)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EWrappedVessel\u003C/span\u003E allows you to do \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Evessel.string\u003C/span\u003E, and automatically subscribe to it in the background, and additionally do \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Evessel.sas()\u003C/span\u003E or \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Evessel.stage()\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EFor both, you can subscribe to any number of strings, representing datapoints. For example, target_periapsis would track the selected vessels periapsis, or resource_xg_current would track the current XenonGas level. For \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EActiveVessel\u003C/span\u003E, you need to first subscribe to a datapoint with \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evessel.subscribe(\u0022resource_xg_current\u0022)\u003C/pre\u003E\u003Cp\u003Eand then get the current value with\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evessel.get(\u0022rescource_xg_current\u0022)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EWrappedVessel\u003C/span\u003E simplifies this, by allowing you to access datapoints by doing vessel.value (ex \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Evessel.docking_delta_y_angle\u003C/span\u003E) and it will automatically subscribe if you are not already.\u003C/p\u003E\u003Cp\u003EFor both you can run commands with \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Evessel.run_command(\u0022brake\u0022)\u003C/span\u003E or \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Evessel.run_command(\u0022abort\u0022)\u003C/span\u003E. Once again, \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EWrappedVessel \u003C/span\u003Esimplifies this by allowing you to do \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Evessel.ag1()\u003C/span\u003E or \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Evessel.stage()\u003C/span\u003E.\u003C/p\u003E\u003Cp\u003EHere is a list of \u003Cstrong\u003Eall\u003C/strong\u003E datapoint names, but their behavior is dictated by telemachus \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://pastebin.com/FX7bfUX8\u0022 rel=\u0022external nofollow\u0022\u003EDatapoints\u003C/a\u003E and \u003Ca href=\u0022http://pastebin.com/AwiGqNDc\u0022 rel=\u0022external nofollow\u0022\u003ECommands\u003C/a\u003E (for \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EActiveVessel.run_command()\u003C/span\u003E)\u003C/p\u003E\u003Cp\u003EIm sorry if this post is a mess (it kinda is \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E ) and Id happily explain it to y\u0027all or have a look at your code!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-20T17:14:28Z\u0022 title=\u002210/20/2014 05:14  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 20, 2014\u003C/time\u003E by Coffeeman\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-09T20:04:42Z","Content":"\n\u003Cp\u003EWell, that\u0027s a pretty awesome way to cap your first five posts. Very cool! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}