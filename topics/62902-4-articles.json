{"TopicId":62902,"ForumId":36,"TopicTitle":"[1.8.x to 1.12.x] kRPC: Remote Procedure Call Server (v0.5.1, 2nd March 2023)","CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-11T20:00:32Z","PageNum":4,"Articles":[{"CreatedByName":"soggymushrooms","CreatedById":59605,"CreatedDateTime":"2014-05-08T18:34:27Z","Content":"\n\u003Cp\u003EHow do I make the vessel point retrograde relative to the surface? I cannot figure this out at all, probably because of some sparse documentation on Github. You really need the documentation on geometry.vector3, I would really like to know if it is subscriptable, or if it has properties of pitch and yaw, or something like that. Here\u0027s some code I was trying, it\u0027s supposed to make the craft go up for 6 seconds, and then up at 45 degrees pitch for 4, and it does this, but then I try to point it retrograde for 2 seconds, and no matter what I try, it always points retrograde orbital. After that, it points straight up again like I want it to, then it controls the throttle based on vertical velocity exactly how I want as well.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://pastebin.com/nddps16A\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/nddps16A\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAlso great mod btw, I\u0027ve been wanting something like this since kOS was created, since it\u0027s silly syntax was nothing like I wanted.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-09T02:10:40Z","Content":"\n\u003Cp\u003EYour code looks fine. I tried a simplified version, and it didn\u0027t work for me either. There must be a bug somewhere in the reference frame code.\u003C/p\u003E\u003Cp\u003EI\u0027ve added documentation for vector types on the wiki. They are just containers for the three vector components, accessed using properties x, y and z. They don\u0027t provide anything fancy like roll/pitch/yaw values. For example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eimport krpc\u003Cbr\u003Ep = krpc.space_center.active_vessel.flight().prograde\u003Cbr\u003Eprint p.x, p.y, p.z\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-09T10:20:27Z","Content":"\n\u003Cp\u003EI took a look at the server code, and there is indeed a bug with transforming orbital vectors to the surface reference frame. I forgot to include the velocity vector of the planet\u0027s surface in the calculations.\u003C/p\u003E\u003Cp\u003EI don\u0027t have time right now to make the changes and test it properly - I will do so on Monday.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2014-05-09T10:24:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022djungelorm\u0022 data-cite=\u0022djungelorm\u0022\u003E\u003Cdiv\u003EYou\u0027d need to implement a java client library that you can use from your java programs to talk to the server. My knowledge of Java is limited, but I guess it would do something like translate Java RMI calls to/from protocol buffer messages that the server understands. I haven\u0027t yet documented how the protocol buffer communication protocol works, but it could be reverse engineered from the existing python client library.\u003Cp\u003Etja mentioned back on page 6 (\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/69313-WIP-kRPC-A-language-agnostic-Remote-Procedure-Call-server-for-KSP?p=1028791\u0026amp;viewfull=1#post1028791\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/69313-WIP-kRPC-A-language-agnostic-Remote-Procedure-Call-server-for-KSP?p=1028791\u0026amp;viewfull=1#post1028791\u003C/a\u003E) that they\u0027d had a go at implementing such a java client. Maybe tja could share the code with you?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eid rather have a lua client myself. though id rather wait for documentation than learn to read python.\u003C/p\u003E\n"},{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-05-09T12:46:24Z","Content":"\n\u003Cp\u003EI may write a C\u002B\u002B client for this. Or java, if there are more people interested in that. No promises or anything, I just want to have some feedback which of them and also have the following questions:\u003C/p\u003E\u003Cp\u003EYou mentioned somewhere that the python client creates most of the API at runtime after asking the server for a list of RPC methods. Of course, a java or C\u002B\u002B client can\u0027t do that (I want to provide \u0022regular\u0022 function calls for the application code), but I\u0027m interested in generating part of the client with a similar method. The obvious disadvantage is that KSP, including kRPC and anything extending the API has to run while building the client. On the other hand, this a) saves me from encapsulating every RPC by hand and \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E can automatically include any extension to the API.\u003C/p\u003E\u003Cp\u003EI would like to know what you think of this approach, and whether you would recommend looking at the python client code to learn about your protocol, or have some documentation about that.\u003C/p\u003E\u003Cp\u003EPlease keep in mind that my time to work on this will be very limited and I am not committing to finish anything - I\u0027m just curious to try.\u003C/p\u003E\u003Cp\u003EEDIT: Another question: What IDE would you recommend for Linux? Everytime I have written C\u002B\u002B on Linux, I was limited to Emacs for one reason or the other, but now that I\u0027m developing on my home PC I would like a proper IDE with a bit more...features \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-09T13:14:42Z\u0022 title=\u002205/09/2014 01:14  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 9, 2014\u003C/time\u003E by Garek\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-09T13:47:31Z","Content":"\n\u003Cp\u003EHappy to hear there are people keen to add support for more languages \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EWhen the python client connects to the server, it calls a special RPC -- called KRPC.GetServices() -- which lists all the available RPCs and a bunch of type information. The python client uses this to dynamically create python classes and methods to invoke the RPCs. As you point out, it\u0027d be annoying having to manually write all the RPCs in the client, and that\u0027s why the python client works this way.\u003C/p\u003E\u003Cp\u003EFor a compiled language like C\u002B\u002B or Java, I think it\u0027d be good to keep this behaviour as far as is possible. Maybe by having a script that calls KRPC.GetServices and generates C\u002B\u002B/Java wrapper code for all the available RPCs. Then whenever the server changes, you just rerun the script.\u003C/p\u003E\u003Cp\u003EI think it should be possible to run such a script without having KSP running. We\u0027d just need a tool that scans the DLLs containing the RPCs to retrieve the method names and type information, and sets up a server to provide a KRPC.GetServices() method. In fact, I do exactly this with a little test server to test the python client without having to run KSP. The core kRPC server code doesn\u0027t depend on KSP, so it can be linked with and run from another application.\u003C/p\u003E\u003Cp\u003EI use emacs for most of my coding (python/C\u002B\u002B) on Linux! Except C# for which I use monodevelop. I\u0027ve not really found a C\u002B\u002B IDE for linux that I like - although I did use Code::Blocks briefly and it wasn\u0027t too bad.\u003C/p\u003E\n"},{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-05-09T14:07:50Z","Content":"\n\u003Cp\u003EA script generating the Wrapper code based on KRPC.GetServices is exactly what I had in mind, nice to know that we agree on that approach. I also like the possibility of running that script against a KSP-less test server. Is your implementation of that also in the git-repository linked in the first post?\u003C/p\u003E\u003Cp\u003EAs soon as I get the time at home (I\u0027m writing this while I wait for stuff at work) I\u0027ll install KRPC and try setting up a development enviroment for this. Haven\u0027t worked with git before, but I\u0027m sure I\u0027ll find enaugh help with that on the internet. Then I\u0027ll take a look at your python client and see where I get from there \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EWell, last time I looked at Code::Blocks (okay, that was several years ago) I didn\u0027t really like the feel of it. Maybe I\u0027ll try again, or just stick with emacs.\u003C/p\u003E\u003Cp\u003EEDIT: another question of more theoretical nature: Does KRPC handle multiple concurrent clients well? The use case being that compiled client applications propably won\u0027t be as modular as python-based ones, so I will probably start a separate client per thing I want to do. What happens if two run at the same time because a) I have one for data outputs and one for actually doing stuff or even \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E I forgot to kill one before starting the next?\u003C/p\u003E\u003Cp\u003EAgain, this is a more theoretical question, since it will be some time before I start writing actual client applications, and the mentioned use cases propably won\u0027t even occur. But I\u0027m curious.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-09T14:19:01Z\u0022 title=\u002205/09/2014 02:19  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 9, 2014\u003C/time\u003E by Garek\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-05-09T14:15:17Z","Content":"\n\u003Cp\u003EIdeally, you (djungelorm) would release the testing script/server, and even add code generation capabilities to the testing script, or, alternatively, have the test script export all services in a language-independent format (JSON, XML?). Still, it would probably be easier to do the C\u002B\u002B/Java/... code generation directly from the Python testing script.\u003C/p\u003E\u003Cp\u003EOn the topic of IDEs: Code::Blocks, Netbeans and Eclipse all have a C/C\u002B\u002B mode, and I\u0027ve even made good experiences with their GDB/git integration, but I honestly recommend to simply use your text editor of choice. C/C\u002B\u002B is not an IDE-centered language like Java/C#, and IMHO IDEs don\u0027t provide any comfort bonus for those languages.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-09T14:24:57Z","Content":"\n\u003Cp\u003EGarek: The test server code is here: \u003Ca href=\u0022https://github.com/djungelorm/krpc/tree/master/test/TestServer\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/djungelorm/krpc/tree/master/test/TestServer\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ll write documentation for the server communication protocol at some point next week, but if you know python I don\u0027t think extracting the information you need from the existing client would be too difficult.\u003C/p\u003E\u003Cp\u003Emic_e: I like your idea of providing a script to export the RPCs in some language-independent form \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Maybe via a C# command line tool that takes a list of paths to the DLLs containing the RPCs and spits out XML/JSON/yaml/... to stdout or a file.\u003C/p\u003E\n"},{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-05-09T14:37:04Z","Content":"\n\u003Cp\u003EThanks for the link. I know python, even though it may need some refreshing. But I\u0027m used to reading foreign code, so it should do.\u003C/p\u003E\u003Cp\u003EExporting the RPCs into XML/JSON/... is a nice idea, although in the end it makes not that much of a difference if the generator reads from a file or from the result of a RPC. This reminds me to make the generator modular so the input can easily be changed. The main advantage would be that someone could build wrapper code for a combination of KRPC-services simply from the definition files without the services actually installed and running. There got to be a use case for that \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-11T18:09:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Garek\u0022 data-cite=\u0022Garek\u0022\u003E\u003Cdiv\u003EEDIT: another question of more theoretical nature: Does KRPC handle multiple concurrent clients well? The use case being that compiled client applications propably won\u0027t be as modular as python-based ones, so I will probably start a separate client per thing I want to do. What happens if two run at the same time because a) I have one for data outputs and one for actually doing stuff or even \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E I forgot to kill one before starting the next?\u003Cp\u003EAgain, this is a more theoretical question, since it will be some time before I start writing actual client applications, and the mentioned use cases propably won\u0027t even occur. But I\u0027m curious.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe server supports multiple concurrent clients, and RPCs are serviced in round-robin order. Separating your functionality into separate connections should work just fine, and it will work just fine for scenarios a) and \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E.\u003C/p\u003E\n"},{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-05-11T20:02:55Z","Content":"\n\u003Cp\u003EThis is nice to know, thanks. I set up kRPC from source and started working on my project. I\u0027m calling it krpc2cpp, because it provides an interface from C\u002B\u002B to kRPC...okay, that sounds a little wierd, but I\u0027ll keep it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI won\u0027t have much time to work on this during the week, but next weekend I\u0027ll propably push on github whatever I have until than to collect some feedback. It of course won\u0027t be anywhere near a working version, but I hope to have finished at least the basic RPC framework, including a way to dump GetServices() result for debugging purposes.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-11T22:46:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Garek\u0022 data-cite=\u0022Garek\u0022\u003E\u003Cdiv\u003EThis is nice to know, thanks. I set up kRPC from source and started working on my project. I\u0027m calling it krpc2cpp, because it provides an interface from C\u002B\u002B to kRPC...okay, that sounds a little wierd, but I\u0027ll keep it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cp\u003EI won\u0027t have much time to work on this during the week, but next weekend I\u0027ll propably push on github whatever I have until than to collect some feedback. It of course won\u0027t be anywhere near a working version, but I hope to have finished at least the basic RPC framework, including a way to dump GetServices() result for debugging purposes.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECool - sounds good!\u003C/p\u003E\u003Cp\u003EI\u0027ve started documenting the RPC protocol here:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/djungelorm/krpc/wiki/RPC-Protocol\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/djungelorm/krpc/wiki/RPC-Protocol\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt should be a complete description of the protocol, but is lacking a few more examples to make the description clearer.\u003C/p\u003E\n"},{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-05-12T13:57:06Z","Content":"\n\u003Cp\u003EThe documentation is already very useful. One major question I have left: when encoding primitive types like int32, do you encode them with field tag, or without? I\u0027m currently implementing the C\u002B\u002B side using the internal WireFormatLite from protobuf, which offers writing functions for both. Although I may switch to using more basic functions from Coded*Stream, because that is intended for external use and therefore far better documented - it just lacks functions for everything besides ints, so I would have to build the encoding for other primitive types myself.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-12T14:10:27Z","Content":"\n\u003Cp\u003EWithout the field tag.\u003C/p\u003E\u003Cp\u003EI had the same problem encoding things other than varints with python - they only provide a public API for encoding VarInts \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-13T01:02:15Z","Content":"\n\u003Cp\u003EVersion 0.1.2 has been released (see OP for download links). Most notably with fixed reference frame code (e.g. pointing the vessel retrograde in the surface reference frame should now work).\u003C/p\u003E\u003Cp\u003EFull changelog:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESpaceCenter service changes:\u003Cbr\u003E - Include reference frame velocity in orbital direction vectors\u003Cbr\u003E - Remove ReferenceFrame.SurfaceVelocity and ReferenceFrame.TargetVelocity\u003Cbr\u003E - Change default reference frames for Vessel.Flight() and AutoPilot functions to ReferenceFrame.Orbital\u003Cbr\u003E - Use Pa instead of kPa for atmospheric pressure\u003Cbr\u003E\u003Cbr\u003EPython client changes:\u003Cbr\u003E - Convert parameter names to snake_case\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-14T11:54:37Z","Content":"\n\u003Cp\u003EI am coming from kOS and this add-on looks cool for several reasons:\u003C/p\u003E\u003Cp\u003E1. Python provides a full fledged basis for writing any code - and extension to other languages is easily possible.\u003C/p\u003E\u003Cp\u003E2. All variables from \u003Ca href=\u0022https://github.com/djungelorm/krpc/wiki/SpaceCenter-Service#orbit-objects\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E are exposed and available.\u003C/p\u003E\u003Cp\u003EI will have a look and try to migrate my kOS mission toolkit for launch, circular orbit, Hohman transfer to Mun and Mun soft landing to kRPC/Python.\u003C/p\u003E\u003Cp\u003ERegards, Andreas\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-15T14:02:29Z","Content":"\n\u003Cp\u003EHi Andreas! Pleased you like the mod \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E It would be great to get some feedback on how your porting efforts go, to help me improve the SpaceCenter API (which is almost certainly far from perfect).\u003C/p\u003E\u003Cp\u003EAlso, is your kOS mission toolkit available to download? I think it would be useful to have a look at the design patterns/functions it uses to help refine the SpaceCenter API too.\u003C/p\u003E\n"},{"CreatedByName":"Vulkan","CreatedById":83177,"CreatedDateTime":"2014-05-15T23:09:30Z","Content":"\n\u003Cp\u003EThis is properly amazing and useful. Thank you so much for making it.\u003C/p\u003E\u003Cp\u003EI had a go at running a kOS career but gave up pretty quickly becuase of the limitations, pid control is about the limit of reasonable complexity and you have to rewrite it every time. The ability to \u0022import scipy\u0022 is going to be awesome.\u003C/p\u003E\u003Cp\u003EMinor notes:\u003C/p\u003E\u003Cp\u003E1 - the names on the wiki are out of date with the current release, still showing \u0022Flight().VerticalSpeed\u0022 when it\u0027s actually \u0022flight().vertical_speed\u0022\u003C/p\u003E\u003Cp\u003E2 - might be worth putting a health warning on true_altitude that it returns altitude above the sea floor if you\u0027re over water, so a parachute deployment loop should be looking for min(altitude, true_altitude). Took me a few ocean crashes to work that one out.\u003C/p\u003E\n"},{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-05-16T10:47:38Z","Content":"\n\u003Cp\u003ETwo things which occured to me while looking at the SpaceCenter API:\u003C/p\u003E\u003Cp\u003Ea) according to the description, you support only action groups 1 to 9. It would be nice to have support for all ten numeric action groups, as well as for the special action groups like gear or abort. (maybe map the latter to indices \u0026gt; 10 with an enum?)\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E at CelestialBody.GravitationalParameter, the link to wikipedia is broken\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-16T13:05:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022djungelorm\u0022 data-cite=\u0022djungelorm\u0022\u003E\u003Cdiv\u003EHi Andreas! Pleased you like the mod \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E It would be great to get some feedback on how your porting efforts go, to help me improve the SpaceCenter API (which is almost certainly far from perfect).\u003Cp\u003EAlso, is your kOS mission toolkit available to download? I think it would be useful to have a look at the design patterns/functions it uses to help refine the SpaceCenter API too.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe kOS toolkit is available here: \u003Ca href=\u0022http://kos.wikia.com/wiki/Mission_toolkit_v2\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/Mission_toolkit_v2\u003C/a\u003E. Caveat: the scripts are full of Newtonian math.\u003C/p\u003E\u003Cp\u003EI will publish an extended version soon and submit an entry in the automated mission challenge. After that the next item on the roadmap is start setting up my Python development environment and start migrating.\u003C/p\u003E\u003Cp\u003EAfter migration I should be able to publish the mission toolkit for Python. The mission toolkit contains scripts for:\u003C/p\u003E\u003Cp\u003E1. Kerbin ascent\u003C/p\u003E\u003Cp\u003E2. orbit adjustments \u003C/p\u003E\u003Cp\u003E3. Hohmann transfer from Kerbin to Mun\u003C/p\u003E\u003Cp\u003E4. land on Mun\u003C/p\u003E\u003Cp\u003E5. take off into low orbit\u003C/p\u003E\u003Cp\u003E6. leave Mun SOI and \u003C/p\u003E\u003Cp\u003E7. land on Kerbin.\u003C/p\u003E\u003Cp\u003ECurrently everything is pretty 2D but with Python I\u0027d like to use vector math and support stuff like inclination changes and targeting landing zones on arbitrary coordinates.\u003C/p\u003E\u003Cp\u003ESounds like lots of fun.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-16T13:12:03Z\u0022 title=\u002205/16/2014 01:12  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 16, 2014\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-16T14:46:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Vulkan\u0022 data-cite=\u0022Vulkan\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EMinor notes:\u003C/p\u003E\u003Cp\u003E1 - the names on the wiki are out of date with the current release, still showing \u0022Flight().VerticalSpeed\u0022 when it\u0027s actually \u0022flight().vertical_speed\u0022\u003C/p\u003E\u003Cp\u003E2 - might be worth putting a health warning on true_altitude that it returns altitude above the sea floor if you\u0027re over water, so a parachute deployment loop should be looking for min(altitude, true_altitude). Took me a few ocean crashes to work that one out.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe wiki has been updated to fix this.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Garek\u0022 data-cite=\u0022Garek\u0022\u003E\u003Cdiv\u003ETwo things which occured to me while looking at the SpaceCenter API:\u003Cp\u003Ea) according to the description, you support only action groups 1 to 9. It would be nice to have support for all ten numeric action groups, as well as for the special action groups like gear or abort. (maybe map the latter to indices \u0026gt; 10 with an enum?)\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E at CelestialBody.GravitationalParameter, the link to wikipedia is broken\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve fixed the link on the wiki.\u003C/p\u003E\u003Cp\u003EYou can already trigger most of the special action groups using Control.sas, Control.gear, Control.lights etc. (I\u0027ll add the missing abort and 0 action groups in the next release)\u003C/p\u003E\u003Cp\u003EE.g. to lower the landing gear and switch on the lights:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Econn.space_center.active_vessel.control.gear = True\u003Cbr\u003Econn.space_center.active_vessel.control.lights = True\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Vulkan","CreatedById":83177,"CreatedDateTime":"2014-05-17T06:46:59Z","Content":"\n\u003Cp\u003EI\u0027ve think I\u0027ve found another bug that looks like it will be the same as the one mentioned a few days ago with transforming orbital to surface reference, but this time it\u0027s maneuver to orbital. The following\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eimport krpc\u003Cbr\u003Econn = krpc.connect(name=\u0027Auto-launch\u0027)\u003Cbr\u003Evessel = conn.space_center.active_vessel\u003Cbr\u003E\u003Cbr\u003Enode = vessel.control.add_node(conn.space_center.ut,prograde=1.,radial=0.,normal=0.)\u003Cbr\u003Evessel.auto_pilot.set_direction(node.vector,reference_frame=conn.space_center.ReferenceFrame.maneuver)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eshould be putting up a 1ms prograde maneuver for current time and pointing the vessel along it, but actually points -ve normal.\u003C/p\u003E\u003Cp\u003EA 1ms radial works fine, but 1ms normal also points in \u002Bve radial.\u003C/p\u003E\u003Cp\u003EEverything else is good so far:D\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-21T18:35:22Z","Content":"\n\u003Cp\u003ETwo questions:\u003C/p\u003E\u003Cp\u003E1. How do I instantiate a vector in Python?\u003C/p\u003E\u003Cp\u003EAs an example I\u0027d like to take\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eimport krpc\u003Cbr\u003Ep = krpc.space_center.active_vessel.flight().prograde\u003Cbr\u003Epn = norm(p)\u003Cbr\u003E[B]v = (1,0,0)     # what is the correct type to use here? Geometry.Vector3?[/B]\u003Cbr\u003Ea = cross(pn,v)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E2. Can I run multiple threads using a kRPC connection?\u003C/p\u003E\u003Cp\u003EI\u0027d like to run a thread monitoring conditions for staging in a separate thread:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Edef run_thread():\u003Cbr\u003E    while liquid_fuel() \u0026gt; 0: \u003Cbr\u003E        time.sleep(1)\u003Cbr\u003E    control.activate_next_stage()\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf not: events might be an elegant alternative as they spare the effort of polling.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-21T19:44:45Z\u0022 title=\u002205/21/2014 07:44  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 21, 2014\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-21T19:41:42Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Edouble Resources.max (string name, uint32 stage = 0)\u003C/pre\u003E\u003Cp\u003E with stage = 0 returns the resource for the \u003Cstrong\u003Evessel\u003C/strong\u003E. When stage \u0026gt; 0 it returns the value for the stage. I have stages 0 to 4. \u003C/p\u003E\u003Cp\u003EHow does the stage argument map to my stages?\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://ksp.baldev.de/krpc/screenshots/stages.png\u0022 alt=\u0022stages.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EIMHO stage should default to -1. Then values [0:] from the KSP UI can be used as argument without applying a shift.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-21T19:43:58Z\u0022 title=\u002205/21/2014 07:43  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 21, 2014\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"}]}