{"TopicId":197491,"ForumId":29,"TopicTitle":"What\u0026#039;s the best way to communicate between addons without referencing an object?","CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2020-10-15T00:20:15Z","PageNum":1,"Articles":[{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2020-10-15T00:20:15Z","Content":"\n\u003Cp\u003E\nso I\u0027m scratching my head on this one, and open to suggestions.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m attempting to write a utility addon (UTIL), that other addons\u00A0(OTHER)\u00A0can optionally use without referencing UTIL, so the OTHER addon won\u0027t require UTIL to function, but still could use if the UTIL addon is installed.\n\u003C/p\u003E\n\u003Cp\u003E\nif UTIL is present, I need a way to exchange data in both directions to/from OTHER, again, without referencing either one.\n\u003C/p\u003E\n\u003Cp\u003E\nmy first attempt was obvious,\u00A0GameObject.Find(\u0022OTHER\u0022)\u00A0but that still required the OTHER addon to reference UTIL, which created a hard-dependency, which I\u0027m trying to avoid.\n\u003C/p\u003E\n\u003Cp\u003E\nsecond attempt at this was to use\u00A0BroadCastMessage\u00A0but the problem is that BCM isn\u0027t target-specific so data is broadcasted to ALL\u00A0listeners, which can cause lag, data collisions, interference, etc, and required the OTHER addon\u00A0to sift through dozens of possible actions, which was a freaking nightmare.\n\u003C/p\u003E\n\u003Cp\u003E\nthird attempt was to use System.Reflection\u00A0wrapped in a simple API class that could be dropped into the OTHER project, but as I quickly found out,\u00A0Exception Thrown: OTHER.API cannot be converted to UTIL.API\u003Cbr\u003E\nas these assemblies do not share the same object type, despite being the same drop-in file, preventing me from obtaining an object reference to OTHER.API from within UTIL.API\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-10-15T00:23:38Z\u0022 title=\u002210/15/2020 12:23  AM\u0022 data-short=\u00223 yr\u0022\u003EOctober 15, 2020\u003C/time\u003E by Xyphos\u003C/strong\u003E\n\u003Cbr\u003Efix formatting\n\u003C/span\u003E\n"},{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2020-10-15T00:46:09Z","Content":"\n\u003Cp\u003E\nUpdate: I\u0027m going to try NamedPipes next, but I\u0027m still open to suggestions.\n\u003C/p\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2020-10-15T05:59:17Z","Content":"\n\u003Cp\u003E\nReflection should be the way to go. You can\u0027t turn OTHER into UTIL, but you can use OTHER as a \u0022proxy\u0022 to UTIL: OTHER and UTIL have\u00A0the same methods, and OTHER just calls UTIL methods via reflection.\n\u003C/p\u003E\n"},{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2020-10-15T06:22:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223867816\u0022 data-ipsquote-contentid=\u0022197491\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221602741557\u0022 data-ipsquote-userid=\u0022144573\u0022 data-ipsquote-username=\u0022peteletroll\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n20 minutes ago, peteletroll said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nReflection should be the way to go. You can\u0027t turn OTHER into UTIL, but you can use OTHER as a \u0022proxy\u0022 to UTIL: OTHER and UTIL have\u00A0the same methods, and OTHER just calls UTIL methods via reflection.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTried that, the OTHER.API would hook into UTIL.API but passing the object reference OTHER.API caused the aformentioned exception\n\u003C/p\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2020-10-15T06:28:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223867820\u0022 data-ipsquote-contentid=\u0022197491\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221602742923\u0022 data-ipsquote-userid=\u0022139010\u0022 data-ipsquote-username=\u0022Xyphos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, Xyphos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\npassing the object reference OTHER.API caused the aformentioned exception\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCan you share\u00A0a code example? I\u0027m not sure what you mean.\n\u003C/p\u003E\n"},{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2020-10-15T06:31:50Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223867822\u0022 data-ipsquote-contentid=\u0022197491\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221602743304\u0022 data-ipsquote-userid=\u0022144573\u0022 data-ipsquote-username=\u0022peteletroll\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, peteletroll said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCan you share\u00A0a code example? I\u0027m not sure what you mean.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI deleted the code, currently implementing NamedPipes.\n\u003C/p\u003E\n\u003Cp\u003E\nAPI is a singleton class, upon instancing itself, it looked for UTIL and if found, Invoked AddAPI(API api = _instance)\u003Cbr\u003E\nupon invoking, the exception is thrown because API produced different object types that wasn\u0027t castable between addons\n\u003C/p\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2020-10-15T06:47:29Z","Content":"\n\u003Cp\u003E\nYou definitely can\u0027t cast API objects, but you can store them as Objects and access them via reflection.\n\u003C/p\u003E\n"},{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2020-10-15T08:18:28Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223867828\u0022 data-ipsquote-contentid=\u0022197491\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221602744449\u0022 data-ipsquote-userid=\u0022144573\u0022 data-ipsquote-username=\u0022peteletroll\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, peteletroll said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou definitely can\u0027t cast API objects, but you can store them as Objects and access them via reflection.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nhmm, why didn\u0027t I think of that before? *derp*\n\u003C/p\u003E\n\u003Cp\u003E\nthanks a ton, I\u0027ll give that a try.\n\u003C/p\u003E\n"},{"CreatedByName":"Teilnehmer","CreatedById":143330,"CreatedDateTime":"2020-10-26T04:25:59Z","Content":"\n\u003Cp\u003E\nHere, I\u2019m doing this in my mod \u003Cem\u003ECriticalTemperatureGauge\u003C/em\u003E using System.Reflection:\u003Cbr\u003E\u003Ca href=\u0022https://github.com/formicant/CriticalTemperatureGauge/tree/master/CriticalTemperatureGauge/Wrappers\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/formicant/CriticalTemperatureGauge/tree/master/CriticalTemperatureGauge/Wrappers\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe wrappers provide access to the methods of Linuxgurugamer\u2019s \u003Cem\u003EClickThroughBlocker\u003C/em\u003E and \u003Cem\u003EToolbarController\u003C/em\u003E mods, also providing a fallback behavior when the mods are not installed.\n\u003C/p\u003E\n\u003Cp\u003E\nUnfortunately, I had to write a lot of code to wrap the custom delegate TC_ClickHandler.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, if both UTIL and OTHER are your own mods, you have more freedom to make the access via Reflection less complicated. Delegates of types accessible from either mod (such as Action\u0026lt;\u2026\u0026gt; and Func\u0026lt;\u2026\u0026gt;) are much easier to deal with.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-10-27T02:01:14Z\u0022 title=\u002210/27/2020 02:01  AM\u0022 data-short=\u00223 yr\u0022\u003EOctober 27, 2020\u003C/time\u003E by Teilnehmer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Teilnehmer","CreatedById":143330,"CreatedDateTime":"2020-10-27T12:25:31Z","Content":"\n\u003Cp\u003E\nHere\u2019s a silly minimal example of two-way communication between two mods via Reflection:\u003Cbr\u003E\u003Ca href=\u0022https://github.com/formicant/ModCommunicationSample\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/formicant/ModCommunicationSample\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe Util mod detects the current vessel\u2019s throttle changes and invokes \u003Cem\u003EthrottleChanged\u003C/em\u003E events.\n\u003C/p\u003E\n\u003Cp\u003E\nThe Other mod changes the current vessel\u2019s cargo bay door deploy limit according to the throttle evel received from the Util mod. It calls the methods of the Util mod to subscribe to the events or unsubscribe.\n\u003C/p\u003E\n\u003Cp\u003E\nThe \u003Cem\u003EUtilApiWrapper\u003C/em\u003E and \u003Cem\u003EUtilApiAlternativeWrapper\u003C/em\u003E do the same thing but are written a bit differently.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-11-04T09:14:24Z\u0022 title=\u002211/04/2020 09:14  AM\u0022 data-short=\u00223 yr\u0022\u003ENovember 4, 2020\u003C/time\u003E by Teilnehmer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2020-12-12T22:13:13Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/143330-teilnehmer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022143330\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/143330-teilnehmer/\u0022 rel=\u0022\u0022\u003E@Teilnehmer\u003C/a\u003E\u00A0You\u0027re AWESOME!\n\u003C/p\u003E\n\u003Cp\u003E\nthanks so much for your example!\u003Cbr\u003E\nI forked it just to keep it around if needed in the future.\u003Cbr\u003E\nThanks again!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-12-12T22:14:10Z\u0022 title=\u002212/12/2020 10:14  PM\u0022 data-short=\u00223 yr\u0022\u003EDecember 12, 2020\u003C/time\u003E by Xyphos\u003C/strong\u003E\n\u003C/span\u003E\n"}]}