{"TopicId":8163,"ForumId":29,"TopicTitle":"Let\u0026#039;s talk Electricity","CreatedByName":"dodrian","CreatedById":12564,"CreatedDateTime":"2012-03-15T12:36:18Z","PageNum":1,"Articles":[{"CreatedByName":"dodrian","CreatedById":12564,"CreatedDateTime":"2012-03-15T12:36:18Z","Content":"\n\u003Cp\u003ESo, \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=7847.0\u0022 rel=\u0022external nofollow\u0022\u003ECephei\u003C/a\u003E got the ball rolling by creating a module for having an ion engine powered by solar panels and a battery. It\\\u0027s a great start, but as far as I can tell, it essentially copies the fuel system, requiring energy using parts to be physically attached to each other.\u003C/p\u003E\u003Cp\u003EI\\\u0027d like to propose a more generic system of electricity generation/storage/usage, the idea being that many different parts (sensors, ion engines, lights, etc) might wish to use electricity, and that wires on a spacecraft/station would be internal and not noticeable by the user (kind of like how RCS currently works).\u003C/p\u003E\u003Cp\u003EMy basic idea is something like this: (please excuse me and correct me if I\\\u0027m using the wrong units, it\\\u0027s been a while since I did a course on electrical stuff!)\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://lh6.googleusercontent.com/-CBMhjBKvqnE/T2Hata2LOMI/AAAAAAAAALk/sYib6bCZJlg/s800/energyprop.png\u0022 alt=\u0022energyprop.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe idea of this would be that there would be one main system for electrical usage, which modders could fairly use with their own parts/plugins. So, the plugin I\\\u0027m proposing would provide the EnergyManager (perhaps it should be renamed ElectricityManager to avoid confusion) part type, and three simple interfaces for interacting with it (generating, storing and using electricity) for other plugin makers to use.\u003C/p\u003E\u003Cp\u003EFrom the user\\\u0027s point of view, they would download this plugin (which would be licensed so that other modders could also include it in their downloads if they wanted), and then be able to mix and match different electrical using parts (for example, someone might make a set of ion engines, someone else might make various types of batteries, and someone different might make a radioisotope generator, and/or a set of solar panels), but have them all work nicely together (i.e., you don\\\u0027t need to use different sets of batteries to make sure your station can use parts from different peoples\\\u0027 packs).\u003C/p\u003E\u003Cp\u003EI\\\u0027m mostly interested at the moment in what other modders think. I believe NovaSilisko intends to make some of his parts run on electricity, and personally I think building rovers would be more fun if we had to make sure they had a suitable power source \u002B battery that could survive the Munar nights and be able to power all the sensors available, so I\\\u0027m sure I\\\u0027m not the only one who would like a general way of using electricity. It would also provide a way for new modders wanting a taste of KSP modding to be able to create a part, say a solar panel, without having to make an entire pack for that part to be useful.\u003C/p\u003E\u003Cp\u003EWith that in mind, some specific questions:\u003C/p\u003E\u003Cp\u003E[list type=decimal]\u003C/p\u003E\u003Cp\u003E[li]Are modders interested in using this (i.e., would you implement an electrical standard in your parts if there were one available)?[/li]\u003C/p\u003E\u003Cp\u003E[li]Is anyone already working on something similar already?[/li]\u003C/p\u003E\u003Cp\u003E[li]Would anyone like to work on this? (Personally I\\\u0027d be very keen on coding the first version, with community input and help of course, but I don\\\u0027t want to start unless i know others would appreciate it!) [/li]\u003C/p\u003E\u003Cp\u003E[li]Do you think my interface ideas are appropriate? If not, how would you improve them?[/li]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"dodrian","CreatedById":12564,"CreatedDateTime":"2012-03-15T12:47:33Z","Content":"\n\u003Cp\u003EHow I think it would work:\u003C/p\u003E\u003Cp\u003EA part implementing IGeneratesEnergy would, when created, search the ship for the EnergyManager, then register itself. A part implementing IStoresEnergy would do the same (there would probably need to be unRegister methods as well, for when parts are destroyed/disconnected/broken).\u003C/p\u003E\u003Cp\u003EEverytime the EnergyManager updates, it goes through its list of IGeneratesEnergy parts, and requests the energy from the part (perhaps it should pass a timestep, and they return how much energy they generated in that time period in wattHours, or an appropriate unit). It then goes through its list of IStoresEnergy parts, and attempts to put all the energy generated this timestep in the storage devices.\u003C/p\u003E\u003Cp\u003EWhenever an IUsesEnergy part updates (technically we don\\\u0027t actually need this interface yet, as there are no methods that are needed by the EnergyManager), it requests an amount of energy from the EnergyManager (which then searches through the IStoresEnergy list to find the energy), which returns the amount the EnergyManager was able to come up with (usually this should be the full amount requested).\u003C/p\u003E\n"},{"CreatedByName":"Quinton","CreatedById":18391,"CreatedDateTime":"2012-03-15T15:07:33Z","Content":"\n\u003Cp\u003EIt may be interesting to model one or more busses, where every generator or consumer of energy specifies which bus it\\\u0027s connected to by name -- and some components may be able to be toggled between busses or plugged/unplugged via a \u0027breakerpanel\u0027 UI of some sort. By default components use the \u0027A\u0027 bus (to keep it simple), but that could be overridden in the part.cfg or dynamically.\u003C/p\u003E\u003Cp\u003EOver time available generation may depend on things like:\u003C/p\u003E\u003Cp\u003E- is the Sun obscured or not (Solar Panels)\u003C/p\u003E\u003Cp\u003E- how old is the component (Batteries, RTGs)\u003C/p\u003E\u003Cp\u003EAttempting to inject more than some specified limit of energy through a bus could result in a blown breaker or a Kerbaltacular electrical fire or the like...\u003C/p\u003E\u003Cp\u003EAttempting to draw more than the available energy through a bus probably results in all components on a bus suffering.\u003C/p\u003E\u003Cp\u003EEnergy sources or containers may be able to produce only so much instantaneous energy -- solar panels maybe insufficient to power your IonEngine with a Battery to buffer things, and a single Battery may be able to provide only so much instantaneous energy, etc...\u003C/p\u003E\u003Cp\u003EEDIT: I\\\u0027m working with a friend getting some fancy unfolding solar panels put together, but once we\\\u0027ve got that working (modeling side is looking good, need to fiddle with addon code to unfold the panels), I\\\u0027m going to be interested in actually rigging the panels up to the electrical system. Hoping to have a bunch of time to hack on stuff this weekend.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2012-03-15T22:27:38Z","Content":"\n\u003Cp\u003EConsider the difference between energy and power.\u003C/p\u003E\u003Cp\u003EA solar panel will generate a different amount of power based on its distance and angle to the sun, and an ion engine will consume a certain amount of power based on its desired thrust. A battery stores some amount of energy, but it also has a maximum power output (and input). I think it\\\u0027s acceptable for an API to handle these basic conversions so that plugins don\\\u0027t have a misunderstanding when making power/energy transactions. Parts should be able to draw power from each other, but energy should be internal.\u003C/p\u003E\n"},{"CreatedByName":"NovaSilisko","CreatedById":3897,"CreatedDateTime":"2012-03-18T07:30:01Z","Content":"\n\u003Cp\u003EI think you might be overcomplicating it. In my case, I just have a percentage value on the main object, then a check in each attached object to make sure that the root part in the vessel is the right module (in this case, ProbodobodyneCore). The core itself has a drain value which represents batteries (right now, it will last about two days left alone, so don\\\u0027t power up all your stuff right away without a power source!), and attached parts modify it - solar panels decrease the value (and can negate it, where it will slowly fill up to 100%), and instruments will increase it, draining the power faster.\u003C/p\u003E\u003Cp\u003EI still need to get a vector from the sun to solar panels to change the production rate, but that will work fine with the system I have set up. It\\\u0027s simple enough that it can just be injected into any part without much fuss.\u003C/p\u003E\n"},{"CreatedByName":"dodrian","CreatedById":12564,"CreatedDateTime":"2012-03-18T08:48:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NovaSilisko\u0022 data-cite=\u0022NovaSilisko\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EI think you might be overcomplicating it. In my case, I just have a percentage value on the main object, then a check in each attached object to make sure that the root part in the vessel is the right module (in this case, ProbodobodyneCore). The core itself has a drain value which represents batteries (right now, it will last about two days left alone, so don\\\u0027t power up all your stuff right away without a power source!), and attached parts modify it - solar panels decrease the value (and can negate it, where it will slowly fill up to 100%), and instruments will increase it, draining the power faster.\u003C/p\u003E\u003Cp\u003EI still need to get a vector from the sun to solar panels to change the production rate, but that will work fine with the system I have set up. It\\\u0027s simple enough that it can just be injected into any part without much fuss.\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan you add extra batteries / other energy storage systems onto a probe?\u003C/p\u003E\n"},{"CreatedByName":"NovaSilisko","CreatedById":3897,"CreatedDateTime":"2012-03-18T09:27:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022dodrian\u0022 data-cite=\u0022dodrian\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ECan you add extra batteries / other energy storage systems onto a probe?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\\\u0027m going to work out a way to do that tomorrow.\u003C/p\u003E\u003Cp\u003EEdit: Eventually I think I\\\u0027ll make my system more robust by removing all code specific to the parts, so the core does most of the work instead of the parts. It\\\u0027s kinda messy right now.\u003C/p\u003E\n"},{"CreatedByName":"sarkun","CreatedById":10559,"CreatedDateTime":"2012-03-25T11:10:17Z","Content":"\n\u003Cp\u003EWell, after people been bugging me to make my animatable solar panels produce electricity so I gave it a thought.\u003C/p\u003E\u003Cp\u003ECephei\\\u0027s solution is a start, but it is very unfriendly to other plugin\\\u0027s so probably not the way to go.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NovaSilisko\u0022 data-cite=\u0022NovaSilisko\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI think you might be overcomplicating it. In my case, I just have a percentage value on the main object, then a check in each attached object to make sure that the root part in the vessel is the right module (in this case, ProbodobodyneCore). The core itself has a drain value which represents batteries , and attached parts modify it - solar panels decrease the value (and can negate it, where it will slowly fill up to 100%), and instruments will increase it, draining the power faster.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis also sounds (I don\\\u0027t see your code, so I\\\u0027m not sure, just a guess) like a solution that will work well only within it\\\u0027s own set of parts - Relying on a core energy manager makes the system completely dependent on that part.\u003C/p\u003E\u003Cp\u003ESo I thought I\\\u0027d propose something more like the RCS system:\u003C/p\u003E\u003Cp\u003EPart type: Battery (aka energy fuel tank) - takes care of displaying its fullness level. \u003C/p\u003E\u003Cp\u003EImplements interface \u003Cem\u003EIBattery\u003C/em\u003E with just one method: \u003Cstrong\u003ErequestPower\u003C/strong\u003E(float \u003Cstrong\u003Eamount\u003C/strong\u003E) - can be used to drain / refill battery (if amount is negative).\u003C/p\u003E\u003Cp\u003EParts that produce / use energy would implement \u003Cstrong\u003EfindPower\u003C/strong\u003E(float \u003Cstrong\u003Eamount\u003C/strong\u003E) function (in their onActiveFixedUpdate or OnUpdate, depending on their type i guess).\u003C/p\u003E\u003Cp\u003ELooking for power would happen like lookup for rcs, but would have to be coded in the \u003Cstrong\u003EfindPower\u003C/strong\u003E function start at the root of the vessel and search it\\\u0027s children for \u003Cem\u003EIBattery\u003C/em\u003E compliant parts. When a suitable part is found - try to request power from in using the \u003Cstrong\u003ErequestPower\u003C/strong\u003E method. Taking symmetrical batteries into account would be quite easy, as would be defining behavior to drain last stage batteries first, and refill those in the earliest.\u003C/p\u003E\u003Cp\u003EPros of such solution - any part could be easily made into battery, and it could be derived from any part class - same for energy users - any class could do it. Modifying power consumption / batter power levels would be trivial cfg edits.\u003C/p\u003E\u003Cp\u003EIn large crafts this constant lookup could be slow, so caching the results of the first search and then checking if the sources are still there could be a solution.\u003C/p\u003E\u003Cp\u003EAnyway - I\\\u0027d be happy to give this code a shot if anyone wants it - or to help implement another solution. But I\\\u0027d like for it to be a community standard, that is easily extendable to all people\\\u0027s parts and plugins.\u003C/p\u003E\n"}]}