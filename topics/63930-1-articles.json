{"TopicId":63930,"ForumId":36,"TopicTitle":"[PLUGIN, WIP, 0.23] kRISC - kOS with a RISC heart","CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-02-22T00:02:26Z","PageNum":1,"Articles":[{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-02-22T00:02:26Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003EkRISC - kOS with a RISC heart\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThis is a fork of the kOS Autopilot v0.9.3 in which all the code execution is done in a RISC-like CPU.\u003C/p\u003E\u003Cp\u003EI started this project as a proof of concept to see if I could write a formal grammar for the KerboScript language and ended up rewriting most of kOS itself. The parts that remains mostly unchanged are the ones in the \u0022outer shell\u0022 or that deal directly with KSP, for example the Bindings, SpecialValues, SteeringHelper, TermWindow, etc.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003E\u003Cstrong\u003EHighlights\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe script code is parsed with a \u003Ca href=\u0022https://en.wikipedia.org/wiki/LL_parser\u0022 rel=\u0022external nofollow\u0022\u003ELL(1)\u003C/a\u003E parser using a formal grammar defined for the language\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe parsed code is then compiled into a stack-based program similar to a RPN calculator or the NET IL itself\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EFAST (see the Benchmarks section)\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003E\u003Cstrong\u003EParsing and compilation\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe \u003Ca href=\u0022https://github.com/marianoapp/kRISC/blob/master/KS/kRISC.tpg\u0022 rel=\u0022external nofollow\u0022\u003Egrammar\u003C/a\u003E was written with \u003Ca href=\u0022https://github.com/SickheadGames/TinyPG\u0022 rel=\u0022external nofollow\u0022\u003ETinyPG\u003C/a\u003E which automatically generates the needed classes for the parsing with no additional dependencies. There\u0027s no need to modify these classes by hand except for removing the \u0022Compiled\u0022 flag of the RegExs that is not supported by mono.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe resulting \u003Ca href=\u0022https://en.wikipedia.org/wiki/Abstract_syntax_tree\u0022 rel=\u0022external nofollow\u0022\u003EAST\u003C/a\u003E from the parser is then compiled into a series of simple opcodes that the CPU can execute efficiently.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003E\u003Cstrong\u003EDifferences for the user respect to Nivekk\u0027s kOS\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe grammar supports numbers in scientific notation\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe grammar supports negative numbers / expressions (no more 0-... ).\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe terminal window can be scrolled via PageUp/PageDown\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThis version does NOT include an in-game editor\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESyntax errors highlighted with correct line number and position\u003Cbr\u003E\u003Cimg src=\u0022http://i.imgur.com/8BI00bs.png\u0022 alt=\u00228BI00bs.png\u0022\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003E\u003Cstrong\u003EInternal architecture overview\u003C/strong\u003E\u003C/span\u003E \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EA Program is simply a list of opcodes\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EA Trigger is a function that is called on every update (commands like WAIT UNTIL, ON, WHEN are implemented this way).\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EA ProgramContext is a class that contains a Program and related values, like the instruction pointer and its triggers.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EA CodePart contains tree code sections: InitializationCode, FunctionsCode and MainCode\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe Compiler returns a CodePart object\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe ProgramBuilder builds a Program from one or more CodeParts assembling the different sections in the correct order.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe CPU continues the execution of the current program in every update until it finds a wait or has executed the maximum configured number of opcodes per update\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe BoundVariables were modified so that they query the value to KSP only once per update.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThere is a class called SharedObjects which contains a reference to every major piece of the mod, so instead of passing a reference to a CPU, a Vessel, etc. you pass an instance of this class. This has the advantage that when a reference changes (like the Vessel on docking) you don\u0027t need to update every reference that exists to it.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMost of the classes have been designed to tolerate the lack of other pieces of the mod, and that is why the CPU can work without a binding manager or a terminal window.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELocks are implemented as a call to method pointer, so when you \u0022lock\u0022 a variable you are only updating its method pointer. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe ProgramFile class replaces the File class (didn\u0027t like the name collision with System.IO) and adds the possibility to save the files of the hard disk as a zip file encoded with Base64 for file sizes that are as low as 25% of the uncompressed file. Since mono doesn\u0027t provide an implementation of System.IO.Compression an external library (\u003Ca href=\u0022https://github.com/icsharpcode/SharpZipLib\u0022 rel=\u0022external nofollow\u0022\u003ESharpZipLib\u003C/a\u003E) was necessary. This library is not needed if file compression is not enabled (by default is not).\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003E\u003Cstrong\u003EConfiguration\u003C/strong\u003E\u003C/span\u003E \u003C/p\u003E\u003Cp\u003EA new \u0022Config\u0022 class was added that handles the mod configuration (through PluginConfiguration) and since its a SpecialValue is possible to make changes in the configuration directly from the terminal window.\u003C/p\u003E\u003Cp\u003EExecuting \u0022list config\u0022 shows a list of all the (three for now) configuration options.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003E\u003Cstrong\u003EBenchmarks\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ETo measure if this version was really faster than the others I had to add some execution statistics to all versions (code below)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe statistics show the total Update time (measured in CPU::Update) and the total Execution time (measured in CommandRunFile::Update)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe time was measured using the System.Diagnostics.Stopwatch class and restricting the game to use only one core (this is VERY important, otherwise the times would be distorted)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe number between brackets for kRISC is the configured maximum instructions per update.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe methodology for the test was as follow:\u003Cbr\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cdiv\u003ECopy the corresponding version of the plugin dll to the GameData\\Plugins folder\u003C/div\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cdiv\u003EStart KSP and place the test rocket in the launchpad\u003C/div\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cdiv\u003ESwitch to archive, run the launch program and wait until it ends (about 2:11 in-game time)\u003C/div\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cdiv\u003ERevert to launch and repeat\u003C/div\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cdiv\u003EClose KSP and repeat from point 1 for another version\u003C/div\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[table=width: 500]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]\u003Cstrong\u003EkOS version\u003C/strong\u003E[/td]\u003C/p\u003E\u003Cp\u003E [td]\u003Cstrong\u003ERun 1\u003C/strong\u003E[/td]\u003C/p\u003E\u003Cp\u003E [td]\u003Cstrong\u003ERun 2\u003C/strong\u003E[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]Nivekk\u0027s kOS v0.9.3*[/td]\u003C/p\u003E\u003Cp\u003E [td]18.50s[/td]\u003C/p\u003E\u003Cp\u003E [td]17.70s[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]Erendrake\u0027s kOS v0.11.0[/td]\u003C/p\u003E\u003Cp\u003E [td]19.70s[/td]\u003C/p\u003E\u003Cp\u003E [td]18.80s[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]kRISC (40) [/td]\u003C/p\u003E\u003Cp\u003E [td]0.70s[/td]\u003C/p\u003E\u003Cp\u003E [td]0.50s[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]kRISC (100)[/td]\u003C/p\u003E\u003Cp\u003E [td]1.03s[/td]\u003C/p\u003E\u003Cp\u003E [td]0.98s[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]kRISC (200)[/td]\u003C/p\u003E\u003Cp\u003E [td]0.99s[/td]\u003C/p\u003E\u003Cp\u003E [td]1.13s[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[/table]\u003C/p\u003E\u003Cp\u003E*Nivekk\u0027s kOS include the 0.23 fix and the until loop lag fix\u003C/p\u003E\u003Cp\u003EThese times will be different for everyone but the relation should be constant.\u003C/p\u003E\u003Cp\u003EMy computer is somewhat old so that explains why kOS lags so much, but even having a fast computer everyone can benefit from having a few extra CPU cycles\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EVersions used in the tests (include the source with the statistics modification and the matching compiled dll)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENivekk\u0027s kOS 0.9.3: \u003Ca href=\u0022https://www.dropbox.com/s/gs5hg247qaw5wi2/kOS.rar\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EErendrake\u0027s kOS v0.11.0: \u003Ca href=\u0022https://www.dropbox.com/s/1zqa2ic7uh86kby/EkOS.rar\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EkRISC: \u003Ca href=\u0022https://www.dropbox.com/s/616nmqtcm877t83/kRISC.rar\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERepository\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/marianoapp/kRISC\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/marianoapp/kRISC\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003E\u003Cstrong\u003ETo comply with the rules\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EName and version: kRISC v0.1 based off Nivekk\u0027s kOS 0.9.3\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAuthors:\u003Cbr\u003E\u003Cp\u003E\u003Cbr\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cdiv\u003EkRISC: Mariano (me)\u003C/div\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cdiv\u003EkOS: Nivekk and everyone who collaborated in the project\u003C/div\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]License: Inherits kOS\u0027 GNU GPL\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-22T00:48:48Z","Content":"\n\u003Cp\u003EO dear, another interesting alternative \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E Can you explain the main benefits for end users for this way of handling things? And are you planning to maintain this, or is it merely an exercise?\u003C/p\u003E\u003Cp\u003EGood job, by the way \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-22T01:15:51Z\u0022 title=\u002202/22/2014 01:15  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 22, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-02-22T07:07:51Z","Content":"\n\u003Cp\u003EInteresting, kOS was ever about performance? Just wondering, since apparently no one ever converted kOS scripts into actual net byte code and let .NET jit compile it to simple native code. No simulated cpu could beat that in terms of performance.\u003C/p\u003E\u003Cp\u003EBut that\u0027s a huge step into that direction and thus definitively an improvement.\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-02-22T18:23:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003ECan you explain the main benefits for end users for this way of handling things?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPerformance. This is a test I just made of a craft that decouples nine different hovering crafts, each one with its own 3 PI controllers. As you can see the FPS barely moved from no script running to nine hovering crafts when using kRISC, but for kOS the performance quickly reduces for every additional craft to the point of being unplayable (note that after six crafts the game already grind to a halt).\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/eUFMF\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003EInteresting, kOS was ever about performance? Just wondering, since apparently no one ever converted kOS scripts into actual net byte code and let .NET jit compile it to simple native code. No simulated cpu could beat that in terms of performance.\u003Cp\u003EBut that\u0027s a huge step into that direction and thus definitively an improvement.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EConvert to .NET byte code was my initial idea but after some thought I realized that the overhead of type checking and conversion (kerboscript being loosely typed) would probably compensate any gains in performance.\u003C/p\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2014-02-23T03:23:21Z","Content":"\n\u003Cp\u003ELooks promising. Now it might be possible to have artificially slow units low in the tech tree.\u003C/p\u003E\n"},{"CreatedByName":"skykooler","CreatedById":60459,"CreatedDateTime":"2014-02-23T03:41:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rhoark\u0022 data-cite=\u0022rhoark\u0022\u003E\u003Cdiv\u003ELooks promising. Now it might be possible to have artificially slow units low in the tech tree.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis would be awesome! Start with bulky, heavy, slow Apollo-specced computers near the beginning, and progress through to near-modern-day speeds when you\u0027ve reached the end of the tech tree!\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-23T21:08:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003EPerformance. This is a test I just made of a craft that decouples nine different hovering crafts, each one with its own 3 PI controllers. As you can see the FPS barely moved from no script running to nine hovering crafts when using kRISC, but for kOS the performance quickly reduces for every additional craft to the point of being unplayable (note that after six crafts the game already grind to a halt).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou had my curiosity. But now you have my attention.\u003C/p\u003E\u003Cp\u003EEven though I think performance was artificially limited in kOS, there are also some definite unintentional problems. Can you provide any insights into how this version of kOS could or could not combine with the other initiatives currently under development? Would it, for instance, be possible to use the bones of this version with the extra syntax/commands of the other versions without all too much work? Or would that mean a complete rewrite?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-23T22:23:32Z","Content":"\n\u003Cp\u003EI like this but the forking of kOS has me worried. At the moment I have to choose between whether I want the better underlying infrastructure that this mod would give, or if I want the extra features that erendrake\u0027s version has added after the point of code forking.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-23T22:23:42Z","Content":"\n\u003Cp\u003EThis is really cool work! Enabling multi part missions is something scripting engines are great for and before now it has only been for those with newer machines. Thank you for sharing!\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-23T23:03:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI like this but the forking of kOS has me worried. At the moment I have to choose between whether I want the better underlying infrastructure that this mod would give, or if I want the extra features that erendrake\u0027s version has added after the point of code forking.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf marianoapp wants to, I\u0027m sure we could merge our effort and make one really great scripting project. It\u0027s a lot of work to build something like this on your own, having a team to back you up can really help.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-23T23:20:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EIf marianoapp wants to, I\u0027m sure we could merge our effort and make one really great scripting project. It\u0027s a lot of work to build something like this on your own, having a team to back you up can really help.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot to mention maintenance is more likely in the long run. I think fragmentation and branches dying because of lack of interest are the biggest threats to great ideas at the moment.\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-02-24T03:22:50Z","Content":"\n\u003Cp\u003EI\u0027m all for collaboration, in fact right now I\u0027m rearranging the project to make merging with erendrake\u0027s kOS easier. I\u0027m going to keep adding the features that were included in kOS after my fork trying to keep both as compatible as possible. Once both projects are in sync feature-wise we can merge them into a single great one. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003ETalking about keeping projects compatible and I already deviate when I added the capability to run programs on other units of the same vessel. This wasn\u0027t into my plans but I really wanted to make a dropship that released drones.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/58WwE4oGNUo?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-24T03:38:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003EI\u0027m all for collaboration, in fact right now I\u0027m rearranging the project to make merging with erendrake\u0027s kOS easier.\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2014-02-24T22:46:18Z","Content":"\n\u003Cp\u003EIs it decoupled enough to target another language at the simulated CPU?\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-24T22:55:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003ETalking about keeping projects compatible and I already deviate when I added the capability to run programs on other units of the same vessel. This wasn\u0027t into my plans but I really wanted to make a dropship that released drones.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELooks like air-to-air docking with multiple units might get a little easier. I did that with two (and maybe three) units, but KSP needed some convincing to do that. A small fleet should make it even more interesting.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-24T23:02:26Z\u0022 title=\u002202/24/2014 11:02  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 24, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-25T10:11:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003EThis wasn\u0027t into my plans but I really wanted to make a dropship that released drones.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s an awesome demonstration of the capabilities. I like it.\u003C/p\u003E\u003Cp\u003EIt makes me want to design a Voltron that assembles itself....\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-02-25T18:21:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rhoark\u0022 data-cite=\u0022rhoark\u0022\u003E\u003Cdiv\u003EIs it decoupled enough to target another language at the simulated CPU?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes it is, you just have to create a new class that inherits from kOS.Compilation.Script and override the Compile method.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-27T20:37:25Z","Content":"\n\u003Cp\u003E@marianoapp Just FYI, when you announced you really cool work on this we were about to release a new version of KOS that adds a few new features. The commits for this release are on the master kos branch as of a few hours ago. I wont be adding any more commits to the KOS master branch until we are done with the merge I just wanted to give you a heads up.\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-02-27T21:23:43Z","Content":"\n\u003Cp\u003EGreat! \u003C/p\u003E\u003Cp\u003EI just finished merging all the changes introduced in v0.11.0, so now only remains to merge v0.11.1\u003C/p\u003E\u003Cp\u003EIt\u0027s going to be a busy night... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-27T23:17:01Z\u0022 title=\u002202/27/2014 11:17  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 27, 2014\u003C/time\u003E by marianoapp\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-27T22:04:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003EGreat, and I just finished merging all the changes introduced in v0.11.0, so now only remains to merge v0.11.1\u003Cp\u003EIt\u0027s going to be a busy night...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESorry about that. If we had not been so close i would have waited.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-27T23:13:50Z","Content":"\n\u003Cp\u003ESo this is a question of sooner rather than later? Sweet. I was really loving the prospect of this, but assumed it would take some time.\u003C/p\u003E\u003Cp\u003EThis place has some great energy.\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-02-27T23:15:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003ESorry about that. If we had not been so close i would have waited.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDon\u0027t worry, I already did all the heavy lifting merging v0.11.0, this should be a little easier\u003C/p\u003E\n"},{"CreatedByName":"Boamere","CreatedById":68058,"CreatedDateTime":"2014-03-01T18:39:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003EI\u0027m all for collaboration, in fact right now I\u0027m rearranging the project to make merging with erendrake\u0027s kOS easier. I\u0027m going to keep adding the features that were included in kOS after my fork trying to keep both as compatible as possible. Once both projects are in sync feature-wise we can merge them into a single great one. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cp\u003ETalking about keeping projects compatible and I already deviate when I added the capability to run programs on other units of the same vessel. This wasn\u0027t into my plans but I really wanted to make a dropship that released drones.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://youtu.be/58WwE4oGNUo\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://youtu.be/58WwE4oGNUo\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs a noob to KOS (yeah we all have to start somewhere \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E )I don\u0027t understand how you got those little craft to do that without a controller on them, also is this addon just to make KOS easier to use including Fps? Or is it much bigger than that? \u003C/p\u003E\u003Cp\u003EThanks \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-03-01T21:28:22Z","Content":"\n\u003Cp\u003EI used module manager to add a kOS module to all of the stock command units just for aesthetics reasons. This project is a heavily modified version of kOS, but we are now in the process of merging it with the main version of kOS to have the best of both worlds \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-03-01T23:08:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003EI used module manager to add a kOS module to all of the stock command units just for aesthetics reasons. This project is a heavily modified version of kOS, but we are now in the process of merging it with the main version of kOS to have the best of both worlds \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENow that we are talking about kOS units, I was thinking that we could use a bit more variety anyway. You could figure that pods might have computers included, but I think there is room for some seperate units too. The current one is a bit largish for some applications on smaller vehicles, even though I like the non assuming simplicity of the thing.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-01T23:25:24Z\u0022 title=\u002203/01/2014 11:25  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 1, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"}]}