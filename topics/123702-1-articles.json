{"TopicId":123702,"ForumId":20,"TopicTitle":"kOS: How to read x,y and z from direction or vector.","CreatedByName":"inoculator","CreatedById":141432,"CreatedDateTime":"2015-10-24T17:22:33Z","PageNum":1,"Articles":[{"CreatedByName":"inoculator","CreatedById":141432,"CreatedDateTime":"2015-10-24T17:22:33Z","Content":"\n\u003Cp\u003EHi guys.\u003C/p\u003E\u003Cp\u003EI got stuck with kOS.\u003C/p\u003E\u003Cp\u003EI try to read the absolute x,y,z values of ship:facing -just for example.\u003C/p\u003E\u003Cp\u003EI thought of something like this:\u003C/p\u003E\u003Cp\u003Eset my_x to ship:facing:x\u003C/p\u003E\u003Cp\u003Eresulting in my_x = \u0022210\u0022 if ship:facing would be R(10,210,45) o.s.\u003C/p\u003E\u003Cp\u003EI cannot find any related docs on this.\u003C/p\u003E\u003Cp\u003Eany suggestion?\u003C/p\u003E\u003Cp\u003Ebr\u003C/p\u003E\u003Cp\u003ECarsten\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-10-24T18:06:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022inoculator\u0022 data-cite=\u0022inoculator\u0022\u003E\u003Cdiv\u003EHi guys.\u003Cp\u003EI got stuck with kOS.\u003C/p\u003E\u003Cp\u003EI try to read the absolute x,y,z values of ship:facing -just for example.\u003C/p\u003E\u003Cp\u003EI thought of something like this:\u003C/p\u003E\u003Cp\u003Eset my_x to ship:facing:x\u003C/p\u003E\u003Cp\u003Eresulting in my_x = \u0022210\u0022 if ship:facing would be R(10,210,45) o.s.\u003C/p\u003E\u003Cp\u003EI cannot find any related docs on this.\u003C/p\u003E\u003Cp\u003Eany suggestion?\u003C/p\u003E\u003Cp\u003Ebr\u003C/p\u003E\u003Cp\u003ECarsten\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe numbers in R(10,210,45) are not vector component lengths. They\u0027re degree angles of rotation *around* the main axes.\u003C/p\u003E\u003Cp\u003ETo get vector lengths, convert the Direction SHIP:FACING into a vector, by appending a :VECTOR suffix, like so: ship:facing:vector:x.\u003C/p\u003E\u003Cp\u003EIf you leave it as a direction, you get 3 rotation angles. If you turn it into a vector, what it does is rotate a starting XYZ grid by the rotation R(aaa,bbb,ccc), find out what that did to the Z axis, and take that resulting new Z axis and give you that expressed in the original raw axes, as a unit vector.\u003C/p\u003E\u003Cp\u003EWhen locking steering to a Direction, you are not only telling it how to point the nose, but also how to roll the ship. It points the nose along the newly rotated Z axis, the roof along the new Y axis, and the starboard side along the new X axis. The vector version just looks at the z axis because that\u0027s the \u0022nose-ward\u0022 one.\u003C/p\u003E\u003Cp\u003EWhen locking steering to a Vector, you only are telling it the nose pointing, and it\u0027s picking something arbitrary for the other two.\u003C/p\u003E\u003Cp\u003EAs for not finding documentation: it\u0027s here: \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/math/direction.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/math/direction.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EBe aware that the words \u0022pitch\u0022, \u0022yaw\u0022, and \u0022roll\u0022 are words I hate, that are inherited from the original author, and changing them now would break backward compatibility too much which is the only reason they\u0027re still being used. They have NOTHING at all to do with the actual meaning of pitch, yaw, and roll, because the axes they are rotating around are the universe\u0027s axes, not the ship\u0027s axes.\u003C/p\u003E\n"},{"CreatedByName":"inoculator","CreatedById":141432,"CreatedDateTime":"2015-10-25T22:14:23Z","Content":"\n\u003Cp\u003EHi Steven,\u003C/p\u003E\u003Cp\u003Ethanks for Your explanations.\u003C/p\u003E\u003Cp\u003EI am aware of the difference between vetors and directions.\u003C/p\u003E\u003Cp\u003EMy question was, how to extract the directions from a given value.\u003C/p\u003E\u003Cp\u003EI can extract vectors like \u0022(kerbin:position-mun:position):x\u0022 which gives me the length on the x axis from kerbin coordinate system to the mun for example.\u003C/p\u003E\u003Cp\u003EBut how do I get the directions from \u0022ship:facing\u0022 which gives me degrees, not vectors?\u003C/p\u003E\u003Cp\u003Ebr\u003C/p\u003E\u003Cp\u003ECarsten\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-10-25T23:06:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022inoculator\u0022 data-cite=\u0022inoculator\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EBut how do I get the directions from \u0022ship:facing\u0022 which gives me degrees, not vectors?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt was on the page I linked to. That\u0027s what I was talking about when I said I don\u0027t like the names \u0022pitch\u0022, \u0022yaw\u0022, and \u0022roll\u0022. Those *are* the suffix names that give you those degree angles, but they\u0027re a misnowmer - they\u0027re not really pitch, yaw, and roll as pilots understand the terms and should have never been named that. But it\u0027s what they\u0027re called and we\u0027re stuck with it.\u003C/p\u003E\n"}]}