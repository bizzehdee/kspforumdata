{"TopicId":95291,"ForumId":29,"TopicTitle":"0.90 Modding Facilities and their Upgrades","CreatedByName":"Yemo","CreatedById":114412,"CreatedDateTime":"2015-01-01T19:16:15Z","PageNum":1,"Articles":[{"CreatedByName":"Yemo","CreatedById":114412,"CreatedDateTime":"2015-01-01T19:16:15Z","Content":"\n\u003Cp\u003EHello,\u003C/p\u003E\u003Cp\u003EI m interested in modding the facility restrictions (eg VAB 30parts, launch pad 18t) as well as the facility upgrade paths and unlocks.\u003C/p\u003E\u003Cp\u003ECan anyone point me to the files containing those information?\u003C/p\u003E\u003Cp\u003EThank you very much!\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-01T19:28:31Z","Content":"\n\u003Cp\u003EYou currently can not. All you can do is change the cost.\u003C/p\u003E\n"},{"CreatedByName":"Yemo","CreatedById":114412,"CreatedDateTime":"2015-01-01T22:14:35Z","Content":"\n\u003Cp\u003EHm, thats bad.\u003C/p\u003E\u003Cp\u003ENearing release they add major features/gameplay restrictions and make them not moddable.\u003C/p\u003E\u003Cp\u003EModding made this good game great, this looks like a strategic turn in the wrong direction.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-01T22:26:55Z","Content":"\n\u003Cp\u003EI wouldn\u0027t read that much into it. Probably just a crunch time bad decision that will be fixed in the future.\u003C/p\u003E\n"},{"CreatedByName":"Daid","CreatedById":32171,"CreatedDateTime":"2015-01-02T10:57:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EYou currently can not. All you can do is change the cost.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot 100% sure on this.\u003C/p\u003E\u003Cp\u003EThe limits are handled by the \u0022GameVariables\u0022 object. Specificly, GameVariables.instance.GetCraftMassLimit and GameVariables.instance.GetCraftSizeLimit.\u003C/p\u003E\u003Cp\u003ENow, changing functions on a \u0022life\u0022 object is not possible, as far as I know. However, you could replace GameVariables.instance with an new overloaded object that has a different implementation of the above functions.\u003C/p\u003E\u003Cp\u003EThis might work:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[KSPAddon(KSPAddon.Startup.MainMenu, false)]\u003Cbr\u003Eclass MyGameVariables : GameVariables\u003Cbr\u003E{\u003Cbr\u003E  void Awake()\u003Cbr\u003E  {\u003Cbr\u003E    GameVariables.Instance = this;\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  public int GetPartCountLimit(float f)\u003Cbr\u003E  {\u003Cbr\u003E    return 100;\u003Cbr\u003E  }\u003Cbr\u003E  public float GetCraftMassLimit(float editorNormLevel)\u003Cbr\u003E  {\u003Cbr\u003E    return 50.0f;\u003Cbr\u003E  }\u003Cbr\u003E  public Vector3 GetCraftSizeLimit(float editorNormLevel)\u003Cbr\u003E  {\u003Cbr\u003E    return new Vector3(100, 100, 100);\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-02T17:01:30Z","Content":"\n\u003Cp\u003EYou\u0027re right I probably shouldn\u0027t have made such a hard and fast statement. There are \u003Cstrong\u003Ealways\u003C/strong\u003E possibilities. My intention was to simply re-state what had been said in the \u0022What\u0027s new in 0.90\u0022 thread by Sarbian:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E Building upgrade related stuff\u003C/p\u003E\u003Cp\u003EFirst get a building current level : ScenarioUpgradeableFacilities.GetFacilityLevel(Spa ceCenterFacility.VehicleAssemblyBuilding)\u003C/p\u003E\u003Cp\u003EThen get use those to get the various active restriction. Finding which SpaceCenterFacility level each of those use is left as an exercise to the reader.\u003C/p\u003E\u003Cp\u003Epublic int GetPartCountLimit(float editorNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool UnlockedFuelTransfer(float editorNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool UnlockedActionGroupsStock(float editorNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool UnlockedActionGroupsCustom(float editorNormLevel)\u003C/p\u003E\u003Cp\u003Epublic float GetCraftMassLimit(float editorNormLevel)\u003C/p\u003E\u003Cp\u003Epublic Vector3 GetCraftSizeLimit(float editorNormLevel)\u003C/p\u003E\u003Cp\u003Epublic int GetActiveStrategyLimit(float adminNormLevel)\u003C/p\u003E\u003Cp\u003Epublic float GetStrategyCommitRange(float adminNormLevel)\u003C/p\u003E\u003Cp\u003Epublic float GetStrategyLevelLimit(float adminNormLevel)\u003C/p\u003E\u003Cp\u003Epublic int GetActiveContractsLimit(float mCtrlNormLevel)\u003C/p\u003E\u003Cp\u003Epublic float GetContractLevelLimit(float mCtrlNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool UnlockedFlightPlanning(float mCtrlNormLevel)\u003C/p\u003E\u003Cp\u003Epublic int GetActiveCrewLimit(float astroComplexNormLevel)\u003C/p\u003E\u003Cp\u003Epublic float GetCrewLevelLimit(float astroComplexNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool UnlockedEVA(float astroComplexNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool UnlockedEVAFlags(float astroComplexNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool UnlockedEVAClamber(float astroComplexNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool EVAIsPossible(bool evaUnlocked, Vessel v)\u003C/p\u003E\u003Cp\u003Epublic string GetEVALockedReason(Vessel v)\u003C/p\u003E\u003Cp\u003Epublic GameVariables.OrbitDisplayMode GetOrbitDisplayMode(float tsNormLevel)\u003C/p\u003E\u003Cp\u003Epublic int GetTrackedObjectLimit(float tsNormLevel)\u003C/p\u003E\u003Cp\u003Epublic int GetPatchesAheadLimit(float tsNormLevel)\u003C/p\u003E\u003Cp\u003Epublic bool UnlockedSpaceObjectDiscovery(float tsNormLevel)\u003C/p\u003E\u003Cp\u003Epublic UntrackedObjectClass MinTrackedObjectSize(float tsNormLevel)\u003C/p\u003E\u003Cp\u003Epublic float GetScienceCostLimit(float RnDnormLevel)\u003C/p\u003E\u003Cp\u003Epublic float GetDataToScienceRatio(float RnDnormLevel)\u003C/p\u003E\u003Cp\u003Epublic float GetExperimentLevel(float RnDnormLevel)\u003C/p\u003E\u003Cp\u003EA warning : none of those limits are configurable.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"FlowerChild","CreatedById":74289,"CreatedDateTime":"2015-01-06T00:48:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Daid\u0022 data-cite=\u0022Daid\u0022\u003E\u003Cdiv\u003ENot 100% sure on this.\u003Cp\u003EThe limits are handled by the \u0022GameVariables\u0022 object. Specificly, GameVariables.instance.GetCraftMassLimit and GameVariables.instance.GetCraftSizeLimit.\u003C/p\u003E\u003Cp\u003ENow, changing functions on a \u0022life\u0022 object is not possible, as far as I know. However, you could replace GameVariables.instance with an new overloaded object that has a different implementation of the above functions.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI thought the above idea had some merit, so I decided to give it a try, but unfortunately given that none of the methods are virtual, the base functions are still called. For reference, here is the code I attempted this with:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing System.Threading.Tasks;\u003Cbr\u003E\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Eusing BTSM;\u003Cbr\u003E\u003Cbr\u003Eclass BTSMGameVariables : GameVariables\u003Cbr\u003E{\u003Cbr\u003E    public BTSMGameVariables( GameVariables originalVariables ) : base()\u003Cbr\u003E    {\u003Cbr\u003E        contractDestinationWeight = originalVariables.contractDestinationWeight;\u003Cbr\u003E        contractFundsAdvanceFactor = originalVariables.contractFundsAdvanceFactor;\u003Cbr\u003E        contractFundsCompletionFactor = originalVariables.contractFundsCompletionFactor;\u003Cbr\u003E        contractFundsFailureFactor = originalVariables.contractFundsFailureFactor;\u003Cbr\u003E        contractPrestigeExceptional = originalVariables.contractPrestigeExceptional;\u003Cbr\u003E        contractPrestigeSignificant = originalVariables.contractPrestigeSignificant;\u003Cbr\u003E        contractPrestigeTrivial = originalVariables.contractPrestigeTrivial;\u003Cbr\u003E        contractReputationCompletionFactor = originalVariables.contractReputationCompletionFactor;\u003Cbr\u003E        contractReputationFailureFactor = originalVariables.contractReputationFailureFactor;\u003Cbr\u003E        contractScienceCompletionFactor = originalVariables.contractScienceCompletionFactor;\u003Cbr\u003E        mentalityDeadlineExceptional = originalVariables.mentalityDeadlineExceptional;\u003Cbr\u003E        mentalityDeadlineSignificant = originalVariables.mentalityDeadlineSignificant;\u003Cbr\u003E        mentalityDeadlineTrivial = originalVariables.mentalityDeadlineTrivial;\u003Cbr\u003E        mentalityExpiryExceptional = originalVariables.mentalityExpiryExceptional;\u003Cbr\u003E        mentalityExpirySignificant = originalVariables.mentalityExpirySignificant;\u003Cbr\u003E        mentalityExpiryTrivial = originalVariables.mentalityExpiryTrivial;\u003Cbr\u003E        mentalityFundsExceptional = originalVariables.mentalityFundsExceptional;\u003Cbr\u003E        mentalityFundsSignificant = originalVariables.mentalityFundsSignificant;\u003Cbr\u003E        mentalityFundsTrivial = originalVariables.mentalityFundsTrivial;\u003Cbr\u003E        mentalityReputationExceptional = originalVariables.mentalityReputationExceptional;\u003Cbr\u003E        mentalityReputationSignificant = originalVariables.mentalityReputationSignificant;\u003Cbr\u003E        mentalityReputationTrivial = originalVariables.mentalityReputationTrivial;\u003Cbr\u003E        mentalityScienceExceptional = originalVariables.mentalityScienceExceptional;\u003Cbr\u003E        mentalityScienceSignificant = originalVariables.mentalityScienceSignificant;\u003Cbr\u003E        mentalityScienceTrivial = originalVariables.mentalityScienceTrivial;\u003Cbr\u003E        partRecoveryValueFactor = originalVariables.partRecoveryValueFactor;\u003Cbr\u003E        reputationAddition = originalVariables.reputationAddition;\u003Cbr\u003E        reputationKerbalDeath = originalVariables.reputationKerbalDeath;\u003Cbr\u003E        reputationKerbalRecovery = originalVariables.reputationKerbalRecovery;\u003Cbr\u003E        reputationSubtraction = originalVariables.reputationSubtraction;\u003Cbr\u003E        resourceRecoveryValueFactor = originalVariables.resourceRecoveryValueFactor;\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    static public void OverrideStockGameVariablesIfNecessary()\u003Cbr\u003E    {\u003Cbr\u003E        if ( GameVariables.Instance != null )\u003Cbr\u003E        {\u003Cbr\u003E            if ( !( GameVariables.Instance is BTSMGameVariables ) )\u003Cbr\u003E            {\u003Cbr\u003E                // FCTEST\u003Cbr\u003E                Debug.Log( \u0022BTSMGameVariables: Replacing stock GameVariables\u0022 );\u003Cbr\u003E\u003Cbr\u003E                GameVariables.Instance = new BTSMGameVariables( GameVariables.Instance );\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    public float GetCraftMassLimit( float editorNormLevel )\u003Cbr\u003E    {\u003Cbr\u003E        float fMassLimit = BTSMUtils.GetLaunchCapacityBasedOnResearchUnlocks();\u003Cbr\u003E\u003Cbr\u003E        // FCTEST\u003Cbr\u003E        Debug.Log( \u0022BTSMGameVariables GetCraftMassLimit() returning: \u0022 \u002B fMassLimit );\u003Cbr\u003E\u003Cbr\u003E        return fMassLimit;\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m instantiating through OverrideStockGameVariablesIfNecessary() from a separate monobehavior which is called whenever the space center is loaded to check if my class needs to override the stock one, and while it is properly instantiated and set, the debug output within GetCraftMassLimit() is never hit, and mass limits remain at stock levels (I already had mass limiting functionality in my mod pre-0.9, so BTSMUtils.GetLaunchCapacityBasedOnResearchUnlocks() is just a pre-existing function I already had written).\u003C/p\u003E\u003Cp\u003EI\u0027ve also tried declaring GetCraftMassLimit() as override, virtual and new on different occasions, to no avail.\u003C/p\u003E\u003Cp\u003EUnless someone knows a trick to force overrides on non-virtual functions like this in C#, it doesn\u0027t look like this will work.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-06T02:50:53Z\u0022 title=\u002201/06/2015 02:50  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 6, 2015\u003C/time\u003E by FlowerChild\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Axela","CreatedById":109277,"CreatedDateTime":"2015-01-10T07:32:45Z","Content":"\n\u003Cp\u003EHi Flowerchild,\u003C/p\u003E\u003Cp\u003Edid you tried adding the \u003Cstrong\u003Enew \u003C/strong\u003Ekeyword?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E public new float GetCraftMassLimit( float editorNormLevel )\u003Cbr\u003E    {\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"FlowerChild","CreatedById":74289,"CreatedDateTime":"2015-01-13T00:36:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Axela\u0022 data-cite=\u0022Axela\u0022\u003E\u003Cdiv\u003EHi Flowerchild,\u003Cp\u003Edid you tried adding the \u003Cstrong\u003Enew \u003C/strong\u003Ekeyword?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYup, as I mentioned above:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI\u0027ve also tried declaring GetCraftMassLimit() as override, virtual and new on different occasions, to no avail.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs far as I know, the new operator only hides the base class function if you\u0027re calling an instance of the child class directly. If you\u0027re calling it through a reference to the base class (which in this case, that\u0027s precisely what the GameVariables.Instance is), the original base class function will be called.\u003C/p\u003E\u003Cp\u003EBasically, the new keyword doesn\u0027t respect polymorphism, and I checked multiple online sources to see if there was a way around that (I\u0027m primarily a C\u002B\u002B programmer so I\u0027m often times unaware of the subtleties of C# syntax), and from the many discussions I found about that particular issue, there doesn\u0027t appear to be.\u003C/p\u003E\n"},{"CreatedByName":"jkortech","CreatedById":146934,"CreatedDateTime":"2015-09-28T05:02:55Z","Content":"\n\u003Cp\u003EI know that this thread is long dead now, but I just wanted to let everyone know that in KSP 1.0.4, all of the non-static methods on GameVariables are now virtual, so they \u003Cstrong\u003Ecan \u003C/strong\u003Eeasily be overridden.\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-09-28T10:04:53Z","Content":"\n\u003Cp\u003ENow if only someone had made an add-on that uses that. Oh right, I did \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"jkortech","CreatedById":146934,"CreatedDateTime":"2015-09-28T23:10:07Z","Content":"\n\u003Cp\u003ECool! I posted on here because I had just noticed it myself and this was the only result from google that had any relevance. For one of the mods some of the work that I\u0027m doing for BROKE, I might end up messing with some GameVariables (probably the crew hiring cost if anything). The only problem that I noticed with GameVariables though is everyone stepping on each other\u0027s toes. I was trying to figure out if there was any agreed upon process to prevent or minimize that. (Otherwise I could spin up some quick code to try to make everything play as nice as possible.)\u003C/p\u003E\n"}]}