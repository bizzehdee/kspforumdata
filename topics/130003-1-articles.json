{"TopicId":130003,"ForumId":29,"TopicTitle":"AltInput DLL For Joysticks","CreatedByName":"Styles2304","CreatedById":109841,"CreatedDateTime":"2016-01-16T04:13:56Z","PageNum":1,"Articles":[{"CreatedByName":"Styles2304","CreatedById":109841,"CreatedDateTime":"2016-01-16T04:13:56Z","Content":"\n\u003Cp\u003E\nWhen compiling and using the AltInput dll, everything seems to improve drastically. However, the SAS no longer functions. It\u0027s on and it looks like it\u0027s working but it does nothing for the stability of the craft. The problem section is here:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint\u0022\u003E\nVesselAutopilot.VesselSAS VesselSAS = FlightGlobals.ActiveVessel.Autopilot.SAS;\nBoolean overrideSAS = (Math.Abs(CurrentState.pitch) \u0026gt; VesselSAS.controlDetectionThreshold) ||\n\t\t\t\t\t\t(Math.Abs(CurrentState.yaw) \u0026gt; VesselSAS.controlDetectionThreshold) ||\n\t\t\t\t\t\t(Math.Abs(CurrentState.roll) \u0026gt; VesselSAS.controlDetectionThreshold);\nVesselSAS.ManualOverride(overrideSAS);\u003C/pre\u003E\n\u003Cp\u003E\nDoes anyone see an issue right off that I\u0027m missing?\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-01-16T04:53:54Z","Content":"\n\u003Cp\u003E\nYou might want to check that manual override (still?) does what you expect it to. It might be easier to run your control inputs in PostAutoPilotUpdate and just not put anything through if input is not detected.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint\u0022\u003E\npublic static bool IsNeutral(AxisBinding axis)\n{\n  return axis.IsNeutral() \u0026amp;\u0026amp; Math.Abs(axis.GetAxis()) \u0026lt; VesselSAS.controlDetectionThreshold;\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-16T04:57:57Z\u0022 title=\u002201/16/2016 04:57  AM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 16, 2016\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Styles2304","CreatedById":109841,"CreatedDateTime":"2016-01-16T05:16:33Z","Content":"\n\u003Cp\u003E\nI\u0027m basically fumbling my way through this . . . when do you suggest I place your code? Here is a larger chunk of what I currently have:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint\u0022\u003E\n        public static void UpdateState(FlightCtrlState CurrentState)\n        {\n            // Go through all our axes to find the ones we need to update\n            foreach (FieldInfo field in AxisFields)\n            {\n                if (Math.Abs((float)field.GetValue(CurrentState)) \u0026lt; Math.Abs((float)field.GetValue(UpdatedState)))\n                {\n                    field.SetValue(CurrentState, (float)field.GetValue(UpdatedState));\n                    // The throttles are a real PITA to override\n                    if (field.Name == \u0022mainThrottle\u0022)\n                        FlightInputHandler.state.mainThrottle = 0.0f;\n                    else if (field.Name == \u0022wheelThrottle\u0022)\n                        FlightInputHandler.state.wheelThrottle = 0.0f;\n                }\n            }\n\n            // If SAS is on, we need to override it or else our changes are ignored\n            VesselAutopilot.VesselSAS VesselSAS = FlightGlobals.ActiveVessel.Autopilot.SAS;\n            Boolean overrideSAS = (Math.Abs(CurrentState.pitch) \u0026gt; VesselSAS.controlDetectionThreshold) ||\n                                    (Math.Abs(CurrentState.yaw) \u0026gt; VesselSAS.controlDetectionThreshold) ||\n                                    (Math.Abs(CurrentState.roll) \u0026gt; VesselSAS.controlDetectionThreshold);\n            VesselSAS.ManualOverride(overrideSAS);\n        }\u003C/pre\u003E\n\u003Cp\u003E\nThe area in question is, obviously, at the bottom.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-16T05:17:57Z\u0022 title=\u002201/16/2016 05:17  AM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 16, 2016\u003C/time\u003E by Styles2304\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-01-16T07:13:04Z","Content":"\n\u003Cp\u003E\nThe little code comment is probably totally worthless now that I think about it (since it uses KSPs controller bindings while this seems to be something else entirely...). What\u0027s probably happening is that the SAS updates the ctrlstate before you do, and then even when manual override is false its output no longer exists. Simple fix, when you don\u0027t want control from this plugin, don\u0027t fiddle with the ctrlState at all (ie. if (manualOverride) UpdateCtrlState();)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-16T07:15:00Z\u0022 title=\u002201/16/2016 07:15  AM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 16, 2016\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Styles2304","CreatedById":109841,"CreatedDateTime":"2016-01-16T14:52:31Z","Content":"\n\u003Cp\u003E\nI understand what you\u0027re saying but I have no idea how to actually write it. Could you show me what needs replaced with what exactly?\n\u003C/p\u003E\n"}]}