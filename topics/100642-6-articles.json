{"TopicId":100642,"ForumId":66,"TopicTitle":"Devnote Tuesday: Fairing well","CreatedByName":"SQUAD","CreatedById":66485,"CreatedDateTime":"2015-02-24T22:02:01Z","PageNum":6,"Articles":[{"CreatedByName":"NoMrBond","CreatedById":69263,"CreatedDateTime":"2015-02-26T00:53:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022regex\u0022 data-cite=\u0022regex\u0022\u003E\u003Cdiv\u003EPlease no. Stock Tweakscale would be much more flexible.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, but node snapping is kinda might happen plausible, while TweakScale integration with stock is way out in the far reaches of super unlikely territory\u003C/p\u003E\u003Cp\u003EI wouldn\u0027t complain, and they could always restrict it to structural/wings/parachutes etc for Career, I just wouldn\u0027t hold my breath (I\u0027d cross my fingers though)\u003C/p\u003E\n"},{"CreatedByName":"kofeyh","CreatedById":39949,"CreatedDateTime":"2015-02-26T01:06:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NoMrBond\u0022 data-cite=\u0022NoMrBond\u0022\u003E\u003Cdiv\u003EYeah, but node snapping is kinda might happen plausible, while TweakScale integration with stock is way out in the far reaches of super unlikely territory\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETweakable code needs some work so it\u0027s less inclined to haemorrhage memory. Tweakscale has it\u0027s own set of issues; engines provide hysterical figures once scaled, for example. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThere\u0027s actually far more flexibility in the existing code to add a more \u0027dynamic\u0027 nature to a number of existing parts. At this point however it\u0027s less about capability, and more about development choice.\u003C/p\u003E\u003Cp\u003EThis game has a distinct \u0027lego\u0027 feel due to fixed parts. This isn\u0027t likely to change much, even though from a longevity point of few, it probably has to. \u003C/p\u003E\u003Cp\u003EAs I mentioned above, there is actually a middle ground of having parts that are far more dynamic, with simple fixed restrictions used in Career and Science game modes to set boundaries for parts, at various levels. As you progress, more options/ less restriction (eg a single probe part that gains features as you progress) is more efficient than simply unlocking more of them with different features.\u003C/p\u003E\n"},{"CreatedByName":"GusTurbo","CreatedById":57552,"CreatedDateTime":"2015-02-26T01:14:57Z","Content":"\n\u003Cp\u003EI\u0027m really excited about stock fairings because they could save my Saturn V at least 100 parts, taking it from 377 to 277, which would be game-changing.\u003C/p\u003E\u003Cp\u003EHopefully each fairing type will be reproducible within the new system. I\u0027m pleased with everything Harvester has said in this thread.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-26T01:18:32Z\u0022 title=\u002202/26/2015 01:18  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 26, 2015\u003C/time\u003E by GusTurbo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Bill Phil","CreatedById":127797,"CreatedDateTime":"2015-02-26T02:24:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ArcFurnace\u0022 data-cite=\u0022ArcFurnace\u0022\u003E\u003Cdiv\u003EYou seem to be conflating \u0022procedural fairings\u0022 (non-predefined-shape fairings) with Procedural Fairings (the mod). In Procedural Fairings you just place a fairing base and a fairing panel, and it automagically reshapes itself to fit the payload- am I right that you feel that this is \u0022cheating\u0022/\u0022too easy\u0022 since it requires no effort from the player to ensure that the payload fits in the fairing? The actual description of how the fairings work by HarvesteR seems to imply that this is not the case for their implementation. \u003Cp\u003EI see nothing in there about automatic fairing shaping, and several things about manual fairing shaping. If your desire is for fairings that are manually shaped by the player, you seem to be getting your wish.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would rather have pre-set sizes. But a fairing built by the player is fine. And it technically isn\u0027t procedural. Well, it\u0027s a mix of procedural and something else.\u003C/p\u003E\n"},{"CreatedByName":"kofeyh","CreatedById":39949,"CreatedDateTime":"2015-02-26T02:46:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EI would rather have pre-set sizes. But a fairing built by the player is fine. And it technically isn\u0027t procedural. Well, it\u0027s a mix of procedural and something else.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf I have a fairing that is constrained in height by career limitation, and constrained in width based on career progression, how is that not a facsimile of a fixed fairing that is also constrained by build height, and fixed width - it leads to a fundamental outcome that is the same?\u003C/p\u003E\u003Cp\u003EThe only difference is that the former can be \u003Cem\u003Eprogrammed\u003C/em\u003E to change during progression to allow for additional sizes. The later forcibly requires more parts. \u003C/p\u003E\u003Cp\u003EIn sandbox, this makes the fixed parts almost pointless; as the point of restricting payload has no intrinsic value. Apart from \u0022fixed good, procedural bad\u0022, I\u0027m not sure what you\u0027re actually trying to say.\u003C/p\u003E\u003Cp\u003EI guess my point is, it\u0027s healthy to consider each part both in career and in sandbox. Procedural allows for both \u0027limited\u0027 as well as dynamic usage. Fixed is, well, fixed and is why we have quite a high part count as is, of which only a subsection may be used at any given time.\u003C/p\u003E\u003Cp\u003EHaving said that, HarvesteR seems to be using a hybrid model - dynamic, if you will - where I expect tweekables and the editor can be used to \u0027shape\u0027 fairings, based on a set of minimum and maximum values.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-26T03:17:03Z\u0022 title=\u002202/26/2015 03:17  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 26, 2015\u003C/time\u003E by kofeyh\u003C/strong\u003E\n\u003Cbr\u003Eclarity\n\u003C/span\u003E\n"},{"CreatedByName":"Bill Phil","CreatedById":127797,"CreatedDateTime":"2015-02-26T02:58:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022regex\u0022 data-cite=\u0022regex\u0022\u003E\u003Cdiv\u003EIn other words, it\u0027s \u003Cem\u003Eprocedural\u003C/em\u003E. The player procedurally-generates the part.\u003Cp\u003EThe beauty of KSP is that, even if I use entirely stock parts, my rockets will be, and can be, entirely different than yours.\u003C/p\u003E\u003Cp\u003EKSP is many things to many people and allowing the parts to change shape or providing critical information (such as delta-V) does not, in any way, ruin the troubleshooting or puzzle aspect of the game (if developing a hybrid Buran/STS-style orbiter for RSS has taught me anything). Parts than can change their size or shape just give the player more options to design their craft without blasting their machine with additional memory-reducing parts.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s not quite procedural. A player can make any shape. Then, a way for the computer to define that shape can be made. But that method wasn\u0027t the original way the shape was put together.\u003C/p\u003E\u003Cp\u003EHow can you say, for sure, that my rockets aren\u0027t similar to yours? I might build very similar to you. Sure it\u0027s unlikely. But it is possible. Most stock rockets start to look very similar to each other. MOST. Not all of them. But the majority are similar to each other.\u003C/p\u003E\u003Cp\u003EKSP is about putting parts together. It\u0027s a basic mechanic. And if a changeable shape fuel tank is introduced, then that building mechanic will change. You might as well make the game all about building a payload, and then when you click \u0022Launch\u0022 it asks you what kind of rocket you want. Parts that can change shape are not like a delta-V readout, which doesn\u0027t do much in the long run other than let you know a rocket\u0027s capabilities. Variable shape parts would heavily change the puzzle aspect, because then I don\u0027t need to do much thinking anymore if they\u0027re in the game. It would be something like letting me change the block shapes in Tetris. It changes the gameplay in a large way, making the game very different, perhaps not even fundamentally the same. Although this topic should be in the dedicated thread...\u003C/p\u003E\u003Cp\u003EThe problem isn\u0027t \u0022ruining\u0022 per se... But changing it to the point of not being all that similar.\u003C/p\u003E\u003Cp\u003EMemory can be reduced by making the textures more efficient, making the 3d models take less space (it\u0027s not that dependent on # polygons), and load on demand. Changeable Parts aren\u0027t the ONLY option...\u003C/p\u003E\u003Cp\u003EIf the game started with changeable shape parts, then that would be fine. But it didn\u0027t start with them, resulting in the game we have now.\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2015-02-26T03:32:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EThat\u0027s not quite procedural.\u003C/div\u003E\u003C/blockquote\u003EIt is. Like other procedural processes in other games, the player can set the initial parameters upon which the feature is procedurally built.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EHow can you say, for sure, that my rockets aren\u0027t similar to yours?\u003C/div\u003E\u003C/blockquote\u003EI can\u0027t, but given the wildly varying nature of craft of the What Did You Do In KSP Today thread, I can say for certainty that not everyone builds rockets the way I do.\u003Cp\u003EI\u0027m skipping the middle part because it boils down to personal preference (in which case I always default to.more options rather than less).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EMemory can be reduced by making the textures more efficient, making the 3d models take less space (it\u0027s not that dependent on # polygons), and load on demand. Changeable Parts aren\u0027t the ONLY option...\u003C/div\u003E\u003C/blockquote\u003ENo, but they are one of the most immediate way to prune parts. Also, memory restrictions aren\u0027t the only reason to reduce the bewildering array of parts. I literally spend at least 1/4 of my build time trying to find the part I want to use. At least on the aerodynamic and fuel tank tabs I can easily grab a part and reshape it as needed.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EIf the game started with changeable shape parts, then that would be fine. But it didn\u0027t start with them, resulting in the game we have now.\u003C/div\u003E\u003C/blockquote\u003EThe game hasn\u0027t come out of beta yet. Also, that\u0027s like saying that the 48-7S or the NASA parts shouldn\u0027t be balanced because they started that way.\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-26T04:01:32Z\u0022 title=\u002202/26/2015 04:01  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 26, 2015\u003C/time\u003E by regex\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kofeyh","CreatedById":39949,"CreatedDateTime":"2015-02-26T03:34:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EHow can you say, for sure, that my rockets aren\u0027t similar to yours? I might build very similar to you. Sure it\u0027s unlikely. But it is possible. Most stock rockets start to look very similar to each other. MOST. Not all of them. But the majority are similar to each other.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes and no, conflating two different causes for similar rockets doesn\u0027t really answer the question. Also of the various people I\u0027ve watched play KSP (and I have watched quite a few) almost none look \u0022similar to each other\u0022. Give 15 people a lego set with 20 pieces, and ask them to go away, build \u0022a car\u0022 and bring it back. You won\u0027t get 15 identical cars. Some won\u0027t even be similar. Some may not even BE a car, from a traditional design point.\u003C/p\u003E\u003Cp\u003EInitially, people build similar rockets (tall, thin or pointy and with fins because of what they see and hear) because most know what a rocket looks like. Then when KSP teaches you that that doesn\u0027t work, people eventually (though the lego mechanic) figure out a pancake will fly much better and will achieve orbit.\u003C/p\u003E\u003Cp\u003ESo you have an entire generation of people who started KSP building pancakes. Until they figured out the \u0027soup\u0027 and were able to make something that looks more like a traditional launch vehicle Does that mean every rocket should look like a pancake? or just that they are similar because of game limitations?\u003C/p\u003E\u003Cp\u003EStandardised parts will not, automatically, mean standardised designs. It does not work like that. People and technology do not function this way. KSP started with a block-build concept, this is true, but it\u0027s not to force or create a fixed progression (that came later to a degree, thanks to career) - it was to give people a set of tools to go to space.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-26T03:41:33Z\u0022 title=\u002202/26/2015 03:41  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 26, 2015\u003C/time\u003E by kofeyh\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kofeyh","CreatedById":39949,"CreatedDateTime":"2015-02-26T04:25:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022regex\u0022 data-cite=\u0022regex\u0022\u003E\u003Cdiv\u003EAlso, memory restrictions aren\u0027t the only reason to reduce the bewildering array of parts. I literally spend at least 1/4 of my build time trying to find the part I want to use. At least on the aerodynamic and fuel tank tabs I can easily grab a part and reshape it as needed.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPart of the frustration in building in KSP at this point is both the bewildering array of parts, and the shear redundancy that such a large part catalogue creates. \u003C/p\u003E\u003Cp\u003EAdding more parts to address perceived needs (rather than using a single part that has broader function to address actual need) adds to a) the numbers of parts chewing up valuable memory and \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E spending the requisite 20 minutes hunting for it. I can\u0027t count the number of times I have looked at tanks, given up, and grabbed a procedural tank. \u003C/p\u003E\u003Cp\u003EOften it ends up actually being close to an existing stock tank. Just because I can make it any size and shape, doesn\u0027t mean I will. But the flexibility exists to do either.\u003C/p\u003E\u003Cp\u003ERelated: I almost never use the various options available to filter parts; because the interface is interruptive to the build process. So I end up cycling through various tabs looking. Always looking.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-26T04:32:51Z\u0022 title=\u002202/26/2015 04:32  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 26, 2015\u003C/time\u003E by kofeyh\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Bill Phil","CreatedById":127797,"CreatedDateTime":"2015-02-26T05:02:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kofeyh\u0022 data-cite=\u0022kofeyh\u0022\u003E\u003Cdiv\u003EYes and no, conflating two different causes for similar rockets doesn\u0027t really answer the question. Also of the various people I\u0027ve watched play KSP (and I have watched quite a few) almost none look \u0022similar to each other\u0022. Give 15 people a lego set with 20 pieces, and ask them to go away, build \u0022a car\u0022 and bring it back. You won\u0027t get 15 identical cars. Some won\u0027t even be similar. Some may not even BE a car, from a traditional design point.\u003Cp\u003EInitially, people build similar rockets (tall, thin or pointy and with fins because of what they see and hear) because most know what a rocket looks like. Then when KSP teaches you that that doesn\u0027t work, people eventually (though the lego mechanic) figure out a pancake will fly much better and will achieve orbit.\u003C/p\u003E\u003Cp\u003ESo you have an entire generation of people who started KSP building pancakes. Until they figured out the \u0027soup\u0027 and were able to make something that looks more like a traditional launch vehicle Does that mean every rocket should look like a pancake? or just that they are similar because of game limitations?\u003C/p\u003E\u003Cp\u003EStandardised parts will not, automatically, mean standardised designs. It does not work like that. People and technology do not function this way. KSP started with a block-build concept, this is true, but it\u0027s not to force or create a fixed progression (that came later to a degree, thanks to career) - it was to give people a set of tools to go to space.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI never said they were ALL the same. I said that MOST were similar.\u003C/p\u003E\u003Cp\u003EAnd watching people play KSP introduces a selection bias. :|\u003C/p\u003E\u003Cp\u003EI didn\u0027t say that standardised parts results in standardised designs. I said most designs are similar. This is because of the \u0022Average Joes\u0022 of the KSP community. (I\u0027m pretty much one of them)They don\u0027t have very different play styles. However, as they get better and better they start to have their own designs, which start to drift more and more in difference. Even at their farthest, they\u0027re still similar. Similar =/= the same. All rockets have fuel tanks. And the majority of design styles are only different in how and where parts are placed.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022regex\u0022 data-cite=\u0022regex\u0022\u003E\u003Cdiv\u003EIt is. Like other procedural processes in other games, the player can set the initial parameters upon which the feature is procedurally built.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould you call drawing a box on a sheet of paper procedural generation? Most wouldn\u0027t. Would you call sculpting a 3d model on a computer procedural? That\u0027s taking an input and drawing the result of the input. But that\u0027s not exactly procedural. Procedural would be giving it a set of instructions that gives you a different result and then letting it do that. In this case it\u0027s just showing you what has been done.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI can\u0027t, but given the wildly varying nature of craft of the What Did You Do In KSP Today thread, I can say for certainty that not everyone builds rockets the way I do.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is more than likely a fair amount of selection bias in the What Did You Do in KSP Today thread.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m skipping the middle part because it boils down to personal preference (in which case I always default to.more options rather than less).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EChanging gameplay would interrupt many players build styles. That was what I was getting at.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ENo, but they are one of the most immediate way to prune parts. Also, memory restrictions aren\u0027t the only reason to reduce the bewildering array of parts. I literally spend at least 1/4 of my build time trying to find the part I want to use. At least on the aerodynamic and fuel tank tabs I can easily grab a part and reshape it as needed.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E?\u003C/p\u003E\u003Cp\u003EI generally spend a few seconds looking for a part. The biggest delay for me is that the engines and the fuel tanks have been separated and I constantly click on the wrong one. \u003C/p\u003E\u003Cp\u003EI mostly use certain parts more than others. I guess I instinctively know where they are. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe game hasn\u0027t come out of beta yet. Also, that\u0027s like saying that the 48-7S or the NASA parts shouldn\u0027t be balanced because they started \u003C/p\u003E\u003Cp\u003Ethat way.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere\u0027s a difference between ironing out a game, and changing the gameplay severly. The latter is more extreme than the former.\u003C/p\u003E\n"},{"CreatedByName":"kofeyh","CreatedById":39949,"CreatedDateTime":"2015-02-26T05:12:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EAnd watching people play KSP introduces a selection bias. :|\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKSP isn\u0027t a clean-room, or a science experiment that requires people to not know what it is or to build in a specific function. This game does not feature a \u0022singularly correct\u0022 outcome to any given situation. This community willingly and freely shares ideas.\u003C/p\u003E\u003Cp\u003EMany people who start this game, stop. They stop because of the daunting part count. They stop because they can\u0027t figure out how to make a rocket. They stop because the game has less of a learning curve, and more of a precipitous cliff. Adding dozens of new parts doesn\u0027t address any of this. It just adds more parts, for the sake of it.\u003C/p\u003E\u003Cp\u003EThis has been the response to any number of existing part balance issues. Just add a new one that\u0027s better. Because this is simpler than making an existing part more useful.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI didn\u0027t say that standardised parts results in standardised designs. I said most designs are similar.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe variable nature of each individuals understanding (or lack) of physics, engineering and the degree of lateral thinking will automatically ensure no such outcome. This is bounded by the games construction, structure and restrictions, yes. But that is not a simplistic cause and effect result.\u003C/p\u003E\u003Cp\u003EUnderstand what you are saying but that is a considerable over-simplification of a far more complex situation.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThis is because of the \u0022Average Joes\u0022 of the KSP community.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think we can have a sensible discussion without referring to people using such nomenclature.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAll rockets have fuel tanks.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is an oversimplification, and not a terrible accurate one, I am afraid.\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2015-02-26T05:21:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EIWould you call drawing a box on a sheet of paper procedural generation?\u003C/div\u003E\u003C/blockquote\u003ENo, that\u0027s not procedural. Procedural is telling the computer to build a part 3.75m wide by 10m tall with four sections each consisting of ten subdivisions.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EProcedural would be giving it a set of instructions that gives you a different result and then letting it do that.\u003C/div\u003E\u003C/blockquote\u003ENo, that\u0027s random generation. Procedural generation produces the same results from the same seed (in this case, the same player input).\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EThere is more than likely a fair amount of selection bias in the What Did You Do in KSP Today thread.\u003C/div\u003E\u003C/blockquote\u003ESo what? It proves the fact that many people design rockets differently than I do.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EChanging gameplay would interrupt many players build styles. That was what I was getting at.\u003C/div\u003E\u003C/blockquote\u003EInteresting. How about a new stock aerodynamic system? Re-entry heat? How about thrust being calculated correctly? How will that affect your build style? How did career mode affect your build style? KSP is still an unfinished product and the gameplay has continually changed since it has come out. It will be balanced again for 1.0 and many of the parts you know and love may not work the same.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EThere\u0027s a difference between ironing out a game, and changing the gameplay severly. The latter is more extreme than the former.\u003C/div\u003E\u003C/blockquote\u003EI think you\u0027re over-inflating the issue and that you have never used procedural parts. There are many changes coming in 1.0 that will affect gameplay \u003Cem\u003Eseverely\u003C/em\u003E, I hardly think introducing some procedural parts (most especially, tanks would be incredible!) will be as drastic a change as you think they will be.\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-26T05:28:20Z\u0022 title=\u002202/26/2015 05:28  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 26, 2015\u003C/time\u003E by regex\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Bill Phil","CreatedById":127797,"CreatedDateTime":"2015-02-26T05:36:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kofeyh\u0022 data-cite=\u0022kofeyh\u0022\u003E\u003Cdiv\u003EKSP isn\u0027t a clean-room, or a science experiment that requires people to not know what it is or to build in a specific function. This game does not feature a \u0022singularly correct\u0022 outcome to any given situation. This community willingly and freely shares ideas.\u003Cp\u003EMany people who start this game, stop. They stop because of the daunting part count. They stop because they can\u0027t figure out how to make a rocket. They stop because the game has less of a learning curve, and more of a precipitous cliff. Adding dozens of new parts doesn\u0027t address any of this. It just adds more parts, for the sake of it.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow does this address what I said? I was saying that when you watch people playing KSP you have introduced a selection bias, skewing the results.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis has been the response to any number of existing part balance issues. Just add a new one that\u0027s better. Because this is simpler than making an existing part more useful.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe variable nature of each individuals understanding (or lack) of physics, engineering and the degree of lateral thinking will automatically ensure no such outcome. This is bounded by the games construction, structure and restrictions, yes. But that is not a simplistic cause and effect result.\u003C/p\u003E\u003Cp\u003EUnderstand what you are saying but that is a considerable over-simplification of a far more complex situation.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEverybody falls somewhere on a curve, when you\u0027re measuring understanding of something. So, you can fairly accurately predict what they will build. You get even more accurate the more you know about the person. And there is a finite number of different types of people. People of the same type have subtle differences, but they think in very similar ways. Differences are inevitable. But most people are very similar. The rest are only a little bit less similar. People are surprisingly alike. It\u0027s weird.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI think we can have a sensible discussion without referring to people using such nomenclature.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo you have a problem with using terms like that? Because I think we CAN have a sensible discussion using such terms. You are simply choosing not to. (And also wasting bits)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis is an oversimplification, and not a terrible accurate one, I am afraid.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELet me rephrase: All KSP rockets have fuel tanks.\u003C/p\u003E\n"},{"CreatedByName":"NovaSilisko","CreatedById":3897,"CreatedDateTime":"2015-02-26T05:43:55Z","Content":"\n\u003Cp\u003EWhat the hell are we actually arguing about, again?\u003C/p\u003E\n"},{"CreatedByName":"kofeyh","CreatedById":39949,"CreatedDateTime":"2015-02-26T05:50:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NovaSilisko\u0022 data-cite=\u0022NovaSilisko\u0022\u003E\u003Cdiv\u003EWhat the hell are we actually arguing about, again?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhich way is \u0027up\u0027? Who knows.\u003C/p\u003E\n"},{"CreatedByName":"Bill Phil","CreatedById":127797,"CreatedDateTime":"2015-02-26T05:55:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022regex\u0022 data-cite=\u0022regex\u0022\u003E\u003Cdiv\u003ENo, that\u0027s not procedural. Procedural is telling the computer to build a part 3.75m wide by 10m tall with four sections each consisting of ten subdivisions.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn a text box, I presume?\u003C/p\u003E\u003Cp\u003EThat isn\u0027t exactly procedural either. You\u0027re telling it what to be, not giving it a seed. It wouldn\u0027t really have to use procedural generation for that. You could, in some other way, specify each thing on the object (the four sections, ten subdivisions thing). You\u0027re describing variable geometry fuel tanks/wings/fairings/whatever else.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ENo, that\u0027s random generation. Procedural generation produces the same results from the same seed (in this case, the same player input).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDifferent result as in it\u0027s not the same as another result for a different seed.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESo what? It proves the fact that many people design rockets differently than I do.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESort of. It proves that those people don\u0027t build like you.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EInteresting. How about a new stock aerodynamic system? Re-entry heat? How about thrust being calculated correctly? How will that affect your build style? How did career mode affect your build style? KSP is still an unfinished product and the gameplay has continually changed since it has come out. It will be balanced again for 1.0 and many of the parts you know and love may not work the same.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat will hardly change my style of play. I already account for all those things. Heck, it\u0027ll be fun re-learning the atmospheric physics of KSP.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI think you\u0027re over-inflating the issue and that you have never used procedural parts. There are many changes coming in 1.0 that will affect gameplay \u003Cem\u003Eseverely\u003C/em\u003E, I hardly think introducing some procedural parts (most especially, tanks would be incredible!) will be as drastic a change as you think they will be.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI never used PROCEDURAL parts because they don\u0027t really exist. They\u0027re not actually procedural.\u003C/p\u003E\u003Cp\u003EThere is quite a large difference between changing the atmospheric conditions or adding re-entry heat and \u0022procedural\u0022 parts. One affects flight, the other construction. A construction change would be harder to navigate around, so to say.\u003C/p\u003E\n"},{"CreatedByName":"federicoaa","CreatedById":94879,"CreatedDateTime":"2015-02-26T06:04:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NovaSilisko\u0022 data-cite=\u0022NovaSilisko\u0022\u003E\u003Cdiv\u003EWhat the hell are we actually arguing about, again?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eapparently, about the definition of a concept\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2015-02-26T06:08:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EThat isn\u0027t exactly procedural either. You\u0027re telling it what to be, not giving it a seed. It wouldn\u0027t really have to use procedural generation for that. You could, in some other way, specify each thing on the object (the four sections, ten subdivisions thing). You\u0027re describing variable geometry fuel tanks/wings/fairings/whatever else.\u003C/div\u003E\u003C/blockquote\u003EThat\u0027s still procedural content. It may be built via player input, but the artwork and statistics in-game is are produced via an algorithm (from the player\u0027s seed input) rather than, say, a hand-edited text file.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EThere is quite a large difference between changing the atmospheric conditions or adding re-entry heat and \u0022procedural\u0022 parts. One affects flight, the other construction. A construction change would be harder to navigate around, so to say.\u003C/div\u003E\u003C/blockquote\u003EWait, atmospheric conditions or re-entry heat won\u0027t affect construction? Oh man, there are going to be a \u003Cem\u003Eton\u003C/em\u003E of happy players when 1.0 rolls around!\n"},{"CreatedByName":"White Owl","CreatedById":10849,"CreatedDateTime":"2015-02-26T06:14:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NovaSilisko\u0022 data-cite=\u0022NovaSilisko\u0022\u003E\u003Cdiv\u003EWhat the hell are we actually arguing about, again?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOne guy said procedural fairings are very bad.\u003C/p\u003E\u003Cp\u003EOther people said they don\u0027t think they\u0027re bad, and wondered why the first guy thought they were bad.\u003C/p\u003E\u003Cp\u003EShortly after that point, control was lost and .... got weird. The crazy spiral commenced. Some people hung on for the ride, others ejected safely.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2015-02-26T06:32:36Z","Content":"\n\u003Cp\u003ETwo questions.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EWhat is the patcher?\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWhat is the problem with Rsync?\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"AlexinTokyo","CreatedById":104401,"CreatedDateTime":"2015-02-26T07:26:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EWhat is the patcher?\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA companion application to the launcher; it\u0027s intended to download any updates to the game that have been made available. My understanding is that it has never worked properly, and that, therefore, noone actually uses it.\u003C/p\u003E\n"},{"CreatedByName":"Pigbear","CreatedById":68791,"CreatedDateTime":"2015-02-26T07:35:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EIn a text box, I presume?\u003Cp\u003EThat isn\u0027t exactly procedural either. You\u0027re telling it what to be, not giving it a seed. It wouldn\u0027t really have to use procedural generation for that. You could, in some other way, specify each thing on the object (the four sections, ten subdivisions thing). You\u0027re describing variable geometry fuel tanks/wings/fairings/whatever else.\u003C/p\u003E\u003Cp\u003EDifferent result as in it\u0027s not the same as another result for a different seed.\u003C/p\u003E\u003Cp\u003ESort of. It proves that those people don\u0027t build like you.\u003C/p\u003E\u003Cp\u003EThat will hardly change my style of play. I already account for all those things. Heck, it\u0027ll be fun re-learning the atmospheric physics of KSP.\u003C/p\u003E\u003Cp\u003EI never used PROCEDURAL parts because they don\u0027t really exist. They\u0027re not actually procedural.\u003C/p\u003E\u003Cp\u003EThere is quite a large difference between changing the atmospheric conditions or adding re-entry heat and \u0022procedural\u0022 parts. One affects flight, the other construction. A construction change would be harder to navigate around, so to say.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m pretty sure you have no idea what you are talking about.\u003C/p\u003E\n"},{"CreatedByName":"cpast","CreatedById":112846,"CreatedDateTime":"2015-02-26T07:43:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EIn a text box, I presume?\u003Cp\u003EThat isn\u0027t exactly procedural either. You\u0027re telling it what to be, not giving it a seed. It wouldn\u0027t really have to use procedural generation for that. You could, in some other way, specify each thing on the object (the four sections, ten subdivisions thing). You\u0027re describing variable geometry fuel tanks/wings/fairings/whatever else.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u0022Procedural\u0022 doesn\u0027t really have a solid definition, but given that apparently tanks in the Procedural Parts mod work like \u0022set diameter and length and texture, and the tank adjusts to fit that,\u0022 and no one in the community has a problem calling those tanks \u0022procedural,\u0022 I think it\u0027s a bit pointless to try to maintain that \u0022telling it the appropriate diameter and height\u0022 isn\u0027t procedural. As far as I can tell, the term \u0022procedural\u0022 in the community basically means \u0022the part doesn\u0027t have a fixed size and shape, but rather dynamically generates the model and textures based on parameters that can be changed fairly easily\u0022 -- that is, the \u003Cem\u003Emodel\u003C/em\u003E (and textures) is procedural, and isn\u0027t limited to what someone made in Blender or other external software. Basically, the part model used ingame is dynamically generated by a subroutine (or \u0022procedure\u0022) at runtime, rather than set beforehand in 3D modeling software and just loaded straight into the game. And by that standard, \u0022sculpt this fairing that is then processed as one part and only shows as one part in the VAB menu\u0022 is certainly procedural. I think you\u0027re getting too hung up on Procedural Fairings and the way that does things, but \u003Cem\u003Eeven then\u003C/em\u003E you can tweak the shape of a PF fairing within certain parameters, and don\u0027t have to accept the automagically generated one.\u003C/p\u003E\u003Cp\u003EI admit the definition is sorta fuzzy; from the dev\u0027s point of view, something can be procedural and yet hardcoded, if it\u0027s easy to change (e.g. if one number controls terrain on Kerbin, it\u0027s procedural from their point of view but not from ours, because we can\u0027t change that number).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EDifferent result as in it\u0027s not the same as another result for a different seed.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m really confused what you mean here. If you supply different input to a PP or PF part, they produce different models. If you stick a different payload in a PF fairing, it defaults to a different model (yes, \u0022thing contained in this part\u0022 is \u003Cem\u003Eabsolutely\u003C/em\u003E an input in the same way that \u0022thing set by tweakables\u0022 is one; PF adjusts to both, proc tanks to the latter, these fairing seem to do input slightly differently, but all of them have some sort of input on the basis of which they create a model). \u0022Seed\u0022 is not a concept that has anything to do with procedures; a procedure has \u003Cem\u003Eparameters\u003C/em\u003E or \u003Cem\u003Earguments\u003C/em\u003E or \u003Cem\u003Einputs\u003C/em\u003E, but \u0022seed\u0022 is a term only applicable to a PRNG (or, I suppose, a plant). From that point of view, \u0022procedural\u0022 would be like \u0022procedural level generation\u0022 in other games, in which it\u0027s a shorthand for \u0022pseudorandom levels instead of handmade ones.\u0022 But that\u0027s not the only use of the term; PF and PP don\u0027t have \u0022seeds,\u0022 because the point isn\u0027t to be pseudorandom. I accept that you didn\u0027t introduce the term here AFAIK, but it\u0027s still not a term one would typically use. Incidentally, the real term used to describe a function that produces different output when given different input is \u0022not constant.\u0022\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESort of. It proves that those people don\u0027t build like you.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E...which was kinda his point? There are many people who post on the \u0022What have you done\u0022 thread. The fact that they don\u0027t tend to build like him establishes that his way of building is not the only way. I\u0027d wager that many build *very* differently from him, since he plays RSS\u002BFAR\u002BRealFuels\u002Bother realism stuff AFAIK, and so his rockets are presumably mostly less ridiculous-looking than what stock players can easily do. I don\u0027t see how this in any way goes against \u0022different people do stuff differently.\u0022\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThat will hardly change my style of play. I already account for all those things. Heck, it\u0027ll be fun re-learning the atmospheric physics of KSP.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBut there are plenty of people whose style it *will* change. So is the rule \u0022when Bill Phil already accounts for it you can add it, but otherwise no\u0022? You account for those things, but players who don\u0027t know how real rockets work likely have not a clue that engine thrust is lower at sea level than in orbit (they didn\u0027t think fuel consumption changed either, but since KSP so far changes fuel consumption they assume that\u0027s how it works), or that reentering in a steep orbit from Minmus is going to be fatal for their astronauts. \u003Cem\u003EColumbia\u003C/em\u003E probably helped public awareness of this, but how many regular players do you think act like you have to stick heat shields on everything when the 3-person capsule doesn\u0027t even *have* something that works like a heat shield? Given that currently the obvious way to recover, say, a Goo canister from orbit is no better than \u0022slap it on the side of a rocket and have it exposed to the full force on the atmosphere on reentry,\u0022 and there\u0027s no issue with doing that in stock, do you think that adding reentry heat will not change people\u0027s style of play? I mean, that makes the whole concept of recovering experiments very, very different, with a lot more consideration to the cross-section of the rocket.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI never used PROCEDURAL parts because they don\u0027t really exist. They\u0027re not actually procedural.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd here\u0027s the confusion. When everyone else on the entire forum uses the term \u0022procedural\u0022 one way, and you use it another way, then discussions are actually pretty much pointless -- you aren\u0027t even talking about the same thing as everyone else. You\u0027re hung up on \u0022procedural\u0022 meaning \u0022procedural generation based on pseudorandom seed,\u0022 but that\u0027s \u003Cem\u003Enot\u003C/em\u003E what the term means at all: all it means is that something is algorithmically generated based on input. Randomness is utterly irrelevant, and insisting on a definition of \u0022procedural\u0022 that no one else uses means you should probably reconsider if you want to discuss things.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThere is quite a large difference between changing the atmospheric conditions or adding re-entry heat and \u0022procedural\u0022 parts. One affects flight, the other construction. A construction change would be harder to navigate around, so to say.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow do you figure? We\u0027ve already had major changes in construction -- tweakables and gizmos (or do you think \u0022you can offset a part in any direction, including to clip it inside something else\u0022 \u003Cem\u003Eisn\u0027t\u003C/em\u003E a major change?) And it doesn\u0027t seem like this is even going to be too far a departure from current building -- you still control the shape of the fairing, just without having to use tons of individual parts and the standard generic VAB interface (you get a more optimized for the task one).\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-02-26T09:05:58Z","Content":"\n\u003Cp\u003EIf the mesh is loaded by the game, it\u0027s not procedural. If the mesh is created by the game, it\u0027s procedural. It\u0027s really simple...\u003C/p\u003E\n"},{"CreatedByName":"TheMoonRover","CreatedById":136199,"CreatedDateTime":"2015-02-26T09:55:18Z","Content":"\n\u003Cp\u003EFinally, someone who knows what they\u0027re talking about.\u003C/p\u003E\u003Cp\u003EI was starting to lose track of what people were arguing about.\u003C/p\u003E\n"}]}