{"TopicId":45467,"ForumId":20,"TopicTitle":"Mechjeb - How to make SASS chill out, stop wasting RCS, and shaking things apart.","CreatedByName":"Traches","CreatedById":79229,"CreatedDateTime":"2013-09-09T21:12:10Z","PageNum":1,"Articles":[{"CreatedByName":"Traches","CreatedById":79229,"CreatedDateTime":"2013-09-09T21:12:10Z","Content":"\n\u003Cp\u003EDisclaimer: PID tuning is a complicated field with entire textbooks devoted to it, of which I have read precisely zero. Everything here I learned from wikipedia, a rudimentary understanding of calculus, and some trial and error. My explanations probably range from \u0022not quite right\u0022 to \u0022exactly wrong\u0022. I\u0027m making this thread because I can\u0027t find one that explains mechjeb\u0027s attitude adjustment window, which is complete gibberish to anyone who hasn\u0027t seen a PID controller before, and can go a long way towards giving sassy a little finesse when flying various ships.\u003C/p\u003E\u003Cp\u003ESecond disclaimer: Don\u0027t come here looking for a debate on the merits of mechjeb and how other people want to play a single player sandbox game. That topic has been adequately discussed on these forums. \u003C/p\u003E\u003Cp\u003EMechjeb\u0027s SASS is what\u0027s known as a PID controller. Wikipedia\u0027s \u003Ca href=\u0022https://en.wikipedia.org/wiki/PID_controller\u0022 rel=\u0022external nofollow\u0022\u003Earticle\u003C/a\u003E on the subject has most of what you need to know, but I\u0027ll hit the important parts as they pertain to KSP here. These days, Attitude adjustment is one of my most used windows when allowing her to fly. \u003C/p\u003E\u003Cp\u003ESassy is basically a running algorithm that calculates a control input based the difference between your current and desired attitude, both instantaneously and over time. The Kp, Ki, and Kd settings determine the size of that correction. The Tf window determines how frequently she will recalculate a control input (Time per frame? I\u0027m not sure what it stands for), the Ki limit places a limit on the Ki (Integral) factor (more on that later), and the Factor, as best I can tell, is a multiplier for other terms. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EKp is your \u0022Proportional\u0022 term\u003C/strong\u003E. It\u0027s your instantaneous, \u0022right now\u0022 error. I try to set it at the lowest value that will track my desired attitude without overshooting back and forth past it. Higher numbers will give you more aggressive corrections. If it\u0027s too high you\u0027ll get more wobble, too low and she\u0027ll overshoot back and forth or possibly not make it to your desired attitude at all. Bigger numbers work well for bigger, less maneuverable rockets. Spaceplanes get veery small numbers, sometimes as low as 1 with a factor of 100.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EKi is your \u0022Integral\u0022 term\u003C/strong\u003E. It\u0027s a correction that builds up over time from a small, constant error. It allows for correction of small errors that wouldn\u0027t be caught by your Kp term. I\u0027ve never had a ship that needed a Ki term-- I pretty much always leave this at zero. If you do increase it, keep it very small compared to your Kp term or it will cause a lot of instability. There may be times when this is useful, I haven\u0027t played with it much. Perhaps combined with a low Ki_limit it could allow you to decrease your Kp term and wind up with a more stable rocket, but I haven\u0027t had much success with it. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EKd is your \u0022Derivative\u0022 term.\u003C/strong\u003E It\u0027s the slope of your error-- how quickly your error is changing. Once the Kp is set, I increase this value until the jiggling control inputs go away or until it\u0027s equal to your Kp term. Never set it higher than your Kp term or it\u0027ll get unstable. Frequently, for me, setting this equal to the Kp term gives the best results. This doesn\u0027t seem to help with overshooting-- usually that means that your Kd is too high or your Kp is too low. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ETf is how frequently she\u0027ll recalculate.\u003C/strong\u003E .15 is a good middle ground value, but adjusting it can help when dealing with a ship that flexes, or with varyingly responsive ships. Basically, if your rocket flexes back and forth at approximately the same rate that sassy is figuring control inputs, they\u0027ll resonate and you\u0027ll get more and more flex. .05 is the lowest (fastest) I go, and .3 is the absolute highest (slowest). Play with it until the wobbles go away. It\u0027s kinda like caffeine and sleeping pills for Sassy- Too slow and she\u0027ll be sluggish, too fast and you\u0027ll get control inputs jiggling all over the place. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EKi_limit is a limit to your integral term.\u003C/strong\u003ESince your Ki term builds up over time, this puts an upper limit to how much of a control input you\u0027ll get from it. Since I never use a Ki term, I never adjust this, and therefore can\u0027t provide much wisdom on setting it. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EFactor is a multiplier for the Kp, Ki, Kd, and possibly the Ki_limit terms.\u003C/strong\u003E (As best I can tell.) It can save you some zeros in the other boxes, or if you want to adjust things more precisely than I have patience for (i.e. closer than an order of magnitude) it can probably save you some time.\u003C/p\u003E\u003Cp\u003EIf you\u0027re tuning from scratch, I like to start with a Kp of 100000 or so, Ki and Kd of 0, a Tf of .15, and a factor of 100000. When adjusting Kp, Kd, and Factor, I just add or remove zeros until I get the result I want. The updates are instantaneous; as soon as you change a value in a box it\u0027s effective. You don\u0027t have to push enter or move the cursor anywhere. While tuning Sassy, I like to point her at a given direction (prograde, for example) and watch the control inputs she\u0027s making (staging mode, lower left corner). It can be helpful to move around to different aimpoints (normal \u002B and -, etc.) to figure out how well you\u0027re doing. It takes a little practice, but eventually you can tune up a rocket pretty quickly. I usually set Kp first, adjusting factor as well if necessary, then set Kd, then adjust my Tf if necessary. You\u0027re obviously not locked into any specific order; as you get some terms close problems in others may become more apparent. If you want to do a super quick and dirty tuning, say because your rocket is shaking itself to pieces and you don\u0027t have time to do it properly, you can just adjust the factor and Tf windows to get approximately close. \u003C/p\u003E\u003Cp\u003EHope this is helpful, and input\u0027s appreciated!\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2013-09-09T21:29:07Z","Content":"\n\u003Cp\u003EI use the builds Sarbian put out. No PID adjustables in it anymore, just Tf.\u003C/p\u003E\u003Cp\u003EI experimented with chAnging PID values extensively before, way back whenand never saw any change in RCS usage. Only the Sarbian builds had any beneficial effect on that\u003C/p\u003E\n"},{"CreatedByName":"Traches","CreatedById":79229,"CreatedDateTime":"2013-09-09T21:42:00Z","Content":"\n\u003Cp\u003EI\u0027ve actually had pretty good success with it, but i don\u0027t use auto-dock or auto-land. Haven\u0027t tried the sarbian build.\u003C/p\u003E\n"},{"CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2013-09-10T03:29:17Z","Content":"\n\u003Cp\u003EThanks for the in-depth explanation. I may have to dig into this now, although I may have to read your post a few times to comprehend it all.\u003C/p\u003E\n"}]}