{"TopicId":108762,"ForumId":29,"TopicTitle":"ConfigNode parser","CreatedByName":"Slother","CreatedById":142925,"CreatedDateTime":"2015-05-11T14:41:40Z","PageNum":1,"Articles":[{"CreatedByName":"Slother","CreatedById":142925,"CreatedDateTime":"2015-05-11T14:41:40Z","Content":"\n\u003Cp\u003EIs there an up-to-date parser available for the ConfigNode-format?\u003C/p\u003E\u003Cp\u003EPreferably in javascript (nodejs), but any language would do.\u003C/p\u003E\u003Cp\u003EAlso: Can somebody tell me what drove Squad to build a proprietary format in the first place?\u003C/p\u003E\u003Cp\u003EIt looks so similar to JSON and I can\u0027t think of something which their format can store but JSON can not. All the additional work for (de-)serialization for what?\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EIf there is none available I would go on and build one, but the format seems to be inconsistent when it comes to collections, or at least I can\u0027t see the difference:\u003C/p\u003E\u003Cp\u003EExample:\u003C/p\u003E\u003Cp\u003EThe collection of parts and modules in a .craft file are separate objects:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART\u003Cbr\u003E{\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E    }\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003EPART\u003Cbr\u003E{\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe events and actions within a module on the other hand are not separate:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EEVENTS\u003Cbr\u003E{\u003Cbr\u003E    Foo\u003Cbr\u003E    {\u003Cbr\u003E    }\u003Cbr\u003E    Bar\u003Cbr\u003E    {\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Slother","CreatedById":142925,"CreatedDateTime":"2015-05-12T01:22:30Z","Content":"\n\u003Cp\u003EWell, after a good amount of time spent, I think I have reverse engineered the format correctly.\u003C/p\u003E\u003Cp\u003EI will post the source of the parser as a nodejs module on GitHub soon. It has no dependencies so it could be used with plain javascript pretty much without any change. Porting it to another language should be fairly easy too.\u003C/p\u003E\u003Cp\u003EThe above examples would map to the following JSON:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E{\u003Cbr\u003E    name: \u0022\u0022\u003Cbr\u003E    nodes: [\u003Cbr\u003E        { name: \u0022PART\u0022, nodes: [], values:{} },\u003Cbr\u003E        { name: \u0022PART\u0022, nodes: [], values:{} }\u003Cbr\u003E    ],\u003Cbr\u003E    values: {}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E{\u003Cbr\u003E    name: \u0022EVENTS\u0022\u003Cbr\u003E    nodes: [\u003Cbr\u003E        { name: \u0022Foo\u0022, nodes: [], values:{} },\u003Cbr\u003E        { name: \u0022Bar\u0022, nodes: [], values:{} }\u003Cbr\u003E    ],\u003Cbr\u003E    values: {}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Slother","CreatedById":142925,"CreatedDateTime":"2015-05-13T16:38:06Z","Content":"\n\u003Cp\u003EThe source is available here: \u003Ca href=\u0022https://github.com/JcBernack/KerbalCraft/blob/master/KerbalCraftServer/config-node-parser.js\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/JcBernack/KerbalCraft/blob/master/KerbalCraftServer/config-node-parser.js\u003C/a\u003E\u003C/p\u003E\n"}]}