{"TopicId":163086,"ForumId":20,"TopicTitle":"KSP and Arduino - again.","CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-07-10T11:49:41Z","PageNum":1,"Articles":[{"CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-07-10T11:49:41Z","Content":"\n\u003Cp\u003E\nHey everyone.\n\u003C/p\u003E\n\u003Cp\u003E\nI wasn\u0027t entirely sure where to post this, but here it is.\n\u003C/p\u003E\n\u003Cp\u003E\nI am - like many others - making a physical KSP controller. In my case, with my uncle on the \u0022physical\u0022 part (soldering, connecting, wires, etc.).\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m doing all the \u0022digital\u0022 parts. I\u0027m using kRPC with python, connected to an Arduino mega, all using \u003Ca href=\u0022https://github.com/lawnmowerlatte/KAPCOM\u0022 rel=\u0022external nofollow\u0022\u003Elawnmowerlatte\u003C/a\u003E\u0027s python to Arduino framwork, using a serial connection. Our first prototype is working wonderfully, and we\u0027re planning out the full thing (it\u0027s going to be big). The aim is to be able to fly a mission with one person being mission control - having the map view. And the other being the pilot - only having an IVA view of a window.\n\u003C/p\u003E\n\u003Cp\u003E\nOur current prototype: \u003Ca href=\u0022http://i.imgur.com/Mcjt1aL.jpg\u0022 rel=\u0022external nofollow\u0022\u003EPrototype (how do you embed pictures?)\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis post serves not only to show you people what we\u0027ve been working on (as we think it\u0027s very cool), but also as a few questions:\n\u003C/p\u003E\n\u003Cp\u003E\n1. We\u0027d love to upgrade with another Arduino at one point, running a little screen with a rendering of a navball, similar to \u003Ca href=\u0022https://www.youtube.com/watch?v=RKJu6cfbFwM\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E. How should we go about this? Are there any resources available?\n\u003C/p\u003E\n\u003Cp\u003E\n2. We\u0027re worried that our endless Python loop will be running so many button checks and kRPC calls, that the delay on things like single button presses and 7-segment screen updates will be too much. Will this be a problem and/or how would one work around it?\n\u003C/p\u003E\n\u003Cp\u003E\nThank you for reading \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n-FP\n\u003C/p\u003E\n"},{"CreatedByName":"ThomasD","CreatedById":169915,"CreatedDateTime":"2017-07-10T21:40:15Z","Content":"\n\u003Cp\u003E\n1. You could use kRPC for this. Combine it with a python module that renders graphics (pygame/kivy or whatever)\u00A0based on the streaming telemetry data updates from kRPC. I used kivy to provide a 2d view of the orbit around a body based on apoapsis \u0026amp; periapsis state - perhaps you could do similar with the heading data?\n\u003C/p\u003E\n\u003Cp\u003E\n2. You could use a separate thread to deal with the UI side of things and another thread to deal with the kRPC telemetry. I made a wrapper around the kRPC stuff using asyncio to do this using coroutines with my kivy interface. It is all stuff I wrote for fun and uncommented/unprofessional\u00A0but I\u0027d be happy to share - perhaps via the kRPC examples github.\n\u003C/p\u003E\n\u003Cp\u003E\nTom.\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-07-10T22:31:48Z","Content":"\n\u003Cp\u003E\nThis looks fun! \u00A0I\u0027ve got a start on a ksp simpit myself that is going to be \u0027big\u0027 too! \u00A0 But mine gets stalled as i get distracted. \u00A0 My daughter\u0027s only a year old though, so it\u0027ll be up and running before she\u0027s old enough to enjoy it with me! \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll look into lawnmowerlatte\u0027s python to arduino bits - I am working on an example repository for KRPC scripts, and was going to do a KRPC to Arduino example using pyserial to get the data out via my own protocol, but seeing that someone\u0027s already done a KSP specific version here, I will do some research to see if I should be using it instead for the example. \u00A0 My criteria for deciding that, and the criteria I\u0027d recommend you use for deciding if you\u0027re using it is the overhead. \u00A0I think more than the python loop slowing you down, the baudrate of the serial connection to the arduino could be your bottleneck. \u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s no reason that pyserial couldn\u0027t be talking to two different arduinos, but without looking at lawnmowerlatte\u0027s code I don\u0027t know if his system is set up to make that easy or not? You can absolutely connect multiple python (or other language) clients to one KRPC server instance at the same time, so hypothetically you could have two different python scripts, each pointed at a different serial port and each grabbing or passing different data via KRPC, which would be one way to make your application \u0027multithreaded,\u0027 and tighten up each of the loops to minimize lag from the serial connection or python interpreter execution? \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHaving the most efficient protocol possible and putting the processing jobs spread out between the various processors is going to minimize your lag the most. \u00A0Instead of polling buttons in python, it would be better to have the Arduino do that and have it send them as efficiently as possible to the python script... for example as a bit mask, so it would only take 2 bytes of serial data to pass in 16 button states? \u00A0Plus the libraries and techniques for debouncing and such are well established for Arduino. \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0I\u0027ve never played with true multi-threading in python, but it exists- \u00A0so it would also be possible for you to move communication to a \u0027background thread\u0027 and use what you\u0027d consider the \u0027main or foreground\u0027 loop to do higher level processing?\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s also the possibility of hitting a KRPC bottleneck too... \u00A0if you\u0027re trying to pull A LOT of data out at a high rate. \u00A0 I know that setting a refresh rate for streams is something that\u0027s on the long term plan for KRPC but I don\u0027t think that feature is actively being developed. \u00A0 I think compiling a list of all the data you want out of KRPC is a good first step, then assigning a realistic \u0027minimum polling rate\u0027 for each of those fields - you may need orientation data as fast as you can get it, but you probably DON\u0027T need lattitude and longitude any faster than once a second- \u00A0from this \u0027prioritized list\u0027 we can figure out the most efficient way to communicate with KRPC - what items should be retrieved via a stream and what should be retrieved via repeated polling.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 My advice on pretty much ALL of this is\u00A0\u00A0keep soldiering on without it... \u00A0until the lag becomes a problem, and then let\u0027s figure out where it\u0027s coming from and how to open up that bottleneck. \u00A0Glad to see you working on this! \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-08-28T23:00:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223116984\u0022 data-ipsquote-contentid=\u0022163086\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221499722815\u0022 data-ipsquote-userid=\u0022169915\u0022 data-ipsquote-username=\u0022ThomasD\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 7/10/2017 at 11:40 PM, ThomasD said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n1. You could use kRPC for this. Combine it with a python module that renders graphics (pygame/kivy or whatever)\u00A0based on the streaming telemetry data updates from kRPC. I used kivy to provide a 2d view of the orbit around a body based on apoapsis \u0026amp; periapsis state - perhaps you could do similar with the heading data?\n\u003C/p\u003E\n\u003Cp\u003E\n2. You could use a separate thread to deal with the UI side of things and another thread to deal with the kRPC telemetry. I made a wrapper around the kRPC stuff using asyncio to do this using coroutines with my kivy interface. It is all stuff I wrote for fun and uncommented/unprofessional\u00A0but I\u0027d be happy to share - perhaps via the kRPC examples github.\n\u003C/p\u003E\n\u003Cp\u003E\nTom.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSorry for the (way way waaaay too) late reply. I\u0027d love to see how you\u0027ve done this if you\u0027d want to share your code \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n"}]}