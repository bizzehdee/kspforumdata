{"TopicId":22972,"ForumId":34,"TopicTitle":"[0.90] ProgCom - CPU Emulator V0.11.1","CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-04-19T22:57:47Z","PageNum":4,"Articles":[{"CreatedByName":"frash23","CreatedById":69988,"CreatedDateTime":"2013-06-10T20:48:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eyecikjou567\u0022 data-cite=\u0022eyecikjou567\u0022\u003E\u003Cdiv\u003ENever.\u003Cp\u003ELinux does run on intel or intel-compatible cpus.\u003C/p\u003E\u003Cp\u003EThere are other linux compatible kernels for ppc and arm but\u003C/p\u003E\u003Cp\u003Ethis cpu has not enough power and the ISA is to low for a full kernel or\u003C/p\u003E\u003Cp\u003Eoperating system.\u003C/p\u003E\u003Cp\u003ENo offence to simplysimon, but this cpu (or better the envoirment) is designed for batch\u003C/p\u003E\u003Cp\u003Eprocessing and maybe a very very small disk os (dos).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI haven\u0027t read the rest of the post, but not even \u003Ca href=\u0022http://www.uclinux.org/\u0022 rel=\u0022external nofollow\u0022\u003EuClinux\u003C/a\u003E?\u003C/p\u003E\u003Cp\u003ERunning a NES emulator on that would be hilarious \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 alt=\u0022:sticktongue:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2013-06-10T21:23:42Z","Content":"\n\u003Cp\u003EThere doesn\u0027t seem to be any facility for memory remapping or partitioning, but the timer interrupt is all you need for multitasking. There\u0027s enough to work with that someone could implement stdlib and a POSIX system, if they were inclined.\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-06-10T23:59:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thewonderidiot\u0022 data-cite=\u0022thewonderidiot\u0022\u003E\u003Cdiv\u003EHey there, I just found this mod yesterday and have to say, it\u0027s amazing! Exactly what I\u0027ve been hoping for in a mod. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cp\u003EI\u0027ve got a few questions (these may have already been answered before the Great Forum Crash of 2013, so forgive me if I\u0027m making you repeat yourself):\u003C/p\u003E\u003Cp\u003E1) Why do the speed/velocity measurements have a separate, hardcoded scale factor? Is there any reason why we can\u0027t adjust it like we can the position/attitude factor?\u003C/p\u003E\u003Cp\u003E2) I agree that a fuel level sensor would be very nice to have -- is this the sort of thing you think would be done with the serial interface, or would it be better memory-mapped along with the attitude/altitude/velocity information? As a followup, if you think it would be better with serial, what\u0027s the dividing line between memory-mapped values and external serial-interfaced values?\u003C/p\u003E\u003Cp\u003E3) Can we get the ability to specify a startup program? It would be pretty great to have the computer load a default program without having to type \u0022load run xxxx\u0022 every time. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E4) And finally, are you accepting pull requests on github? I wouldn\u0027t mine taking a whack at some of this stuff. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1) I just kind of haven\u0027t gotten around to it yet. All the code I\u0027ve used have been fairly ok with the current precision so it hasn\u0027t felt like a priority. I should probably implement it, it should be fairly easy.\u003C/p\u003E\u003Cp\u003EThe fixed point vector stuff in general was initially only meant as a solution to the problem of \u0022I don\u0027t have floating point numbers yet\u0022, and since I have implemented floating point numbers now I should probably just change all vectors to use those instead (IIRC floating point support has been in every released version of progcom so I really don\u0027t have an excuse). I\u0027ve been putting it off since it is fairly easy to convert the vectors to floating point numbers, and changing it would require me to A) do some rewriting in a bunch of places, \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E change how all the example code works, and C) break all code everyone has written for this mod that references those vectors.\u003C/p\u003E\u003Cp\u003E2) I think that it would be better implemented as a serial interface thing, since then you could could implement it as an external part and do stuff like measure fuel levels in specific stages or fuel tanks instead of some hardcoded behaviour.\u003C/p\u003E\u003Cp\u003EI don\u0027t really have a set-in-stone way of determining serial vs memory-mapped. Things which are separate parts would of course require the serial interface, since that is the only way to interface to ProgCom from \u0022the outside\u0022. Other than that, the memory mapped stuff is from things that I feel could be present \u0022on chip\u0022 as it were, accelerometers and other small components, while the keyboard is \u0022separate\u0022 so it is connected through the serial cable (plus, I needed something to demonstrate the serial stuff). It is not a perfect definition, but it is what I try to follow when adding features (or \u003Cem\u003Ewill\u003C/em\u003E follow, since the serial stuff was implemented this version).\u003C/p\u003E\u003Cp\u003E3) I could implement that, but it would probably have to wait until the non-volatile memory stuff since I plan to do a rewrite of program loading once I get to that. I suppose if you insert a tape/disc/whatever into the computer it would still be there when you restart.\u003C/p\u003E\u003Cp\u003E4) I accept pull requests, yes \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"thewonderidiot","CreatedById":63421,"CreatedDateTime":"2013-06-11T16:57:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003E1) I just kind of haven\u0027t gotten around to it yet. All the code I\u0027ve used have been fairly ok with the current precision so it hasn\u0027t felt like a priority. I should probably implement it, it should be fairly easy.\u003Cp\u003EThe fixed point vector stuff in general was initially only meant as a solution to the problem of \u0022I don\u0027t have floating point numbers yet\u0022, and since I have implemented floating point numbers now I should probably just change all vectors to use those instead (IIRC floating point support has been in every released version of progcom so I really don\u0027t have an excuse). I\u0027ve been putting it off since it is fairly easy to convert the vectors to floating point numbers, and changing it would require me to A) do some rewriting in a bunch of places, \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E change how all the example code works, and C) break all code everyone has written for this mod that references those vectors.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, that makes sense! \u00A9 kind of sucks though.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E2) I think that it would be better implemented as a serial interface thing, since then you could could implement it as an external part and do stuff like measure fuel levels in specific stages or fuel tanks instead of some hardcoded behaviour.\u003C/p\u003E\u003Cp\u003EI don\u0027t really have a set-in-stone way of determining serial vs memory-mapped. Things which are separate parts would of course require the serial interface, since that is the only way to interface to ProgCom from \u0022the outside\u0022. Other than that, the memory mapped stuff is from things that I feel could be present \u0022on chip\u0022 as it were, accelerometers and other small components, while the keyboard is \u0022separate\u0022 so it is connected through the serial cable (plus, I needed something to demonstrate the serial stuff). It is not a perfect definition, but it is what I try to follow when adding features (or \u003Cem\u003Ewill\u003C/em\u003E follow, since the serial stuff was implemented this version).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESounds good. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I really like the idea of having one fuel sensor per tank idea, but it would probably fill up your serial interfaces really quickly -- maybe there could be a dedicated fuel sensor controller that would interface over serial to ProgCom, which collects and passes along information from all fuel sensors on the vehicle. That way you would only need to take up a single serial line (just thinking out loud here... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E3) I could implement that, but it would probably have to wait until the non-volatile memory stuff since I plan to do a rewrite of program loading once I get to that. I suppose if you insert a tape/disc/whatever into the computer it would still be there when you restart.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep, that would be perfect! You could just check for some type of valid boot record at the beginning of the nonvolatile memory and use it if it\u0027s there \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"thewonderidiot","CreatedById":63421,"CreatedDateTime":"2013-06-11T17:42:34Z","Content":"\n\u003Cp\u003EWhoops, double post. Ignore.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-11T18:31:56Z\u0022 title=\u002206/11/2013 06:31  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 11, 2013\u003C/time\u003E by thewonderidiot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-06-12T15:06:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thewonderidiot\u0022 data-cite=\u0022thewonderidiot\u0022\u003E\u003Cdiv\u003EAh, that makes sense! \u00A9 kind of sucks though.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah. I suppose I could implement a second set of variables, but that seems like a suboptimal solution. I\u0027ll probably keep it as it is unless I discover some crippling flaw with the current system.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thewonderidiot\u0022 data-cite=\u0022thewonderidiot\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESounds good. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I really like the idea of having one fuel sensor per tank idea, but it would probably fill up your serial interfaces really quickly -- maybe there could be a dedicated fuel sensor controller that would interface over serial to ProgCom, which collects and passes along information from all fuel sensors on the vehicle. That way you would only need to take up a single serial line (just thinking out loud here... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, the issue of \u0022not enough interfaces\u0022 would need to be solved somehow. That would probably be a good solution. If you knew the ammount of fuel in a stage and your fuel consumption you could also bypass fuel sensors by doing some sort of integration in software. It could be tricky to make that work properly though.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thewonderidiot\u0022 data-cite=\u0022thewonderidiot\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EYep, that would be perfect! You could just check for some type of valid boot record at the beginning of the nonvolatile memory and use it if it\u0027s there \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll probably do something along those lines. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2013-06-12T16:10:56Z","Content":"\n\u003Cp\u003EFor the fuel you could write to it the number of a fuel tank and it would write back the fuel in that tank.\u003C/p\u003E\n"},{"CreatedByName":"tallman","CreatedById":67277,"CreatedDateTime":"2013-06-12T21:48:56Z","Content":"\n\u003Cp\u003ELooks like I should read about this GIT to understand how to upload code to your repository.\u003C/p\u003E\u003Cp\u003EI have a simple LED blinker and a PI-throttle-controller for maintaining zero vertical speed (i.e. it is not starting-and-stopping engine, like \u003Cem\u003Enavigator.txt\u003C/em\u003E do, but tunes the throttle to compensage the gravity).\u003C/p\u003E\u003Cp\u003EI propose the structure for community code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003ESpecial folder \u003Cem\u003E~/communitycode/\u003C/em\u003E should be introduced for this\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EEvery program and every library should be in separate directory. This directory will have all the files with code, examples, manuals, crafts for testing, copyright notices and so on and so on.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDirectory for library should be named following pattern \u003Cem\u003Elib-something\u003C/em\u003E (\u003Cem\u003E~/communitycode/lib-vectors\u003C/em\u003E for example)\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI propose to not separate this directory by authors. It\u0027s possible to mention autorship in manual or whotsoever, but united space will stimulate us to (re)use code of their neigbours.\u003C/p\u003E\n"},{"CreatedByName":"tallman","CreatedById":67277,"CreatedDateTime":"2013-06-12T21:51:12Z","Content":"\n\u003Cp\u003EDo anyone have ideas for using of the graphical display ProgCom has?\u003C/p\u003E\u003Cp\u003EI mean, one can always implement Life or whotsoever, but what about ideas of using it for something useful?\u003C/p\u003E\u003Cp\u003EI want to have some experience with this screen, and I\u0027ll be happy if someone will propose some interesting idea for testing.\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-06-14T23:33:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tallman\u0022 data-cite=\u0022tallman\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI propose the structure for community code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003ESpecial folder \u003Cem\u003E~/communitycode/\u003C/em\u003E should be introduced for this\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EEvery program and every library should be in separate directory. This directory will have all the files with code, examples, manuals, crafts for testing, copyright notices and so on and so on.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDirectory for library should be named following pattern \u003Cem\u003Elib-something\u003C/em\u003E (\u003Cem\u003E~/communitycode/lib-vectors\u003C/em\u003E for example)\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI propose to not separate this directory by authors. It\u0027s possible to mention autorship in manual or whotsoever, but united space will stimulate us to (re)use code of their neigbours.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat seems like it would work. If nobody has any objections, I can put the folder on the github repo.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tallman\u0022 data-cite=\u0022tallman\u0022\u003E\u003Cdiv\u003EDo anyone have ideas for using of the graphical display ProgCom has?\u003Cp\u003EI mean, one can always implement Life or whotsoever, but what about ideas of using it for something useful?\u003C/p\u003E\u003Cp\u003EI want to have some experience with this screen, and I\u0027ll be happy if someone will propose some interesting idea for testing.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI guess some kind of orbit display could be interesting, show periapsis/apoapsis, the shape of the orbit and position of the ship. The map does that already, but it would be interesting to see if it could be implemented in progcom.\u003C/p\u003E\n"},{"CreatedByName":"tallman","CreatedById":67277,"CreatedDateTime":"2013-06-15T07:53:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003EI guess some kind of orbit display could be interesting, show periapsis/apoapsis, the shape of the orbit and position of the ship. The map does that already, but it would be interesting to see if it could be implemented in progcom.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, it needs a lot of trigonometric calculations. Which, in turn, needs a lot of tables, interpolation and so on. Therefore, it will be more experiment with implementing of a trigonometry, rather that experimenting with monitor \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-06-15T13:32:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tallman\u0022 data-cite=\u0022tallman\u0022\u003E\u003Cdiv\u003EWell, it needs a lot of trigonometric calculations. Which, in turn, needs a lot of tables, interpolation and so on. Therefore, it will be more experiment with implementing of a trigonometry, rather that experimenting with monitor \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are probably right. I don\u0027t really know what else to use the screen for, perhaps draw some graphs?\u003C/p\u003E\n"},{"CreatedByName":"joppiesaus","CreatedById":57698,"CreatedDateTime":"2013-06-15T15:06:49Z","Content":"\n\u003Cp\u003EWow. This is actually handy and cool. You can code your own stuff in game!\u003C/p\u003E\n"},{"CreatedByName":"thewonderidiot","CreatedById":63421,"CreatedDateTime":"2013-06-16T05:15:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003EYeah. I suppose I could implement a second set of variables, but that seems like a suboptimal solution. I\u0027ll probably keep it as it is unless I discover some crippling flaw with the current system.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmm, okay. I\u0027m probably going to make a branch that just uses floats for all of the values, so if you ever change your mind (or have some update in the future that breaks backwards compatibility anyways), it\u0027ll be there. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnyways, I\u0027ve never used C# or built a plugin for KSP before, so I started off with something fairly simple -- I added support for hex and binary literals pretty much everywhere a user can use a number in their program (all using a generic function as a wrapper around the various Convert.ToXXX methods). I tend to think in hex a lot, so being able to load immediate hex numbers is nice. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I pushed the changeset out to my fork, and, depending on how you like to do your project management workflow, can issue a pull request for it if you would like.\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-06-16T19:06:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thewonderidiot\u0022 data-cite=\u0022thewonderidiot\u0022\u003E\u003Cdiv\u003EHmm, okay. I\u0027m probably going to make a branch that just uses floats for all of the values, so if you ever change your mind (or have some update in the future that breaks backwards compatibility anyways), it\u0027ll be there. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EAnyways, I\u0027ve never used C# or built a plugin for KSP before, so I started off with something fairly simple -- I added support for hex and binary literals pretty much everywhere a user can use a number in their program (all using a generic function as a wrapper around the various Convert.ToXXX methods). I tend to think in hex a lot, so being able to load immediate hex numbers is nice. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I pushed the changeset out to my fork, and, depending on how you like to do your project management workflow, can issue a pull request for it if you would like.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGreat! I looked through the changes and it looks good. If you issue the pull request I can test if everything works and release the next update as soon as possible. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"thewonderidiot","CreatedById":63421,"CreatedDateTime":"2013-06-16T22:21:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003EGreat! I looked through the changes and it looks good. If you issue the pull request I can test if everything works and release the next update as soon as possible. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDone! I just realized that there\u0027s a bit of wonky brace-formatting in the Util.parseTo() -- I thought I had all of the format settings right in Visual Studio but it looks like I missed one, and it reformatted stuff on me right before I committed. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E Got that fixed now. And I just noticed that you added in a GLOBAL_SPEEDACCURACY -- thanks! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-06-16T23:26:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thewonderidiot\u0022 data-cite=\u0022thewonderidiot\u0022\u003E\u003Cdiv\u003EDone! I just realized that there\u0027s a bit of wonky brace-formatting in the Util.parseTo() -- I thought I had all of the format settings right in Visual Studio but it looks like I missed one, and it reformatted stuff on me right before I committed. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E Got that fixed now. And I just noticed that you added in a GLOBAL_SPEEDACCURACY -- thanks! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt seems like everything works, I only found one minor issue which was easily fixed.\u003C/p\u003E\u003Cp\u003EThus, we are now on version 0.8.1!\u003C/p\u003E\u003Cp\u003EAdded a few new instructions, better strings and some more!\u003C/p\u003E\u003Cp\u003ENext update will probably be the nonvolatile memory, which will probably try to emulate a tape drive. I might also make some changes to the cache memory, I\u0027m not really satisfied with how that works at the moment.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-17T12:55:30Z\u0022 title=\u002206/17/2013 12:55  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 17, 2013\u003C/time\u003E by SimplySimon\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-06-17T20:51:03Z","Content":"\n\u003Cp\u003EMinor update:\u003C/p\u003E\u003Cp\u003EI added a radial part and put the \u0022communitycode\u0022 folder up on the github repository.\u003C/p\u003E\n"},{"CreatedByName":"tallman","CreatedById":67277,"CreatedDateTime":"2013-06-18T06:17:23Z","Content":"\n\u003Cp\u003E\u003Cem\u003EchangeLog.txt\u003C/em\u003E: \u0022you should now be able to use hexadecimal and binary constants\u0022.\u003C/p\u003E\u003Cp\u003EBut one can only see hexadecimal example in \u003Cem\u003Einstructionset.txt\u003C/em\u003E , and no binary.\u003C/p\u003E\n"},{"CreatedByName":"xorg","CreatedById":9497,"CreatedDateTime":"2013-06-19T20:26:57Z","Content":"\n\u003Cp\u003EBest mod ever!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/XEWfaCJHxqw?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n"},{"CreatedByName":"bulletrhli","CreatedById":55960,"CreatedDateTime":"2013-06-19T20:49:34Z","Content":"\n\u003Cp\u003EI have absolutely no idea how to work with mod..\u003C/p\u003E\n"},{"CreatedByName":"rainerd66","CreatedById":71711,"CreatedDateTime":"2013-06-21T11:42:50Z","Content":"\n\u003Cp\u003EWhat a great idea!\u003C/p\u003E\u003Cp\u003EAny chance it could be combined with Damned Robotics?\u003C/p\u003E\u003Cp\u003EMaybe some sensors would be great, too!\u003C/p\u003E\u003Cp\u003EWhat do you think?\u003C/p\u003E\n"},{"CreatedByName":"skykooler","CreatedById":60459,"CreatedDateTime":"2013-06-21T14:20:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022xorg\u0022 data-cite=\u0022xorg\u0022\u003E\u003Cdiv\u003EBest mod ever!\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/XEWfaCJHxqw?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWow, this is only a few steps from a Kerbal Grasshopper!\u003C/p\u003E\n"},{"CreatedByName":"HoneyFox","CreatedById":19237,"CreatedDateTime":"2013-06-21T15:11:06Z","Content":"\n\u003Cp\u003EHmm... I\u0027ve written another simple script interpreter several weeks ago...\u003C/p\u003E\u003Cp\u003EAnd i wonder if i should show it here so that you can consider use something from it.\u003C/p\u003E\u003Cp\u003EAnyway i post the url here... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/HoneyFox/AsmInterpreter/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/HoneyFox/AsmInterpreter/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"khyperia","CreatedById":25539,"CreatedDateTime":"2013-06-22T00:10:46Z","Content":"\n\u003Cp\u003EYou know what would be really great... is if ProgCom was no longer interpreted, but rather compiled in-memory.\u003C/p\u003E\u003Cp\u003EIt\u0027s really simple to do. Only problem is compatibility, but hey, most people have x86 nowadays, so say \u0022screw you\u0022 to all the other people \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EBasically, \u003Ca href=\u0022http://stackoverflow.com/a/959144/901037\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://stackoverflow.com/a/959144/901037\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ll put into English words what that code is doing.\u003C/p\u003E\u003Cp\u003EYou take a byte[] array, standard C#, normal stuff. You fill it with binary machine code opcodes doing literally whatever you want it to do. You copy it over to a section of memory with the executable bit set. You convert it to a delegate. \u003Cem\u003EYou call it.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EEssentially, executing \u003Cem\u003Eraw machine code\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EAlso, that is \u003Cem\u003Ereally terrifying\u003C/em\u003E that it is \u003Cem\u003Eso simple and easy\u003C/em\u003E to do something like that. Like, \u003Cstrong\u003Eseriously\u003C/strong\u003E terrifying.\u003C/p\u003E\u003Cp\u003EEdit: You can also use Reflection.Emit, but that\u0027s boring \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"}]}