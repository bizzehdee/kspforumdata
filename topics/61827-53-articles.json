{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":53,"Articles":[{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-08-14T09:17:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022WeirdCulture\u0022 data-cite=\u0022WeirdCulture\u0022\u003E\u003Cdiv\u003EI know, and i need the numbers of seconds \u0022behind\u0022 the Apoapsis\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eship:obt:period - eta:apoapsis gives you the time past apoapsis.\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-14T09:58:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022amiavamp\u0022 data-cite=\u0022amiavamp\u0022\u003E\u003Cdiv\u003E \u0026lt;snip\u0026gt; Of course, now my ascent autopilot is over 3000 bytes. I suppose one way to shrink a program is to split it into separate programs to function as modules to do repetitive code.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnother way (unless this is what you\u0027re talking about) is to break the code up sequentially, and have two successive sequences loaded simultaneously, then just add a couple lines that erase the last unused section and then upload the next section all at the beginning of the section in use. To minimize (theoretical and/or actual) load times you could also isolate the routines that are used by most or all sequences and simply keep them loaded from the beginning (although that might increase the memory overhead a bit).\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-14T10:16:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022WeirdCulture\u0022 data-cite=\u0022WeirdCulture\u0022\u003E\u003Cdiv\u003EI know, and i need the numbers of seconds \u0022behind\u0022 the Apoapsis\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs \u002215\u0022 one example answer for the number you were querying for, rather than a given you know ahead of time? It didn\u0027t look like that way you phrased it. What you asked for was \u0022I want to know how to get something like 15 seconds behind apoapsis\u0022, which sounded like you meant you already know you want \u002215 seconds behind apoapsis\u0022 and are querying for what that number would be, which is ETA:APOAPSIS\u002B15.\u003C/p\u003E\u003Cp\u003ESo you have some point in mind and want to query to find out whether or not that point is 15 seconds after the apoapsis? I\u0027m not following you.\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-15T07:38:18Z","Content":"\n\u003Cp\u003Ei like this mod, but the documentation seems out of date (even on the \u0022newer\u0022 documentation). Do sensors work? I can\u0027t seem to get [print ship:sensors:acc:readout.] to do anything, and attempting to print without the readout just gives what I assume is the part\u0027s location/orientation.... also the sensor dump example doesn\u0027t work as shown (not to mention that it seems silly to use a list if you only need data from one sensor).\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-15T07:48:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIs \u002215\u0022 one example answer for the number you were querying for, rather than a given you know ahead of time? It didn\u0027t look like that way you phrased it. What you asked for was \u0022I want to know how to get something like 15 seconds behind apoapsis\u0022, which sounded like you meant you already know you want \u002215 seconds behind apoapsis\u0022 and are querying for what that number would be, which is ETA:APOAPSIS\u002B15.\u003Cp\u003ESo you have some point in mind and want to query to find out whether or not that point is 15 seconds after the apoapsis? I\u0027m not following you.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt was already answered, but from what I understand, what he was looking for was a way to query how many seconds *behind* the vessel the apoapsis is at a given moment. IE: I want to go to apoapsis, wait an amount of time (so that I\u0027m coming back down), and then do something... so I know how long after apoapsis I want to wait, but I need to know how long it\u0027s been since apoapsis to compare the two. (kinda like how when you pass maneuver nodes it switches from T-\u0022some time\u0022 to T\u002B\u0022some time\u0022. He was looking for a T\u002B\u0022some time\u0022 for his apoapsis.)\u003C/p\u003E\u003Cp\u003EPersonally it seems like it would\u0027ve been much simpler to just set a timer while at apoapsis and wait the specified amount of time (rather than constantly reading apoapsis eta and orbital periods, which seem like they might be computationally expensive) especially since (regardless of apoapsis eta and orbital period measurements) time is really what you\u0027re wanting to measure.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-15T08:41:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022impyre\u0022 data-cite=\u0022impyre\u0022\u003E\u003Cdiv\u003Ei like this mod, but the documentation seems out of date (even on the \u0022newer\u0022 documentation). Do sensors work? I can\u0027t seem to get [print ship:sensors:acc:readout.] to do anything, and attempting to print without the readout just gives what I assume is the part\u0027s location/orientation.... also the sensor dump example doesn\u0027t work as shown (not to mention that it seems silly to use a list if you only need data from one sensor).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s not out of date. It\u0027s just that it was never tested. There\u0027s a LOT to document and running each and every example is very time consuming, and a lot of the time I was documenting code I hadn\u0027t written myself.\u003C/p\u003E\u003Cp\u003EI just tested it and I see what\u0027s wrong with it.\u003C/p\u003E\u003Cp\u003EIn this case the error was the use of the word \u0022sensor\u0022 as the variable name. \u0022Sensor\u0022 is already a reserved word. In general, kOS doesn\u0027t have a good way to throw errors on using keywords as variable names right now. I think it should, but it doesn\u0027t.\u003C/p\u003E\u003Cp\u003ESo where the documentation says this:\u003C/p\u003E\u003Cp\u003EFOR SENSOR IN SENSELIST {\u003C/p\u003E\u003Cp\u003E PRINT \u0022SENSOR \u0022 \u002B SENSOR:TYPE \u002B \u0022: ACTIVE = \u0022 \u002B SENSOR:ACTIVE \u002B \u0022 VALUE = \u0022 \u002B SENSOR:READOUT.\u003C/p\u003E\u003Cp\u003E}.\u003C/p\u003E\u003Cp\u003ETry replacing the word \u0022SENSOR\u0022 with anything else, like \u0022SEN\u0022, and then it works:\u003C/p\u003E\u003Cp\u003EFOR SEN IN SENSELIST {\u003C/p\u003E\u003Cp\u003E PRINT \u0022SENSOR \u0022 \u002B SEN:TYPE \u002B \u0022: ACTIVE = \u0022 \u002B SEN:ACTIVE \u002B \u0022 VALUE = \u0022 \u002B SEN:READOUT.\u003C/p\u003E\u003Cp\u003E}.\u003C/p\u003E\u003Cp\u003EAs far as having to get the list each time, you can just get the list once, find the sensor you want, and then just use that from then on, like so:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Find the accelerometer sensor and keep a handle to it:\u003Cbr\u003E// ----------------------------------------------------\u003Cbr\u003ELIST SENSORS IN SENSELIST.\u003Cbr\u003ESET HAS_ACC_SENSOR TO FALSE.\u003Cbr\u003EFOR SEN IN SENSELIST {\u003Cbr\u003E  IF SEN:TYPE = \u0022ACC\u0022 {\u003Cbr\u003E    SET ACC_SEN TO SEN.\u003Cbr\u003E    SET HAS_ACC_SENSOR TO TRUE.\u003Cbr\u003E  }.\u003Cbr\u003E}.\u003Cbr\u003E// FROM THEN ON, if HAS_ACC_SENSOR is TRUE, that means you can read the accelerometer with ACC_SEN:Readout.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBUT, There is an important caveat with this - you get the values as a TEXT readout, not as a number. So it\u0027s probably not that useful to your autopiloting needs.\u003C/p\u003E\u003Cp\u003EOn another note, SHIP:SENSORS is an entirely different thing. It\u0027s a totally different object type, confusingly.\u003C/p\u003E\u003Cp\u003ELIST SENSORS gets you objects of type Part that happen to be sensors.\u003C/p\u003E\u003Cp\u003ESHIP:SENSORS gets you a special object that is an abstraction of all those details and just lets you get the values - it\u0027s documented here: \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/vesselsensors/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structure/vesselsensors/index.html\u003C/a\u003E. It\u0027s probably more what you want.\u003C/p\u003E\u003Cp\u003EExample: IF SHIP:SENSORS:TEMP \u0026gt; 100 { PRINT \u0022HOTTER THAN BOILING!\u0022. }.\u003C/p\u003E\u003Cp\u003EI made a note on github to fix the docs for sensors, but it will be a little bit before I get to it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-15T08:49:58Z\u0022 title=\u002208/15/2014 08:49  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 15, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-15T09:19:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u0026lt;snip\u0026gt;abstraction of all those details and just lets you get the values - it\u0027s documented here: \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/vesselsensors/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structure/vesselsensors/index.html\u003C/a\u003E. It\u0027s probably more what you want.\u003Cp\u003EExample: IF SHIP:SENSORS:TEMP \u0026gt; 100 { PRINT \u0022HOTTER THAN BOILING!\u0022. }.\u003C/p\u003E\u003Cp\u003EI made a note on github to fix the docs for sensors, but it will be a little bit before I get to it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, that\u0027s really helpful. As for the whole documentation thing, I just assumed I was not typing something correctly lol... but I couldn\u0027t find anywhere that showed me how to actually access the sensors. As for what i was trying to do, a text readout would be just fine by me... I\u0027m building a datarecorder script that logs altitude, current TWR (since there seems to be no good way to read throttle position) as g-force \u002B 1, and pitch into a csv... then I feed that data into a graphing utility afterward so that I can look at/analyze trajectory and compare different trajectory/thrust profiles to their related efficiencies to get a better idea of what works best for different vehicles with the mods i have currently set up.\u003C/p\u003E\u003Cp\u003EEDIT: The sensor vs. sensors was what was getting to me, i had put a accelerometer on my craft and was trying to have kOS read from it lol. The ship:sensors:acc is much better for what I want to do. Thanks again. (btw, love your kOS videos... they are the reason I downloaded this mod)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-15T09:23:47Z\u0022 title=\u002208/15/2014 09:23  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 15, 2014\u003C/time\u003E by impyre\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-08-15T11:55:48Z","Content":"\n\u003Cp\u003EOkay, I\u0027ve got to ask, what is going on with these vectors? These are just supposed to be the default X, Y, and Z axes, (the red, green and blue vectors accordingly.) but only the Y axis is pointing in a direction that makes sense; hence its label, and the labels on the other two.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/uWzPDTn.png\u0022 alt=\u0022uWzPDTn.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-15T13:09:28Z","Content":"\n\u003Cp\u003EIt seems right to me. What\u0027s most important to notice is the axes orientations relative to each other. I believe this is a left-hand-rule system, which is common in games. What you must remember is that \u0022up\u0022 isn\u0027t always what you think it should be, and that these vectors represent the absolute x, y, and z directions free of any particular reference (that i\u0027m aware of). If you do a time warp for a bit, then stop and check the orientation of the vectors, I think you\u0027ll find that the axes appear to rotate (but it\u0027s actually your ship that\u0027s rotating due to movement on the planet\u0027s surface)... there should be at least four points where the axes \u0022look more right\u0022 with either the red or blue lining up with your ship\u0027s alignment.\u003C/p\u003E\u003Cp\u003EEdit: If you want to create something like this that is oriented correctly with your ship, you could store ship:facing:vector in some variable, directionvector for example, then create three vectors just as you\u0027ve done here, but instead of setting x to 1, you\u0027d set it to directionvector:x. It\u0027d look like v(directionvector:x,0,0). If you did that for each other axis, you\u0027d have something that would look exactly like you expect it to.\u003C/p\u003E\u003Cp\u003EEdit2:\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/Vn6lUozVUHA?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E at about 5 minutes in he does the same thing you\u0027re trying to do here (with the same code). You can also see how the positioning makes more sense while in orbit.\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-15T13:19:19Z\u0022 title=\u002208/15/2014 01:19  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 15, 2014\u003C/time\u003E by impyre\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-15T15:31:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022impyre\u0022 data-cite=\u0022impyre\u0022\u003E\u003Cdiv\u003E(since there seems to be no good way to read throttle position)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDoes PRINT THROTTLE not work? It should. If it\u0027s not working that\u0027s probably a bug.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-08-15T21:40:08Z","Content":"\n\u003Cp\u003E^\u003C/p\u003E\u003Cp\u003EDECLARE someVar.\u003C/p\u003E\u003Cp\u003ESET someVar TO \u0026lt;throttle value\u0026gt;.\u003C/p\u003E\u003Cp\u003ELOCK THROTTLE TO someVar.\u003C/p\u003E\u003Cp\u003EPRINT someVar.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022impyre\u0022 data-cite=\u0022impyre\u0022\u003E\u003Cdiv\u003EIt seems right to me. What\u0027s most important to notice is the axes orientations relative to each other. I believe this is a left-hand-rule system, which is common in games. What you must remember is that \u0022up\u0022 isn\u0027t always what you think it should be, and that these vectors represent the absolute x, y, and z directions free of any particular reference (that i\u0027m aware of). If you do a time warp for a bit, then stop and check the orientation of the vectors, I think you\u0027ll find that the axes appear to rotate (but it\u0027s actually your ship that\u0027s rotating due to movement on the planet\u0027s surface)... there should be at least four points where the axes \u0022look more right\u0022 with either the red or blue lining up with your ship\u0027s alignment.\u003Cp\u003EEdit: If you want to create something like this that is oriented correctly with your ship, you could store ship:facing:vector in some variable, directionvector for example, then create three vectors just as you\u0027ve done here, but instead of setting x to 1, you\u0027d set it to directionvector:x. It\u0027d look like v(directionvector:x,0,0). If you did that for each other axis, you\u0027d have something that would look exactly like you expect it to.\u003C/p\u003E\u003Cp\u003EEdit2:\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/Vn6lUozVUHA?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E at about 5 minutes in he does the same thing you\u0027re trying to do here (with the same code). You can also see how the positioning makes more sense while in orbit.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI tried timewarping and the vectors did not appear to move at all, that was one of my first suspicions that it was due to Kerbin being in a weird orientation compared to the global coordinate system. Neither time of day nor time of year seem to affect affect the orientation of the vectors. I have not had a significant amount of time to test whether or not position on Kerbin affects them though.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-16T00:59:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003E^\u003Cp\u003EDECLARE someVar.\u003C/p\u003E\u003Cp\u003ESET someVar TO \u0026lt;throttle value\u0026gt;.\u003C/p\u003E\u003Cp\u003ELOCK THROTTLE TO someVar.\u003C/p\u003E\u003Cp\u003EPRINT someVar.\u003C/p\u003E\u003Cp\u003EI tried timewarping and the vectors did not appear to move at all, that was one of my first suspicions that it was due to Kerbin being in a weird orientation compared to the global coordinate system. Neither time of day nor time of year seem to affect affect the orientation of the vectors. I have not had a significant amount of time to test whether or not position on Kerbin affects them though.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe coordinate system is messy. The only constant is that the Y axis will always point along the \u0022north pole ray\u0022. (the ray that aims straight up at the north pole - i.e. the ray that represents the north half of the planetary axis, and that the other two axes, X and Z, will always be 90 degrees apart from each other (to form an orthogonal set of basis vectors), and oriented parallel to the equatorial plane, but exactly which way they\u0027ll point relative to the longitude of the planet is impossible to predict. In one game at one point in time maybe the X axis points out the 134 longitude line, then next time maybe it\u0027s the 51 longitude line, etc. The reasons for this are complex and have to do with internal trickery KSP is doing (basically, at low altitude the planet is stationary and the universe rotates. but at high altitude the universe is stationary and the planet rotates. Depending on how much time you\u0027ve spent in your saved game with the camera looking at a high altitude vessel versus a low altitude vessel, this locking and unlocking of the universe to the planet is why the axes are always so wacky. The game remembers what position the axes were at last time and keeps them that way when you reload.)\u003C/p\u003E\u003Cp\u003EIf you want a more sane looking picture of the axes, try this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    set xAxis to vecdrawargs( ship:body:position, V(2000000,0,0), RGB(1.0,0.5,0.5), \u0022X axis\u0022, 5, true ).\u003Cbr\u003E    set yAxis to vecdrawargs( ship:body:position, V(0,2000000,0), RGB(0.5,1.0,0.5), \u0022Y axis\u0022, 5, true ).\u003Cbr\u003E    set zAxis to vecdrawargs( ship:body:position, V(0,0,2000000), RGB(0.5,0.5,1.0), \u0022Z axis\u0022, 5, true ).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThat will make the arrows 2 million meters long, and origin them at the planet\u0027s center. Switch out to the map view and you\u0027ll see a much better image of what I\u0027m talking about.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-08-16T04:09:20Z","Content":"\n\u003Cp\u003EI suppose that could work. What I\u0027m trying to do is create a script to do a gravity turn for a suborbital rocket. (I\u0027m using the 6.4x RSS config from Regex and haven\u0027t quite gotten used to everything, so to learn I\u0027m trying to progress in a Mercury-\u0026gt; Gemini-\u0026gt;Apollo fashion to get my bearings. If you can\u0027t tell, I\u0027m still on Mercury.) The goal was to launch the rocket, wait until 1000m, perform the initial pitchover, and then lock the steering to ship:velocity:surface to produce a real gravity turn that is easily modified using the initial height and pitchover values. I ran into trouble with the vessel rolling to the wrong roll orientation when switching to a vector heading, and I couldn\u0027t correct it with an R() tuple because you can\u0027t add a vector and an angle tuple. The goal was to convert ship:velocity:surface to an R() tuple to enable roll guidance to keep the rocket oriented correctly. To start I needed to know which basis vectors pointed in which directions to convert from a vector to an euler angle and upon doing so I discovered the issue.\u003C/p\u003E\n"},{"CreatedByName":"undercoveryankee","CreatedById":103505,"CreatedDateTime":"2014-08-16T05:07:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EI suppose that could work. What I\u0027m trying to do is create a script to do a gravity turn for a suborbital rocket. (I\u0027m using the 6.4x RSS config from Regex and haven\u0027t quite gotten used to everything, so to learn I\u0027m trying to progress in a Mercury-\u0026gt; Gemini-\u0026gt;Apollo fashion to get my bearings. If you can\u0027t tell, I\u0027m still on Mercury.) The goal was to launch the rocket, wait until 1000m, perform the initial pitchover, and then lock the steering to ship:velocity:surface to produce a real gravity turn that is easily modified using the initial height and pitchover values.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you lock steering to ship:velocity:surface, you can\u0027t recover if something perturbs your heading to one side or the other. Maybe not a problem for what you\u0027re doing, but it gets annoying once you start trying to launch to a particular inclination.\u003C/p\u003E\u003Cp\u003EHere\u0027s the gravity-turn part of an auto-launch script I was just working on. I calculate the angle between ship:velocity:surface and up:vector, then lock steering to a heading() with a fixed compass heading and the calculated pitch angle. The numbers are for stock-size Kerbin with FAR.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset initialPitch to 84.\u003Cbr\u003Eset targetAoA to -1.\u003Cbr\u003Elock velPitch to arcsin(vdot(up:vector, ship:velocity:surface:normalized)).\u003Cbr\u003E\u003Cbr\u003Ewait until ship:airspeed \u0026gt; 35.\u003Cbr\u003Eprint \u0022Initial turn\u0022.\u003Cbr\u003Elock steering to heading(90,initialPitch).\u003Cbr\u003E\u003Cbr\u003Ewait until velPitch \u002B targetAoA \u0026lt; initialPitch.\u003Cbr\u003Eprint \u0022Maintaining AoA\u0022.\u003Cbr\u003Elock steering to heading(90, velPitch \u002B targetAoA).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-16T05:34:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003E\u0026lt;snip\u0026gt; The goal was to convert ship:velocity:surface to an R() tuple to enable roll guidance to keep the rocket oriented correctly. \u0026lt;snip\u0026gt; \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E It sounds like you want ship:velocity:surface:direction, if I\u0027m not mistaken that usually works for anything that can return a vector, and instead returns a euler direction in the form of r(#,#,#). Of course, you lose any magnitude data with that, but it seems like the most direct route.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-08-16T05:39:34Z","Content":"\n\u003Cp\u003E^^ Interesting, I hadn\u0027t thought of doing that. Ill have to try it when I get home. Thanks for the input! Also, an far as not being able to correct for perturbations by locking to ship:velocity:surface, I understand that. I actually wanted that as it would require a lot of precision, and perhaps even require me to delve into raw vehicle control and writing my own control algorithms precise enough to get the initial pitch and roll maneuvers correct. (Lofty goal, I know. But its fun to me!) It would also add the variation in final orbits that you find in real life, normal rockets don\u0027t end up within a few hundred meters of their target orbit consistently.\u003C/p\u003E\u003Cp\u003EEdit: ^That seems to be exactly what I\u0027m looking for. Thanks!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-16T05:59:57Z\u0022 title=\u002208/16/2014 05:59  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 16, 2014\u003C/time\u003E by VFB1210\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-16T07:17:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003E\u0026lt;snip\u0026gt;It would also add the variation in final orbits that you find in real life, normal rockets don\u0027t end up within a few hundred meters of their target orbit consistently.\u003Cp\u003EEdit: ^That seems to be exactly what I\u0027m looking for. Thanks!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGlad I could help! I couldn\u0027t find a page on the kOS documentation site with an example to link, but I knew I remembered reading about it somewhere. As for the reality thing, maybe someone will build a mod that will create a dynamic atmosphere that can toss you off course if you aren\u0027t careful. Personally, I doubt I\u0027d use it... but who knows.\u003C/p\u003E\u003Cp\u003EEdit: What I\u0027ve been attempting to do is develop a more robust script similar to what Steve Mading uses in his youtube videos. However, I was trying to use something a bit more... efficient than the square root function. It seems that the root function is a pretty robust and efficient solution for being relatively simpler (as far as I can tell)... the OCD side of me wants something closer to the optimal trajectory, but it\u0027s incredibly difficult to represent mathematically.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-16T07:21:40Z\u0022 title=\u002208/16/2014 07:21  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 16, 2014\u003C/time\u003E by impyre\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-16T14:31:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022impyre\u0022 data-cite=\u0022impyre\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEdit: What I\u0027ve been attempting to do is develop a more robust script similar to what Steve Mading uses in his youtube videos. However, I was trying to use something a bit more... efficient than the square root function. It seems that the root function is a pretty robust and efficient solution for being relatively simpler (as far as I can tell)... the OCD side of me wants something closer to the optimal trajectory, but it\u0027s incredibly difficult to represent mathematically.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve heard pople had pretty good success with this simple algorithm:\u003C/p\u003E\u003Cp\u003EGoal: Don\u0027t allow the apoapsis to get too high above you. If you have enough momentum going that the apoapsis is a lot higher than you are, then this means you\u0027re going too vertical and not horizontal enough.\u003C/p\u003E\u003Cp\u003EAlgorithm: Pick some desired height H - the height that the apoapsis should be above your current altitude. If the current apopasis-altitude is \u0026lt; H, then aim a bit higher than your current velocity vector. If its \u0026gt; H then aim a bit lower than your current velocity vector. For more sophistication, make the amount by which you want to deflect your aim from your velocity dependent on how far off from H you are.\u003C/p\u003E\u003Cp\u003EOf course, don\u0027t kick this in until you have gone vertical a while and are outside the pea-soup low atmosphere. (with FAR it may be different).\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-17T02:32:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI\u0027ve heard pople had pretty good success with this simple algorithm:\u003Cp\u003EGoal: Don\u0027t allow the apoapsis to get too high above you. If you have enough momentum going that the apoapsis is a lot higher than you are, then this means you\u0027re going too vertical and not horizontal enough.\u003C/p\u003E\u003Cp\u003EAlgorithm: Pick some desired height H - the height that the apoapsis should be above your current altitude. If the current apopasis-altitude is \u0026lt; H, then aim a bit higher than your current velocity vector. If its \u0026gt; H then aim a bit lower than your current velocity vector. For more sophistication, make the amount by which you want to deflect your aim from your velocity dependent on how far off from H you are.\u003C/p\u003E\u003Cp\u003EOf course, don\u0027t kick this in until you have gone vertical a while and are outside the pea-soup low atmosphere. (with FAR it may be different).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI used the method of ETA:apoapsis for awhile with apparently good results (and it is the easiest method of circularization as far as I can tell)... but it becomes difficult because the apoapsis will be closer at launch, then get further away... then get closer again. Still not sure what the mathematical relationship is.\u003C/p\u003E\u003Cp\u003EEdit: \u0022print throttle.\u0022 doesn\u0027t work for me.\u003C/p\u003E\u003Cp\u003EThere\u0027s another problem I\u0027m having, but it may be code-related. I\u0027m trying to run a main control loop which runs through a list called subroutines. It uses \u0022for routine in subroutines{ run routine. }\u0022 and is set up to loop until interrupted by action group. I want something that will let me re-configure on the fly by choosing what subroutines to run.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-17T06:47:27Z\u0022 title=\u002208/17/2014 06:47  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 17, 2014\u003C/time\u003E by impyre\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-08-17T06:32:46Z","Content":"\n\u003Cp\u003EThe mathematical relationship between the time since launch and eta to apoapsis is far beyond the abilities of kOS to solve. It gets ugly very quickly due to the constantly changing mass of the ship throwing a wrench into what would be a relatively simple integration of the net force on the vessel.\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-17T06:52:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EThe mathematical relationship between the time since launch and eta to apoapsis is far beyond the abilities of kOS to solve. It gets ugly very quickly due to the constantly changing mass of the ship throwing a wrench into what would be a relatively simple integration of the net force on the vessel.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI didn\u0027t mean solving for anything, I meant waiting until a certain altitude then attempt to keep the apoapsis in front of you but as close as possible with throttle management. Basically you wait until the apoapsis starts to move away (ETA:apoapsis will be getting larger) then you decrease throttle until it gets closer... so basically you hover around a certain value. I usually shoot for around 12 seconds (this is also the way some of the apollo missions performed certain burns in order to use fuel as efficiently as possible).\u003C/p\u003E\u003Cp\u003Eedit: did you see the above edit about the control loop problem?\u003C/p\u003E\u003Cp\u003Eas a side note, is there any forum dedicated to mod discussion/questions? if not... there should be (so we could use it instead of hijacking the mod\u0027s showcase thread)\u003C/p\u003E\u003Cp\u003Eedit 2: nvm, i found the mod discussion thread... it just doesn\u0027t show up on the main forum index for whatever reason.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-17T06:55:09Z\u0022 title=\u002208/17/2014 06:55  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 17, 2014\u003C/time\u003E by impyre\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-17T07:06:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022impyre\u0022 data-cite=\u0022impyre\u0022\u003E\u003Cdiv\u003EI didn\u0027t mean solving for anything, I meant waiting until a certain altitude then attempt to keep the apoapsis in front of you but as close as possible with throttle management. Basically you wait until the apoapsis starts to move away (ETA:apoapsis will be getting larger) then you decrease throttle until it gets closer... so basically you hover around a certain value. I usually shoot for around 12 seconds (this is also the way some of the apollo missions performed certain burns in order to use fuel as efficiently as possible).\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wasn\u0027t proposing using the TIME to apoapsis, but the ALTITUDE to it, and not to adjust the throttle, but to adjust the aim. If Apoapsis is high above your current altitude, then aim more downward. If Apoapsis is not high enough above your current altitude, then aim more upward. Apoapsis might be only 2,000 meters above you, but also be 5 minutes away because you\u0027ve nearly achieved your orbit and your velocity is nearly horizontal and it will take a long time to achieve those 3,000 meters of altitude. If you\u0027ve set your desired apoapsis height to, say, 3000, and it\u0027s actually 5000 above you, then it\u0027s safe to aim more down because you\u0027ve got so much vertical momentum. If, on the other hand, it\u0027s only 1000 above you, then you\u0027re not going fast enough yet to be considering aiming down like that.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Eas a side note, is there any forum dedicated to mod discussion/questions? if not... there should be (so we could use it instead of hijacking the mod\u0027s showcase thread)\u003C/p\u003E\u003Cp\u003Eedit 2: nvm, i found the mod discussion thread... it just doesn\u0027t show up on the main forum index for whatever reason.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis sort of thing seems perfectly on topic in this thread to me. Part of the reason there\u0027s 133 pages already is because its a mix of new announcements and people discussing algorithms with each other.\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-17T07:09:06Z","Content":"\n\u003Cp\u003ECould you help me figure out why my control loop isn\u0027t working as planned? (from above-above post \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68089-0-24-kOS-Scriptable-Autopilot-System-v0-13-1-2014-7-18?p=1355826\u0026amp;viewfull=1#post1355826\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/68089-0-24-kOS-Scriptable-Autopilot-System-v0-13-1-2014-7-18?p=1355826\u0026amp;viewfull=1#post1355826\u003C/a\u003E)\u003C/p\u003E\n"},{"CreatedByName":"impyre","CreatedById":116031,"CreatedDateTime":"2014-08-17T08:27:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022impyre\u0022 data-cite=\u0022impyre\u0022\u003E\u003Cdiv\u003ECould you help me figure out why my control loop isn\u0027t working as planned? (from above-above post \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68089-0-24-kOS-Scriptable-Autopilot-System-v0-13-1-2014-7-18?p=1355826\u0026amp;viewfull=1#post1355826\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/68089-0-24-kOS-Scriptable-Autopilot-System-v0-13-1-2014-7-18?p=1355826\u0026amp;viewfull=1#post1355826\u003C/a\u003E)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eapparently you can\u0027t do this. The for loop doesn\u0027t properly expand the variable before attempting to run the thing... so it\u0027s trying to run nothing each cycle. I tried to get around this by passing it to a sub-routine launcher script and then having that script launch the subroutines as declared variables... but that causes stack overflow error. Without the ability to build a solid control loop (without having to rewrite it every time i wanna change the program and taking up loads of unnecessary space) I\u0027m not sure I can build anything useful.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-17T10:34:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022impyre\u0022 data-cite=\u0022impyre\u0022\u003E\u003Cdiv\u003Eapparently you can\u0027t do this. The for loop doesn\u0027t properly expand the variable before attempting to run the thing... so it\u0027s trying to run nothing each cycle.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe fact that it\u0027s a loop has nothing to do with why it doesn\u0027t work. The example below ALSO wouldn\u0027t work, and isn\u0027t using a for loop:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET progName to \u0022my_program\u0022.\u003Cbr\u003ERUN progName.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe problem isn\u0027t the FOR, it\u0027s the RUN. You can\u0027t RUN some program name that\u0027s stored in a variable. Why? Because of the fact that the syntax is this:\u003C/p\u003E\u003Cp\u003ERUN \u0026lt;identifier\u0026gt;\u003C/p\u003E\u003Cp\u003Erather than this\u003C/p\u003E\u003Cp\u003ERUN \u0026lt;expression-that-evaluates-to-a-string\u0026gt;\u003C/p\u003E\u003Cp\u003ESo, for the same reason, you can\u0027t do this either:\u003C/p\u003E\u003Cp\u003ERUN \u0022my\u0022 \u002B \u0022_\u0022 \u002B \u0022program\u0022.\u003C/p\u003E\u003Cp\u003EBasically, the operand of RUN is an identifier, but then it\u0027s value isn\u0027t expanded, the identifier itself IS the filename. I don\u0027t like this design for the fact that it creates the problem you\u0027ve run into here. But it\u0027s impossible to fix without breaking backward compatibility, because it would require changing everyone\u0027s kosscript code that does this:\u003C/p\u003E\u003Cp\u003ERUN myProgram.\u003C/p\u003E\u003Cp\u003Einto this:\u003C/p\u003E\u003Cp\u003ERUN \u0022myProgram\u0022.\u003C/p\u003E\u003Cp\u003Eso that the value can be a string or a variable or any expression.\u003C/p\u003E\u003Cp\u003EAt the moment, the only way to do it is to take advantage of the self-modifying code trick using the LOG command.\u003C/p\u003E\u003Cp\u003E(The fact that the files that the LOG command makes are seen by the system as being identical to the files you RUN, you can use LOG to actually write out a program, and then run the logfile.)\u003C/p\u003E\u003Cp\u003EExample:\u003C/p\u003E\u003Cp\u003ESET X TO 5.\u003C/p\u003E\u003Cp\u003ELOG \u0022PRINT X.\u0022 TO MYLOG.\u003C/p\u003E\u003Cp\u003ERUN MYLOG.\u003C/p\u003E\u003Cp\u003E(prints 5, but if you run it again, the LOG command APPENDS, so on the second run it would have the print 5 command in it twice, so you have to delete it first.).\u003C/p\u003E\u003Cp\u003EUsing this trick you can do this:\u003C/p\u003E\u003Cp\u003ELOG \u0022DUMMY\u0022 TO TEMPSCRIPT. // ensure it exists so it doesn\u0027t bomb out on the next line.\u003C/p\u003E\u003Cp\u003EDELETE TEMPSCRIPT. // clear it out.\u003C/p\u003E\u003Cp\u003ELOG \u0022RUN \u0022 \u002B myVariable \u002B \u0022.\u0022 TO TEMPSCRIPT. // the command RUN _____, where the ____ is the contents of myVariable.\u003C/p\u003E\u003Cp\u003ERUN TEMPSCRIPT.\u003C/p\u003E\u003Cp\u003EI\u0027ve pulled this trick before but I don\u0027t like doing it, and would avoid it if at all possible, as it\u0027s very dependent on certain wonky behavior remaining wonky in future releases. (that being that log files and program files are indistinguishable).\u003C/p\u003E\n"}]}