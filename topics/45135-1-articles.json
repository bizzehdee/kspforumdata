{"TopicId":45135,"ForumId":36,"TopicTitle":"[Testing] Compressing Textures in Memory","CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-09-06T18:55:08Z","PageNum":1,"Articles":[{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-09-06T18:55:08Z","Content":"\n\u003Cp\u003EI found an interesting command while working on a plugin, basically it compresses textures in memory and I\u0027m curious to see what it does for other people. The code is really simple:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[KSPAddon(KSPAddon.Startup.MainMenu, false)]\u003Cbr\u003Epublic class CompressRAM : MonoBehaviour\u003Cbr\u003E{\u003Cbr\u003E    void Start()\u003Cbr\u003E    {\u003Cbr\u003E        foreach (GameDatabase.TextureInfo t in GameDatabase.Instance.databaseTexture)\u003Cbr\u003E            t.texture.Compress(true);\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt simply tries the compress command for all the loaded textures, most of them it doesn\u0027t work because the texture is \u0027not readable\u0027, but it obviously manages to compress some since task manager shows:\u003C/p\u003E\u003Cp\u003EWorking Set (Memory), Memory (Private Working Set), Commit Size\u003C/p\u003E\u003Cp\u003EWithout plugin: 3554 mb, 3530 mb, 3706 mb\u003C/p\u003E\u003Cp\u003EWith plugin: 3164 mb, 3139 mb, 3306 mb\u003C/p\u003E\u003Cp\u003E~ 400mb reduction\u003C/p\u003E\u003Cp\u003EIf you notice I run with a huge number of mods (pretty much as many as I can without crashing the game), so every little bit helps. If you want to test it out you can download the dll here: \u003Ca href=\u0022http://www./download/xd4atz8ci9b4269/CompressRAM.dll\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www./download/xd4atz8ci9b4269/CompressRAM.dll\u003C/a\u003E Just drop it in the Plugins directory, then post the before/after RAM usage which I\u0027m curious to see.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-09-06T19:50:18Z","Content":"\n\u003Cp\u003EI experimented with this a while back (compressing immediately as they\u0027re loaded instead of at the main menu) and didn\u0027t find any textures compressed at all. Can you dump a list of textures that don\u0027t throw an exception, i.e. what kind of textures are loaded as readable?\u003C/p\u003E\u003Cp\u003EI still think the solution here (other than Squad fixing their system) is to write a custom .mbm loader, but if .png works then we might see a major shift in what mods use.\u003C/p\u003E\n"},{"CreatedByName":"Gristle","CreatedById":60589,"CreatedDateTime":"2013-09-06T20:09:50Z","Content":"\n\u003Cp\u003EI\u0027ll give it a go. I too run as many mods as I can before KSP takes a dump. I\u0027ve found that KSP crashes with a working set somewhere between 3.6Gb and 3.7Gb. Are there any logs that would be helpful in determining if this is working or what it is doing?\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2013-09-06T20:12:53Z","Content":"\n\u003Cp\u003Ebefore (working, peak, private, commit)\u003C/p\u003E\u003Cp\u003E2924 mb, 3008mb, 2895mb, 3157mb\u003C/p\u003E\u003Cp\u003Eafter\u003C/p\u003E\u003Cp\u003E2889, 2967, 2864, 2963\u003C/p\u003E\u003Cp\u003Epercentage drop\u003C/p\u003E\u003Cp\u003E1.2%, 1.35%, 1.07%, 6.145%\u003C/p\u003E\u003Cp\u003EAll in all, the actual drop percentage-wise isn\u0027t very impressive except perhaps for commit. (which in some ways is more significant as it translates to lessened \u0027paged\u0027 or \u0027swap\u0027 file usage)\u003C/p\u003E\u003Cp\u003EHowever a little harder to quantify is that load times between scene changes \u0027felt\u0027 more responsive. The numbers above might actually have been a little worse for \u0027after\u0027 because I pushed things a little more than \u0027before\u0027 to see if the superior load performance was placebo or if it was real.\u003C/p\u003E\u003Cp\u003EMy testing procedure in each case was \u0027start ksp, load saved game, enter tracking station, exit, enter VAB, load each page in each parts category, exit VAB, enter tracking station, visit ship. \u0027before\u0027 this last took ~30-45 seconds. After it seemed more like 15 seconds. Or less.\u003C/p\u003E\u003Cp\u003ESo, actual memory usage, little improvement except for commit. in-game it just feels faster and it\u0027s harder to place a numerical value on that.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T20:18:09Z\u0022 title=\u002209/06/2013 08:18  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Starwaster\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Moon Goddess","CreatedById":57446,"CreatedDateTime":"2013-09-06T20:13:35Z","Content":"\n\u003Cp\u003EI\u0027m trying to figure out what happened with mine, I was running along fine with 4 GB of ram and having no problems, I upgraded my computer to 8 GB and suddenly I had to uninstall big mods to keep Kerbal from crashing, as it was sitting at 3.9gb when loaded. I have no idea how it worked before.\u003C/p\u003E\n"},{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-09-06T20:30:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EI experimented with this a while back (compressing immediately as they\u0027re loaded instead of at the main menu) and didn\u0027t find any textures compressed at all. Can you dump a list of textures that don\u0027t throw an exception, i.e. what kind of textures are loaded as readable?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow did you compress the textures while they loaded? Also, I was trying earlier to figure out more information about what it was compressing, but the whole thing is a mess. I mean GameDataBase.TextureInfo has bools like isReadable and isCompress but I couldn\u0027t find a coordination between those and what was being compressed. I also tried storing the names of all the textures that threw an exception then removing those from the complete list of texture names to find the ones it compressed but it gave me back like everything so I probably did it wrong (I\u0027m pretty new to C#), also it looked like some texture names were blank. If you have a piece of code that would show which textures are actually being compressed I\u0027d be happy to run it and figure this out.\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2013-09-06T21:12:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EIt simply tries the compress command for all the loaded textures, most of them it doesn\u0027t work because the texture is \u0027not readable\u0027, but it obviously manages to compress some since task manager shows:\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wonder if this converting RGBA8 textures into DXT1 or DXT5 format? Do you see a visual difference in-game between a session with compressed vs. not compressed? What texture quality settings do you use in the game? Does changing the texture quality affect the number of textures it compressed? KSP or Unity converts RGBA to DXT on at least some PNG textures if texture quality is not at max, which can lead to artifacts on UI elements.\u003C/p\u003E\n"},{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-09-06T22:11:33Z","Content":"\n\u003Cp\u003EYes I believe its converting it to DXT, I haven\u0027t noticed much of a difference but I have a huge number of parts and I don\u0027t know which textures were compressed. If you want to see what it\u0027s like, try it once, you can always delete the dll and reload the game to get it back to the way it was.\u003C/p\u003E\n"},{"CreatedByName":"Gristle","CreatedById":60589,"CreatedDateTime":"2013-09-06T22:29:22Z","Content":"\n\u003Cp\u003EMy results using a similar system a Starwaster. Entered tracking station loaded Space Station in orbit, Let KSP simulate for approximately 30 seconds, then quit to Space Center, VAB, and cycle through all parts.\u003C/p\u003E\u003Cp\u003ENo Compression:\u003C/p\u003E\u003Cp\u003EWorking Set: 3,485,036\u003C/p\u003E\u003Cp\u003EPeak Working Set: 3,487,244\u003C/p\u003E\u003Cp\u003EPrivate Working set: 3,458,456\u003C/p\u003E\u003Cp\u003ECommit: 3,648,540\u003C/p\u003E\u003Cp\u003EWith Compression:\u003C/p\u003E\u003Cp\u003EWorking set: 2,961,108\u003C/p\u003E\u003Cp\u003EPeak Working set: 3,018,088\u003C/p\u003E\u003Cp\u003EPrivate Working Set: 2,934,488\u003C/p\u003E\u003Cp\u003ECommit: 3,114,288\u003C/p\u003E\u003Cp\u003ESo on my system I\u0027m seeing about a 500MB reduction in memory usage.\u003C/p\u003E\n"},{"CreatedByName":"sirkut","CreatedById":57229,"CreatedDateTime":"2013-09-06T22:56:00Z","Content":"\n\u003Cp\u003EI noticed that compression option when I was working on the Reflaginator mod. Nice that you tested it out. I\u0027m going to give it a shot.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2013-11-20T07:18:10Z","Content":"\n\u003Cp\u003EBump for an interesting find: At offset 0C of an mbm, if the byte is 00, it will compress (to DXT1/5 depending on alpha); if the byte is 01, it will leave as RGB24/RGBA32.\u003C/p\u003E\n"},{"CreatedByName":"BoZo","CreatedById":2347,"CreatedDateTime":"2013-11-20T19:14:42Z","Content":"\n\u003Cp\u003EWow, I got about ~900MB less memory usage with this. I use a LOT of mods.\u003C/p\u003E\n"},{"CreatedByName":"AdmiralTigerclaw","CreatedById":92104,"CreatedDateTime":"2013-11-20T20:33:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Moon Goddess\u0022 data-cite=\u0022Moon Goddess\u0022\u003E\u003Cdiv\u003EI\u0027m trying to figure out what happened with mine, I was running along fine with 4 GB of ram and having no problems, I upgraded my computer to 8 GB and suddenly I had to uninstall big mods to keep Kerbal from crashing, as it was sitting at 3.9gb when loaded. I have no idea how it worked before.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat was probably happening is that you physically could not exceed the 4GB allocation limit. The issue with the 32 bit limitation is that it\u0027s a 32 bits of memory addressing. If you think of memory as a grid, with each memory location containing a unique, 32 bit address number. Then you can only have up to 2^32 address spaces for ram.\u003C/p\u003E\u003Cp\u003ESince you only had 4 gigs of RAM, it was physically impossible for your computer to allocate the address numbers that were higher than 2^32. Because they didn\u0027t exist. And that\u0027s not even counting that your OS was probably taking about half of that anyway. Instead, your computer uses virtual memory (hard drive page swap) to store anything else in order to keep going. That doesn\u0027t require the software/hardware to perform memory address allocation on your RAM itself and the file allocation tables for huge hard drives have long since been adjusted to account for absurdly large drive sizes, so it never encountered the 32 bit problem with virtual ram.\u003C/p\u003E\u003Cp\u003EThus, when you added 4 more gigs of RAM to your system, making it 8 gig, you added an additional 2^32 memory cell addresses for your computer to access. Now the OS can go \u0027here, have all the RAM you need without having to swap with the hard disk drive.\u003C/p\u003E\u003Cp\u003ESince KSP only works 32 bit, it encounters a problem when the computer tries to allocate more than 2^32 RAM addresses to it. The Unity Engine literally gets the value and since its addressing can\u0027t handle more than 32 bits, it overflows* and loses the address and/or data byte. Once that occurs, the program has no earthly idea what to do with itself. If left alone KSP would immediately start acting weird and doing things that make no sense. And I\u0027m not talking in the sense of the Krakken Glitches the program has, but the program literally derping with all forms of weird behaviors... As it would try to take whatever garbage value the overflow caused and return that instead, resulting in chaos.\u003C/p\u003E\u003Cp\u003EInstead either the Unity Engine or the OS detects the overflow flag and saves your data from the program by CTDing it.\u003C/p\u003E\u003Cp\u003E*Just in case some people don\u0027t know what an overflow is. I expect most do, but I can\u0027t assume: Imagine that you can count to 1000, but not 1001 because any number above 1000 doesn\u0027t exist. You start counting apples and have 1000 or more. When you hit 1000 you have to stop because you don\u0027t have a way to even say 1001. Or alternately, you wrap around and start from 1 while making a tick on something. That would be an overflow. And the tick would technically be an overflow flag. For humans, overflow isn\u0027t an issue. But a computer has limited resources and doesn\u0027t have the ability to generate a new numbering system to account for exceeding a current limit. If it overflows, usually the result is that the data value gets pushed into another RAM cell, which may be occupied by an important value. (As in the case with Stack Overflows). So effectively, Overflows are when data values exceed the number that the computer can see. Usually these are expressed in bit lengths which tells you how many combinations there are. 2^X in terms of the bits being X.\u003C/p\u003E\u003Cp\u003E2^32 = 4,294,967,296 bytes. Or... 4.2 gigabytes.\u003C/p\u003E\u003Cp\u003E2^64 = 1.84467440737 xe^19 or... 18 MILLION Terabytes.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2013-11-20T20:57:16Z","Content":"\n\u003Cp\u003E@AdmiralTigerclaw you need to read about how windows allocate memory for a 32bit program under a 64bit OS, because it does not work like you think it does.\u003C/p\u003E\n"},{"CreatedByName":"AdmiralTigerclaw","CreatedById":92104,"CreatedDateTime":"2013-11-20T21:19:09Z","Content":"\n\u003Cp\u003EI\u0027m not a windows programmer. So I just gave the electronics engineering answer to the best of my knowledge.\u003C/p\u003E\u003Cp\u003EI know it\u0027s not the address allocation in and of itself that\u0027s causing the problem. Because that would have caused a crash the instant KSP tried to load... Because it invariably would have accessed RAM addresses across the entire memory range from zero to 8 gigs. The OS is handling that for the program.\u003C/p\u003E\u003Cp\u003EPoint I should have clarified is that the OS didn\u0027t HAVE more than 4 gigs to allocate to begin with. So no matter how much KSP wanted to use it, it never GOT allocated enough RAM to cause an overflow in the ram values within\u0027 the unity engine. With eight gigs, the OS can keep throwing RAM at KSP until it uses more RAM than the Unity Engine can \u0027count\u0027. \u003C/p\u003E\u003Cp\u003ESplitting it between physical and virtual memory likely just makes it balance the load between them, so that neither actually hits 4 gigs. Unintended memory segmenting.\u003C/p\u003E\u003Cp\u003EBut since physical memory is a higher priority than page files/virtual memory, when you actually have enough RAM, the balancing doesn\u0027t happen because physical memory gets allocated first due to superior performance. Virtual Memory is supposed to be effectively the OS\u0027s backup memory.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2013-11-20T22:06:16Z","Content":"\n\u003Cp\u003EYes, Unity will page if it can\u0027t allocate to its entire potential address space. If it can, however, it (buggily) decides not to page.\u003C/p\u003E\u003Cp\u003ESo yes, it\u0027s best to make sure (somehow) that KSP can only access ~3.2GB memory \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_happy.png\u0022 alt=\u0022^_^\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"lincourtl","CreatedById":72218,"CreatedDateTime":"2013-11-22T02:24:40Z","Content":"\n\u003Cp\u003EInteresting. Here are the results I got.\u003C/p\u003E\u003Cp\u003EAMD Athlon Dual Core 4850e 2.5 GHz\u003C/p\u003E\u003Cp\u003E2 GB memory\u003C/p\u003E\u003Cp\u003EWindows Vista Business SP2 32 bit\u003C/p\u003E\u003Cp\u003ETesting procedure: Load KSP, go to VAB, load Kerbal X, launch to 1,500 meters, pause, record data, kill KSP process, repeat\u003C/p\u003E\u003Cp\u003E..........................Before...............After......\u003C/p\u003E\u003Cp\u003ECommit.............1763068............1605156\u003C/p\u003E\u003Cp\u003EWorking.............1614036............1440162\u003C/p\u003E\u003Cp\u003EPhysical.............1503144............1395468\u003C/p\u003E\u003Cp\u003ESo I\u0027m only seeing between a 7%-9% change, which isn\u0027t much, but it did feel a little snappier. However, I am using PolecatEZ\u0027s Squad texture reduction pack. I also have a lot of non-part mods like MechJeb2, Protractor, Chatterer (just the voices and beeps), Editor Extensions, RCS Build Aid, etc.\u003C/p\u003E\n"},{"CreatedByName":"mrluckypants96","CreatedById":67764,"CreatedDateTime":"2013-12-21T00:16:02Z","Content":"\n\u003Cp\u003ELooks helpful, but my anti-virus freaks out whenever I try to dl.\u003C/p\u003E\n"},{"CreatedByName":"Synthesis","CreatedById":26557,"CreatedDateTime":"2013-12-21T02:33:01Z","Content":"\n\u003Cp\u003EOkay, so...\u003C/p\u003E\u003Cp\u003EAt the menu after launching, without the DLL--3.4 GB. I like to live dangerously.\u003C/p\u003E\u003Cp\u003EWith the DLL at the same point--2.45 GB....?\u003C/p\u003E\u003Cp\u003EI\u0027m not sure how long it\u0027ll hold, it but seems to work!\u003C/p\u003E\n"}]}