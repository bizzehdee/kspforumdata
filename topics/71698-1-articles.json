{"TopicId":71698,"ForumId":16,"TopicTitle":"Can I reset the \u0026quot;clock\u0026quot; on a craft?","CreatedByName":"jfull","CreatedById":61722,"CreatedDateTime":"2014-05-07T21:50:21Z","PageNum":1,"Articles":[{"CreatedByName":"jfull","CreatedById":61722,"CreatedDateTime":"2014-05-07T21:50:21Z","Content":"\n\u003Cp\u003ESo, every craft has a clock that counts the amount of time that has elapsed since launch, or since it was separated from another craft. But is there a way to set that clock back to zero?\u003C/p\u003E\u003Cp\u003EIf this isn\u0027t possible to do, I think it would be a useful feature for the Devs or a Modder to add.\u003C/p\u003E\u003Cp\u003ELets say I launched a craft into Kerbin orbit way before the transfer window I intended to use to send it to another planet. It would be nice to reset the time on the craft so that it only counts the time since the mission actually began, instead of the time it spend waiting.\u003C/p\u003E\u003Cp\u003EOr, if I had a craft that I brought back home from a mission and refueled in orbit and wanted to use for another mission (and another after that, and so on), I would want to reset the clock at the start of each mission so I know how long its been away from home, not how old the craft is.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T23:20:28Z\u0022 title=\u002205/07/2014 11:20  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by jfull\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2014-05-07T21:54:41Z","Content":"\n\u003Cp\u003EQuicksave with F5, then load with F9. Resets the MET timer.\u003C/p\u003E\u003Cp\u003EEdit: Or not, see below.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T22:28:47Z\u0022 title=\u002205/07/2014 10:28  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by Red Iron Crown\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Boomerang","CreatedById":92198,"CreatedDateTime":"2014-05-07T21:57:57Z","Content":"\n\u003Cp\u003EIf you\u0027re down with editing the persistence file, the \u0027lct\u0027 property near the top of the vessel info is the number of seconds elapsed since the start of the mission. So you could replace what ever is there with a \u00270\u0027 and the counter would reset next time you load the game. \u003C/p\u003E\u003Cp\u003EDunno if there\u0027s a mod that has any such functionality.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-05-07T21:58:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022 data-cite=\u0022Red Iron Crown\u0022\u003E\u003Cdiv\u003EQuicksave with F5, then load with F9. Resets the MET timer.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENope, doesn\u0027t work for me.\u003C/p\u003E\u003Cp\u003EIf you break your ship (e.g. separate a stage or undock a probe), the separate part gets its own new MET timer which start at the moment of separation. Maybe if you switch control to a probe core, then decouple it (axial, not radial decoupler), you may reset the MET timer on your ship. Gotta try it...\u003C/p\u003E\u003Cp\u003EEdit: nope, MET timer stays with root part, the detached child part gets its MET timer cleared. This might mean it might be possible to clear the MET timer by docking...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T22:10:50Z\u0022 title=\u002205/07/2014 10:10  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by Kasuha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"jfull","CreatedById":61722,"CreatedDateTime":"2014-05-07T22:03:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003ENope, doesn\u0027t work for me.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, I\u0027ve flown tons of long-duration missions and needed to load quicksaves durring the course of them, and I can\u0027t recall any time that it reset the timer.\u003C/p\u003E\n"},{"CreatedByName":"jfull","CreatedById":61722,"CreatedDateTime":"2014-05-07T22:06:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Boomerang\u0022 data-cite=\u0022Boomerang\u0022\u003E\u003Cdiv\u003EIf you\u0027re down with editing the persistence file, the \u0027lct\u0027 property near the top of the vessel info is the number of seconds elapsed since the start of the mission. So you could replace what ever is there with a \u00270\u0027 and the counter would reset next time you load the game. \u003Cp\u003EDunno if there\u0027s a mod that has any such functionality.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI may or may not try that, I\u0027m not sure I\u0027m comfortable with getting into the persistence file, but that edit doesn\u0027t seem like it could mess anything up.\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2014-05-07T22:13:03Z","Content":"\n\u003Cp\u003EStrange, it happened to me last time I quickloaded (after Jeb fell off the ladder on an Eve lander). I wonder what caused it.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cimg src=\u0022https://dl.dropboxusercontent.com/u/61004449/KSP/screenshot67.png\u0022 alt=\u0022screenshot67.png\u0022\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-05-07T22:17:48Z","Content":"\n\u003Cp\u003EConfirmed: docking to a station and undocking from it resets MET of a ship. It does not reset the MET of the station ... and I am not sure how the game decides what is the \u0022station\u0022 and what is the \u0022ship\u0022.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-05-07T22:21:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022 data-cite=\u0022Red Iron Crown\u0022\u003E\u003Cdiv\u003EStrange, it happened to me last time I quickloaded (after Jeb fell off the ladder on an Eve lander). I wonder what caused it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre you sure it is not MET of that Kerbal? When you send a Kerbal on EVA, he gets his MET cleared.\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2014-05-07T22:28:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003EAre you sure it is not MET of that Kerbal? When you send a Kerbal on EVA, he gets his MET cleared.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHerp derp, you\u0027re right.\u003C/p\u003E\n"},{"CreatedByName":"jfull","CreatedById":61722,"CreatedDateTime":"2014-05-07T23:26:45Z","Content":"\n\u003Cp\u003EI\u0027m gonna go ahead and call this one answered.\u003C/p\u003E\u003Cp\u003EThank you everyone who did offer some suggestions\u003C/p\u003E\n"},{"CreatedByName":"KerbMav","CreatedById":70338,"CreatedDateTime":"2014-05-08T09:02:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003EI am not sure how the game decides what is the \u0022station\u0022 and what is the \u0022ship\u0022.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt does not - you did, didnt you? (Marking the craft as \u003Cem\u003Estation\u003C/em\u003E by renaming it?)\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-05-08T10:15:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022KerbMav\u0022 data-cite=\u0022KerbMav\u0022\u003E\u003Cdiv\u003EIt does not - you did, didnt you? (Marking the craft as \u003Cem\u003Estation\u003C/em\u003E by renaming it?)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, I was not renaming anything. And the question is rather what will be the root part and what will be the \u0022appendix\u0022 after two ships dock. Because that\u0027s what affects the MET.\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-05-08T11:02:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003ENo, I was not renaming anything. And the question is rather what will be the root part and what will be the \u0022appendix\u0022 after two ships dock. Because that\u0027s what affects the MET.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is a subject that would benefit from an in-depth analysis along the lines of your fuel flow thread (though there probably aren\u0027t as many cases to consider). I believe (mainly from the evidence of the MET, I haven\u0027t done any explicit tests) that when you dock one craft to another it re-roots the craft you are flying to have the docking port as the root before attaching it to the destination port. I don\u0027t know what it does when you undock again, it may leave it with the docking port as the root or it may remember what the previous root was and reset it when you undock.\u003C/p\u003E\u003Cp\u003EIt would also require some sort of plugin to display (or at least log) info about the crafts so you can see what the root is at any particular point. The latest version of KER has some useful code for dumping out the whole of the part tree. I\u0027ll have a look at adding a button to the engineer tweakable window that simply dumps the part tree to output_log.txt and then run a few tests...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-08T11:09:29Z\u0022 title=\u002205/08/2014 11:09  AM\u0022 data-short=\u002210 yr\u0022\u003EMay 8, 2014\u003C/time\u003E by Padishar\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-05-08T11:24:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Padishar\u0022 data-cite=\u0022Padishar\u0022\u003E\u003Cdiv\u003EThis is a subject that would benefit from an in-depth analysis along the lines of your fuel flow thread (though there probably aren\u0027t as many cases to consider). I believe (mainly from the evidence of the MET, I haven\u0027t done any explicit tests) that when you dock one craft to another it re-roots the craft you are flying to have the docking port as the root before attaching it to the destination port. I don\u0027t know what it does when you undock again, it may leave it with the docking port as the root or it may remember what the previous root was and reset it when you undock.\u003Cp\u003EIt would also require some sort of plugin to display (or at least log) info about the crafts so you can see what the root is at any particular point. The latest version of KER has some useful code for dumping out the whole of the part tree. I\u0027ll have a look at adding a button to the engineer tweakable window that simply dumps the part tree to output_log.txt and then run a few tests...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAccording to \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/64362-Fuel-Flow-Rules-%280-23-5%29?p=1135108\u0026amp;viewfull=1#post1135108\u0022 rel=\u0022external nofollow\u0022\u003Ethis experiment\u003C/a\u003E, root is switched back (or at least away from the docking port) after undocking. Similar technique could be potentially used to figure out what\u0027s happening with docking/undocking in general.\u003C/p\u003E\n"},{"CreatedByName":"KerbMav","CreatedById":70338,"CreatedDateTime":"2014-05-08T14:11:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003ENo, I was not renaming anything. And the question is rather what will be the root part and what will be the \u0022appendix\u0022 after two ships dock. Because that\u0027s what affects the MET.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI meant, the game knows a craft is a station because it is marked as a station.\u003C/p\u003E\n"},{"CreatedByName":"DoToH","CreatedById":68428,"CreatedDateTime":"2014-05-08T20:46:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022KerbMav\u0022 data-cite=\u0022KerbMav\u0022\u003E\u003Cdiv\u003EI meant, the game knows a craft is a station because it is marked as a station.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBut has this some influence on which one of the two root parts before docking will be the root part of the ship after docking? (I\u0027m assuming one of them has to be the new root part.. if I\u0027m wrong, please correct me)\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-08T21:11:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003EAccording to \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/64362-Fuel-Flow-Rules-%280-23-5%29?p=1135108\u0026amp;viewfull=1#post1135108\u0022 rel=\u0022external nofollow\u0022\u003Ethis experiment\u003C/a\u003E, root is switched back (or at least away from the docking port) after undocking. Similar technique could be potentially used to figure out what\u0027s happening with docking/undocking in general.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, it appears the parent docking port remembers the UID of the child\u0027s root, the child\u0027s craft type, and the name of the child craft. The child craft gets shuffled a bit with the child\u0027s docking port becoming the child\u0027s connection point, and the child\u0027s docking port takes on the mothership\u0027s docking port as its parent. When the ship splits, the child is reshuffled back and the root part becomes the root again.\u003C/p\u003E\u003Cp\u003EAt least this is what I can discern fom studying save files.\u003C/p\u003E\u003Cp\u003EI suspect some of the undocking woes are within this splitting/reshuffling process. I\u0027ve been able to find a way to split ships by using a different connection method within the save file. It\u0027s not convenient, but it seems to be effective in splitting stuck docking ports.\u003C/p\u003E\n"},{"CreatedByName":"DoToH","CreatedById":68428,"CreatedDateTime":"2014-05-09T17:32:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Claw\u0022 data-cite=\u0022Claw\u0022\u003E\u003Cdiv\u003EYes, it appears the parent docking port remembers the UID of the child\u0027s root, the child\u0027s craft type, and the name of the child craft. The child craft gets shuffled a bit with the child\u0027s docking port becoming the child\u0027s connection point, and the child\u0027s docking port takes on the mothership\u0027s docking port as its parent. When the ship splits, the child is reshuffled back and the root part becomes the root again.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo the fact that one of the ships is tagged as \u0022space station\u0022 doesn\u0027t matter when choosing the parent ship when docking. The ship you are controlling is allways the child. Correct?\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-10T01:44:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DoToH\u0022 data-cite=\u0022DoToH\u0022\u003E\u003Cdiv\u003ESo the fact that one of the ships is tagged as \u0022space station\u0022 doesn\u0027t matter when choosing the parent ship when docking. The ship you are controlling is allways the child. Correct?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh sorry, that\u0027s not quite right. My post was mostly in reference to the structure of the craft in the save files and how everything gets shuffled around.\u003C/p\u003E\u003Cp\u003EThe choice of what becomes parent/child is a matter of (at least) two layers of priority, maybe three. I\u0027m not certain of all these rules or where the thresholds are, but this is what some of my testing has shown.\u003C/p\u003E\u003Cp\u003EParent ship is chosen by:\u003C/p\u003E\u003Cp\u003E1) Priority order from lowest to highest by craft type: Debris, Probe, Rover, Lander, Ship, Station, Base. The craft with the highest priority becomes the parent. Easy way to remember: this priority corresponds to the map filter order (buttons at the top).\u003C/p\u003E\u003Cp\u003E2) If the two craft have the same priority, the \u0022larger\u0022 one becomes the parent. (I don\u0027t know yet how larger is chosen, but I think it might be by part count.)\u003C/p\u003E\u003Cp\u003E3) If the two craft have the same priority and size, the first one launched becomes the parent.\u003C/p\u003E\u003Cp\u003ELike I said, I\u0027m not certain these are all the priority rules, but it\u0027s what I\u0027ve learned so far.\u003C/p\u003E\u003Cp\u003EExamples...\u003C/p\u003E\u003Cp\u003E- So if you dock a ship to a station, the station is the parent. When the Ship undocks, its timer is reset. (Here, I mean the \u0022Ship\u0022 type, not just a generic craft.)\u003C/p\u003E\u003Cp\u003E- If you dock a probe to a lander, the lander is the parent.\u003C/p\u003E\u003Cp\u003E- If you dock a station to a base, the base is the parent.\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-05-10T10:08:18Z","Content":"\n\u003Cp\u003EIn all your examples, the thing you are docking to becomes the parent of the craft you are controlling. I\u0027m not convinced there are any rules like you describe. It would be much simpler to implement if the craft you are controlling is always re-rooted and attached to the other craft as a child of the docking port. HarvesteR describes this \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/74889-Change-to-RCS-and-Xenon-flow-rules?p=1147349\u0026amp;viewfull=1#post1147349\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E.\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-10T12:44:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Padishar\u0022 data-cite=\u0022Padishar\u0022\u003E\u003Cdiv\u003EIn all your examples, the thing you are docking to becomes the parent of the craft you are controlling. I\u0027m not convinced there are any rules like you describe. It would be much simpler to implement if the craft you are controlling is always re-rooted and attached to the other craft as a child of the docking port. HarvesteR describes this \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/74889-Change-to-RCS-and-Xenon-flow-rules?p=1147349\u0026amp;viewfull=1#post1147349\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt is definitely NOT that whatever craft you are controlling becomes re-rooted and turned into the child. That I can say for certain. Quite frankly, the code is the same for whichever craft you are reshuffling so it wouldn\u0027t be \u0022easier\u0022 or \u0022harder\u0022 for to reshuffle one craft or the other.\u003C/p\u003E\u003Cp\u003EAs for my examples. Well, you got me by the virtue that I didn\u0027t think about how I was typing it, because I thought it was straight forward enough. I didn\u0027t say which craft was \u0022in control\u0022 and which was the \u0022target\u0022 but I can see it being read that way. I can just as easily say...\u003C/p\u003E\u003Cp\u003EExamples...\u003C/p\u003E\u003Cp\u003E- So if you dock a station to a ship, the station is the parent. When the Ship undocks, its timer is reset. (Here, I mean the \u0022Ship\u0022 type, not just a generic craft.)\u003C/p\u003E\u003Cp\u003E- If you dock a lander to a probe, the lander is the parent.\u003C/p\u003E\u003Cp\u003E- If you dock a base to a station, the base is the parent. \u003C/p\u003E\u003Cp\u003EI would say I typically think about it the other way, because that\u0027s the priority and that\u0027s what makes sense in my head.\u003C/p\u003E\u003Cp\u003ESnippet of HarvestR\u0027s post...\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EHierarchy shifts happen all the time as you play. Docking is what got that whole thing started, as as you docked, the \u0027docker\u0027 side of the pair would shift its internal part hierarchy so that the docking port itself was the root of the vessel, and everything from there down became children of it. Then upon undocking (assuming the vessel still contained its original root part... man, 0.18 was a pain to debug), we flip the hierarchy back again so the old root is now the parent for everybody else.\u003C/p\u003E\u003Cp\u003ENow, with the whole \u0027we can now shift hierarchies\u0027 thing added, we saw that there was no need to enforce that a pod be the initial part on a ship. As long as it was something you could attach other parts to, there was no reason why anything couldn\u0027t be the root, but it did create the new problem in which the command pods now were not only optional, they also were possibly placed after decouplers. Hence, root-dropping.\u003C/p\u003E\u003Cp\u003EAnyhow, I should get back to work here. Best of luck with your mod. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am certainly not trying to go against anything HarvestR is saying. I don\u0027t really know what you want me to say about it. I\u0027m just trying to tell you that I can come across more than one situation where the vessel I\u0027m controlling does NOT become the child.\u003C/p\u003E\u003Cp\u003EIf you don\u0027t believe me, go dock two craft together. Quicksave before you do and be in control of one of them. Dock and check. Then quickload, switch to the other, dock and check again. The parent will be the same.\u003C/p\u003E\u003Cp\u003EYou can also dock a vessel marked as a ship (in control) to a vessel marked as a lander (the target) and see which becomes the parent ship. By what you said, it\u0027s the lander. By the priority I listed, it\u0027s the ship.\u003C/p\u003E\u003Cp\u003EAlso, bear in mind that I did this testing with ships of similar composition. So if you find something different, like I said there may be other rules.\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-10T13:18:26Z","Content":"\n\u003Cp\u003EFunnyenough, I was specifically trying to avoid hijacking the tread. But since it\u0027s already answered... (Perhaps we should move this elsewhere?)\u003C/p\u003E\u003Cp\u003EHere\u0027s a simple example. I made three craft, all identical. Two are marked as landers, named \u0022Lander 1\u0022 and \u0022Lander 2\u0022. The third craft is tagged as a Ship, and is named \u0022Ship\u0022.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/YTnVQYp.jpg\u0022 alt=\u0022YTnVQYp.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EExamination of the save file craft order shows: Lander 2, Ship, Lander 1\u003C/p\u003E\u003Cp\u003EFirst test, docking Lander 2 (in control) with Lander 1 (the target). By \u0022simple\u0022 rules, Lander 2 should become the child and Lander 1, the parent.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/eudmB6K.jpg\u0022 alt=\u0022eudmB6K.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EExcept what happened here? Lander 2 became the parent even though it was \u0022in control\u0022 at the time of docking. That\u0027s because the craft are the same size and same type, so the one that\u0027s first in the save file wins. Examine the save file, Lander 2 is listed as one large VESSEL with a DOCKED_VESSEL of \u0022Lander 1\u0022, and Ship is listed after.\u003C/p\u003E\u003Cp\u003ESecond Test:\u003C/p\u003E\u003Cp\u003EDocking the Ship to the Lander 2 (now composed of \u0022Lander 1\u0022 \u002B \u0022Lander 2\u0022). By the simple rules, the Ship is \u0022in control\u0022 and should become the child.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/NuEYA8W.jpg\u0022 alt=\u0022NuEYA8W.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EAgain, that didn\u0027t happen. Ship became the parent even though Lander 2 is larger and listed first in the save file. That\u0027s because it\u0027s Type has priority.\u003C/p\u003E\u003Cp\u003EEven if all my rules are completely wrong, I can say that it is definitely NOT the case that which ever craft is in control becomes the child.\u003C/p\u003E\u003Cp\u003EAlso, if people are going to keep digging, I should crush one other thing that may be mistaken from these two examples. They both show that the \u0022in control\u0022 vessel becomes the parent. Realize that\u0027s because I was specifically trying to show that the \u0022in control\u0022 craft does not always become the child. It doesn\u0027t matter which vessel you are \u0022in control\u0022 of for either of these two examples. In fact, you can be in control of \u0022Ship\u0022 when Lander 1 \u0026amp; Lander 2 complete the docking and Lander 2 always becomes the parent.\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-05-10T21:02:00Z","Content":"\n\u003Cp\u003ESorry, I missed this earlier. Yes, we should probably have taken this elsewhere.\u003C/p\u003E\u003Cp\u003EThanks for the new examples. I wasn\u0027t trying to say that you were wrong, I should probably have written \u0022I\u0027m not convinced \u003Cstrong\u003Eby the evidence you have given\u003C/strong\u003E that there are any rules like you describe.\u0022 Thinking back over my time playing I think I have actually experienced the craft I was in control of staying as the root when docking when I was messing with a skycrane to rescue a stranded rover.\u003C/p\u003E\u003Cp\u003EI have a very useful feature in my dev version of KER that adds a button to the engineer tweakable that dumps the part tree of the vessel into output_log.txt so I\u0027m going to run a whole suite of tests on this because I will need to know the actual rules used for a mission planner plugin I am currently designing. It may take a while to devise and run enough tests to make firm conclusions but I will post a thread somewhere once I have some...\u003C/p\u003E\u003Cp\u003EEdit: Out of interest, what is the root part of that craft?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-10T21:05:38Z\u0022 title=\u002205/10/2014 09:05  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 10, 2014\u003C/time\u003E by Padishar\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-05-11T03:19:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Padishar\u0022 data-cite=\u0022Padishar\u0022\u003E\u003Cdiv\u003ESorry, I missed this earlier. Yes, we should probably have taken this elsewhere.\u003Cp\u003EThanks for the new examples. I wasn\u0027t trying to say that you were wrong, I should probably have written \u0022I\u0027m not convinced \u003Cstrong\u003Eby the evidence you have given\u003C/strong\u003E that there are any rules like you describe.\u0022 Thinking back over my time playing I think I have actually experienced the craft I was in control of staying as the root when docking when I was messing with a skycrane to rescue a stranded rover.\u003C/p\u003E\u003Cp\u003EI have a very useful feature in my dev version of KER that adds a button to the engineer tweakable that dumps the part tree of the vessel into output_log.txt so I\u0027m going to run a whole suite of tests on this because I will need to know the actual rules used for a mission planner plugin I am currently designing. It may take a while to devise and run enough tests to make firm conclusions but I will post a thread somewhere once I have some...\u003C/p\u003E\u003Cp\u003EEdit: Out of interest, what is the root part of that craft?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo sweat. I really was just trying to not completely hijack the thread with examples while explaining what someone asked.\u003C/p\u003E\u003Cp\u003EI\u0027ve moved this information to a new thread: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/79594-Docking-and-Vessel-Type-Rules-%280-23-5%29\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/79594-Docking-and-Vessel-Type-Rules-%280-23-5%29\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThe root part in the pictures above are the probe cores closest to the modular girders that connect the wheels to the fuel tank. The root of the whole ship in that last picture is the probe core that I right-clicked on.\u003C/p\u003E\n"}]}