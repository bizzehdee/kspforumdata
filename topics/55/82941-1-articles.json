{"TopicId":82941,"ForumId":55,"TopicTitle":"Physics Warp - How Does Time Step Work","CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-26T15:15:39Z","PageNum":1,"Articles":[{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-26T15:15:39Z","Content":"\n\u003Cp\u003EThis is something that has confused me for a long time: if you have a simple spaceplane with two jet engines mounted at the wingtips, entering physics-warp will bend the wings forward. This implies that the thrusts (and therefore torques) are simply increased, rather than actually changing the value of the time step used in physics calculations. What is going on?\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-08-26T16:34:05Z","Content":"\n\u003Cp\u003EIt\u0027s about how the simulation works. If you have an engine that pulls your rocket somewhere, the physics engine applies thrust on the engine directly (by moving it slightly forward), and on the rest of the ship indirectly, i.e. through resolving displacements on individual joints within the ship structure. If you increase time step, the displacement added directly to the engine position grows.\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-26T19:57:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003EIt\u0027s about how the simulation works. If you have an engine that pulls your rocket somewhere, the physics engine applies thrust on the engine directly (by moving it slightly forward), and on the rest of the ship indirectly, i.e. through resolving displacements on individual joints within the ship structure. If you increase time step, the displacement added directly to the engine position grows.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI assume the way displacements apply force is by modeling joints as linear springs. This, however, has nothing to do with changing the time step. The force applied is constant with time step; the displacement should be constant too. \u003C/p\u003E\u003Cp\u003EOr are you suggesting that there is no \u0022time-step\u0022 used in Unity/PhysX at all; the time step is merely simulated in KSP. This would explain why my intake air multiplies by a factor of 4 when i enter 4x time warp (the air flowrate in kg/s should remain constant with time step). \u003C/p\u003E\u003Cp\u003EDo you have any references for what you are saying? I am interested in learning more.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-08-26T20:35:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022arkie87\u0022 data-cite=\u0022arkie87\u0022\u003E\u003Cdiv\u003EI assume the way displacements apply force is by modeling joints as linear springs.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat seems reasonable.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022arkie87\u0022 data-cite=\u0022arkie87\u0022\u003E\u003Cdiv\u003EThe force applied is constant with time step; the displacement should be constant too.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy understanding is that force stays the same but by acting for four times longer it delivers four times the work. Subsequently it causes four times the displacement.\u003C/p\u003E\u003Cp\u003EThere may also be positive feedback - as joints bend, engines are no longer parallel and their force vectors increase the bending.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-26T20:38:46Z\u0022 title=\u002208/26/2014 08:38  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 26, 2014\u003C/time\u003E by Kasuha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TJPrime","CreatedById":101641,"CreatedDateTime":"2014-08-26T20:39:23Z","Content":"\n\u003Cp\u003EShouldn\u0027t this be in the question part of the forum? Not suggestions and development?\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-26T22:11:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TJPrime\u0022 data-cite=\u0022TJPrime\u0022\u003E\u003Cdiv\u003EShouldn\u0027t this be in the question part of the forum? Not suggestions and development?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMaybe, but its labelled as discussion, and it seems to me this is an artifact of the way KSP treats time steps, hence a suggestion to fix it.\u003C/p\u003E\n"},{"CreatedByName":"deadalnix","CreatedById":119486,"CreatedDateTime":"2014-08-27T00:04:37Z","Content":"\n\u003Cp\u003EWhat seems to happen is:\u003C/p\u003E\u003Cp\u003E - The impulse is applyed to the engine.\u003C/p\u003E\u003Cp\u003E - Joint resolution move the ship forward.\u003C/p\u003E\u003Cp\u003ESo far so good, that is how physic usually to work.\u003C/p\u003E\u003Cp\u003EBUT, when you warp, the simulation step is increased, so the joint diverge much more before resolution kicks in. That is why the vessels bend in bizare way when time is warped.\u003C/p\u003E\n"},{"CreatedByName":"vexx32","CreatedById":12283,"CreatedDateTime":"2014-08-27T00:25:56Z","Content":"\n\u003Cp\u003EYou\u0027d probably be able to figure this out by delving into the PhysX documentation, since I think PhysX handles the P-Warp functions.\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-27T00:59:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022deadalnix\u0022 data-cite=\u0022deadalnix\u0022\u003E\u003Cdiv\u003EWhat seems to happen is:\u003Cp\u003E - The impulse is applyed to the engine.\u003C/p\u003E\u003Cp\u003E - Joint resolution move the ship forward.\u003C/p\u003E\u003Cp\u003ESo far so good, that is how physic usually to work.\u003C/p\u003E\u003Cp\u003EBUT, when you warp, the simulation step is increased, so the joint diverge much more before resolution kicks in. That is why the vessels bend in bizare way when time is warped.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis doesnt make sense to me. If joints are modeled as linear springs, then displacement is related to force, and force is constant regardless of time warp...\u003C/p\u003E\u003Cp\u003Em*dV/dt = F\u003C/p\u003E\u003Cp\u003EIf dt becomes larger, then dV becomes larger for constant F (and m)\u003C/p\u003E\n"},{"CreatedByName":"Renegrade","CreatedById":96629,"CreatedDateTime":"2014-08-27T13:17:50Z","Content":"\n\u003Cp\u003EIt could quite simply be a matter of while forces of thrust are being scaled (by the larger delta), the various resistance forces are not, heh.\u003C/p\u003E\u003Cp\u003E(I generally avoid using variable deltas in my own work, partly because of lazy, partly because I don\u0027t have to worry about the above)\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-08-27T13:59:27Z","Content":"\n\u003Cp\u003EI\u0060ve always wondered why the forces are not divided by four when time is multiplied by four. If the time step is four times larger then that suggests a quarter strength force would balance out by being applied for \u0060longer\u0060.\u003C/p\u003E\u003Cp\u003EThere MUST be a way to not have excessive physics warp destroy your ship. Seems like it has not been well thought out. It\u0060s just maths after all.\u003C/p\u003E\u003Cp\u003EYou could just do a quick test to see if the engines would destroy the craft at near dry weight and full thrust then if that won\u0060t happen then thrust under rails...\u003C/p\u003E\n"},{"CreatedByName":"rkman","CreatedById":15721,"CreatedDateTime":"2014-08-27T14:13:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022arkie87\u0022 data-cite=\u0022arkie87\u0022\u003E\u003Cdiv\u003EI assume the way displacements apply force is by modeling joints as linear springs. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EJoints are not just linear springs, they can rotate as well. That\u0027s how rockets can wobble/bend.\u003C/p\u003E\n"},{"CreatedByName":"Andrew Hansen","CreatedById":82311,"CreatedDateTime":"2014-08-27T14:20:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EThere MUST be a way to not have excessive physics warp destroy your ship. Seems like it has not been well thought out. It\u0060s just maths after all.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree with you. The physics warp code hasn\u0027t been touched for a long time in KSP - maybe now it needs an upgrade. Of course, maybe it\u0027s a lot harder to deal with than I thought.\u003C/p\u003E\u003Cp\u003EI also thought I\u0027d bring up the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/85926-0-24-BetterTimeWarp-v1-1\u0022 rel=\u0022external nofollow\u0022\u003EBetterTimeWarp\u003C/a\u003E mod into this discussion. It allows you to have as much physics warp as you could ever want - a billion times normal speed if you so desire. If you use it on 10,000x speed and you\u0027re burning an ion-powered probe, logic tells me that the ship should disintegrate from the increased forces (Just think about how much more force is applied in 4x warp than 3x warp). And yet, that\u0027s not what happens. So... I wonder if that says anything (I\u0027m just a layperson, so I won\u0027t/can\u0027t jump to any technical conclusions).\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-08-27T14:32:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EMy understanding is that force stays the same but by acting for four times longer it delivers four times the work. Subsequently it causes four times the displacement.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt would be good to have some inputs directly from Harvester or someone who knows the true answer, because guesspeculating is not good.\u003C/p\u003E\u003Cp\u003EWhat I don\u0027t understand is TW should be seen as time step modification, as to be very very simple:\u003C/p\u003E\u003Cp\u003E(for current frame)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ephysics[t] = something_like_get_previous_state(physics[t-1]) \u002B forces_actually_at_work[t]\u003Cbr\u003Edisplay_frame(t)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewith t = the time step.\u003C/p\u003E\u003Cp\u003Eusing timewarp should make t=t\u002B1 become t=t\u002BTW (\u002B2/3/4 for stock atmo warp) with a bit of code to interpolate forces between skip frames\u003C/p\u003E\u003Cp\u003E(if you have z= \u002B50 kN, every frame, thurst for TW2 = 100 kN for frame 1 to frame 3, with TW2 = 2x timewarp) \u002B all the related calculations.\u003C/p\u003E\u003Cp\u003EConsidering the basic game loop may be:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ewhile (1)\u003Cbr\u003E{\u003Cbr\u003E   do calculations\u003Cbr\u003E   manage vsync  (=wait if needed)\u003Cbr\u003E   display frame\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen, \u0022bizarre\u0022 forces and SAS misbehaviour should not happened, but it\u0027s not actually the case, all parts joints that could bend (typically wing connectors) bend and SAS is unable to work properly (if we can consider it\u0027s even work properly as it\u0027s very dumb most of the time but that\u0027s another topic)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T14:35:59Z\u0022 title=\u002208/27/2014 02:35  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by Justin Kerbice\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-27T17:24:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Renegrade\u0022 data-cite=\u0022Renegrade\u0022\u003E\u003Cdiv\u003EIt could quite simply be a matter of while forces of thrust are being scaled (by the larger delta), the various resistance forces are not, heh.\u003Cp\u003E(I generally avoid using variable deltas in my own work, partly because of lazy, partly because I don\u0027t have to worry about the above)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EForce of thrust should not be scaled with time-step.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-08-27T17:50:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EIt would be good to have some inputs directly from Harvester or someone who knows the true answer, because guesspeculating is not good.\u003Cp\u003EWhat I don\u0027t understand is TW should be seen as time step modification, as to be very very simple:\u003C/p\u003E\u003Cp\u003E(for current frame)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ephysics[t] = something_like_get_previous_state(physics[t-1]) \u002B forces_actually_at_work[t]\u003Cbr\u003Edisplay_frame(t)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewith t = the time step.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EF ... thrust force\u003C/p\u003E\u003Cp\u003Em ... mass of the engine\u003C/p\u003E\u003Cp\u003Ea ... acceleration\u003C/p\u003E\u003Cp\u003Et ... time\u003C/p\u003E\u003Cp\u003Ev ... speed\u003C/p\u003E\u003Cp\u003Es ... position\u003C/p\u003E\u003Cp\u003Eds, dv, dt ... changes in position, speed, time. dt is a parameter here\u003C/p\u003E\u003Cp\u003ENewton physics:\u003C/p\u003E\u003Cp\u003Ea = F / m\u003C/p\u003E\u003Cp\u003Edv = a . dt\u003C/p\u003E\u003Cp\u003Eds = a . dt^2 / 2 \u002B v . dt\u003C/p\u003E\u003Cp\u003Eif dt = 1, then ds = a / 2 \u002B v\u003C/p\u003E\u003Cp\u003Eif dt = 4, then ds = 8 . a \u002B 4 . v\u003C/p\u003E\u003Cp\u003EAs you can see, the force / acceleration-releated part of displacement grows with square of dt, not linearly with it.\u003C/p\u003E\u003Cp\u003EOnly after moving the engine by ds, the action of joints is applied to it, pulling it back somewhat and pulling the rest of the ship along the engine. Doing it differently would require solving really complicated set of differential equations. I\u0027m pretty sure that\u0027s not how PhysX works.\u003C/p\u003E\u003Cp\u003ESo yeah, this is all guesses. But I believe I am not very far from truth.\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-27T17:51:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rkman\u0022 data-cite=\u0022rkman\u0022\u003E\u003Cdiv\u003EJoints are not just linear springs, they can rotate as well. That\u0027s how rockets can wobble/bend.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThey are linear with distance and linear with rotation. There is such a thing as a linear torsional springs as well... This is accounted for in the stiffness tensor.\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-27T17:53:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EI\u0060ve always wondered why the forces are not divided by four when time is multiplied by four. If the time step is four times larger then that suggests a quarter strength force would balance out by being applied for \u0060longer\u0060.\u003Cp\u003EThere MUST be a way to not have excessive physics warp destroy your ship. Seems like it has not been well thought out. It\u0060s just maths after all.\u003C/p\u003E\u003Cp\u003EYou could just do a quick test to see if the engines would destroy the craft at near dry weight and full thrust then if that won\u0060t happen then thrust under rails...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is why you cant think about math .... without math. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E\u003C/p\u003E\u003Cp\u003EIncreasing time step does not change the forces, it just changes the deltaV over that time step. The fact that it messes with forces/torques/displacements implies the time step is not really a physics time-step.\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-27T18:02:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003EF ... thrust force\u003Cp\u003Em ... mass of the engine\u003C/p\u003E\u003Cp\u003Ea ... acceleration\u003C/p\u003E\u003Cp\u003Et ... time\u003C/p\u003E\u003Cp\u003Ev ... speed\u003C/p\u003E\u003Cp\u003Es ... position\u003C/p\u003E\u003Cp\u003Eds, dv, dt ... changes in position, speed, time. dt is a parameter here\u003C/p\u003E\u003Cp\u003ENewton physics:\u003C/p\u003E\u003Cp\u003Ea = F / m\u003C/p\u003E\u003Cp\u003Edv = a . dt\u003C/p\u003E\u003Cp\u003Eds = a . dt^2 / 2 \u002B v . dt\u003C/p\u003E\u003Cp\u003Eif dt = 1, then ds = a / 2 \u002B v\u003C/p\u003E\u003Cp\u003Eif dt = 4, then ds = 8 . a \u002B 4 . v\u003C/p\u003E\u003Cp\u003EAs you can see, the force / acceleration-releated part of displacement grows with square of dt, not linearly with it.\u003C/p\u003E\u003Cp\u003EOnly after moving the engine by ds, the action of joints is applied to it, pulling it back somewhat and pulling the rest of the ship along the engine. Doing it differently would require solving really complicated set of differential equations. I\u0027m pretty sure that\u0027s not how PhysX works.\u003C/p\u003E\u003Cp\u003ESo yeah, this is all guesses. But I believe I am not very far from truth.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETHANK YOU! I think that makes a lot of sense and explains it. What you are saying is the PhysX engine applies physics directly to the parts with thrust and integrates the equations of motion for each part, causing the engines to displace farther and pull on the ship to accelerate it. \u003C/p\u003E\u003Cp\u003EWhat would be smarter/better is to treat the ship as a rigid body for the purpose of conserving overall linear and angular momentum, and then resolve all forces/torques between all parts in the rigid body. i.e. instead of treating each parts displacement on an absolute scale (with no realization that the parts of the ship are connected), treat the ship as a whole on an absolute scale and then each individual part locally. Unfortunately, if this is true, there is no way to change this without changing PhysX itself. \u003C/p\u003E\u003Cp\u003EMaybe i should make my own engine?\u003C/p\u003E\u003Cp\u003EEdit: I think this is a direct result of performing explicit integration rather than implicit. If implicit integration were used, the parts undergoing thrust would not displace as much, because the external forces on the part would be calculated implicitly i.e. based on the future displacement (rather than the present displacement i.e. explicit).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T20:23:56Z\u0022 title=\u002208/27/2014 08:23  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by arkie87\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"juanml82","CreatedById":105344,"CreatedDateTime":"2014-08-28T23:03:50Z","Content":"\n\u003Cp\u003EI don\u0027t know about the code or maths involved, but I wonder if a simple fix could be to \u0022freeze\u0022 the spacecraft if it\u0027s stable enough. Specially so in space, where there aren\u0027t aerodynamic forces (ok, well). Basically, before entering physics warp, the game calculates if maneuvers like throttling up or gently turning the ship can cause it to break or bend above a certain threshold. If it doesn\u0027t, the parts are kind of \u0022welded\u0022 together until the ship exits physics warp or the player does a more extreme maneuver\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-08-29T16:24:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022juanml82\u0022 data-cite=\u0022juanml82\u0022\u003E\u003Cdiv\u003EI don\u0027t know about the code or maths involved, but I wonder if a simple fix could be to \u0022freeze\u0022 the spacecraft if it\u0027s stable enough. Specially so in space, where there aren\u0027t aerodynamic forces (ok, well). Basically, before entering physics warp, the game calculates if maneuvers like throttling up or gently turning the ship can cause it to break or bend above a certain threshold. If it doesn\u0027t, the parts are kind of \u0022welded\u0022 together until the ship exits physics warp or the player does a more extreme maneuver\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think this is exactly what i was saying above: you basically treat the ship as one part to conserve momentum. And afterwards, you calculate forces and torques on parts to see if they break. This will make the physics and physics warp a lot more stable. Unfortunately, it seems like PhysX is in control here and for the sake of generality, solves the physics for each part separately and then applies forces between parts. \u003C/p\u003E\u003Cp\u003EHowever, i suppose its still possible to fix it, by telling PhysX the ship is a rigid body and calculating stresses and displacements manually afterward.\u003C/p\u003E\n"},{"CreatedByName":"deadalnix","CreatedById":119486,"CreatedDateTime":"2014-08-29T22:20:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022arkie87\u0022 data-cite=\u0022arkie87\u0022\u003E\u003Cdiv\u003EThis doesnt make sense to me. If joints are modeled as linear springs, then displacement is related to force, and force is constant regardless of time warp...\u003Cp\u003Em*dV/dt = F\u003C/p\u003E\u003Cp\u003EIf dt becomes larger, then dV becomes larger for constant F (and m)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt is not that simple. Because your ship is made of many parts and joints, and you simulate by step (like any physic engine do). You cannot know ahead of time what joint force to apply, as the force will depend on the divergence between the part of the ship. To make thing worse, each joint force change the behavior of other joints. You typically have 2 way to simulate joins (and all composition of these on various translation and rotation axes to for rail-like joints for instance):\u003C/p\u003E\u003Cp\u003E - solid joints, where the 2 bodies are simulated as one, and a computation is done to know if the joint broke (in which case the engine switch to simulate the 2 bodies independently).\u003C/p\u003E\u003Cp\u003E - dynamic joints, where the various bodies are simulated as if no joint existed, THEN a joint resolution engine kicks and try to make the whole thing converge to some realistic solution using the joints.\u003C/p\u003E\u003Cp\u003EThe dynamic joints are way more complex to simulate (it is especially hard to ensure that the joint resolution step will converge to some solution in a reasonable amount of time) but is necessary to simulate anything that will experience deformations, as your ship does. This is also extremely sensitive to the simulation step, as the pieces will diverge more and more from a realistic simulation at each step, and the work to make everything converge is more important.\u003C/p\u003E\u003Cp\u003EOK now here my speculation of what is happening:\u003C/p\u003E\u003Cp\u003EWhen you warp, the game increase the simulation step. That mean the pieces of you craft diverge more before the joint resolution kicks in. The put your ship back together, it has to go to more extreme solution, bending your craft in the process.\u003C/p\u003E\n"},{"CreatedByName":"deadalnix","CreatedById":119486,"CreatedDateTime":"2014-08-29T22:29:32Z","Content":"\n\u003Cp\u003EThis is valid strategy used in various physic engine (inf act, most engines use both strategy). The problem is that nothing can be \u0022wobbly\u0022 with that approach. Like booster bending inward while thrusting (if they apply more thrust than the main engine), or outward when they run out of fuel. That would still make sens to use this technique between fuel tank, engine and other part of the ship that aren\u0027t supposed to bend or wobble.\u003C/p\u003E\n"},{"CreatedByName":"hazarada","CreatedById":72036,"CreatedDateTime":"2014-08-30T17:44:44Z","Content":"\n\u003Cp\u003EAfaik physics warp increases the time step which in most cases is totally unnecessary, most pc\u0027s can handle 4x more physics calculations easy on simple crafts in ksp. Imo it should be changed so it didn\u0027t increase the time step and give a checkbox option for it to automatically increase time step if it detects its not running in real-time.\u003C/p\u003E\n"},{"CreatedByName":"thereaverofdarkness","CreatedById":75673,"CreatedDateTime":"2014-08-30T20:36:43Z","Content":"\n\u003Cp\u003EInertial and air resistance are calculated correctly but ship stresses are magnified. Solution: multiply the ship\u0027s stress resistances.\u003C/p\u003E\n"}]}