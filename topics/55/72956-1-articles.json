{"TopicId":72956,"ForumId":55,"TopicTitle":"Squad, ideas for the far future. Think dollars.","CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2014-05-21T10:41:41Z","PageNum":1,"Articles":[{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2014-05-21T10:41:41Z","Content":"\n\u003Cp\u003EAt this moment KSP is a wonderful product with excellent capabilities. \u003C/p\u003E\u003Cp\u003EHowever I see possibilities which KSP cannot and shall not provide. For the \u003Cstrong\u003Efar future\u003C/strong\u003E I can see possibilities which could attract a lot of people, \u003Cstrong\u003Eincrease educational value even further\u003C/strong\u003E and - not the least important,\u003Cstrong\u003E increase market share\u003C/strong\u003E. \u003C/p\u003E\u003Cp\u003EWho knows, after KSP 1.0 is released and you guys want to look at a new product or maybe an evolution, I propose the following:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E1: A revised node system.\u003C/strong\u003E The current system of single parent nodes is fine if you\u0027re stacking tanks, rocket engines and other \u0022simple\u0022 stuff. If you want to build something more complex, users often need to use add-ons like Select Root, Editor Extensions or Part Wizard. Even then there are some serious limitations or they take a lot of time to work around.\u003C/p\u003E\u003Cp\u003EFor people who want to build complex machinery themselves like a landing gear or a gearbox there could be an option to go into the advanced editor mode: parts are placed at a certain coordinate with the option to lock movement of X, Y or Z is the first step. Then, one could choose multiple adjacent parts to form a connection with the new part. Also, removing a single connection from multiple would leave the rest of the construction intact. In real life construction is often done with multiple connections without having to use struts ;-)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E2: The inclusion of a fluid dynamics simulation.\u003C/strong\u003E Today\u0027s PC\u0027s are probably not yet powerful enough but in 3-5 years time they might be. The inclusion of such a system can provide a lot of wonderful things like designing your own jet engine, rocket engine or car engine. Here\u0027s a nice simulation: \u003Ca href=\u0022http://physics.weber.edu/schroeder/fluids/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://physics.weber.edu/schroeder/fluids/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E3: Bearings, both axial and radial\u003C/strong\u003E, for the creation of moving and/or rotating parts.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E4: Standard procedural parts with materials choice.\u003C/strong\u003E One doesn\u0027t create a bell nozzle out of copper or aluminum, and one doesn\u0027t create beams out of ceramics. Well, maybe for fun. Furthermore the current standard parts are perfect for gameplay and to provide an experience other can relate to. But procedural parts can have it\u0027s limitations as well: tech level limits, part count, mass per part, material choice and/or budget. \u003C/p\u003E\u003Cp\u003EThere\u0027s more but these are the most interesting (and most difficult to implement, I think). Maybe some day a lot of users will team up and build a \u003Cstrong\u003Ereplica of the Saturn V\u003C/strong\u003E, with working internal systems. I know there are millions of gearheads, tinkerers and MacGyvers who want to create excellent stuff but can\u0027t due to limitations in real life - nagging girlfriend about the car parts in the garage, etc.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EDesigning stuff is becoming the new industrial revolution\u003C/strong\u003E, more important than the actual production. 3D printers will provide production and it\u0027s increase will be exponential worldwide. What better than to have a system to learn and design and test ideas in a playful environment.\u003C/p\u003E\n"},{"CreatedByName":"klappertjes","CreatedById":83227,"CreatedDateTime":"2014-05-21T13:06:16Z","Content":"\n\u003Cp\u003EI don\u0027t see how 1, 3 and 4 would draw new players in. It sounds like these ideas would make the game massively more complex. Regardless if you\u0027re for or against that, I think it\u0027s generally agreed steeper learning curve = less newbie-friendly.\u003C/p\u003E\u003Cp\u003EThe impression I get (and in this I may be wrong) is that SQUAD aims to make it easy to understand the most basic concepts of KSP (building a rocket, flight controls \u0026amp; orbit parameters) while not forcing players to do adhere too much to this silly thing called \u0022realism\u0022. Hence a smaller solar system, forgiving mechanics, etcetera. Just saying they seem unlikely to listen, my own opinions aside.\u003C/p\u003E\u003Cp\u003EAs for your specific points:\u003C/p\u003E\u003Cp\u003E1: IIRC, there are limitations in the game engine they\u0027re using, Unity, that make it hard to do much about the node structure. The struts are a workaround. I agree that they\u0027re not often pleasing to the eye and that\u0027s a problem, but bear in mind that the parts of real rockets are effectively strutted to hell inside their aerodynamic shell. See 4.\u003C/p\u003E\u003Cp\u003E2: I\u0027m not quite sure if you mean a better aerodynamic model (which is really fluid dynamics with lower density, I\u0027ve been told) or modelling the internal workings of engines. It sounds like you mean the second, and holy mother would that be awesome ... in another game ... if you know what you\u0027re doing. You\u0027re going to have to teach people the basics of mechanical engineering before they can hope to make anything worth a damn. I would almost certainly play this Kerbal Engineering Department game but it has little to do with space exploration. I think it\u0027s fair to say this is quite a bit beyond the scope of KSP.\u003C/p\u003E\u003Cp\u003E3: This folds into 2 I guess. If we\u0027re designing systems on the smallest level then this would be a must, but should we? I\u0027d love for SQUAD to adopt a Infernal Robotics kind of part set with hinges and rotors, but for the scope of KSP they should be modular parts, IMO.\u003C/p\u003E\u003Cp\u003E4: I personally like the challenge of having this finite set of parts and trying to make what I want work with them. Playing with mods does not break this for me. I have more diverse parts but they still won\u0027t always do what I want with them exactly. The one procedural part I would like to see is hulls for your rockets. As it is they look like they were stripped of their hull, with struts and all visible. When aerodynamics gets fixed we\u0027ll need to do better than that. It\u0027s not unreasonable and game-breaking, IMO, to be able to mold a hull around the rocket you\u0027ve built for looks and drag reduction.\u003C/p\u003E\u003Cp\u003EAs for choosing materials, the way I see it, it would make building things a lot more frustrating and error prone for people that don\u0027t know you shouldn\u0027t make nozzles from copper for example (I didn\u0027t know that, but I\u0027ll take your word for it). They\u0027ll try to and their rocket won\u0027t fly worth a damn, and they won\u0027t know why because how could they, and get frustrated. The way to remedy that I guess is to give them a crash course in engine nozzle design and the characteristics of different materials. Then they\u0027ll have to figure out what this means for nozzles before they can even think of getting anything off the ground. Designing machinery from scratch could be fun, but I don\u0027t see it fitting KSP. Right now the game goes \u0022look, here\u0027s a nozzle that works and provides this amount of trust and is this efficient. The boys in the lab tested that already. Trust us on this one\u0022, and that\u0027s fine by me for the purposes of going to space.\u003C/p\u003E\u003Cp\u003ETaking a slight left on your original ideas towards off-topic lane, wouldn\u0027t it be totally awesome if this was indeed another game and the paarts conceived there could be ported into KSP for the profit of kerbalkind \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT: and I just re-read and saw you are proposing \u0022a new product\u0022. It\u0027s still not clear to me if you mean KSP 2: Moar Boosters (\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E), or an entirely different game, like I proposed? Your points seem focused on integrating it in KSP, so the first.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-21T13:10:35Z\u0022 title=\u002205/21/2014 01:10  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 21, 2014\u003C/time\u003E by klappertjes\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2014-05-21T13:34:29Z","Content":"\n\u003Cp\u003ENo, not at all integrated in KSP, the limitations are obvious. I wouldn\u0027t mind, either KSP 2 or a different game. And who knows how Unity will evolve in the future?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-21T13:44:05Z\u0022 title=\u002205/21/2014 01:44  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 21, 2014\u003C/time\u003E by Azimech\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2014-05-21T15:03:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022klappertjes\u0022 data-cite=\u0022klappertjes\u0022\u003E\u003Cdiv\u003EKSP 2: Moar Boosters\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOff topic, but if there is any justice that\u0027s what the KSP sequel will be called. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EOn topic:\u003C/p\u003E\u003Cp\u003EWith #4, I have mixed feelings about procedural parts. It is definitely satisfying for experienced players to get \u003Cem\u003Eexactly\u003C/em\u003E the part they want, and procedurals definitely help reduce part counts. That said, they also make the game more complex for a new player, who is likely to just be slapping a few parts together and seeing how it goes. It also, IMO, takes a bit away from the \u0022Lego-like\u0022 modular construction of KSP. For those reasons, procedural parts fall into the \u0022better left as a mod\u0022 category of suggestions for me.\u003C/p\u003E\n"},{"CreatedByName":"cantab","CreatedById":104935,"CreatedDateTime":"2014-05-21T15:15:53Z","Content":"\n\u003Cp\u003EMy thoughts:\u003C/p\u003E\u003Cp\u003EAn overhaul of the construction system would be good for a sequel, but probably too much effort for too little gain for v 1.0. Perhaps a good interim measure would be some sort of \u0022solid\u0022 strut. Either placed like the current struts, or perhaps it attaches like a stack or radial part and is automatically extended until it hits another part which it then connects to.\u003C/p\u003E\u003Cp\u003ESimulating the internal behaviour of the engine is way beyond what KSP should be I feel. Such a program would be a game unto itself given the challenges of just getting one working.\u003C/p\u003E\u003Cp\u003EHinges and bearings should definitely be in stock. They ought to be simple enough to code and they\u0027ll really open up possibilities. Cargo bays, spinning space stations, tipjet-powered rotors, etc.\u003C/p\u003E\u003Cp\u003EProcedural parts might be good for KSP 2, they\u0027d give it a fresh feel and a cleaner interface. That said I\u0027m not sure I\u0027d want everything to be infinitely tweakable. It would probably make sense for engines to be \u0022off-the-shelf\u0022 items, while fuel tanks would be highly flexible.\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2014-05-21T17:34:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022 data-cite=\u0022Red Iron Crown\u0022\u003E\u003Cdiv\u003EOff topic, but if there is any justice that\u0027s what the KSP sequel will be called. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cp\u003EOn topic:\u003C/p\u003E\u003Cp\u003EWith #4, I have mixed feelings about procedural parts. It is definitely satisfying for experienced players to get \u003Cem\u003Eexactly\u003C/em\u003E the part they want, and procedurals definitely help reduce part counts. That said, they also make the game more complex for a new player, who is likely to just be slapping a few parts together and seeing how it goes. It also, IMO, takes a bit away from the \u0022Lego-like\u0022 modular construction of KSP. For those reasons, procedural parts fall into the \u0022better left as a mod\u0022 category of suggestions for me.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree with that to a point. There should be an \u0022advanced player or something like that\u0022 feature for people who like it and standard for those who don\u0027t.\u003C/p\u003E\n"},{"CreatedByName":"LaytheAerospace","CreatedById":108355,"CreatedDateTime":"2014-05-21T19:06:05Z","Content":"\n\u003Cp\u003E#1 and #2 are pretty much impossible. Well, #1 is possible, but don\u0027t hold your breath.\u003C/p\u003E\u003Cp\u003EThe way the ship works right now is it\u0027s a tree. What you\u0027re asking for is an undirected graph. These are two VERY different data structures, and anything they\u0027ve written to work with tree based rockets would have to be literally thrown away to handle a graph based rocket. Tree based rockets also let you make a lot of assumptions (like staging a decoupler will never cause a part above it to be staged, while all the parts below it will always be staged). This is not true of graphs.\u003C/p\u003E\u003Cp\u003EProper fluid dynamics simulations require enormous amounts of power. Most people game on barely adequate hardware already. There\u0027s also the huge cost of developing the simulation software, since off the shelf products aren\u0027t going to integrate well with a video game that has its own ideas about what the computers hardware should be used for.\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2014-05-21T23:41:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022LaytheAerospace\u0022 data-cite=\u0022LaytheAerospace\u0022\u003E\u003Cdiv\u003E#1 and #2 are pretty much impossible. Well, #1 is possible, but don\u0027t hold your breath.\u003Cp\u003EThe way the ship works right now is it\u0027s a tree. What you\u0027re asking for is an undirected graph. These are two VERY different data structures, and anything they\u0027ve written to work with tree based rockets would have to be literally thrown away to handle a graph based rocket. Tree based rockets also let you make a lot of assumptions (like staging a decoupler will never cause a part above it to be staged, while all the parts below it will always be staged). This is not true of graphs.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot entirely true. While it would make craft files a lot bigger and less easy to read for the user, human logic always finds a path to make these things work in an orderly fashion. Just by doing it and learning. Small steps. Like the early transistor radio\u0027s were analog and people were exploring the possibilities of the transistor, to the first circuits capable of computing stuff. And again, this is not for KSP but a future product. Don\u0027t expect any fundamental changes in KSP anymore, users are very vocal. Just the economy, missions, multiplayer ... some clouds, cities and a few moons and planets. That\u0027s probably it. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EProper fluid dynamics simulations require enormous amounts of power. Most people game on barely adequate hardware already. There\u0027s also the huge cost of developing the simulation software, since off the shelf products aren\u0027t going to integrate well with a video game that has its own ideas about what the computers hardware should be used for.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EStart simplified. Like the current placeholder aerodynamics and then comes a genius like Ferram4 ... with fluid dynamics it\u0027s the same. You don\u0027t need everything in place at first. Look at the link to that demo I placed in the OP. Yes, the current pc\u0027s aren\u0027t ready for the job. That\u0027s why I wrote in the FAR future ;-)\u003C/p\u003E\u003Cp\u003EBy the way, cross-platform software is being developed since the 1970\u0027s so don\u0027t worry about simulation software not being compatible. If there\u0027s a market, it will be compatible.\u003C/p\u003E\u003Cp\u003EIf Squad won\u0027t build this future product, a different company/house will. It\u0027s just a matter of time.\u003C/p\u003E\n"},{"CreatedByName":"LaytheAerospace","CreatedById":108355,"CreatedDateTime":"2014-05-22T02:10:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Azimech\u0022 data-cite=\u0022Azimech\u0022\u003E\u003Cdiv\u003ENot entirely true. While it would make craft files a lot bigger and less easy to read for the user, human logic always finds a path to make these things work in an orderly fashion. Just by doing it and learning. Small steps. Like the early transistor radio\u0027s were analog and people were exploring the possibilities of the transistor, to the first circuits capable of computing stuff.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not saying it\u0027s not possible. They could build an array based ship if they wanted. I\u0027m just saying they\u0027re already pretty strongly committed to the tree based approach, and probably for good reason. Seems you agree with that on principle, though.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Azimech\u0022 data-cite=\u0022Azimech\u0022\u003E\u003Cdiv\u003EStart simplified. Like the current placeholder aerodynamics and then comes a genius like Ferram4 ... with fluid dynamics it\u0027s the same. You don\u0027t need everything in place at first. Look at the link to that demo I placed in the OP. Yes, the current pc\u0027s aren\u0027t ready for the job. That\u0027s why I wrote in the FAR future ;-)\u003Cp\u003EBy the way, cross-platform software is being developed since the 1970\u0027s so don\u0027t worry about simulation software not being compatible. If there\u0027s a market, it will be compatible.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECompatibility isn\u0027t as simple as you seem to think. I\u0027m a software engineer (bachelor\u0027s degree and everything), and have professional experience porting Linux software to Windows. Cross platform software may have been around for a while, but that doesn\u0027t change the basic economics of software engineering. You\u0027re not going to invest the time and money into developing for a platform that doesn\u0027t have enough customers to justify the cost.\u003C/p\u003E\u003Cp\u003EHighly specialized software like simulation software is rarely multi-platform (I don\u0027t want to say \u0027never\u0027 but I\u0027d bet that\u0027s the case). Essentially all HPC clusters run Linux or some proprietary OS, so there\u0027s no additional market to capture by making it multiplatform. It also needs to be as fast as possible, which often means OS or hardware specific optimizations. This software is often built on contract, anyway, and the contractors aren\u0027t going to pay you to build a version for an OS they aren\u0027t using.\u003C/p\u003E\u003Cp\u003EFluid dynamics is also a \u003Cem\u003Elot\u003C/em\u003E harder than you seem to think (apologies if you meant several decades out when you said \u0022FAR future\u0022). The stock aerodynamics and Ferram are just approximations. Ferram is the better of the two approximations, but it\u0027s not because they found some revolutionary trick to simulating fluid dynamics, it\u0027s because it uses the correct equation (stock aerodynamics don\u0027t scale lift correctly, which is part of why you nose down at high speeds in stock). It also does some nifty stuff with part by part drag (using a raycast, I assume), but again, it\u0027s not actually simulating anything, just approximating.\u003C/p\u003E\u003Cp\u003EFluid dynamics is actually one of the hardest problems in computing, and brings the fastest supercomputers in the world to their knees. Doesn\u0027t help that it gets harder the faster the simulated flow is moving, both in terms of the necessitated step size, and in the complexity of the calculations being done in each step. Several supercomputing records have been broken by machines designed to simulate fluid dynamics and turbulence.\u003C/p\u003E\u003Cp\u003EReally, something like Ferram is all you need in a game. I just wish we didn\u0027t have to resort to an addon to make lift scale correctly with velocity.\u003C/p\u003E\n"}]}