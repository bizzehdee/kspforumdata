{"TopicId":127898,"ForumId":55,"TopicTitle":"Other benefits of 64 bit","CreatedByName":"stormdot5","CreatedById":112625,"CreatedDateTime":"2015-12-15T09:16:48Z","PageNum":1,"Articles":[{"CreatedByName":"stormdot5","CreatedById":112625,"CreatedDateTime":"2015-12-15T09:16:48Z","Content":"\n\u003Cp\u003E\nThe only reasons for 64 bit for most people seems to be to increase available memory to allow more mods before crashing, or to support constantly growing part counts. I was wondering whether it will also allow increased precision in object positioning in space, for things such as distant object enhancement. It would be great if this could remove the instability of objects. For example, when trying to catch something in interplanetary space that keeps shifting when you change time warp levels. Improving accuracy of multiple SOI changes for gravity assists would also be welcome.\n\u003C/p\u003E\n\u003Cp\u003E\nWould this happen with 64 bit in 1.1? Or would things have to be further updated?\n\u003C/p\u003E\n"},{"CreatedByName":"cantab","CreatedById":104935,"CreatedDateTime":"2015-12-15T11:54:59Z","Content":"\n\u003Cp\u003E\nI don\u0027t think it would. The 32-bit x86 architecture already supports 64-bit \u0022double precision\u0022 and 80-bit \u0022extended precision\u0022. The 64-bit x86_64 architecture does not actually offer any greater floating-point precision in hardware, so slower software approaches have to be used.\n\u003C/p\u003E\n"},{"CreatedByName":"Hannu2","CreatedById":154334,"CreatedDateTime":"2015-12-15T12:11:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323342\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450171008\u0022 data-ipsquote-userid=\u0022112625\u0022 data-ipsquote-username=\u0022stormdot5\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, stormdot5 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe only reasons for 64 bit for most people seems to be to increase available memory to allow more mods before crashing, or to support constantly growing part counts. I was wondering whether it will also allow increased precision in object positioning in space, for things such as distant object enhancement. It would be great if this could remove the instability of objects. For example, when trying to catch something in interplanetary space that keeps shifting when you change time warp levels. Improving accuracy of multiple SOI changes for gravity assists would also be welcome.\n\u003C/p\u003E\n\u003Cp\u003E\nWould this happen with 64 bit in 1.1? Or would things have to be further updated?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNo, migrating to 64 bit unity does not affect calculation precision. Very probably there will not be also update because it was a huge work and most players does not seem to suffer current problems. It would be practically KSP 2.0. However, there are many problems in map view and orbital prediction (especially detecting of SOI changes) which would be easier to fix and I hope that Squad will do it after updating to Unity 5.\n\u003C/p\u003E\n"},{"CreatedByName":"_Astra_","CreatedById":155195,"CreatedDateTime":"2015-12-15T12:17:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323424\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450180499\u0022 data-ipsquote-userid=\u0022104935\u0022 data-ipsquote-username=\u0022cantab\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n30 minutes ago, cantab said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t think it would. The 32-bit x86 architecture already supports 64-bit \u0022double precision\u0022 and 80-bit \u0022extended precision\u0022. The 64-bit x86_64 architecture does not actually offer any greater floating-point precision in hardware, so slower software approaches have to be used.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe\u00A0x86 does, but the graphics hardware generally does not.\n\u003C/p\u003E\n\u003Cp\u003E\nOr it imlies a special performance penalty\u00A0on these types.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nDon\u0027t see any reason for doubles and long doubles unless Squad adds the Lagrange points to the game...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut multiple spheres of influence can really help -\u00A0many times had\u00A0the orbit\u00A0calculator\u00A0 stick\u00A0to\u00A0Mun on\u00A0my way to Minmus.\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-15T12:28:19Z\u0022 title=\u002212/15/2015 12:28  PM\u0022 data-short=\u00228 yr\u0022\u003EDecember 15, 2015\u003C/time\u003E by _Astra_\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Hannu2","CreatedById":154334,"CreatedDateTime":"2015-12-15T14:17:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323443\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450181854\u0022 data-ipsquote-userid=\u0022155195\u0022 data-ipsquote-username=\u0022_Astra_\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, _Astra_ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDon\u0027t see any reason for doubles and long doubles unless Squad adds the Lagrange points to the game...\n\u003C/p\u003E\n\u003Cp\u003E\nBut multiple spheres of influence can really help -\u00A0many times had\u00A0the orbit\u00A0calculator\u00A0 stick\u00A0to\u00A0Mun on\u00A0my way to Minmus.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUsing of doubles would benefit significantly all functions of orbital predictions. It is extremely stupid thing that Squad did not use doubles from very beginning in this kind of work. But the choice is done and it would be far too expensive to change it now. We have to live with poor accuracy. However, it is no reason not to fix buggy and information poor map view. It could be very much better with smallish fixes, if Squad wanted to improve it. I understand that they concentrate every thought in migration now, but after that they could improve many small things which makes game better to play.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you need just more patches, edit settings.cfg. There is row \u0022CONIC_PATCH_LIMIT = 3\u0022. Change that number whatever you want but do not expect accuracy. Adjust every maneuver after every SOI change.\n\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-12-15T14:33:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323537\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450189058\u0022 data-ipsquote-userid=\u0022154334\u0022 data-ipsquote-username=\u0022Hannu2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 minutes ago, Hannu2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUsing of doubles would benefit significantly all functions of orbital predictions. It is extremely stupid thing that Squad did not use doubles from very beginning in this kind of work. But the choice is done and it would be far too expensive to change it now. We have to live with poor accuracy. However, it is no reason not to fix buggy and information poor map view. It could be very much better with smallish fixes, if Squad wanted to improve it. I understand that they concentrate every thought in migration now, but after that they could improve many small things which makes game better to play.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe on-rails calculations are done with doubles already, the off-rails stuff is done by the Unity physics engine using floats, not something Squad has control over. This is why it\u0027s better to do SoI transitions at low timewarp instead of at 1x.\n\u003C/p\u003E\n"},{"CreatedByName":"_Astra_","CreatedById":155195,"CreatedDateTime":"2015-12-15T18:09:32Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323552\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450190027\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe on-rails calculations are done with doubles already, the off-rails stuff is done by the Unity physics engine using floats, not something Squad has control over. This is why it\u0027s better to do SoI transitions at low timewarp instead of at 1x.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRed Iron Crown, sounds interesting.\n\u003C/p\u003E\n\u003Cp\u003E\nDoes\u00A0it mean that these \u0022on-rails calculations\u0022 cannot be\u00A0offloaded to GPU by design?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323537\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450189058\u0022 data-ipsquote-userid=\u0022154334\u0022 data-ipsquote-username=\u0022Hannu2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Hannu2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUsing of doubles would benefit significantly all functions of orbital predictions. It is extremely stupid thing that Squad did not use doubles from very beginning in this kind of work. But the choice is done and it would be far too expensive to change it now. We have to live with poor accuracy. However, it is no reason not to fix buggy and information poor map view. It could be very much better with smallish fixes, if Squad wanted to improve it. I understand that they concentrate every thought in migration now, but after that they could improve many small things which makes game better to play.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you need just more patches, edit settings.cfg. There is row \u0022CONIC_PATCH_LIMIT = 3\u0022. Change that number whatever you want but do not expect accuracy. Adjust every maneuver after every SOI change.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOh, i tried it! Thanx. Now\u00A0have 2nd- and 3rd-order orbits\u00A0\u003Cimg alt=\u0022^_^\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_happy.png\u0022 title=\u0022^_^\u0022\u003E But it\u0027s very tricky to pick a correct one.\n\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-12-15T18:19:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323771\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450202972\u0022 data-ipsquote-userid=\u0022155195\u0022 data-ipsquote-username=\u0022_Astra_\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 minutes ago, _Astra_ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nRed Iron Crown, sounds interesting.\n\u003C/p\u003E\n\u003Cp\u003E\nDoes\u00A0it mean that these \u0022on-rails calculations\u0022 cannot be\u00A0offloaded to GPU by design?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t think any of it offloads to the GPU, on rails or off. The on rails calculations are not all that computationally difficult anyway, last time I messed around with performance testing with them (on an old Core 2 Duo) it took about a hundred craft in flight to make any sort of noticeable difference in performance (timewarp has no effect either, the step size just becomes larger).\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-12-15T18:28:30Z","Content":"\n\u003Cp\u003E\nNo, it does not offload physics to the GPU. Neither Unity 4 or 5 currently support that.\u00A0 Even if it did, GPU accelerated physics is a one way street, it goes from the CPU to the GPU to the output (your display), so if the game needs the physics calculations for something other than display, it can\u0027t be offloaded.\u00A0 In a nutshell, that means GPU accelerated physics can only offer you graphical flare (cloth animation rendering is a popular example), but regardless of Unity, will NEVER be able to calculate part physics.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-15T18:28:48Z\u0022 title=\u002212/15/2015 06:28  PM\u0022 data-short=\u00228 yr\u0022\u003EDecember 15, 2015\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"cantab","CreatedById":104935,"CreatedDateTime":"2015-12-15T20:26:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323795\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450204110\u0022 data-ipsquote-userid=\u0022110959\u0022 data-ipsquote-username=\u0022Alshain\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Alshain said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNo, it does not offload physics to the GPU. Neither Unity 4 or 5 currently support that.\u00A0 Even if it did, GPU accelerated physics is a one way street, it goes from the CPU to the GPU to the output (your display), so if the game needs the physics calculations for something other than display, it can\u0027t be offloaded.\u00A0 In a nutshell, that means GPU accelerated physics can only offer you graphical flare (cloth animation rendering is a popular example), but regardless of Unity, will NEVER be able to calculate part physics.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m pretty sure that\u0027s incorrect. Remember that nVidia\u0027s early \u0022Tesla\u0022 physics acceleration cards didn\u0027t have a display output at all. I\u0027m 99% certain that modern GPUs are capable of processing data and sending results back to the CPU.\n\u003C/p\u003E\n\u003Cp\u003E\nThe reason I believe that GPU-accelerated physics is mainly seen for graphical shinies is that limited and vendor-specific hardware support means a game cannot rely on it for \u0022core\u0022 physics functionality without severely limiting the potential customer base. Though things are getting better in that respect.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-15T20:26:57Z\u0022 title=\u002212/15/2015 08:26  PM\u0022 data-short=\u00228 yr\u0022\u003EDecember 15, 2015\u003C/time\u003E by cantab\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-12-15T20:30:56Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323935\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450211181\u0022 data-ipsquote-userid=\u0022104935\u0022 data-ipsquote-username=\u0022cantab\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, cantab said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m pretty sure that\u0027s incorrect. Remember that nVidia\u0027s early \u0022Tesla\u0022 physics acceleration cards didn\u0027t have a display output at all. I\u0027m 99% certain that modern GPUs are capable of processing data and sending results back to the CPU.\n\u003C/p\u003E\n\u003Cp\u003E\nThe reason I believe that GPU-accelerated physics is mainly seen for graphical shinies is that limited and vendor-specific hardware support means a game cannot rely on it for \u0022core\u0022 physics functionality without severely limiting the potential customer base.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m not sure what \u0022Tesla\u0022 cards were.\u00A0 Aegia, the original creator of PhyX before Nvidia bought them, had PPU\u0027s which were installed and operated independently of the GPU.\u00A0 These too acted as a middle man, but once they rendered something it was sent to the CPU only to be passed along to the GPU through the infrastructure.\u00A0 Having the PPU built into the GPU is certainly faster as you don\u0027t have to bother the CPU again.\u00A0 But even support for these old Ageia cards required separate infrastructure, the games compatible with them were not automatically compatible with the Nvidia version or vice versa, because they do not quite work the same.\n\u003C/p\u003E\n"},{"CreatedByName":"Hannu2","CreatedById":154334,"CreatedDateTime":"2015-12-15T20:53:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323935\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450211181\u0022 data-ipsquote-userid=\u0022104935\u0022 data-ipsquote-username=\u0022cantab\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 minutes ago, cantab said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m pretty sure that\u0027s incorrect. Remember that nVidia\u0027s early \u0022Tesla\u0022 physics acceleration cards didn\u0027t have a display output at all. I\u0027m 99% certain that modern GPUs are capable of processing data and sending results back to the CPU.\n\u003C/p\u003E\n\u003Cp\u003E\nThe reason I believe that GPU-accelerated physics is mainly seen for graphical shinies is that limited and vendor-specific hardware support means a game cannot rely on it for \u0022core\u0022 physics functionality without severely limiting the potential customer base. Though things are getting better in that respect.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere are some applications. But GPU power are needed for drawing in games. Physical problems in KSP are also such that massive parallelization is not possible or practical. There is not real need for using GPU. KSP has relatively simple physics and if it was coded well it would be easy to fly constructions with several thousands or parts or have much more accurate orbits and predictions, possibility to have some controls on ships without focus etc. It would be much easier to program it well to utilize few CPU cores than program it well to utilize hundreds of GPU cores. In any case Squad should hire some specialists and I do not see it realistic expectation (as economic point of view).\n\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-12-15T21:55:23Z","Content":"\n\u003Cp\u003E\nSquad\u0027s not going to code an engine from scratch for KSP, Hannu2, which is what you\u0027re describing. Certainly not for the current game, and likely not for any subsequent ones. Game engines are a whole other level of complexity, and well beyond a team the size of Squad\u0027s.\n\u003C/p\u003E\n"},{"CreatedByName":"Hannu2","CreatedById":154334,"CreatedDateTime":"2015-12-16T06:54:52Z","Content":"\n\u003Cp\u003E\nPhysics of KSP would not be beyond small team, if there were even one physicist (or even student) with some programming experience. I am not sure, but it is hard to believe that it would be impossible to calculate physics with own code and use Unity just rendering things, handle UI etc. So that you just tell Unity that ship X is in place Y and have attitude Z. Rendering is the hard thing in KSP, not physics.\n\u003C/p\u003E\n\u003Cp\u003E\nBut of course I understand that Squad does not have interest in that. Also huge majority of players are not interested. Probably it would not be economically reasonable. Only hope is that somebody would make some kind of hybrid between KSP and Orbiter which do not even want to be topseller. It could be graphically very primitive but technically complex intended for engineers, scientists or students of such things.\n\u003C/p\u003E\n\u003Cp\u003E\nI discussed at general level why there are so few applications (both games and real world things) where GPUs are used in physical simulations. Only few physical problems are well suitable for such level of parallelization with so many restrictions. Some people look just numbers of salesmen and believe that GPUs have some kind of magic tricks which will make everything better.\n\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-12-16T11:39:00Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222324674\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450248892\u0022 data-ipsquote-userid=\u0022154334\u0022 data-ipsquote-username=\u0022Hannu2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Hannu2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPhysics of KSP would not be beyond small team, if there were even one physicist (or even student) with some programming experience. I am not sure, but it is hard to believe that it would be impossible to calculate physics with own code and use Unity just rendering things, handle UI etc. So that you just tell Unity that ship X is in place Y and have attitude Z. Rendering is the hard thing in KSP, not physics.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou drastically underestimate the complexity of the engine. For each part, the forces must be calculated and summed, then applied within the constraints of the joints, and forces are transferred to other parts further conflating the problem. Collision checks must be done and effects applied, again within the joint constraints and transferring forces. All while keeping performance acceptable. This is not a task for one or two people with \u0022some programming experience\u0022, game engines take\u00A0teams of dozens of experienced coders to produce.\n\u003C/p\u003E\n\u003Cp\u003E\nIt is *not* a case of \u0022just tell Unity that ship X is in place Y and have attitude Z\u0022, that is what happens during the on rails physics currently.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI discussed at general level why there are so few applications (both games and real world things) where GPUs are used in physical simulations. Only few physical problems are well suitable for such level of parallelization with so many restrictions. Some people look just numbers of salesmen and believe that GPUs have some kind of magic tricks which will make everything better.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nDefinitely agree here, massively parallel processing isn\u0027t some magic bullet appropriate for all problems; it\u0027s really only suitable for embarrassingly parallel tasks.\n\u003C/p\u003E\n"},{"CreatedByName":"Hannu2","CreatedById":154334,"CreatedDateTime":"2015-12-16T12:17:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222324813\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450265940\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 minutes ago, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou drastically underestimate the complexity of the engine. For each part, the forces must be calculated and summed, then applied within the constraints of the joints, and forces are transferred to other parts further conflating the problem. Collision checks must be done and effects applied, again within the joint constraints and transferring forces. All while keeping performance acceptable. This is not a task for one or two people with \u0022some programming experience\u0022, game engines take\u00A0teams of dozens of experienced coders to produce.\n\u003C/p\u003E\n\u003Cp\u003E\nIt is *not* a case of \u0022just tell Unity that ship X is in place Y and have attitude Z\u0022, that is what happens during the on rails physics currently.\n\u003C/p\u003E\n\u003Cp\u003E\nDefinitely agree here, massively parallel processing isn\u0027t some magic bullet appropriate for all problems; it\u0027s really only suitable for embarrassingly parallel tasks.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI do not underestimate. All interactions you mentioned are simple (from my point of view, I have made some physics modeling for research job and also for hobby by coding things from scratch and using commercial FEM modeling softwares) and number of interactions are very small (typically only few joints between neighbor parts, no long range interactions at all). Parts in KSP are solid rigid things which moves mostly in vacuum. Atmosphere is also modeled by quite simple way. Collision models are relatively simple and collision physics has not to be realistic if it is somewhat believable and good looking. I can not see that complexity. It may be complex for somebody without education and experience of physical models but certainly this kind of model does not need an army of very highly educated experts and years of developing time. One interested student would be enough.\n\u003C/p\u003E\n\u003Cp\u003E\nTypically unlinear and soft things are complex in games. Models of elastic living creatures or other soft things are very hard to code so that they even look good. Even movie industry can do it with very limited way in spite of megabudgets and server farms (animation characters looks as animation characters and do not even try to be humans). Other difficult physical thing is fluids and interactions between fluids and soft things (clothes, hairs, smoke). But KSP does not even try to model any of them. Aerodynamic models and atmospheric effects are very simple and spaceflight is moving of rigid bodies in vacuum under simple interactions. There are of course much more examples of difficult models in research, but they are not related to games.\n\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2015-12-16T12:35:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222323935\u0022 data-ipsquote-contentid=\u0022127898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221450211181\u0022 data-ipsquote-userid=\u0022104935\u0022 data-ipsquote-username=\u0022cantab\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, cantab said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m pretty sure that\u0027s incorrect. Remember that nVidia\u0027s early \u0022Tesla\u0022 physics acceleration cards didn\u0027t have a display output at all. I\u0027m 99% certain that modern GPUs are capable of processing data and sending results back to the CPU.\n\u003C/p\u003E\n\u003Cp\u003E\nThe reason I believe that GPU-accelerated physics is mainly seen for graphical shinies is that limited and vendor-specific hardware support means a game cannot rely on it for \u0022core\u0022 physics functionality without severely limiting the potential customer base. Though things are getting better in that respect.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf the GPU can\u0060t do calculations and pass back results then CUDA would not work. I currently rely heavily on being able to pass data to and results from my GPU for video effects.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is an Nvidia feature though and whether this can be done with other cards is something I don\u0060t know.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0060s rather a moot point if you can\u0060t access those features through Unity anyway.\n\u003C/p\u003E\n"}]}