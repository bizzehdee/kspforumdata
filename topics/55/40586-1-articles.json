{"TopicId":40586,"ForumId":55,"TopicTitle":"Keep attachment points and part groups","CreatedByName":"Vorg","CreatedById":74652,"CreatedDateTime":"2013-08-02T01:57:55Z","PageNum":1,"Articles":[{"CreatedByName":"Vorg","CreatedById":74652,"CreatedDateTime":"2013-08-02T01:57:55Z","Content":"\n\u003Cp\u003EWhen you detach a group of parts or duplicate it, the only attachment ball that is kept is the one at the point the group is removed. This is getting very annoying as it prevents moving sections with sections or turning groups around and attaching by another point.\u003C/p\u003E\n"},{"CreatedByName":"ravener","CreatedById":44766,"CreatedDateTime":"2013-08-02T04:55:14Z","Content":"\n\u003Cp\u003EEeeeh, part trees something something...\u003C/p\u003E\u003Cp\u003EIt would require a lot more work than it seems. \u003C/p\u003E\u003Cp\u003EStill, i guess it could generate the tree again from the new attachment point.\u003C/p\u003E\n"},{"CreatedByName":"Vorg","CreatedById":74652,"CreatedDateTime":"2013-08-02T04:58:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ravener\u0022 data-cite=\u0022ravener\u0022\u003E\u003Cdiv\u003EEeeeh, part trees something something...\u003Cp\u003EIt would require a lot more work than it seems. \u003C/p\u003E\u003Cp\u003EStill, i guess it could generate the tree again from the new attachment point.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe group never looses the nodes. as soon as you reattach it, the points are back and you can add on from there. So it\u0027s not that they are really gone, it is that they are hidden from use.\u003C/p\u003E\u003Cp\u003ETitle ment to be points in part groups, not and.\u003C/p\u003E\n"},{"CreatedByName":"Autochton","CreatedById":70134,"CreatedDateTime":"2013-08-02T08:36:48Z","Content":"\n\u003Cp\u003E*ponder* Given the way symmetry parts work in the data model (represented as a single part definition with a symmetry label attached), I could see some fairly significant problems there - but otherwise it\u0027s as simple as re-rooting an n-tree. The parts you have are all nodes in the tree, with the root part at the top, then branching out to the parts attached to that, and so forth until you have all the parts in the group. To get a new root element, you take this tree, grab at the node you want to be the new root, and change its parent connection to a child one, then shift to the parent node, and repeat until your old root node is a descendant of the new root. Presto, you have a new parts tree with a different root, which you can then attach using the available nodes on the new root.\u003C/p\u003E\u003Cp\u003ERadial attachment might be a bit more tricky. But using the same principle should be, at least, possible.\u003C/p\u003E\n"},{"CreatedByName":"SciMan","CreatedById":12748,"CreatedDateTime":"2013-08-02T08:53:39Z","Content":"\n\u003Cp\u003EIt seems like it should be doable, because I\u0027ve been able to manually do the same \u0022part tree re-arrangement\u0022 thing that the OP wants to be able to happen automatically when I need to change where the \u0022root\u0022 node is in a payload.\u003C/p\u003E\u003Cp\u003EFor example, I built a tiny ion engine \u002B solar panels based Kethane scanning probe starting from an OKTO2 probe core. Then I built a rocket that could launch 6 of them at the same time. However, I needed to make the ion engine the \u0022root\u0022 part instead of the probe core. It was really not that difficult, similar to taking an ordered vertical stack of blocks in (1-2-3-4-5) and re-stacking them so they end up in the opposite order (5-4-3-2-1). While it was a rather simple re-arrangement, it shows that it should be possible to do. After all, if I can do it without even needing to really think about it, it seems like it would not be that hard to get a computer to do it. Possibly use some sort of FIFO (first-in-first-out) buffer to help re-order the parts??\u003C/p\u003E\n"}]}