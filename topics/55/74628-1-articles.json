{"TopicId":74628,"ForumId":55,"TopicTitle":"Why cant Squad take some of the mods and make them part of the vanilla?","CreatedByName":"nater662","CreatedById":111592,"CreatedDateTime":"2014-06-09T23:43:58Z","PageNum":1,"Articles":[{"CreatedByName":"nater662","CreatedById":111592,"CreatedDateTime":"2014-06-09T23:43:58Z","Content":"\n\u003Cp\u003ESome times when you play a mod you just think how is this not in the vanilla version.\u003C/p\u003E\u003Cp\u003EJust out of curiosity why can\u0027t squad strike a deal with some of the best mods?\u003C/p\u003E\n"},{"CreatedByName":"Devo","CreatedById":22750,"CreatedDateTime":"2014-06-10T00:51:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nater662\u0022 data-cite=\u0022nater662\u0022\u003E\u003Cdiv\u003ESome times when you play a mod you just think how is this not in the vanilla version.\u003Cp\u003EJust out of curiosity why can\u0027t squad strike a deal with some of the best mods?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThey don\u0027t support or use mods, they have stated on many occasions. also, as far as I\u0027m aware if you do work for Squad, you also can\u0027t run a modded version (that they know about) it\u0027s part of their agreement (says a few ex developers) Which is ironic considering how much mods have extended the life of this \u0027early access\u0027 game. I can\u0027t speak for anyone else but if there was no mods to play with I would have stopped playing years ago. \u003C/p\u003E\u003Cp\u003EI remember some cool mods, I forget the name but there was one that was rockets made of whiskey barrels, man that was a blast to fly.\u003C/p\u003E\u003Cp\u003EThis is not to say don\u0027t they take some good ideas from people and put it in the game, like the Sub Assemblies manager \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T01:01:17Z\u0022 title=\u002206/10/2014 01:01  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by Devo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-06-10T01:07:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nater662\u0022 data-cite=\u0022nater662\u0022\u003E\u003Cdiv\u003EJust out of curiosity why can\u0027t squad strike a deal with some of the best mods?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFor because.\u003C/p\u003E\n"},{"CreatedByName":"asheft","CreatedById":112588,"CreatedDateTime":"2014-06-10T01:11:26Z","Content":"\n\u003Cp\u003EDidn\u0027t they do that with C7? Putting a runway and spaceplane parts into the stock game? I agree that adding some mods that add key missing elements to the stock game (Ferram Aerospace, Deadly Reentry, etc.) would make the stock game a lot better.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T23:08:54Z\u0022 title=\u002206/10/2014 11:08  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by asheft\u003C/strong\u003E\n\u003Cbr\u003EFixed confusion between two developers\n\u003C/span\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2014-06-10T01:37:37Z","Content":"\n\u003Cp\u003EThey have in the past. They generally don\u0027t. They might in the future.\u003C/p\u003E\u003Cp\u003EI have read that it\u0027s not as simple as just bundling up the mod with KSP and calling it a day.\u003C/p\u003E\n"},{"CreatedByName":"wizzlebippi","CreatedById":85324,"CreatedDateTime":"2014-06-10T01:48:12Z","Content":"\n\u003Cp\u003EMods are written to access core code from the outside, and consequently have a very different structure. Merging different code is a difficult process.\u003C/p\u003E\n"},{"CreatedByName":"Vanamonde","CreatedById":27914,"CreatedDateTime":"2014-06-10T02:18:42Z","Content":"\n\u003Cp\u003ERemember, you can\u0027t just stick something in there once, and it works forever more. Software needs to be maintained, revised, etc. This is much harder to do if you didn\u0027t write the code in the first place, and it\u0027s not organized the way you would have set things up. Also, what happens when Squad starts making money off of a mod-maker\u0027s code? The mod-maker would have to be compensated in some way. How much would they need to pay for that? It\u0027s a whole big can of worms.\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2014-06-10T02:45:47Z","Content":"\n\u003Cp\u003EThe need or lack thereof for royalties would (could) all be covered by existing agreements. Whether or not that\u0027s the case, I\u0027m not sure.\u003C/p\u003E\u003Cp\u003EI think the more likely reason is this: modders work against a limited set of functionality that is exposed, they don\u0027t have access to the \u0022deeper\u0022 layers of the code. For certain kinds of mods (part packs, for instance) this doesn\u0027t really make much difference. But for mods that bring additional functionality to the game, Squad has opportunities to make more fundamental changes in layers of code that modders can\u0027t access. As a programmer, if I was in Squad\u0027s position and saw a mod that I felt should be incorporated, I\u0027d be motivated to see what improvements I could make based on that additional access I have.\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-06-10T02:55:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EI think the more likely reason is this: modders work against a limited set of functionality that is exposed, they don\u0027t have access to the \u0022deeper\u0022 layers of the code.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is incorrect. Modding KSP requires an assembly browser to see what is available to use in the stock code because KSP has no exposed modding API like what you speak of. While KSP is \u003Cem\u003Emod friendly\u003C/em\u003E (and even claiming that is debatable), it\u0027s not necessarily \u003Cem\u003Emodder friendly\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EAdding mods to KSP is sketchy for a variety of reasons. For one, the potentially dubious quality of outside code. For two, legal reasons. For three, additional code maintenance. And so on. Of these, legal reasons is probably the most valid, the others can be surmounted through proper vetting and integration of the code. Of course, that\u0027s also a lot easier when you have a larger team of coders. SQUAD is actually pretty small in that aspect.\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2014-06-10T03:40:17Z","Content":"\n\u003Cp\u003EWhat I\u0027m suggesting does not imply nor require that a particular layer has been built specifically with modders in mind. I\u0027m simply saying that there are things modders cannot do that Squad developers can do, and therefore if Squad wanted to implement a type of functionality that is currently provided by a mod, their greater flexibility could easily mean a different implementation.\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-06-10T03:56:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EWhat I\u0027m suggesting does not imply nor require that a particular layer has been built specifically with modders in mind. I\u0027m simply saying that there are things modders cannot do that Squad developers can do, and therefore if Squad wanted to implement a type of functionality that is currently provided by a mod, their greater flexibility could easily mean a different implementation.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd what I\u0027m saying is that modders often need to do the same things that SQUAD do in order to make things work they want them to.\u003C/p\u003E\u003Cp\u003EIt\u0027s also worth saying that, in some cases, SQUAD deliberately makes things hard on modders, and I\u0027m not talking about obfuscating intellectual property hard, I\u0027m talking about doing dumb things. For instance, the class that generates asteroids could have been much more open and modder-friendly by exposing a function to simply feed an orbit and a size class into the asteroid generator. BAM, instant Jool trojan. Instead, we get to Mickey Mouse up some crazy scheme whereby you have to add a listener for a new ship being added, ask the class for a completely random asteroid, change the orbit of the newly generated asteroid that was caught by the listener, and then remove the listener. Meanwhile, normal asteroid generation continues. It\u0027s silly and it makes the work of modders much harder. So, in a sense, you\u0027re right, SQUAD will come up with better implementations but it\u0027s not exactly because modders can\u0027t see that far into the code or do things inherently worse. I haven\u0027t touched the tech tree but I imagine it\u0027s the same sort of mess.\u003C/p\u003E\u003Cp\u003EE: And don\u0027t get me wrong, I think the devs do some pretty decent work here given the demonstrated amount of job stress and the size of their team, but I get the feeling they\u0027re in over their heads sometimes and aren\u0027t thinking clearly. Alternatively, they don\u0027t want modders to show them up any more than they have.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T03:58:39Z\u0022 title=\u002206/10/2014 03:58  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by regex\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2014-06-10T04:04:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EInstead, we get to Mickey Mouse up some crazy scheme whereby you have to add a listener for a new ship being added, ask the class for a completely random asteroid, change the orbit of the newly generated asteroid that was caught by the listener, and then remove the listener. Meanwhile, normal asteroid generation continues. It\u0027s silly and it makes the work of modders much harder\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep, that\u0027s exactly what I\u0027m saying. To use your example, in order to spawn an asteroid, modders have to use whatever is currently available to spawn asteroids. Squad, on the other hand, can choose to completely rewrite the asteroid spawning functionality. \u003C/p\u003E\u003Cp\u003ESquad didn\u0027t write the original code with all of the ideas of the modders in mind, they wrote it with their own ideas in mind. If they were to choose to actually build in the functionality of a mod they might experience exactly the kind of frustration you\u0027re talking about, and therefore decide to rework some underlying layers to make a more elegant and stable solution.\u003C/p\u003E\u003Cp\u003EAnd hence my conclusion: the integration of the functionality of existing mods is likely to involve a different implementation if it is done by Squad themselves.\u003C/p\u003E\n"},{"CreatedByName":"Giggleplex777","CreatedById":29829,"CreatedDateTime":"2014-06-10T04:11:38Z","Content":"\n\u003Cp\u003EHarvesteR\u0027s response:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003EThis question has popped up in varying degrees of aggressiveness quite a few times... Thanks for asking it straight and simple. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003E\u0027Merging\u0027 mods is one of those things that one the surface would appear simple, but it\u0027s actually quite a lot more complicated than it would seem. \u003C/p\u003E\u003Cp\u003EConsider that even commercial assets from Unity\u0027s asset store, which are packages made specifically to be dropped in and used in existing projects, will, for the most part, require some drastic reworking to fit them into KSP. Granted, the mods are done already over our existing codebase, and that does make the initial integration easier, but there\u0027s more to it than that.\u003C/p\u003E\u003Cp\u003EIf we had a complete game, and someone came up with an awesome new mod that \u003Cem\u003Eeverybody \u003C/em\u003Ewanted, and we had permission to fold it into the game (another issue in itself), that would probably be the end of the story... Assuming also that we wouldn\u0027t have to make any changes to the mod itself (another tall order, since mods are exactly meant to modify the game experience, by definition).\u003C/p\u003E\u003Cp\u003EThat\u0027s obviously not the case here. The game is still growing, and as it grows, it\u0027s very common for us to come across bits of old code that now need to be refactored to make it work again. And that\u0027s with our own code. Now, consider how frequently mods become incompatible when we release a new update. We are blessed with a modding community here that is so solid, you\u0027re likely going to see your broken mods fixed in a short amount of time. That\u0027s done by the mod authors themselves, because they care about their projects and they put in a lot of effort to keep it nicely maintained. \u003C/p\u003E\u003Cp\u003ENow suppose we were to fold a mod into the game... That author support would now become our own burden, and given that we have our own systems to maintain as we develop already, imagine what it would be like if we started to suddenly plop down chunks containing thousands, or tens of thousands of new, unknown to us, lines of code. We\u0027d end up with an unmaintainable mess of code. \u003C/p\u003E\u003Cp\u003EIn the end, we\u0027re happiest as we are right now. The gist of the problem is that neither the game nor the mods are carven-in-stone, unchanging pieces of code. Both are living, evolving projects, which evolve alongside each other, and it takes the combined efforts of everyone to keep this organism alive. \u003C/p\u003E\u003Cp\u003EYou can put it like this:\u003C/p\u003E\u003Cp\u003EA bird needs a tree to nest in and survive... But try gluing the bird to the tree to see what happens. (actually, don\u0027t try that).\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"smart013","CreatedById":106088,"CreatedDateTime":"2014-06-10T04:32:40Z","Content":"\n\u003Cp\u003EThanks for the reply. But what about mods that are getting more and more *essential* for keep playing ksp - at least non stock? Mods like advanced texture managing or load textures on demand are more and more needed to keep ksp afloat with a \u0022basic loadout\u0022 of mods. Ok, i believe you can say that the mod community solves the problems itself has created, but the alternatives in texture \u0026amp; memory handling that are presented here could very well seen as something that urgently needs to be stock - short of going fullblown stock 64bit. Something we all know can easily be 2 more years away.\u003C/p\u003E\u003Cp\u003E(Yes, i know of the unity5 64bit experiments, but i dont think that this will be a stable solution for everyone anytime soon)\u003C/p\u003E\u003Cp\u003EEdit: with basic loadout in mods i mean these from where it is very hard to go back stock. EVE comes to mind,KAS, FAR maybe too.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T04:37:43Z\u0022 title=\u002206/10/2014 04:37  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by smart013\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"LethalDose","CreatedById":92657,"CreatedDateTime":"2014-06-10T05:18:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EYep, that\u0027s exactly what I\u0027m saying. To use your example, in order to spawn an asteroid, modders have to use whatever is currently available to spawn asteroids. Squad, on the other hand, can choose to completely rewrite the asteroid spawning functionality. \u003Cp\u003ESquad didn\u0027t write the original code with all of the ideas of the modders in mind, they wrote it with their own ideas in mind. If they were to choose to actually build in the functionality of a mod they might experience exactly the kind of frustration you\u0027re talking about, and therefore decide to rework some underlying layers to make a more elegant and stable solution.\u003C/p\u003E\u003Cp\u003EAnd hence my conclusion: the integration of the functionality of existing mods is likely to involve a different implementation if it is done by Squad themselves.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Giggleplex777\u0022 data-cite=\u0022Giggleplex777\u0022\u003E\u003Cdiv\u003EHarvesteR\u0027s response:\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, Harvester\u0027s response is valid as far as forcing large chunks of foreign code into the stock game. I know very very little about \u0022real\u0022 software development, but I know enough to understand that\u0027s an idiotic approach. IMO, using Harvester\u0027s statement as evidence that it\u0027s not feasible to include mods in stock is a bit of a strawman argument.\u003C/p\u003E\u003Cp\u003EI\u0027ll probably get reprimanded by the mods for using the term \u0022strawman argument\u0022 since it\u0027s somehow possible to construe it being insulting or trolling or whatever. IMO, this use fits \u003Ca href=\u0022http://www.nizkor.org/features/fallacies/straw-man.html\u0022 rel=\u0022external nofollow\u0022\u003Ethis definition\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EIf mods were to be included in the stock game, it\u0027s \u003Cem\u003Enot\u003C/em\u003E as easy as just dropping the new code into the game core. Part of development is writing the code to do what you want the software to do, but before that you have to figure out what you want the code to do, and how you want to implement the code (the \u0022structure\u0022 of the implementation is the word I use in my head, but may be wrong). \u003C/p\u003E\u003Cp\u003EIt\u0027s in these parts of development (\u003Cem\u003Ewhat\u003C/em\u003E to do and \u003Cem\u003Ehow\u003C/em\u003E to do it) are where mods would be insanely useful, because the modders already went through the process of figuring out what the new mechanic does, and how to implement it. \u003C/p\u003E\u003Cp\u003EThe devs can\u0027t use the code from the \u003Cem\u003Ecode\u003C/em\u003E from the mods verbatim, but the \u003Cem\u003Epurpose, logic, and approximate structure\u003C/em\u003E of the mods could be insanely useful to implement the mods by the devs. Yes, the devs have to re-write the code, but using a mod as a roadmap to implement a feature has the potential to save a huge amount of time and effort for the devs.\u003C/p\u003E\u003Cp\u003EIn my view, adapting mods to the core game is similar to the way tabletop games adapt rules/mechanics/features/whatever from other games. And this happens \u003Cem\u003Eall the time\u003C/em\u003E. You have to change the rules to specifically address the new game, but you don\u0027t have to re-develop the new rules/mechanics/features/whatever from scratch. Which is I think more or less what allmhuran is driving at in the quote above.\u003C/p\u003E\u003Cp\u003EAgain, above is my opinion, based on facts as I perceive them. I could be so painfully ignorant of the realities of software development that what\u0027s posted here is complete gibberish.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T05:20:38Z\u0022 title=\u002206/10/2014 05:20  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by LethalDose\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"LethalDose","CreatedById":92657,"CreatedDateTime":"2014-06-10T05:37:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Vanamonde\u0022 data-cite=\u0022Vanamonde\u0022\u003E\u003Cdiv\u003ERemember, you can\u0027t just stick something in there once, and it works forever more. Software needs to be maintained, revised, etc. This is much harder to do if you didn\u0027t write the code in the first place, and it\u0027s not organized the way you would have set things up. Also, what happens when Squad starts making money off of a mod-maker\u0027s code? The mod-maker would have to be compensated in some way. How much would they need to pay for that? It\u0027s a whole big can of worms.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI just re-read this counter-point. I think I addressed the former argument above (code would have to be re-written).\u003C/p\u003E\u003Cp\u003EAs for the second point (SQUAD making money off of modder\u0027s code), a few points:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EIf the mods are re-writing code, it\u0027s not the modder\u0027s code anymore, even if it was inspired by the modder\u0027s work.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EUnless I\u0027m mistaken, modders have to make their mods\u0027 source code available to SQUAD.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EI can\u0027t imagine SQUAD doesn\u0027t have a clause in the ToS/EULA that allows them to do whatever they want with code shared on their forums that modifies their intellectual property.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESimilarly, I can\u0027t imagine a modder would refuse to allow their code to be included in stock if they were asked.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2014-06-10T05:49:08Z","Content":"\n\u003Cp\u003EYou\u0027re not completely off track, but it doesn\u0027t usually work out that way.\u003C/p\u003E\u003Cp\u003ELet\u0027s continue with a nice simple and concrete example brought up by regex: a mod that involves some gameplay involving asteroids, and therefore has the ability to spawn asteroids.\u003C/p\u003E\u003Cp\u003EImagine, then, that the mod therefore has a function to spawn an asteroid called (hopefully) something easy to find like \u0022spawn asteroid\u0022. What modders currently have to do looks something like this (pseudocode):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Emymod.spawn_asteroid(param1, param2, ...) {\u003Cbr\u003E listener = spawn_listener()\u003Cbr\u003E generate_random_asteroid()\u003Cbr\u003E generated_asteroid = listener.get_latest_object()\u003Cbr\u003E generated_asteroid.orbital_parameters = generate_orbital_parameters(param1, param2, ...)\u003Cbr\u003E listener.delete()\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ERegex suggests that what would be \u0022easier\u0022 for the mod would be this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Emymod.spawn_asteroid(param1, param2, ...) {\u003Cbr\u003E squad.spawn_asteroid(param1, param2, ...)\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EA modder can\u0027t make this happen directly, though, because it requires that squad encapsulate asteroid spawning in a different way from how it is currently done. On the other hand, if squad wanted to port the mod, they might do this.\u003C/p\u003E\u003Cp\u003EHowever, there are a lot of caveats. First of all, is the mod written nicely like this? What if the spawn_asteroid function in the mod actually has a bunch of side effects? What if it\u0027s not named so obviously?\u003C/p\u003E\u003Cp\u003EOf course, there\u0027s always the question of whether the second model is in fact better. I would suggest in this case that it may not be. The first model may look cumbersome but arguably works for any kind of spawned thing. It is more generic and more flexible. In other cases, however, a mod may be using some rather \u0022nasty\u0022 hack to get things to work because the existing code doesn\u0027t have a good way to do it. In such a case Squad would almost certainly look at changing the implementation to ensure stability over future updates. \u003C/p\u003E\u003Cp\u003EThese questions and others like them are the kinds of things that would have to be considered by Squad if they looked at incorporating current mods.\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-06-10T06:43:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EHowever, there are a lot of caveats. First of all, is the mod written nicely like this? What if the spawn_asteroid function in the mod actually has a bunch of side effects? What if it\u0027s not named so obviously?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s what code reviews are for. You\u0027re certainly not going to integrate closed-source code into your own project unless you trust the source.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EOf course, there\u0027s always the question of whether the second model is in fact better. I would suggest in this case that it may not be.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh boy...\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EThe first model may look cumbersome but arguably works for any kind of spawned thing.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESince we\u0027ve taken it this far, let\u0027s examine the code.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Emymod.spawn_asteroid(param1, param2, ...) {\u003Cbr\u003E listener = spawn_listener()\u003Cbr\u003E generate_random_asteroid()\u003Cbr\u003E generated_asteroid = listener.get_latest_object()\u003Cbr\u003E generated_asteroid.orbital_parameters = generate_orbital_parameters(param1, param2, ...)\u003Cbr\u003E listener.delete()\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is not really generic, it\u0027s specific to a single object since you\u0027re looking for newly spawned ships that are asteroids. The reason you have to flip-flop the listener is because you don\u0027t want to catch player-spawned ships like your next launch; ships and asteroids are the same thing. You could use the \u003Cem\u003Eprocess\u003C/em\u003E to catch other things you want to spawn but, secondly, you\u0027re doing an awful lot of operations in order to catch an asteroid that you just generated. That\u0027s stupid.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003Ea mod may be using some rather \u0022nasty\u0022 hack to get things to work because the existing code doesn\u0027t have a good way to do it. In such a case Squad would almost certainly look at changing the implementation to ensure stability over future updates.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is exactly what all this listener flip-flopping is, a \u003Cem\u003Enasty hack\u003C/em\u003E. Now while you claim the first approach is more flexible, were someone to have access to a function that could be called to generate a specific asteroid \u003Cem\u003Eany class\u003C/em\u003E could generate a specific asteroid. Maybe Jool spawns a trojan asteroid, who knows. Maybe you could have an extinction generator spawn huge asteroids to pelt Kerbin is some weird scenario. Under the first chunk of code you\u0027ve suddenly got a bunch of classes flip-flopping listeners in some kind of crazy dance eating up processing time because accessing generated asteroids \u003Cem\u003Eisn\u0027t easy\u003C/em\u003E. Not to mention that the extinction generator has to keep rolling until it gets an \u0022F\u0022 class because no one bothered to let it generate an \u0022F\u0022 class specifically.\u003C/p\u003E\u003Cp\u003EThis\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Esquad.spawn_asteroid(asteroidClass, Orbit, etc...)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eis portable. It allows multiple classes to get asteroids in a simple, easy manner, whenever they want, with minimal operations, that doesn\u0027t involve hacks.\u003C/p\u003E\u003Cp\u003EAnd you are correct, SQUAD will be able to do things better (for the most part) because modders \u003Cem\u003Ehave to create these nasty hacks\u003C/em\u003E.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EThese questions and others like them are the kinds of things that would have to be considered by Squad if they looked at incorporating current mods.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt has less to do with integrating code and more with workflow and workload, IMO. I can only really speak from my own experience (three years professional, five years modding and other open-source shenanigans) but one thing I do know is that pretty much everyone I\u0027ve met borrows code. They may not specifically lift it line-by-line, but they do borrow; it\u0027s part of the learning process and it helps move your projects forward. SQUAD hasn\u0027t exactly made it easy on themselves should they decide to borrow code...\u003C/p\u003E\u003Cp\u003EE: Anyway, this is all pretty pointless posturing. It\u0027s obvious that SQUAD isn\u0027t going to integrate modder code.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T06:47:12Z\u0022 title=\u002206/10/2014 06:47  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by regex\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2014-06-10T06:53:51Z","Content":"\n\u003Cp\u003EI think you\u0027re missing the point regex. I\u0027m using your example just for the sake of having an existing example to use, not because I necessarily think it is the perfect example of the situations we\u0027re describing. As such, I won\u0027t debate whether one implementation or another is \u003Cem\u003Ein fact\u003C/em\u003E better in this (or any) particular case. I\u0027m talking about the difficulties and potential issues \u003Cem\u003Ein principle\u003C/em\u003E.\u003C/p\u003E\n"},{"CreatedByName":"Whirligig Girl","CreatedById":36077,"CreatedDateTime":"2014-06-10T07:33:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022asheft\u0022 data-cite=\u0022asheft\u0022\u003E\u003Cdiv\u003EDidn\u0027t they do that with Bac9? Putting a runway and spaceplane parts into the stock game? I agree that adding some mods that add key missing elements to the stock game (Ferram Aerospace, Deadly Reentry, etc.) would make the stock game a lot better.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EC7 did that, bac9 did the building remodel.\u003C/p\u003E\u003Cp\u003EMany of ClaraLyrae\u0027s KSPX parts made it into the game.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T07:44:27Z\u0022 title=\u002206/10/2014 07:44  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by Specialist290\u003C/strong\u003E\n\u003Cbr\u003EMerging sequential posts\n\u003C/span\u003E\n"},{"CreatedByName":"asheft","CreatedById":112588,"CreatedDateTime":"2014-06-10T23:08:14Z","Content":"\n\u003Cp\u003ESorry, my bad. I was confusing the addition of spaceplane parts and the B9 pack.\u003C/p\u003E\n"},{"CreatedByName":"weezl","CreatedById":112186,"CreatedDateTime":"2014-06-10T23:26:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EYou\u0027re not completely off track, but it doesn\u0027t usually work out that way.\u003Cp\u003ELet\u0027s continue with a nice simple and concrete example brought up by regex: a mod that involves some gameplay involving asteroids, and therefore has the ability to spawn asteroids.\u003C/p\u003E\u003Cp\u003EImagine, then, that the mod therefore has a function to spawn an asteroid called (hopefully) something easy to find like \u0022spawn asteroid\u0022. What modders currently have to do looks something like this (pseudocode):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Emymod.spawn_asteroid(param1, param2, ...) {\u003Cbr\u003E listener = spawn_listener()\u003Cbr\u003E generate_random_asteroid()\u003Cbr\u003E generated_asteroid = listener.get_latest_object()\u003Cbr\u003E generated_asteroid.orbital_parameters = generate_orbital_parameters(param1, param2, ...)\u003Cbr\u003E listener.delete()\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ERegex suggests that what would be \u0022easier\u0022 for the mod would be this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Emymod.spawn_asteroid(param1, param2, ...) {\u003Cbr\u003E squad.spawn_asteroid(param1, param2, ...)\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EA modder can\u0027t make this happen directly, though, because it requires that squad encapsulate asteroid spawning in a different way from how it is currently done. On the other hand, if squad wanted to port the mod, they might do this.\u003C/p\u003E\u003Cp\u003EHowever, there are a lot of caveats. First of all, is the mod written nicely like this? What if the spawn_asteroid function in the mod actually has a bunch of side effects? What if it\u0027s not named so obviously?\u003C/p\u003E\u003Cp\u003EOf course, there\u0027s always the question of whether the second model is in fact better. I would suggest in this case that it may not be. The first model may look cumbersome but arguably works for any kind of spawned thing. It is more generic and more flexible. In other cases, however, a mod may be using some rather \u0022nasty\u0022 hack to get things to work because the existing code doesn\u0027t have a good way to do it. In such a case Squad would almost certainly look at changing the implementation to ensure stability over future updates. \u003C/p\u003E\u003Cp\u003EThese questions and others like them are the kinds of things that would have to be considered by Squad if they looked at incorporating current mods.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is correct.. there are also additional considerations which make things even more complex:\u003C/p\u003E\u003Cp\u003EAll programs involve simplifying assumptions. That is as true of KSP as it would be of a modder\u0027s code module. As long as bringing a new feature into the current codebase doesn\u0027t change those underlying assumptions, all is well. But if an assumption must be changed.. it can have a frightful affect on a codebase depending on how the original coders managed the complexity of the code in the first place. If the code is nicely designed and all the modules nicely isolated, then changing an underlying assumption may be merely \u0027large\u0027 in its affect. But if it isn\u0027t (for any number of reasons), then changing a simplifying assumption could mean something approaching a major rewrite. I\u0027ve seen this on a code base that was quite small (\u0026lt;40K lines of code). The original authors had written a mess (they were business folks, not computer science folks), and when we had to change some things, it blew up into re-writing 2/3s of the code. Note I\u0027m NOT saying KSP is like this.. I just know what can happen when you make assumptions that are wrong 1 year from now. And.. I expect that KSP is larger as a code base.. which means underlying assumptions changing midstream can have a quite large effect.\u003C/p\u003E\u003Cp\u003EWhen you are writing code, you must try to keep the future in mind.. but the future you decide on might not be the one you actually see.. which is why some programs end up dying nasty deaths after 4-5 years.\u003C/p\u003E\u003Cp\u003EThe process of designing and writing large programs is a series of line-bets on the future along with a whole lot of rigor to make sure things work correctly as you write each module and integrate it into the whole. I\u0027ve met LOTS of programmers that don\u0027t make good line bets, and many that don\u0027t apply a lot of rigor.. as those bad things multiply, things get worse yet. \u003C/p\u003E\u003Cp\u003EAgain.. I\u0027m not implying anything about KSP, just trying to give real world perspective on the process of writing software.. Looking at the stability of KSP .24 vs. what it could be, I\u0027m betting its a well organized highly unit tested piece of code.. which from any programmer is high praise. I don\u0027t know this for a fact, I\u0027m just a customer.. but it seems like it is so.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T23:39:21Z\u0022 title=\u002206/10/2014 11:39  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by weezl\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MR4Y","CreatedById":66897,"CreatedDateTime":"2014-06-11T01:32:08Z","Content":"\n\u003Cp\u003EI thought they were doing this already, but calling them \u0027new features\u0027 instead.\u003C/p\u003E\n"},{"CreatedByName":"Ted","CreatedById":26298,"CreatedDateTime":"2014-06-12T12:38:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Devo\u0022 data-cite=\u0022Devo\u0022\u003E\u003Cdiv\u003EThey don\u0027t support or use mods, they have stated on many occasions. also, as far as I\u0027m aware if you do work for Squad, you also can\u0027t run a modded version (that they know about) it\u0027s part of their agreement (says a few ex developers)...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s far from correct. I have a few modded installs here and even maintain a plugin I developed before joining Squad, as does Romfarer. Most of us at Squad simply don\u0027t have time to keep up with the fantastically fast modding scene and try out the new mods and thus don\u0027t run modded installs. Furthermore, in testing we tend to use mods to essentially test out areas of the game that are more difficult to test stock, this is usually done with the help of the mod author.\u003C/p\u003E\u003Cp\u003ETo clarify further on our support of mods. We don\u0027t ensure that we\u0027ll provide support modded installs simply because it\u0027s a practically impossible task to account for all the plugins and add-ons that are out there and assist players in the use of features we\u0027re not familiar with. However, that\u0027s very different to us supporting\u003Cem\u003E the use of mods\u003C/em\u003E, which we absolutely do.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-12T12:54:51Z\u0022 title=\u002206/12/2014 12:54  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 12, 2014\u003C/time\u003E by Ted\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MR4Y","CreatedById":66897,"CreatedDateTime":"2014-06-12T13:46:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ETo clarify further on our support of mods. We don\u0027t ensure that we\u0027ll provide support modded installs simply because it\u0027s a practically impossible task to account for all the plugins and add-ons that are out there and assist players in the use of features we\u0027re not familiar with. However, that\u0027s very different to us supporting\u003Cem\u003E the use of mods\u003C/em\u003E, which we absolutely do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EReally? I\u0027m sorry, but how come a game that has a forum where mods are posted, documentation on how to make them and even has a site dedicated to publish mods so people can use them IS NOT ABLE TO TRACK THE NUMBER OF MODS???\u003C/p\u003E\u003Cp\u003EOkay, there might be some other mods out there that are not cointaned within this community, although this is almost impossible at best. KSP is not that big of a game anyways. We\u0027re not talking about Fallout 3, Skyrim or even DOOM levels of modding here.\u003C/p\u003E\u003Cp\u003EEither you do two things:\u003C/p\u003E\u003Cp\u003E-Don\u0027t support mods at all and keep with the unlikely scenario that \u0027because there are too many mods everywhere, we can\u0027t possibly support them.\u0027 (status quo)\u003C/p\u003E\u003Cp\u003E-Assuming the highly unlikely scenarion from above is existant, support only mods posted in the forums or in Curse.\u003C/p\u003E\n"}]}