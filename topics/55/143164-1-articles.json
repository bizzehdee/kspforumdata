{"TopicId":143164,"ForumId":55,"TopicTitle":"Hyperthreading in 1.1","CreatedByName":"TheUnamusedFox","CreatedById":5606,"CreatedDateTime":"2016-07-05T18:50:25Z","PageNum":1,"Articles":[{"CreatedByName":"TheUnamusedFox","CreatedById":5606,"CreatedDateTime":"2016-07-05T18:50:25Z","Content":"\n\u003Cp\u003E\nSo, I was reading about hyperthreading the other day, and got to thinking - is it going to cause instability with KSP\u0027s new multithreading support? I admit I don\u0027t really know much about the topic, but my understanding of hyperthreading is that it creates two virtual cores on a single physical core, and which allows it to work more efficiently. Now the problem that I\u0027m seeing that probably doesn\u0027t exist is that since KSP now splits the physics load for multiple ships across multiple cores, isn\u0027t the entire purpose of that to ensure that things are processed simultaneously, so that each frame time doesn\u0027t have to be spent waiting for different portions of the physics to be processed? If KSP is giving two threads to two virtual core, that core can still only process one thing at a time, it\u0027s just getting information more efficiently. Doesn\u0027t the time spent waiting for it to switch back and forth, processing both, cause a problem? Does KSP compensate for that - delay when things are supposed to be processed on seperate cores, but are only on one? I\u0027m probably missing something big here, like I said I don\u0027t really know much about the topic, just random bits I\u0027ve picked up by being around people who do understand it - just enough to be worried about something like this. Please tell me I\u0027m being an idiot, I\u0027d like to be wrong.\n\u003C/p\u003E\n"},{"CreatedByName":"Rocket In My Pocket","CreatedById":154640,"CreatedDateTime":"2016-07-05T20:49:57Z","Content":"\n\u003Cp\u003E\nHyper threading has been around and in use for decades.\n\u003C/p\u003E\n\u003Cp\u003E\nIf it hasn\u0027t caused a problem yet, I doubt it\u0027s going to any time soon.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t think you have to lose any sleep over it.\n\u003C/p\u003E\n"},{"CreatedByName":"TheUnamusedFox","CreatedById":5606,"CreatedDateTime":"2016-07-06T01:59:15Z","Content":"\n\u003Cp\u003E\nHyperthreading has caused me many problems, though. That\u0027s why I\u0027m worried about it, especially with 1.1 and KSP\u0027s increased multithreading support. One thing I remember off the top of my head was a logitech webcam driver freezing with hyperthreading on, and working perfectly with it off. My boot time is also significantly shorter with it off, and since I\u0027ve disabled it I\u0027ve managed to get KSP to run for more than 7 hours at a time without a crash - with 102 mods and 8gb of ram use. Before, I could rarely get it to last more than 4 or 5.\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-07-06T03:49:49Z","Content":"\n\u003Cp\u003E\nWell presumably KSP (and Unity) is developed in a thread safe manner, however failure to observe thread safety can cause issues, like race conditions.\u00A0 Often a simple bug can break thread safety but that doesn\u0027t mean they intend it to be that way, it\u0027s just a mistake.\u00A0 As far as controlling thread execution, the KSP developers don\u0027t go that low level.\u00A0 That is handled by the operating system and the Framework, Runtime, and/or Game Engine.\n\u003C/p\u003E\n\u003Cp\u003E\nYou seem to be suggesting that hyper-threading and multi-threading are two different things when in fact hyper-threading is multi-threading.\u00A0 I presume you are referring to multi-core processing where threads are split among physical cores rather than among virtual cores.\u00A0 In both cases, this is still multi-threading.\n\u003C/p\u003E\n\u003Cp\u003E\nHyper threading is a very interesting topic, but to oversimplify, sometimes threads have to stop and wait on some external input before it can continue.\u00A0 This can be a user input, from the mouse or keyboard, or another thread, or timer. \u00A0 Normally that core would just sit there and wait for that input, but with hyper-threading, while that core would have been inactive, it switches out to process an unrelated lower priority thread.\u00A0 When the external input it was waiting on returns, it switches back.\u00A0 There are some pitfalls to this with multi-core processing.\u00A0 The most notable pitfall is that switching threads does cause a slowdown because memory in the CPU cache must be relocated to RAM for the first thread, while bringing in new data for the second.\u00A0 This may or may not be noticeable, but technologies in today\u0027s CPUs can mitigate this to some degree.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, as for bugged drivers, that has nothing to do with KSP at all.\u00A0 There simply is no correlation between your webcam and KSP.\u00A0 I don\u0027t know what would cause your boot to be slower, that sounds a bit strange to me.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-06T03:52:25Z\u0022 title=\u002207/06/2016 03:52  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 6, 2016\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gordon Fecyk","CreatedById":157121,"CreatedDateTime":"2016-07-06T12:00:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222662971\u0022 data-ipsquote-contentid=\u0022143164\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467770355\u0022 data-ipsquote-userid=\u00225606\u0022 data-ipsquote-username=\u0022TheUnamusedFox\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, TheUnamusedFox said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHyperthreading has caused me many problems, though. [...] My boot time is also significantly shorter with it off.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat kind of system is this that doesn\u0027t have more than one processor core and has hyperthreading turned off?\u00A0And is so slow that you actually notice the difference between single processor and multiple processor boot times?\n\u003C/p\u003E\n\u003Cp\u003E\nWindows sees HT processors as multiple physical processors and uses a multi-processor kernel, so you\u0027d get a similar result on a Core2 with two cores and no HT. And in 2016, every system has more than one core these days, even lowly Atom or Duron-based systems.\n\u003C/p\u003E\n\u003Cp\u003E\n--\n\u003C/p\u003E\n"},{"CreatedByName":"eddiew","CreatedById":127483,"CreatedDateTime":"2016-07-06T12:19:31Z","Content":"\n\u003Cp\u003E\nSomewhere in the guts of KSP will be code that says \u0022in one thread do this, and in another do this\u0022 and nothing more specialised than that.\n\u003C/p\u003E\n\u003Cp\u003E\nBy and large, it\u0027s the operating system that designates what runs on what. Any modern Windows or Linux install should try to load physical cores up first before logical ones\u00A0\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2016-07-06T13:29:54Z","Content":"\n\u003Cp\u003E\nThe thing you are missing is probably thread synchronization.\u003Cbr\u003E\nProgrammers typically code (at least) one management thread, that keeps track of which threads are running, and at certain predefined points waits for all threads to reach a predefined checkpoint. For games this would typically happen before a frame is being drawn. Programmers also have tools available to manage data access of threads, to make sure threads don\u0027t operate on the same data simultaneously (as that would be bad\u2122 - it\u0027s called a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Race_condition\u0022 rel=\u0022external nofollow\u0022\u003Erace condition\u003C/a\u003E, or, in case thread A is waiting for thread B to finish working on data, while thread B is waiting for thread A to finish, it\u0027s called a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Deadlock\u0022 rel=\u0022external nofollow\u0022\u003Edeadlock\u003C/a\u003E).\n\u003C/p\u003E\n\u003Cp\u003E\nThis is what \u003Cem\u003Eshould\u003C/em\u003E make threads work (be it multi-processor, or hyperthreading, or whatnot). I\u0027ve intentionally written that programmers have the tools available, because, as always, there\u0027s the not too small chance of human error, and thread timing errors are particularly hard to find, as already reproducing them might be a huge pain. There\u0027s actually a pretty fun browser game, where the player has to try to cause deadlocks and/or race conditions by manually stepping through buggy multi-threaded code. It\u0027s called \u003Ca href=\u0022https://deadlockempire.github.io\u0022 rel=\u0022external nofollow\u0022\u003EDeadlock Empire\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nThat being said, the multi-threaded physics of KSP 1.1 is below the level that game developers (typically) work on. It\u0027s part of nVidia PhysX, which is pretty much a black-box that might work, or might not work (*cough* wheels *cough*). If the devs didn\u0027t invest a huge amount of time to work around Unity (which expects all scripts to be single-threaded), they probably don\u0027t have much self-written multi-threaded code in KSP.\n\u003C/p\u003E\n"},{"CreatedByName":"TheUnamusedFox","CreatedById":5606,"CreatedDateTime":"2016-07-06T16:50:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222663392\u0022 data-ipsquote-contentid=\u0022143164\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467806401\u0022 data-ipsquote-userid=\u0022157121\u0022 data-ipsquote-username=\u0022Gordon Fecyk\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Gordon Fecyk said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat kind of system is this that doesn\u0027t have more than one processor core and has hyperthreading turned off?\u00A0And is so slow that you actually notice the difference between single processor and multiple processor boot times?\n\u003C/p\u003E\n\u003Cp\u003E\nWindows sees HT processors as multiple physical processors and uses a multi-processor kernel, so you\u0027d get a similar result on a Core2 with two cores and no HT. And in 2016, every system has more than one core these days, even lowly Atom or Duron-based systems.\n\u003C/p\u003E\n\u003Cp\u003E\n--\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m running an intel I7-4790k 4.5ghz, windows is installed on an ssd. Boot time is 12 seconds shorter with hyperthreading off.\n\u003C/p\u003E\n"},{"CreatedByName":"Gordon Fecyk","CreatedById":157121,"CreatedDateTime":"2016-07-06T17:44:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222663665\u0022 data-ipsquote-contentid=\u0022143164\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467823855\u0022 data-ipsquote-userid=\u00225606\u0022 data-ipsquote-username=\u0022TheUnamusedFox\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, TheUnamusedFox said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBoot time is 12 seconds shorter with hyperthreading off\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy own system (i7 4770k four cores / eight with HT, 3.9 GHz) boots in less than six seconds total\u00A0with HT turned on. That\u0027s weird. I have a feeling there\u0027s something else wrong besides hyperthreading.\n\u003C/p\u003E\n\u003Cp\u003E\nMind you,\u00A0\u0022boot\u0022 for me starts at the end of POST, and ends at a logon screen,\u00A0because I\u0027m a bit of a security nut. Logging on does take another three seconds after I type in my password.\n\u003C/p\u003E\n\u003Cp\u003E\n--\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-06T17:54:37Z\u0022 title=\u002207/06/2016 05:54  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 6, 2016\u003C/time\u003E by Gordon Fecyk\u003C/strong\u003E\n\u003Cbr\u003EDefinition of \u0026quot;boot\u0026quot;\n\u003C/span\u003E\n"},{"CreatedByName":"Corona688","CreatedById":2511,"CreatedDateTime":"2016-07-06T18:46:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222662502\u0022 data-ipsquote-contentid=\u0022143164\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467744625\u0022 data-ipsquote-userid=\u00225606\u0022 data-ipsquote-username=\u0022TheUnamusedFox\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n23 hours ago, TheUnamusedFox said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo, I was reading about hyperthreading the other day, and got to thinking - is it going to cause instability with KSP\u0027s new multithreading support? I admit I don\u0027t really know much about the topic, but my understanding of hyperthreading is that it creates two virtual cores on a single physical core, and which allows it to work more efficiently.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHyper threading is not real threading.\u00A0 The \u0022virtual CPU\u0027s\u0022 are just an artifact of how the operating system uses them, it doesn\u0027t actually process two threads simultaneously.\u00A0 Sometimes it can squeeze in an extra instruction here and there, using parts which the main thread isn\u0027t otherwise using, which makes it effectively faster.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNow the problem that I\u0027m seeing that probably doesn\u0027t exist is that since KSP now splits the physics load for multiple ships across multiple cores, isn\u0027t the entire purpose of that to ensure that things are processed simultaneously\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThreading doesn\u0027t work that way, it doesn\u0027t act like one giant, faster CPU.\u00A0 (That would be MMX/SSE, single-instruction-multiple-data stuff, which can process whole groups of numbers in one instruction.)\u00A0 Each thread works separately, allowing them to accomplish more work in total between them.\u00A0 You don\u0027t get synchronization automatically -- that\u0027s why multithreading is so difficult and why old programs never bothered with it.\u00A0 It can take radical design changes to use.\n\u003C/p\u003E\n\u003Cp\u003E\nSome programs actually depended on \u003Cstrong\u003Enot\u003C/strong\u003E having multiple cores.\u00A0 Master of Orion II for example, which depended on \u0022thread A\u0022 not running while \u0022thread B\u0022 is, even though the program has 2 threads.\u00A0 They didn\u0027t bother to synchronize them properly since nobody would ever have two whole CPU\u0027s, right?\u00A0 So if you do, one thread is able to kick the ladder out from under the other and the game locks.\n\u003C/p\u003E\n\u003Cp\u003E\nIn short:\n\u003C/p\u003E\n\u003Cp\u003E\n1) Anything equipped to handle threading can handle hyperthreading, too.\u00A0 Anything threaded has to keep track of its threads.\n\u003C/p\u003E\n\u003Cp\u003E\n2) If you have 3 hyperthreaded cores, you don\u0027t have 6 cores -- you have 3 somewhat faster single cores.\u00A0 The OS just treats them as six to keep their extra parts in order.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-06T18:50:33Z\u0022 title=\u002207/06/2016 06:50  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 6, 2016\u003C/time\u003E by Corona688\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Corona688","CreatedById":2511,"CreatedDateTime":"2016-07-06T19:01:56Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222662971\u0022 data-ipsquote-contentid=\u0022143164\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467770355\u0022 data-ipsquote-userid=\u00225606\u0022 data-ipsquote-username=\u0022TheUnamusedFox\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, TheUnamusedFox said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHyperthreading has caused me many problems, though. That\u0027s why I\u0027m worried about it, especially with 1.1 and KSP\u0027s increased multithreading support. One thing I remember off the top of my head was a logitech webcam driver freezing with hyperthreading on, and working perfectly with it off. My boot time is also significantly shorter with it off, and since I\u0027ve disabled it I\u0027ve managed to get KSP to run for more than 7 hours at a time without a crash - with 102 mods and 8gb of ram use. Before, I could rarely get it to last more than 4 or 5.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSounds like a buggy motherboard or out of date BIOS to me.\u00A0 Multithreading and hyperthreading are pretty innocuous these days.\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-07-06T19:34:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222663476\u0022 data-ipsquote-contentid=\u0022143164\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467811794\u0022 data-ipsquote-userid=\u0022110576\u0022 data-ipsquote-username=\u0022soulsource\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, soulsource said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe thing you are missing is probably thread synchronization.\u003Cbr\u003E\nProgrammers typically code (at least) one management thread, that keeps track of which threads are running, and at certain predefined points waits for all threads to reach a predefined checkpoint.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot in any memory managed language (C#, Java, etc).\u00A0 Modern languages do many things for you, including tracking memory locations (this eliminates the necessity of pointers, though you can still use them if you must) and they also track threads for you.\u00A0 There is just no need to run a management thread anymore, you only have to designate a task to be run in a new thread, in some cases you don\u0027t even have to do that and it threads automatically, though that is usually the framework or engine components only.\u00A0 Windows Forms for example will automatically multi-thread it\u0027s components through the .NET Framework.\u00A0 Of course KSP doesn\u0027t use the .NET Framework, but I\u0027m sure Unity does the same.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-06T19:37:52Z\u0022 title=\u002207/06/2016 07:37  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 6, 2016\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"}]}