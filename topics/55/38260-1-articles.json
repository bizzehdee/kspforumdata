{"TopicId":38260,"ForumId":55,"TopicTitle":"RCS: Closest RCS unit to CoM gets 100% thrust, then scale down for lever arm","CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2013-07-23T04:11:36Z","PageNum":1,"Articles":[{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2013-07-23T04:11:36Z","Content":"\n\u003Cp\u003ENot sure if this is, in fact, how RCS will be handled in 0.21, I heard that they are bringing back lever arm compensation.\u003C/p\u003E\u003Cp\u003EI was just thinking that if *all* RCS thrusters are lever-arm compensated (by simply scaling them based on distance from CoM) then there would be no advantage to placing your RCS ports away from the centre of mass for additional torque. This would be a problem for larger ships.\u003C/p\u003E\u003Cp\u003ESo the solution, it seems, would be to have it so that the RCS unit *closest to the center of mass gets 100% thrust*, and then the rest are scaled down the further from the CoM they are compared to that RCS unit.\u003C/p\u003E\u003Cp\u003EThis would mean that if you did the \u0022right thing\u0022 for big ships and placed *all* your RCS thrusters far from the CoM you would still get the benefit of additional lever-arm torque (since they will all be putting out close to 100% thrust), but lever arm compensation would still mean you would not get unbalanced RCS forces.\u003C/p\u003E\u003Cp\u003EAnyone know if this is, in fact, what is going to be coming?\u003C/p\u003E\n"},{"CreatedByName":"Brenok","CreatedById":49609,"CreatedDateTime":"2013-07-23T05:12:36Z","Content":"\n\u003Cp\u003EI don\u0027t quite understand what you\u0027re proposing. Why would you want for distant RCS thrusters to get less thrust?\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2013-07-23T05:59:12Z","Content":"\n\u003Cp\u003EYeah, sorry, it\u0027s a bit hard to explain.\u003C/p\u003E\u003Cp\u003ERCS can create unbalanced forces depending on how you position the units. Here is a contrived example:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/6klu4Jz.jpg?1\u0022 alt=\u00226klu4Jz.jpg?1\u0022\u003E\u003C/p\u003E\u003Cp\u003EI have marked the RCS units A and B. \u003C/p\u003E\u003Cp\u003EThe distance from the CoM to A is, say, x.\u003C/p\u003E\u003Cp\u003EThe distance from the CoM to B is 3x.\u003C/p\u003E\u003Cp\u003EIf you are flying this vessel and try to translate to the right, both A and B will fire. But since B is much further from the CoM than A, this will introduce a torque that will cause the ship to yaw to the left while translating right. It won\u0027t hold orientation.\u003C/p\u003E\u003Cp\u003EIn an earlier version of KSP the force imparted by RCS units was subject to a divisor that was dependent on how far they were from the CoM, a technique dubbed \u0022lever arm compensation\u0022. The idea behind this was that you did not need to perfectly balance your RCS units to get balanced forces. The implementation created a problem, though: if you put your RCS units very, very close to the CoM, then the divisor would be less than 1. As a result, the RCS unit force would be multiplied. An RCS unit that was 0.1 units of distance away from the CoM would put out a force equal to 100% / 0.1, or 1000% RCS force. You could actually make rockets with ridiculous thrust simply by getting your RCS units closer and closer to the CoM.\u003C/p\u003E\u003Cp\u003EThere is talk of bringing back lever arm compensation, which I think is a good idea. However, I\u0027m not sure how it is going to be implemented. I heard, for example, that it would only be enabled in docking mode or some such.\u003C/p\u003E\u003Cp\u003ERather than put on such limitations (heck, I never use docking mode and don\u0027t really see the point of it), I propose that a better solution to the RCS overthrust bug would be to normalize RCS units based on whichever one is closest to the CoM. Taking that picture again, let\u0027s say that RCS unit \u0022A\u0022 is (say) 0.5 units from the CoM. Since it is the closest unit to the CoM, it gets 100% thrust. Any other units are then normalized against this one. So since RCS unit B is 1.5 units from the CoM, it should output 1/3rd as much thrust as RCS unit A.\u003C/p\u003E\u003Cp\u003EWith this implementation, the further away your closest RCS port to the CoM is, the better. A such there are still design considerations to be made.\u003C/p\u003E\u003Cp\u003EThis method would retain the efficiency gains that clever designs can have when RCS units are placed far from the CoM without re-introducing the RCS overthrust problem. The fix is to base lever arm compensation on distance relative to the closest-to-CoM RCS unit instead of basing the compensation on the absolute value of the distance to the CoM.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-23T06:03:45Z\u0022 title=\u002207/23/2013 06:03  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 23, 2013\u003C/time\u003E by allmhuran\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tntristan12","CreatedById":7005,"CreatedDateTime":"2013-07-23T06:05:37Z","Content":"\n\u003Cp\u003EAFAIK, this is planned. I could be wrong though. I would like to see it, however. It doesn\u0027t seem like it\u0027d be *that* difficult to implement partially, if not fully.\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2013-07-23T06:17:31Z","Content":"\n\u003Cp\u003EA perfect implementation would be more complex than my contrived example: it would actually need to normalize for each axis based on the orthogonal distance of the active RCS units from the axis passing through the CoM. Taking my contrived picture, again, both units are actually equidistant from the long axis through the ship, which is the axis we care about if we wanted to impart a roll, for example.\u003C/p\u003E\u003Cp\u003EHowever, I\u0027m not sure going that far is necessary. Using a simpler, absolute distance from CoM irrespective of the direction of thrust imparted is probably still going to be of assistance, and leaves the player with some design challenges (a good thing IMO).\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-07-23T07:46:51Z","Content":"\n\u003Cp\u003EBalancing RCS thrusters is planned. In fact, it\u0027s even on the do not suggest list if I remember correctly.\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2013-07-23T08:40:57Z","Content":"\n\u003Cp\u003EPer my original post, I am not asking if it is planned. I even stated that I had heard lever arm compensation was returning. I do not know how that was not obvious.\u003C/p\u003E\u003Cp\u003EThe question, or suggestion, is regarding the specific implementation details.\u003C/p\u003E\n"},{"CreatedByName":"allmappedout","CreatedById":57281,"CreatedDateTime":"2013-07-23T08:51:28Z","Content":"\n\u003Cp\u003EI have a feeling that the SAS upgrades will resolve a significant amount of the issues we\u0027re currently having, change or not.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-07-23T09:06:14Z","Content":"\n\u003Cp\u003EThey removed in .18 because it caused RCS ports that were close to the CoM to get a ridiculous amount of power. I didn\u0027t hear about it being planned to come back any time soon. The new SAS logic will permit the SAS unit to not throttle the RCS units to the max at all time, but nothing concerning balancing them automatically as far as I know.\u003C/p\u003E\u003Cp\u003EJust a small thing: if you intended to talk about specific details of implementation rather than suggesting it, the discussion tag would\u0027ve been better than the suggestion tag \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2013-07-23T09:12:43Z","Content":"\n\u003Cp\u003EThe inability of netizens to read is astonishing no matter how often one encounters the phenomemon.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-23T09:16:25Z","Content":"\n\u003Cp\u003EIn the mean time, you can use my RCS balancing mod, as linked in my signature. RCS balancing is in fact much more complex than just lever arms - it\u0027s a Constrained Linear Program. My mod uses a mathematical solver to balance everything.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-07-23T09:28:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EThe inability of netizens to read is astonishing no matter how often one encounters the phenomemon.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s not because you\u0027re using fancy words that you can act like this. I did read your proposition, I know you said it shouldn\u0027t be scaled to give more thrust near the CoM, but just to scale it to get to 100% when it is at the CoM. I \u003Cem\u003Edid\u003C/em\u003E get this. I simply stated \u003Cstrong\u003Ewhy\u003C/strong\u003E it was removed, and I really don\u0027t get why you are getting angry at me. I was being nice, so try being nice in return if you want people to actually listen to you and help you push your propositions further. You had no reason to snap at me like this.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-23T09:32:31Z\u0022 title=\u002207/23/2013 09:32  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 23, 2013\u003C/time\u003E by stupid_chris\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2013-07-23T12:04:07Z","Content":"\n\u003Cp\u003EZRM: Yes indeed, per an earlier post of mine the requirements of a fully balanced implementation are beyond the solution I have presented, but I think this solution provides the combined advantages of making RCS more balanced without causing any overthrust issues but, at the same time, does not remove all of the challenges from the player and leaves them with some important design choices for maximizing RCS torque and efficiency, which I think is important (but your mod is excellent at what it does!)\u003C/p\u003E\u003Cp\u003Echris: That you felt the need to point out the overthrust problem with the previous implementation demonstrates that you have not, in fact, read the thread, because this exact problem with the previous implementation is the entire reason for this thread, it is something I have already described in detail in this thread, and the details of this alternative implementation as described in what I have written is designed specifically to overcome this problem while still allowing RCS to be somewhat autobalanced and giving builders an advantage if they build for efficient use of RCS. And I got angry because I hate repeating myself like this (I have to do it all the time at work and the frustration doesn\u0027t shake off straight away when I get home, sorry about that).\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-23T12:39:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EZRM: Yes indeed, per an earlier post of mine the requirements of a fully balanced implementation are beyond the solution I have presented, but I think this solution provides the combined advantages of making RCS more balanced without causing any overthrust issues but, at the same time, does not remove all of the challenges from the player and leaves them with some important design choices for maximizing RCS torque and efficiency, which I think is important (but your mod is excellent at what it does!)\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy mod does not negate the need to design crafts well. You still need to make good choices to maximise efficiency, it\u0027s just that you will no longer have to fight the system while using it.\u003C/p\u003E\n"},{"CreatedByName":"hotcrazyfruit","CreatedById":7492,"CreatedDateTime":"2013-07-23T12:41:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003EThe inability of netizens to read is astonishing no matter how often one encounters the phenomemon.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is the cancer that is killing the kerbal forum for me. The arrogance being thrown around is *astonishing*. \u003C/p\u003E\u003Cp\u003Eas per the topic of the thread, I disagree with this method of balancing RCS thrust particularly when considering space stations. If I am building a space station, I generally throw some RCS thrusters onto the first module. Each module I have after that will have reduced RCS thrust. I think there is a better way to do it, frankly. \u003C/p\u003E\u003Cp\u003EAll that needs to happen is that Torque to the left of CoM = Torque to the right of CoM yours DOES do this, however read on.\u003C/p\u003E\u003Cp\u003EIn your solution, if we have a thruster at x and 3x left of CoM, and the exact same to the right, the thrusters at x will give 1N and those at 3x will give just 0.33N. Total thrust would be 2.66N, rather than 4N if they all fired full; which they can since the craft is symmetrical. \u003C/p\u003E\u003Cp\u003EBefore you critique this example for being a symmetrical setup, remember there will be symmetries in rockets people build, where using the lever arm will cause these losses. The solution is to calculate the minimum torque on either side of CoM, and have the side with higher torque fire at the torque of the lower side. This will provide a balanced thrust, at maximum capability. \u003C/p\u003E\u003Cp\u003ENick\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-23T12:44:33Z\u0022 title=\u002207/23/2013 12:44  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 23, 2013\u003C/time\u003E by hotcrazyfruit\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"goldenpeach","CreatedById":34566,"CreatedDateTime":"2013-07-23T13:35:26Z","Content":"\n\u003Cp\u003EA simple way to have both advantages:\u003C/p\u003E\u003Cp\u003EWhen the RCS are used for translation,the RCS are lever-arm compensated.\u003C/p\u003E\u003Cp\u003EWhen the RCS are used for rotation,the RCS aren\u0027t lever-arm compensated.\u003C/p\u003E\u003Cp\u003EAnother wayt is to make the compensation togglable by the user,in that way the user could choose to have lever-arm compensation for rotation.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-23T13:37:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hotcrazyfruit\u0022 data-cite=\u0022hotcrazyfruit\u0022\u003E\u003Cdiv\u003Eas per the topic of the thread, I disagree with this method of balancing RCS thrust particularly when considering space stations. If I am building a space station, I generally throw some RCS thrusters onto the first module. Each module I have after that will have reduced RCS thrust. I think there is a better way to do it, frankly. \u003Cp\u003EAll that needs to happen is that Torque to the left of CoM = Torque to the right of CoM yours DOES do this, however read on.\u003C/p\u003E\u003Cp\u003EIn your solution, if we have a thruster at x and 3x left of CoM, and the exact same to the right, the thrusters at x will give 1N and those at 3x will give just 0.33N. Total thrust would be 2.66N, rather than 4N if they all fired full; which they can since the craft is symmetrical. \u003C/p\u003E\u003Cp\u003EBefore you critique this example for being a symmetrical setup, remember there will be symmetries in rockets people build, where using the lever arm will cause these losses. The solution is to calculate the minimum torque on either side of CoM, and have the side with higher torque fire at the torque of the lower side. This will provide a balanced thrust, at maximum capability. \u003C/p\u003E\u003Cp\u003ENick\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs I mentioned above, the proper way to calculate the correct thrusts is to solve the constrained linear system that represents the effects of each RCS port, instead of working with heuristics that only balance symmetrical crafts, or only balance in one axis. My mod KerbCom Avionics does this. The currently released version is slightly inaccurate in some cases due to floating point errors, but I have improved upon this greatly for the next version.\u003C/p\u003E\n"},{"CreatedByName":"Sean Mirrsen","CreatedById":3873,"CreatedDateTime":"2013-07-23T13:46:27Z","Content":"\n\u003Cp\u003EIndeed, the \u0022lever arm compensation\u0022 thing is absolutely silly. What it combats is the tendency of spacecraft to drift or turn in unpredictable ways if the RCS thrusters aren\u0027t perfectly positioned. Or rather, that\u0027s what it \u003Cem\u003Esupposedly\u003C/em\u003E combats, because... well let\u0027s see. I guess the HarrowJet is bound to be my go-to craft for any given theoretical explanation around here. It\u0027s a non-contrived, not-oversimplified, not-unrealistic example.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://dl.dropboxusercontent.com/u/4152380/KSPSteam_Screens/screenshot0.png\u0022 alt=\u0022screenshot0.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ERCS thrusters litter the surface of this craft. There are thrusters on the nose, the wings, the sides of the engine pods, etc. Now, some thought actually went into constructing this one - it pitches and rolls pretty well. But it has a problem with yaw, seeing how most of its mass is in the rear, and the only thing way past the CoM to compensate the lever force of the nosecone RCS is the tail. Which is, for aerodynamic lift purposes, lifted high up. So whenever it tries to yaw, the extra bit of thrust from the tail elevation starts rolling it.\u003C/p\u003E\u003Cp\u003EHow does the lever arm compensation fight this? There is literally no way to somehow make the craft not roll by using \u003Cstrong\u003Eless thrust\u003C/strong\u003E - the only RCS units capable of effecting yaw on the HarrowJet are the ones on the nosecone (which is also a shuttlepod, so no it can\u0027t have those repositioned), and the ones on the tail - and the centerpoint between them is nowhere near the center of mass. If whichever system tried to calculate the necessary forces to prevent the craft from rolling while turning, it would inevitably come to the conclusion that neither thruster set could exert any force. If it had a fail-safe for that occasion, or just used a \u0022less force from CoM\u0022 approach, it would just fail to do its thing.\u003C/p\u003E\u003Cp\u003EBut curiously, the solution already exists. In fact, we\u0027ve had it for a long time, it was just a wee bit broken and we\u0027re getting it upgraded in the next update. A flight computer, which in this case is folded into the A/SAS, will attempt to maintain the orientation of the craft. It won\u0027t do this through fancy calculations (well, not of the positions and thrust of RCS blocks at least), but through the sheer determination to maintain orientation. It won\u0027t use \u003Cstrong\u003Eless thrust\u003C/strong\u003E, not on the thrusters performing yaw. But it will \u003Cstrong\u003Ecompensate\u003C/strong\u003E with thrusters performing roll - it\u0027ll just gently roll the craft as you adjust yaw, preventing it from tilting sideways. \u003Cstrong\u003EThat\u003C/strong\u003E is the only solution we need here. It\u0027s nice and simple to use, and won\u0027t inhibit the craft\u0027s mobility.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-23T13:48:31Z\u0022 title=\u002207/23/2013 01:48  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 23, 2013\u003C/time\u003E by Sean Mirrsen\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Anton P. Nym","CreatedById":73533,"CreatedDateTime":"2013-07-23T15:34:05Z","Content":"\n\u003Cp\u003EI use a simple expedient of putting a proportionate number of RCS packs depending upon distance from CoM: if one ring of RCS is \u0022x\u0022 distance from CoM and another is \u00222x\u0022 away, I use twice the RCS packs on the first. It mostly works, though of course the current ASAS isn\u0027t terribly happy with that arrangement.\u003C/p\u003E\u003Cp\u003EModulating the thrust would be more elegant, of course. That, or introducing RCS packs of differing strength... but that way leads to parts-madness, I think.\u003C/p\u003E\u003Cp\u003E -- Steve\u003C/p\u003E\u003Cp\u003E\u003Cem\u003Eedited to add:\u003C/em\u003E Or could RCS strength be one of the \u0022tweakables\u0022 coming in a future update?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-23T16:05:30Z\u0022 title=\u002207/23/2013 04:05  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 23, 2013\u003C/time\u003E by Anton P. Nym\u003C/strong\u003E\n\u003Cbr\u003Eadding a late thought\n\u003C/span\u003E\n"},{"CreatedByName":"hotcrazyfruit","CreatedById":7492,"CreatedDateTime":"2013-07-23T20:40:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZRM\u0022 data-cite=\u0022ZRM\u0022\u003E\u003Cdiv\u003EAs I mentioned above, the proper way to calculate the correct thrusts is to solve the constrained linear system that represents the effects of each RCS port, instead of working with heuristics that only balance symmetrical crafts, or only balance in one axis. My mod KerbCom Avionics does this. The currently released version is slightly inaccurate in some cases due to floating point errors, but I have improved upon this greatly for the next version.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECould you briefly describe what exactly a constrained linear system is? I\u0027m no mathematician however I do understand working physics quite well. Is there any chance that a constrained linear system is, at its working level, what I am describing? We\u0027re kind of working from opposite ends of theory here \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"mythbusters844","CreatedById":72313,"CreatedDateTime":"2013-07-23T20:58:52Z","Content":"\n\u003Cp\u003EI remember on the livestream special that lever-arm compensation on translations for RCS would only be available in docking mode IIRC.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-07-23T21:23:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmhuran\u0022 data-cite=\u0022allmhuran\u0022\u003E\u003Cdiv\u003Echris: That you felt the need to point out the overthrust problem with the previous implementation demonstrates that you have not, in fact, read the thread, because this exact problem with the previous implementation is the entire reason for this thread, it is something I have already described in detail in this thread, and the details of this alternative implementation as described in what I have written is designed specifically to overcome this problem while still allowing RCS to be somewhat autobalanced and giving builders an advantage if they build for efficient use of RCS. And I got angry because I hate repeating myself like this (I have to do it all the time at work and the frustration doesn\u0027t shake off straight away when I get home, sorry about that).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, I felt the need to point it again, even though you had mentioned it in your mile long post. And in no way was that a crime. I did so because it was bringing to the fact of why they removed it and why it was on the do not suggest list. Even though you had mentioned it. That\u0027s still no reason to snap off like this. Also, for further info to you: When someone posts in a or your thread, you shouldn\u0027t expect them to have read nothing more but the OP. If additional information is in a post further on, you can\u0027t expect them to read every one of them. So if you don\u0027t like repeating, don\u0027t start threads like this. Lastly, know this: if you are going to be arrogant like this to people who were being nice to you, you won\u0027t be appreciated here.\u003C/p\u003E\n"},{"CreatedByName":"FS3D","CreatedById":73099,"CreatedDateTime":"2013-07-23T21:58:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EYes, I felt the need to point it again, even though you had mentioned it in your mile long post. And in no way was that a crime. I did so because it was bringing to the fact of why they removed it and why it was on the do not suggest list. Even though you had mentioned it. That\u0027s still no reason to snap off like this. Also, for further info to you: When someone posts in a or your thread, you shouldn\u0027t expect them to have read nothing more but the OP. If additional information is in a post further on, you can\u0027t expect them to read every one of them. So if you don\u0027t like repeating, don\u0027t start threads like this. Lastly, know this: if you are going to be arrogant like this to people who were being nice to you, you won\u0027t be appreciated here.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI concur with this.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-23T22:38:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hotcrazyfruit\u0022 data-cite=\u0022hotcrazyfruit\u0022\u003E\u003Cdiv\u003ECould you briefly describe what exactly a constrained linear system is? I\u0027m no mathematician however I do understand working physics quite well. Is there any chance that a constrained linear system is, at its working level, what I am describing? We\u0027re kind of working from opposite ends of theory here \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think I prefer thorough to brief. Though this explanation is not that long. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E\u003C/p\u003E\u003Cp\u003EA constrained linear system is properly called a constrained linear program (CLP). I didn\u0027t call it that previously as you may have misunderstood the meaning of \u0022program\u0022. In maths its meaning is entirely different to the meaning of a computer program.\u003C/p\u003E\u003Cp\u003EA CLP is a set of linear constraints and a linear objective function. A linear constraint is an (in)equality of the form \u003Cem\u003Elinear function\u003C/em\u003E = \u003Cem\u003Econstant\u003C/em\u003E, \u003Cem\u003Elinear function\u003C/em\u003E \u0026lt;= \u003Cem\u003Econstant\u003C/em\u003E or \u003Cem\u003Elinear function\u003C/em\u003E \u0026gt;= \u003Cem\u003Econstant\u003C/em\u003E. And a linear function is a sum of multiples of its continuous real variables, e.g. f(x,y,z) = ax \u002B by \u002B cz, where x, y and z are the variables, and the constants a, b and c are the \u003Cem\u003Ecoefficients\u003C/em\u003E to multiply the variables by. The goal of a CLP is to find the value to give to each variable in order to maximise or minimise (depending on the problem) the objective function, while simultaneously satisfying the constraints. For example,\u003C/p\u003E\u003Cp\u003EMaximise z = 15x \u002B 10y, subject to:\u003C/p\u003E\u003Cp\u003Ex \u0026lt;= 2\u003C/p\u003E\u003Cp\u003Ey \u0026lt;= 3\u003C/p\u003E\u003Cp\u003Ex \u002B y \u0026lt;= 4\u003C/p\u003E\u003Cp\u003E(The solution, by the way, is x = 2, y = 2, z = 50)\u003C/p\u003E\u003Cp\u003EBalancing RCS thrust is, at its heart, a very well formed CLP, just like the one above, but with more variables and more constraints. \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EAnd no, it is not, at its working level, what you are describing, as you are only treating one set of special cases.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EEdit: \u003Cem\u003EActually, reading your post again, you might actually be getting sort of the right idea, though some of it is not quite clear to me. You may want to explain it again.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EIf you wish to maintain a specific thrust in a specific direction, with no rotation, you have exactly 6 constraints:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003E0 net torque around the x axis\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E0 net torque around the y axis\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E0 net torque around the z axis\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ea net thrust in the x direction\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eb net thrust in the y direction\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ec net thrust in the z direction\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewhere (a,b,c) is the desired thrust vector.\u003C/p\u003E\u003Cp\u003EYou also have the objective - to minimise the (non-vector) sum of the thrust of each port, so as to minimise fuel usage. The variables are the percentage values of each port\u0027s thrust.\u003C/p\u003E\u003Cp\u003EYou now need to determine the coefficients of the variables in the constraints, and the objective.\u003C/p\u003E\u003Cp\u003EFor directional thrust constraints, you calculate the component of each RCS port\u0027s thrust coefficient (maximum thrust * direction) in the required axis.\u003C/p\u003E\u003Cp\u003EFor rotational thrust constraints, you calculate the moment of that thrust coefficient around the required axis.\u003C/p\u003E\u003Cp\u003EFor the objective, you just sum the maximum thrust times each variable.\u003C/p\u003E\u003Cp\u003ESo now you just need to solve the system. Luckily there are several efficient algorithms for doing so. I have implemented 2 of these. One (known as the Primal Simplex Method) is available in the current released version of my mod. Look at the source for details.\u003C/p\u003E\u003Cp\u003EEdit: By the way, my mod also solves for specific torque and thrust combinations, not just thrust. It also finds the range of torque and thrust the vessel can provide using other CLPs, so that values can be chosen for the final constraints that are definitely solvable.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-24T13:59:42Z\u0022 title=\u002207/24/2013 01:59  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 24, 2013\u003C/time\u003E by ZRM\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2013-07-24T11:57:04Z","Content":"\n\u003Cp\u003EZRM\u0027s solution is definitely the complete, flight-computer-esque solution. And of course, if anyone doesn\u0027t want to have everything worked out for them, they can simply not use the mod. So as far as it goes, it\u0027s a really excellent way to accomplish one of the goals here, which is to balance RCS output.\u003C/p\u003E\u003Cp\u003EAs per the point of the thread, we haven\u0027t heard what the actual implementation by the devs is going to be. The problem may be that a complete solution as described by Sean or by ZRM\u0027s mod can use monopropellant inefficiently (that is to say, some RCS jets may fire simply in order to compensate for the firing of other RCS jets) to achieve a perfectly balanced solution. A middle ground between what we have now, and a solution like that, is one that simply balances for distance from CoM, just like the original dev implementation, but tweaked to not create overthrust.\u003C/p\u003E\u003Cp\u003EYes, this would mean Sean\u0027s aircraft would still have control issues if relying purely on the simple balancing approach. But that\u0027s fine... if you want to design a craft that cannot inherently balance its RCS output no matter how much lever arm compensation is involved, then you can choose to wear the cost of a flight computer assisted RCS that burns more monopropellant. In other words, the best of both worlds can exist. I don\u0027t think there can be any objection to such a state of affairs.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ELastly, know this: if you are going to be arrogant like this to people who were being nice to you, you won\u0027t be appreciated here.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for your continuing non-contribution.\u003C/p\u003E\n"}]}