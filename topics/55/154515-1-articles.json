{"TopicId":154515,"ForumId":55,"TopicTitle":".loadmeta garbage","CreatedByName":"Fwiffo","CreatedById":148084,"CreatedDateTime":"2017-01-05T03:37:22Z","PageNum":1,"Articles":[{"CreatedByName":"Fwiffo","CreatedById":148084,"CreatedDateTime":"2017-01-05T03:37:22Z","Content":"\n\u003Cp\u003E\nI noticed this in the 1.2.2 changelog:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022 style=\u0022font-family:monospace, monospace;font-size:14px;background:rgb(250,250,250);clear:both;white-space:pre-wrap;padding:2px;border:1px solid rgb(136,136,136);color:rgb(39,42,52);font-style:normal;font-weight:normal;letter-spacing:normal;text-indent:0px;text-transform:none;word-spacing:0px;\u0022\u003E\n\u003Cspan class=\u0022pln\u0022 style=\u0022color:rgb(0,0,0);\u0022\u003E\u002B\u002B\u002BLoadGameDialog\nWhen a game is saved it now creates an associated metadata file - called .loadmeta alongside the .sfs. This file contains a hash of the sfs save. When the loadgame dialog opens it will compare the hash in the .loadmeta file with the hash of the savegame, and if so it will use the data in the .loadmeta file for the load dialog details instead of parsing the whole save file.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nEw. \u00A0Gross. \u00A0Really?\n\u003C/p\u003E\n\u003Cp\u003E\nYou take my nice clean Saves directory and clutter it up with a bunch of garbage?\n\u003C/p\u003E\n\u003Cp\u003E\nCan I suggest the developers eliminate this disgusting, amateur\u00A0hack and put the cached information in the sfs files themselves, near the beginning of the file? \u00A0The dialog could just read up to the end of the cached data. \u00A0That would provide the same speedup, without littering the user\u0027s folder with files that are meaningless to them. \u00A0It should be trivial to do this in a way that maintains compatibility with old/new saves.\n\u003C/p\u003E\n\u003Cp\u003E\nThat\u0027s my friendly and opinionated two cents.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-05T03:38:21Z\u0022 title=\u002201/05/2017 03:38  AM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 5, 2017\u003C/time\u003E by Fwiffo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2017-01-06T13:41:33Z","Content":"\n\u003Cp\u003E\nPeople always become more receptive when you call their work disgusting and amateurish.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2017-01-06T15:30:55Z","Content":"\n\u003Cp\u003E\nLet me be frank, even if what I\u0027m saying could be less than welcome. Those comments in the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E seem to come from somebody who knows very little about IT.\n\u003C/p\u003E\n\u003Cp\u003E\nThe .loadmeta were introduced to avoid having the load the full sfs, those can be so many and massive loading them all to be able to present the selection of games at start brings to a very serious delay. Using a hash of those files instead is fast, and if that matches using the .loadmeta instead allows to save a lot of time and present the window to choose games a lot faster.\n\u003C/p\u003E\n"},{"CreatedByName":"suicidejunkie","CreatedById":155878,"CreatedDateTime":"2017-01-06T18:24:38Z","Content":"\n\u003Cp\u003E\nJust delete all the .loadmeta files, and you will be right back to the previous state of things with slow loading.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhat I wonder:\n\u003C/p\u003E\n\u003Cp\u003E\nIs there any particular reason the meta data needs to be a separate file, rather than being a header before the rest of the .sfs in one file?\n\u003C/p\u003E\n\u003Cp\u003E\nI expect it would have been done this way to minimize the scope of the changes, and in any case it is unlikely to be worth the effort of altering at this point, but I\u0027m just curious.\n\u003C/p\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2017-01-06T21:04:56Z","Content":"\n\u003Cp\u003E\nAs a professional software engineer myself, one word of caution I\u0027d suggest:\u00A0 don\u0027t just assume that a thing is the way it is because people are stupid or lazy, or that it \u0022obviously\u0022 should be a different way.\u00A0 Software developers, as a general rule, tend to be intelligent, hard-working people, and generally have reasons for what they do.\u00A0 Those reasons are often not apparent to consumers of the software.\u00A0 Doesn\u0027t mean one can\u0027t offer helpful suggestions, just... try not to leap to conclusions.\n\u003C/p\u003E\n\u003Cp\u003E\nI assume they had some kind of reason for doing the .loadmeta thing in a separate file, and without knowing more about what those reasons are, I\u0027m not inclined to second-guess them too much.\n\u003C/p\u003E\n\u003Cp\u003E\nOne idea that does occur to me, though, that they could have done that would be less \u0022cluttery\u0022 to the player, without (I suspect) needing much of a code change:\u00A0 create a \u0022meta\u0022 sub-folder in the saves folder, and stick all the .loadmeta files down in there.\n\u003C/p\u003E\n\u003Cp\u003E\nThere may be code reasons why it was simpler to put the .loadmeta in a separate file from the .sfs, but there\u0027s no reason it has to be sitting in the same folder.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222912383\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221483710093\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPeople always become more receptive when you call their work disgusting and amateurish.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n^ Also, this.\u00A0 \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2017-01-07T01:01:39Z","Content":"\n\u003Cp\u003E\nMy best guess is that it makes ensuring .loadmeta validity much simpler to implement; the game checks to see if the hash of the save file matches the hash stored in the .loadmeta. If the files were combined into one, then you\u0027d need some slightly complicated logic to ensure it only hashed the savefile contents, and not the meta-data, because otherwise the hash would never match (since you\u0027re re-writing it each time with the hash generated from a file with a modified hash generated from a file with a modified hash...).\n\u003C/p\u003E\n\u003Cp\u003E\nWhile one could theoretically try to manage things so only the non-metadata portion of the combined savefile was hashed, it\u0027s much simpler and more maintainable coding-wise to say \u0022hash this file and compare to string in this other file\u0022 than say \u0022hash only certain parts of this file and compare to a string inside it\u0022; you need to figure out how to exclude certain bytes from what you\u0027re feeding into the hashing function. Furthermore, if more metadata needs to be stored, you don\u0027t need to add another exception into your \u0022exclude some bytes\u0022 mechanism, you just have to write it to the .loadmeta file.\n\u003C/p\u003E\n\u003Cp\u003E\nIt could be done, but the cost/benefit ratio of making that change is very unfavorable.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-07T01:01:57Z\u0022 title=\u002201/07/2017 01:01  AM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 7, 2017\u003C/time\u003E by Starman4308\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Fwiffo","CreatedById":148084,"CreatedDateTime":"2017-02-11T05:58:48Z","Content":"\n\u003Cp\u003E\nThanks everyone for chiming in. \u00A0I\u0027ve been away from the forums for a bit but was amazed at how much attention my little post got, and want to take the opportunity to respond.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222912383\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221483710093\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/6/2017 at 5:41 AM, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPeople always become more receptive when you call their work disgusting and amateurish.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPoint taken.\n\u003C/p\u003E\n\u003Cp\u003E\nYes, I was harsh and critical. \u00A0I just called it like I saw it. \u00A0It kind of smelled like a bolt-on to make things a little easier for a programmer (or at least, reduce code touchpoints) at the cost of making life a little more annoying for some of their users. \u00A0I could have been more tactful. \u00A0But hey, it did spark some discussion. \u00A0I\u0027ll take a free potshot from anyone offended.\n\u003C/p\u003E\n\u003Cp\u003E\nI love the community here, and the fact that people jumped in to call me out and defend the guy who, granted, was just trying to make things better.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222912475\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221483716655\u0022 data-ipsquote-userid=\u002293700\u0022 data-ipsquote-username=\u0022diomedea\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/6/2017 at 7:30 AM, diomedea said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThose comments in the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E seem to come from somebody who knows very little about IT.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere\u0027s the free potshot :-).\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222912475\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221483716655\u0022 data-ipsquote-userid=\u002293700\u0022 data-ipsquote-username=\u0022diomedea\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/6/2017 at 7:30 AM, diomedea said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe .loadmeta were introduced to avoid having the load the full sfs, those can be so many and massive loading them all to be able to present the selection of games at start brings to a very serious delay. Using a hash of those files instead is fast, and if that matches using the .loadmeta instead allows to save a lot of time and present the window to choose games a lot faster.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI get that, and I appreciate you providing some background. \u00A0I was just circumspect of the rationale that new files and hashing had to be introduced in order to achieve the performance boost. \u00A0Seems like it would be more polished (at least from a user perspective) to go with something along the lines of this:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003EPREVIEW \n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Put metadata required by Load dialog here, or\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    version \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1.2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E              \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// somewhere early in the GAME section (or even\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    vesselCount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E              \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// at/near end of file and read out in reverse).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    gameMode \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E CAREER            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    gameNull \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E             \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Create a lightweight LoadPreview() function\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    gameCompatible \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// that reads just this portion and bypasses the\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    funds \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1023227.4730251089\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E   \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// slow reading / parsing of the rest of the file.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    science \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E19\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                 \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// \u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    reputationPercent \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E52\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E       \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Does not require .loadmeta files or fancy\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    ongoingContracts \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E         \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// hashing.  Backward-compatible; old KSP loads\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// the SFS just fine and ignores the new section.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nGAME\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    version \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1.2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003ETitle\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EForFun\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ECAREER\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003EDescription\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ENo\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E description available\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    linkURL \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n    linkCaption \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n    \u003C/span\u003E\u003Cspan\u003EMode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E CAREER\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E....\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nIt keeps the pertinent information in the SFS where it arguably belongs, and if implemented correctly, has the handy side-effect of being slightly faster by eliminating the need to read all the bytes of the file to compute a hash. \u00A0Granted, it doesn\u0027t do much for legacy savefiles (and the existing upgrade mechanism would be of limited help there since IIRC it doesn\u0027t kick in until the player actually loads the savegame).\n\u003C/p\u003E\n\u003Cp\u003E\nDespite accusations to the contrary, I do have some humble experience in this field, and can venture an educated guess (rife with assumptions!) as to how it wound up being implemented the way it did. \u00A0e.g. New dev comes on board, doesn\u0027t want to dive too deep into existing, working \u003Cs\u003Espaghetti\u003C/s\u003E\u00A0code around the savefile format, maybe hits some other snags, comes up with this \u003Cs\u003Ehack\u003C/s\u003E approach instead which only requires wrapping a couple functions. \u00A0Time pressure, testing constraints, other priority issues to get to, yadda, yadda. \u00A0I concede it has merits - e.g. quick, easy and low-risk to implement; works right away on existing save files; no backward compatibility concerns or impact to third-party utilities, encapsulates changes and keeps them proximate to the Load dialog. \u00A0But with some thought and care I\u0027d bet the same ends could have been achieved minus the extra user-facing artifacts.\n\u003C/p\u003E\n\u003Cp\u003E\nI realize most users don\u0027t mind or care; fair enough. \u00A0But some of us do. \u00A0That\u0027s why I spoke up. \u00A0Sorry if I hurt someone\u0027s feelings - if the person who coded it is here I\u0027d be happy to apologize. \u00A0I don\u0027t mean to belittle their efforts, and I\u0027m grateful that they tackled the job of massively speeding up the lethargic load dialog.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222912724\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221483727078\u0022 data-ipsquote-userid=\u0022155878\u0022 data-ipsquote-username=\u0022suicidejunkie\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/6/2017 at 10:24 AM, suicidejunkie said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat I wonder:\n\u003C/p\u003E\n\u003Cp\u003E\nIs there any particular reason the meta data needs to be a separate file, rather than being a header before the rest of the .sfs in one file?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nExactly, that\u0027s what I suggested above and in the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222913127\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221483750899\u0022 data-ipsquote-userid=\u0022122674\u0022 data-ipsquote-username=\u0022Starman4308\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/6/2017 at 5:01 PM, Starman4308 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf the files were combined into one, then you\u0027d need some slightly complicated logic to ensure it only hashed the savefile contents, and not the meta-data, because otherwise the hash would never match (since you\u0027re re-writing it each time with the hash generated from a file with a modified hash generated from a file with a modified hash...).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m not advocating putting the hash in the SFS file, I\u0027m suggesting it be eliminated altogether.\n\u003C/p\u003E\n\u003Cp\u003E\n(I can see where you\u0027re going about stuffing the file with a partial-coverage hash to detect dirty data, if you start by limiting yourself to making code changes \u003Cem\u003Eonly\u003C/em\u003E on the Load dialog side of things. \u00A0But it just seems so much simpler to write out the needed information at the time of save).\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222912894\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221483736696\u0022 data-ipsquote-userid=\u0022125662\u0022 data-ipsquote-username=\u0022Snark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/6/2017 at 1:04 PM, Snark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs a professional software engineer myself, one word of caution I\u0027d suggest:\u00A0 don\u0027t just assume that a thing is the way it is because people are stupid or lazy, or that it \u0022obviously\u0022 should be a different way.\u00A0 Software developers, as a general rule, tend to be intelligent, hard-working people, and generally have reasons for what they do.\u00A0 Those reasons are often not apparent to consumers of the software.\u00A0 Doesn\u0027t mean one can\u0027t offer helpful suggestions, just... try not to leap to conclusions.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAh, Snark, always there with calming words of wisdom. \u00A0I hear what you\u0027re saying, and it\u0027s true: not working at Squad I\u0027m not privy to all the factors. \u00A0As someone who\u0027s released a lot of well-groomed code, I know you have fairly high standards in terms of polish and attention to detail.\n\u003C/p\u003E\n\u003Cp\u003E\nI might be overly sensitive as I\u2019ve seen how easy it is to let a piece of software fall to patchwork when you start to \u0022work around\u0022 existing code for fear of treading into it. \u00A0I love KSP and don\u0027t want to see that happen. \u00A0I hope the devs can appreciate my passion here. \u00A0I know they\u0027re really invested in the game (and that\u0027s part of what makes KSP awesome).\n\u003C/p\u003E\n\u003Cp\u003E\nThere were very likely practical challenges opaque to me. \u00A0And I\u0027m sure many folks will say I\u0027m nitpicking. \u00A0And maybe my inferences are ill-justified. \u00A0But none of that changes the fact the file clutter ain\u0027t pretty. \u00A0As someone who takes so much care in the pedigree of work they distribute, tell me you didn\u2019t cringe just a little bit when you saw it?\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222912894\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221483736696\u0022 data-ipsquote-userid=\u0022125662\u0022 data-ipsquote-username=\u0022Snark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/6/2017 at 1:04 PM, Snark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOne idea that does occur to me, though, that they could have done that would be less \u0022cluttery\u0022 to the player, without (I suspect) needing much of a code change:\u00A0 create a \u0022meta\u0022 sub-folder in the saves folder, and stick all the .loadmeta files down in there.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThat is a fantastic suggestion, and this compromise would 100% alleviate my complaints.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nShould I add it as a low priority\u00A0enhancement request on the bugtracker?\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2017-02-11T07:30:28Z","Content":"\n\u003Cp\u003E\nI question the use of a hash at all in this case. Putting this information in a header at the start of the sfs would\u0027ve been a lot better. When is the sfs hash going to be different than the saved one anyway, barring user intervention or corruption? There\u0027s no need to read the entirety of every sfs into memory every time MainMenu opens\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-02-11T07:30:48Z\u0022 title=\u002202/11/2017 07:30  AM\u0022 data-short=\u00227 yr\u0022\u003EFebruary 11, 2017\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2017-02-11T21:44:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222951635\u0022 data-ipsquote-contentid=\u0022154515\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221486798228\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI question the use of a hash at all in this case. Putting this information in a header at the start of the sfs would\u0027ve been a lot better. When is the sfs hash going to be different than the saved one anyway, barring user intervention or corruption? There\u0027s no need to read the entirety of every sfs into memory every time MainMenu opens\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere are quite a few people who\u00A0\u003Cem\u003Edo\u003C/em\u003E\u00A0manually edit their save files, including me. It\u0027s entirely reasonable to use a quick hash function to double-check that it hasn\u0027t been changed, so that the .loadmeta always reports valid information regardless of whether the user was mucking with it or not.\n\u003C/p\u003E\n\u003Cp\u003E\nGranted, I like Snark\u0027s suggestion of putting the .loadmeta (with the hash) in a subfolder, but eliminating the hash function breaks the existing functionality of \u0022always reports the state of the save, even if the user decided he\u0027d rather load a file slightly different from what was saved\u0022.\n\u003C/p\u003E\n"},{"CreatedByName":"p1t1o","CreatedById":74091,"CreatedDateTime":"2017-02-13T09:32:47Z","Content":"\n\u003Cp\u003E\nWell I mean....extra files in my save folder! ...Oh noes!\n\u003C/p\u003E\n\u003Cp\u003E\nSquad increases speed\u002Befficiency for (ok \u003Cstrong\u003E\u003Cspan style=\u0022font-size:20px;\u0022\u003E\u0022\u003C/span\u003E\u003C/strong\u003Ealmost\u003Cstrong\u003E\u003Cspan style=\u0022font-size:20px;\u0022\u003E\u0022\u003C/span\u003E\u003C/strong\u003E) no drawbacks -\u0026gt; gets\u00A0complaints\n\u003C/p\u003E\n\u003Cp\u003E\nCome on.\n\u003C/p\u003E\n"},{"CreatedByName":"Renegrade","CreatedById":96629,"CreatedDateTime":"2019-01-24T17:19:32Z","Content":"\n\u003Cp\u003E\nSorry for the \u0022massive\u0022 necro, but I felt it important to add this to the discussion here, as this thread is the top link in my google results about \u0022KSP .loadmeta\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nTo expand on Snarks\u0027 point about reasons-not-apparent-to-the-consumer, I\u0027d like to say it\u0027s likely that the way Unity (or the KSP codebase...or whatever is reading the save files) handles these .sfs files probably involves automatically parsing the whole thing on open in a manner that \u003Cem\u003Eisn\u0027t\u003C/em\u003E easy to override.\u00A0\u00A0 Putting the data in a separate file could very well then be a simple addition to the existing code, rather than having to rewrite a (potentially) large percentage of the load system.\n\u003C/p\u003E\n\u003Cp\u003E\nFurthermore, keep in mind that older versions of KSP won\u0027t expect the .sfs to start with a metadata stanza.\u00A0\u00A0 It might be possible to embed it in comments at the start, etc, but that is considered poor form as comments aren\u0027t supposed to be machine-readable...\n\u003C/p\u003E\n\u003Cp\u003E\nBTW, the hash is what brought me here (it\u0027s a binary md5sum if anybody else is curious).\u00A0 I wonder why they didn\u0027t use mtimes though instead of a hash.\u00A0 Wouldn\u0027t have to read the whole .sfs file at all then \u003Cimg alt=\u0022;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n"}]}