{"TopicId":55262,"ForumId":55,"TopicTitle":"Campaign Specific Mod Selection","CreatedByName":"Mazon Del","CreatedById":32991,"CreatedDateTime":"2013-12-05T04:17:33Z","PageNum":1,"Articles":[{"CreatedByName":"Mazon Del","CreatedById":32991,"CreatedDateTime":"2013-12-05T04:17:33Z","Content":"\n\u003Cp\u003EGreetings all!\u003C/p\u003E\u003Cp\u003EI know that an in game mod-selection system (for turning on/off which mods are active) has been suggested before, however I have thought of a new way of implementing it that may be of interest to some.\u003C/p\u003E\u003Cp\u003EBasically, when starting a new save (career/sandbox) you are presented with an additional button that provides a new window. This is the mod selection system. Which mods are active is a piece of information saved to your save. That way if you want a plain vanilla game, you can have one without the mod parts clogging up your system (while having the mods installed anyway), as well as allowing you to have specific mods and their parts active without necessarily having them all active.\u003C/p\u003E\u003Cp\u003EAssuming that this list can be edited while inside a save, you would of course need to provide warnings to players that when disabling mods (if allowed), the craft with suddenly missing parts will be deleted.\u003C/p\u003E\u003Cp\u003EWhat do you think?\u003C/p\u003E\n"},{"CreatedByName":"vexx32","CreatedById":12283,"CreatedDateTime":"2013-12-05T04:28:12Z","Content":"\n\u003Cp\u003EI think I\u0027ve seen this exact idea at least four times in the last month, although your bit about actually going and changing the mods assigned to a save is new. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe only issue I have with it is one of practicality -- I\u0027m not super familiar with Unity, but as far as I know, Unity just loads all assets on startup. In order to make a system like this work, the dev team would need to figure out how to bypass that and have the main menu appear \u003Cem\u003Ebefore\u003C/em\u003E the loading screens. It would also mean that the simple act of switching from one save to another essentially requires you to completely restart the game, unload/reload all assets, etc. I guess you could integrate the main menu into the launcher itself, but as I said, it becomes a bit weird when switching saves and so forth. There are ways to do it, but there\u0027s no real trouble-free route to go down, unfortunately.\u003C/p\u003E\n"},{"CreatedByName":"Mazon Del","CreatedById":32991,"CreatedDateTime":"2013-12-08T04:52:25Z","Content":"\n\u003Cp\u003EIt seems that the way you would do that is to load all the parts as per normal, but have a \u0027parts list\u0027 and/or \u0027feature\u0027 list file somewhere for each mod. The list has a header that gives the mod information, and then a list of all the parts and features provided by the mod. The game loads in this list and uses the header to generate the entry \u0022XYZ-Hyper-Engine-Mod-Lulz\u0022 and if you select \u0027no\u0027 on this one, then while it has already loaded those components, they are not accessible in your game.\u003C/p\u003E\n"},{"CreatedByName":"LethalDose","CreatedById":92657,"CreatedDateTime":"2013-12-08T06:12:51Z","Content":"\n\u003Cp\u003EActually, there\u0027s system already in place that could handle this issue, at least as far as parts are concerned.\u003C/p\u003E\u003Cp\u003ESo, currently, the game loads all resources available at start-up. When each game is loaded, at least in career mode, the game checks to see what tech is unlocked, and when in the VAB or SPH is opened, the game goes to the unlocked tech, and determines what parts are available, and then displays the available parts and hides unavailable parts.\u003C/p\u003E\u003Cp\u003ESo, there \u003Cem\u003Ecurrently\u003C/em\u003E exists a system, unique to each save, that tracks what parts are available, due to science. \u003C/p\u003E\u003Cp\u003EA similar system could be created, unique to each save, that tracks what parts are available, due to mods. I have to assume that there exists a database that keys parts to technologies, and a similar database would need to be created that would key parts to mods. An interface could be included for each save that would activate mods. This could be implemented as simply as a separate tech tree with mods represented as technologies that cost 0 science. Either these \u0022mod-pseudo-techs\u0022 could be de-selectable or locked \u0022on\u0022 after selection, like real techs. \u003C/p\u003E\u003Cp\u003EThis system doesn\u0027t address mods that don\u0027t add parts, but at least it\u0027s a start. \u003C/p\u003E\u003Cp\u003EIt also doesn\u0027t really save any memory or resources, since all the resources are still loaded at start-up, but it separates things for convenience in-game.\u003C/p\u003E\n"},{"CreatedByName":"Andon","CreatedById":21251,"CreatedDateTime":"2013-12-08T06:17:04Z","Content":"\n\u003Cp\u003EThe issue then becomes the non-part mods, such as Deadly Re-Entry or FAR. I know TAC Life Support has a toggle on a per-game basis so it can be done if the modders care to go to that extent, but I\u0027m not sure if there\u0027s a way to do those sorts of plugins on an on-the-fly basis\u003C/p\u003E\n"},{"CreatedByName":"vexx32","CreatedById":12283,"CreatedDateTime":"2013-12-08T06:33:28Z","Content":"\n\u003Cp\u003EAlso, then you\u0027ve potentially got a whole bunch of parts being loaded into memory and not used, which is a pretty bad way of handling something like this in my opinion.\u003C/p\u003E\n"},{"CreatedByName":"LethalDose","CreatedById":92657,"CreatedDateTime":"2013-12-08T07:35:44Z","Content":"\n\u003Cp\u003EIt\u0027s not a perfect solution, not by a long shot. I\u0027m simply pointing out one way it would be \u003Cem\u003Epossible\u003C/em\u003E to handle some mods different between saves without having to bypass pre-loading screens, but yeah, it\u0027s far from optimal.\u003C/p\u003E\u003Cp\u003EVexx, I gotta say its odd to hear you would say it\u0027s a bad way to handle it after you explicitly stated there\u0027s no way around the issue because of how Unity works.\u003C/p\u003E\n"},{"CreatedByName":"vexx32","CreatedById":12283,"CreatedDateTime":"2013-12-08T19:21:13Z","Content":"\n\u003Cp\u003EI never said there was no way around. I proposed a way around it. I\u0027m not familiar enough with Unity\u0027s code to know for sure, but it\u0027s also possible they can entirely re-code the loading sequence and find ways to load things on the fly. And even in the interim, a bad implementation is still an implementation nonetheless. xD\u003C/p\u003E\n"},{"CreatedByName":"Mazon Del","CreatedById":32991,"CreatedDateTime":"2013-12-09T05:20:53Z","Content":"\n\u003Cp\u003EWhen I said \u0022without having the mod parts clogging up your system\u0022 I meant less performance issues and more your part inventory.\u003C/p\u003E\u003Cp\u003EThough it could perhaps be useful for the game to only load the parts during save-load rather than at the very beginning. Some it might need for the opening page (the rocket stuck in the Mun-dirt perhaps? I don\u0027t know how that is handled.). It speeds up initial loading by pushing off the loading sequence until later.\u003C/p\u003E\u003Cp\u003EThe main point of this idea is that it lets you control which parts you have access to on a particular save (and ideally features, like re-entry) so it is easier to navigate the menus. You can also sort of do a version control with this. Have multiple versions of KAS, keep some around for the ones that need the old stuff, keep the new ones for new saves.\u003C/p\u003E\n"}]}