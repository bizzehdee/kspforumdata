{"TopicId":127133,"ForumId":55,"TopicTitle":"more options with action groups (inherit from context menus)","CreatedByName":"katateochi","CreatedById":35181,"CreatedDateTime":"2015-12-06T00:44:07Z","PageNum":1,"Articles":[{"CreatedByName":"katateochi","CreatedById":35181,"CreatedDateTime":"2015-12-06T00:44:07Z","Content":"\n\u003Cp\u003E\nThe options that some parts have for action groups seems rather limited (or even a bit arbitrary). \u00A0For example on an Elevon you can set action groups to toggle, extend and retract. \u00A0But on the context menu for the same Elevon there are quite a few more actions available; state toggle (which covers the action group options), deploy toggle (inverted or normal) and a toggle for pitch, roll and yaw. \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe action group options \u0022extend\u0022 and \u0022retract\u0022\u00A0are kind of pointless when you have \u0022toggle\u0022 and the really useful one to have as an action group (the deploy toggle) just isn\u0027t available as an action group option (the other toggle could be useful too with certain designs). In order to change deploy state\u00A0in flight you have to use context menus (which while coming into land at speed can be tricky!).\u003Cbr\u003E\nLooking at the small landing gear, while it has almost all context menu actions available as action group actions there is no action group option for toggling the brake (I don\u0027t mean applying the brakes, I mean enabling/disabling them on a particular wheel). \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo my main point is;\u003Cbr\u003E\nWe need more action group options available, in fact \u003Cstrong\u003Eeverything that can be done via context menus should be doable via action groups.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis leads me to my second point, (programmer hat on)\u00A0which is about the implementation logic for action groups and context menus;\u003Cbr\u003E\nThere is quite a difference on some parts between what\u0027s available on\u00A0context menus and what\u0027s available as action group options. \u00A0Obviously there is overlap, but there\u0027s a lot of difference too. \u00A0It seems to me that there must be two separate definitions for what\u0027s available\u00A0in action groups and what\u0027s available on context menus. \u00A0That\u0027s not very DRY (coder\u00A0term; Don\u0027t Repeat Yourself).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere shouldn\u0027t be two definitions, there should just be a definition of what appears in context menus and the options available in action groups should simply inherit that (with the exception of any sliders). Anything that exists as a togglable thing in a context menu should automatically be available as a togglable action group. \u00A0(A good, complete design should also have a option to set a flag to exclude a context menu toggle from action groups, but that should be a rare exception rather than the norm.)\n\u003C/p\u003E\n\u003Cp\u003E\nThe current implementation implies that\u00A0someone had to think about what\u0027s available in context menus vs what\u0027s available in action groups, and maybe they did think about all the insane things we may want to do. \u00A0By having action groups inheriting their options from the context menu options it means that it doesn\u0027t require anyone to think about what\u0027s available; the functionality of the part defines what\u0027s needed in the context menu and that automatically takes care of the action groups. The result is more functionality available via action groups, it fulfils the expectation\u00A0that anything you can do via context menu you can do via action groups\u00A0and the\u00A0implementation is simpler (should be less code) and less rule bound.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nAside; further enhancements to\u00A0action groups.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nI feel that action groups, while being a very important and useful feature, have been rather poorly implemented. \u00A0For one thing they should be a stageable object (object in the OO sense of the word). \u00A0By which I mean they should be able to behave like any other\u00A0stageable part so if you want you could drag an action group into the stage list so it\u0027s triggered when a certain stage is fired (but still be able to trigger it again with 0-9). \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere should be an infinite number of action groups (obviously we don\u0027t need a infinite number, but the implementation should scale. \u00A0Why build in limitations/rules when it\u0027s less code to have more functionality). \u00A0Yes there are only 0-9 keys available for them. \u00A0But \u002B and - are still free (IIRC). \u00A0So we could have \u0022pages\u0022 of action groups, each page with 10 actions and you switch which page of actions you\u0027re\u00A0on with \u002B and - (with some small indicator to single which page you\u0027re on). \u00A0You\u0027d have 0-9 on the first page set to the key actions you need, but then by changing page 0-9 now have a different set of actions. \u00A0ie: You could have a setup where your first page of action groups deals with in-flight actions, but then when you land (in say your mining rig) you could switch to page 2 and now you have your mining actions, when you want to fly again, switch back to page 1.\n\u003C/p\u003E\n\u003Cp\u003E\nI know there is a mod to enhance action groups (actually never tried it out), but I really feel this is an important aspect and the stock game should have a more polished implementation for this.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}