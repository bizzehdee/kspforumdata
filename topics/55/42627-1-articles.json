{"TopicId":42627,"ForumId":55,"TopicTitle":"Rotation Vectors","CreatedByName":"Burninate","CreatedById":76632,"CreatedDateTime":"2013-08-15T18:50:37Z","PageNum":1,"Articles":[{"CreatedByName":"Burninate","CreatedById":76632,"CreatedDateTime":"2013-08-15T18:50:37Z","Content":"\n\u003Cp\u003EWouldn\u0027t these be trivial to store, when a craft with SAS off unloads or fast forwards, and either load using modulo arithmetic on reload, or allow to continue simply rotating in unpowered-warp where momentum isn\u0027t calculated?\u003C/p\u003E\u003Cp\u003EIt doesn\u0027t add *much* to the game, but it removes what is basically a cheat - fast forward to freeze rotation - and makes it somewhat more realistic, at what seems like a trivial cost.\u003C/p\u003E\n"},{"CreatedByName":"Darndello","CreatedById":58137,"CreatedDateTime":"2013-08-15T19:01:04Z","Content":"\n\u003Cp\u003EAs much as i know it would cause lag to rotate something in such high speed. But adding a line of code to remember it\u0027s rotation and restart it after the end of timewarp. I have to Agree. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Burninate","CreatedById":76632,"CreatedDateTime":"2013-08-16T00:18:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Darndello\u0022 data-cite=\u0022Darndello\u0022\u003E\u003Cdiv\u003EAs much as i know it would cause lag to rotate something in such high speed. But adding a line of code to remember it\u0027s rotation and restart it after the end of timewarp. I have to Agree. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t see that this would cause any issue - the game can just poll the physics engine once per frame to check for rotation like it does now.\u003C/p\u003E\u003Cp\u003EI think it would look *confusing* watching a ship tumble at 10k RPM subjective time in a deep warp, but the current system doesn\u0027t really make sense.\u003C/p\u003E\n"},{"CreatedByName":"Yourself","CreatedById":4465,"CreatedDateTime":"2013-08-16T00:37:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Burninate\u0022 data-cite=\u0022Burninate\u0022\u003E\u003Cdiv\u003EI don\u0027t see that this would cause any issue - the game can just poll the physics engine once per frame to check for rotation like it does now.\u003Cp\u003EI think it would look *confusing* watching a ship tumble at 10k RPM subjective time in a deep warp, but the current system doesn\u0027t really make sense.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIndeed, basically you\u0027re asking that rotation be put on rails. I don\u0027t see any problem with that. In order to rotate something you don\u0027t need to simulate all the orientations in between*, so there\u0027s not a huge computational cost to doing this.\u003C/p\u003E\u003Cp\u003E*Technically there could be some trickiness dealing with torque-free precession.\u003C/p\u003E\n"},{"CreatedByName":"jebster","CreatedById":77889,"CreatedDateTime":"2013-08-16T00:57:52Z","Content":"\n\u003Cp\u003EI think that you shouldn\u0027t be able to timewarp while your ship is rotating quickly. Just as \u0022can\u0027t timewarp while ship is under acceleration\u0022 you should get a message \u0022can\u0027t timewarp while rotating.\u0022 You\u0027d have to fix your rotation so that you\u0027re hardly moving, and only then can you timewarp. I admit that the instant-halt rotation timewarp exploit has made flying much easier than it should be. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"NGTOne","CreatedById":55972,"CreatedDateTime":"2013-08-16T01:35:23Z","Content":"\n\u003Cp\u003EI think the real issue is that the rotation for each part is calculated separately - i.e. your spacecraft doesn\u0027t rotate as a rigid body (this is unnoticeable for small capsules, but incredibly prominent for larger objects with large cantilevered components - hence the long-lamented \u0022wobbly rocket problem\u0022). Timewarp puts the spacecraft on rails, and models it as an ideally rigid body (and snaps all parts back to their original positions as long as they haven\u0027t broken off). Any model for timewarp rotation would have to take into account either the nonrigid behaviour of the spacecraft (FYI: I just described physwarp, which does this simply by increasing the forces applied in some fashion based on warp factor, sometimes with unintended results because the strengths of the part joints aren\u0027t multiplied to compensate), or some way to translate the nonrigid rotation of the non-warped craft to rigid rotation.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-16T01:37:51Z\u0022 title=\u002208/16/2013 01:37  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 16, 2013\u003C/time\u003E by NGTOne\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ernest3.14","CreatedById":75412,"CreatedDateTime":"2013-08-16T03:51:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NGTOne\u0022 data-cite=\u0022NGTOne\u0022\u003E\u003Cdiv\u003EAny model for timewarp rotation would have to take into account either the nonrigid behaviour of the spacecraft [...] or some way to translate the nonrigid rotation of the non-warped craft to rigid rotation.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow about calculating the center of mass and the net rotation, storing those and doing some math? Seems like a reasonable approximation, especially if your craft hasn\u0027t fallen apart due to wobbling already. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 alt=\u0022:sticktongue:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Yourself","CreatedById":4465,"CreatedDateTime":"2013-08-16T03:53:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NGTOne\u0022 data-cite=\u0022NGTOne\u0022\u003E\u003Cdiv\u003EI think the real issue is that the rotation for each part is calculated separately - i.e. your spacecraft doesn\u0027t rotate as a rigid body (this is unnoticeable for small capsules, but incredibly prominent for larger objects with large cantilevered components - hence the long-lamented \u0022wobbly rocket problem\u0022). Timewarp puts the spacecraft on rails, and models it as an ideally rigid body (and snaps all parts back to their original positions as long as they haven\u0027t broken off). Any model for timewarp rotation would have to take into account either the nonrigid behaviour of the spacecraft (FYI: I just described physwarp, which does this simply by increasing the forces applied in some fashion based on warp factor, sometimes with unintended results because the strengths of the part joints aren\u0027t multiplied to compensate), or some way to translate the nonrigid rotation of the non-warped craft to rigid rotation.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOr when going into warp compute the total angular momentum of the craft and let it rotate as a rigid body. Warp doesn\u0027t have to be an all or nothing thing where we absolutely must preserve all physical behavior (because it already doesn\u0027t do this and it can\u0027t). In any case having the craft continue rotating as if it were a rigid body doesn\u0027t really seem like it\u0027s that game-breaking. Especially considering right now that warp is a really cheap way to reliably cancel all rotation of your craft period.\u003C/p\u003E\u003Cp\u003EI suppose if you were absolutely hell-bent on preserving the \u0022wobble\u0022 modes through time-warp you could do a simplified vibrational analysis of the craft and record the first couple of vibrational modes in addition to the rotation. Done right it turns into solving an eigenvalue problem, but it can actually only be done once for a particular craft (well, once for each stage). Not that any part of that is particularly simple or easy, but it is at least technically possible.\u003C/p\u003E\n"},{"CreatedByName":"NGTOne","CreatedById":55972,"CreatedDateTime":"2013-08-16T03:56:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ernest3.14\u0022 data-cite=\u0022Ernest3.14\u0022\u003E\u003Cdiv\u003EHow about calculating the center of mass and the net rotation, storing those and doing some math? Seems like a reasonable approximation, especially if your craft hasn\u0027t fallen apart due to wobbling already. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 alt=\u0022:sticktongue:\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u0022Net rotation\u0022 is a somewhat vague term, and what\u0027s more, there are a number of different approximation models that COULD be used, each with different results. For instance,\u003C/p\u003E\u003Cp\u003E1. The rotation of the part closest to/farthest from CoM, ignoring the rotation of all other parts.\u003C/p\u003E\u003Cp\u003E2. The individual angular rotation of all parts, divided by distance from CoM and averaged. May yield strange results due to how KSP handles distances.\u003C/p\u003E\u003Cp\u003E3. The \u0022navball rotation\u0022 - i.e. the rotation of the currently selected command part, again ignoring the rotation of all other parts.\u003C/p\u003E\u003Cp\u003EThese are just a few that I can think of off the top of my head, there are undoubtedly others.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEDIT:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ENinja\u0027d.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Yourself\u0022 data-cite=\u0022Yourself\u0022\u003E\u003Cdiv\u003EOr when going into warp compute the total angular momentum of the craft and let it rotate as a rigid body. Warp doesn\u0027t have to be an all or nothing thing where we absolutely must preserve all physical behavior (because it already doesn\u0027t do this and it can\u0027t). In any case having the craft continue rotating as if it were a rigid body doesn\u0027t really seem like it\u0027s that game-breaking. Especially considering right now that warp is a really cheap way to reliably cancel all rotation of your craft period.\u003Cp\u003EI suppose if you were absolutely hell-bent on preserving the \u0022wobble\u0022 modes through time-warp you could do a simplified vibrational analysis of the craft and record the first couple of vibrational modes in addition to the rotation. Done right it turns into solving an eigenvalue problem, but it can actually only be done once for a particular craft (well, once for each stage). Not that any part of that is particularly simple or easy, but it is at least technically possible.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe real question is, how computationally expensive is it, especially given Unity\u0027s limited ability to cope with the physics problems that KSP as it stands currently presents?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-16T04:00:44Z\u0022 title=\u002208/16/2013 04:00  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 16, 2013\u003C/time\u003E by NGTOne\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Eric S","CreatedById":57117,"CreatedDateTime":"2013-08-16T04:06:27Z","Content":"\n\u003Cp\u003EActually, one of the devs mentioned this back the weekend before 0.21 came out, that they intended to do a compromise system that depending on the rotational velocity, would either save the rotation, or kill it, during warp.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-08-16T21:02:37Z","Content":"\n\u003Cp\u003EYeah constant rotational velocity on rails is trivial to calculate. Plug time=t into three formulas that are simply:\u003C/p\u003E\u003Cp\u003E(A*t) mod 2pi\u003C/p\u003E\u003Cp\u003E(B*t) mod 2pi\u003C/p\u003E\u003Cp\u003E(C*t) mod 2pi\u003C/p\u003E\u003Cp\u003Ewhere A,B,and C are your constant rotational velocities you stored for the 3 axes of rotation given in radians. (If you do it in degrees instead, then change \u0022mod 2pi\u0022 into \u0022mod 360\u0022.)\u003C/p\u003E\u003Cp\u003EAs for the comment about it being a cheat to use time warp to kill rotation - I\u0027d agree only if the rotation wasn\u0027t buggy in the first place with mysterious sources of rotational acceleration coming from nowhere when you accidentally had a part clipping somewhere, so I often use time warp as a workaround for this game simulation error.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-08-16T21:30:38Z","Content":"\n\u003Cp\u003Ejust a nitpick, you would probibly do this as a quaternion operation, but thats pretty much it. no sane game programmer uses eulers internally.\u003C/p\u003E\n"},{"CreatedByName":"technicalfool","CreatedById":70430,"CreatedDateTime":"2013-08-17T00:12:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nuke\u0022 data-cite=\u0022Nuke\u0022\u003E\u003Cdiv\u003Ejust a nitpick, you would probibly do this as a quaternion operation, but thats pretty much it. no sane game programmer uses eulers internally.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, they do if they don\u0027t need massive accuracy (Euler is a lot simpler than RK4) or if they\u0027re Kerbal developers who feel like invoking the Kraken for a laugh.\u003C/p\u003E\n"},{"CreatedByName":"Zeroignite","CreatedById":1377,"CreatedDateTime":"2013-08-17T00:51:47Z","Content":"\n\u003Cp\u003Eiirc, KSP does use quaternions for physics calculations.\u003C/p\u003E\n"},{"CreatedByName":"Yourself","CreatedById":4465,"CreatedDateTime":"2013-08-17T01:42:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NGTOne\u0022 data-cite=\u0022NGTOne\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe real question is, how computationally expensive is it, especially given Unity\u0027s limited ability to cope with the physics problems that KSP as it stands currently presents?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot as much as you might think, especially since it can be effectively pre-computed for a given set of parts. Essentially you end up computing the eigenvectors of a given linear system. And you wouldn\u0027t even really be interested in all the eigenvectors, just the ones with the largest eigenvalues (because they\u0027d have the most pronounced effect on the dynamics). There\u0027s many algorithms to do this, but they\u0027re not necessarily easy to implement (and that\u0027s ignoring the hard part of actually coming up with the linear system in the first place, which requires a bit of ugly mathematical analysis). Since we\u0027d only be interested in a few of the eigenvectors, iterative approaches would likely be the easiest to implement and the fastest to execute.\u003C/p\u003E\u003Cp\u003EThat said I still think this would be a stupid idea. Not for performance reasons (I\u0027ve done quite a bit of linear algebra in C# .NET and you can get away with some surprisingly hairy calculations in real time), but mostly because the mathematics behind it is unnecessarily complicated and adds very little gameplay value.\u003C/p\u003E\n"},{"CreatedByName":"King Arthur","CreatedById":73849,"CreatedDateTime":"2013-08-17T01:57:36Z","Content":"\n\u003Cp\u003EUntil there is an alternative reliable way to immediately cancel an inpending RUD, kill spin forces resulting from phantom forces/rounding errors, or soundly killing rotation manually (SAS and MJ\u0027s Kill Rot are both crude at killing rotation) I can\u0027t say I\u0027d like this to be implemented.\u003C/p\u003E\u003Cp\u003EAlso, regarding time warping to kill rotation being a \u0022cheat\u0022: The only person you\u0027re cheating is yourself.\u003C/p\u003E\n"},{"CreatedByName":"Psycix","CreatedById":76916,"CreatedDateTime":"2013-08-17T15:06:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022King Arthur\u0022 data-cite=\u0022King Arthur\u0022\u003E\u003Cdiv\u003EAlso, regarding time warping to kill rotation being a \u0022cheat\u0022: The only person you\u0027re cheating is yourself.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s simply too accessible not to use.\u003C/p\u003E\u003Cp\u003EAlso, thanks for making me feel bad about myself... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Yourself","CreatedById":4465,"CreatedDateTime":"2013-08-17T17:19:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EIt\u0027s simply too accessible not to use.\u003Cp\u003EAlso, thanks for making me feel bad about myself... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDon\u0027t feel bad, it\u0027s still a single player sandbox, so there isn\u0027t really any cheating at all. Play how you want.\u003C/p\u003E\u003Cp\u003EI mean, really, it\u0027s a single player sandbox, of course you\u0027re only \u0022cheating yourself\u0022 there\u0027s no one else to cheat!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-08-17T20:31:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EIt\u0027s simply too accessible not to use.\u003Cp\u003EAlso, thanks for making me feel bad about myself... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t use it unless the rotation itself is caused by a bug in the first place, so in that case it\u0027s not cheating it\u0027s a bug workaround. (There\u0027s a bug that causes crafts to have rotational accelerations applied to them if the VAB clipped any parts into each other without you noticing. And once you have clipped parts it\u0027s nearly impossible to find them since one part ends up hiding the other from view.)\u003C/p\u003E\n"},{"CreatedByName":"Burninate","CreatedById":76632,"CreatedDateTime":"2013-08-23T22:26:15Z","Content":"\n\u003Cp\u003EIt\u0027s mathematically simple, but...\u003C/p\u003E\u003Cp\u003EA thought on the more complex problem of \u003Cstrong\u003Ean interface\u003C/strong\u003E that makes it obvious what\u0027s going on, without presenting a grey blur:\u003C/p\u003E\u003Cp\u003EOn warp, a 95% transparent grey ball appears around the CoM. It has radius equivalent to the size of the craft, with three dashed hemispherical circumference lines, a \u0027current heading\u0027 indicator in white on the surface of the sphere, and the traditional red-green-blue unit vectors indicating dimensions relative to current heading, emerging from the CoM. This ball does not obscure the craft, and can rotate freely at whatever the appropriate angular velocity is, without affecting the camera. On exit warp, the craft aligns to the ball\u0027s heading and orientation, and angular velocity.\u003C/p\u003E\n"}]}