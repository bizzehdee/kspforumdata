{"TopicId":42808,"ForumId":55,"TopicTitle":"Extend ModuleDockingNode with options for rotational alignment / increments","CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-08-17T02:01:58Z","PageNum":1,"Articles":[{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-08-17T02:01:58Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EPremise\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAt present, docking ports in KSP allow two vessels to connect together at any relative angle about their combined docking axes, in contrast to real life docking ports where rotational alignment is limited to some specific values (e.g. 120\u00C3\u201A\u00C2\u00B0 for APAS, 90\u00C3\u201A\u00C2\u00B0 for CBM). \u003C/p\u003E\u003Cp\u003EWhile this may be relatively benign for very small stations or visiting space craft, cumulative rotational errors may result in difficulty in constructing larger or more complex designs, such as rings, closed loops or parallel-docked sections.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAnalysis of current solutions\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E[TABLE=class: grid, width: 1200]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD=align: center]\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003EMethod\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD=align: center]\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003EAdvantages\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD=align: center]\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003EDisadvantages\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]Using bi/tri/quad adapters and multiple docking ports[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EMagnetic force from adjacent ports (usually) helps to automatically \u0022snap\u0022 rotational alignment afterrough rotational alignment via user input \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAble to restrict rotational alignments in angular increments of 180\u00C3\u201A\u00C2\u00B0 (bi), 120\u00C3\u201A\u00C2\u00B0 (tri) and 90\u00C3\u201A\u00C2\u00B0 (quad) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERotational errors do not accumulate \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EIncreased part count for each docking location \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDue to KSP\u0027s tree structure for vessels, only one docking connection is sufficient for current ModuleDockingNode system to conclude latching, possibly leaving other docking ports \u0022floating\u0022 \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EVisually unrealistic, especially in terms of crew transfer - the adapters are rather flat and with the offset between ports, it is rather difficult to imagine Kerbals squeezing through them \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]Using additional parts on both vessels as \u003C/p\u003E\u003Cp\u003Ecrosshairs / alignment markers (visual only)[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EFew(er) additional parts required \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EStock Communotron 16 whiplash antenna is a favourite due to its small size and thin profile \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EIncreased part count for each docking location \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EFeedback is visual only - no physical \u0022snapping\u0022 \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EManual control required for actual alignment \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAccuracy dependent on placement of these guides - minute angular errors may accumulate as more segments are docked along the same axis \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]Using additional parts on both vessels as mechanical alignment guides (part collisions)[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EFew(er) additional parts required \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EPhysical collision forces helps to automatically \u0022snap\u0022 rotational alignment after rough rotational alignment via user input \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDepending on user design, able to restrict rotational alignments to arbitary angles or increments \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EIncreased part count for each docking location \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECertain designs may not have room for these mechanical guides \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAccuracy dependent on placement of these guides - minute angular errors may accumulate as more segments are docked along the same axis \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]Romfarer\u0027s Lazor Docking Cam[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENo additional parts required - plugin only \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EFirst-person POV from docking port camera \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERotational error given as numerical reading \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EFeedback is visual only - no physical \u0022snapping\u0022 \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EManual control required for actual alignment \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAccuracy dependent on readout - minute angular errors may accumulate as more segments are docked along the same axis \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]NavyFish\u0027s Docking Alignment Indicator[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENo additional parts required - plugin only \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERotational error indicated graphically \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EFeedback is visual only - no physical \u0022snapping\u0022 \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EManual control required for actual alignment \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAccuracy dependent on readout - minute angular errors may accumulate as more segments are docked along the same axis \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]Docking ports with built-in guidance collider fins\u003C/p\u003E\u003Cp\u003E(e.g. Semni\u0027s JARFR THSS Tri-Hex Docking Ports)[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENo additional parts required \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EUnreliable - once ports are in range of magnetic latching, the alignment colliders are ignored \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]Docking ports with multiple ModuleDockingNodes defined (e.g. Alskari\u0027s HSH Docking Ports)[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENo additional parts required \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENon-intuitive - multiple \u0022Control from here\u0022 and \u0022Set as Target\u0022 entries appear on controlled and target ports respectively, potentially leading to a guessing game to match combinations \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EUnreliable - as soon as one node is in range of magnetic latching, the other alignment nodes are ignored \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]sarbian\u0027s MechJeb 2 DLL fork with \u003C/p\u003E\u003Cp\u003ERotational Alignment to Target option[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENo additional parts required - plugin only \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAllows user to set any arbitrary angular value for rotational alignment, which the craft will automatically maintain to a high degree of accuracy \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EVery low probability of accumulated angular errors \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAvailable for both automated and manual docking (latter case involves using Smart A.S.S. to aim at target docking port) \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[TD]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EMechJeb is generally considered controversial\u003Cbr\u003E(I personally swear by it, but not everyone does or will) \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[/TABLE]\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EProposed Solution\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI would like to suggest extending the ModuleDockingNode Part Module with optional variables for enforcing roll alignment and permissible angular increments:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = ModuleDockingNode\u003Cbr\u003E    referenceAttachNode = top\u003Cbr\u003E    nodeType = size1\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    [B]// Relative roll alignment for docking in degrees (0~359)\u003Cbr\u003E     // If specified, the controlled vessel will align and maintain its docking port to this rotational offset\u003Cbr\u003E     // If not specified, defaults to false, which allows docking without forcing any alignment (as is currently the case[/B])\u003Cbr\u003E[B]    rollAlignAngle = false\u003Cbr\u003E\u003Cbr\u003E[/B]    [B]// Valid roll alignment increments for docking in degrees (0~180)\u003Cbr\u003E     // If specified, this adds additional valid angles to the target docking ports by this increment\u003Cbr\u003E     // If not specified, defaults to 0, which [/B][B]means only the value specified in [/B][B]rollAlignAngle[/B][B] is considered a valid docking angle\u003Cbr\u003E    rollAlignIncrementAngle = 0[/B]\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf SAS is enabled, then the vessel will attempt to orient its docking port to the closest roll alignment angle available. This can be overridden and forced to snap at other defined angles if given a strong enough user input (e.g. via RCS).\u003C/p\u003E\u003Cp\u003EAdditionally, this roll alignment capability may be toggled on/off individually for each docking port via a new context menu GUI, \u0022Enable Angle Snap / Disable Angle Snap\u0022.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EExamples\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E1) Stock Clamp-o-tron docking ports\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = ModuleDockingNode\u003Cbr\u003E    referenceAttachNode = top\u003Cbr\u003E    nodeType = size1\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESince neither of the additional parameters were specified, the Clamp-o-trons will dock freely at any angle about their common docking axis.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E2) Non-stock docking port where only one orientation is permitted\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = ModuleDockingNode\u003Cbr\u003E    referenceAttachNode = top\u003Cbr\u003E    nodeType = size1\u003Cbr\u003E[B]   rollAlignAngle = 12.5[/B][B]\u003Cbr\u003E    rollAlignIncrementAngle = 0[/B]\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIn this case, the only valid roll orientation for docking is at 12.5\u00C3\u201A\u00C2\u00B0. Docking vessels will attempt to maintain this alignment by countering any user input in the rotation axis.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E3) Non-stock docking port where a cardinal number of orientations are permitted\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = ModuleDockingNode\u003Cbr\u003E    referenceAttachNode = top\u003Cbr\u003E    nodeType = size1\u003Cbr\u003E[B]   rollAlignAngle = 0[/B][B]\u003Cbr\u003E    rollAlignIncrementAngle = 90[/B]\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIn this case, the only valid roll orientations for docking are at 0\u00C3\u201A\u00C2\u00B0, 90\u00C3\u201A\u00C2\u00B0, 180\u00C3\u201A\u00C2\u00B0 and 270\u00C3\u201A\u00C2\u00B0. Docking vessels will attempt to snap to the alignment closest to the current roll orientation of the craft, and with sufficient roll input from the user, the port can be snapped to any of these four values.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E4) Non-stock docking port where a cardinal number of orientations are permitted, plus an offset\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = ModuleDockingNode\u003Cbr\u003E    referenceAttachNode = top\u003Cbr\u003E    nodeType = size1\u003Cbr\u003E[B]   rollAlignAngle = 45[/B][B]\u003Cbr\u003E    rollAlignIncrementAngle = 90[/B]\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIn this case, the only valid roll orientations for docking are at 45\u00C3\u201A\u00C2\u00B0, 135\u00C3\u201A\u00C2\u00B0, 225\u00C3\u201A\u00C2\u00B0 and 315\u00C3\u201A\u00C2\u00B0. Docking vessels will attempt to snap to the alignment closest to the current roll orientation of the craft, and with sufficient roll input from the user, the port can be snapped to any of these four values.\u003C/p\u003E\u003Cp\u003EThoughts?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-17T02:39:03Z\u0022 title=\u002208/17/2013 02:39  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 17, 2013\u003C/time\u003E by sumghai\u003C/strong\u003E\n\u003Cbr\u003ESpelling errors\n\u003C/span\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-08-17T02:25:23Z","Content":"\n\u003Cp\u003EI support this. Currently ModuleDockingNode is the bare minimum of working and as creative as we have been, docking ports only work well for flat circular matings. I don\u0027t think we need to involve SAS/ASAS in this, so long as the port is prohibited from resolving when it\u0027s outside of alignment.\u003C/p\u003E\n"},{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-08-18T00:09:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003EI don\u0027t think we need to involve SAS/ASAS in this, so long as the port is prohibited from resolving when it\u0027s outside of alignment.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, I guess that was rather a poor choice of words on my part. But yes, the inclusion of the optional parameters should prevent resolving of the docking sequence when outside of the specified values, or at least actively nudge vessel rotation to ensure the correct final orientation of the docking port.\u003C/p\u003E\n"},{"CreatedByName":"Fox62","CreatedById":23673,"CreatedDateTime":"2013-08-21T00:28:33Z","Content":"\n\u003Cp\u003EThis would be more than useful for orbital docking construction.\u003C/p\u003E\n"},{"CreatedByName":"King Arthur","CreatedById":73849,"CreatedDateTime":"2013-08-21T00:42:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sumghai\u0022 data-cite=\u0022sumghai\u0022\u003E\u003Cdiv\u003EWell, that\u0027s interesting - surely there are other folks who would like to see self-aligning docking ports?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPerhaps it\u0027s something that\u0027s so much in demand there\u0027s no pressing need for more debate?\u003C/p\u003E\u003Cp\u003EEither way, I would love to see this realized so my docking-OCD will be slain once and for all.\u003C/p\u003E\n"},{"CreatedByName":"boomerdog2000","CreatedById":57643,"CreatedDateTime":"2013-08-21T13:28:56Z","Content":"\n\u003Cp\u003ESupported. I couldn\u0027t build my interplanetary ship because the drive pods docked slightly sideways, even with 2 docking ports for alignment.\u003C/p\u003E\n"},{"CreatedByName":"Prime flux","CreatedById":57347,"CreatedDateTime":"2013-08-21T15:14:13Z","Content":"\n\u003Cp\u003E\u002B1 indeed. perhaps the dockingport should be more like the APAS and the new international docking standard, with a soft catching and a hard catch. Meaning that it first gets a soft catch with an extended docking part. When the soft docking is done the part retract to a \u0022hard catch\u0022\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/wikipedia/commons/2/25/Low-Impact_Docking_System.jpg\u0022 alt=\u0022Low-Impact_Docking_System.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/International_Low_Impact_Docking_System_or_NASA_Docking_System.png/800px-International_Low_Impact_Docking_System_or_NASA_Docking_System.png\u0022 alt=\u0022800px-International_Low_Impact_Docking_System_or_NASA_Docking_System.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EMy understanding is that when the docking port is \u0022active\u0022 the part is extended and can be steered in both position and rotation to compensate for small miss alignment during the docking. When the system retracts to a \u0022hard catch\u0022 the 2 docked craft is perfectly aligned and positioned.\u003C/p\u003E\n"},{"CreatedByName":"Rascal Nag","CreatedById":9451,"CreatedDateTime":"2013-08-21T17:26:13Z","Content":"\n\u003Cp\u003EI\u0027m all for a realistic limit to alignment errors, but I don\u0027t think the alignment should be automated (outside of trained crewmen docking as a part of the eventual crew tasks feature). Instead, a true docking camera and docking MFD would be my wish. The camera would help for obvious reasons, and the MFD could provide simple visuals of certain properties such as alignment, distance, closing speed, etc.\u003C/p\u003E\u003Cp\u003EHere\u0027s the Orbiter 2010 docking MFD, for example:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://orbitertutorials.zxq.net/MFD_Docking.JPG\u0022 alt=\u0022MFD_Docking.JPG\u0022\u003E\u003C/p\u003E\u003Cp\u003ELooks complicated, right? Nope! DST obviously means distance. It gives a numerical value in 10^x meters at the top and a bar representation of the same value below it, starting at 10^3 meters (1km) and going down to 10^-1 meters (1 tenth of a meter, or 10 centimeters). CVEL means Closing velocity in 10^x meters per second. It also has the numerical value and associated bar, which also runs from 10^3 down to 10^-1 m/s. \u003C/p\u003E\u003Cp\u003ENow, about that circle. First, the center of the circle is where you\u0027re headed. The green cross is where the target is relative to this. It goes hand in hand with the yellow arrow and TVEL (top left). The yellow arrow gives you your vector in the plane perpendicular to approach plane. But from a purely visual point of view, the direction in which the yellow arrow points is the direction in which the center of the circle will move relative to the green cross (so in this case, we would continue moving the center of the circle up and to the left, or away from the target. This means we would shoot past the target to the top right if we did not make any corrections). The TVEL reading, or tangential velocity, simply gives you the magnitude of that vector (the velocity which the arrow represents). You should modify your TVEL so that the arrow points towards the green cross until it is centered, and then bring your TVEL down to zero so it stays there. Also provided is another scale along the concentric circles to give you a general idea of the speed a certain length of the arrow represents (Yellow numbers in bottom half of the circle. innermost circle is 10^-1 m/s, goes out to the outermost being 10^2 m/s). A similar scale is present in green; this represents your distance. It goes with the green circle, which gets smaller as you close in on the target. Each concentric circle has an associated distance which it represents on a logarithmic scale (10^x m). If your green cross is outside of this circle, you are outside of your \u0022approach cone\u0022 and the TOFS (tangential offset - in the top left) will show a reading higher than 1. The circle will also become red. To visualize this better, think of the circle as not only a circle but as a hollow cone looked at from the bottom, with the green circle representing your current level in the cone. As you descend into the cone (get closer to the target), the circle will shrink since the cone shrinks as you approach the point. If the green cross is not centered, then as you get closer, it will eventually fall out of cone, meaning your target fell out of the cone. TOFS value is a numerical value that represents whether your target is in the cone or not. Values less than 1 tell you it is inside the cone.\u003C/p\u003E\u003Cp\u003ENext, the red cross is where you\u0027re docking port is pointing relative to where you\u0027re headed. After you align the green cross to the center, you should start aligning the red cross to the center by rotating your ship accordingly. There are degree readings (10 degrees and 20 degrees here) to describe at what angle your docking port is out of alignment with your approach path. If you are well aligned, the cross turns white (beware - as you get closer, any small misalignment becomes magnified, so adjust the whole way in). \u003C/p\u003E\u003Cp\u003EFinally, the red arrow indicates rotational alignment with the two docking ports. We would use Q and E to try and rotate this to the top of the circle.\u003C/p\u003E\u003Cp\u003EAfter you\u0027ve successfully lined up these crosses and brought the red arrow to the top of the circle, you can go back to the easy-peasy DST and CVEL readings to make sure you approach at safe speeds.\u003C/p\u003E\u003Cp\u003ESee? Not so bad. And anything in KSP would probably be simpler. I think a version without the logarithmic scales and a purely numerical DST and CVEL reading would be perfect.\u003C/p\u003E\n"},{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-08-22T00:06:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Prime flux\u0022 data-cite=\u0022Prime flux\u0022\u003E\u003Cdiv\u003E\u002B1 indeed. perhaps the dockingport should be more like the APAS and the new international docking standard, with a soft catching and a hard catch. Meaning that it first gets a soft catch with an extended docking part. When the soft docking is done the part retract to a \u0022hard catch\u0022\u003Cp\u003E-snip-\u003C/p\u003E\u003Cp\u003EMy understanding is that when the docking port is \u0022active\u0022 the part is extended and can be steered in both position and rotation to compensate for small miss alignment during the docking. When the system retracts to a \u0022hard catch\u0022 the 2 docked craft is perfectly aligned and positioned.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EInteresting. That would probably require an additional parameter for specifying the animation between the extended active and retracted passive position, though.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rascal Nag\u0022 data-cite=\u0022Rascal Nag\u0022\u003E\u003Cdiv\u003EI\u0027m all for a realistic limit to alignment errors, but I don\u0027t think the alignment should be automated (outside of trained crewmen docking as a part of the eventual crew tasks feature). Instead, a true docking camera and docking MFD would be my wish. The camera would help for obvious reasons, and the MFD could provide simple visuals of certain properties such as alignment, distance, closing speed, etc.\u003Cp\u003E-snip-\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBear in mind that my original request was for a docking port that mechanically limits allowable docking orientations, rather than visual-only alignment indicators like those already available in various mods.\u003C/p\u003E\n"},{"CreatedByName":"Rascal Nag","CreatedById":9451,"CreatedDateTime":"2013-08-22T00:16:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sumghai\u0022 data-cite=\u0022sumghai\u0022\u003E\u003Cdiv\u003EBear in mind that my original request was for a docking port that mechanically limits allowable docking orientations, rather than visual-only alignment indicators like those already available in various mods.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know. I was just saying that I was against the solutions in the chart that employed automation (I\u0027m personally against mechjeb), so suggested we get a robust MFD instead, and alignment would be manual. If it isn\u0027t aligned right it simply will not dock; if it is within a margin of error, it snaps into zero-misalignment position.\u003C/p\u003E\n"},{"CreatedByName":"Prime flux","CreatedById":57347,"CreatedDateTime":"2013-08-22T00:36:01Z","Content":"\n\u003Cp\u003EIf you want to read more about the new international dockingstandard check out this document \u003Ca href=\u0022http://www.internationaldockingstandard.com/download/IDSS_IDD_RevA_Final_051311.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.internationaldockingstandard.com/download/IDSS_IDD_RevA_Final_051311.pdf\u003C/a\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EInitial Contact Conditions\u003Cp\u003ELateral (radial) misalignment 0.11m\u003C/p\u003E\u003Cp\u003EPitch/Yaw misalignment 5.0 deg (vector sum of pitch/yaw) \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhich is not much movement tbh, I would say it is similar to the current \u0022magnetic\u0022 docking thingy.\u003C/p\u003E\u003Cp\u003EAlso this clip of the shuttle docking with ISS using APAS-95 can be of interested \u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/rf5MlQYbsCc?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-22T00:39:26Z\u0022 title=\u002208/22/2013 12:39  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 22, 2013\u003C/time\u003E by Prime flux\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Prime flux","CreatedById":57347,"CreatedDateTime":"2013-08-22T00:52:00Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/43901-Plugin-0-21-Docking-Port-Alignment-Indicator-%28Release-1-0%29\u0022 rel=\u0022external nofollow\u0022\u003EThe Docking Port alignment indicator\u003C/a\u003E have most of this functionality\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rascal Nag\u0022 data-cite=\u0022Rascal Nag\u0022\u003E\u003Cdiv\u003EI\u0027m all for a realistic limit to alignment errors, but I don\u0027t think the alignment should be automated (outside of trained crewmen docking as a part of the eventual crew tasks feature). Instead, a true docking camera and docking MFD would be my wish. The camera would help for obvious reasons, and the MFD could provide simple visuals of certain properties such as alignment, distance, closing speed, etc.\u003Cp\u003EHere\u0027s the Orbiter 2010 docking MFD, for example:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://orbitertutorials.zxq.net/MFD_Docking.JPG\u0022 alt=\u0022MFD_Docking.JPG\u0022\u003E\u003C/p\u003E\u003Cp\u003ELooks complicated, right? Nope! DST obviously means distance. It gives a numerical value in 10^x meters at the top and a bar representation of the same value below it, starting at 10^3 meters (1km) and going down to 10^-1 meters (1 tenth of a meter, or 10 centimeters). CVEL means Closing velocity in 10^x meters per second. It also has the numerical value and associated bar, which also runs from 10^3 down to 10^-1 m/s. \u003C/p\u003E\u003Cp\u003ENow, about that circle. First, the center of the circle is where you\u0027re headed. The green cross is where the target is relative to this. It goes hand in hand with the yellow arrow and TVEL (top left). The yellow arrow gives you your vector in the plane perpendicular to approach plane. But from a purely visual point of view, the direction in which the yellow arrow points is the direction in which the center of the circle will move relative to the green cross (so in this case, we would continue moving the center of the circle up and to the left, or away from the target. This means we would shoot past the target to the top right if we did not make any corrections). The TVEL reading, or tangential velocity, simply gives you the magnitude of that vector (the velocity which the arrow represents). You should modify your TVEL so that the arrow points towards the green cross until it is centered, and then bring your TVEL down to zero so it stays there. Also provided is another scale along the concentric circles to give you a general idea of the speed a certain length of the arrow represents (Yellow numbers in bottom half of the circle. innermost circle is 10^-1 m/s, goes out to the outermost being 10^2 m/s). A similar scale is present in green; this represents your distance. It goes with the green circle, which gets smaller as you close in on the target. Each concentric circle has an associated distance which it represents on a logarithmic scale (10^x m). If your green cross is outside of this circle, you are outside of your \u0022approach cone\u0022 and the TOFS (tangential offset - in the top left) will show a reading higher than 1. The circle will also become red. To visualize this better, think of the circle as not only a circle but as a hollow cone looked at from the bottom, with the green circle representing your current level in the cone. As you descend into the cone (get closer to the target), the circle will shrink since the cone shrinks as you approach the point. If the green cross is not centered, then as you get closer, it will eventually fall out of cone, meaning your target fell out of the cone. TOFS value is a numerical value that represents whether your target is in the cone or not. Values less than 1 tell you it is inside the cone.\u003C/p\u003E\u003Cp\u003ENext, the red cross is where you\u0027re docking port is pointing relative to where you\u0027re headed. After you align the green cross to the center, you should start aligning the red cross to the center by rotating your ship accordingly. There are degree readings (10 degrees and 20 degrees here) to describe at what angle your docking port is out of alignment with your approach path. If you are well aligned, the cross turns white (beware - as you get closer, any small misalignment becomes magnified, so adjust the whole way in). \u003C/p\u003E\u003Cp\u003EFinally, the red arrow indicates rotational alignment with the two docking ports. We would use Q and E to try and rotate this to the top of the circle.\u003C/p\u003E\u003Cp\u003EAfter you\u0027ve successfully lined up these crosses and brought the red arrow to the top of the circle, you can go back to the easy-peasy DST and CVEL readings to make sure you approach at safe speeds.\u003C/p\u003E\u003Cp\u003ESee? Not so bad. And anything in KSP would probably be simpler. I think a version without the logarithmic scales and a purely numerical DST and CVEL reading would be perfect.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-22T00:54:41Z\u0022 title=\u002208/22/2013 12:54  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 22, 2013\u003C/time\u003E by Prime flux\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-08-22T17:31:10Z","Content":"\n\u003Cp\u003EThe multi-stage docking solution looks really nice, and would solve the issue of precision requirements that are impossible to resolve via the physics engine (if you make the limitations on a docking port too tight it can never reach a point where it\u0027s able to engage). But I foresee the model on such a system being potentially more complex than wheels, and we can all see how many addons have wheels that don\u0027t use custom wheel plugins.\u003C/p\u003E\n"},{"CreatedByName":"Captain Sierra","CreatedById":74666,"CreatedDateTime":"2013-08-23T00:54:20Z","Content":"\n\u003Cp\u003EI personally think you should be able to override the snap without having to use RCS. I think you should still be able to roll but the SAS will try to match rotations to the nearest permissable angle and only a significant manual input (more than just a tap) can override it.\u003C/p\u003E\u003Cp\u003EI would also assume that the docking port magnetics (or collider fins or whatever) would try and snap you to a permissible angle as well. If not (or even if), it might be a good idea to add a tolerance factor so that the ports would tolerate misalignments by so many degrees. (something like 0-10)\u003C/p\u003E\u003Cp\u003EThat aside, I\u0027d love to see this as soon as .22. It would be good for making a radial coupler part I have considered work on but until now, have no idea how to make snap at 0 ant 180* increments.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EJust noticed the tolerance thing was already mentioned. Good. Consider me another supporter.\u003C/p\u003E\n"},{"CreatedByName":"Blue","CreatedById":1917,"CreatedDateTime":"2013-08-23T01:02:15Z","Content":"\n\u003Cp\u003EIf such snap would be implemented, might\u0027nt it savegame-break any spacecraft that had docking ports locked that already weren\u0027t locked from launch?\u003C/p\u003E\n"},{"CreatedByName":"Captain Sierra","CreatedById":74666,"CreatedDateTime":"2013-08-23T01:08:37Z","Content":"\n\u003Cp\u003Eno. It simply adds a new feature to docking ports. Now, if they are using ports that are then told to lock at a specific angle (which would not be stock ports), then possibly. But since it is mostly limited to mod parts (very few of these are actually published yet), then I don\u0027t think it would be that bad. now, the THSS docking ports may actually be craft breaking since they would probably take advantage of this and that may do harm.\u003C/p\u003E\n"},{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-08-23T01:08:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Blue\u0022 data-cite=\u0022Blue\u0022\u003E\u003Cdiv\u003EIf such snap would be implemented, might\u0027nt it savegame-break any spacecraft that had docking ports locked that already weren\u0027t locked from launch?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFor most people, it shouldn\u0027t break any saves, since the stock docking ports will probably omit these optional parameters.\u003C/p\u003E\u003Cp\u003EMy request was for SQUAD to extend the ModuleDockingNode capabilities to provide options for modders.\u003C/p\u003E\u003Cp\u003EI\u0027ll also add that with these options, a player does not toggle orientation lock in-game - the orientation limits are configured internally in the CFGs.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-23T01:16:52Z\u0022 title=\u002208/23/2013 01:16  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 23, 2013\u003C/time\u003E by sumghai\u003C/strong\u003E\n\u003C/span\u003E\n"}]}