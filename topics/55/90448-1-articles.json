{"TopicId":90448,"ForumId":55,"TopicTitle":"Time acceleration vs physics","CreatedByName":"Angezerus","CreatedById":129328,"CreatedDateTime":"2014-11-16T12:08:53Z","PageNum":1,"Articles":[{"CreatedByName":"Angezerus","CreatedById":129328,"CreatedDateTime":"2014-11-16T12:08:53Z","Content":"\n\u003Cp\u003EHello!\u003C/p\u003E\u003Cp\u003EMaybe I\u0027m wrong, but I have noticed that in time acceleration, especially in atmospheric flight, not only the time accelerates, but the physics as well, meaning, accelerating time will make you go faster and increase the stress on air/spacecrafts. To counter this problem, I suggest to divide the physics data with the time multiplier:\u003C/p\u003E\u003Cp\u003Etick( calculate_physics()/time_mult ) * time_mult\u003C/p\u003E\u003Cp\u003EThis way the time-relative physic values would be constant on every time acceleration level, only the time would accelerate, so parts wouldn\u0027t get crazy and break.\u003C/p\u003E\n"},{"CreatedByName":"Xaiier","CreatedById":22833,"CreatedDateTime":"2014-11-16T16:55:34Z","Content":"\n\u003Cp\u003ETechnical accuracy aside, this is a good idea, but it isn\u0027t really feasible as an addition to the stock game.\u003C/p\u003E\u003Cp\u003EThe problem with your concept is that while it \u0027works\u0027, it also increases the already heavy physics load. In many cases this won\u0027t help the overall speed, because the extra lag will counteract the speed. This is also why the stock game can\u0027t do this, as intentionally overtaxing the physics engine and causing lag isn\u0027t a good operating procedure. As such, the stock game decreases the physics precision by the same factor of warp to maintain a constant physics load throughout. This is what causes the \u0022crazyness\u0022 you describe, but it also severely limits the maximum warp due to overly inaccurate physics.\u003C/p\u003E\u003Cp\u003EThat being said, it\u0027s entirely possible to throw caution to the wind and do so anyways, and I made a mod specifically to do so (See my sig). It gives you the capability to toggle an alternate \u0027hyper-warp\u0027 mode which you can set to try to perform physics warp speeds of up to 100x, and also allows you to reduce the physics accuracy down to 0.25x like the stock 4x does, among other things. To an extent this works, and it is possible to attain physics warps well beyond the normal stock limits without any loss of precision or significant lag - assuming you have a powerful computer and a small ship.\u003C/p\u003E\u003Cp\u003EAlso, welcome to the forums!\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-11-16T18:49:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Xaiier\u0022 data-cite=\u0022Xaiier\u0022\u003E\u003Cdiv\u003ETechnical accuracy aside, this is a good idea, but it isn\u0027t really feasible as an addition to the stock game.\u003Cp\u003EThe problem with your concept is that while it \u0027works\u0027, it also increases the already heavy physics load. In many cases this won\u0027t help the overall speed, because the extra lag will counteract the speed. This is also why the stock game can\u0027t do this, as intentionally overtaxing the physics engine and causing lag isn\u0027t a good operating procedure. As such, the stock game decreases the physics precision by the same factor of warp to maintain a constant physics load throughout. This is what causes the \u0022crazyness\u0022 you describe, but it also severely limits the maximum warp due to overly inaccurate physics.\u003C/p\u003E\u003Cp\u003EThat being said, it\u0027s entirely possible to throw caution to the wind and do so anyways, and I made a mod specifically to do so (See my sig). It gives you the capability to toggle an alternate \u0027hyper-warp\u0027 mode which you can set to try to perform physics warp speeds of up to 100x, and also allows you to reduce the physics accuracy down to 0.25x like the stock 4x does, among other things. To an extent this works, and it is possible to attain physics warps well beyond the normal stock limits without any loss of precision or significant lag - assuming you have a powerful computer and a small ship.\u003C/p\u003E\u003Cp\u003EAlso, welcome to the forums!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI dont really think you understand his suggestion. His suggestion will not increase physics load -- the number of calculations per second will remain the same. The only difference is normalizing by the time step such that forces/stresses are not multiplied by by time acceleration factor... (unless you are implying that adding one division will significant increase the load on a cpu, even if its operating at 60 calculations per second...)\u003C/p\u003E\u003Cp\u003EThat said, i suggested this a while ago, but the way Unity physics engine works, merely dividing by the timestep is not possible/wont help because forces are applied where they are generated: \u003C/p\u003E\u003Cp\u003Efor instance, if you have a spaceplane with engines located on the wing tips, unity applies forces on the engines, which then move forward after one timestep. The displacement creates a force on the wings (i assume a linear spring constant) and drag the wings and fuselage along with it. Thus, 4x acceleration will result in 4x displacement.\u003C/p\u003E\u003Cp\u003EHowever, one possible fix is to multiply everything else i.e. spring constants and stress/impact tolerances etc... by time acceleration factor so that displacement and stresses will not be affected.\u003C/p\u003E\u003Cp\u003EAlso, ive noticed that intake air calculations increase by 4x under 4x time acceleration, which isnt correct...\u003C/p\u003E\n"},{"CreatedByName":"Xaiier","CreatedById":22833,"CreatedDateTime":"2014-11-16T22:11:01Z","Content":"\n\u003Cp\u003EAh, I see what you mean. Nevertheless, that isn\u0027t a solution, as higher forces and such won\u0027t behave even close to properly.\u003C/p\u003E\u003Cp\u003EThe wobbliness results from minor errors in calculation over the timestep period, such as two parts which have slight relative motion. Over a longer timestep (required by the physwarping) these errors become more noticeable and can compound on themselves.\u003C/p\u003E\n"},{"CreatedByName":"arkie87","CreatedById":103434,"CreatedDateTime":"2014-11-17T15:01:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Xaiier\u0022 data-cite=\u0022Xaiier\u0022\u003E\u003Cdiv\u003EAh, I see what you mean. Nevertheless, that isn\u0027t a solution, as higher forces and such won\u0027t behave even close to properly.\u003Cp\u003EThe wobbliness results from minor errors in calculation over the timestep period, such as two parts which have slight relative motion. Over a longer timestep (required by the physwarping) these errors become more noticeable and can compound on themselves.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe way Unity physics engine works is by applying forces to individual parts, the equations of motion integrated with time which causes acceleration parts to displace and \u0022pull\u0022 other parts along with them. I think increasing spring constants under time-acceleration should fix displacement problem. Alternatively, using implicit integration, rather than explicit, would fix the problem as well (though I dont think Unity can do this....)\u003C/p\u003E\u003Cp\u003EThat said, I like your Time Control mod \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I used it to slow down time so i could crash into Kerbin at 150 km/s and see what happens \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"}]}