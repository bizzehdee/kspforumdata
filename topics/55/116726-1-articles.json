{"TopicId":116726,"ForumId":55,"TopicTitle":"Make bases unaffected by physics","CreatedByName":"cwriter","CreatedById":148722,"CreatedDateTime":"2015-07-24T13:59:30Z","PageNum":1,"Articles":[{"CreatedByName":"cwriter","CreatedById":148722,"CreatedDateTime":"2015-07-24T13:59:30Z","Content":"As someone who\u0027d like to build alternative space centers on other celestials (Extraplanetary Launchpads \u002B Karbonite \u002B USI Colonies) the physics strike hard on my CPU when building big bases. However, there\u0027s not really a point to have physics on an immobile base other than checking for collisions with other space vessels of any type.\n\nHowever, glancing at the size of the KSC, I think that the game would benefit from being able to build (bigger) bases on moons, planets and asteroids without having the annoying lag and wobbeling.\n\nI thought of a plan like this:\n\nWhen renaming vessels, add a checkbox for bases and maybe space stations to make them unaffected by physics or affected by physics as only 1 part while actually keeping the information needed for future physical calculations. Bases will be welded at the points where they touch the ground and will be no or only one part for the physics engine. (Just like the KSC buildings, meaning that you still can crash into them (and maybe destroy them, either through reactivation of the physics or like the KSC buildings), but they won\u0027t move.)\n\nWhat do you think about that? Are there any objections?\n\ncwriter"},{"CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-24T14:23:59Z","Content":"You are aware that in the future every rocket/base may run a separate thread and that now the main issue is not the physics but the extremely inefficient resource allocation system? Disabling physics would not eliminate the extreme overhead of handling resources and heat."},{"CreatedByName":"cwriter","CreatedById":148722,"CreatedDateTime":"2015-07-24T15:31:20Z","Content":"\u003E \n\u003E You are aware that in the future every rocket/base may run a separate thread\n\nMoving vessels to different threads is a very temporary solution. Not only that you have to have a CPU with a core count that correlates to the amount of vessels in a 2.5 km radius (which on modern CPUs isn\u0027t really an issue, given a standard of 4 cores, but might be a problem for old dual cores), it will also drain a lot of CPU power. \n\n\u003E \n\u003E and that now the main issue is not the physics but the extremely inefficient resource allocation system?\n\nWhat resource allocation system? GC? Well, for that matter, you could as well suggest to increase the GC-cycles on computers with a big ram, but really: It\u0027s no clean solution. But without know the sourcecode of the physics engine, the only thing I can tell is: If there is a messy resource allocation (which actually is just allocation of memory in a loop without freeing it at the end of each loop), then not even executing the loop would make the problem disappear as well.\n\n\u003E \n\u003E Disabling physics would not eliminate the extreme overhead of handling resources and heat.\n\nResources? Heat? Are we talking about in-game resources now? Well, I\u0027m pretty sure that the physics take around 50% CPU time each loop as they are 3-dimensional forces to be taken into account while resources can be narrowed down pretty easily. But of course: Without any experiment this is just guessing.\n\nAnyways, you didn\u0027t mention any reason why my suggestion is either too complex or is broken by design which leaves me confident.\n\ncwriter"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-07-24T15:41:51Z","Content":"Won\u0027t this suggestion break being able to dock with bases? I.e. to add new modules or join a craft to it for resource transfer."},{"CreatedByName":"cwriter","CreatedById":148722,"CreatedDateTime":"2015-07-24T15:54:14Z","Content":"\u003E \n\u003E Won\u0027t this suggestion break being able to dock with bases? I.e. to add new modules or join a craft to it for resource transfer.\n\nWeren\u0027t there physicless parts once, for example the ladders? they also wouldn\u0027t affect physics (i.e. air resistance) while still being interactive.\n\nWhether this would break it: I really don\u0027t know. Depends on whether resource flows are within the physics function or not. If so, this suggestion would require to add an if-clause to make the physic function exit after the resource calculation.\n\nFor the adding of new modules: Well, what has been disabled can be enabled again, thus providing the possibility to land a base, simplify it for the physics engine, land the next part, enabling physics for the main part again and so on. Or, depending on the actual implementation of the physics function, it might as well be no problem at all. If you can just attach a part (this implies working docking ports on a \u0022bricked\u0022 base) and the game can just add it to the actual base, just by stiffening the docking port connection and everything on the attached part, it wouldn\u0027t even be too hard to implement.\n\nBut without any insights to the code or the devs clarifying it\u0027s pretty much speculation.\n\ncwriter"},{"CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-24T21:47:16Z","Content":"\u003E Resources? Heat? Are we talking about in-game resources now? Well, I\u0027m pretty sure that the physics take around 50% CPU time each loop \n\nThat is one thing: Ignorant. It is prooven - also due to bug reports - that resource allocation is brutal. Add 30 batteries to a core and see your frame rate drop to single digits. Pretty much like that.\n\nThere is an O(n^2) or worse algo in there that is on top generating a TON of garbage. Turning physics off (which I would totally back for a base that is \u0022anchored\u0022 - which can happen though one or multiple anchors that are special parts) would rock. But it will not at all fix any of the performance issues you see now.\n\nWhich, btw., where no there long time ago - which prooves it is not physicsl. Once upon a time you could handle 1500 part rockets. Not today.\n\nDo not despair, I was as ignorant as you - which is why I asked at [http://forum.kerbalspaceprogram.com/threads/128021-Just-why-is-KSP-Physics-so-slow-%28NOT-a-Rant%29](https://forum.kerbalspaceprogram.com/threads/128021-Just-why-is-KSP-Physics-so-slow-%28NOT-a-Rant%29)\n\nIf you read the thread you get pointed to the proof that it is indeed not the physics being slow. In fact, the Physx engine has a special handling for \u0022non moving\u0022 elements. If not written totally crappy, a base would settle into intert state pretty fast - and without input not wake up from it.\n\nThe relevant bug report is [http://bugs.kerbalspaceprogram.com/issues/5136](http://bugs.kerbalspaceprogram.com/issues/5136) - named \u0022Turning on fuel cells causes lag\u0022. Get the irony? ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif) Not physics - they are always there."},{"CreatedByName":"cwriter","CreatedById":148722,"CreatedDateTime":"2015-07-24T22:51:06Z","Content":"\u003E \n\u003E That is one thing: Ignorant.\n\u003E \n\u003E [...]\n\u003E \n\u003E I was as ignorant as you\n\nYou should really be careful about your choice of words.\n\n\u003E \n\u003E That is one thing: Ignorant. It is prooven (correct spelling: proven) - also due to bug reports - that resource allocation is brutal. Add 30 batteries to a core and see your frame rate drop to single digits. Pretty much like that.\n\nWhat resource allocation? In-game resources or Computer resources (aka memory)?\n\n\u003E \n\u003E There is an O(n^2) or worse algo in there that is on top generating a TON of garbage. Turning physics off (which I would totally back for a base that is \u0022anchored\u0022 - which can happen though one or multiple anchors that are special parts) would rock. But it will not at all fix any of the performance issues you see now.\n\n\u0022Or worse\u0022 is pretty much invented. You should always directly cite your sources: [http://bugs.kerbalspaceprogram.com/issues/5136](http://bugs.kerbalspaceprogram.com/issues/5136)\n\n\u003E \n\u003E Which, btw., where no there long time ago - which prooves [proves] it is not physicsl [physical]. Once upon a time you could handle 1500 part rockets. Not today.\n\nBecause the engine can\u0027t have changed? It\u0027s quite contradictory. If it was only for the resource management, then the same issue should have existed before and, which is easier to prove, 1.5k part-rockets should still be possible today if you don\u0027t pack any fuel tanks, batteries and generators on it. Quod est demonstrandum.\n\n\u003E \n\u003E If you read the thread [...]\n\n... I can see you confusing NVidia PhysX and the physics loop. That, btw., has nothing to do at all with memory allocations and/or cpu lags if you have an NVidia GPU because PhysX will be executed on the GPU. If you mean a more specific quote, I demand citation. The whole thread is mixed with discussions about NVidia PhysX and the game physics.\n\n\u003E \n\u003E In fact, the Physx engine has a special handling for \u0022non moving\u0022 elements. If not written totally crappy, a base would settle into intert [inert] state pretty fast - and without input not wake up from it.\n\nI\u0027m making a guess saying you actually have no idea how (real life) physics work. You never ever have \u0022no-moving objects\u0022. There can only be a velocity that\u0027s 0 \\_relative\\_ to another object. However, you always need to take forces into account. For example, if you had a \u0022state\u0022 for immobile objects, your spacecraft at KSC would simply lift away to nowhere. Reason: Missing mass acceleration, or simply: Missing gravity. Everything that has immobile objects is just one thing: Disabling physics and attaching the object to another and thus translate accordingly. However, KSP\u0027s physics don\u0027t seem to behave like that as a Kerbal can slip under a vessel and lift it this way. So, physics still are working and press the vessel to the surface of the celestial you\u0027re on. \n\nNVidia PhysX guidelines may apply for most FPS, but they are completely inappropriate for a realism-driven game like KSP.\n\nThat being said, KSP most likely doesn\u0027t apply physics to the vessels that are orbiting and more than 2.5km away from the player\u0027s view. There, there are probably simple elliptic rails the vessels \u0022drive\u0022 on to save CPU power.\n\n\u003E \n\u003E The relevant bug report is [http://bugs.kerbalspaceprogram.com/issues/5136](http://bugs.kerbalspaceprogram.com/issues/5136) - named \u0022Turning on fuel cells causes lag\u0022. Get the irony? ![:wink:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)Not physics - they are always there.\n\nOh sweet lord. Personally, I despise GC-based programming, exactly because of things like this. Minecraft had its problems, now this game has them too. However, the implementation seems pretty messy, especially because this whole problem could be solved by having a list permanently in RAM instead of constantly destroying and recreating it. Nevertheless: You can also see the permanent garbage growth. That shouldn\u0027t be coming from graphics, but - you guess it - physics. In this very example, I think it\u0027s safe to say that the resource system is about 700% more demanding than the general performance drain. But as I said: In this very example. A vessel consisting of 2 parts of which one is a fuel cell will most likely result in different conclusions. But that all needs to be experimentally verified.\n\nAlso, making rigid bodies out of bases would reduce the wobbeling with large bases consisting out of structural parts mostly. And that, my friend, will most likely result in higher FPS.\n\ncwriter"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-07-24T23:37:25Z","Content":"\u003E \n\u003E ... I can see you confusing NVidia PhysX and the physics loop. That, btw., has nothing to do at all with memory allocations and/or cpu lags if you have an NVidia GPU because PhysX will be executed on the GPU. If you mean a more specific quote, I demand citation. The whole thread is mixed with discussions about NVidia PhysX and the game physics.\n\nThat\u0027s because Unity uses PhysX as its physics engine for the off-rails physics bubble. PhysX is a general purpose physics engine that can run on CPU or GPU. Running on the GPU is not enoabled on the current version of PhysX that KSP uses, nor should it as the type of physics used (chained constrained rigidbodies) does not thread easily and it thus limited to a single thread per chain (a single vessel is a chain). So running it on the GPU would have lower performance because it could only use a single shader unit, which is much less powerful than a single CPU core. U5 will bring multithreading, but it is expected that for KSP this will be one thread per vessel in the physics bubble at best. GPU PhysX is better suited for large numbers of independent objects that only interact when colliding with each other (think of some object exploding into hundreds or thousands of pieces of debris)."},{"CreatedByName":"cwriter","CreatedById":148722,"CreatedDateTime":"2015-07-25T10:41:16Z","Content":"\u003E \n\u003E That\u0027s because Unity uses PhysX as its physics engine for the off-rails physics bubble.\n\nPhysX can be used in various ways. PhysX requires a lot of coding to be used inside a game engine. And then, the interface there matters as well since you need to handle your actors to the physics engine. It\u0027s not as simple as \u0022I use PhysX, it does the magic by itself\u0022. And that\u0027s where you can win or lose your CPU time.\n\n\u003E \n\u003E Running on the GPU is not enoabled on the current version of PhysX that KSP uses, nor should it as the type of physics used (chained constrained rigidbodies) does not thread easily and it thus limited to a single thread per chain (a single vessel is a chain).\n\n[http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/guide/Manual/Advanced.html](http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/guide/Manual/Advanced.html)\n\nYou have many junctions that can be parallelized easily. Same goes for drag and lift. I\u0027m confident that it is indeed possible to write the multithreading part, however, I can not determine the effort required to do so without actually having insights. The devs are setting other priorities though. Things that cause huge lags? Priority: Low ![;.;](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cry.gif)\n\n\u003E \n\u003E So running it on the GPU would have lower performance because it could only use a single shader unit, which is much less powerful than a single CPU core.\n\nAgreed, but that can\u0027t be used as defense. There are lots of games out there that manage to parallelize their physics. Might well be that it wasn\u0027t Squad\u0027s main priority, but it should have been.\n\n\u003E \n\u003E GPU PhysX is better suited for large numbers of independent objects that only interact when colliding with each other (think of some object exploding into hundreds or thousands of pieces of debris).\n\nGPU PhysX is nothing else than just moving matrizes to the CUDA cores on the GPU, calculating stuff there and moving it back to the CPU. You can\u0027t have PhysX running entirely on the GPU due to the fact that the data mostly relies in the RAM and needs to go through the bus to the CPU and then to the GPU. You can simply \u0022outsource\u0022 some calculations.\n\nBack to topic:\n\nA base that doesn\u0027t require physical interactions, shouldn\u0027t drain performance for that matter. The \u0022safer\u0022 a base gets (and thus inaffected by some \u0022fall through the surface of the celestial\u0022-bug), the better.\n\ncwriter"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-07-25T11:10:09Z","Content":"\u003E \n\u003E PhysX can be used in various ways. PhysX requires a lot of coding to be used inside a game engine. And then, the interface there matters as well since you need to handle your actors to the physics engine. It\u0027s not as simple as \u0022I use PhysX, it does the magic by itself\u0022. And that\u0027s where you can win or lose your CPU time.\n\nOf course. I was mostly correcting the idea that KSP\u0027s physics runs on the GPU with NVidia cards (it doesn\u0027t) or that KSP doesn\u0027t use PhysX as a core component of its physics engine (it does).\n\n\u003E \n\u003E [http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/guide/Manual/Advanced.html](http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/guide/Manual/Advanced.html)\n\u003E You have many junctions that can be parallelized easily. Same goes for drag and lift. I\u0027m confident that it is indeed possible to write the multithreading part, however, I can not determine the effort required to do so without actually having insights. The devs are setting other priorities though. Things that cause huge lags? Priority: Low ![;.;](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cry.gif)\n\nThey are not easily parallelized, because the motion of each rigidbody affects all the other bodies and joints down the line. Drag and lift are similar, they are dependent on AoA, thus position, thus the motion of the body and we\u0027re back to the first statement. There are some things that could be broken out more easily into their own threads though, like heat and resource flow.\n\n\u003E \n\u003E Agreed, but that can\u0027t be used as defense. There are lots of games out there that manage to parallelize their physics. Might well be that it wasn\u0027t Squad\u0027s main priority, but it should have been.\n\nPoint me to a game that uses chained rigidbodies to the extent that KSP does. The games that parallelize their physics are those that have more easily threaded models, like a pile of unconnected rigidbodies colliding with each other in an explosion as an example.\n\n\u003E \n\u003E GPU PhysX is nothing else than just moving matrizes to the CUDA cores on the GPU, calculating stuff there and moving it back to the CPU. You can\u0027t have PhysX running entirely on the GPU due to the fact that the data mostly relies in the RAM and needs to go through the bus to the CPU and then to the GPU. You can simply \u0022outsource\u0022 some calculations.\n\nWell yes, but my point is that it only makes sense to move the calculations to the massively parallel GPU when the physics are easily threaded in the first place."},{"CreatedByName":"Kaos","CreatedById":110849,"CreatedDateTime":"2015-07-25T11:42:42Z","Content":"I would be more for ground constructions. That is you have some different buildings you can construct, given the right ressources (might be also parts of ships you have brought) and enough crew. These buildings would be handled the same way KSC is handled."},{"CreatedByName":"cwriter","CreatedById":148722,"CreatedDateTime":"2015-07-25T13:32:47Z","Content":"\u003E \n\u003E [...]or that KSP doesn\u0027t use PhysX as a core component of its physics engine (it does).\n\nI never doubted that NVidia PhysX are part of the game physics. It\u0027s just not to be used synomymous and/or you can\u0027t blame everything on NVidia.\n\n\u003E \n\u003E They are not easily parallelized, because the motion of each rigidbody affects all the other bodies and joints down the line. Drag and lift are similar, they are dependent on AoA, thus position, thus the motion of the body and we\u0027re back to the first statement. There are some things that could be broken out more easily into their own threads though, like heat and resource flow.\n\nLet\u0027s get away from motion for a second, for the motion really can\u0027t be parallelized. But what can be parallelized, are the forces. In a simple example you might have 3 tanks joint, the first of which has wings attached. Then, you can calculate the forces for each segment specifically. In a horizontal flight, the wings will of course result in a force pointing normal to the planes\u0027 orientation. The force that applies on the wings can be calculated and cross-checked with the surface attach point force tolerance. If it doesn\u0027t exceed the limits, you can simplify the force by putting the two forces together to their balance point. That all in a different thread, to be duly noted.\n\nThen, the only thing you still have to do, is to check the junctions. Look at the forces that occur on the part with the wings, then at the forces of the middle part. All forces will be more or less the same, with the exception of:\n\n- Air resistance\n\n- Lift\n\nSo, there will be a force on the junction of compression and vertical difference. If that exceeds the limit: Break; otherwise go on.\n\nThe last part, however, has the same forces as the middle part. The only things that add to it are the compression and, maybe, the forces that apply during the breaking up.\n\nIn the end of course, you still need to serially multiply the forces with the delta time and display everything, but as you can see, you can parallelize a huge lot of things.\n\nI agree on heat and resource flow though.\n\n\u003E \n\u003E Point me to a game that uses chained rigidbodies to the extent that KSP does. The games that parallelize their physics are those that have more easily threaded models, like a pile of unconnected rigidbodies colliding with each other in an explosion as an example.\n\nWell, there is no game built exactly as KSP, but there are a lot of games dedicated to physics.\n\n- Rigs of Rods (and it\u0027s child, BeamNG)\n\n- Space Engineers and Medieval Engineers (altough they seem to cheat a bit)\n\nHowever, I don\u0027t know the internals of every game, neither do I know every game out there.\n\n\u003E Well yes, but my point is that it only makes sense to move the calculations to the massively parallel GPU when the physics are easily threaded in the first place.\n\nSee above. You can discuss about the word \u0022easily\u0022 for sure, but it\u0027s certainly not impossible.\n\nBack to Topic:\n\n\u003E \n\u003E I would be more for ground constructions. That is you have some different buildings you can construct, given the right ressources (might be also parts of ships you have brought) and enough crew. These buildings would be handled the same way KSC is handled.\n\nThat\u0027s an idea as well.\n\nI see some objections though:\n\n- You need to have pre-created buildings, meaning that you can\u0027t be as creative as you might want to be and it will stress the devs even more.\n\n- It would certainly break something in the realism if you didn\u0027t have to resupply the stations, except if you mean something like planting a flag for a colony which provides an interface similar to the one of KSC where you can build life support facilities. \n\nHowever this would take the charme of building your very own, personalized base. It\u0027s worth discussing, though.\n\ncwriter\n\n**Edited \u003Ctime datetime=\u00222015-07-25T13:43:32Z\u0022 title=\u002207/25/2015 01:43  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 25, 2015\u003C/time\u003E by cwriter**"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-07-25T13:47:46Z","Content":"\u003E \n\u003E I never doubted that NVidia PhysX are part of the game physics. It just not to be used synomymous and/or you can\u0027t blame everything on NVidia.\n\nI think you underestimate PhysX\u0027s role in the realtime physics in KSP, to be honest. The whole point of using a third party engine is to not have to write the physics model from scratch. KSP is very much dependent on Unity for updates to the physics model, which is why the move to Unity 5 is so promising and exciting.\n\n\u003E \n\u003E Let\u0027s get away from motion for a second, for the motion really can\u0027t be parallelized. But what can be parallelized, are the forces....\n\nThe motion of the connected bodies apply forces to the other bodies. This is not as simple a problem as you make it out to be.\n\n\u003E \n\u003E In the end of course, you still need to serially multiply the forces with the delta time and display everything, but as you can see, you can parallelize a huge lot of things.\n\nThis means the computationally easy part is parallelized while leaving the computationally hard part as is. I would not expect much in the way of performance gain from this.\n\n\u003E \n\u003E Well, there is no game built exactly as KSP, but there are a lot of games dedicated to physics.\n\u003E - Rigs of Rods (and it\u0027s child, BeamNG)\n\u003E \n\u003E - Space Engineers and Medieval Engineers (altough they seem to cheat a bit)\n\u003E \n\u003E However, I don\u0027t know the internals of every game, neither do I know every game out there.\n\nRigs of Rods treats vehicles as a single softbody (with a few other connected bodies for the wheels). Computationally equivalent to a KSP craft with half a dozen parts plus the softbody calcs (not sure how complex they are).\n\nSpace Engineers appears to treat each vessel as a single rigidbody for motion, with a voxelized damage model. This is also much less computationally expensive than KSP\u0027s model."},{"CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-25T13:55:42Z","Content":"I think one area everyone overlooks is: get rid of rigidbody for a base ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif) Voila, instant paralellisability.\n\nHow?\n\n\\* A base is constructed of modules. Modules which are landed independently ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif) Most bases will be build from modules landed in multiple independent operations, that later get combined.\n\n\\* They are connected. Now, instead of making them one rigidbody, assume the connectivity is not rigid but quite flexible within limits. Some sort of expandable tube. One that within certain limits does not really exert force to both sides (or: extremely little which can be ignored).\n\n\\* On top you can provide achor parts that can activate on the surface and use a strong force to anchor their module. So no more \u0022moving the base with a little rover crash\u0022. This and good spring programming will make pretty much most modules inert - i.e. the physx engine can cheat because the forces are in equilibrium. For an anchored object you basically can even ignore calculating gravity ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)\n\nIf you trick with those parts smart you can at least paralallize a base, and can mostly turn physx totally off for most modules until something crashes into them."},{"CreatedByName":"WinkAllKerb\u0026#039;\u0026#039;","CreatedById":78047,"CreatedDateTime":"2015-07-25T18:10:00Z","Content":"close thread (\u002B approx lock {partial sim}); proxy \u0022conditionnal()\u0022 detect ; reopen thread. \n\nbalance and equilibrium as always. might worth some brainstorming around ...\n\n(thread or sub loop //) it\u0027s the same just managed another way \u0022how too mutlithread in monothread // cpu // gpu // etc.\u0022 and why nowdays we have mutlithread core vs some years ago\n\n**Edited \u003Ctime datetime=\u00222015-07-26T04:15:29Z\u0022 title=\u002207/26/2015 04:15  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 26, 2015\u003C/time\u003E by WinkAllKerb\u0027\u0027**"},{"CreatedByName":"Glaran K\u0026#039;erman","CreatedById":146334,"CreatedDateTime":"2015-07-25T18:44:02Z","Content":"I don\u0027t understand anything here ![:blush:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_embarrassed.gif)"},{"CreatedByName":"RoverDude","CreatedById":105198,"CreatedDateTime":"2015-07-26T17:54:25Z","Content":"As a fellow who\u0027s spent significant time working with bases... rest assured, just flagging them to ignore physics does not quite work ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)"},{"CreatedByName":"WinkAllKerb\u0026#039;\u0026#039;","CreatedById":78047,"CreatedDateTime":"2015-07-26T18:27:27Z","Content":"hehe just some thoughts around vrage, (grid approach), *un/merging, sensor* and a bunch of related updates like the (status switch one) // with some ksp already existing thing ; ) \n\ni wonder if some similar process could be applied/enhanced to/in ksp and unity in some way regarding thoose kind of memory consumption/structure \u0026 stability concern while switching scene, warping etc. (probably could be applied not limitative to base physics within the game at some point sort of handy workaround more or less regarding the fact ksp do not use grid based calculation engine )\n\n**station**/small ship/large ship hierarchy\\* approach i mean\n\nMy own bet is that it could be some good inspiration as a basis to explore for some potential *further* enhancement with some of the said \u0022grid\u0022 related process translated/applied to ksp/unity \u0022\u0022non grid/nodal\u0022\u0022 engine layers\\*. ; )\n\n**Edited \u003Ctime datetime=\u00222015-07-26T21:50:42Z\u0022 title=\u002207/26/2015 09:50  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 26, 2015\u003C/time\u003E by WinkAllKerb\u0027\u0027**"},{"CreatedByName":"pincushionman","CreatedById":98495,"CreatedDateTime":"2015-07-27T00:29:24Z","Content":"\u003E \n\u003E As a fellow who\u0027s spent significant time working with bases... rest assured, just flagging them to ignore physics does not quite work ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)\n\nWhat about changing them into the same kind of objects as the KSC models? These are static, yet they can still be interacted with in the flight scene (building destruction)."},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-07-27T00:40:59Z","Content":"\u003E \n\u003E What about changing them into the same kind of objects as the KSC models? These are static, yet they can still be interacted with in the flight scene (building destruction).\n\nYou can\u0027t change a dynamic craft into a static model. Static models are built in art programs like Blender. That is why they are static. The best you can do is a weld mod to reduce part count."},{"CreatedByName":"Captain Sierra","CreatedById":74666,"CreatedDateTime":"2015-07-27T01:18:02Z","Content":"\u003E \n\u003E hehe just some thoughts around vrage\u0027 date=\u0027 (grid approach), [i\u0027]un/merging, sensor and a bunch of related updates like the (status switch one) // with some ksp already existing thing ; ) \n\u003E i wonder if some similar process could be applied/enhanced to/in ksp and unity in some way regarding thoose kind of memory consumption/structure \u0026 stability concern while switching scene, warping etc. (probably could be applied not limitative to base physics within the game at some point sort of handy workaround more or less regarding the fact ksp do not use grid based calculation engine )\n\u003E \n\u003E **station**/small ship/large ship hierarchy\\* approach i mean\n\u003E \n\u003E My own bet is that it could be some good inspiration as a basis to explore for some potential *further* enhancement with some of the said \u0022grid\u0022 related process translated/applied to ksp/unity \u0022\u0022non grid/nodal\u0022\u0022 engine layers\\*. ; )\n\nTHe problem with Space Engineers\u0027 grid approach as it relates to KSP is all armor blocks are merged into a single voxel mass and the entire ship acts as a single rigid body. There is no simulation of force between two blocks of a grid. The simulation of part-part stresses and the challenges that presents are a key feature of KSP. If I were to put [this station core](http://i.imgur.com/nKMB9RN.png) onto a rocket without struts, it\u0027d fold in half and thats a realistic design consideration. Under SE\u0027s grid system, that wouldnt be the case."},{"CreatedByName":"WinkAllKerb\u0026#039;\u0026#039;","CreatedById":78047,"CreatedDateTime":"2015-07-27T02:21:08Z","Content":"yup yup.\n\nthat\u0027s why i tend to think something like that could be interesting at some point to be *further enhanced \u0026 balanced* (and totally aside from the voxel aspect):\n\nhigh distance // sort of grid intermediate rigid simulation @ intermediate distance /(\u0026 eventually tweakables here (@max/min dist \u0026 @on/off ) for thoose interested in)/ active non active vessel \u0022very\u0022 close then full simulation \n\nwas mostly thinking also to some part of existing code within ramon(\u0026co.) and romfarer(\u0026co.) (\u0026othersalike) work related to active / non active vessel or body distance calculation to each other.\n\nEDIT: also in // with kraken(s) spotting , \u0026 smaller broken sim. and stranges trajectories results \u0026 etc. that happen time to time. This *might/could* allow to solve some of thoose aspects.\n\n**Edited \u003Ctime datetime=\u00222015-07-30T14:04:59Z\u0022 title=\u002207/30/2015 02:04  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 30, 2015\u003C/time\u003E by WinkAllKerb\u0027\u0027**"},{"CreatedByName":"cwriter","CreatedById":148722,"CreatedDateTime":"2015-07-30T08:11:54Z","Content":"\u003E \n\u003E I think you underestimate PhysX\u0027s role in the realtime physics in KSP, to be honest.\n\nMight well be. Might also not. Post some source code and we can discuss it.\n\n\u003E \n\u003E The whole point of using a third party engine is to not have to write the physics model from scratch.\n\nYes, but yet again: It always depends on implementation and/or correct/appropriate use. You can also have a ferrari and only drive it in the first gear.\n\n\u003E \n\u003E KSP is very much dependent on Unity for updates to the physics model, which is why the move to Unity 5 is so promising and exciting.\n\nI don\u0027t know. I don\u0027t expect too much from u5 ksp.\n\n\u003E \n\u003E The motion of the connected bodies apply forces to the other bodies. This is not as simple a problem as you make it out to be.\n\nMotions don\u0027t apply forces. Accelerations apply forces to a mass, according to F=m\\*a. Velocity has nothing to do with forces. Thus velocity does not have to be calculated before drawing anything, despite on collisions, as you have to get the impact brake forces out of a velocity.\n\n\u003E \n\u003E This means the computationally easy part is parallelized while leaving the computationally hard part as is. I would not expect much in the way of performance gain from this.\n\nAgain: Without proper facts, this is speculation.\n\n\u003E \n\u003E Rigs of Rods treats vehicles as a single softbody (with a few other connected bodies for the wheels). Computationally equivalent to a KSP craft with half a dozen parts plus the softbody calcs (not sure how complex they are).\n\nEven Rigs of Rods with that \u0022easy\u0022 physics model as you point it out to be supports threading. KSP doesn\u0027t. Without threading, Rigs of Rods may lag too depending on CPU power.\n\n\u003E Space Engineers appears to treat each vessel as a single rigidbody for motion, with a voxelized damage model. This is also much less computationally expensive than KSP\u0027s model.\n\nYeah, but there are lots of physics interactions anyways (debris, ores etc.).\n\nI hope you didn\u0027t expect me to find a game exactly like KSP.\n\n\u003E \n\u003E As a fellow who\u0027s spent significant time working with bases... rest assured, just flagging them to ignore physics does not quite work ![:wink:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)\n\nI really appreciate your mod work, however, I have to state that beliefs belong to religions. Can you elaborate? What *does* work then?\n\n\u003E \n\u003E You can\u0027t change a dynamic craft into a static model. Static models are built in art programs like Blender. That is why they are static. The best you can do is a weld mod to reduce part count.\n\nOf course you can. You still have vertices, remember? You will probably lose most functionality, though.\n\n\u003E \n\u003E THe problem with Space Engineers\u0027 grid approach as it relates to KSP is all armor blocks are merged into a single voxel mass and the entire ship acts as a single rigid body. There is no simulation of force between two blocks of a grid. The simulation of part-part stresses and the challenges that presents are a key feature of KSP. If I were to put [this station core](http://i.imgur.com/nKMB9RN.png) onto a rocket without struts, it\u0027d fold in half and thats a realistic design consideration. Under SE\u0027s grid system, that wouldnt be the case.\n\nSE isn\u0027t really opting for realism. KSP does a good job simulating rockets, but tell me: Is there any point in running a whole physics loop over a base that doesn\u0027t have engines/RCS/Reaction wheels (anything that can produce force) and doesn\u0027t or shouldn\u0027t move relative to the surface?\n\ncwriter"},{"CreatedByName":"TheTom","CreatedById":99271,"CreatedDateTime":"2015-07-30T11:17:40Z","Content":"I think that is the point. A base - once \u0022settled\u0022 is static. Point is, though, PhysX has special dcode for that (and that is goingto be better in the new version - the old one is inefficient is there are no forces to many objects). Problem is - the performance issue is not PhysX, it is the rest. Resources (electricity etc.) is done extremely inefficient ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)"}]}