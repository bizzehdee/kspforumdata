{"TopicId":69880,"ForumId":55,"TopicTitle":"Small part physics disabling","CreatedByName":"Nemrav","CreatedById":91029,"CreatedDateTime":"2014-04-19T19:43:30Z","PageNum":1,"Articles":[{"CreatedByName":"Nemrav","CreatedById":91029,"CreatedDateTime":"2014-04-19T19:43:30Z","Content":"\n\u003Cp\u003EOk here it is : we all know about the part welder mod, and as I understand it, it works quite well at reducing part count..\u003C/p\u003E\u003Cp\u003EBut what I\u0027m suggesting is that for tiny parts (old science instruments, lights, rcs ports, radial batteries), if small enough in relation to their stage, get their physics turned off and their damage detection turned off. Now only the parent part(s) have damage detection and physics.\u003C/p\u003E\u003Cp\u003EOn big stations, these tiny little insignificant parts just add cpu stress.... And I stress that these small parts are only merged with their parents (except for their own little gui detection if that applies), if they are small enough compared to the stage.... This way we can\u0027t have unfair probes and it means that big rockets won\u0027t disable the parts....\u003C/p\u003E\u003Cp\u003EYes I know probly discussed to death -- and beyond.. \u002B is on WNTS, but really these small radial parts do amount to a lot of lag..\u003C/p\u003E\u003Cp\u003EAnd if it makes you mad to see a WNTS thing, then I\u0027l suggest this, suggest here any other non-64bit ways to reduce station lag..\u003C/p\u003E\n"},{"CreatedByName":"TMS","CreatedById":57134,"CreatedDateTime":"2014-04-19T20:02:03Z","Content":"\n\u003Cp\u003EIs part lag solely determined by physics calculation, or is it also caused by the fact that each part has to be tracked?\u003C/p\u003E\n"},{"CreatedByName":"Sirrobert","CreatedById":70591,"CreatedDateTime":"2014-04-19T21:14:09Z","Content":"\n\u003Cp\u003EAnd how the hell is the game supposed to determine \u0027small in relation to the stage\u0027?\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2014-04-19T23:45:22Z","Content":"\n\u003Cp\u003EYou\u0027d still have lag though, because while their physics is disabled, the game still needs to load them, as well as their texture and position etc. Not mention the frequent visits from the Kraken (go ahead and make a big craft out of physicsless parts and see how far you get).\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2014-04-20T00:39:03Z","Content":"\n\u003Cp\u003ENew in 0.23.5 is physics significance turned off for most of the small parts you list. Not sure if it\u0027s had the effect you were looking for.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-04-20T02:29:10Z","Content":"\n\u003Cp\u003EAs said above, all your listed parts have no physics.\u003C/p\u003E\u003Cp\u003ERadial batteries, lights, ladders, RCS ports, the landing gear, the cubic octagonal strut as well as the small octagonal strut, the structural pylon, the small science experiments, all antennas excepted for the radial one, the strut, the fuel line, as well as the size 3 decoupler (why even) have no physics as of 0.23.5.\u003C/p\u003E\u003Cp\u003EHere, \u0022no physics\u0022 means \u0022nearly no mass\u0022 because the game distributes a mass of 0.005t across all the physicsless parts on a vessel IIRC. But that\u0027s not the problem. The big bottleneck isn\u0027t computing the mass and gravitational force, the bottleneck is computing part to part connections. And even with physicsless parts, you have to compute those part to part connections, because two physically enabled parts may be connected only through a physicsless part.\u003C/p\u003E\n"},{"CreatedByName":"phoenix_ca","CreatedById":50380,"CreatedDateTime":"2014-04-25T03:10:06Z","Content":"\n\u003Cp\u003EI wonder how much could be done to reduce the CPU load of those calculations. Dynamic, on-the-fly welding of parts maybe? No that would be super complicated. Though...if we could \u0022weld\u0022 parts together in VAB/SPH on a per-vessel basis somehow, that might do it. All without creating a new fully fledged part, as that\u0027d just waste more memory. (Or maybe that extra memory consumption could be okay if the merged parts were only loaded with the vessel, not on game load. Would cause loading time hang ups switching to those vessels but the overall improvement on computing them after might be worth it.)\u003C/p\u003E\u003Cp\u003EIf parts could be arranged into sort of...groups. Maybe?\u003C/p\u003E\u003Cp\u003EI should stop rambling now.\u003C/p\u003E\u003Cp\u003EHowever that is very useful info still. Good ship design means then not just reducing part count but also part-to-part connection count. Meaning excessive use of docking ports should be avoided, and stacking multiples of the same part should instead be replaced with larger modded part like Near Future\u0027s batteries. And if I understand correctly, surface attached parts would have, half the cost of stack parts that are between two others?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-25T03:18:05Z\u0022 title=\u002204/25/2014 03:18  AM\u0022 data-short=\u002210 yr\u0022\u003EApril 25, 2014\u003C/time\u003E by phoenix_ca\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xrayfishx","CreatedById":76147,"CreatedDateTime":"2014-04-27T14:45:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022phoenix_ca\u0022 data-cite=\u0022phoenix_ca\u0022\u003E\u003Cdiv\u003EDynamic, on-the-fly welding of parts maybe?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think this would be doable, it would weld parts depending on how close to a vessel you are and how fast/in which direction you are going in relation to it. If I knew C#, I\u0027d give creating this a try. It would make the vessel loading a lot slower, but I think it would help quite a bit once a vessel is loaded.\u003C/p\u003E\n"}]}