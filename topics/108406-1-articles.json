{"TopicId":108406,"ForumId":29,"TopicTitle":"Reflection help to interface with FARAPI","CreatedByName":"atomicfury","CreatedById":120037,"CreatedDateTime":"2015-05-09T15:09:06Z","PageNum":1,"Articles":[{"CreatedByName":"atomicfury","CreatedById":120037,"CreatedDateTime":"2015-05-09T15:09:06Z","Content":"\n\u003Cp\u003EHelp! I\u0027m trying to interface with the FARAPI via reflection. I\u0027m new to C#, but I found several examples that seemed to work in other mods. The code snip below finds FARAPI, gets the method, then crashes out on creating the delegate. It looks like the method arguments are wrong. I\u0027ve been struggling with it, maybe someone here can give me a few pointers. I\u0027m probably missing something obvious.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EFARAPI definition in FARAPI.cs\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Epublic static void CalculateVesselAeroForces(Vessel vessel, out Vector3 aeroForce, out Vector3 aeroTorque, Vector3 velocityWorldVector, double altitude)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThe exception:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EArgumentException: method arguments are incompatible\u003C/p\u003E\u003Cp\u003E at System.Delegate.CreateDelegate (System.Type type, System.Object firstArgument, System.Reflection.MethodInfo method, Boolean throwOnBindFailure) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003C/p\u003E\u003Cp\u003E at System.Delegate.CreateDelegate (System.Type type, System.Reflection.MethodInfo method, Boolean throwOnBindFailure) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003C/p\u003E\u003Cp\u003E at System.Delegate.CreateDelegate (System.Type type, System.Reflection.MethodInfo method) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ECode snip:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    \u003Cbr\u003E// FARAPI Hookups    \u003Cbr\u003E    private delegate void CalculateVesselAeroForcesDelegate(Vessel vessel, Vector3 aeroForce, Vector3 aeroTorque, Vector3 velocityWorldVector, double altitude);\u003Cbr\u003E\u003Cbr\u003E    private CalculateVesselAeroForcesDelegate _CalculateVesselAeroForcesDelegate;\u003Cbr\u003E\u003Cbr\u003E    private void initFARModel()\u003Cbr\u003E    {\u003Cbr\u003E        bool farInstalled = false;\u003Cbr\u003E        Debug.Log(\u0022Trying to detect FARAPI.\u0022);\u003Cbr\u003E        var farapi = AssemblyLoader.loadedAssemblies.SelectMany(x =\u0026gt; x.assembly.GetExportedTypes())\u003Cbr\u003E                    .FirstOrDefault(x =\u0026gt; x.FullName == \u0022FerramAerospaceResearch.FARAPI\u0022);\u003Cbr\u003E        if (farapi != null)\u003Cbr\u003E        {\u003Cbr\u003E            Debug.Log(\u0022Found FARAPI.  Attempting Reflection...\u0022);\u003Cbr\u003E            var method = farapi.GetMethod(\u0022CalculateVesselAeroForces\u0022);\u003Cbr\u003E\u003Cbr\u003E            if (method != null)\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022FARAPI method valid.  Creating delegate...\u0022);\u003Cbr\u003E                _CalculateVesselAeroForcesDelegate = (CalculateVesselAeroForcesDelegate)Delegate.CreateDelegate(typeof(CalculateVesselAeroForcesDelegate), method);\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            if (_CalculateVesselAeroForcesDelegate != null)\u003Cbr\u003E            {\u003Cbr\u003E                farInstalled = true;\u003Cbr\u003E                Debug.Log(\u0022Loaded FARAPI\u0022);\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022FARAPI found but could not delegate API.\u0022);\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2015-05-09T16:45:38Z","Content":"\n\u003Cp\u003EI\u0027d try something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E            AssemblyLoader.LoadedAssembly FAR = AssemblyLoader.loadedAssemblies.SingleOrDefault(a =\u0026gt; a.dllName == \u0022FerramAerospaceResearch\u0022);\u003Cbr\u003E            if (FAR != null)\u003Cbr\u003E            {\u003Cbr\u003E                MethodInfo method = null;\u003Cbr\u003E                try\u003Cbr\u003E                {\u003Cbr\u003E                    method = FAR.assembly.GetTypes().SingleOrDefault(t =\u0026gt; t.Name == \u0022FARAPI\u0022).GetMethod(\u0022CalculateVesselAeroForces\u0022);\u003Cbr\u003E                }\u003Cbr\u003E                catch (Exception e)\u003Cbr\u003E                {\u003Cbr\u003E                    UnityEngine.Debug.LogError(\u0022Error finding the method definition\\n\u0022 \u002B e.StackTrace);\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E                try\u003Cbr\u003E                {\u003Cbr\u003E                    Vector3 force = new Vector3(), torque = new Vector3();\u003Cbr\u003E                    method.Invoke(null, new object[] { FlightGlobals.ActiveVessel, force, torque, Vector3.up, 0d });\u003Cbr\u003E                }\u003Cbr\u003E                catch (Exception e)\u003Cbr\u003E                {\u003Cbr\u003E                    UnityEngine.Debug.LogError(\u0022Error invoking method\\n\u0022 \u002B e.StackTrace);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027d start with this. I remember having myself problems when I dealt with reflection and delegates, and somehow delegates just never really worked, and I ended up sticking with just infoking the MethodInfo. So yeah I suggest taking it down bit by bit this way to find what exactly is going wrong.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2015-05-09T17:30:22Z","Content":"\n\u003Cp\u003EYour MethodInfo needs to be created with the all of the arguments that the original method uses.\u003C/p\u003E\u003Cp\u003EThis:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        var method = farapi.GetMethod(\u0022CalculateVesselAeroForces\u0022, new Type[] { typeof(Vessel), typeof(Vector3), typeof(Vector3), typeof(Vector3), typeof(double) });\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Einstead of this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E       var method = farapi.GetMethod(\u0022CalculateVesselAeroForces\u0022);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI suspect that something special is needed for the first two, out Vector3\u0027s.\u003C/p\u003E\n"},{"CreatedByName":"atomicfury","CreatedById":120037,"CreatedDateTime":"2015-05-09T18:05:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EI\u0027d try something like this:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E  snipped code \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027d start with this. I remember having myself problems when I dealt with reflection and delegates, and somehow delegates just never really worked, and I ended up sticking with just infoking the MethodInfo. So yeah I suggest taking it down bit by bit this way to find what exactly is going wrong.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003E@stupid_chris\u003C/strong\u003E, Thanks! I had tried an invoke earlier and messed that up somehow and fell back to delegates. I read somewhere that delegates are faster but that may not matter here. This looks cleaner so I\u0027ll give it a try. In the meantime though DMagic gave me a clue on what else I was doing wrong.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EYour MethodInfo needs to be created with the all of the arguments that the original method uses.\u003Cp\u003EThis:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        var method = farapi.GetMethod(\u0022CalculateVesselAeroForces\u0022, new Type[] { typeof(Vessel), typeof(Vector3), typeof(Vector3), typeof(Vector3), typeof(double) });\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Einstead of this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E       var method = farapi.GetMethod(\u0022CalculateVesselAeroForces\u0022);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI suspect that something special is needed for the first two, out Vector3\u0027s.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003E@DMagic\u003C/strong\u003E, Since the method isn\u0027t overloaded it appears the method gets reflected correctly without the type. One your second point, your suspicions are correct - the \u003Cstrong\u003Eout\u003C/strong\u003E is significant on the force and torque and it needs to be specified. Also, when I put the out on the arguments, I found out that you have to pass a Vector3 instead of a Vector3d. After some more googling I found I also needed to specify some Bindingflags which seemed to help.\u003C/p\u003E\u003Cp\u003ESo now I have two working reflection options. It compiles and, well, there is something else wrong. But not this. Thanks! After I clean the code up I\u0027ll post something for future reference.\u003C/p\u003E\n"}]}