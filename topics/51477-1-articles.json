{"TopicId":51477,"ForumId":55,"TopicTitle":"patched conics aerobraking calculator.","CreatedByName":"Whirligig Girl","CreatedById":36077,"CreatedDateTime":"2013-11-01T22:50:13Z","PageNum":1,"Articles":[{"CreatedByName":"Whirligig Girl","CreatedById":36077,"CreatedDateTime":"2013-11-01T22:50:13Z","Content":"\n\u003Cp\u003EIf your trajectory enters the atmosphere, it\u0027d be nice to know where your trajectory would be after your atmospheric encounter.\u003C/p\u003E\n"},{"CreatedByName":"Hanoj","CreatedById":90323,"CreatedDateTime":"2013-11-01T22:59:52Z","Content":"\n\u003Cp\u003EThis would be hard to calculate, but if SQUAD implemented this it would make reentry much more accurate.\u003C/p\u003E\n"},{"CreatedByName":"boomerdog2000","CreatedById":57643,"CreatedDateTime":"2013-11-01T23:21:11Z","Content":"\n\u003Cp\u003EMechjeb can do it accurately, so we know it\u0027s possible, it\u0027s probably just not a priority right now.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-11-02T00:02:25Z","Content":"\n\u003Cp\u003Eid love to have this. you would probibly have to run an integral from the point of atomspheric interface to determine the resulting orbit on exit. so it would be less than real time, but i think it could be done.\u003C/p\u003E\n"},{"CreatedByName":"RocketPilot573","CreatedById":62803,"CreatedDateTime":"2013-11-02T00:10:08Z","Content":"\n\u003Cp\u003EWe defiantly need this, it\u0027s the main reason why I got Mechjeb! I don\u0027t even use the autopilot!\u003C/p\u003E\n"},{"CreatedByName":"Fox62","CreatedById":23673,"CreatedDateTime":"2013-11-02T00:18:17Z","Content":"\n\u003Cp\u003EThis shouldn\u0027t actually be too hard. Just have the game figure out what your coefficient of drag is, have it figure out what the force of drag at the lowest altitude that you are going to hit is, crunch the numbers, and show us what the results are.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2013-11-02T00:33:48Z","Content":"\n\u003Cp\u003ETheoretically it could be approximated by a static table calculated beforehand for each planet with values in between approximated by regression. Indexed by two orbital parameters such as semi-major axis and eccentricity and coefficient of drag, assuming the ship has no lift. \u003C/p\u003E\u003Cp\u003EOf course that would be very off for spaceplanes because for these it\u0027s very important how exactly are you passing through.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-11-02T01:53:36Z","Content":"\n\u003Cp\u003Ething is the amount of drag would need to be computed on a point by point basis. it would be somewhat dependent on your orientation. going nose to the wind would be completely different than coming in broadside. would probibly be computed in a nose to the wind fashion (or whatever control from hear part would need to have its z(y?) axis be tangential to your trajectory) throughout your maneuver. meaning your ship has to be built not to flip around or flail uncontrollably (which could effect your cross section).\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2013-11-02T08:04:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nuke\u0022 data-cite=\u0022Nuke\u0022\u003E\u003Cdiv\u003Ething is the amount of drag would need to be computed on a point by point basis. it would be somewhat dependent on your orientation. going nose to the wind would be completely different than coming in broadside. would probibly be computed in a nose to the wind fashion (or whatever control from hear part would need to have its z(y?) axis be tangential to your trajectory) throughout your maneuver. meaning your ship has to be built not to flip around or flail uncontrollably (which could effect your cross section).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs far as I understant KSP\u0027s drag model, your orientation is irrelevant. It is relevant only for parts which produce lift. Or when you\u0027re using some more realistic aerodynamic model such as FAR.\u003C/p\u003E\n"},{"CreatedByName":"BrokenPhysics","CreatedById":85559,"CreatedDateTime":"2013-11-02T08:07:28Z","Content":"\n\u003Cp\u003E@Nuke: afaik, at the moment drag is completely unaffected by the orientation of your craft. Though this will probably change when squad does overhaul the atmospheric model.\u003C/p\u003E\u003Cp\u003EThough I\u0027d like to see this in game, I fear it would be quite heavy on physics-calculation, which is already the bottleneck of the game. Especially at launch this could be a problem (highest part count and deep in atmosphere).\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-11-02T08:16:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BrokenPhysics\u0022 data-cite=\u0022BrokenPhysics\u0022\u003E\u003Cdiv\u003E@Nuke: afaik, at the moment drag is completely unaffected by the orientation of your craft. Though this will probably change when squad does overhaul the atmospheric model.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENope, it does \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Every part has an \u0022angular drag\u0022 value, and that\u0027s pretty much that. Else if you would drop a fuel tank from orbit on reentry, it would look like it tumbles down freely instead of adopting the most aerodynamic position naturally, which they currently do.\u003C/p\u003E\n"},{"CreatedByName":"Seret","CreatedById":41409,"CreatedDateTime":"2013-11-02T08:35:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022boomerdog2000\u0022 data-cite=\u0022boomerdog2000\u0022\u003E\u003Cdiv\u003EMechjeb can do it accurately, so we know it\u0027s possible, it\u0027s probably just not a priority right now.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBlimey, can it? That\u0027s extremely useful. There are tools online like \u003Ca href=\u0022http://alterbaron.github.io/ksp_aerocalc/\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E, but it won\u0027t do things like Mun to Kerbin maneuvers.\u003C/p\u003E\n"},{"CreatedByName":"BrokenPhysics","CreatedById":85559,"CreatedDateTime":"2013-11-02T09:22:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003E Every part has an \u0022angular drag\u0022 value, and that\u0027s pretty much that. Else if you would drop a fuel tank from orbit on reentry, it would look like it tumbles down freely instead of adopting the most aerodynamic position naturally, which they currently do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood to know \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E But does that angular drag actually increase drag, or does it just impose torque on the part?\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-11-02T09:23:19Z","Content":"\n\u003Cp\u003Eit does appear there is currently at least some directionality to the drag model, at least enough for the angle of your ship to affect your trajectory in an aerobraking maneuver. probibly some room for improvement. \u003C/p\u003E\u003Cp\u003Ehow about a drag model involving a system of triaxial ellipsoids, which would represent parts drag parameters. the diameter of each axis represents the cross section of the part on that axis. these ellipsoids can have their own position and orientation with regards to the ship. you can slice any ellipsoid at any angle through the center and get a ellipse as a result. you can then use ellipse-ellipse intersection maths to determine the area of overlap between any two ellipses. \u003C/p\u003E\u003Cp\u003Eparts would be sorted front to back with regards to airflow and transform (from ship local to wind space coordinates where z is the axis of airflow) is applied to the ellipsoids. ellipsoids would then be sliced along the xy plane to get the ellipse to represent the cross sectional area of the part. this ellipsoid would be scaled by the cD (this could also be dimensional so you have different cD at different angles of attack). this allows for drag happy parts to have very large areas, making them difficult to cull out completely (parts in rear thus can affect stability). \u003C/p\u003E\u003Cp\u003Ethen a process of culling starts with the forward most part, and works its way back, each time determining what factor of the current ellipse is covered by parts in front of it. the ellipse is then scaled by this factor for further part culling. this process repeats until the last part is scaled. the area of each ellipse would then be used to determine the drag forces on each part. you can not only determine the overall net drag of the system, but also local drag, and therefore net torque from drag for the whole system.\u003C/p\u003E\n"},{"CreatedByName":"Linear","CreatedById":26619,"CreatedDateTime":"2013-11-02T09:46:05Z","Content":"\n\u003Cp\u003EThat sounds resource intensive.\u003C/p\u003E\u003Cp\u003ERead some other posts of yours recently, all good. Like this one.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-11-02T10:45:48Z","Content":"\n\u003Cp\u003Eyou might be able to simplify stuff, like using spheres instead of ellipsoids, and circle-circle intersections instead of ellipse-ellipse intersection. ksp seems to have a min and max drag and then use the aoa of the part to determine which to use (lerp between min at 0 aoa and max at 180). that is probibly good enough. i assume the angular drag parameter is how much extra drag the part produces at maximum aoa, and is reduced to 0 when aoa is 0. the sum of the two would be equivalent to your cross sectional area. non zero values of angular drag might result in torque to turn the part into the wind. which kinda makes sense and is adequate to explain part behavior in the atmosphere. \u003C/p\u003E\u003Cp\u003Edetermining our part cross sections the ksp way would also work. the result would be a one dimensional value that would be represented by the area of a circle, and those are easy to intersect. then just do the nose to tail occlusion factoring (i just made that up) thing. the result would be close enough to be useful.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-02T10:52:36Z\u0022 title=\u002211/02/2013 10:52  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 2, 2013\u003C/time\u003E by Nuke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TMS","CreatedById":57134,"CreatedDateTime":"2013-11-02T11:02:12Z","Content":"\n\u003Cp\u003ETo be honest, I\u0027d be happy if someone managed to take the code out of mechjeb\u0027s aerobraking module and made it a standalone mod. It\u0027s the one thing about mechjeb that I really miss.\u003C/p\u003E\n"},{"CreatedByName":"Fox62","CreatedById":23673,"CreatedDateTime":"2013-11-03T17:43:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BrokenPhysics\u0022 data-cite=\u0022BrokenPhysics\u0022\u003E\u003Cdiv\u003E@Nuke: afaik, at the moment drag is completely unaffected by the orientation of your craft. Though this will probably change when squad does overhaul the atmospheric model.\u003Cp\u003EThough I\u0027d like to see this in game, I fear it would be quite heavy on physics-calculation, which is already the bottleneck of the game. Especially at launch this could be a problem (highest part count and deep in atmosphere).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESimple. Turn it off until you reach orbit for the first time.\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-11-03T17:48:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BrokenPhysics\u0022 data-cite=\u0022BrokenPhysics\u0022\u003E\u003Cdiv\u003EThough I\u0027d like to see this in game, I fear it would be quite heavy on physics-calculation, which is already the bottleneck of the game. Especially at launch this could be a problem (highest part count and deep in atmosphere).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMechJeb calculates it and this does not take too much CPU, so I might not be as resource expensive as one might think ...\u003C/p\u003E\n"}]}