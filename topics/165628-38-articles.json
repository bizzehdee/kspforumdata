{"TopicId":165628,"ForumId":34,"TopicTitle":"[KSP 1.12.x] kOS v1.4.0.0: kOS Scriptable Autopilot System","CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-09-18T16:56:54Z","PageNum":38,"Articles":[{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-16T08:35:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223619564\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560633880\u0022 data-ipsquote-userid=\u0022190349\u0022 data-ipsquote-username=\u0022TBenz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, TBenz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n1.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\nLOCK STEERING TO PROGRADE.\u003C/pre\u003E\n\u003Cp\u003E\n2.\u00A0\u003Ca href=\u0022https://ksp-kos.github.io/KOS/commands/flight/systems.html#stock-action-groups\u0022 rel=\u0022external nofollow\u0022\u003EStock Action Groups\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks for the help.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, i made a script to get into orbit... my rocket (\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E sputnik 1) just after launch started gone to a state of spinning along the ground relative axis. Can someone figure out what\u0027s wrong in this script? I\u0027m unable to do it even after an hour.\n\u003C/p\u003E\n\u003Cp\u003E\nclearscreen.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nfrom {local countdown is 10.} until countdown = 0 step {set countdown to countdown - 1.} do {print countdown \u002B \u0022.\u0022. wait 1.}\u003Cbr\u003E\nprint \u00220, spooling engines...\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nstage. lock throttle to 1.0. lock steering to heading(90,90).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nwait 3. stage. print \u0022liftoff!\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nif ship:velocity:surface:mag \u0026lt; 100 {lock steering to heading(90,90).}\u003Cbr\u003E\nlock steering to heading(90,85).\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nlock steering to prograde.\n\u003C/p\u003E\n\u003Cp\u003E\nwait 86. stage.\n\u003C/p\u003E\n\u003Cp\u003E\nwait until ship:maxthrust = 0.\n\u003C/p\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-16T09:21:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223619766\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560674144\u0022 data-ipsquote-userid=\u0022182439\u0022 data-ipsquote-username=\u0022KnedlikMCPE\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n44 minutes ago, KnedlikMCPE said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nif\u003Cspan\u003E\uFEFF\u003C/span\u003E ship:velocity:surface:mag \u0026lt; 100 {l\u003Cspan\u003E\uFEFF\u003C/span\u003Eock steering to heading(90,90).}\u003Cspan\u003E\uFEFF\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat should probably be wait until ship:velocity:surface:mag \u0026gt;= 100.\n\u003C/p\u003E\n\u003Cp\u003E\nAt the moment you immediately try to pitch over after liftoff (it checks the if once then carries on).\n\u003C/p\u003E\n"},{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-16T11:11:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223619776\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560676901\u0022 data-ipsquote-userid=\u0022196830\u0022 data-ipsquote-username=\u0022Flibble\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Flibble said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat should probably be wait until ship:velocity:surface:mag \u0026gt;= 100.\n\u003C/p\u003E\n\u003Cp\u003E\nAt the moment you immediately try to pitch over after liftoff (it checks the if once then carries on).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks. That\u2019s the first part fixed. Now, i got problem at \u201Clock steering to prograde\u201D, where it isn\u2019t following the prograde marker but pitching to about 20-30 degrees surface axis.\n\u003C/p\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-16T11:49:55Z","Content":"\n\u003Cp\u003E\nPrograde is probably orbital prograde. Try Ship:velocity:surface.\n\u003C/p\u003E\n"},{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-16T12:34:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223619815\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560685795\u0022 data-ipsquote-userid=\u0022196830\u0022 data-ipsquote-username=\u0022Flibble\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n43 minutes ago, Flibble said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPrograde is probably orbital prograde. Try Ship:velocity:surface.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u2019ve changed it and it\u2019s following the prograde now. Altho, the ships wiggles left and right from the prograde (on navball). That\u2019s final thing i need to repair.\n\u003C/p\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-16T13:01:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223619822\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560688441\u0022 data-ipsquote-userid=\u0022182439\u0022 data-ipsquote-username=\u0022KnedlikMCPE\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n26 minutes ago, KnedlikMCPE said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u2019ve changed it and it\u2019s following the prograde now. Altho, the ships wiggles left and right from the prograde (on navball). That\u2019s final thing i need to repair.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHow much wiggle? If could be the steering manager tuning, which is annoying to fix.\n\u003C/p\u003E\n\u003Cp\u003E\nI have a rocket that won\u0027t settle its roll no matter what I do with steering.\n\u003C/p\u003E\n"},{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-16T15:40:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223619833\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560690098\u0022 data-ipsquote-userid=\u0022196830\u0022 data-ipsquote-username=\u0022Flibble\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Flibble said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHow much wiggle? If could be the steering manager tuning, which is annoying to fix.\n\u003C/p\u003E\n\u003Cp\u003E\nI have a rocket that won\u0027t settle its roll no matter what I do with steering.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOnce i get to my pc, i will make a video (with watermark if its ok) showing it. By eye, i could say up to 5 degrees on the heading axis. I don\u2019t mean roll but yaw as this happens at pitch program after reaching prograde vector relative to the ground 90,85. No roll but yaw.\n\u003C/p\u003E\n"},{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-17T12:16:43Z","Content":"\n\u003Cp\u003E\nCan someone answer the flying left and right from the prograde marker and how to fix it?\n\u003C/p\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-17T13:05:04Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223620350\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560773803\u0022 data-ipsquote-userid=\u0022182439\u0022 data-ipsquote-username=\u0022KnedlikMCPE\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n48 minutes ago, KnedlikMCPE said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCan someone answer the flying left and right from the prograde marker and how to fix it?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://ksp-kos.github.io/KOS/commands/flight/cooked.html#cooked-tuning\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp-kos.github.io/KOS/commands/flight/cooked.html#cooked-tuning\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-17T14:14:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223620374\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560776704\u0022 data-ipsquote-userid=\u0022196830\u0022 data-ipsquote-username=\u0022Flibble\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Flibble said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://ksp-kos.github.io/KOS/commands/flight/cooked.html#cooked-tuning\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp-kos.github.io/KOS/commands/flight/cooked.html#cooked-tuning\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHi again, thanks for the help! I edited the script but... it can\u2019t understand command \u201Cwait 10.\u201D Why?\n\u003C/p\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-17T16:16:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223620400\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560780898\u0022 data-ipsquote-userid=\u0022182439\u0022 data-ipsquote-username=\u0022KnedlikMCPE\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, KnedlikMCPE said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHi again, thanks for the help! I edited the script but... it can\u2019t understand command \u201Cwait 10.\u201D Why?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat error do you get?\n\u003C/p\u003E\n"},{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-17T16:40:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223620478\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560788181\u0022 data-ipsquote-userid=\u0022196830\u0022 data-ipsquote-username=\u0022Flibble\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 minutes ago, Flibble said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat error do you get?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat kOS cannot understand. Simply the one that you get for example when you forgot to add period at the end. Error indicator arrow is pointing for w in wait, which is usually when it\u2019s that command.\n\u003C/p\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-17T16:55:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223620494\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560789619\u0022 data-ipsquote-userid=\u0022182439\u0022 data-ipsquote-username=\u0022KnedlikMCPE\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 minutes ago, KnedlikMCPE said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat kOS cannot understand. Simply the one that you get for example when you forgot to add period at the end. Error indicator arrow is pointing for w in wait, which is usually when it\u2019s that command.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCheck the lines above. It usually means you made a mistake before that and the parser had only just caught up.\n\u003C/p\u003E\n"},{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-17T17:34:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223620505\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560790559\u0022 data-ipsquote-userid=\u0022196830\u0022 data-ipsquote-username=\u0022Flibble\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n37 minutes ago, Flibble said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCheck the lines above. It usually means you made a mistake before that and the parser had only just caught up.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCan\u0027t find any mistake above. I copied the script:\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m not sure about the roll manager tho.\n\u003C/p\u003E\n\u003Cp\u003E\n---------------------------------------------------\n\u003C/p\u003E\n\u003Cp\u003E\nclearscreen.\n\u003C/p\u003E\n\u003Cp\u003E\n//Put into desired state.\u003Cbr\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003Esas\u003C/abbr\u003E off.\u003Cbr\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E off.\u003Cbr\u003E\nbrakes off.\u003Cbr\u003E\ngear off.\u003Cbr\u003E\nlights off.\n\u003C/p\u003E\n\u003Cp\u003E\n//Countdown loop.\u003Cbr\u003E\nfrom {local countdown is 10.} until countdown = 0 step {set countdown to countdown - 1.} do {print countdown \u002B \u0022.\u0022. wait 1.}\u003Cbr\u003E\nprint \u00220, spooling engines...\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n//Engine spool-up.\u003Cbr\u003E\nstage. lock throttle to 1.0. lock steering to heading(90,90).\n\u003C/p\u003E\n\u003Cp\u003E\n//Wait while spooling and clamp release.\u003Cbr\u003E\nwait 3. stage. print \u0022liftoff!\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n//Detect ship speed of 100m/s\u003Cbr\u003E\nwait until ship:velocity:surface:mag \u0026gt;= 100.\u003Cbr\u003E\nprint \u0022Pitch program.\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n//Pitch program for 116 seconds.\u003Cbr\u003E\nset steeringmanager:yawts to 5. set steeringmanager:rollts to 5.\u003Cbr\u003E\nlock steering to heading(90,85).\u003Cbr\u003E\nwait 10.\u00A0\u003Cbr\u003E\nlock steering to steer. set steer to heading(90,80).\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nset steer to heading(90,75).\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nset steer to heading(90,70). set steeringmanager:rollts to 10. set steeringmanager:yawts to 10.\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nset steer to heading(90,65).\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nset steer to heading(90,60). set steeringmanager:rollts to 15. set steeringmanager:yawts to 15\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nset steer to heading(90,55).\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nset steer to heading(90,50). set steeringmanager:rollts to 20. set steeringmanager:yawts to 20.\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nset steer to heading(90,45).\u003Cbr\u003E\nwait 10.\u003Cbr\u003E\nset steer to heading(90,40). set steeringmanager:rollts to 25. set steeringmanager:yawts to 25.\u003Cbr\u003E\nwait 10.\u00A0\u003Cbr\u003E\nset steer to heading(90,35).\u003Cbr\u003E\nwait 4.\u003Cbr\u003E\nset steering to ship:velocity:surface. set steeringmanager:rollts to 30.\u003Cbr\u003E\nset steeringmanager:yawts to 30.\n\u003C/p\u003E\n\u003Cp\u003E\n//Booster seperation.\u003Cbr\u003E\nwait 4.\u003Cbr\u003E\nstage.\n\u003C/p\u003E\n\u003Cp\u003E\n//Wait to end program only when fuel is on 0.\u003Cbr\u003E\nwait until ship:maxthrust = 0.\n\u003C/p\u003E\n\u003Cp\u003E\n-end-\n\u003C/p\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-17T17:37:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223620534\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560792892\u0022 data-ipsquote-userid=\u0022182439\u0022 data-ipsquote-username=\u0022KnedlikMCPE\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, KnedlikMCPE said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nset\u003Cspan\u003E\uFEFF\u003C/span\u003E steeringmanager:yawts to 15\u003Cspan\u003E\uFEFF\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMissing a period.\n\u003C/p\u003E\n"},{"CreatedByName":"KnedlikMCPE","CreatedById":182439,"CreatedDateTime":"2019-06-17T17:47:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223620537\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221560793032\u0022 data-ipsquote-userid=\u0022196830\u0022 data-ipsquote-username=\u0022Flibble\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 minutes ago, Flibble said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMissing a period.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOof mistake of a beginner. Thanks a lot!\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2019-06-24T08:46:43Z","Content":"\n\u003Cp\u003E\n(This is a continuation of something that started in another thread over here:)\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u002234556\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed1197381656\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/107461-part-13-graphotron-v043-may-27-2017-track-plot-sensor-flight-data/page/7/\u0026amp;tab=comments\u0026amp;do=embed\u0026amp;comment=3624188\u0026amp;embedComment=3624188\u0026amp;embedDo=findComment#comment-3624188\u0022 style=\u0022height:299px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223624188\u0022 data-ipsquote-contentid=\u0022107461\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221561345197\u0022 data-ipsquote-userid=\u002257838\u0022 data-ipsquote-username=\u0022TriggerAu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, TriggerAu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cem\u003EWhats the method that kOS etc use to try and read these values? eg. if we exposed the values as Properties, vs fields, vs KSPFields would it make a difference or usage in kOS, etc?\u003C/em\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll try to explain it tersely, since I figure you don\u0027t want to go down the rabbit-hole of getting deep into the kOS code.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003EProblem 1 - reading values that don\u0027t always update if the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E isn\u0027t showing:\u003C/span\u003E\u003Cbr\u003E\u003Cbr\u003E\nAn example of a \u0022read\u0022 value that seems to only be reliable if the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E is open is this: On a ModuleRoboticServoPiston, the\u00A0 KSPField \u0022Current Extension\u0022, we get the BaseField from the gui name on the panel with this code (this code is generic for all PartModules, but so far has only exhibited this problem on the new servo PartModules):\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// Return the field itself that goes with the name (the BaseField, not the value).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;param name=\u0022cookedGuiName\u0022\u0026gt;The case-insensitive guiName (or name if guiname is empty) of the field.\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;returns\u0026gt;a BaseField - a KSP type that can be used to get the value, or its GUI name or its reflection info.\u0026lt;/returns\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EBaseField\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetField\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring cookedGuiName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFields\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECast\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EBaseField\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;().\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFirstOrDefault\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efield \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EEquals\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetFieldName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efield\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cookedGuiName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStringComparison\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECurrentCultureIgnoreCase\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThen once that BaseField is found, then we retrieve its value with this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Efield.GetValue(partModule)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis *almost* works all the time.\u00A0 If the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E is open, it works.\u00A0 If the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E *was* recently open it works *for a short while*, but eventually the value freezes and stops being updated if the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E was closed maybe 30 seconds or so ago.\u00A0 (Maybe the amount of time it takes for something inside SQUAD\u0027s code to get garbage collected?\u00A0 I don\u0027t know, but if *feels* about that long.)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:18px;\u0022\u003EProblem 2 - Setting a KSPField that has a UIFloatRange control on it (sliders in the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E that are tied to floats) that has range values that describe restrictions the UI seems to be ignoring or getting from somewhere else.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nExample: There is a KSPField called \u0022Target Extension\u0022, on the ModuleRoboticServoPiston.\n\u003C/p\u003E\n\u003Cp\u003E\nThe actual behaviour the game has when a player manually uses the mouse on that field in the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E appears to be this:\u003Cbr\u003E\nThe allowed range of values is [0.0 .. 2.4], without enforcing a stepIncrement (i.e. it allows the slider to land on any un-rounded value like 0.342010301 or whatever.\u00A0 It may round the display using a string formatter, but the actual value isn\u0027t rounded.)\n\u003C/p\u003E\n\u003Cp\u003E\nBut the behaviour the game appears to be \u0022advertising\u0022 with its UIFloatRange control attached to that KSPField is totally unlike that.\u00A0 The UIFloatRange is claiming the following which just isn\u0027t true at all:\u003Cbr\u003E\nThe allowed range of values is [0.0 to 100.0], with rounding to the nearest 1.0.\u00A0 (UIFloatRange.minValue = 0f, UIFloatRange.maxValue =100f, UIFloatRange.stepIncrement = 1f).\n\u003C/p\u003E\n\u003Cp\u003E\nThe effect this is having on kOS is that because kOS has to enforce these UIFloatRange rules in all *other* PartModules to prevent scripts from \u0022cheating\u0022 (see below), any script attempting to set a ModuleRoboticServoPiston\u0027s extension to something like 0.342 will end up setting it to 0 instead.\u00A0 If it tries to set it to 0.51, it will become 1.0.\u00A0 Because kOS is enforcing what UIFloatRange.stepIncrement is claiming, and in this case it\u0027s claiming Target Extension has to be rounded to the nearest 1.0, that means a kOS script can only set the piston to exactly 0 meters, or 1 meter, or 2 meters, with no other in-between values allowed.\n\u003C/p\u003E\n\u003Cp\u003E\nI have the beginnings of a special derived class of the PartModule wrapper in kOS to try to discover when the PartModule is of type BaseServo and when it is, to suppress its normal enforcement of these ranges and instead look for the values from elsewhere (I\u0027ve worked out what I think is the path to get from the field to its actual ranges in these cases (which are taken from one of the other fields set in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E) , but that\u0027s not an optimal solution as it requires treating BaseServo PartModules differently from all the rest.\u00A0 Instead of a test that says \u0022if type is BaseServo then look for the range value here instead\u0022, I\u0027d prefer something that is class-agnostic about it, if there is a data field or property that tells me \u0022this UIFloatRange\u0027s values should be taken from over Here instead\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E(An Explanation of why kOS has to enforce the UIFloatRange min, max, and stepIncrement values for all the other PartModules): \u00A0 Many of KSP\u0027s PartModules (both in stock parts and in modded parts) appear to have no protection against a mod like KSP setting KSPFields to values a user wouldn\u0027t be allowed to in the UI.\u00A0 kOS has those range enforcements because otherwise a kerboscript could simply do something like set an engine\u0027s Thrust Limiter to 5000%, cheating the engine to be 50 times stronger than it should be, or set a Reaction Wheel\u0027s \u0022Wheel Authority\u0022 to 400% and cheat the wheel to be 4 times stronger than it should be. kOS takes the strategy of not allowing a script to do anything a player isn\u0027t allowed to do, so we check what the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E\u0027s controls are allowing and enforce that.\u00A0 (Not just float ranges, but also not letting a script set a value when it\u0027s marked as hidden from the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E right now, or press a KSPEvent button when the PartModule has decided that it shouldn be masked from view on the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E right now (thus a script can\u0027t for example, Decouple an already decoupled docking port).)\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nOne problem with what kOS is doing is that I know it\u0027s not proper form to try to make an API out of a user interface, but we do it because it\u0027s the only reliable way to ensure we aren\u0027t letting a kerboscript do something the player isn\u0027t allowed to, or that would confuse other PartModules\u0027 code.\u00A0 (Just because a class made a KSPFIeld or a KSPEvent public doesn\u0027t mean they expected any random user to be able to alter the value at will - so we only alter the values when the UI would normally allow it - under the assumption that a PartModule would be written to expect the value to change unexpectedly if it has opened it up for players to mess with it via the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E.\u00A0 So far this technique has worked well as a generic way to work on all PartModules without having to write hundreds of special case kOS wrapper classes to access the hundreds of different kinds of PartModules.\u00A0 But the servos in Breaking Ground seem to have broken some of our assumptions about how to detect what PartModules allow and don\u0027t allow.)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-24T08:56:04Z\u0022 title=\u002206/24/2019 08:56  AM\u0022 data-short=\u00225 yr\u0022\u003EJune 24, 2019\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"FloppyRocket","CreatedById":173990,"CreatedDateTime":"2019-06-24T22:32:30Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003ETopic: How to traverse\u00A0the list of orbit patches in a maneuver, without just using a huge set of if-statements.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI did a few searches and couldn\u0027t find this topic, sorry if it is a duplicate.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m trying to write a kOS script (based on the \u0022cheerskevin\u0022 youtube series) that will auto-launch from Kerbin to a hoverslam landing on Minmus.\u00A0 This is his video series that uses a ternary search to find the time when the current trajectory will have the minimum distance to the Mun. I\u0027m expanding the script so it can auto-land on Minmus instead.\n\u003C/p\u003E\n\u003Cp\u003E\nObviously, the Mun occasionally gets in the way, so the trajectory planner has to cope with the maneuver having multiple orbit patches. Sometimes these Mun encounters provide a nice gravity assist, so that\u0027s handy.\n\u003C/p\u003E\n\u003Cp\u003E\nBut my code has\u00A0a problem.\n\u003C/p\u003E\n\u003Cp\u003E\nIs there a way to artfully traverse the list of patches within a maneuver node, so that I can find the right patch on which to base the \u0022proximity to Minmus\u0022 calculations?\n\u003C/p\u003E\n\u003Cp\u003E\nI tried this sort of program flow (just pseudocode)\n\u003C/p\u003E\n\u003Cp\u003E\nif maneuver:orbit:hasNextPatch { set orb to orbit:nextPatch }\n\u003C/p\u003E\n\u003Cp\u003E\n...within a loop, trying to find a patch that applies to Minmus, or stop when it finds that hasNextPatch is false,. But\u00A0the assignment of \u0022set orb to ...\u0022 doesn\u0027t seem to work.\u00A0I got an infinite loop with every patch belonging to\n\u003C/p\u003E\n\u003Cp\u003E\nKerbin.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EUpdate:\u003C/strong\u003E Aha. I think I found the problem - I was stupidly using the variable \u0027obt\u0022 for my local orbit, but \u0022obt\u0022 is a reserved keyword for \u0022orbit\u0022. That might have been monkeying up the works.\n\u003C/p\u003E\n\u003Cp\u003E\nThis seems to get the job done:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E  // note: \u0027m\u0027 is the current maneuver node  \n  set orb to m:orbit.\n  // traverse the list of patches\n  until not orb:hasnextpatch {\n\tprint \u0022Body:\u0022 \u002B orb:body.\n\tprint \u0022ecc :\u0022 \u002B orb:eccentricity.\n\tprint \u0022Per :\u0022 \u002B orb:periapsis.\n\tset orb to orb:nextpatch.\n  }\n  \n  print \u0022Final patch: Body \u0022 \u002B orb:body.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI\u0027ll leave this post here in case others find it useful.\n\u003C/p\u003E\n\u003Cp\u003E\nThe basic task is to traverse all the patches from a single maneuver that causes a trajectory that starts in the Kerbin \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E, flies into the Mun \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E, then back into the Kerbin \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E, then into\u00A0the Minmus \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E. That\u0027s four patches, all triggered by one Maneuver.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n- Tom\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-25T04:47:40Z\u0022 title=\u002206/25/2019 04:47  AM\u0022 data-short=\u00225 yr\u0022\u003EJune 25, 2019\u003C/time\u003E by FloppyRocket\u003C/strong\u003E\n\u003Cbr\u003EProvided my own solution, added more info\n\u003C/span\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2019-06-24T23:50:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-gramm=\u0022false\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223624305\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221561366003\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents ipsClearfix\u0022 data-gramm=\u0022false\u0022\u003E\n\u003Cp\u003E\n(This is a continuation of something that started in another thread over here:)\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 class=\u0022ipsEmbed_finishedLoading\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u002234556\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed2696582171\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/107461-part-13-graphotron-v043-may-27-2017-track-plot-sensor-flight-data/page/7/\u0026amp;tab=comments\u0026amp;do=embed\u0026amp;comment=3624188\u0026amp;embedComment=3624188\u0026amp;embedDo=findComment#comment-3624188\u0022 style=\u0022height: 295px; max-width: 502px; overflow: hidden;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll try to explain it tersely, since I figure you don\u0027t want to go down the rabbit-hole of getting deep into the kOS code.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003EProblem 1 - reading values that don\u0027t always update if the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E isn\u0027t showing:\u003C/span\u003E\u003Cbr\u003E\u003Cbr\u003E\nAn example of a \u0022read\u0022 value that seems to only be reliable if the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E is open is this: On a ModuleRoboticServoPiston, the\u00A0 KSPField \u0022Current Extension\u0022, we get the BaseField from the gui name on the panel with this code (this code is generic for all PartModules, but so far has only exhibited this problem on the new servo PartModules):\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// Return the field itself that goes with the name (the BaseField, not the value).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;param name=\u0022cookedGuiName\u0022\u0026gt;The case-insensitive guiName (or name if guiname is empty) of the field.\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;returns\u0026gt;a BaseField - a KSP type that can be used to get the value, or its GUI name or its reflection info.\u0026lt;/returns\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EBaseField\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetField\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring cookedGuiName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFields\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECast\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EBaseField\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;().\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFirstOrDefault\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efield \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EEquals\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetFieldName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efield\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cookedGuiName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStringComparison\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECurrentCultureIgnoreCase\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThen once that BaseField is found, then we retrieve its value with this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Efield.GetValue(partModule)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis *almost* works all the time.\u00A0 If the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E is open, it works.\u00A0 If the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E *was* recently open it works *for a short while*, but eventually the value freezes and stops being updated if the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E was closed maybe 30 seconds or so ago.\u00A0 (Maybe the amount of time it takes for something inside SQUAD\u0027s code to get garbage collected?\u00A0 I don\u0027t know, but if *feels* about that long.)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:18px;\u0022\u003EProblem 2 - Setting a KSPField that has a UIFloatRange control on it (sliders in the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E that are tied to floats) that has range values that describe restrictions the UI seems to be ignoring or getting from somewhere else.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nExample: There is a KSPField called \u0022Target Extension\u0022, on the ModuleRoboticServoPiston.\n\u003C/p\u003E\n\u003Cp\u003E\nThe actual behaviour the game has when a player manually uses the mouse on that field in the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E appears to be this:\u003Cbr\u003E\nThe allowed range of values is [0.0 .. 2.4], without enforcing a stepIncrement (i.e. it allows the slider to land on any un-rounded value like 0.342010301 or whatever.\u00A0 It may round the display using a string formatter, but the actual value isn\u0027t rounded.)\n\u003C/p\u003E\n\u003Cp\u003E\nBut the behaviour the game appears to be \u0022advertising\u0022 with its UIFloatRange control attached to that KSPField is totally unlike that.\u00A0 The UIFloatRange is claiming the following which just isn\u0027t true at all:\u003Cbr\u003E\nThe allowed range of values is [0.0 to 100.0], with rounding to the nearest 1.0.\u00A0 (UIFloatRange.minValue = 0f, UIFloatRange.maxValue =100f, UIFloatRange.stepIncrement = 1f).\n\u003C/p\u003E\n\u003Cp\u003E\nThe effect this is having on kOS is that because kOS has to enforce these UIFloatRange rules in all *other* PartModules to prevent scripts from \u0022cheating\u0022 (see below), any script attempting to set a ModuleRoboticServoPiston\u0027s extension to something like 0.342 will end up setting it to 0 instead.\u00A0 If it tries to set it to 0.51, it will become 1.0.\u00A0 Because kOS is enforcing what UIFloatRange.stepIncrement is claiming, and in this case it\u0027s claiming Target Extension has to be rounded to the nearest 1.0, that means a kOS script can only set the piston to exactly 0 meters, or 1 meter, or 2 meters, with no other in-between values allowed.\n\u003C/p\u003E\n\u003Cp\u003E\nI have the beginnings of a special derived class of the PartModule wrapper in kOS to try to discover when the PartModule is of type BaseServo and when it is, to suppress its normal enforcement of these ranges and instead look for the values from elsewhere (I\u0027ve worked out what I think is the path to get from the field to its actual ranges in these cases (which are taken from one of the other fields set in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E) , but that\u0027s not an optimal solution as it requires treating BaseServo PartModules differently from all the rest.\u00A0 Instead of a test that says \u0022if type is BaseServo then look for the range value here instead\u0022, I\u0027d prefer something that is class-agnostic about it, if there is a data field or property that tells me \u0022this UIFloatRange\u0027s values should be taken from over Here instead\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E(An Explanation of why kOS has to enforce the UIFloatRange min, max, and stepIncrement values for all the other PartModules): \u00A0 Many of KSP\u0027s PartModules (both in stock parts and in modded parts) appear to have no protection against a mod like KSP setting KSPFields to values a user wouldn\u0027t be allowed to in the UI.\u00A0 kOS has those range enforcements because otherwise a kerboscript could simply do something like set an engine\u0027s Thrust Limiter to 5000%, cheating the engine to be 50 times stronger than it should be, or set a Reaction Wheel\u0027s \u0022Wheel Authority\u0022 to 400% and cheat the wheel to be 4 times stronger than it should be. kOS takes the strategy of not allowing a script to do anything a player isn\u0027t allowed to do, so we check what the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E\u0027s controls are allowing and enforce that.\u00A0 (Not just float ranges, but also not letting a script set a value when it\u0027s marked as hidden from the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E right now, or press a KSPEvent button when the PartModule has decided that it shouldn be masked from view on the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E right now (thus a script can\u0027t for example, Decouple an already decoupled docking port).)\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nOne problem with what kOS is doing is that I know it\u0027s not proper form to try to make an API out of a user interface, but we do it because it\u0027s the only reliable way to ensure we aren\u0027t letting a kerboscript do something the player isn\u0027t allowed to, or that would confuse other PartModules\u0027 code.\u00A0 (Just because a class made a KSPFIeld or a KSPEvent public doesn\u0027t mean they expected any random user to be able to alter the value at will - so we only alter the values when the UI would normally allow it - under the assumption that a PartModule would be written to expect the value to change unexpectedly if it has opened it up for players to mess with it via the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E.\u00A0 So far this technique has worked well as a generic way to work on all PartModules without having to write hundreds of special case kOS wrapper classes to access the hundreds of different kinds of PartModules.\u00A0 But the servos in Breaking Ground seem to have broken some of our assumptions about how to detect what PartModules allow and don\u0027t allow.)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m pretty sure I understand both of these\n\u003C/p\u003E\n\u003Cp\u003E\nProblem 1:\n\u003C/p\u003E\n\u003Cp\u003E\nIs going to be because that is a string field for display and is only worked on when the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E is open to cut down on the string formatting work, Garbage\u00A0and processing. My suggestion will be that we expose a \u0022value\u0022 that\u0027s always updated (if there is\u00A0not already). Is it easier if\u00A0these are fields or methods or irrelevant?\n\u003C/p\u003E\n\u003Cp\u003E\nProblem 2:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis one is more interesting, I can understand the use of the UI fields to help with the limits, but it appears that what you\u0027ve got there is the attributes on the field definition and not the range of the UI Controls themselves. This would be especially common in the robotics parts as the player can change the limits in edit mode. The way we do this in the stock code is to grab the UI_FloatRange control and read its values. Its not a new problem for range controls im sure, but much more obvious with the way they share modules. So a simple method to demonstrate how you could\u00A0read that sorta stuff is below\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022 id=\u0022ips_uid_3648_7\u0022 style=\u0022\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// Get the Min Value from a fields UI Control\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;param name=\u0022p\u0022\u0026gt;PartModule containing the field\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;param name=\u0022fieldName\u0022\u0026gt;the name of the field\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;param name=\u0022minValue\u0022\u0026gt;the min Value from the UI_FloatRange\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;returns\u0026gt;True if the field exists\u0026lt;/returns\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetRangeMinValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPartModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E p\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string fieldName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003Efloat\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E minValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    UI_FloatRange rangeControl\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ep\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFields\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETryGetFieldUIControl\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfieldName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out rangeControl\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        minValue \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rangeControl\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EminValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    minValue \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2019-06-25T06:07:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223624711\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221561420257\u0022 data-ipsquote-userid=\u002257838\u0022 data-ipsquote-username=\u0022TriggerAu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, TriggerAu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m pretty sure I understand both of these\n\u003C/p\u003E\n\u003Cp\u003E\nProblem 1:\n\u003C/p\u003E\n\u003Cp\u003E\nIs going to be because that is a string field for display and is only worked on when the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E is open to cut down on the string formatting work, Garbage\u00A0and processing. My suggestion will be that we expose a \u0022value\u0022 that\u0027s always updated (if there is\u00A0not already). Is it easier if\u00A0these are fields or methods or irrelevant?\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThank you for the reply.\u00A0 Exposing the value as a float (not a string that we in turn have to decode back into a float again) would be ideal.\u00A0 The reason we use the KSPField, KSPEvent, and KSPAction systems to expose PartModules to kOS scripts is that these are universally a system all PartModules use (so we don\u0027t have to write hundreds of different wrapper classes around the hundreds of different kinds of PartModules in the game).\u00A0\u00A0 And they let the players\u0027 scripts use names they can learn by just looking at the game UI.\u00A0 Exposing a KSPfield value on the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E that is readable as a float (not as a string) would be the easiest from our view, as it fits in with what we already do.\u00A0 Also, if it\u0027s a KSPField, BUT it is marked as being hidden from the gui, then what will happen (unless we code a special exception case just for this one instance) is that kOS will still deny a script from seeing it, again under the design principle that any method or field that\u00A0 isn\u0027t explicitly exposed to the player is one kOS assumes it wasn\u0027t given permission to show to the player by the author of the PartModule.\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s an example of what is done with the mod LaserDist - a mod that was designed specifically with kOS in mind.\u00A0 It exposes a \u0022distance\u0022 KSPField on the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E for kOS to be able to read with its generic PartModule KSPField scraping code.\u00A0 The field *does* have some string formatting to the display, *but* that formatting is done by the guiFormat attribute value instead of the field being an *actual* string.\u00A0 i.e. it is defined like this:\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n        /// \u0026lt;summary\u0026gt;Distance the laser is showing to the first collision:\u0026lt;/summary\u0026gt;\n        [KSPField(isPersistant=true, guiName = \u0022Distance\u0022, guiActive = true, guiActiveEditor = true, guiUnits = \u0022m\u0022, guiFormat = \u0022N2\u0022)]\n        public float Distance = 0.0f;\u003C/pre\u003E\n\u003Cp\u003E\nDoing something like that (where the field is really a float, but just displays a string via formatting) means that while the player sees the string with the \u0022m\u0022 attached to the end, rounded to the nearest 1/100th, the actual float value of the field is what a kOS script sees.\u00A0 I have no idea if this is do-able without hassle in the servo modules, or if the string assumption is buried \u0022too deep\u0022 in how it works.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nProblem 2:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis one is more interesting, I can understand the use of the UI fields to help with the limits, but it appears that what you\u0027ve got there is the attributes on the field definition and not the range of the UI Controls themselves. This would be especially common in the robotics parts as the player can change the limits in edit mode. The way we do this in the stock code is to grab the UI_FloatRange control and read its values. Its not a new problem for range controls im sure, but much more obvious with the way they share modules. So a simple method to demonstrate how you could\u00A0read that sorta stuff is below\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// Get the Min Value from a fields UI Control\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;param name=\u0022p\u0022\u0026gt;PartModule containing the field\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;param name=\u0022fieldName\u0022\u0026gt;the name of the field\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;param name=\u0022minValue\u0022\u0026gt;the min Value from the UI_FloatRange\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;returns\u0026gt;True if the field exists\u0026lt;/returns\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetRangeMinValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPartModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E p\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string fieldName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003Efloat\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E minValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    UI_FloatRange rangeControl\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ep\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFields\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETryGetFieldUIControl\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfieldName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out rangeControl\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        minValue \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rangeControl\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EminValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    minValue \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, we do use UI_FloatRange already, but not with that specific code.\u00A0 I didn\u0027t know about the call TryGetFieldUIControl - instead we do it in two steps:\u00A0 Step 1 - Get the field. Step 2 - After getting the field, then use the UI_FloatControl that is attached to that field.\u00A0 It appears that the logic to bypass the range limits of the current field and instead take the range limits from a different field are buried inside this TryGetFieldUIControl call, if I understand what you\u0027re saying.\u00A0 If that is the case then we should be able to fix the problem by using that technique instead.\u00A0 It will require some refactor of what we\u0027re doing,\u00A0 but it if it works in a more universal way then it\u0027s worth it.\u00A0 Thank you for the help, and I\u0027ll be able to try it tomorrow or the day after.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-25T06:17:49Z\u0022 title=\u002206/25/2019 06:17  AM\u0022 data-short=\u00225 yr\u0022\u003EJune 25, 2019\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2019-06-25T09:20:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-gramm=\u0022false\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223624830\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221561442838\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents ipsClearfix\u0022 data-gramm=\u0022false\u0022\u003E\n\u003Cp\u003E\nThank you for the reply.\u00A0 Exposing the value as a float (not a string that we in turn have to decode back into a float again) would be ideal.\u00A0 The reason we use the KSPField, KSPEvent, and KSPAction systems to expose PartModules to kOS scripts is that these are universally a system all PartModules use (so we don\u0027t have to write hundreds of different wrapper classes around the hundreds of different kinds of PartModules in the game).\u00A0\u00A0 And they let the players\u0027 scripts use names they can learn by just looking at the game UI.\u00A0 Exposing a KSPfield value on the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E that is readable as a float (not as a string) would be the easiest from our view, as it fits in with what we already do.\u00A0 Also, if it\u0027s a KSPField, BUT it is marked as being hidden from the gui, then what will happen (unless we code a special exception case just for this one instance) is that kOS will still deny a script from seeing it, again under the design principle that any method or field that\u00A0 isn\u0027t explicitly exposed to the player is one kOS assumes it wasn\u0027t given permission to show to the player by the author of the PartModule.\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s an example of what is done with the mod LaserDist - a mod that was designed specifically with kOS in mind.\u00A0 It exposes a \u0022distance\u0022 KSPField on the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E for kOS to be able to read with its generic PartModule KSPField scraping code.\u00A0 The field *does* have some string formatting to the display, *but* that formatting is done by the guiFormat attribute value instead of the field being an *actual* string.\u00A0 i.e. it is defined like this:\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\n        /// \u0026lt;summary\u0026gt;Distance the laser is showing to the first collision:\u0026lt;/summary\u0026gt;\n        [KSPField(isPersistant=true, guiName = \u0022Distance\u0022, guiActive = true, guiActiveEditor = true, guiUnits = \u0022m\u0022, guiFormat = \u0022N2\u0022)]\n        public float Distance = 0.0f;\u003C/pre\u003E\n\u003Cp\u003E\nDoing something like that (where the field is really a float, but just displays a string via formatting) means that while the player sees the string with the \u0022m\u0022 attached to the end, rounded to the nearest 1/100th, the actual float value of the field is what a kOS script sees.\u00A0 I have no idea if this is do-able without hassle in the servo modules, or if the string assumption is buried \u0022too deep\u0022 in how it works.\n\u003C/p\u003E\n\u003Cp\u003E\nWell, we do use UI_FloatRange already, but not with that specific code.\u00A0 I didn\u0027t know about the call TryGetFieldUIControl - instead we do it in two steps:\u00A0 Step 1 - Get the field. Step 2 - After getting the field, then use the UI_FloatControl that is attached to that field.\u00A0 It appears that the logic to bypass the range limits of the current field and instead take the range limits from a different field are buried inside this TryGetFieldUIControl call, if I understand what you\u0027re saying.\u00A0 If that is the case then we should be able to fix the problem by using that technique instead.\u00A0 It will require some refactor of what we\u0027re doing,\u00A0 but it if it works in a more universal way then it\u0027s worth it.\u00A0 Thank you for the help, and I\u0027ll be able to try it tomorrow or the day after.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks Steve, Ill dig into whats involved in changing those vs new fields vs other plans, etc.\n\u003C/p\u003E\n\u003Cp\u003E\nFor the second one - TryGetFieldUIControl simply replaces the \u0022am I in flight - therefore grab the uiControlFlight logic\u0022 casue we us ethe fields in all scenes. Your probably grabbing the right thing already then from above. the minValue/maxValue/stepIncrement of the UI_FloatRange will be the correct values for the range of the\u00A0\u00A0UI field, but they can/are modified in game at various points. My guess would be that kOS is scraping the attributes of the Field, or scraping the values\u00A0before all the partmodules start/setup and its getting the default attrib values.\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe have a look for that\u00A0timing? from the description above sounds like how we read/write and use the UI_FloatRange fields in many scenes, those min/max/step values are not \u0022non-changing\u0022 by design so the attrib/initial values may not always be the same.\n\u003C/p\u003E\n\u003Cp\u003E\nAs an extra wrinkle/feature, the robotics things like targetExtension are actually KSPAxisFields - this has its own min/max which actually defines the valid range for controller input of the\u00A0field and you could use those regardless of the UI configuration - we matched all of ours to the UI ones, but no guarantees everyone will do that - and that would involve changes that might not be the greatest for you.\n\u003C/p\u003E\n\u003Cp\u003E\nSee how you go with the timing and Ill get back to you on the others. Can you do me a favor and log a \u0022feedback\u0022 in the tracker and list any fields you know are not good for you - like currentExtension on the piston - and I can bundle any work up in one go. Poke the link back here with the number. Ta\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2019-06-25T14:06:40Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223624916\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221561454410\u0022 data-ipsquote-userid=\u002257838\u0022 data-ipsquote-username=\u0022TriggerAu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, TriggerAu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFor the second one - TryGetFieldUIControl simply replaces the \u0022am I in flight - therefore grab the uiControlFlight logic\u0022 casue we us ethe fields in all scenes. Your probably grabbing the right thing already then from above. the minValue/maxValue/stepIncrement of the UI_FloatRange will be the correct values for the range of the\u00A0\u00A0UI field, but they can/are modified in game at various points. My guess would be that kOS is scraping the attributes of the Field, or scraping the values\u00A0before all the partmodules start/setup and its getting the default attrib values.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWe get the range values *at the moment* each time the script is trying to alter the value during flight, not ahead of time.\u00A0 Perhaps there\u0027s a timing issue with the fact that this is happening in FixedUpdate instead of during the GUI pass?\u00A0 At any rate, I\u0027ll re-write it to use this TryGetFieldUIControl and see if that fixes it.\u00A0 I\u0027d prefer to use whatever KSP is using so that if KSP changes again like this in future versions, if I use the API they\u0027re using then I\u0027m more likely to automatically get the right behaviour without making changes.\n\u003C/p\u003E\n\u003Cp\u003E\nAfter I try this today, I\u0027ll make sure to put an issue in the tracker about \u0022problem 1\u0022.\u00A0 First I\u0027ll need to try it for each kind of servo part, to ensure I know which BaseServo\u0027s have the problem.\u00A0 I only know for sure about Pistons, and have been using that as my sole test case so far.\u00A0 I haven\u0027t tried the other servos yet.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-25T14:09:06Z\u0022 title=\u002206/25/2019 02:09  PM\u0022 data-short=\u00225 yr\u0022\u003EJune 25, 2019\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2019-06-25T17:55:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223624916\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221561454410\u0022 data-ipsquote-userid=\u002257838\u0022 data-ipsquote-username=\u0022TriggerAu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, TriggerAu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSee how you go with the timing and Ill get back to you on the others. Can you do me a favor and log a \u0022feedback\u0022 in the tracker and list any fields you know are not good for you - like currentExtension on the piston - and I can bundle any work up in one go. Poke the link back here with the number. Ta\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57838-triggerau/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257838\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57838-triggerau/\u0022 rel=\u0022\u0022\u003E@TriggerAu\u003C/a\u003E - I have tried your advice for \u0022Problem 2\u0022, and as far as I can tell, switching to using TryGetFieldUIControl() fixed that problem perfectly.\u00A0 I don\u0027t know if it was a timing issue or not, since all I had to do was replace my call in the same place in the code with that one instead to make it work.\u00A0 Thanks again for this.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for \u0022Problem 1\u0022 - I made an issue in the KSP bug tracker for that one, as requested.\u00A0 Here\u0027s the link:\u003Cbr\u003E\u003Ca href=\u0022https://bugs.kerbalspaceprogram.com/issues/23003\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://bugs.kerbalspaceprogram.com/issues/23003\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2019-06-27T11:42:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223625115\u0022 data-ipsquote-contentid=\u0022165628\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221561485321\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/25/2019 at 1:55 PM, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57838-triggerau/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257838\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57838-triggerau/\u0022 rel=\u0022\u0022\u003E@TriggerAu\u003C/a\u003E - I have tried your advice for \u0022Problem 2\u0022, and as far as I can tell, switching to using TryGetFieldUIControl() fixed that problem perfectly.\u00A0 I don\u0027t know if it was a timing issue or not, since all I had to do was replace my call in the same place in the code with that one instead to make it work.\u00A0 Thanks again for this.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for \u0022Problem 1\u0022 - I made an issue in the KSP bug tracker for that one, as requested.\u00A0 Here\u0027s the link:\u003Cbr\u003E\u003Ca href=\u0022https://bugs.kerbalspaceprogram.com/issues/23003\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://bugs.kerbalspaceprogram.com/issues/23003\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57838-triggerau/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257838\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57838-triggerau/\u0022 rel=\u0022\u0022\u003E@TriggerAu\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI came across this while researching a related issue, hope it\u0027s ok to do it here.\u00A0 This is not related to KoS, but another mod:\n\u003C/p\u003E\n\u003Cp\u003E\nThis mod is for the editor only.\u00A0 In there, it sets a number of \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E values.\u00A0 The label on these value need to be able to change depending on one of the buttons.\n\u003C/p\u003E\n\u003Cp\u003E\nTesting on KSP 1.7.2\n\u003C/p\u003E\n\u003Cp\u003E\nThere is a callback for each field which is initialized in the OnStart():\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic override void OnStart(StartState state)\n{\n\tbase.OnStart(state);\n\n\tisEnabled = enabled = false;\n\tif (state == StartState.Editor) {\n\t\tinitializeDoTWR();\n\t\tDoTWRChanged(null, null);\n\t}\n}\n\n/// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n/// Field to toggle whether to calculate for TWR or dV\n/// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n[KSPField(\n\tguiName = \u0022TWR or dV\u0022, isPersistant = true, guiActive = false, guiActiveEditor = true ), \n\tUI_Toggle(scene = UI_Scene.Editor, enabledText = \u0022Do TWR\u0022, disabledText = \u0022Do dV\u0022)]\npublic bool DoTWR = Settings.Instance.DoTWR;\n\nprivate void initializeDoTWR()\n{\n\tBaseField field = Fields[\u0022DoTWR\u0022];\n\tUI_Toggle tog = (UI_Toggle)field.uiControlEditor;\n\ttog.onFieldChanged = DoTWRChanged;\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nand then, the actual callback:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eprivate void DoTWRChanged(BaseField field, object o)\n{\n\tif (!DoTWR)\n\t{\n\t\tFields[\u0022BodyForTWR\u0022].guiName = \u0022dV At\u0022;\n\t\tFields[\u0022Atmospheric\u0022].guiName = \u0022Atmospheric dV\u0022;\n\t\tFields[\u0022targetTWR\u0022].guiActiveEditor = false;\n\t\tFields[\u0022AutoScale\u0022].guiName = \u0022Auto fit to dV\u0022;\n\t}\n\telse\n\t{\n\t\tFields[\u0022BodyForTWR\u0022].guiName = \u0022TWR At\u0022;\n\t\tFields[\u0022Atmospheric\u0022].guiName = \u0022Atmospheric TWR\u0022;\n\t\tFields[\u0022targetTWR\u0022].guiActiveEditor = true;\n\t\tFields[\u0022AutoScale\u0022].guiName = \u0022Auto fit to TWR\u0022;\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe problem is that the guiName fields are not changing when the callback is called.\u00A0 The fields are defined here:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E[KSPField(guiName = \u0022smartTank_TWRAtPrompt\u0022, isPersistant = true, guiActive = false, guiActiveEditor = true ), \nUI_ChooseOption(scene = UI_Scene.Editor)]\npublic string BodyForTWR = Settings.Instance.BodyForTWR;\n\n[KSPField(guiName = \u0022smartTank_AtmosphericPrompt\u0022, isPersistant = true, guiActive = false, guiActiveEditor = true), \nUI_Toggle(scene = UI_Scene.Editor)]\npublic bool Atmospheric = Settings.Instance.Atmospheric;\n\n[KSPField(guiName = \u0022smartTank_TargetTWRPrompt\u0022, isPersistant = true, guiActive = false, guiActiveEditor = true, guiFormat = \u0022G2\u0022),\nUI_FloatEdit(scene = UI_Scene.Editor, incrementSlide = 0.1f, incrementLarge = 1f, incrementSmall = 0.1f, minValue = 0.1f, maxValue = 10f, sigFigs = 1)]\npublic float targetTWR = Settings.Instance.TargetTWR;\n\n[KSPField(guiName = \u0022smartTank_AutoScalePrompt\u0022, isPersistant = true, guiActive = false, guiActiveEditor = true), \nUI_Toggle(scene = UI_Scene.Editor)]\npublic bool AutoScale = Settings.Instance.AutoScale;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI know that the callback is working, since the targetTWR guiActiveEditor is being toggled properly, but the guiName fields on the other variables are not being changed.\n\u003C/p\u003E\n\u003Cp\u003E\nWhile I could duplicate all the variables and simply make them active or not, that is wasteful and needless if the same one can do it.\n\u003C/p\u003E\n\u003Cp\u003E\nI could have sworn that I\u0027ve been able to change the guiName in other mods, but not sure if that was only in the flight scene.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-27T12:29:53Z\u0022 title=\u002206/27/2019 12:29  PM\u0022 data-short=\u00225 yr\u0022\u003EJune 27, 2019\u003C/time\u003E by linuxgurugamer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"jefferyharrell","CreatedById":27205,"CreatedDateTime":"2019-06-29T18:13:51Z","Content":"\n\u003Cp\u003E\nI\u0027ve searched the forum and whatnot, but I haven\u0027t seen this addressed in a definitive way: How can one, through kOS, \u0022measure\u0022 the\u00A0proper\u00A0acceleration on a spacecraft?\n\u003C/p\u003E\n\u003Cp\u003E\nIn the real world, proper acceleration is the acceleration that would be measured by an accelerometer carried along with the spacecraft. That is to say, on the launchpad it would read something close to 9.80665 m/s/s\u00A0and in orbit it would read 0 m/s/s.\n\u003C/p\u003E\n\u003Cp\u003E\nReading SHIP:SENSORS:ACC doesn\u0027t do what I want because on the launchpad it reads a very small number (on the order 10^-5), while in orbit it reads 6.8 m/s/s, which I don\u0027t understand at all. If it were just equal to local g I could subtract that off, but it\u0027s not.\n\u003C/p\u003E\n\u003Cp\u003E\nIn the atmosphere I can\u00A0\u003Cem\u003Eapproximate\u003C/em\u003E\u00A0proper acceleration with THROTTLE * SHIP:AVAILABLETHRUST / SHIP:MASS, but if there\u0027s a way to get the\u00A0\u003Cem\u003Eactual\u00A0\u003C/em\u003Eproper acceleration I\u0027d much rather use it.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks!\n\u003C/p\u003E\n"}]}