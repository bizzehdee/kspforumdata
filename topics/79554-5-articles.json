{"TopicId":79554,"ForumId":36,"TopicTitle":"[0.90] TestFlight [0.4.6.1][04FEB15] -Configurable, extensible, parts research \u0026amp; reliability system","CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-07-26T00:33:29Z","PageNum":5,"Articles":[{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-07T05:47:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NonWonderDog\u0022 data-cite=\u0022NonWonderDog\u0022\u003E\u003Cdiv\u003EThe thing that will make this mod hard, and the reason why I said you\u0027d need an understanding of the literature, is the randomness. If you try to balance it by play, you will simply never get a good result. You have to have a a result in mind and the ability to implement it, and then have the willingness to ignore people (or yourself!) who complain that their engines fail every launch or never fail at all. You have to design the reliability of the entire population of RT-10 boosters amongst all players, and trust that individual RT-10 failures follow the pattern. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETrust me I have no problems with this. It really is the whole point, and as long as the code is working properly (IE there isn\u0027t a math or logic error) then all is good. It is the desired end result anyway!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NonWonderDog\u0022 data-cite=\u0022NonWonderDog\u0022\u003E\u003Cdiv\u003ETo that end, you have to understand real failure distributions, and the math needed to model them. It\u0027s actually not that bad as long as you keep things simple.\u003Cp\u003EIf we take the simplest case, say we have 1000 widgets, and 10% of them fail each day. 100 widgets will fail the first day. There are only 900 left, so 90 widgets will fail the second day. 81 will fail on the third, 73 on the fourth, etc. As you see, the simplest model has an exponential failure distribution. This constant risk of failure -- a constant \u003Cem\u003Ehazard rate\u003C/em\u003E -- is the basic assumption behind the Mean Time Between Failures metric.\u003C/p\u003E\u003Cp\u003EThe hazard rate \u003Cem\u003Eh\u003C/em\u003E(\u003Cem\u003Et\u003C/em\u003E) is actually somewhat of an abstract concept in order to account for non-constant rates. It\u0027s equal to the expected number of failures in a population divided by all the accumulated time of all the items in the population, over an infinitesimal time slice, given that every item in the population is \u003Cem\u003Et\u003C/em\u003E hours old. Stated in a way that actually makes sense, the probability of an item experiencing its first failure over the next \u003Cem\u003Edt\u003C/em\u003E hours, starting at time \u003Cem\u003Et\u003C/em\u003E, is equal to \u003Cem\u003Eh\u003C/em\u003E(\u003Cem\u003Et\u003C/em\u003E)*\u003Cem\u003Edt\u003C/em\u003E as \u003Cem\u003Edt\u003C/em\u003E approaches zero.\u003C/p\u003E\u003Cp\u003EBut for an exponential distribution, it\u0027s easy. The math works like this:\u003C/p\u003E\u003Cp\u003EHazard rate is constant, so let\u0027s call it \u003Cem\u003Elambda\u003C/em\u003E. MTBF is equal to 1/\u003Cem\u003Elambda\u003C/em\u003E for an exponential distribution. Hazard rate can be estimated directly from a sample population (the measured \u003Cem\u003Efailure rate\u003C/em\u003E): if there are 10 failures in a sample of 100 devices scheduled to operate for 100 hours each, the hazard rate is 10/(100*100) = 0.001 -- A MTBF of 1000 hours.\u003C/p\u003E\u003Cp\u003EThe probability of a failure at time \u003Cem\u003Et\u003C/em\u003E (divided by duration) is f(t) = \u003Cem\u003Elambda\u003C/em\u003E*e^-(\u003Cem\u003Elambda\u003C/em\u003E*t). This is the \u003Cem\u003Efailure density function\u003C/em\u003E. (10% of widgets fail each day \u003Cem\u003E(lambda = 0.1)\u003C/em\u003E, 100 fail on the first day \u003Cem\u003E(f(0) = 0.1)\u003C/em\u003E, 90 on the second day \u003Cem\u003E(f(1) = 0.09)\u003C/em\u003E), 81 on the third day \u003Cem\u003E(f(2) = 0.081)\u003C/em\u003E, etc.)\u003C/p\u003E\u003Cp\u003EThe probability that that item will have failed after \u003Cem\u003Et\u003C/em\u003E hours is the integral of the density function, \u003Cem\u003EF(t)\u003C/em\u003E = 1 - e^-(\u003Cem\u003Elambda\u003C/em\u003E*t). This is the \u003Cem\u003Efailure distribution function\u003C/em\u003E. F(infinity) is equal to one.\u003C/p\u003E\u003Cp\u003EThe probability that an individual item will survive is one minus that, or \u003Cem\u003ER(t)\u003C/em\u003E = e^-(\u003Cem\u003Elambda\u003C/em\u003E*t). This is the \u003Cem\u003Ereliability\u003C/em\u003E after \u003Cem\u003Et\u003C/em\u003E hours.\u003C/p\u003E\u003Cp\u003EWith our 1000 hour MTBF, the probability that any individual item will survive for 100 hours is:\u003C/p\u003E\u003Cp\u003ER(100) = e^(-0.001*100) = 90.5%\u003C/p\u003E\u003Cp\u003EThe probability that it survives for 1000 hours is:\u003C/p\u003E\u003Cp\u003ER(1000) = e^(-0.001*1000) = 36.8% (Yes, 63.2% of our samples have failed after the mean time between failures. Math is weird.)\u003C/p\u003E\u003Cp\u003EAnd honestly, if you don\u0027t go beyond an exponential failure distribution that\u0027s all you need. The probability of surviving for the next 1000 hours is 36.8% no matter how many thousands of hours it has survived so far, so you can just use the reliability function and be done with it. Only thing to keep in mind is possible numerical precision issues past 100,000 hours MTBF, and any fiddling you might have to do to get all the bits out of Unity\u0027s RNG. \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWow thanks for that. I was doing a lot of reading over the last bit since your first post, and I see now that I was getting close but this really, really helps cement things for me.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NonWonderDog\u0022 data-cite=\u0022NonWonderDog\u0022\u003E\u003Cdiv\u003EThings get a lot more difficult with a variable hazard rate. If I\u0027m feeling particularly brave I\u0027ll try to work out the math for a Weibull distribution, since front-loaded failures would make launches a bit more exiting, but I\u0027ll ignore wear-out as probably a bad idea for gameplay.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t think that will be necessary though I appreciate the offer. While I want to make the system as good as I can, I don\u0027t necessarily want to 100% accurately model reality. I think what we have here will be good enough. Also bear in mind that we will be cheating a bit, as we are in essence front-loading the determination of a failure rate. In other words in the real world parts are tested and from those tests a failure rate is determined. But for our cases, we are generating a failure rate right from the start, before any parts are used (though this will start from a base configured number that feels right), but further more we are making them more reliable over time based on the amount of flight data accumulated from test flights. So we are fudging the other end of the system, and then using all the fun math above to help determine based on the derived numbers, whether a failure has occurred or not.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NonWonderDog\u0022 data-cite=\u0022NonWonderDog\u0022\u003E\u003Cdiv\u003EIn the most general case, I think you only need the reliability at time \u003Cem\u003Et\u003C/em\u003E (when you last checked), the reliability at time \u003Cem\u003Et\u003C/em\u003E\u002B\u003Cem\u003Edt\u003C/em\u003E (now), and Bayes\u0027 theorem to determine if something should fail. You should be able to foist the reliability calculation itself off on another module. (At least, that\u0027s how I remember probability working. I\u0027ll have to run through that.) I get incredibly confused when I think about the *second* failure using that method, though...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDon\u0027t worry about second failures. We will assume that once a part is repaired, if it is, that it is as good as when it was launched. You\u0027ve been so very helpful and I appreciate it, but I have to ask for one more thing which seems like it should be obvious, but as I said i\u0027m just not a maths guy, and certainly not a statistics guy. How would I be using Bayes\u0027 Theorem in this? Are we talking something like P(t)=P(dt)*P(t)/P(dt) ?\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-07T21:01:28Z","Content":"\n\u003Cp\u003EOk so I am fairly certain that GUI Experimental 2 is ready to go. I\u0027m taking a short break before jumping in on some testing. Assuming I don\u0027t find any issues, I should be cutting a release within a couple hours.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-08T00:56:18Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003Ev0.2.1 experimental 2\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.2.1e2\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.2.1e2\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EThis is an EXPERIMENTAL release.\u003C/span\u003E\u003C/strong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003E Experimental releases are very much \u0022development snapshots\u0022 and are released for the express purpose of getting user feedback or testing on a very specific bug or feature that is being worked on. \u003C/span\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EIf testing an experimental release, please limit feedback to the scope of that release.\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EThis is an alpha release and thus should be assumed to be buggy, and capable of breaking your game and game saves.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EExperimental release of the new reworked GUI. This is still very much a WIP. \u003C/p\u003E\u003Cp\u003EThis release implements the new TestFlight GUI skin, addresses issues in Experimental 1, and adds a new compact Flight HUD.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E New TestFlight GUI Theme designed for clarity\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Settings pane is now split into multiple \u0022sections\u0022, each of which can be selected from the drop down list at the top of the settings pane.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E The Master Status Display now has a maximum height for display of the part status. If too many parts need to be displayed, the GUI will start to scroll instead.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added scroll view for Part Display\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added filter to show only failed parts in Master Status Display\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added setting to set size of scroll view in one of three increments, Small, Normal, or Large\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added setting to hide/show flight data on part\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added setting to hide/show resting reliability on part\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added setting to hide/show momentary reliability on part\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added setting to hide/show part status text\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added setting to truncate/shorten display names for parts\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added setting to lock/unlock the Master Status Display window\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added setting to enable/disable the compact Flight HUD\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added new compact Flight HUD which displays *only* the parts that have failed, and a repair button. Part names are colored for quick identification of the severity of the failure. Green = Minor, Yellow = Normal, Red = Critical\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Moving the Master Status Display (after unlocking it) now saves the window\u0027s position\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Moving the Flight HUD save\u0027s the windows position\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EProposal For Reliability and Failure System Redesign\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/wiki/Proposal-For-Reliability-and-Failure-System-Redesign\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/wiki/Proposal-For-Reliability-and-Failure-System-Redesign\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"NonWonderDog","CreatedById":10479,"CreatedDateTime":"2015-01-08T01:23:09Z","Content":"\n\u003Cp\u003EHere\u0027s the Bayes\u0027 Theorem explanation:\u003C/p\u003E\u003Cp\u003EWhat you really need probability wise is the reliability of a part over time \u003Cem\u003Edt\u003C/em\u003E, starting at time \u003Cem\u003Et\u003C/em\u003E. You can compute this directly, but you have to know the details of the probability density distribution and take an integral, and you don\u0027t want that.\u003C/p\u003E\u003Cp\u003EFor whatever failure distribution a part has, it\u0027s fairly trivial to compute R(\u003Cem\u003Et\u003C/em\u003E), or the probability of survival between 0 and any time \u003Cem\u003Et\u003C/em\u003E. For specificity\u0027s sake we can also call this R(0,\u003Cem\u003Et\u003C/em\u003E). So you can get R(0,\u003Cem\u003Et\u003C/em\u003E) and R(0,\u003Cem\u003Et\u003C/em\u003E\u002B\u003Cem\u003Edt\u003C/em\u003E) directly just by calling the reliability function once every \u003Cem\u003Edt\u003C/em\u003E. \u003C/p\u003E\u003Cp\u003EBut we need R(\u003Cem\u003Et\u003C/em\u003E,\u003Cem\u003Et\u003C/em\u003E\u002B\u003Cem\u003Edt\u003C/em\u003E), which is a conditional probability. What is the probability that, given no failure at time \u003Cem\u003Et\u003C/em\u003E, that there will continue to be no failure at time \u003Cem\u003Et\u003C/em\u003E\u002B\u003Cem\u003Edt\u003C/em\u003E?\u003C/p\u003E\u003Cp\u003EBayes\u0027 Theorem is P(A|\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E = P(B|A) * P(A) / P(\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E. \u003C/p\u003E\u003Cp\u003EA is no failure over (\u003Cem\u003Et\u003C/em\u003E,\u003Cem\u003Et\u003C/em\u003E\u002B\u003Cem\u003Edt\u003C/em\u003E). B is no failure over (0,\u003Cem\u003Et\u003C/em\u003E). P(B|A) is... well, it turns out that P(B|A)*P(A) is equal to P(A\u00C3\u00A2\u00CB\u2020\u00C2\u00A9\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E, the probability of the intersection of events A and B. The intersection of events A and B simply means no failure over (0,\u003Cem\u003Et\u003C/em\u003E\u002B\u003Cem\u003Edt\u003C/em\u003E).\u003C/p\u003E\u003Cp\u003ER(\u003Cem\u003Et\u003C/em\u003E,\u003Cem\u003Et\u003C/em\u003E\u002B\u003Cem\u003Edt\u003C/em\u003E) = R(\u003Cem\u003Et\u003C/em\u003E\u002B\u003Cem\u003Edt\u003C/em\u003E) / R(\u003Cem\u003Et\u003C/em\u003E)\u003C/p\u003E\u003Cp\u003EOkay, that was all kind of mean of me. All you have to do is divide.\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2015-01-08T01:50:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003Ev0.2.1 experimental 2\u003C/span\u003E\u003C/strong\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI like the new HUD, and the look of the new MSD window.\u003C/p\u003E\u003Cp\u003EDoes a 100% reliability mean there\u0027s no chance for a failure? If so, it might be good to have an option to hide those parts that can\u0027t fail.\u003C/p\u003E\u003Cp\u003ESuggestion: Add a warning tone when a part fails.\u003C/p\u003E\u003Cp\u003EIssues noted:\u003C/p\u003E\u003Cp\u003EOption: \u0022\u003Cem\u003EShort\u003C/em\u003E Failed Parts Only\u0022, believe this should say \u0022\u003Cem\u003EShow\u003C/em\u003E Failed...\u0022\u003C/p\u003E\u003Cp\u003ESettings Pane Selection: The background is transparent. I found it slightly hard to read with the test below showing through.\u003C/p\u003E\u003Cp\u003ESlider: \u0022Minimum Time Between Failure Checks\u0022 does not fit the space provided, and is slightly truncated by the slider.\u003C/p\u003E\u003Cp\u003EHUD: I\u0027d suggest either adding the failure type to the window, or the pop-up that lists repair conditions.\u003C/p\u003E\u003Cp\u003EHUD: If I can\u0027t repair a part, instead of the \u0022R\u0022 button, can it display another button to acknowledge the status and clear it from the HUD?\u003C/p\u003E\u003Cp\u003EDoes the Momentary Reliability field mean anything right now, or is it a placeholder for later expansion?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-08T01:58:58Z\u0022 title=\u002201/08/2015 01:58  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 8, 2015\u003C/time\u003E by razark\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-08T02:18:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003EI like the new HUD, and the look of the new MSD window.\u003Cp\u003EDoes a 100% reliability mean there\u0027s no chance for a failure? If so, it might be good to have an option to hide those parts that can\u0027t fail.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERight now it probably does but that whole system is getting rewritten so.. Your point is valid though and I will keep it in mind.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESuggestion: Add a warning tone when a part fails.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI do want to do something like this, as well as better communicate the fact that a failure has occurred. I need to do more research on *how* to actually do that though \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIssues noted:\u003C/p\u003E\u003Cp\u003EOption: \u0022\u003Cem\u003EShort\u003C/em\u003E Failed Parts Only\u0022, believe this should say \u0022\u003Cem\u003EShow\u003C/em\u003E Failed...\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECopy/paste yay!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESettings Pane Selection: The background is transparent. I found it slightly hard to read with the test below showing through.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENoted. I noticed this myself but not sure at the moment how to fix it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESlider: \u0022Minimum Time Between Failure Checks\u0022 does not fit the space provided, and is slightly truncated by the slider.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E \u003Cp\u003EThis slider will be going away so I didn\u0027t bother making the window wider still.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EHUD: I\u0027d suggest either adding the failure type to the window, or the pop-up that lists repair conditions.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll add it to the tooltip. There are some more things I want to do with this window as well, but I want to keep it as small as possible.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EHUD: If I can\u0027t repair a part, instead of the \u0022R\u0022 button, can it display another button to acknowledge the status and clear it from the HUD?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EVery good suggestion. I didn\u0027t even think of that.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EDoes the Momentary Reliability field mean anything right now, or is it a placeholder for later expansion?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPlaceholder\u003C/p\u003E\u003Cp\u003EThanks for the feedback!\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-08T19:39:22Z","Content":"\n\u003Cp\u003EI have found a bug that is causing the saved window positions to get reset when leaving the Flight scene. Trying to track it down now.\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2015-01-08T23:03:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EI have found a bug that is causing the saved window positions to get reset when leaving the Flight scene. Trying to track it down now.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI hadn\u0027t noticed when I made my last post, but I did later. Glad to know the minor annoyance will be fixed.\u003C/p\u003E\u003Cp\u003EOne more: Is there a way to see part reliability numbers in the VAB? It would be useful to know how much I can count on the parts I\u0027m using while building. Bonus if it let me know numbers for situations the part has flown in vs. a more general idea of untested situations.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-08T23:58:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003EI hadn\u0027t noticed when I made my last post, but I did later. Glad to know the minor annoyance will be fixed.\u003Cp\u003EOne more: Is there a way to see part reliability numbers in the VAB? It would be useful to know how much I can count on the parts I\u0027m using while building. Bonus if it let me know numbers for situations the part has flown in vs. a more general idea of untested situations.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot yet. It is on my todo list, but requires a whole other system for handling it and a nice UI to manage it as well, so it isn\u0027t something I wanted to slap together.\u003C/p\u003E\n"},{"CreatedByName":"Musuko42","CreatedById":130405,"CreatedDateTime":"2015-01-09T14:36:12Z","Content":"\n\u003Cp\u003EI was dubious about installing a mod like Dangit, but THIS mod I really like the look of, because it adds in some interesting strategy options: I\u0027ve just unlocked a new engine which is better, but not yet reliable, so do I risk the unreliability, or invest the time and money in testing it to make it more reliable, or do I stick with my older, less-advanced, but more reliable engines?\u003C/p\u003E\u003Cp\u003EIn short, do I go the NASA route, or the Soviet route? And having that choice is GLORIOUS!\u003C/p\u003E\u003Cp\u003EIdea for you, in case nobody else has mentioned it (not gonna check through eleven pages!): Make the repair function have a success rate, affected by Engineer Kerbal stats and the base reliability of the part. A level 0 Engineer, or a Pilot or Scientist, has a base percentage chance of repairing a failed part. A levelled up Engineer has a better chance to repair it. And a part that has a higher reliability also gives a better chance to repair (reflecting the better familiarity they\u0027d have with the part).\u003C/p\u003E\u003Cp\u003EThen, if you\u0027re feeling fancy, separate out the repair situations, with some more randomness. For example, a failed engine might have a 20% chance or successful repair from the cockpit, and a 60% chance of successful repair if performed via EVA interaction.\u003C/p\u003E\u003Cp\u003EYou could also add in a chance that the part will be irrevocably broken by an unsuccessful repair. Again, better familiarity with the part and better engineer training would reduce that chance.\u003C/p\u003E\u003Cp\u003EAnd finally: you could add in a time delay for the repair, depending on the severity, reliability of the part, and the Kerbal performing it: some repairs might take seconds, some minutes, hours or days. You could add some randomness to this, but display an estimated time to repair before you press the repair button...and once again, the accuracy of that estimate could depend on the reliability of the part and the Kerbal performing it.\u003C/p\u003E\u003Cp\u003ESo much scope for coolness with this mod! Thank you for making it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-09T14:38:15Z\u0022 title=\u002201/09/2015 02:38  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 9, 2015\u003C/time\u003E by Musuko42\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Yzangard","CreatedById":107111,"CreatedDateTime":"2015-01-09T16:42:42Z","Content":"\n\u003Cp\u003ELol, I\u0027m about to cry, was the mod I was planing to create (with Neural Network for experiencing but not really important) \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003ENice mod, I can focus on something else now \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EWill try asap\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-09T19:13:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Musuko42\u0022 data-cite=\u0022Musuko42\u0022\u003E\u003Cdiv\u003EI was dubious about installing a mod like Dangit, but THIS mod I really like the look of, because it adds in some interesting strategy options: I\u0027ve just unlocked a new engine which is better, but not yet reliable, so do I risk the unreliability, or invest the time and money in testing it to make it more reliable, or do I stick with my older, less-advanced, but more reliable engines?\u003Cp\u003EIn short, do I go the NASA route, or the Soviet route? And having that choice is GLORIOUS!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is pretty much what I was going for, so thanks \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E The intent wasn\u0027t to just make random failures so that the game is arbitrarily harder, but to actually give deeper gameplay and give meaning to testing your hardware like in real life.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Musuko42\u0022 data-cite=\u0022Musuko42\u0022\u003E\u003Cdiv\u003EIdea for you, in case nobody else has mentioned it (not gonna check through eleven pages!): Make the repair function have a success rate, affected by Engineer Kerbal stats and the base reliability of the part. A level 0 Engineer, or a Pilot or Scientist, has a base percentage chance of repairing a failed part. A levelled up Engineer has a better chance to repair it. And a part that has a higher reliability also gives a better chance to repair (reflecting the better familiarity they\u0027d have with the part).\u003Cp\u003EThen, if you\u0027re feeling fancy, separate out the repair situations, with some more randomness. For example, a failed engine might have a 20% chance or successful repair from the cockpit, and a 60% chance of successful repair if performed via EVA interaction.\u003C/p\u003E\u003Cp\u003EYou could also add in a chance that the part will be irrevocably broken by an unsuccessful repair. Again, better familiarity with the part and better engineer training would reduce that chance.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe really nice thing about TestFlight is that it itself is moddable. All of those things are completely doable, even if the included base Failure modules don\u0027t do it. That said there are plans to implement most of that in the base included modules. Modders can go farther (or not as far) if they want though.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Musuko42\u0022 data-cite=\u0022Musuko42\u0022\u003E\u003Cdiv\u003EAnd finally: you could add in a time delay for the repair, depending on the severity, reliability of the part, and the Kerbal performing it: some repairs might take seconds, some minutes, hours or days. You could add some randomness to this, but display an estimated time to repair before you press the repair button...and once again, the accuracy of that estimate could depend on the reliability of the part and the Kerbal performing it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETime based repairs were originally a thing, and then I removed them because it was adding a complexity to the code that was getting unmanageable. That said, I have been thinking about it and I think I see how I can work them into the new system that I am building, so I will keep it in mind.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Musuko42\u0022 data-cite=\u0022Musuko42\u0022\u003E\u003Cdiv\u003ESo much scope for coolness with this mod! Thank you for making it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks!\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Yzangard\u0022 data-cite=\u0022Yzangard\u0022\u003E\u003Cdiv\u003ELol, I\u0027m about to cry, was the mod I was planing to create (with Neural Network for experiencing but not really important) \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003ENice mod, I can focus on something else now \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EWill try asap\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Elol. I\u0027m sorry?\u003C/p\u003E\u003Cp\u003ENo sense doing the hard work if someone does it for you \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Feel free to offer up suggestions and feedback and I hope TestFlight will provide the gameplay elements you were looking for as it matures.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ESo just a heads up everyone. In trying to track down the issues with the GUI not saving properly, I have discovered the root problem which is much more sinister. Apparently I am managing to get multiple instances of the TestFlight KSP Scenario all running at the same time \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003EI am digging into this and will get a new release out as soon as I figure out what the heck is going on.\u003C/p\u003E\n"},{"CreatedByName":"magico13","CreatedById":73338,"CreatedDateTime":"2015-01-09T19:23:14Z","Content":"\n\u003Cp\u003EI\u0027m only keeping up with this mod a tiny bit, but my primary tester for KCT I think has been and I have a tendency to check out what he\u0027s been involved in since it tends to be pretty good (found out about MKS through him). From my limited understanding of this mod, it\u0027s a part failure mod that has increasing reliability the more you use a part in a specific location (atmosphere, orbit around X, etc), correct? I feel like KCT\u0027s simulation feature could have interesting interactions with this (a simple example, simulations could have their time spent contribute to reliability but at a reduced rate. Or you could pay more to have a simulation where no parts can fail. Things like that.) I may look into extending some things, or at least adding some interaction in the future.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-09T19:35:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022magico13\u0022 data-cite=\u0022magico13\u0022\u003E\u003Cdiv\u003EI\u0027m only keeping up with this mod a tiny bit, but my primary tester for KCT I think has been and I have a tendency to check out what he\u0027s been involved in since it tends to be pretty good (found out about MKS through him). From my limited understanding of this mod, it\u0027s a part failure mod that has increasing reliability the more you use a part in a specific location (atmosphere, orbit around X, etc), correct? I feel like KCT\u0027s simulation feature could have interesting interactions with this (a simple example, simulations could have their time spent contribute to reliability but at a reduced rate. Or you could pay more to have a simulation where no parts can fail. Things like that.) I may look into extending some things, or at least adding some interaction in the future.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThose are some very interesting ideas magico13. While I haven\u0027t actually started testing with KCT yet, it is definitely in my long term plan for tight integration, so i\u0027m happy to hear you are open to the idea.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022magico13\u0022 data-cite=\u0022magico13\u0022\u003E\u003Cdiv\u003EFrom my limited understanding of this mod, it\u0027s a part failure mod that has increasing reliability the more you use a part in a specific location (atmosphere, orbit around X, etc), correct?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is correct. The more you fly \u0022Part A\u0022, the more flight data you accumulate on how that part operates in different conditions, and the more reliable future instance of \u0022Part A\u0022 on new craft become.\u003C/p\u003E\u003Cp\u003EI like both of your integration ideas, especially paying more to have a simulation with no failures, as that could be very useful. The idea of gaining data during a sim makes sense in a logical manner, though it would have to be balanced so that a player couldn\u0027t just run a ton of back to back sims and make everything perfectly reliable. \u003C/p\u003E\u003Cp\u003EI like both ideas though, so let me bounce them around in the back of my head and see how they could be implemented on my side.\u003C/p\u003E\n"},{"CreatedByName":"magico13","CreatedById":73338,"CreatedDateTime":"2015-01-09T19:47:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI like both of your integration ideas, especially paying more to have a simulation with no failures, as that could be very useful. The idea of gaining data during a sim makes sense in a logical manner, though it would have to be balanced so that a player couldn\u0027t just run a ton of back to back sims and make everything perfectly reliable. \u003C/p\u003E\u003Cp\u003EI like both ideas though, so let me bounce them around in the back of my head and see how they could be implemented on my side.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI opened a \u003Ca href=\u0022https://github.com/magico13/KCT/issues/32\u0022 rel=\u0022external nofollow\u0022\u003EGitHub issue\u003C/a\u003E for it so I don\u0027t forget, so you\u0027re welcome to bring any discussion there if you don\u0027t want it cluttering up the forum and getting lost in the future \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E The simple solution I thought of for preventing people from doing a bunch of simulations is that you set a cap on the maximum reliability you can get out of simulations. They already should gain reliability at a reduced rate since you\u0027re conceivably modelling the part in the simulation based on known data, so you obviously can\u0027t cover every real world case. The same argument can be made for why you wouldn\u0027t be able to get 100% reliability from simulations because you wouldn\u0027t be modelling those unknowns.\u003C/p\u003E\u003Cp\u003EI think I need to start working on an API for KCT soon-ish. It would likely be beneficial for you, and other mods, to know when a flight is a simulation or is real, and other things like that.\u003C/p\u003E\u003Cp\u003EEdit: Limiting the available failure pathways for a particular part (assuming there\u0027s more than one failure mode) to only known ones would be pretty cool. Same with the ability to force a failure, for testing abort operations.\u003C/p\u003E\u003Cp\u003EAaaand, a \u003Ca href=\u0022https://github.com/magico13/KCT/issues/33\u0022 rel=\u0022external nofollow\u0022\u003EGitHub issue\u003C/a\u003E for discussion on creating a KCT API.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-09T20:00:54Z\u0022 title=\u002201/09/2015 08:00  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 9, 2015\u003C/time\u003E by magico13\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2015-01-09T22:24:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EI am digging into this and will get a new release out as soon as I figure out what the heck is going on.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESpeaking of new releases of the mod, I have a question. Is the data/reliability stored in the persistent.sfs file, or is it getting wiped out every time a new version is installed?\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-09T23:13:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003ESpeaking of new releases of the mod, I have a question. Is the data/reliability stored in the persistent.sfs file, or is it getting wiped out every time a new version is installed?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt is stored in the persistent.sfs file, however during these early phases of development it is entirely probable you may have to start a fresh game if things get corrupted or change too much.\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2015-01-10T00:12:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EIt is stored in the persistent.sfs file\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003Ehowever during these early phases of development it is entirely probable you may have to start a fresh game if things get corrupted or change too much.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnderstandable, and I have no problem with restarting games while testing. I\u0027ve actually got this installed on a second copy of the game.\u003C/p\u003E\u003Cp\u003E(I actually haven\u0027t gotten into a serious campaign since 0.90 was released. I\u0027ve been waiting on mods to update, or trying out new ones, or trying to motivate myself to actually rearrange the tech tree into something that makes sense to me.)\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-11T07:00:55Z","Content":"\n\u003Cp\u003EOk its been a bit of a painful day and a half of fighting with this code, but after essentially re-writing the entire core persistence handling, I have fixed most of the issues with settings saving/loading, and multiple scenarios being spun up by KSP.\u003C/p\u003E\u003Cp\u003EI\u0027m still tracking one bug, if you leave a ship \u0022in mission\u0022 and then come back to it, the flightdata is lost -- but I think that bug might actually be in the existing released versions of TestFlight \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m still tracking one bug, if you leave a ship \u0022in mission\u0022 and then come back to it, the flightdata is lost -- but I think that bug might actually be in the existing released versions of TestFlight \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk well I hate to say it but this seems to be a bug in KSP itself. I swear to god *sometimes* KSP simply doesn\u0027t save the game state even though it should, or at best it partially saves it.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Ev0.3.0 Alpha Released\u003C/p\u003E\u003Cp\u003E==============\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.3.0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.3.0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAlpha Development Release\u003C/p\u003E\u003Cp\u003E======================\u003C/p\u003E\u003Cp\u003E**This is an early alpha development release and thus should be assumed to be buggy, and capable of breaking your game and game saves. Please do not test this in a game save that you care about!**\u003C/p\u003E\u003Cp\u003E**IMPORTANT NOTE** Due to many changes in how settings are handled, and stored, as well as the removal and addition of different settings than previous releases, please completely delete any previous install of TestFlight before installing this version. In addition it is *highly recommended* to start a new save game for this release.\u003C/p\u003E\u003Cp\u003EHighlights\u003C/p\u003E\u003Cp\u003E-------------\u003C/p\u003E\u003Cp\u003E* Brand new TestFlight GUI\u003C/p\u003E\u003Cp\u003E* Configurable Master Status Display gives you all the details on your parts you want, and nothing more\u003C/p\u003E\u003Cp\u003E* Settings GUI lets you change TestFlight settings easily in game\u003C/p\u003E\u003Cp\u003E* In Flight HUD gives you a compact view of the most critical information\u003C/p\u003E\u003Cp\u003E* Rebuilt underlying persistent handling to hopefully be more reliable\u003C/p\u003E\u003Cp\u003EAll new TestFlight GUI\u003C/p\u003E\u003Cp\u003E------------------------------\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/y2lIH\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003E* New Master Status Display is highly configurable and automatically scrolls to hand craft with lots of parts. You can turn on/off all data displays with the exception of the part name (which you can shorten) and the Repair/Acknowledge buttons. *NOTE: The Momentary Reliability data is a temporary placeholder and will never contain any data in this release*\u003C/p\u003E\u003Cp\u003E* New tooltip for repair requirements uses color highlighting to let you quickly see which conditions are met (green), which are not(red), and which are not met but optional (orange).\u003C/p\u003E\u003Cp\u003E* You can set the size of the main MSD to one of three preset sizes, Small, Normal, or Large which will adjust how tall the window is and how many parts you can see before scrolling.\u003C/p\u003E\u003Cp\u003E* MSD can be filtered to show only failed parts. Repairing or Acknowledging a failure will remove it from the list.\u003C/p\u003E\u003Cp\u003E* New In Flight HUD provides a compact status display that shows only failed parts, and shows only the name of the part and the buttons to repair or acknowledge the failure. Part coloring in this HUD quickly identifies the severity of the failure (Green = minor, orange = normal, red = critical).\u003C/p\u003E\u003Cp\u003E* MSD can be docked, or unlocked and moved\u003C/p\u003E\u003Cp\u003EChange Log\u003C/p\u003E\u003Cp\u003E----------------\u003C/p\u003E\u003Cp\u003E* Added entirely new Master Status Display (MSD) for TestFlight\u003C/p\u003E\u003Cp\u003E* Added settings window for configuring TestFlight settings in game\u003C/p\u003E\u003Cp\u003E* Added ability to independently toggle on or off various pieces of part status in the MSD\u003C/p\u003E\u003Cp\u003E* Added new compact in flight HUD that can be toggled on/off and positioned as desired\u003C/p\u003E\u003Cp\u003E* MSD can be either docked, or unlocked and moved around\u003C/p\u003E\u003Cp\u003E* MSD now scrolls if there are too many parts to fit\u003C/p\u003E\u003Cp\u003E* MSD height is adjustable\u003C/p\u003E\u003Cp\u003E* Settings pane broken into multiple pages so as to not require a huge window\u003C/p\u003E\u003Cp\u003E* Repair Requirements tooltip is now color coded for clarity and quick assimilation of data\u003C/p\u003E\u003Cp\u003E* Fixed spelling error in settings dialog\u003C/p\u003E\u003Cp\u003E* Added button to \u0022acknowledge\u0022 a failure. This will clear it from the Flight HUD and the MSD if set to show only failed parts, but will not repair the failure. It will still remain in the full MSD list (If the show only failed parts setting is OFF)\u003C/p\u003E\u003Cp\u003E* Added the failure title to the tooltip of the Flight HUD\u003C/p\u003E\u003Cp\u003E* Rebuilt ScenarioModule to provide a more reliable data store\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-12T06:35:06Z","Content":"\n\u003Cp\u003ESo just an update on things here. I\u0027m in the works on moving from a \u0022pull\u0022 system where the main manager polls all the parts for updates to a \u0022push\u0022 system where each part is semi-autonomous and handles its own state, reporting back to the manager as needed.\u003C/p\u003E\u003Cp\u003EI am about halfway done on this. Currently flight data is being recorded in the new system and being pushed back up the chain as needed. Tomorrow I will work on the remaining pieces.\u003C/p\u003E\u003Cp\u003EOnce that is done I will start work on implementing the overhauled reliability and failure system as discussed in the proposal.\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2015-01-12T06:49:41Z","Content":"\n\u003Cp\u003EI haven\u0027t run into any issues with the 0.3.0 release. The only things I can say at this point are:\u003C/p\u003E\u003Cp\u003E1. Failures seem quite frequent. Testing new tanks and engines on the pad has become standard procedure. I\u0027ve made it to orbit a few times, and most of those times I couldn\u0027t make it back down due to engine failure or fuel leaks. (This looks like it will be changing in the future, so don\u0027t take it as a complaint... \u003Cem\u003Eyet\u003C/em\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E )\u003C/p\u003E\u003Cp\u003E2. This has become very familiar:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/6rwi_0DEd_0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E3. Thank you so much!\u003C/p\u003E\n"},{"CreatedByName":"Ser","CreatedById":104207,"CreatedDateTime":"2015-01-12T07:14:48Z","Content":"\n\u003Cp\u003ENice idea. I\u0027ll definitely try it. Seems like every space mission could now be a real challenge with this and stuff like Construction time \u002B Remote Tech \u002B Engine Ignitor.\u003C/p\u003E\u003Cp\u003EDon\u0027t know if you already implemeted this, but it would be nice if you could make parts that are labeled as experimental the super unreliable, so much as they could be used for testing purposes only. Because currently we have a kind of exploit in stock: you may accept a test contract for a part that is expensive to research and use that prototype 365\u002B days without any penalty. But if it was extremely unstable then a hard choice ought to be made: pay for research or have a damn risk of failure right in the middle of a mission.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-12T16:24:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003EI haven\u0027t run into any issues with the 0.3.0 release. The only things I can say at this point are:\u003Cp\u003E1. Failures seem quite frequent. Testing new tanks and engines on the pad has become standard procedure. I\u0027ve made it to orbit a few times, and most of those times I couldn\u0027t make it back down due to engine failure or fuel leaks. (This looks like it will be changing in the future, so don\u0027t take it as a complaint... \u003Cem\u003Eyet\u003C/em\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E )\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell it is certainly intended that you actually find the need to focus on testing, but yes I agree that failures are way too high. We\u0027ll see how things fare after the change over to the new system. And once that is done I can also spend some time tuning settings.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E2. This has become very familiar:\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/6rwi_0DEd_0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E[/quote\u003C/p\u003E\u003Cp\u003EHaha. It would be funnier still if it wasn\u0027t all true \u003Cimg src=\u0022https://forum.kerbalspaceprogram.com/uploads/emoticons/default_k_sad.gif\u0027\u0022 alt=\u0022:(\u0022\u003E Hopefully the ending of that movie is also familiar though as your parts get better.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E3. Thank you so much!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are very welcome! I\u0027m glad you are enjoying it.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ser\u0022 data-cite=\u0022Ser\u0022\u003E\u003Cdiv\u003ENice idea. I\u0027ll definitely try it. Seems like every space mission could now be a real challenge with this and stuff like Construction time \u002B Remote Tech \u002B Engine Ignitor.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMost definitely. And look forward to some actual integration with things like these in the future!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ser\u0022 data-cite=\u0022Ser\u0022\u003E\u003Cdiv\u003EDon\u0027t know if you already implemeted this, but it would be nice if you could make parts that are labeled as experimental the super unreliable, so much as they could be used for testing purposes only. Because currently we have a kind of exploit in stock: you may accept a test contract for a part that is expensive to research and use that prototype 365\u002B days without any penalty. But if it was extremely unstable then a hard choice ought to be made: pay for research or have a damn risk of failure right in the middle of a mission.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat isn\u0027t a bad idea. It has also been suggested that TestFlight eventually provide contracts of its own for testing parts.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-13T19:28:45Z","Content":"\n\u003Cp\u003EI just want to give a heads up to anyone who has written any modules for TestFlight or is working on writing any. The next release will contain major changes to the module API, so those modules will not only need to be recompiled but also restructured. There will be a few experimental releases first that contain these changes, and then they will make it into the next alpha release after that.\u003C/p\u003E\u003Cp\u003EIn addition there is a good chance of more changes as we then focus on moving to the new reliability and failure system.\u003C/p\u003E\u003Cp\u003EI apologize for these changes, and I know its a hassle. But that is what these early alphas/experimental are for. In the early days the API will be unstable as we narrow in on the optimum layout and make changes to make things better. The light at the end of the tunnel though is that once we have things looking good and stable, then the API can be mostly locked down and changes going forward will be minor and rare. So I apologize for the short term pain, but it will reap long term benefits \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-15T23:26:46Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EExperimental Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003Ev0.4.0 Experimental 1\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e1\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an experimental release of a development branch. This version is released to allow people to test upcoming changes and should be considered unstable and buggy. Do not use an experimental release in any save you care about.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003EHighlights\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E TestFlight API completely overhauled and \u003Cstrong\u003Eis not backwards compatible\u003C/strong\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Totally rewritten underlying core systems\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Migrated from a polling \u0022pull\u0022 style system to a \u0022push\u0022 style system where the individual parts are responsible for their own state, and the core manager/GUI only asks for that state when needed to update the GUI or save to disk\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003EAPI Changes\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThe TestFlight API starting with this experimental version is not backwards compatible with previous versions\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThis experimental release contains a completely overhauled API and more changes will be made moving forward as I work towards implementing the new Reliability and Failure system as proposed. If you have written a module for TestFlight it will need to be updated to use the new API, and will probably need minor changes as we move through the next few releases.\u003C/p\u003E\u003Cp\u003EThe good news is that while the API got a lot more flexible and a lot more powerful,most of the changes \u003Cem\u003Efor now\u003C/em\u003E are in the Core, not the plugin modules. Changes to compile against this experimental release will probably be minor. \u003Cstrong\u003EBut do expect more changes coming\u003C/strong\u003E.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Rewrote core scenario code. TestFlightManagerScenario is now only a data store for the persistent data, and contains no appreciable game logic\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Redesigned TestFlightCore API to accommodate both the new \u0022push\u0022 method as well as upcoming changes to the underlying reliability and failure architecture\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Flight Data and Flight Time now stored as doubles\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Implemented brand new Test Flight API\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Changes to ITestFlightCore interface\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Changes to ITestFlightDataRecorder interface\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Changes to ITestFlightReliability interface\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Core system refreshes status more often now that there is less of a performance hit\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Changed method of configuring how FlightData converts into Reliability in the config files. This is now done using a FloatCurve which allows the modder to make it as simple or as complex as desired\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is, as stated, nearly a complete rewrite of the entire mod. It has taken me about 3 or 4 days, but it will be worth it moving forward. However, despite it being a nearly complete rewrite, from a user\u0027s perspective not much should change. Aside form some minor differences in reliability rates based on flight data (IE how much flight data = how much reliability) and the fact that failure checks are currently hard coded at 30 seconds, you should not see anything different.\u003C/p\u003E\u003Cp\u003EIn fact that is the point of this experimental. So here it is. Everything rewritten yet it should be all the same \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Please let me know if you see something broken or that looks to be \u003Cstrong\u003Every\u003C/strong\u003E different from before. My goal is to stabilize this re-write first, and then move forward into the next and hopefully last big chunk which is implementing the new reliability and failure system as proposed about a week ago.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-15T23:41:02Z\u0022 title=\u002201/15/2015 11:41  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 15, 2015\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"}]}