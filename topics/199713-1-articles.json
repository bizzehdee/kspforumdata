{"TopicId":199713,"ForumId":70,"TopicTitle":"KOS script not working","CreatedByName":"ImAKerbal","CreatedById":206870,"CreatedDateTime":"2021-01-20T00:37:58Z","PageNum":1,"Articles":[{"CreatedByName":"ImAKerbal","CreatedById":206870,"CreatedDateTime":"2021-01-20T00:37:58Z","Content":"\n\u003Cp\u003E\nNot to sure were to put this but i\u0027m pretty sure this is were I should.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nI have a problem with my Kos script where it wont launch my falcon 9. I\u0027m using the tundra mod and the script should be able to run it. What it\u0027s supposed to do it launch the rocket get the other stages to orbit while the first stage does a boost back and lands back on the launch pad. When I press 2 (the action group to toggle the control thingy for KOS) nothing happens. BTW I did not make this script I watched a tutorial for space x landings here are the scripts\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nScript 1:\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n// Ah yes\u003Cbr\u003E\n// Mission Setup\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\nwait until ag6.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nmissionSetup(\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // Will change depending on mission\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u0022ASDS\u0022, \u00A0// [\u0022ASDS\u0022] | [\u0022RTLS\u0022] | [\u0022AOTL\u0022] | [\u0022EEHL\u0022]\u003Cbr\u003E\n\u00A0 \u00A0 500000, \u00A0// Target Orbit (Meters) (Station Freedom - 210000)\u003Cbr\u003E\n\u00A0 \u00A0 28.6, \u00A0 \u00A0 \u00A0 // Target Inclination (Degrees)\u003Cbr\u003E\n\u00A0 \u00A0 \u0022Cargo\u0022, \u00A0// [\u0022Cargo\u0022]\u003Cbr\u003E\n\u00A0 \u00A0 false // Wait for launch window? (true / false)\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nfunction missionSetup {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 parameter lMode, tOrbit, tInc, pType, window.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 clearscreen.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // LandingMode Setup\u003Cbr\u003E\n\u00A0 \u00A0 print \u0022Landing Mode: \u0022 \u002B lMode.\u003Cbr\u003E\n\u00A0 \u00A0 if (lMode = \u0022ASDS\u0022 or lMode = \u0022AOTL\u0022) {global a is 120. global fuelToLand is 5000.} // 80\u003Cbr\u003E\n\u00A0 \u00A0 else {set a to 130. set fuelToLand to 5800.}\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // TargetOrbit Setup\u003Cbr\u003E\n\u00A0 \u00A0 if (tOrbit \u0026lt; 100000) {print \u0022Target Orbit too low: \u0022 \u002B tOrbit. abort on.}\u003Cbr\u003E\n\u00A0 \u00A0 else {print \u0022Target Orbit: \u0022 \u002B tOrbit.}\u003Cbr\u003E\n\u00A0 \u00A0 global atmosphericAlt is body:atm:height.\u003Cbr\u003E\n\u00A0 \u00A0 global targetOrbit is tOrbit.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // TargetInclination Setup\u003Cbr\u003E\n\u00A0 \u00A0 if (tInc \u0026gt; 90) {print \u0022Target Inclination too high: \u0022 \u002B tInc. abort on.}\u003Cbr\u003E\n\u00A0 \u00A0 else if (tInc \u0026lt; -90) {print \u0022Target Inclination too low: \u0022 \u002B tInc. abort on.}\u003Cbr\u003E\n\u00A0 \u00A0 else {print \u0022Target Inclination: \u0022 \u002B tInc.}\u003Cbr\u003E\n\u00A0 \u00A0 global targetInclination is tInc.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 lights on.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // PayloadType Setup\u003Cbr\u003E\n\u00A0 \u00A0 print \u0022Payload Type: \u0022 \u002B pType.\u003Cbr\u003E\n\u00A0 \u00A0 if (pType = \u0022Cargo\u0022) {global hasFairings is true. global fairingSepAlt is 80000. cargoFlight().} // 90 timer\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n}\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n// Other Variables\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nfunction pitchOfVector {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 parameter vecT.\u003Cbr\u003E\n\u00A0 \u00A0 return 90 - vang(ship:up:vector, vecT).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n}\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n// Cargo Ascent Functions\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nfunction cargoFlight {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // Steeringmanager Setup\u003Cbr\u003E\n\u00A0 \u00A0 set steeringmanager:rollts to 25.\u003Cbr\u003E\n\u00A0 \u00A0 set steeringmanager:maxstoppingtime to 10.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 set orbitalInsertionBurnLock to true.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // Script Setup\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 runOncePath(\u00220:/lib_lazcalc\u0022).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // Liftoff \u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 toggle ag2.\u003Cbr\u003E\n\u00A0 \u00A0 wait 10.\u003Cbr\u003E\n\u00A0 \u00A0 stage.\u003Cbr\u003E\n\u00A0 \u00A0 lock throttle to 1.\u003Cbr\u003E\n\u00A0 \u00A0 wait 2.\u003Cbr\u003E\n\u00A0 \u00A0 stage.\u003Cbr\u003E\n\u00A0 \u00A0 lock steering to up.\u003Cbr\u003E\n\u00A0 \u00A0 wait 8.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 print \u0022Liftoff\u0022.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 wait 1.5.\u003Cbr\u003E\n\u00A0 \u00A0 if verticalSpeed \u0026gt; 1 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 print \u0022Nominal liftoff\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 } else {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 print \u0022Abort activated\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 abort on.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 shutdown.\u003Cbr\u003E\n\u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 // Functions\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 cargoAscent().\u003Cbr\u003E\n\u00A0 \u00A0 cargoMeco().\u003Cbr\u003E\n\u00A0 \u00A0 cargoSecondStage().\u003Cbr\u003E\n\u00A0 \u00A0 cargoOrbitalBurn().\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n}\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nfunction cargoAscent {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 local azimuth_data is LAZcalc_init(targetOrbit, targetInclination).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 local slope is (0-90) / (1000 * (a - 10 - a * 0.05) - 0).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 until (ship:liquidfuel \u0026lt;= fuelToLand \u002B 100) {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 local pitch is slope * ship:apoapsis \u002B 90.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 if pitch \u0026lt; 0 {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 set pitch to 0.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 if pitch \u0026gt; pitchOfVector(velocity:surface) \u002B 5 {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 set pitch to pitchOfVector(velocity:surface) \u002B 5.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 } else if pitch \u0026lt; pitchOfVector(velocity:surface) - 5 {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 set pitch to pitchOfVector(velocity:surface) -5.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 local azimuth is LAZcalc(azimuth_data).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 lock steering to heading(azimuth, pitch).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n}\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nfunction cargoMeco {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 wait until (ship:liquidfuel \u0026lt;= fuelToLand \u002B 100).\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eon.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 set currentFacing to facing.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 lock steering to currentFacing.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 wait until (ship:oxidizer \u0026lt;= fuelToLand).\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 lock throttle to 0.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 lock steering to currentFacing.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 wait 0.5.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 print \u0022MECO\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eon.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 toggle ag8.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 stage.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 print \u0022STAGE SEP\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 wait 3.5.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 lock throttle to 1.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 print \u0022SSI1\u0022.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n}\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nfunction cargoSecondStage {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 lock steering to currentFacing.\u003Cbr\u003E\n\u00A0 \u00A0 wait 5.\u003Cbr\u003E\n\u00A0 \u00A0 lock steering to prograde.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 when (ship:altitude \u0026gt;= fairingSepAlt and hasFairings = true) then {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 stage.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 print \u0022Fairing sep\u0022.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 when missionTime \u0026gt;= 280 then {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 print \u0022Signal Kermuda, Stage 2 FTS Safed\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 wait until (ship:apoapsis \u0026gt;= targetOrbit).\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 lock throttle to 0.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 print \u0022SECO1\u0022.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 wait until (ship:altitude \u0026gt;= atmosphericAlt).\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 set orbitalInsertionBurnLock to false.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 print \u0022Atmospheric Exit\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 print eta:apoapsis.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n}\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nfunction cargoOrbitalBurn {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 set targetVel to sqrt(ship:body:mu / (ship:orbit:body:radius \u002B ship:orbit:apoapsis)).\u003Cbr\u003E\n\u00A0 \u00A0 set apVel to sqrt(((1 - ship:orbit:eccentricity) * ship:orbit:body:mu) / ((1 \u002B ship:orbit:eccentricity) * ship:orbit:semimajoraxis)).\u003Cbr\u003E\n\u00A0 \u00A0 set\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto targetVel - apVel.\u003Cbr\u003E\n\u00A0 \u00A0 set myNode to node(time:seconds \u002B eta:apoapsis, 0, 0,\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E\u003C/abbr\u003E).\u003Cbr\u003E\n\u00A0 \u00A0 add myNode.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 lock steering to lookdirup(ship:prograde:vector, heading(180, 0):vector).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 set nd to nextNode.\u003Cbr\u003E\n\u00A0 \u00A0 set max_acc to ship:maxthrust / ship:mass.\u003Cbr\u003E\n\u00A0 \u00A0 set burn_duration to nd:deltav:mag / max_acc.\u003Cbr\u003E\n\u00A0 \u00A0 wait until nd:eta \u0026lt;= (burn_duration / 2 \u002B 60).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 set np to nd:deltav.\u003Cbr\u003E\n\u00A0 \u00A0 lock steering to np.\u003Cbr\u003E\n\u00A0 \u00A0 wait until vang(np, ship:facing:vector) \u0026lt; 0.33.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 wait until nd:eta \u0026lt;= (burn_duration / 2).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 set dv0 to nd:deltav.\u003Cbr\u003E\n\u00A0 \u00A0 set done to false.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 until done {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 wait 0.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 set max_acc to ship:maxthrust / ship:mass.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 lock throttle to min(nd:deltav:mag / max_acc, 1).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 print \u0022SSI2\u0022.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 if vdot(dv0, nd:deltav) \u0026lt; 0 {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 lock throttle to 0.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 print \u0022SECO2\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 break.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 if nd:deltav:mag \u0026lt; 0.1 {\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 wait until vdot(dv0, nd:deltav) \u0026lt; 0.5.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 lock throttle to 0.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 print \u0022SECO2\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 shutdown.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Stability Augmentation System\u0022\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003Esas\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eon.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n}\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nScript 2:\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n// Elixer Space Company - ASDS Script [version 0.3.1]\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\n// Landing Parameters\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\nparameter landingZone is latlng(-0.0972081051142032, -74.5576756827403).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\n// Initialization\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\nwait until ag8.\u003Cbr\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eon.\u003Cbr\u003E\nset currentFacing to facing.\u003Cbr\u003E\nlock steering to currentFacing.\u003Cbr\u003E\nwait 3.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\n// ASDS \u0026amp; AOTL Functions\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\n\u00A0 \u00A0 clearscreen.\u003Cbr\u003E\n\u00A0 \u00A0 print \u0022Elixer Landing Software\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 print \u0022-\u0022.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 set steeringManager:maxstoppingtime to 5.\u003Cbr\u003E\n\u00A0 \u00A0 set steeringManager:rollts to 20.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\n\u00A0 \u00A0 // Landing Variables\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\n\u00A0 \u00A0 set radarOffset to 21.15. // This must be changed to the height of the landing vehicle (on gear)\u003Cbr\u003E\n\u00A0 \u00A0 lock trueRadar to alt:radar - radarOffset.\u003Cbr\u003E\n\u00A0 \u00A0 lock g to constant:g * body:mass / body:radius^2.\u003Cbr\u003E\n\u00A0 \u00A0 lock maxDecel to (ship:availablethrust / ship:mass) - g.\u003Cbr\u003E\n\u00A0 \u00A0 lock stopDist to ship:verticalspeed^2 / (2 * maxDecel).\u003Cbr\u003E\n\u00A0 \u00A0 lock idealThrottle to stopDist / trueRadar.\u003Cbr\u003E\n\u00A0 \u00A0 lock impactTime to trueRadar / abs(ship:verticalspeed).\u003Cbr\u003E\n\u00A0 \u00A0 lock\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto 30.\u003Cbr\u003E\n\u00A0 \u00A0 lock errorScaling to 1.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\n\u00A0 \u00A0 // Guidance Functions\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cbr\u003E\n\u00A0 \u00A0 function getImpact {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 if addons:tr:hasimpact { return addons:tr:impactpos. }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return ship:geoposition.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 function lngError {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 return getImpact():lng - landingZone:lng.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 function latError {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 return getImpact():lat - landingZone:lat.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 function errorVector {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 return getImpact():position - landingZone:position.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 function getSteering {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 local errorVector is errorVector().\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 local velVector is -ship:velocity:surface.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 local result is velVector \u002B errorVector*errorScaling.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 if vang(result, velVector) \u0026gt;\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 set result to velVector:normalized\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u002B tan(\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E)*errorVector:normalized.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 return lookdirup(result, facing:topvector).\u003Cbr\u003E\n\u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eon.\u003Cbr\u003E\nlock steering to srfretrograde.\u00A0\u003Cbr\u003E\nbrakes on.\u003Cbr\u003E\nwait until ship:verticalspeed \u0026lt;-700.\u003Cbr\u003E\n\u00A0 \u00A0 lock throttle to 1.\u003Cbr\u003E\n\u00A0 \u00A0 lock\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto -5.\u003Cbr\u003E\n\u00A0 \u00A0 lock steering to getSteering().\u003Cbr\u003E\n\u00A0 \u00A0 toggle ag1.\u003Cbr\u003E\n\u00A0 \u00A0 toggle ag7.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eoff.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nwait until ship:verticalspeed \u0026gt; -200.\u003Cbr\u003E\n\u00A0 \u00A0 lock throttle to 0.\u003Cbr\u003E\n\u00A0 \u00A0 lock\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto 17.5.\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 lock steering to getSteering().\u003Cbr\u003E\n\u00A0 \u00A0 steeringManager:resettodefault().\u003Cbr\u003E\n\u00A0 \u00A0\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eon.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nwait until alt:radar \u0026lt; 12000.\u003Cbr\u003E\n\u00A0 \u00A0 lock\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto 10.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nwait until alt:radar \u0026lt; 7000.\u003Cbr\u003E\n\u00A0 \u00A0 lock\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto 5.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nWAIT UNTIL ship:verticalspeed \u0026lt; -10.\u00A0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eon.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0when impactTime \u0026lt; 2.75 then {gear on.}\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nWAIT UNTIL trueRadar \u0026lt; stopDist.\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 lock throttle to 1.\u003Cbr\u003E\n\u00A0 \u00A0 lock\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto -3.\u003Cbr\u003E\n\u00A0 \u00A0 lock steering to getSteering().\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nwait until ship:verticalspeed \u0026gt; -45.\u003Cbr\u003E\n\u00A0 \u00A0 toggle ag1.\u003Cbr\u003E\n\u00A0 \u00A0 lock throttle to idealThrottle.\u003Cbr\u003E\n\u00A0 \u00A0 lock\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Angle of Attack\u0022\u003E\u003Cabbr title=\u0022Angle of Attack\u0022\u003Eaoa\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto -2.\u003Cbr\u003E\n\u00A0 \u00A0 lock steering to getSteering().\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nwhen impactTime \u0026lt; 0.75 then {lock steering to heading(90, 90).}\u003Cbr\u003E\n\u00A0 \u00A0\u003Cbr\u003E\nWAIT UNTIL ship:verticalspeed \u0026gt; -0.1.\u003Cbr\u003E\n\u00A0 \u00A0 lock steering to up.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0set ship:control:pilotmainthrottle to 0.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eoff.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nScript 3:\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n//This file is distributed under the terms of the MIT license, (c) the KSLib team\u003Cbr\u003E\n//=====LAUNCH AZIMUTH CALCULATOR=====\u003Cbr\u003E\n//~~LIB_LAZcalc.ks~~\u003Cbr\u003E\n//~~Version 2.2~~\u003Cbr\u003E\n//~~Created by space-is-hard~~\u003Cbr\u003E\n//~~Updated by TDW89~~\u003Cbr\u003E\n//~~Auto north/south switch by undercoveryankee~~\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n@LAZYGLOBAL OFF.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nFUNCTION LAZcalc_init {\u003Cbr\u003E\n\u00A0 \u00A0 PARAMETER\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 desiredAlt, //Altitude of desired target orbit (in *meters*)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 desiredInc. //Inclination of desired target orbit\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 PARAMETER autoNodeEpsilon IS 10. // How many m/s north or south\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 // will be needed to cause a north/south switch. Pass zero to disable\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 // the feature.\u003Cbr\u003E\n\u00A0 \u00A0 SET autoNodeEpsilon to ABS(autoNodeEpsilon).\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 //We\u0027ll pull the latitude now so we aren\u0027t sampling it multiple times\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL launchLatitude IS SHIP:LATITUDE.\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL data IS LIST(). \u00A0 // A list is used to store information used by LAZcalc\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 //Orbital altitude can\u0027t be less than sea level\u003Cbr\u003E\n\u00A0 \u00A0 IF desiredAlt \u0026lt;= 0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 PRINT \u0022Target altitude cannot be below sea level\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 SET launchAzimuth TO 1/0.\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0//Throws error\u003Cbr\u003E\n\u00A0 \u00A0 }.\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 //Determines whether we\u0027re trying to launch from the ascending or descending node\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL launchNode TO \u0022Ascending\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 IF desiredInc \u0026lt; 0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 SET launchNode TO \u0022Descending\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 //We\u0027ll make it positive for now and convert to southerly heading later\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 SET desiredInc TO ABS(desiredInc).\u003Cbr\u003E\n\u00A0 \u00A0 }.\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 //Orbital inclination can\u0027t be less than launch latitude or greater than 180 - launch latitude\u003Cbr\u003E\n\u00A0 \u00A0 IF ABS(launchLatitude) \u0026gt; desiredInc {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 SET desiredInc TO ABS(launchLatitude).\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 // HUDTEXT(\u0022Inclination impossible from current latitude, setting for lowest possible inclination.\u0022, 10, 2, 30, RED, FALSE).\u003Cbr\u003E\n\u00A0 \u00A0 }.\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 IF 180 - ABS(launchLatitude) \u0026lt; desiredInc {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 SET desiredInc TO 180 - ABS(launchLatitude).\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 // HUDTEXT(\u0022Inclination impossible from current latitude, setting for highest possible inclination.\u0022, 10, 2, 30, RED, FALSE).\u003Cbr\u003E\n\u00A0 \u00A0 }.\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 //Does all the one time calculations and stores them in a list to help reduce the overhead or continuously updating\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL equatorialVel IS (2 * CONSTANT():Pi * BODY:RADIUS) / BODY:ROTATIONPERIOD.\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL targetOrbVel IS SQRT(BODY:MU/ (BODY:RADIUS \u002B desiredAlt)).\u003Cbr\u003E\n\u00A0 \u00A0 data:ADD(desiredInc). \u00A0 \u00A0 \u00A0 //[0]\u003Cbr\u003E\n\u00A0 \u00A0 data:ADD(launchLatitude). \u00A0 //[1]\u003Cbr\u003E\n\u00A0 \u00A0 data:ADD(equatorialVel). \u00A0 \u00A0//[2]\u003Cbr\u003E\n\u00A0 \u00A0 data:ADD(targetOrbVel). \u00A0 \u00A0 //[3]\u003Cbr\u003E\n\u00A0 \u00A0 data:ADD(launchNode). \u00A0 \u00A0 \u00A0 //[4]\u003Cbr\u003E\n\u00A0 \u00A0 data:ADD(autoNodeEpsilon). \u00A0//[5]\u003Cbr\u003E\n\u00A0 \u00A0 RETURN data.\u003Cbr\u003E\n}.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nFUNCTION LAZcalc {\u003Cbr\u003E\n\u00A0 \u00A0 PARAMETER\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 data. //pointer to the list created by LAZcalc_init\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL inertialAzimuth IS ARCSIN(MAX(MIN(COS(data[0]) / COS(SHIP:LATITUDE), 1), -1)).\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL VXRot IS data[3] * SIN(inertialAzimuth) - data[2] * COS(data[1]).\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL VYRot IS data[3] * COS(inertialAzimuth).\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 // This clamps the result to values between 0 and 360.\u003Cbr\u003E\n\u00A0 \u00A0 LOCAL Azimuth IS MOD(ARCTAN2(VXRot, VYRot) \u002B 360, 360).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u00A0 \u00A0 IF data[5] {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 LOCAL NorthComponent IS VDOT(SHIP:VELOCITY:ORBIT, SHIP:NORTH:VECTOR).\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 IF NorthComponent \u0026gt; data[5] {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 SET data[4] TO \u0022Ascending\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 } ELSE IF NorthComponent \u0026lt; -data[5] {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 SET data[4] to \u0022Descending\u0022.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }.\u003Cbr\u003E\n\u00A0 \u00A0 }.\u003Cbr\u003E\n\u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 //Returns northerly azimuth if launching from the ascending node\u003Cbr\u003E\n\u00A0 \u00A0 IF data[4] = \u0022Ascending\u0022 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 RETURN Azimuth.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 //Returns southerly azimuth if launching from the descending node\u003Cbr\u003E\n\u00A0 \u00A0 } ELSE IF data[4] = \u0022Descending\u0022 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 IF Azimuth \u0026lt;= 90 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 RETURN 180 - Azimuth.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 } ELSE IF Azimuth \u0026gt;= 270 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 RETURN 540 - Azimuth.\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0\u00A0\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }.\u003Cbr\u003E\n\u00A0 \u00A0 }.\u003Cbr\u003E\n}.\n\u003C/p\u003E\n"},{"CreatedByName":"Kielm","CreatedById":82247,"CreatedDateTime":"2021-01-20T00:59:18Z","Content":"\n\u003Cp\u003E\nTry\u00A0\u003Ca href=\u0022https://ksp-kos.github.io/KOS/\u0022 rel=\u0022external nofollow\u0022\u003Ehere (github)\u003C/a\u003E\u00A0or\u00A0\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/165628-ksp-1101-and-111-kos-v1310-kos-scriptable-autopilot-system/\u0022 rel=\u0022\u0022\u003Ehere (kos thread)\u003C/a\u003E. I don\u0027t think the technical support is for individual mod support, sorry.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"ImAKerbal","CreatedById":206870,"CreatedDateTime":"2021-01-21T00:29:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223911809\u0022 data-ipsquote-contentid=\u0022199713\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221611104358\u0022 data-ipsquote-userid=\u002282247\u0022 data-ipsquote-username=\u0022Kielm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n23 hours ago, Kielm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nTry\u00A0\u003Ca href=\u0022https://ksp-kos.github.io/KOS/\u0022 rel=\u0022external nofollow\u0022\u003Ehere (github)\u003C/a\u003E\u00A0or\u00A0\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/165628-ksp-1101-and-111-kos-v1310-kos-scriptable-autopilot-system/\u0022 rel=\u0022\u0022\u003Ehere (kos thread)\u003C/a\u003E. I don\u0027t think the technical support is for individual mod support, sorry.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nok thanks\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}