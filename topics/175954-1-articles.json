{"TopicId":175954,"ForumId":29,"TopicTitle":"Best way to know when a part module is modified, both editor and flight","CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-06-17T12:01:07Z","PageNum":1,"Articles":[{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-06-17T12:01:07Z","Content":"\n\u003Cp\u003E\nThere is this event which notifies whenever a vessel is modified in the editor:\n\u003C/p\u003E\n\u003Cdiv style=\u0022background-color:#e2e8f2;border-left:1px solid #a8b8d9;border-right:1px solid #a8b8d9;border-top:1px solid #a8b8d9;color:#253555;font-size:14px;padding:6px 0px;\u0022\u003E\n\u003Ctable style=\u0022border-spacing:0px;font-size:14px;\u0022\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\u0022padding:0px;\u0022\u003E\n\u003Ctable style=\u0022font-size:14px;\u0022\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\u0022vertical-align:bottom;\u0022\u003E\nEventData\u0026lt;\u003Ca href=\u0022https://kerbalspaceprogram.com/api/class_ship_construct.html\u0022 rel=\u0022\u0022 style=\u0022color:#4665a2;\u0022\u003EShipConstruct\u003C/a\u003E\u0026gt; GameEvents.onEditorShipModified = new EventData\u0026lt;\u003Ca href=\u0022https://kerbalspaceprogram.com/api/class_ship_construct.html\u0022 rel=\u0022\u0022 style=\u0022color:#4665a2;\u0022\u003EShipConstruct\u003C/a\u003E\u0026gt;(\u0022onEditorShipModified\u0022)\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003C/td\u003E\n\u003Ctd style=\u0022padding:0px;vertical-align:bottom;\u0022\u003E\n\u003Cspan\u003E\u003Cspan style=\u0022background-color:#728dc1;border-color:#5373b4 #c4cfe5 #c4cfe5 #5373b4;border-style:solid;border-width:1px;color:#ffffff;font-size:7pt;padding:2px 3px;vertical-align:middle;\u0022\u003Estatic\u003C/span\u003E\u003C/span\u003E\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003C/div\u003E\n\u003Cdiv style=\u0022background-color:#ffffff;border-bottom-color:#a8b8d9;border-bottom-style:solid;border-left-color:#a8b8d9;border-left-style:solid;border-right-color:#a8b8d9;border-right-style:solid;border-width:0px 1px 1px;color:#000000;font-size:14px;padding:6px 10px 2px;\u0022\u003E\n\u003Cp style=\u0022font-size:14px;\u0022\u003E\nEvent called whenever the ship in the Editor is modified in any way\n\u003C/p\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nBut this is called whenever the ship is modified, and give no indication as to which part in the ship was modified.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve tried using the onEditorPartEvent, but it doesn\u0027t get called when a value in the right-click menu is changed (either button or slider).\n\u003C/p\u003E\n\u003Cp\u003E\nI need to know when a value in a part is modified, so that the change can be propagated to other identical parts in the vessel.\u00A0 Right now I need to check the current value against an old value, and then do updates if they are different, but this is wasteful.\u00A0 It would be better if the part module could be notified if it had been changed.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve been through the docs, and I don\u0027t see any way to know which part was modified, which is sad since I don\u0027t want to create unavoidable overhead.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI have a similar problem in flight, in that I need to know when a slider is moved, so that the change can be propagated to other parts.\u00A0 The following code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EGameEvents.onVesselWasModified.Add(onVesselWasModified);\n\n     or \n\nGameEvents.onVesselStandardModification.Add(onVesselWasModified);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\ndoesn\u0027t trigger when a slider is moved.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSuggestions?\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-06-17T14:45:23Z\u0022 title=\u002206/17/2018 02:45  PM\u0022 data-short=\u00226 yr\u0022\u003EJune 17, 2018\u003C/time\u003E by linuxgurugamer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2018-06-17T16:24:33Z","Content":"\n\u003Cp\u003E\nIf I follow your question, you want to know when a slider is moved in a PartModule - is that a custom part module that you\u0027re writing code for?\u00A0 I do that in the AviationLights mod in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E.\u00A0 There are a couple of steps to it:\n\u003C/p\u003E\n\u003Cp\u003E\nSet up the KSPField:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L73\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0- I tell it *not* to affect symmetry counterparts, since whether or not the change affects symmetry is an option for these parts.\u00A0 And I suppress the \u0022on modified\u0022 callback.\u00A0 I don\u0027t remember why - I think whichever mod I learned this trick in was doing it.\n\u003C/p\u003E\n\u003Cp\u003E\nTell KSP you want a custom callback fired when a slider is moved in the context menu:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L329\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHave a custom callback that does what you want:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L364\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0(in my case, I\u0027m using one callback for several related fields, so I\u0027ve got some extra logic to dispatch the change)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Dagger","CreatedById":147766,"CreatedDateTime":"2018-06-18T10:25:17Z","Content":"\n\u003Cp\u003E\nI do exactly as you do \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022129964\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0022 rel=\u0022\u0022\u003E@linuxgurugamer\u003C/a\u003E\u00A0on LMP. I\u00A0must reproduce part syncronization over network so for example if a player extends a ladder it\u0027s extended in the other clients\u00A0aswell.\n\u003C/p\u003E\n\u003Cp\u003E\nSome part modules have events (when storing/transmitting science experiments\u00A0for example) but most part modules don\u0027t so I run trough every part module at an interval to check for changes.\n\u003C/p\u003E\n\u003Cp\u003E\nI wish every \u0022KSPField\u0022 triggered an event when they are modified but unfortunately that would need to be done by Squad\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: Of course if you do your own partmodule you should do what MOARdV say but if you want to detect changes in the squad part modules (ModuleEngines, ModuleLight, etc) you need to do it with a loop\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-06-18T10:36:25Z\u0022 title=\u002206/18/2018 10:36  AM\u0022 data-short=\u00226 yr\u0022\u003EJune 18, 2018\u003C/time\u003E by Dagger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-06-18T10:31:39Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223400702\u0022 data-ipsquote-contentid=\u0022175954\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221529252673\u0022 data-ipsquote-userid=\u002260950\u0022 data-ipsquote-username=\u0022MOARdV\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, MOARdV said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf I follow your question, you want to know when a slider is moved in a PartModule - is that a custom part module that you\u0027re writing code for?\u00A0 I do that in the AviationLights mod in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E.\u00A0 There are a couple of steps to it:\n\u003C/p\u003E\n\u003Cp\u003E\nSet up the KSPField:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L73\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0- I tell it *not* to affect symmetry counterparts, since whether or not the change affects symmetry is an option for these parts.\u00A0 And I suppress the \u0022on modified\u0022 callback.\u00A0 I don\u0027t remember why - I think whichever mod I learned this trick in was doing it.\n\u003C/p\u003E\n\u003Cp\u003E\nTell KSP you want a custom callback fired when a slider is moved in the context menu:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L329\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHave a custom callback that does what you want:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L364\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0(in my case, I\u0027m using one callback for several related fields, so I\u0027ve got some extra logic to dispatch the change)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThank You!!!!!\n\u003C/p\u003E\n\u003Cp\u003E\nNow stuffing this into my bag of tricks.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-06-29T19:06:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223400702\u0022 data-ipsquote-contentid=\u0022175954\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221529252673\u0022 data-ipsquote-userid=\u002260950\u0022 data-ipsquote-username=\u0022MOARdV\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/17/2018 at 12:24 PM, MOARdV said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf I follow your question, you want to know when a slider is moved in a PartModule - is that a custom part module that you\u0027re writing code for?\u00A0 I do that in the AviationLights mod in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E.\u00A0 There are a couple of steps to it:\n\u003C/p\u003E\n\u003Cp\u003E\nSet up the KSPField:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L73\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0- I tell it *not* to affect symmetry\u003Cspan\u003E\uFEFF\u003C/span\u003E counterparts, since whether or not the change affects symmetry is an option for these parts.\u00A0 And I suppress the \u0022on modified\u0022 callback.\u00A0 I don\u0027t remember why - I think whichever mod I learned this trick in was doing it.\n\u003C/p\u003E\n\u003Cp\u003E\nTell KSP you want a custom callback fired when a slider is moved in the context menu:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L329\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHave a custom callback that does what you want:\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AviationLights/blob/57822b090c311404e208a76caeb13f2368bb352f/Source/AviationLights.cs#L364\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0(in my case, I\u0027m using one callback for several related fields, so I\u0027ve got some extra logic to dispatch the change)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRelated question:\n\u003C/p\u003E\n\u003Cp\u003E\nHow can I know when a resource transfer has been initiated, and when it has been completed?\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMy issue is that in order to deal with floating point round off errors, I need to have a shadow resource which contains the actual resources multiplied by a large constant.\u00A0 All in-game resource usage is done using the shadow resource, which is hidden from the player.\u00A0 The visible resource is updated on a regular basis.\u00A0 The problem comes when\u00A0 you try to transfer from one tank to another.\u00A0 The transfer is done using the visible resource, but gets replaced by the hidden resource, which is not changed by the transfer.\n\u003C/p\u003E\n\u003Cp\u003E\nIdeally, I\u0027d like to know when the \u0022In\u0022, \u0022Out\u0022, and \u0022Stop\u0022 buttons are pressed, so that I can do the hidden transfer behind the scenes.\u00A0 I would also need to know the two parts the transfer is going between\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2018-06-29T19:41:25Z","Content":"\n\u003Cp\u003E\nThe simplest method might be to attach a listener MonoBehaviour to the UIPartActionResourceTransfer prefab (UIPartActionController.Instance.resourceTransferItemPrefab), when the listener script is awakened you can do whatever checks are necessary to accomplish what you want. All of the relevant information should be public: the part that the transfer control is attached to, the resource,\u00A0\u00A0all of the other parts that are currently part of the transfer.\n\u003C/p\u003E\n\u003Cp\u003E\nYou could\u00A0attach your own listeners to the In/Out/Stop buttons, they are also public, and that would be the simplest way of determining when they are clicked on.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-06-29T19:47:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223407484\u0022 data-ipsquote-contentid=\u0022175954\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221530301285\u0022 data-ipsquote-userid=\u002257416\u0022 data-ipsquote-username=\u0022DMagic\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, DMagic said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe simplest method might be to attach a listener MonoBehaviour \u003Cspan\u003E\uFEFF\u003C/span\u003Eto the UIPartActionResourceTransfer prefab (UIPartActionController.Instance.resourceTransferItemPrefab), when the listener script is awakened you can do whatever checks are necessary to accomplish what you want. All of the relevant information should be public: the part that the transfer control is attached to, the resource,\u00A0\u00A0all of the other parts that are currently part of the transfer.\n\u003C/p\u003E\n\u003Cp\u003E\nYou could\u00A0attach your own listeners to the In/Out/Stop buttons, they are also public, and that would be the simplest way of determining when they are clicked on.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOk.\u00A0 ummm, about to show my ignorance.\u00A0 How?\n\u003C/p\u003E\n\u003Cp\u003E\nOh, never mind, I\u0027ve found enough examples to figure it out\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2018-06-29T20:10:52Z","Content":"\n\u003Cp\u003E\nSomething like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E    [KSPAddon(KSPAddon.Startup.Flight, true)]\n    public class AddListener : MonoBehaviour\n    {\n        public static EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onTransferSpawn = new EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(\u0022onTransferSpawn\u0022);\n\n        private void Start()\n        {\n            onTransferSpawn.Add(OnTransferSpawned);\n\n            //This probably only needs to be attached once, but using AddOrGetComponent insures that you don\u0027t\n            //end up with multiple copies of your listener\n            UIPartActionController.Instance.resourceTransferItemPrefab.gameObject.AddOrGetComponent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;TransferListener\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n        }\n\n        private void OnTransferSpawned(UIPartActionResourceTransfer transfer)\n        {\n            //Check if part or resources are relevant, check for other parts, etc...\n\n            Part p = transfer.Part;\n            PartResource r = transfer.Resource;\n            List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E targets = transfer.Targets;\n\n            //Add your own listeners to the in, out, and stop buttons\n            transfer.flowOutBtn.onClick.AddListener(OnOutClick);\n            //etc...\n        }\n\n        private void OnOutClick()\n        {\n\n        }\n\n    }\n\n    public class TransferListener : MonoBehaviour\n    {\n        private void Awake()\n        {\n            AddListener.onTransferSpawn.Fire(gameObject.GetComponentInParent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E());\n        }\n    }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe listener MonoBehaviour gets attached to the prefab, so whenever KSP spawns a new resource transfer control element, it will make a copy of that prefab, with your listener alongside it. Then when your listener script starts it will go through its Awake, Start, etc... methods and you can use one of those to find the\u00A0UIPartActionResourceTransfer component, which should be on the same game object, and fire an event with that component as an argument. Then your event listener can do something with that transfer component.\n\u003C/p\u003E\n\u003Cp\u003E\nModifying prefabs in this way can be a fantastically useful tool when you are trying to do something with stock KSP mechanisms. The only problem is the inconsistent ways that KSP uses to handle prefabs, sometimes they are easy to find and public like this, other times you have to get them by name from \u003Ca href=\u0022https://github.com/DMagic1/KSP_Science_Relay/blob/master/Source/ScienceRelay.cs#L179-L186\u0022 rel=\u0022external nofollow\u0022\u003EAssetBase\u003C/a\u003E, and other times they are just really hard to find or private.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-06-29T20:13:07Z","Content":"\n\u003Cp\u003E\nThank you so much.\n\u003C/p\u003E\n\u003Cp\u003E\nand IFI Life Support thanks you as well.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-06-30T15:05:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223407500\u0022 data-ipsquote-contentid=\u0022175954\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221530303052\u0022 data-ipsquote-userid=\u002257416\u0022 data-ipsquote-username=\u0022DMagic\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, DMagic said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSomething like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    [KSPAddon(KSPAddon.Startup\u003Cspan\u003E\uFEFF\u003C/span\u003E.Flight\u003Cspan\u003E\uFEFF\u003C/span\u003E, true)]\n    public class AddListener : MonoBehaviour\u003Cspan\u003E\uFEFF\u003C/span\u003E\n    {\n        public static EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onTransferSpawn = new EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(\u0022onTransferSpawn\u0022);\n\n        private void Start()\n        {\n            onTransferSpawn.Add(OnTransferSpawned);\n\n            //This probably only needs to be attached once, but using AddOrGetComponent insures that you don\u0027t\n            //end up with multiple copies of your listener\n            UIPartActionController.Instance.resourceTransferItemPrefab.gameObject.AddOrGetComponent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;TransferListener\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n        }\n\n        private void OnTransferSpawned(UIPartActionResourceTransfer transfer)\n        {\n            //Check if part or resources are relevant, check for other parts, etc...\n\n            Part p = transfer.Part;\n            PartResource r = transfer.Resource;\n            List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E targets = transfer.Targets;\n\n            //Add your own listeners to the in, out, and stop buttons\n            transfer.flowOutBtn.onClick.AddListener(OnOutClick);\n            //etc...\n        }\n\n        private void OnOutClick()\n        {\n\n        }\n\n    }\n\n    public class TransferListener : MonoBehaviour\n    {\n        private void Awake()\n        {\n            AddListener.onTransferSpawn.Fire(gameObject.GetComponentInParent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E());\n        }\n    }\u003Cspan\u003E\uFEFF\u003C/span\u003E\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe listener MonoBehaviour gets attached to the prefab, so whenever KSP spawns a new resource transfer control element, it will make a copy of that prefab, with your listener alongside it. Then when your listener script starts it will go through its Awake, Start, etc... methods and you can use one of those to find the\u00A0UIPartActionResourceTransfer component, which should be on the same game object, and fire an event with that component as an argument. Then your event listener can do something with that transfer component.\n\u003C/p\u003E\n\u003Cp\u003E\nModifying prefabs in this way can be a fantastically useful tool when you are trying to do something with stock KSP mechanisms. The only problem is the inconsistent ways that KSP uses to handle prefabs, sometimes they are easy to find and public like this, other times you have to get them by name from \u003Ca href=\u0022https://github.com/DMagic1/KSP_Science_Relay/blob/master/Source/ScienceRelay.cs#L179-L186\u0022 rel=\u0022external nofollow\u0022\u003EAssetBase\u003C/a\u003E, and other times they are just really hard to find or private.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m going to document this as I get it figured out, it\u0027s not obvious and may help someone else.\n\u003C/p\u003E\n\u003Cp\u003E\nThe\u00A0UIPartActionResourceTransfer get spawned the first time a PAW menu is brought up on a second part when a transfer is possible.\n\u003C/p\u003E\n\u003Cp\u003E\nWhenever\u00A0 a PAW menu is brought up on a second part when a transfer is possible, the event is called, which calls (in the above script) OnTransferSpawned().\n\u003C/p\u003E\n\u003Cp\u003E\nEntering OnTransferSpawned:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\ntransfer.Part is null\n\u003C/li\u003E\n\u003Cli\u003E\ntransfer.Resource is null\n\u003C/li\u003E\n\u003Cli\u003E\ntransfer.targets has no entries\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nSave the\u00A0UIPartActionResourceTransfer in a local variable, it will be used when starting the transfer\n\u003C/p\u003E\n\u003Cp\u003E\nWhen clicking either In or Out buttons:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\ntransfer.Part contains the name of the part which was initially clicked on\n\u003C/li\u003E\n\u003Cli\u003E\ntransfer.Resource now contains the resource being transferred\n\u003C/li\u003E\n\u003Cli\u003E\ntransfer.state indicates the flow state (in, out or none) for the part\n\u003C/li\u003E\n\u003Cli\u003E\nThe transfer.targets list contains the first part clicked, as well as all other parts involved in the current transfer\n\u003Cul\u003E\u003Cli\u003E\nUsing t2 for each entry in the transfer.targets list:\n\u003C/li\u003E\n\u003Cli\u003E\nt2.Part contains the name of the part\n\u003C/li\u003E\n\u003Cli\u003E\nt2.Resource contains the resource being transferred\n\u003C/li\u003E\n\u003Cli\u003E\nt2.state indicates the flow state for the part\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nThe transfer rate appears to be based on the volume of the destination tank.\u00A0 After a number of tests, it seems to take 20 seconds to fill a tank completely.\u00A0 So, 1/20 of a tank per second\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2018-06-30T16:08:23Z","Content":"\n\u003Cp\u003E\nThose values are probably null because the listener event is being fired in the Awake method. You could use Start instead, or start a coroutine and wait a few frames to allow for everything to be initialized.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-07-02T04:20:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223407911\u0022 data-ipsquote-contentid=\u0022175954\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221530374903\u0022 data-ipsquote-userid=\u002257416\u0022 data-ipsquote-username=\u0022DMagic\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/30/2018 at 12:08 PM, DMagic said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThose values are probably null because the listener event is being fired in the Awake method. You could use Start instead, or start a coroutine and wait a few frames to allow for everything to be initialized.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNope. \u00A0I have it working. \u00A0Those vars dont get initialized until there are at lease two parts selected. \u00A0When you think about it, it makes sense. \u00A0There isnt a valid part if there is only one selected.\n\u003C/p\u003E\n\u003Cp\u003E\nInside a FixedUpdate method, you can monitor it and see when it gets initialized.\n\u003C/p\u003E\n\u003Cp\u003E\nill post my code tomorrow.\n\u003C/p\u003E\n"},{"CreatedByName":"gomker","CreatedById":141269,"CreatedDateTime":"2018-07-16T01:17:26Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022129964\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0022 rel=\u0022\u0022\u003E@linuxgurugamer\u003C/a\u003E\u00A0you ever get this all sorted, google searching led me here having a similar issue. I only want a certain calc to run when the part is changed by tweakscale\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-07-16T03:59:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223416217\u0022 data-ipsquote-contentid=\u0022175954\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221531703846\u0022 data-ipsquote-userid=\u0022141269\u0022 data-ipsquote-username=\u0022gomker\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, gomker said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022129964\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0022 rel=\u0022\u0022\u003E@linuxgurugamer\u003C/a\u003E\u00A0you ever get this all sorted, google searching led me here having a similar issue. I only want a certain calc to run when the part is changed by tweakscale\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, ping me if I dont post it tomorrow.\n\u003C/p\u003E\n"},{"CreatedByName":"gomker","CreatedById":141269,"CreatedDateTime":"2018-07-18T02:01:56Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223416253\u0022 data-ipsquote-contentid=\u0022175954\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221531713584\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 7/15/2018 at 10:59 PM, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYes, ping me if I dont post it tomorrow.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPing \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-07-18T12:48:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223416217\u0022 data-ipsquote-contentid=\u0022175954\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221531703846\u0022 data-ipsquote-userid=\u0022141269\u0022 data-ipsquote-username=\u0022gomker\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 7/15/2018 at 9:17 PM, gomker said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022129964\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0022 rel=\u0022\u0022\u003E@linuxgurugamer\u003C/a\u003E\u00A0you ever get this all sorted, google searching led me here having a similar issue. I only want a certain calc to run when the part is changed by tweakscale\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHere you go.\u00A0 What this is doing is coordinating a hidden resource with a visible resource, so that when one is changed, the other will be updated.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing UnityEngine;\n\nnamespace IFILifeSupport\n{\n\n    [KSPAddon(KSPAddon.Startup\uFEFF.Flight\uFEFF, false)]\n    public class AddTransferListener : MonoBehaviour\uFEFF\n    {\n        public static EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onTransferSpawn = new EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(\u0022onTransferSpawn\u0022);\n        UIPartActionResourceTransfer t;\n\n        private void Start()\n        {\n            Log.Info(\u0022Transfer.Start\u0022);\n\n            onTransferSpawn.Add(OnTransferSpawned);\n\n            //This probably only needs to be attached once, but using AddOrGetComponent insures that you don\u0027t\n            //end up with multiple copies of your listener\n            UIPartActionController.Instance.resourceTransferItemPrefab.gameObject.AddOrGetComponent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;TransferListener\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n        }\n\n        void OnDestroy()\n        {\n            Log.Info(\u0022Transfer.OnDestroy\u0022);\n        }\n          \n        void DisplayTransferInfo(UIPartActionResourceTransfer t, bool descend = false)\n        {\n#if false\n            Log.Info(\u0022\\r\\n\\r\\n DisplayTransferInfo, descend: \u0022 \u002B descend);\n            Log.Info(\u0022Transfer.OnTransferSpawned, transfer.lastUT: \u0022 \u002B t.lastUT);\n\n            Part p = t.Part;\n            PartResource r = t.Resource;\n            List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E targets = t.Targets;\n            \n            if (t.Part != null)\n                Log.Info(\u0022transfer.Part: \u0022 \u002B t.Part.partInfo.title);\n            \n            if (t.Resource != null)\n                Log.Info(\u0022Transfer.Resource: \u0022 \u002B t.Resource.resourceName);\n            Log.Info(\u0022Transfer.state: \u0022 \u002B t.state);\n            if (t.Part != null)\n            {\n                double m = r.maxAmount;\n                Log.Info(\u0022Transfer rate: \u0022 \u002B m \u002B \u0022 per second\u0022);\n            }\n            foreach (UIPartActionResourceTransfer t1 in targets)\n            {\n                Log.Info(\u0022t: \u0022 \u002B t1);\n                Log.Info(\u0022Transfer.Destination transfer.Part: \u0022 \u002B t1.Part.partInfo.title);\n                Log.Info(\u0022Transfer.Destination transfer.Resource: \u0022 \u002B t1.Resource.resourceName);\n                if (descend)\n                    DisplayTransferInfo(t1);\n            }\n#endif\n        }\n\n        Part source;\n        double maxRequested;\n        string hiddenResource;\n        bool transferInProgress = false;\n        double lastUT;\n\n        void GetTransferValues(UIPartActionResourceTransfer transfer)\n        {\n            maxRequested = 0;\n            if (t.state == UIPartActionResourceTransfer.FlowState.In)\n            {\n                var r = t.Part.Resources[hiddenResource];\n                maxRequested \u002B= r.maxAmount;\n            }\n            if (t.state == UIPartActionResourceTransfer.FlowState.Out)\n                source = t.Part;\n\n            List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E targets = t.Targets;\n            foreach (UIPartActionResourceTransfer t1 in targets)\n            {\n                if (t1.state == UIPartActionResourceTransfer.FlowState.In)\n                {\n                    var r = t1.Part.Resources[hiddenResource];\n                    maxRequested \u002B= r.maxAmount;\n                }\n                if (t1.state == UIPartActionResourceTransfer.FlowState.Out)\n                    source = t1.Part;\n            }\n            lastUT = transfer.lastUT;\n            maxRequested = maxRequested / 20;\n            Log.Info(\u0022GetTransferValues, maxRequested/sec: \u0022 \u002B maxRequested);\n            Log.Info(\u0022GetTransferValues, source: \u0022 \u002B source.partInfo.title);\n        }\n\n        private void OnTransferSpawned(UIPartActionResourceTransfer transfer)\n        {\n            Log.Info(\u0022OnTransferSpawned\u0022);\n            t = transfer;\n\n            DisplayTransferInfo(t, true);\n\n            //Add your own listeners to the in, out, and stop buttons\n            transfer.flowInBtn.onClick.AddListener(OnInClick);\n            transfer.flowOutBtn.onClick.AddListener(OnOutClick);\n            transfer.flowStopBtn.onClick.AddListener(OnStopClick);          \n        }\n\n        bool LifeSupportResource(string resource)\n        {\n            var b = IFI_Resources.DISPLAY_RESOURCES.Contains(resource);\n            Log.Info(\u0022Transfer.LifesupportResource, res: \u0022 \u002B resource);\n            if (b)\n            {\n                hiddenResource = IFI_Resources.RESOURCES[IFI_Resources.DISPLAY_RESOURCES.IndexOf(resource)];\n                Log.Info(\u0022Transfer.LifeSupportResource, hiddenResource: \u0022 \u002B hiddenResource);\n                GetTransferValues(t);\n            }\n            return b;\n        }\n\n        private void OnInClick()\n        {\n            Log.Info(\u0022Transfer.OnInClick, transfer.lastUT: \u0022 \u002B t.lastUT);\n            DisplayTransferInfo(t, true);\n            transferInProgress = LifeSupportResource(t.Resource.resourceName);\n\n        }\n\n        private void OnStopClick()\n        {\n            Log.Info(\u0022Transfer.OnStopClick, transfer.lastUT: \u0022 \u002B t.lastUT);\n            DisplayTransferInfo(t, true);\n            transferInProgress = false;\n            t.FlowStop();\n\n        }\n\n        private void OnOutClick()\n        {\n            Log.Info(\u0022Transfer.OnOutClick, transfer.lastUT: \u0022 \u002B t.lastUT);\n            DisplayTransferInfo(t, true);\n            transferInProgress = LifeSupportResource(t.Resource.resourceName);\n        }\n\n        void FixedUpdate()\n        {\n            if (transferInProgress \u0026amp;\u0026amp; t != null \u0026amp;\u0026amp; t.Resource != null \u0026amp;\u0026amp; lastUT != t.lastUT \u0026amp;\u0026amp; t.state != UIPartActionResourceTransfer.FlowState.None)\n            {\n                double timeSlice = t.lastUT - lastUT;\n                Log.Info(\u0022timeSlice: \u0022 \u002B timeSlice);\n                double requestAmt = maxRequested * timeSlice;\n                double totalTransferred = 0;               \n\n                // Get the available resources for transfer\n                double availResForTransfer = source.RequestResource(hiddenResource, requestAmt, ResourceFlowMode.NO_FLOW);\n\n                // now transfer the resources into the new parts.\n\n                if (t.state == UIPartActionResourceTransfer.FlowState.In)\n                { \n                    double percentageOfTotal = t.Part.Resources[hiddenResource].maxAmount / 20f * timeSlice / requestAmt;\n                    var amtToTransfer = -1 * availResForTransfer * percentageOfTotal;\n                    \n                    var transferredAmt = t.Part.RequestResource(hiddenResource, amtToTransfer, ResourceFlowMode.NO_FLOW);\n                    totalTransferred \u002B= transferredAmt;\n                    //Log.Info(\u0022Transfer 1, after: Part: \u0022 \u002B t.Part.partInfo.title \u002B \u0022,  amount: \u0022 \u002B t.Part.Resources[hiddenResource].amount \u002B \u0022, transferred: \u0022 \u002B totalTransferred);\n                }\n\n\n                List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E targets = t.Targets;\n                foreach (UIPartActionResourceTransfer t1 in targets)\n                {\n                    if (t1.state == UIPartActionResourceTransfer.FlowState.In)\n                    {\n                        double percentageOfTotal = t1.Part.Resources[hiddenResource].maxAmount / 20f * timeSlice / requestAmt;\n\n                        var amtToTransfer = -1 * availResForTransfer * percentageOfTotal;\n                        var beforeAmt = t1.Part.Resources[hiddenResource].amount;\n\n                        Log.Info(\u0022Transfer 2, before, amount: \u0022 \u002B t1.Part.Resources[hiddenResource].amount \u002B \u0022, transferred: \u0022 \u002B totalTransferred);\n\n                        var transferredAmt = t1.Part.RequestResource(hiddenResource, amtToTransfer, ResourceFlowMode.NO_FLOW);\n                        totalTransferred \u002B= transferredAmt;\n                        //Log.Info(\u0022Transfer 2, after:  amount: \u0022 \u002B t1.Part.Resources[hiddenResource].amount \u002B \u0022, transferred: \u0022 \u002B totalTransferred);\n                        var afterAmt = t1.Part.Resources[hiddenResource].amount;\n                        Log.Info(\u0022Transfer 2, after:  amount: \u0022 \u002B afterAmt \u002B \u0022, Logged transfer amt: \u0022 \u002B transferredAmt \u002B \u0022, actual diff (after - before): \u0022 \u002B (afterAmt - beforeAmt));\n                        IFI_Resources.UpdatePartInfo(t1.Part);\n                    }\n                }\n\n                // Now return the unused resources\n                Log.Info(\u0022Transfer Returning, availResources: \u0022 \u002B availResForTransfer \u002B \u0022, total transferred: \u0022 \u002B totalTransferred \u002B \u0022, returning: \u0022 \u002B (availResForTransfer \u002B totalTransferred).ToString());\n                Log.Info(\u0022Transfer, before returning avail resources,  amount: \u0022 \u002B source.Resources[hiddenResource].amount);\n                source.RequestResource(hiddenResource, -1 * (availResForTransfer \u002B totalTransferred), ResourceFlowMode.NO_FLOW);\n                Log.Info(\u0022Transfer, after returning avail resources,  amount: \u0022 \u002B source.Resources[hiddenResource].amount);\n                lastUT = t.lastUT;\n               \n                if (totalTransferred == 0)\n                    OnStopClick();\n                IFI_Resources.UpdatePartInfo(t.Part);\n                foreach (UIPartActionResourceTransfer t1 in targets)\n                    IFI_Resources.UpdatePartInfo(t1.Part);\n                \n                    Log.Info(\u0022Transfer --------------------------------------------------------------------------------------\u0022);\n            }\n            else\n            if (transferInProgress)\n            {\n                if (t != null)\n                {\n                    if (t.Resource == null)\n                        Log.Info(\u0022Transfer t.Resource is null\u0022);\n                    if (lastUT == t.lastUT)\n                        Log.Info(\u0022Transfer lastUT unchanged, Planetarium.GetUniversalTime: \u0022 \u002B Planetarium.GetUniversalTime());\n                    if (t.state == UIPartActionResourceTransfer.FlowState.None)\n                        Log.Info(\u0022Transfer t.state == UIPartActionResourceTransfer.FlowState.None\u0022);\n                }\n                else\n                    Log.Info(\u0022t is null\u0022);\n                Log.Info(\u0022Transfer --------------------------------------------------------------------------------------\u0022);\n            }\n            \n        }\n    }\n\n    public class TransferListener : MonoBehaviour\n    {\n        private void Awake()\n        {\n            AddTransferListener.onTransferSpawn.Fire(gameObject.GetComponentInParent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UIPartActionResourceTransfer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E());\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}