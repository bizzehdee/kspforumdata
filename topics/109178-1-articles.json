{"TopicId":109178,"ForumId":29,"TopicTitle":"How to hide planets orbits in the tracking station","CreatedByName":"LankyThumbs","CreatedById":141266,"CreatedDateTime":"2015-05-14T12:25:22Z","PageNum":1,"Articles":[{"CreatedByName":"LankyThumbs","CreatedById":141266,"CreatedDateTime":"2015-05-14T12:25:22Z","Content":"\n\u003Cp\u003EI\u0027m looking for a way to turn off the orbits of the planets, and possibly the little round market overlay on each planet.\u003C/p\u003E\u003Cp\u003EWould this have something to do with MapView.orbitLinesMaterial or am I barking up the wrong tree?\u003C/p\u003E\u003Cp\u003ETo be honest, I haven\u0027t touched the API at all yet. Just had a skim through the documentation.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-05-14T18:25:05Z","Content":"\n\u003Cp\u003EYou shouldn\u0027t be touching the MapView.orbitLinesMaterial because it\u0027s the global material for ALL orbits.\u003C/p\u003E\u003Cp\u003EInstead, you should do this:\u003C/p\u003E\u003Cp\u003EIn the Planetarium.fetch variable (or .Instance, not sure) there\u0027s a property called Orbits. You can iterate through this and find the orbits of the planets you want to hide. You shouldn\u0027t outright disable the orbits, because then they won\u0027t be updated, and the planets you disable won\u0027t move, or just disappear, instead you should try messing with the OrbitRenderer (might be just Renderer) field of the orbit, and set the drawMode field to DrawMode.OFF, or something along those lines. There are many values in the OrbitRenderer and OrbitDriver classes that look like they disable or hide the orbit, but this is the only one I\u0027ve found that actually works without glitchieness.\u003C/p\u003E\u003Cp\u003EMight be some errors in there, I\u0027ll update this post when I get home and can look at the assembly browser in my IDE.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-05-14T21:02:45Z","Content":"\n\u003Cp\u003EEven better : CelestialBody implements IDiscoverable. So loop the bodies and for each call :\u003C/p\u003E\u003Cp\u003Ebody.DiscoveryInfo.SetLevel(DiscoveryLevels.None);\u003C/p\u003E\u003Cp\u003EPlay with the value to get the result you want. None hides the planet, Presence should just show that something is here, StateVector shows the orbit, etc ...\u003C/p\u003E\n"}]}