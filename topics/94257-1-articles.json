{"TopicId":94257,"ForumId":29,"TopicTitle":"How can I access values given in Mission Recovery Dialog when a vessel is recovered?","CreatedByName":"intervenience","CreatedById":110171,"CreatedDateTime":"2014-12-23T17:00:02Z","PageNum":1,"Articles":[{"CreatedByName":"intervenience","CreatedById":110171,"CreatedDateTime":"2014-12-23T17:00:02Z","Content":"\n\u003Cp\u003EI\u0027ve been messing around in a little cs project of mine and I want to be able to access and store the values (funds, rep and science) that are given when in the mission recovery dialog after you recover a vessel. Seems fairly straightforward, problem is I\u0027m getting \u0022An object reference is required for the non-static field, method, or property \u0027MissionRecoveryDialog.fundsEarned\u0027\u0022. I\u0027m also getting this error for the same lines I have written for reputation and science.\u003C/p\u003E\u003Cp\u003EMy code looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Efloat fundsToStore = MissionRecoveryDialog.fundsEarned;\u003Cbr\u003Efloat repToStore = MissionRecoveryDialog.reputationEarned;\u003Cbr\u003Efloat sciToStore = MissionRecoveryDialog.scienceEarned;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve attempted to troubleshoot the problem by moving the float declarations in several different parts of my file, and attempted to use static and non-static functions (could potentially be an issue according to threads I\u0027ve read from stackoverflow, however because I can\u0027t alter those files directly I cannot do anything about it).\u003C/p\u003E\u003Cp\u003EIf it helps when troubleshooting, the code-assist writer (the menu that pops up with matching text when you type) does not show any variable names under MissionRecoveryDialog.\u003C/p\u003E\u003Cp\u003ESorry if it\u0027s a little ambiguous and if it\u0027s an obvious issue but I\u0027m new to C# and modding in general. Thanks.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-12-23T17:46:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022intervenience\u0022 data-cite=\u0022intervenience\u0022\u003E\u003Cdiv\u003E\u0022An object reference is required for the non-static field, method, or property \u0027MissionRecoveryDialog.fundsEarned\u0027\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI can\u0027t help you with the Mission Recovery Dialog directly, but this is a common generic programming mistake. You need an instance of the object, but you are trying to use the static definition instead. Hmm.. how can I explain it. Really best thing is Google Instance versus Class.\u003C/p\u003E\u003Cp\u003EA Class defines the template for an object, an instance of that class is the working live data formed from that template. You are trying to access DATA on a DEFINITION but the data doesn\u0027t exist. You need an instance of it.\u003C/p\u003E\n"},{"CreatedByName":"intervenience","CreatedById":110171,"CreatedDateTime":"2014-12-25T12:24:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EA Class defines the template for an object, an instance of that class is the working live data formed from that template. You are trying to access DATA on a DEFINITION but the data doesn\u0027t exist. You need an instance of it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think I get what you mean. So theoretically I could have my code look something like this (could I instead use an event listener to wait for the value to change?)\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Efloat fundsToStore = MissionRecoveryDialog.fundsEarned;\u003Cbr\u003E\u003Cbr\u003Epublic void FixedUpdate()\u003Cbr\u003E{\u003Cbr\u003E    if (fundsToStore == null)\u003Cbr\u003E    {\u003Cbr\u003E        fundsToStore = 0; //so it creates a real value that can be altered later\u003Cbr\u003E    }\u003Cbr\u003E    else\u003Cbr\u003E    {\u003Cbr\u003E        fundsToStore = MissionRecoveryDialog.fundsEarned; //it changes the value to what the game\u0027s output for this variable is\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-12-25T15:51:46Z","Content":"\n\u003Cp\u003EIt does not work that way. An instance of the MissionRecoveryDialog is created every time the game needs to display such a dialog, ie. on recovery. The values are then simply set in that instance so that it has something to display.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-12-25T18:24:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022intervenience\u0022 data-cite=\u0022intervenience\u0022\u003E\u003Cdiv\u003EI think I get what you mean. So theoretically I could have my code look something like this (could I instead use an event listener to wait for the value to change?)\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Efloat fundsToStore = MissionRecoveryDialog.fundsEarned;\u003Cbr\u003E\u003Cbr\u003Epublic void FixedUpdate()\u003Cbr\u003E{\u003Cbr\u003E    if (fundsToStore == null)\u003Cbr\u003E    {\u003Cbr\u003E        fundsToStore = 0; //so it creates a real value that can be altered later\u003Cbr\u003E    }\u003Cbr\u003E    else\u003Cbr\u003E    {\u003Cbr\u003E        fundsToStore = MissionRecoveryDialog.fundsEarned; //it changes the value to what the game\u0027s output for this variable is\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis code is no different than the previous. You are still accessing the static class, not an instance.\u003C/p\u003E\u003Cp\u003EMissionRecoveryDialog is a class. MissionRecoveryDialog dialog = new MissionRecoveryDialog() is an instance. But you dont\u0027 want just any instance of it you want *the* instance of it. As Blizzy says above, the game creates a new instance each time the dialog is displayed so you would need to find a way to get a hold of *that* instance.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-12-25T19:56:29Z","Content":"\n\u003Cp\u003EThere\u0027s a GameEvent that gets fired when the dialog appears:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclass YourAddon : MonoBehaviour\u003Cbr\u003E{\u003Cbr\u003E    private void Start()\u003Cbr\u003E    {\u003Cbr\u003E        GameEvents.onVesselRecoveryProcessing.Add(RecoveryProcessingCallback);\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    private void OnDestroy()\u003Cbr\u003E    {\u003Cbr\u003E        GameEvents.onVesselRecoveryProcessing.Remove(RecoveryProcessingCallback);\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    void RecoveryProcessingCallback(ProtoVessel pv, MissionRecoveryDialog dlg, float recovery)\u003Cbr\u003E    {\u003Cbr\u003E        // access dlg here\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-12-25T20:20:36Z","Content":"\n\u003Cp\u003EonVesselRecoveryProcessing fires before the dialog appears.\u003C/p\u003E\u003Cp\u003EonVesselRecovered fires after the dialog appears and its values have been calculated. I think it also passes a reference to the MissionRecoveryDialog object.\u003C/p\u003E\u003Cp\u003EEdit: Or not. onVesselRecovered only passes the ProtoVessel reference, so I guess you have to use onVesselRecoveryProcessing.\u003C/p\u003E\n"},{"CreatedByName":"intervenience","CreatedById":110171,"CreatedDateTime":"2014-12-26T12:52:43Z","Content":"\n\u003Cp\u003EAh, that makes a lot more sense than what I was thinking. Thanks for the responses all.\u003C/p\u003E\n"}]}