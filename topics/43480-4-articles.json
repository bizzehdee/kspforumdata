{"TopicId":43480,"ForumId":36,"TopicTitle":"ISA MapSat \u0026quot;Legacy\u0026quot; discussion","CreatedByName":"Benzschwagel","CreatedById":75790,"CreatedDateTime":"2013-08-19T01:19:47Z","PageNum":4,"Articles":[{"CreatedByName":"somnambulist","CreatedById":62108,"CreatedDateTime":"2013-08-31T16:31:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EI did it the other way around, I replaced the map textures with very tiny image files, 8x8, instead of the maps to see what happened when Mapsat loaded them.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECould I trouble you for a full file list of all the map PNGs that ISA generates? I want to try throwing different image sizes and formats at it later and see if I can get it to break. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-08-31T19:44:37Z","Content":"\n\u003Cp\u003EI too want to see a mapping program similar to MapSat (which I\u0027m not running right now in my \u0027playing install\u0027 because of the aforementioned 700mb RAM craziness). I\u0027ve looked over the code and I honestly can\u0027t figure out how he\u0027s using so much memory. I mean what it does clearly show is he\u0027s loading every map for every planet into memory on startup even if the maps blank (in which case it\u0027s loaded with an all black map, which would take up just as much space uncompressed). Thing is, if you copy one of his 2048x1024 maps to a clean install of ksp and paste it like 30 times into Gamedata or wherever, it loads all of them but only increases the RAM usage by like 150mb or so which is what you would expect, so it\u0027s gotta be a bug/\u0022feature\u0022 of the code that\u0027s eating up 700mb.\u003C/p\u003E\u003Cp\u003EAnyways, the code for the v4 dev build is like 2500 lines of gut cringing inefficiency. Personally I think it\u0027s a good thing that this is being revisited, since the whole thing could use a rewrite from the ground up. First of all, maybe this whole technique of making every single player spend a huge amount of memory and computational resources to pull the terrain data from the game to generate a 2mb png was useful back in the day (I can\u0027t see how), but \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/25148-Web-maps-of-all-bodies-%280-2-Mun-and-Minmus%29-source-added\u0022 rel=\u0022external nofollow\u0022\u003Ewe have ridiculously precise elevation maps of all the planets now.\u003C/a\u003E Even without those, you only need to generate the terrain png ONCE (as the developer) then have a way to slowly reveal it to the player as they fly over.\u003C/p\u003E\u003Cp\u003ETo show you what I mean, I wrote a really crude test version so you can see how it would work. I used the 16k elevation maps (which are way overkill) and rendered them in some GIS software using roughly the same color scheme as ISA and exported them at the same resolution:\u003C/p\u003E\u003Cp\u003EMinmus map from ISA.... and one I generated\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i40.tinypic.com/hx9r20.png\u0022 alt=\u0022hx9r20.png\u0022\u003E\u003Cimg src=\u0022http://i40.tinypic.com/2hhhpvc.png\u0022 alt=\u00222hhhpvc.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThen I added an all black (full transparent) alpha layer to the map I made (which also conveniently makes the map invisible to the user in Windows). Then I wrote a really short plugin (\u0026lt;100 lines) that\u0027s tied to one of the stock antennas that basically pulls the lat/long coordinates and transforms them using a map projection to get the x y pixel coordinates on the png. Then all it does is flip the alpha channel of the pixels to opaque as the user flies over which \u0022reveals\u0022 the map, which is displayed in a GUI box atm:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i41.tinypic.com/2rcbhiv.png\u0022 alt=\u00222rcbhiv.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E^There you go, really rough version of ISA that uses virtually no processing power, doesn\u0027t lag the game at all, and makes maps that are even more accurate because you don\u0027t have the inherent inaccuracies of pulling game data. Check out the comparison (both at the same resolution):\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i39.tinypic.com/110lpiw.png\u0022 alt=\u0022110lpiw.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EAs far as memory, even if you loaded all the textures beforehand it wouldn\u0027t take more than 150mb or so, but I see no reason to do that since you could just as easily load the texture of the planet only when you enter it\u0027s SOI. I\u0027m also fairly certain you could use Resources.UnloadAsset() on the textures when you leave the planets SOI, which would mean you would only have the textures loaded for the planet you\u0027re at (so a maximum RAM usage of maybe 10-15mb during runtime, 0mb if you\u0027re not near a planet). What do you guys think?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-01T05:41:54Z\u0022 title=\u002209/01/2013 05:41  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 1, 2013\u003C/time\u003E by AncientGammoner\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"somnambulist","CreatedById":62108,"CreatedDateTime":"2013-08-31T21:07:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EAs far as memory, even if you loaded all the textures beforehand it wouldn\u0027t take more than 150mb or so, but I see no reason to do that since you could just as easily load the texture of the planet only when you enter it\u0027s SOI. I\u0027m also fairly certain you could use Resources.UnloadAsset() on the textures when you leave the planets SOI, which would mean you would only have the textures loaded for the planet you\u0027re at (so a maximum RAM usage of maybe 10-15mb during runtime, 0mb if you\u0027re not near a planet). What do you guys think?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWow really really awesome work. Do you think it would be possible to load/unload the map textures on the fly? Tingle figured out a way to unload game textures with Universe Replacer; it might be possible to unload non-active maps to save a good bit of memory.\u003C/p\u003E\n"},{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-08-31T22:45:09Z","Content":"\n\u003Cp\u003Esomnambulist: Sure, I just tested it in game. I generated list of PlanetMap\u0027s (class containing name and texture) and assigned a key to creating one, loading the texture into it, and adding it to the list. Then I pressed it over and over and watched as the memory usage grew in task manager as it loaded the texture for each one. Then I assigned another key to iterate through the list and call a class method where the object would simply do \u0022Resources.UnloadAsset(texture);\u0022 and sure enough it deletes all the textures from memory instantly. So yeah it\u0027s definitely possible to load and unload stuff on the fly.\u003C/p\u003E\n"},{"CreatedByName":"Torminator","CreatedById":78617,"CreatedDateTime":"2013-08-31T22:53:22Z","Content":"\n\u003Cp\u003EOkay, that\u0027s incredible. Amazing work.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-01T07:34:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022somnambulist\u0022 data-cite=\u0022somnambulist\u0022\u003E\u003Cdiv\u003ECould I trouble you for a full file list of all the map PNGs that ISA generates? I want to try throwing different image sizes and formats at it later and see if I can get it to break. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere\u0027s two maps per planet, in the format \u0026lt;Planet\u0026gt;_\u0026lt;MapType\u0026gt;_Topo.png The two map types are \u0027ISA\u0027 and \u0027Polars\u0027. So for example: \u0027Mun_ISA_Topo.png\u0027 and \u0027Mun_Polars_Topo.png\u0027. The full name of the planet is used. Files are placed in \\Innsewerants Space Agency\\Plugins\\PluginData\u003C/p\u003E\u003Cp\u003EAll the other textures (GUI textures, blankmap.png, etc) are in \\Guitextures in Plugindata. Removing them didn\u0027t seem to do much to the memory usage, though I didn\u0027t try using placeholders.\u003C/p\u003E\u003Cp\u003EThe SOHO Images when you select \u0027Sun\u0027 are actually dynamically loading the very latest images from NASA\u0027s SOHO website, at the address given in the window, which is actually kinda neat.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EI too want to see a mapping program similar to MapSat (which I\u0027m not running right now in my \u0027playing install\u0027 because of the aforementioned 700mb RAM craziness). I\u0027ve looked over the code and I honestly can\u0027t figure out how he\u0027s using so much memory. I mean what it does clearly show is he\u0027s loading every map for every planet into memory on startup even if the maps blank (in which case it\u0027s loaded with an all black map, which would take up just as much space uncompressed). Thing is, if you copy one of his 2048x1024 maps to a clean install of ksp and paste it like 30 times into Gamedata or wherever, it loads all of them but only increases the RAM usage by like 150mb or so which is what you would expect, so it\u0027s gotta be a bug/\u0022feature\u0022 of the code that\u0027s eating up 700mb.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFirst, Unity does decompress the textures, it\u0027s been a complaint for a few versions now that PNG Textures get massively inflated. There was one that reducing the texture quality setting doesn\u0027t help as well.\u003C/p\u003E\u003Cp\u003EMy analysis indicates that if you replace the map textures, and ONLY the map textures, with 8x8 pixel solid color textures, it knocks about 600MB off the memory usage, though the full 700MB gets allocated at load and falls off after. So it\u0027s clearly something with how the map textures are being loaded that\u0027s such a memory hog.\u003C/p\u003E\u003Cp\u003EAs for pasting them into Gamedata, are you sure they\u0027re actually being loaded into the Memory? If you load a craft without Mapsat on it, it also knocks about 600MB off the memory usage (only with no initial allocation spike), so it\u0027s pretty clear that they\u0027re not loaded from plugindata until mapsat is started. If you\u0027re just dumping them into gamedata with nothing calling them it\u0027s entirely possible they\u0027re not being fully loaded into Memory.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAnyways, the code for the v4 dev build is like 2500 lines of gut cringing inefficiency. Personally I think it\u0027s a good thing that this is being revisited, since the whole thing could use a rewrite from the ground up. First of all, maybe this whole technique of making every single player spend a huge amount of memory and computational resources to pull the terrain data from the game to generate a 2mb png was useful back in the day (I can\u0027t see how), but \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/25148-Web-maps-of-all-bodies-%280-2-Mun-and-Minmus%29-source-added\u0022 rel=\u0022external nofollow\u0022\u003Ewe have ridiculously precise elevation maps of all the planets now.\u003C/a\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIS isn\u0027t exactly a professional developer. He started the original ISA Mapsat project basically just because he wanted to see if he could. He\u0027s an amateur programmer with very little training or experience who frankly, did an incredible job considering. You\u0027ve also missed one of the key features of Mapsat, probably because it\u0027s crippled in the developer version: Mapsat doesn\u0027t just make a \u00272mb png\u0027, that\u0027s just the ingame map. It\u0027s also capable of saving the raw scanned data into CSV files, which can be used to generate a map of an arbitrary size and resolution, limited only by the scanning resolution you managed. On Kerbin, this can be as high as 18 times the resolution of the default map.\u003C/p\u003E\u003Cp\u003EEdit: That map you linked uses the same basic method to generate the map that ISA does, to wit: \u0022The map data is a collection of point samples...\u0022 :End Edit\u003C/p\u003E\u003Cp\u003EHe\u0027s also been doing this in his spare time, and when I spoke to him on IRC a few months back, he told me that he hadn\u0027t actually played KSP in a very long time because he spent all his KSP time working on Mapsat.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EEven without those, you only need to generate the terrain png ONCE (as the developer) then have a way to slowly reveal it to the player as they fly over.\u003Cp\u003ETo show you what I mean, I wrote a really crude test version so you can see how it would work. I used the 16k elevation maps (which are way overkill) and rendered them in some GIS software using roughly the same color scheme as ISA and exported them at the same resolution:\u003C/p\u003E\u003Cp\u003EMinmus map from ISA.... and one I generated\u003C/p\u003E\u003Cp\u003E[*Snip*]\u003C/p\u003E\u003Cp\u003EThen I added an all black (full transparent) alpha layer to the map I made (which also conveniently makes the map invisible to the user in Windows). Then I wrote a really short plugin (\u0026lt;100 lines) that\u0027s tied to one of the stock antennas that basically pulls the lat/long coordinates and transforms them using a map projection to get the x y pixel coordinates on the png. Then all it does is flip the alpha channel of the pixels to opaque as the user flies over which \u0022reveals\u0022 the map, which is displayed in a GUI box atm:\u003C/p\u003E\u003Cp\u003E*Snip*\u003C/p\u003E\u003Cp\u003E^There you go, really rough version of ISA that uses virtually no processing power, doesn\u0027t lag the game at all, and makes maps that are even more accurate because you don\u0027t have the inherent inaccuracies of pulling game data. Check out the comparison (both at the same resolution):\u003C/p\u003E\u003Cp\u003E*Snip*\u003C/p\u003E\u003Cp\u003EAs far as memory, even if you loaded all the textures beforehand it wouldn\u0027t take more than 150mb or so, but I see no reason to do that since you could just as easily load the texture of the planet only when you enter it\u0027s SOI. I\u0027m also fairly certain you could use Resources.UnloadAsset() on the textures when you leave the planets SOI, which would mean you would only have the textures loaded for the planet you\u0027re at (so a maximum RAM usage of maybe 10-15mb during runtime, 0mb if you\u0027re not near a planet). What do you guys think?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat method has a serious, serious problem: If you\u0027re using a pregenerated map in the first place, why bother with \u0027scanning\u0027 at all? Especially as it\u0027d be virtually impossible to prevent someone from editing the save data to indicate it was fully mapped when it wasn\u0027t, or just to strip the alpha so it didn\u0027t do that in the first place. You might as well just make it a \u0027map for each planet\u0027 mod and dispense with the pretense.\u003C/p\u003E\u003Cp\u003EI also don\u0027t see any kind of indicator of what your present location is, which hinders navigation. It\u0027s also lacking the Polar views, which would make navigation near the poles difficult due to the impossibility of creating a rectangular map that accurately conforms to the entire surface of a sphere. And there\u0027s no anomaly detection either.\u003C/p\u003E\u003Cp\u003ESo, it\u0027s not only crude, it\u0027s vulnerable to cheating AND lacking almost all of Mapsat\u0027s core features. Actually matching Mapsat\u0027s level of functionality is going to take a LOT More work than you let on.\u003C/p\u003E\u003Cp\u003EI\u0027d also like to see what happens to your memory usage when you try loading 30 maps into memory. I\u0027m betting it ends up quite a bit higher than you\u0027d expect.\u003C/p\u003E\u003Cp\u003EEdit: And I forgot to \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022somnambulist\u0022 data-cite=\u0022somnambulist\u0022\u003E\u003Cdiv\u003EWow really really awesome work. Do you think it would be possible to load/unload the map textures on the fly? Tingle figured out a way to unload game textures with Universe Replacer; it might be possible to unload non-active maps to save a good bit of memory.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt would be possible, but it would present a problem: any time you wanted to change what map you were looking at, you\u0027d have to load the new map in. That\u0027s not going to happen instantly: There\u0027s another thread on these very forums that indicates that the number one thing slowing down the load times is texture loading. So you\u0027re looking at either limiting it to viewing the map of the body you\u0027re currently orbiting and getting a hang every time you change SOIs, or getting a hang every time you change what map you\u0027re viewing if you don\u0027t limit it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-01T08:01:14Z\u0022 title=\u002209/01/2013 08:01  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 1, 2013\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mihara","CreatedById":59752,"CreatedDateTime":"2013-09-01T09:30:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EThere you go, really rough version of ISA that uses virtually no processing power, doesn\u0027t lag the game at all, and makes maps that are even more accurate because you don\u0027t have the inherent inaccuracies of pulling game data.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDammit, forums, stop being broken and let me \u002Brep this man.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EThat method has a serious, serious problem: If you\u0027re using a pregenerated map in the first place, why bother with \u0027scanning\u0027 at all? Especially as it\u0027d be virtually impossible to prevent someone from editing the save data to indicate it was fully mapped when it wasn\u0027t, or just to strip the alpha so it didn\u0027t do that in the first place. You might as well just make it a \u0027map for each planet\u0027 mod and dispense with the pretense.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPardon me, but it\u0027s all really about the pretense and nothing else. Exploratory gaming in a sandbox is inherently a pretend activity. You are not really discovering anything new, someone else has definitely been there before. If I didn\u0027t want to bother with scanning, there\u0027s always an option for me to use Telemachus -- which ties into \u003Ca href=\u0022www.kerbalmaps.com\u0022 rel=\u0022external nofollow\u0022\u003Ewww.kerbalmaps.com\u003C/a\u003E these days, which offers more than enough resolution for all practical purposes -- and get to it with a phone or tablet, so that map doesn\u0027t even take any of my valuable main screen space. That is, there \u003Cem\u003Ealready is\u003C/em\u003E a \u0022map for each planet\u0022 mod. If I want to dispense with the pretense, I can do it immediately, and this whole discussion would be completely pointless.\u003C/p\u003E\u003Cp\u003EThere is one function that MapSat offers which this combo doesn\u0027t -- it wouldn\u0027t list \u003Cem\u003Enew\u003C/em\u003E statics, such as those created with KerbTown. But I expect that if it\u0027s about statics and them alone, something can be cooked up relatively quickly.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-01T10:44:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mihara\u0022 data-cite=\u0022Mihara\u0022\u003E\u003Cdiv\u003EDammit, forums, stop being broken and let me \u002Brep this man.\u003Cp\u003EPardon me, but it\u0027s all really about the pretense and nothing else. Exploratory gaming in a sandbox is inherently a pretend activity. You are not really discovering anything new, someone else has definitely been there before. If I didn\u0027t want to bother with scanning, there\u0027s always an option for me to use Telemachus -- which ties into \u003Ca href=\u0022www.kerbalmaps.com\u0022 rel=\u0022external nofollow\u0022\u003Ewww.kerbalmaps.com\u003C/a\u003E these days, which offers more than enough resolution for all practical purposes -- and get to it with a phone or tablet, so that map doesn\u0027t even take any of my valuable main screen space. That is, there \u003Cem\u003Ealready is\u003C/em\u003E a \u0022map for each planet\u0022 mod. If I want to dispense with the pretense, I can do it immediately, and this whole discussion would be completely pointless.\u003C/p\u003E\u003Cp\u003EThere is one function that MapSat offers which this combo doesn\u0027t -- it wouldn\u0027t list \u003Cem\u003Enew\u003C/em\u003E statics, such as those created with KerbTown. But I expect that if it\u0027s about statics and them alone, something can be cooked up relatively quickly.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually, there\u0027s two more things Mapsat offers which this combo couldn\u0027t.\u003C/p\u003E\u003Cp\u003EIt isn\u0027t just a change in the statics it can cope with, it can handle a change in the Terrain Itself without needing an update. Which it actually already HAS, because the current version was released right after 0.20 came out. It\u0027s still giving me accurate maps of everything, even though the terrain\u0027s been redone on more than a few of the planets.\u003C/p\u003E\u003Cp\u003EIt\u0027s also my understanding that it\u0027s also able to cope with having entirely new *planets* added without an update, though for obvious reasons I\u0027ve yet to see this in action.\u003C/p\u003E\u003Cp\u003ERegardless, adding *all* the features mapsat offers wouldn\u0027t be the trivial exercise it\u0027s been made out to be, or someone else would\u0027ve done it by now. No alternative offers both the flexibility and completeness that Mapsat does, and a product like Gammoner suggests simply couldn\u0027t. Every time the terrain changed, or if a new body gets added, or new objects get added to planetary surfaces, a \u0027revealer\u0027 type \u0027scanner\u0027 is going to have to wait for updated maps and issue a new release containing them.\u003C/p\u003E\u003Cp\u003ENot saying it\u0027s perfect by any means, but coding and memory issues aside, it\u0027s really QUITE an impressive piece of work. Especially for being an experimental dev version he pushed out due to the old version being broken by 0.20.\u003C/p\u003E\u003Cp\u003EAnd I\u0027ve still yet to hear a confirmed solution OR cause for the memory issues, more specific than \u0027using way too much memory for the Maps\u0027. If dude above can get all 30 maps loaded and not use 600MB doing it, that would be interesting. So far what I\u0027ve seen is nothing special or useful.\u003C/p\u003E\u003Cp\u003EEdit: Also, if you really wanna \u002Brep him, you can do it by right clicking on the star and hitting \u0027open link in new tab\u0027 or whatever. The link itself and the rep system itself both still work, it\u0027s just not doing it when you just click on it for whatever reason.\u003C/p\u003E\u003Cp\u003EEdit2: Oh crap, I think I just figured it out. The Map textures are 2048x1024. Uncompressed, with mipmaps, that\u0027s only 10.6 MB.\u003C/p\u003E\u003Cp\u003EBut I just now had an epiphany. And checked it.\u003C/p\u003E\u003Cp\u003E2048x2048 uncompressed texture with mipmaps. 21.3 MB.\u003C/p\u003E\u003Cp\u003EI\u0027m going to try scaling the map textures up to 2048x2048 and see if that increases the memory usage any.\u003C/p\u003E\u003Cp\u003EEdit3: Okay, well, that increased the memory usage like, another 700mb or some stupid thing. Sheesh. There goes that theory.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-01T12:42:10Z\u0022 title=\u002209/01/2013 12:42  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 1, 2013\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-09-01T18:01:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EAs for pasting them into Gamedata, are you sure they\u0027re actually being loaded into the Memory? If you load a craft without Mapsat on it, it also knocks about 600MB off the memory usage (only with no initial allocation spike), so it\u0027s pretty clear that they\u0027re not loaded from plugindata until mapsat is started. If you\u0027re just dumping them into gamedata with nothing calling them it\u0027s entirely possible they\u0027re not being fully loaded into Memory.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes they are being loaded. As mentioned in my last post I also made it so pressing a key will load a texture and then clear it, but like I said you really don\u0027t need to load them all.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EYou\u0027ve also missed one of the key features of Mapsat, probably because it\u0027s crippled in the developer version: Mapsat doesn\u0027t just make a \u00272mb png\u0027, that\u0027s just the ingame map. It\u0027s also capable of saving the raw scanned data into CSV files, which can be used to generate a map of an arbitrary size and resolution, limited only by the scanning resolution you managed. On Kerbin, this can be as high as 18 times the resolution of the default map.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe elevation map I pulled it from is \u003Cstrong\u003E64\u003C/strong\u003E times the resolution of the map. And perhaps Mapsat can generate maps outside KSP from the raw data, but I seriously doubt anyone actually used that capability since it\u0027s not related to playing the game at all. Not to mention the maps from the csv would be worthless at higher resolution because of the inaccuracies of pulling data from the game that I mention in the comparison.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThat method has a serious, serious problem: If you\u0027re using a pregenerated map in the first place, why bother with \u0027scanning\u0027 at all? Especially as it\u0027d be virtually impossible to prevent someone from editing the save data to indicate it was fully mapped when it wasn\u0027t, or just to strip the alpha so it didn\u0027t do that in the first place. You might as well just make it a \u0027map for each planet\u0027 mod and dispense with the pretense.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmm? This is a computer game, people like having stuff to do. It\u0027s like asking why bother making a new engine mod when you can just use hyperedit or infinite fuel. If people want to strip the alpha layer and just have the map, what does it matter. There\u0027s nothing preventing people from copying their ISA maps and using them for new installs or sending them to other people, or editing any other part of the game for that matter.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI also don\u0027t see any kind of indicator of what your present location is, which hinders navigation. It\u0027s also lacking the Polar views, which would make navigation near the poles difficult due to the impossibility of creating a rectangular map that accurately conforms to the entire surface of a sphere. And there\u0027s no anomaly detection either.\u003Cp\u003ESo, it\u0027s not only crude, it\u0027s vulnerable to cheating AND lacking almost all of Mapsat\u0027s core features. Actually matching Mapsat\u0027s level of functionality is going to take a LOT More work than you let on.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDid you actually read my post, I\u0027m beginning to think not, because I clearly stated \u0022I wrote a really crude test version so you can see how it would work\u0022. I was demonstrating the core concept, nothing more.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI\u0027d also like to see what happens to your memory usage when you try loading 30 maps into memory. I\u0027m betting it ends up quite a bit higher than you\u0027d expect.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI already stated how I would deal the memory issue.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIt would be possible, but it would present a problem: any time you wanted to change what map you were looking at, you\u0027d have to load the new map in. That\u0027s not going to happen instantly: There\u0027s another thread on these very forums that indicates that the number one thing slowing down the load times is texture loading. So you\u0027re looking at either limiting it to viewing the map of the body you\u0027re currently orbiting and getting a hang every time you change SOIs, or getting a hang every time you change what map you\u0027re viewing if you don\u0027t limit it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELoading a map takes a fraction of a second for me (very brief pause), and the game already \u0022hangs\u0022 every time you change SOIs anyways so you wouldn\u0027t even notice it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mihara\u0022 data-cite=\u0022Mihara\u0022\u003E\u003Cdiv\u003EPardon me, but it\u0027s all really about the pretense and nothing else. Exploratory gaming in a sandbox is inherently a pretend activity. You are not really discovering anything new, someone else has definitely been there before. If I didn\u0027t want to bother with scanning, there\u0027s always an option for me to use Telemachus -- which ties into \u003Ca href=\u0022www.kerbalmaps.com\u0022 rel=\u0022external nofollow\u0022\u003Ewww.kerbalmaps.com\u003C/a\u003E these days, which offers more than enough resolution for all practical purposes -- and get to it with a phone or tablet, so that map doesn\u0027t even take any of my valuable main screen space. That is, there \u003Cem\u003Ealready is\u003C/em\u003E a \u0022map for each planet\u0022 mod. If I want to dispense with the pretense, I can do it immediately, and this whole discussion would be completely pointless.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EExactly, everything in a computer game is contrived anyways so this whole conversation is pointless.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThere is one function that MapSat offers which this combo doesn\u0027t -- it wouldn\u0027t list \u003Cem\u003Enew\u003C/em\u003E statics, such as those created with KerbTown. But I expect that if it\u0027s about statics and them alone, something can be cooked up relatively quickly.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI believe MapSat uses the lat/long coordinates to find stuff just like this method, so I don\u0027t see why this couldn\u0027t do the same thing.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EIt isn\u0027t just a change in the statics it can cope with, it can handle a change in the Terrain Itself without needing an update. Which it actually already HAS, because the current version was released right after 0.20 came out. It\u0027s still giving me accurate maps of everything, even though the terrain\u0027s been redone on more than a few of the planets.\u003Cp\u003EIt\u0027s also my understanding that it\u0027s also able to cope with having entirely new *planets* added without an update, though for obvious reasons I\u0027ve yet to see this in action.\u003C/p\u003E\u003Cp\u003ERegardless, adding *all* the features mapsat offers wouldn\u0027t be the trivial exercise it\u0027s been made out to be, or someone else would\u0027ve done it by now. No alternative offers both the flexibility and completeness that Mapsat does, and a product like Gammoner suggests simply couldn\u0027t. Every time the terrain changed, or if a new body gets added, or new objects get added to planetary surfaces, a \u0027revealer\u0027 type \u0027scanner\u0027 is going to have to wait for updated maps and issue a new release containing them.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes if an entirely new planet comes out you\u0027d have to update the mod... and?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ENot saying it\u0027s perfect by any means, but coding and memory issues aside, it\u0027s really QUITE an impressive piece of work. Especially for being an experimental dev version he pushed out due to the old version being broken by 0.20.\u003Cp\u003EAnd I\u0027ve still yet to hear a confirmed solution OR cause for the memory issues, more specific than \u0027using way too much memory for the Maps\u0027. If dude above can get all 30 maps loaded and not use 600MB doing it, that would be interesting. So far what I\u0027ve seen is nothing special or useful.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou have a better suggestion on how to do things, then suggest it, otherwise you\u0027re adding \u0022nothing special or useful\u0022 to this thread, seriously. This is a thread about improving upon ISA/maybe developing a new mapping program and all I\u0027m hearing is how great MapSat is... when it\u0027s currently a total mess. Do you know anything about plugin writing, have you read the source code at all? You\u0027re posting in a development thread but speaking like a player.\u003C/p\u003E\n"},{"CreatedByName":"Reddot99","CreatedById":77913,"CreatedDateTime":"2013-09-01T18:53:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EAnyways, the code for the v4 dev build is like 2500 lines of gut cringing inefficiency. Personally I think it\u0027s a good thing that this is being revisited, since the whole thing could use a rewrite from the ground up. First of all, maybe this whole technique of making every single player spend a huge amount of memory and computational resources to pull the terrain data from the game to generate a 2mb png was useful back in the day (I can\u0027t see how), but \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/25148-Web-maps-of-all-bodies-%280-2-Mun-and-Minmus%29-source-added\u0022 rel=\u0022external nofollow\u0022\u003Ewe have ridiculously precise elevation maps of all the planets now.\u003C/a\u003E Even without those, you only need to generate the terrain png ONCE (as the developer) then have a way to slowly reveal it to the player as they fly over.\u003Cp\u003E^There you go, really rough version of ISA that uses virtually no processing power, doesn\u0027t lag the game at all, and makes maps that are even more accurate because you don\u0027t have the inherent inaccuracies of pulling game data. Check out the comparison (both at the same resolution):\u003C/p\u003E\u003Cp\u003EAs far as memory, even if you loaded all the textures beforehand it wouldn\u0027t take more than 150mb or so, but I see no reason to do that since you could just as easily load the texture of the planet only when you enter it\u0027s SOI. I\u0027m also fairly certain you could use Resources.UnloadAsset() on the textures when you leave the planets SOI, which would mean you would only have the textures loaded for the planet you\u0027re at (so a maximum RAM usage of maybe 10-15mb during runtime, 0mb if you\u0027re not near a planet). What do you guys think?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EI believe MapSat uses the lat/long coordinates to find stuff just like this method, so I don\u0027t see why this couldn\u0027t do the same thing.\u003Cp\u003EYes if an entirely new planet comes out you\u0027d have to update the mod... and?\u003C/p\u003E\u003Cp\u003EYou have a better suggestion on how to do things, then suggest it, otherwise you\u0027re adding \u0022nothing special or useful\u0022 to this thread, seriously. \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EActually, there\u0027s two more things Mapsat offers which this combo couldn\u0027t.\u003Cp\u003EIt isn\u0027t just a change in the statics it can cope with, it can handle a change in the Terrain Itself without needing an update. Which it actually already HAS, because the current version was released right after 0.20 came out. It\u0027s still giving me accurate maps of everything, even though the terrain\u0027s been redone on more than a few of the planets.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESuggestion here, why not have Gammoner\u0027s code able to \u0027update\u0027 areas as they\u0027re flown over. In other words redraw that little segment of the map image being \u0027scanned\u0027 with a fresh read of that terrain. Figure out what the scanning arc would be, and make an array of raycasts coming straight down over the coordinates of the pixels, that reports the first position they encounter something solid. That position is used to repaint that little segment of map, possibly catching anything large enough (or close enough, \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E if another craft happened to pass below you.) to affect that ray. (This would be a runtime toggle, ideally.)\u003C/p\u003E\u003Cp\u003ESeems sorta like a fair compromise between the procedural methodology/mapping of MapSat and the memory reductions of Gammoner\u0027s version.\u003C/p\u003E\u003Cp\u003EAlso, I assume the terrain map generation would be best done on the first entry of a mapping-enabled craft into each world\u0027s sphere of influence (or perhaps with a gui button trigger while in a stable orbit), possibly putting a KSP version flag onto the map, so it\u0027ll know to rescan only if the image is either out of date, or missing from it\u0027s \u0027library\u0027.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-01T18:59:05Z\u0022 title=\u002209/01/2013 06:59  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 1, 2013\u003C/time\u003E by Reddot99\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-09-02T12:46:35Z","Content":"\n\u003Cp\u003EI would be very happy with a new mapper mod that had premade maps that were revealed when flying over them if it used hardly any CPU or RAM, my two main problems with Mapsat. As an end user there would be no difference to my experience. The only issue I can think of is if new anomalies were placed, then the quick and dirty mapper would not catch them until the next mod update. I am guessing somewhere there will still be a slow mapper that would catch them all. Maybe the quick mapper could have an offline verifier that checks the validity of the quick maps and flags any changes? Just leave your game running overnight with the \u0060check maps\u0060 flag and it will just crunch map points and verify the current maps? might be the best of both worlds, speed whilst playing and full map checks when not...\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-02T18:56:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EI would be very happy with a new mapper mod that had premade maps that were revealed when flying over them if it used hardly any CPU or RAM, my two main problems with Mapsat. As an end user there would be no difference to my experience. The only issue I can think of is if new anomalies were placed, then the quick and dirty mapper would not catch them until the next mod update. I am guessing somewhere there will still be a slow mapper that would catch them all. Maybe the quick mapper could have an offline verifier that checks the validity of the quick maps and flags any changes? Just leave your game running overnight with the \u0060check maps\u0060 flag and it will just crunch map points and verify the current maps? might be the best of both worlds, speed whilst playing and full map checks when not...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve yet to see anyone demonstrate that it\u0027s POSSIBLE to use less RAM while still loading all the maps. I\u0027ve been chatting with people that actually DO make mods about it, including Innsewerants himself, and it was a pretty interesting discussion. He said he\u0027s going to look at the memory usage when he gets a minute, because he\u0027s as mystified as I am. Someone else speculated that it might be loading it into memory twice, once in Unity, which then throws it to OpenGL, but doesn\u0027t bother to wipe the original when it does.\u003C/p\u003E\u003Cp\u003EIf someone can set up something that loads 30 2048x1024 textures at once with less memory usage, then we\u0027d have found something useful. Equally if someone actually does set up something that dynamically loads and unloads them and can demonstrate it not causing unacceptable slowdown when it does, that would be useful.\u003C/p\u003E\u003Cp\u003ERight now mostly what I\u0027m seeing is a lot of uninformed whining. There\u0027s a general assumption that it could be done better without any actual data to base that on, because nobody has so far done anything even close.\u003C/p\u003E\u003Cp\u003EFor a start, try this one on: Unity definitely loads the textures as uncompressed. 30 maps at 2048x1024, uncompressed, without mipmaps would take up 240mb. That\u0027s the bare minimum without lowering the detail level. So how does he come up with 150mb if they are being loaded correctly?\u003C/p\u003E\u003Cp\u003EAnd For the record, I said that you could do about 18 times the resolution on Kerbin with Mapsat. That maximum is not because that\u0027s as high as it can go, it\u0027s because that\u0027s as high as you can go while still remaining outside the atmosphere. You can go to an arbitrarily high level, but only by using aircraft. The resolution is determined by your altitude. The maps are a fixed size, however, and thus have a higher resolution for smaller bodies than for larger ones. With the mun, for example, you can again get a little over 18 times the ingame map\u0027s maximum resolution with a 23km orbit. In that case you can go down to as low as 7.5km without hitting the surface, so you can go MUCH higher resolution than that, at a greatly increased time and difficulty. But the Mun\u0027s ingame map is already 3 times the resolution of Kerbin\u0027s to start with: so at 23km you\u0027re getting a map with 54 times the resolution of Kerbin\u0027s ingame ISA map.\u003C/p\u003E\u003Cp\u003EBut it boils down to this: Uniformed whining isn\u0027t going to help anything. People are whining about Mapsat causing problems because, frankly, they\u0027re overloaded on other mods. They see Mapsat as being the cause of the problem because they \u0027only have problems when I use a ship with mapsat on it\u0027. I\u0027ve already established that Mapsat only loads the maps into memory if you have a Mapsat module on your ship. If there\u0027s not enough room left for it to do that because you\u0027re using 27,000 different add-on parts and didn\u0027t bother to account for that, well frankly that\u0027s your problem. He\u0027s going to look at the Memory usage issue. I\u0027m personally pretty sure that it\u0027s a problem with the way the game loads textures and not something that can be reasonably solved without degrading the functionality.\u003C/p\u003E\u003Cp\u003EAnd seriously, if you think you can do better? Quit whining about it and DO it. Or at least supply hard data demonstrating that you\u0027re correct. Complaints and speculation don\u0027t help anyone, we need hard FACT, and so far I\u0027m pretty much the only one trying to get any.\u003C/p\u003E\n"},{"CreatedByName":"Torminator","CreatedById":78617,"CreatedDateTime":"2013-09-02T19:01:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EBut it boils down to this: Uniformed whining isn\u0027t going to help anything. People are whining about Mapsat causing problems because, frankly, they\u0027re overloaded on other mods. They see Mapsat as being the cause of the problem because they \u0027only have problems when I use a ship with mapsat on it\u0027. I\u0027ve already established that Mapsat only loads the maps into memory if you have a Mapsat module on your ship. If there\u0027s not enough room left for it to do that because you\u0027re using 27,000 different add-on parts and didn\u0027t bother to account for that, well frankly that\u0027s your problem. He\u0027s going to look at the Memory usage issue. I\u0027m personally pretty sure that it\u0027s a problem with the way the game loads textures and not something that can be reasonably solved without degrading the functionality.\u003C/p\u003E\u003Cp\u003EAnd seriously, if you think you can do better? Quit whining about it and DO it. Or at least supply hard data demonstrating that you\u0027re correct. Complaints and speculation don\u0027t help anyone, we need hard FACT, and so far I\u0027m pretty much the only one trying to get any.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat people are trying to do is reduce the memory footprint of Mapsat so that it can actually be used alongside other mods. I\u0027d love to use Mapsat, but I\u0027m not, because I\u0027m already at the precipice of the memory limit, and can\u0027t really get rid of the mods that I use. Any optimization of a mod\u0027s memory usage is a good thing. \u003C/p\u003E\u003Cp\u003EAlso, Ancient Gammoner IS doing it, and as far as I can tell, IS demonstrating that the memory usage can be reduced. He even mentioned that dynamically loading maps could cause a slowdown, but it could easily be cloaked within the SOI change loading. I\u0027m not sure why you\u0027re being so defensive about this...\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-02T19:52:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Torminator\u0022 data-cite=\u0022Torminator\u0022\u003E\u003Cdiv\u003EWhat people are trying to do is reduce the memory footprint of Mapsat so that it can actually be used alongside other mods. I\u0027d love to use Mapsat, but I\u0027m not, because I\u0027m already at the precipice of the memory limit, and can\u0027t really get rid of the mods that I use. Any optimization of a mod\u0027s memory usage is a good thing. \u003Cp\u003EAlso, Ancient Gammoner IS doing it, and as far as I can tell, IS demonstrating that the memory usage can be reduced. He even mentioned that dynamically loading maps could cause a slowdown, but it could easily be cloaked within the SOI change loading. I\u0027m not sure why you\u0027re being so defensive about this...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHis \u0027lower memory use\u0027 is below what I understand to be the minimum possible for loading all 30 maps, so it\u0027s plain that something\u0027s not right there.\u003C/p\u003E\u003Cp\u003EDynamically loading and unloading them is fine, the question is what kind of a hang does it have. Part of ISA is being able to look at any map at any time, and if it\u0027s going to hang it would every time you switched maps. If you can do that without causing a hang, that\u0027d be very useful in reducing the memory footprint, but I\u0027ve yet to see someone test that.\u003C/p\u003E\u003Cp\u003EI\u0027m not a developer so I\u0027ve no clue how to do that myself, or I would. I\u0027d also set up something just to load all 30 maps and see how much memory that used.\u003C/p\u003E\u003Cp\u003EI\u0027m also being told that Unity itself can load compressed DDS textures, but KSP doesn\u0027t allow it for some reason. That would help tremendously as well.\u003C/p\u003E\u003Cp\u003EAnd I\u0027m defensive because, well, I don\u0027t like it when people tear something down based on incorrect ideas stemming from Ignorance. I very much follow the scientific ideal that you should be able to hold your ideas up to experiment. People tearing down something fantastic based purely on ignorance pisses me off something fierce.\u003C/p\u003E\u003Cp\u003EDo I say it\u0027s perfect and couldn\u0027t be improved? No. But I\u0027ve yet to see one verifiable way to improve it come out of this so far(Other than drastically improving the CPU use at the cost of defeating the entire point.)\u003C/p\u003E\n"},{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-09-02T19:56:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trion\u0022 data-cite=\u0022Trion\u0022\u003E\u003Cdiv\u003EI\u0027ve been chatting with people that actually DO make mods about it, including Innsewerants himself, and it was a pretty interesting discussion. He said he\u0027s going to look at the memory usage when he gets a minute, because he\u0027s as mystified as I am.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe guy hasn\u0027t logged into his forum account in 3 months and you managed to talk with him... hmmm. Forgive my skepticism, but please tell us all how you accomplished this magical feat.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EEqually if someone actually does set up something that dynamically loads and unloads them and can demonstrate it not causing unacceptable slowdown when it does, that would be useful.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI already did this and wrote about how to do it, read the rest of the thread if your going to post.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ESo how does he come up with 150mb if they are being loaded correctly?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMaybe they weren\u0027t, maybe that numbers off, but the whole test quickly became completely irrelevant once I figured out how to delete the unused maps from memory, there\u0027s no need to load them all.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAnd For the record, I said that you could do about 18 times the resolution on Kerbin with Mapsat....\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAgain, \u003Cstrong\u003Eyou didn\u0027t read what I posted\u003C/strong\u003E. Any extra resolution with MapSat is worthless because of the inherent stuttering you get from pulling data from the game while flying. From my previous post:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i39.tinypic.com/110lpiw.jpg\u0022 alt=\u0022110lpiw.jpg\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EBut it boils down to this: Uniformed whining isn\u0027t going to help anything.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow ironic, the only person whining here is you.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EOr at least supply hard data demonstrating that you\u0027re correct. Complaints and speculation don\u0027t help anyone, we need hard FACT, and so far I\u0027m pretty much the only one trying to get any.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI confess this made me LOL. First off, I already posted how to do it better, with a demonstration and screenshots. What programming suggestions have you posted? Trying to get facts, laff, the only thing you\u0027re doing in this thread is cutting down everyone who tries to suggest improvements on the \u0027super incredible amazing\u0027 MapSat. You honestly come off as sounding like you wrote the program and won\u0027t accept criticism of it.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-02T20:18:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EThe guy hasn\u0027t logged into his forum account in 3 months and you managed to talk with him... hmmm. Forgive my skepticism, but please tell us all how you accomplished this magical feat.\u003Cp\u003EI already did this and wrote about how to do it, read the rest of the thread if your going to post.\u003C/p\u003E\u003Cp\u003EMaybe they weren\u0027t, maybe that numbers off, but the whole test quickly became completely irrelevant once I figured out how to delete the unused maps from memory, there\u0027s no need to load them all.\u003C/p\u003E\u003Cp\u003EAgain, \u003Cstrong\u003Eyou didn\u0027t read what I posted\u003C/strong\u003E. Any extra resolution with MapSat is worthless because of the inherent stuttering you get from pulling data from the game while flying. From my previous post:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i39.tinypic.com/110lpiw.jpg\u0022 alt=\u0022110lpiw.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EHow ironic, the only person whining here is you.\u003C/p\u003E\u003Cp\u003EI confess this made me LOL. First off, I already posted how to do it better, with a demonstration and screenshots. What programming suggestions have you posted? Trying to get facts, laff, the only thing you\u0027re doing in this thread is cutting down everyone who tries to suggest improvements on the \u0027super incredible amazing\u0027 MapSat. You honestly come off as sounding like you wrote the program and won\u0027t accept criticism of it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHe logs into the IRC chat just about every day. Spoke with him yesterday morning. He\u0027s somewhat mystified about the memory usage himself and says he\u0027ll look at it. Apparently he\u0027s been spending most of his time working on his own game idea he\u0027s had, and hasn\u0027t touched Mapsat or the forums because everyone indicated to him that the dev version still worked. Which it does.\u003C/p\u003E\u003Cp\u003EOn the other hand I just discovered something absolutely incredible memory usage wise that I\u0027m going to be making my own thread about, which is...very mysterious.\u003C/p\u003E\u003Cp\u003EEdit: Okay, they say this is \u0027a known bug\u0027, but it might still be useful.\u003C/p\u003E\u003Cp\u003EIf you suspend windows with KSP open and a flight in progress, it uses A FEW HUNDRED \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EKB\u003C/span\u003E MB [Why did I type KB?] until you load something else. Even after several loads it was still depressed 500-600 \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EKB\u003C/span\u003E MB below my normal levels.\u003C/p\u003E\u003Cp\u003EAnd that\u0027s on a ship WITH Mapsat with all the Maps loaded.\u003C/p\u003E\u003Cp\u003EEdit2: Okay, if I interpret what I\u0027m seeing now correctly, the memory problems in general appear to be the following:\u003C/p\u003E\u003Cp\u003EAlmost everything KSP loads into memory at any point is cached, remaining in memory even after it\u0027s not actually being used out of main memory anymore. Textures and Part Models that are already loaded into Vram. This could explain Mapsat\u0027s apparently high memory usage rather handily: The textures are loaded, decompressed, and passed to OpenGL, which passes it to the vidcard(At some point re-compressing them as DDS textures). The subsequently unused results of each of those steps remains cached in main memory afterwards. \u003C/p\u003E\u003Cp\u003EThis also accounts for the \u0027memory leak\u0027: Every time something that wasn\u0027t being used previously is loaded into Memory, it stays there afterwards. If you\u0027re switching between craft that have parts on them that weren\u0027t used on a ship you\u0027d focused previously, those assets go through the entire process and then THAT sits there in main memory as well. This would result in climbing memory usage if you were playing in such a way that more and more previously-unloaded parts were getting loaded as time went on. That would account for why I\u0027ve never seen it: I tend to use a pretty limited subset of parts, in part because I don\u0027t really use parts packs and in part because there are significant numbers of parts I tend to avoid using. If this is the case, however, in theory loading into the VAB should load...well, most things if not everything. It uses the part models and textures to draw the icons on the GUI, so in theory even things you don\u0027t actually use would get loaded. They might not get FULLY loaded unless you actually went to whatever page they\u0027re on. I suppose it\u0027s possible the VAB has better garbage collection on it for this reason too though, but that\u0027s just speculation.\u003C/p\u003E\u003Cp\u003EThe key reason that it\u0027s a problem looks like, based on what I can see anyway, that the things that are merely being \u0027cached\u0027 are being flagged like they\u0027re in active use. In theory, memory that\u0027s not in active use but merely storing cached things is supposed to be able to be reallocated if needed. It seems fairly likely to me that KSP isn\u0027t doing that, for whatever reason, because if it were it seems like there ought to be a lot fewer instances of \u0027out of memory\u0027 errors, if any at all (it really appears to not use very much at all the majority of the time!)\u003C/p\u003E\u003Cp\u003EEdit2:\u003C/p\u003E\u003Cp\u003EAlso, I did read your post, I just didn\u0027t tear it apart completely enough for your taste evidently.\u003C/p\u003E\u003Cp\u003EYou only get stuttering if you\u0027ve set your \u0027Resolution\u0027 setting too high for your CPU to handle(It\u0027s not really the Resolution, though, it\u0027s the number of scanlines it uses,) and even then only while you\u0027re actively scanning. See, there\u0027s this little button on the UI that turns the scanning feature off and cuts the CPU use to basically zero. There\u0027s also a \u0027GPS\u0027 part that\u0027s incapable of scanning at all.\u003C/p\u003E\u003Cp\u003EAlso, I can cut map segments out and blow them up by a factor of 2 as well:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/edin6SZ.png\u0022 alt=\u0022edin6SZ.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EStrangely it looks better than your \u0027ISA\u0027 image despite the fact that it\u0027s also 127x101 image blown up to 254x202 (a process that would naturally exaggerate any quality problems, scanline artifacts, or compression artifacts present.)\u003C/p\u003E\u003Cp\u003EWhich also raises the question of what the heck resolution are you using for your maps, and did you actually load that into the game? Because to get resolution THAT much better it\u0027d have to be a MUCH larger map, and therefore using even more memory... especially since recent evidence suggests that unloading it might not actually even unload it.\u003C/p\u003E\u003Cp\u003EYour...thing isn\u0027t even an approximation. It\u0027s a crude demonstration of an exceptionally basic method to accomplish a superficially similar task. It\u0027s missing almost everything that makes Mapsat useful, and it additionally contains very little to suggest it\u0027s actually better. Your \u0027Scanned\u0027 image isn\u0027t complete enough to gauge the resolution you\u0027ve actually used ingame, you didn\u0027t do a complete enough job to verify the memory usage actually IS any better, and there\u0027s quite obviously serious problems with the way you\u0027re tracking the current location and applying it to the map (You\u0027re going off the top and bottom of the map, and your \u0027scanlines\u0027 are perfectly straight and symmetrical at all latitudes. Neither of those are possible on a rectangular map.)\u003C/p\u003E\u003Cp\u003EEdit3:\u003C/p\u003E\u003Cp\u003EOh, I see. 16384x8192 resolution maps. No wonder you didn\u0027t mention the memory requirements, because by my calculations a 32bit uncompressed bitmap at that resolution is 536,870,912 bytes, or pretty much dead on 512 megabytes. Given that Mapsat\u0027s memory usage was over double the size of the uncompressed version of the texture and there\u0027s evidence that suggests that may be intrinsic...well, that\u0027d put you somewhere in the neighborhood of 1.2gb of RAM to load your one map. Gee.\u003C/p\u003E\u003Cp\u003EAlso, comparing an image that\u0027s been upsized by a factor of 2 to one that\u0027s been downsized by a factor of 4 (which is at least equivalent to 4x supersampling anti-aliasing) is kinda dirty pool, don\u0027t you think? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-03T01:51:05Z\u0022 title=\u002209/03/2013 01:51  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 3, 2013\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-09-03T01:58:51Z","Content":"\n\u003Cp\u003EIn the interest of keeping this thread open, let\u0027s just cool down a bit.\u003C/p\u003E\u003Cp\u003EUsing textures to store any kind of data that isn\u0027t actually an image is a bad idea if you\u0027re worried about memory consumption. (I\u0027ll skip over all the ways it reduces code quality, et cetera.) At runtime, you need to have a texture that renders a map onto the screen (if you\u0027re making a 2D display), but this is \u003Cem\u003Ecompletely different\u003C/em\u003E data than what you generate when you actually perform a scan. When you scan an area, fundamentally you\u0027re saying \u0022I\u0027ve been here, so I want access to that elevation data later\u0022 regardless of whether that\u0027s what you actually do in memory. If you need to store that elevation data (e.g. for performance reasons) you can do that, but don\u0027t store it as a texture, because a texture stores colors, not elevations. CPUs are really, really fast, and converting elevations to colors won\u0027t impact performance. Even if you don\u0027t use any kind of compression, you\u0027re making a savings of at least a factor of 24 in memory.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-03T02:24:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EIn the interest of keeping this thread open, let\u0027s just cool down a bit.\u003Cp\u003EUsing textures to store any kind of data that isn\u0027t actually an image is a bad idea if you\u0027re worried about memory consumption. (I\u0027ll skip over all the ways it reduces code quality, et cetera.) At runtime, you need to have a texture that renders a map onto the screen (if you\u0027re making a 2D display), but this is \u003Cem\u003Ecompletely different\u003C/em\u003E data than what you generate when you actually perform a scan. When you scan an area, fundamentally you\u0027re saying \u0022I\u0027ve been here, so I want access to that elevation data later\u0022 regardless of whether that\u0027s what you actually do in memory. If you need to store that elevation data (e.g. for performance reasons) you can do that, but don\u0027t store it as a texture, because a texture stores colors, not elevations. CPUs are really, really fast, and converting elevations to colors won\u0027t impact performance. Even if you don\u0027t use any kind of compression, you\u0027re making a savings of at least a factor of 24 in memory.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOkay, that\u0027s kind of a point, but I\u0027m not sure how exactly you\u0027d apply that to an actual topographic map. I mean, sure, it works for Kethane because you\u0027re only having to store a few, smallish textures and use them over and over. Mapsat IS perfectly capable of storing an elevation dataset as CSVs, but I can\u0027t personally figure out how you\u0027d get that into a usable ingame form without generating a texture out of it that\u0027s the same size as the maps we\u0027re already using, which is going to hit the memory just as hard. There aren\u0027t really repeating elements you can reuse like there are for your Kethane Hex-Map.\u003C/p\u003E\u003Cp\u003EAlso, did you miss the part where I said the high memory usage appears to be entirely because it\u0027s leaving things loaded in cache that it\u0027s not actually using at the moment? I had a mapsat equipped plane sitting on the runway earlier using less than 400,000K of memory for the \u003Cem\u003Eentire game\u003C/em\u003E, even with all the maps loaded. \u003C/p\u003E\u003Cp\u003EIt looks like the game\u0027s caching all the intermediate steps in getting it off the hard drive and into the vram. Worse, the sheer number of complaints about out-of-memory crashes suggests it\u0027s not reallocating that memory when it runs low. Even worse, that could also lead to the \u0027memory leak\u0027 some people say they\u0027re encountering, and technically it would actually qualify.\u003C/p\u003E\u003Cp\u003EWhich would mean almost the entire memory usage of the game is one massive, non-iterative memory leak.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://cloud-2.steampowered.com/ugc/597013822168837832/59A7D6D1125771E047C25D5135A69B4048D0FCB0/\u0022 alt=\u002259A7D6D1125771E047C25D5135A69B4048D0FCB0\u0022\u003E\u003C/p\u003E\u003Cp\u003EWorking set: Total memory currently being used by the program.\u003C/p\u003E\u003Cp\u003EPeak Working Set: Maximum value of Working Set achieved during the current session.\u003C/p\u003E\u003Cp\u003EPrivate Working Set: Memory being used by the program that cannot be reallocated.\u003C/p\u003E\u003Cp\u003ECommit Size: Total Memory Allocation reserved for use of the program.\u003C/p\u003E\u003Cp\u003EPF Delta: The change in the number of Page Faults since the last update: basically the current rate page faults are occuring at. A page fault is the term for when a requested item is not found in memory, and thus has to be retrieved.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-03T02:51:40Z\u0022 title=\u002209/03/2013 02:51  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 3, 2013\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-09-03T03:07:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EOkay, that\u0027s kind of a point, but I\u0027m not sure how exactly you\u0027d apply that to an actual topographic map. I mean, sure, it works for Kethane because you\u0027re only having to store a few, smallish textures and use them over and over. Mapsat IS perfectly capable of storing an elevation dataset as CSVs, but I can\u0027t personally figure out how you\u0027d get that into a usable ingame form without generating a texture out of it that\u0027s the same size as the maps we\u0027re already using, which is going to hit the memory just as hard. There aren\u0027t really repeating elements you can reuse like there are for your Kethane Hex-Map.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHaven\u0027t you heard of arrays (or other collections)? I don\u0027t like rectangular map formats, but if that\u0027s what you want, a rectangular array is all you need. If you\u0027re storing booleans, be sure to use something like BitArray (you\u0027ll have to add the second dimension manually) and not bool[,].\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EAlso, did you miss the part where I said the high memory usage appears to be entirely because it\u0027s leaving things loaded in cache that it\u0027s not actually using at the moment? I had a mapsat equipped plane sitting on the runway earlier using less than 400,000K of memory for the \u003Cem\u003Eentire game\u003C/em\u003E, even with all the maps loaded.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI didn\u0027t miss anything. It\u0027s a good find, and reinforces that textures should be used sparingly.\u003C/p\u003E\n"},{"CreatedByName":"jrandom","CreatedById":74522,"CreatedDateTime":"2013-09-03T03:14:33Z","Content":"\n\u003Cp\u003ECouldn\u0027t the program just use memory-mapped files and let the OS handle caching? Break each set of sampled points into segments, read/write the appropriate segment when necessary, and disk activity will only happen when the OS decides it\u0027s necessary. Put the reader/writer in it\u0027s own thread and you\u0027ve got something that won\u0027t pause KSP -- the map window could simply display a little red light meaning \u0022reading data\u0022 and display when ready. Writes would simply be handed off to the read/write thread. No stuttering, tiny memory footprint. Textures can be generated on-the-fly from the sampled points. There\u0027s no reason to have every high-res map loaded in memory all the time, right?\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-03T03:19:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EHaven\u0027t you heard of arrays (or other collections)? I don\u0027t like rectangular map formats, but if that\u0027s what you want, a rectangular array is all you need. If you\u0027re storing booleans, be sure to use something like BitArray (you\u0027ll have to add the second dimension manually) and not bool[,].\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETrue, but to get any kind of resolution you\u0027d need a LOT of them, and that\u0027s going to be a major pain in the butt to code.\u003C/p\u003E\u003Cp\u003EAnd there\u0027s a reason that the map comes in two modes: Rectangular and Polar. The Polar uses a pair of polar azimuthal projections laid out side-by-side. You can swap back and forth between the two on the fly: This is the reason there\u0027s 30 maps instead of 15.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022jrandom\u0022 data-cite=\u0022jrandom\u0022\u003E\u003Cdiv\u003ECouldn\u0027t the program just use memory-mapped files and let the OS handle caching? Break each set of sampled points into segments, read/write the appropriate segment when necessary, and disk activity will only happen when the OS decides it\u0027s necessary. Put the reader/writer in it\u0027s own thread and you\u0027ve got something that won\u0027t pause KSP -- the map window could simply display a little red light meaning \u0022reading data\u0022 and display when ready. Writes would simply be handed off to the read/write thread. No stuttering, tiny memory footprint. Textures can be generated on-the-fly from the sampled points. There\u0027s no reason to have every high-res map loaded in memory all the time, right?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI can\u0027t see why not, except that KSP seems to be botching something up here: When I check the memory usage without doing my little trick, the Private Working set is still only a tiny bit smaller than the full Working set: Somehow, all the \u0027cache\u0027 bits aren\u0027t getting flagged as such (or at least that\u0027s what it looks like). Which is probably the sole reason textures, including Mapsat\u0027s maps, are using so much memory in the first place.\u003C/p\u003E\u003Cp\u003EWhich isn\u0027t a problem in and of itself, but I get the impression one of the side effects is that it\u0027s not dumping parts of the cache to make room for new stuff when it needs to, which is probably a lot of what\u0027s resulting in the out-of-memory errors people with a lot of mods get.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-03T03:24:04Z\u0022 title=\u002209/03/2013 03:24  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 3, 2013\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-09-03T03:27:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003ETrue, but to get any kind of resolution you\u0027d need a LOT of them, and that\u0027s going to be a major pain in the butt to code.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat? No, you need exactly one. C# has true multidimensional arrays (not jagged like Java) and even if it didn\u0027t (e.g. BitArray is one-dimensional) you can fake it by multiplying one coordinate by the length of the prior dimensions.\u003C/p\u003E\n"},{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-09-03T03:36:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EUsing textures to store any kind of data that isn\u0027t actually an image is a bad idea if you\u0027re worried about memory consumption. (I\u0027ll skip over all the ways it reduces code quality, et cetera.) At runtime, you need to have a texture that renders a map onto the screen (if you\u0027re making a 2D display), but this is completely different data than what you generate when you actually perform a scan. When you scan an area, fundamentally you\u0027re saying \u0022I\u0027ve been here, so I want access to that elevation data later\u0022 regardless of whether that\u0027s what you actually do in memory. If you need to store that elevation data (e.g. for performance reasons) you can do that, but don\u0027t store it as a texture, because a texture stores colors, not elevation. CPUs are really, really fast, and converting elevations to colors won\u0027t impact performance. Even if you don\u0027t use any kind of compression, you\u0027re making a savings of at least a factor of 24 in memory. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf I understand the approach your thinking of, it\u0027s basically to generate the texture displayed in the GUI (which is much smaller resolution than 2k) and change each pixels color in real time based on stored data and the current zoom/scroll positions? Interesting... I mean far more work to build a plugin that would use that method but I suppose that would use the least memory. What sort of storage method did you have in mind that you could easily read specific pieces of but that the game didn\u0027t insist on loading the whole thing into memory? I\u0027m not sure if the extra effort is even necessary though... personally I just want to see a mapping program that doesn\u0027t use a crazy amount of memory like 700mb, whether it uses 20mb or 1mb makes less of a difference.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-03T03:42:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EWhat? No, you need exactly one. C# has true multidimensional arrays (not jagged like Java) and even if it didn\u0027t (e.g. BitArray is one-dimensional) you can fake it by multiplying one coordinate by the length of the prior dimensions.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI meant a lot of CELLS. The current ISA maps are 2048x1024 (although the polars map obviously has substantial areas that aren\u0027t part of the actual map because it has two round bits in a rectangular texture.) Easy enough to set up logically, but I can just imagine that setting it up graphically could be a real pain.\u003C/p\u003E\u003Cp\u003EYou\u0027d also have to either recode recode the way the plugin records the raw scan data, or set it up to translate it into the matrix format on the fly. Right now it\u0027s set up to save it as CSVs that pretty much just defines the coordinates of the scan location and the altitude of the result(I think, anyway.) It\u0027s kinda crippled in the dev version, I\u0027m not sure it\u0027s working quite right, and he didn\u0027t include the map generator program with it either (something about redoing the way it works, or something), though the \u0027RAW\u0027 option is present and does generate a file. It was designed to save whatever data you managed to collect very precisely so that you could make maps of an arbitrary size with it, even ones far larger and higher resolution than what you\u0027re using ingame.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EIf I understand the approach your thinking of, it\u0027s basically to generate the texture displayed in the GUI (which is much smaller resolution than 2k) and change each pixels color in real time based on stored data and the current zoom/scroll positions? Interesting... I mean far more work to build a plugin that would use that method but I suppose that would use the least memory. What sort of storage method did you have in mind that you could easily read specific pieces of but that the game didn\u0027t insist on loading the whole thing into memory? I\u0027m not sure if the extra effort is even necessary though... personally I just want to see a mapping program that doesn\u0027t use a crazy amount of memory like 700mb, whether it uses 20mb or 1mb makes less of a difference.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s the method he uses for his Kethane Hex Map. It stores the scan data basically as a mask in the savefile, with a single character indicating if each segment\u0027s been scanned or not. There\u0027s some other data in there which I\u0027m not sure exactly what it\u0027s for, but it\u0027s a really simple solution that only requires 1 byte per cell. He\u0027s also got it set up to have the cell colors be based on the amount of Kethane in the cell, and there\u0027s no actual on-disk textures for any of it. So far as I can tell, he generates them on the fly too. It\u0027s very slick.\u003C/p\u003E\u003Cp\u003EUnfortunately if I\u0027m right about this memory thing, his method might be just about the only way to keep it from using tons of memory. Unless the overall \u0027cache\u0027 thing gets resolved, in which case it won\u0027t really matter that much.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-03T03:52:35Z\u0022 title=\u002209/03/2013 03:52  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 3, 2013\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AncientGammoner","CreatedById":77111,"CreatedDateTime":"2013-09-03T03:52:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EAlso, comparing an image that\u0027s been upsized by a factor of 2 to one that\u0027s been downsized by a factor of 4 (which is at least equivalent to 4x supersampling anti-aliasing) is kinda dirty pool, don\u0027t you think?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPlease stop editing your old posts to add new stuff to them, its annoying. And to answer your question, both maps were 2048x1024 when I cropped them. They were both scaled up x2 so you could actually see the differences better.\u003C/p\u003E\n"}]}