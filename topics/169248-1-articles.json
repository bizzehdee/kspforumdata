{"TopicId":169248,"ForumId":44,"TopicTitle":"Burn Determinants","CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2018-01-05T01:21:50Z","PageNum":1,"Articles":[{"CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2018-01-05T01:21:50Z","Content":"\n\u003Cp\u003E\nSo, for the 2 weeks I have head buried in the three dimensional coordinate mapping. There are a couple of things I figured out how to do, for example create an elliptical in a 3D system. And to be able to position and dp/dt vectors.\u003Cbr\u003E\nThis was a very messy afair to say the least, but in doing this I came to realize there is a problem which every space program must solve, and that once the launch burn(s) are complete, the craft must decide when to burn. As we know a rocket launched from Russia a few weeks ago made the wrong decision to burn, and burn itself into the south atlantic. So the question is how do we define a robust system in which we can define when to burn based on as little apriori information as possible.\u003Cbr\u003E\nIOW, you have just done a stage separation, the next stage is aware and is contantly loading\u00A0 \u0026lt;P\u0026gt; [\u0026lt;\u00A0 \u0026gt; define a three conponent vector all position vectors root at Earth\u0027s center of mass] from GPS and observing at 1 second intervals now has dP/dt giving \u0026lt;V\u0026gt;.\u003Cbr\u003E\nSince the rocket imparts the final phase of the commercial rockets mission a momentum and certain vector its now up to the second stage to decide when to burn . . . .what can possibly go wrong. As this stage comes on line it now has a timer operating, it has to wait for it to cross a certain threshold and fire, as it waits it turns to optimal burn angle. How hard can that be.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you play KSP this seems relatively simple, until you are the one who is doing the programming, for example in the game you wait until half the time in distance from the center of the burn until burn complete.\u003Cbr\u003E\nBasically the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E needed at the center is X\n\u003C/p\u003E\n\u003Cp\u003E\nX = \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E * ln (M\u003Csub\u003E0\u003C/sub\u003E/M\u003Csub\u003Ef\u003C/sub\u003E)\u00A0 ..... M\u003Csub\u003Ef\u003C/sub\u003E = M\u003Csub\u003E0\u003C/sub\u003E / e\u003Csup\u003E(X*V\u003Csub\u003Ee\u003C/sub\u003E)\u003C/sup\u003E\u00A0\u00A0 Since T = M\u003Csub\u003Ef\u003C/sub\u003E / M-flow\u003Csub\u003Emax\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\nSince maximum mass flow generally occurs at full thrust we can assume that T is the time of the burn and T\u003Csub\u003E1/2\u003C/sub\u003E is the burn init time lead to the burn point.\u003Cbr\u003E\u003Cbr\u003E\nWhile this may seem simple, as it would turn out it gets more complicated over time, such as during kicks because during each kick you need to comeback and determine a new burn init point.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00225lxCNOm.png\u0022 class=\u0022ipsImage\u0022 height=\u0022348\u0022 src=\u0022https://i.imgur.com/5lxCNOm.png\u0022 width=\u0022322\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nIn the above image three coordinate axis (\u003Cspan style=\u0022color:#e74c3c;\u0022\u003Ered = X\u003C/span\u003E, \u003Cspan style=\u0022color:#2ecc71;\u0022\u003Egreen = y\u003C/span\u003E, \u003Cspan style=\u0022color:#3498db;\u0022\u003Eblue = z\u003C/span\u003E) At the intersection of all three axes there is a plane for all the three axis with a circle representing the plane that encircles the corresponding axis.\u003Cbr\u003E\nIf we can imagine a ship traveling on any of the axis there are an infinite set of point where a burn can be initiated and complete its burn. So lets say we are traveling around the Z=0 axis (our position is defined by X,Y and can be mapped by an angle \u03A6 relative to X=0 and rotating about the Z axis where \u03A6 can be defined as Sign(Y) * Arc-cosine (X/SQRT(X\u003Csup\u003E2\u003C/sup\u003E \u002B Y\u003Csup\u003E2\u003C/sup\u003E)). If we notice that I have set the ship on a elliptical defined by the unit tangent vector 0,0,1 . . the Z axis annd goes through the origin. In the above defined elliptical. if I set the burn center point at \u03A6 = pi/15. And I am traveling at 0.001 rad/sec and the burn needs say 200 seconds, then its a pretty good guess to start the burn at 0.1 radians (~5.7 degrees) before \u03A6. Therefore the burn initiation point. \u03A6 = pi/15 - 0.1.\n\u003C/p\u003E\n\u003Cp\u003E\nSo the basic assumption is that this will be the same for all orbits, of course, if it was I would not present the graph. So lets say my rocket takes off 3 minutes before I reach the Vernal equinox, I then burn on a north bound course 340\u0027 until I intercept the X=0 elliptical at orbital altitude and I hug that course just as close as I can. So lets say that the function of me doing this is that I want to create a 2 orbit a day elliptical with one orbit at say 200km above the south pole and the other end at an altitude with an a that generates the specified period of twice passing the south pole a day (1/12 hours = 2.31E-5 O/s). In order to achieve this I need a burn that centers on the south pole (where Z-axis, Y =0 and X=0 intercept). How do we specify the burn init . . . . . .\u003Cbr\u003E\nIt turns out that you can\u0027t, in fact the closer you get to a pole, the harder it gets to specify the burn interval with precision using\u00A0\u03A6 , because the axis you are trying to specify on has an almost infinite \u0027faux\u0027 angular momentum as it passes over the pole and no angular momentum at the equator. \u003Cstrong\u003EFor any axis of in which a polar coordinate system can be derived one can find an orbit in which that polar coordinate system is absolutely useless\u003C/strong\u003E.\u00A0 There is a whole list of orbits (Rougly from 0.1 radians from the axis which is used to define the angle in which the angular positioning system becomes useless.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is another fictitious problem because the angle being use \u03A6 does not have an linear function with an angle from the plane of the elliptical, in that plane \u0398 defines the angular distance along the path of motion from the periapsis and we know from Keplarian that objects orbiting in the plane sweep the same area for any given unit of time. So that the keplarian system has some utility after all. The only problem is mapping x,y,z in the keplarian is not easy. so that if we can imagine elliptical Z = 0\u00A0 and suppose our burn center is at y = 0, then we can map that burn at \u03A6\u00A0 = \u03C0/2 - 0.1 pi radians. If the periapsis is at \u03C0/2 then it maps to -0.1 radians. But more simply than that suppose we are using a gps system to coordinate the burn initiation then of course we cannot be sampling the Keplarian elliptical but have to come up with a metric something like 17x \u002B y = 0 or x \u0026lt; -y/17 \u00A0 when we cross it\u00A0 we need to burn for 200 seconds and then recalculate the Keplarian. What we need is an orbital probe, a probe that tells us the axis which is tangent to the plane and a crossing that discontinous plane (it starts at the origin propogating up and down along the orbits tangent and perpendicular in the direction of the threshold burn tangent. That plane cab be detected by GPS. is to use the unit vector for elliptical tangent. Since we have each of the three axis we want to select the two other axis (each a unit vector with 1 as one of it components and 0 as the other two). So that the axis with the two greatest distances should immediately solve this issue\u00A0 of the above, you will never be closer than 45\u0027 from the pole of the of the axis that you have chosen. But is that actually the best way is to create an equation of the orbit such that all X,Y,Z match.\n\u003C/p\u003E\n\u003Cp\u003E\nSo an actual orbit, lets say our defined threshold of the orbit is defined by some vectors latitude longditude. And this position is defined precisely to a cubic meter in space. What are the actual odds that RL space craft is going to pass through the cube that triggers the event. What we need is a tangent plane inorbital path is the tangent and in which the threshold is a point in that tangent plane. Thats where the real programming fun comes into it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2018-01-08T18:54:34Z","Content":"\n\u003Cp\u003E\nI just thought I would add these useless equations, for a partical in an inertial energy isoquant around a much much more massive point mass.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00B5 = Mass\u003Csub\u003Ecelestial\u003C/sub\u003E * G\u003Csub\u003Euniversal\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\nr = ||P|| radius of a circular orbit in an equitorial orbit [IOW the equitorial plane has been rotated about some axis so that the perpinducular to the plane is the Z axis] about a celestial\u003Cbr\u003E\nand is the magnitude of P (a vector) whose minors are P\u003Csub\u003Ex\u003C/sub\u003E, P\u003Csub\u003Ey\u003C/sub\u003E and P\u003Csub\u003Ey\u003C/sub\u003E with unit vectors of p\u003Csub\u003Ex,\u00A0 \u003C/sub\u003Ep\u003Csub\u003Ey \u003C/sub\u003Eand 0. The inference of the R3 space is that x, y and z axes are orthogonal and linearly independent.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003Et\u003C/em\u003E is elapsed time since\u00A0p\u003Csub\u003Ex\u003C/sub\u003E = 1,\u00A0p\u003Csub\u003Ey \u003C/sub\u003E= 0 and p\u003Csub\u003Ez \u003C/sub\u003E= 0\n\u003C/p\u003E\n\u003Cp\u003E\nP = [r cos (\u00B5\u003Csup\u003E1/2\u003C/sup\u003Er\u003Csup\u003E-3/2\u003C/sup\u003E\u003Cstrong\u003E\u003Cem\u003Et\u003C/em\u003E\u003C/strong\u003E) , r sin (\u00B5\u003Csup\u003E1/2\u003C/sup\u003Er\u003Csup\u003E-3/2\u003C/sup\u003E\u003Cem\u003E\u003Cstrong\u003Et\u003C/strong\u003E), 0\u003C/em\u003E]\n\u003C/p\u003E\n\u003Cp\u003E\nV is a vector composed of minors V\u003Csub\u003Ex\u003C/sub\u003E, V\u003Csub\u003Ey\u003C/sub\u003Eand V\u003Csub\u003Ez\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\nV = [(-\u00B5\u003Csup\u003E1/2 \u003C/sup\u003Er\u003Csup\u003E-1/2\u003C/sup\u003E sin (\u00B5\u003Csup\u003E1/2\u003C/sup\u003Er\u003Csup\u003E-3/2\u003C/sup\u003E\u003Cstrong\u003E\u003Cem\u003Et\u003C/em\u003E\u003C/strong\u003E) , \u00B5\u003Csup\u003E1/2 \u003C/sup\u003Er\u003Csup\u003E-1/2\u003C/sup\u003E cos (\u00B5\u003Csup\u003E1/2\u003C/sup\u003Er\u003Csup\u003E-3/2\u003C/sup\u003E\u003Cem\u003E\u003Cstrong\u003Et\u003C/strong\u003E), 0\u003C/em\u003E)] where V = dP/dt\n\u003C/p\u003E\n\u003Cp\u003E\noddly differentiation of this equation yields\u003Cbr\u003E\u003Cbr\u003E\nA = [-\u00B5/r\u003Csup\u003E2\u003C/sup\u003E\u00A0 cos (\u00B5\u003Csup\u003E1/2\u003C/sup\u003Er\u003Csup\u003E-3/2\u003C/sup\u003E\u003Cstrong\u003E\u003Cem\u003Et\u003C/em\u003E\u003C/strong\u003E), --\u00B5/r\u003Csup\u003E2 \u003C/sup\u003Esin (\u00B5\u003Csup\u003E1/2\u003C/sup\u003Er\u003Csup\u003E-3/2\u003C/sup\u003E\u003Cstrong\u003E\u003Cem\u003Et\u003C/em\u003E\u003C/strong\u003E), 0] where A = d\u003Csup\u003E2\u003C/sup\u003EP/dt\u003Csup\u003E2\u003C/sup\u003E\u003C/p\u003E\n\u003Cp\u003E\nAt least in two dimension this psuedo position notation describes the curvature of space as accelerations of the X, Y (and Z=0)\n\u003C/p\u003E\n\u003Cp\u003E\nA\u003Csub\u003Ex\u003C/sub\u003E = -\u00B5/r\u003Csup\u003E2\u003C/sup\u003E\u00A0 cos (\u00B5\u003Csup\u003E1/2\u003C/sup\u003Er\u003Csup\u003E-3/2\u003C/sup\u003E\u003Cstrong\u003E\u003Cem\u003Et\u003C/em\u003E\u003C/strong\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nNote that \u00B5\u003Csup\u003E1/2\u003C/sup\u003Er\u003Csup\u003E-3/2\u003C/sup\u003E\u00A0 is\u00A0 2\u03C0/Period\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}