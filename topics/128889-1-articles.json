{"TopicId":128889,"ForumId":29,"TopicTitle":"[Answered] Can KSP null out a reference I\u0026#039;ve made to a Vessel?","CreatedByName":"SixHourDays","CreatedById":140711,"CreatedDateTime":"2015-12-30T08:11:46Z","PageNum":1,"Articles":[{"CreatedByName":"SixHourDays","CreatedById":140711,"CreatedDateTime":"2015-12-30T08:11:46Z","Content":"\n\u003Cp\u003E\nSummary: if you refer to a kerbalEVA vessel, then board said kerbal onto a craft, KSP appears to null out your reference on you. \u00A0How can that be?\n\u003C/p\u003E\n\u003Cp\u003E\nk i\u0027m pretty tired, and maybe my eyes are playing tricks....but I swear I just saw this happen in my Monobehavior. \u00A0Please forgive the pseudocode, typing from memory.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nI have this field: Vessel m_shipRef = null;\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nin Awake() I have GameEvents.OnVesselSwitch.Add( MySwitchHandler );\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nin MySwitchHandler(), I have\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nDebug.Log(\u0022 ship was \u0022 \u002B m_shipRef == null ? \u0022null\u0022 : m_shipRef.ToString() );\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nm_shipRef = FlightGlobals.ActiveVessel;\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nDebug.Log(\u0022 ship is \u0022 \u002B m_shipRef == null ? \u0022null\u0022 : m_shipRef.ToString() );\n\u003C/p\u003E\n\u003Cp\u003E\nNow the test case - spawn a ship with a kerb in it. \u00A0print will be \u0022ship was null, ship is\u00A0PartName (YourShipName) (Vessel)\u0022 - so far so good.\n\u003C/p\u003E\n\u003Cp\u003E\nthen, eva the kerbal. \u00A0print wlil be \u0022ship was PartName (YourShipName) (Vessel), ship is kerbalEVA (Jebediah Kerman) (Vessel)\u0022 - again, all ok\n\u003C/p\u003E\n\u003Cp\u003E\nthen, board the kerbal back onto the ship...the \u003Cstrong\u003Eprint will be \u0022ship was null, ship is PartName (YourShipName) (Vessel)\u0022! \u00A0The \u0022ship was x\u0022 section here should refer to jeb, not null.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve racked my brain and for the life of me can\u0027t figure out how that happens. \u00A0nothing uses / refers to m_shipRef except the handler. \u00A0Intuitively, KSP is destroying the \u0027kerbalEVA\u0027 ship when I board him, so I can see KSP cleaning up after itself internally. \u00A0but how can KSP go null out \u003Cem\u003Emy reference\u003C/em\u003E to the ship? \u00A0I don\u0027t expect it in the scene anymore, but I do expect my C# reference to keep kerbalEVA alive until I drop it.\n\u003C/p\u003E\n\u003Cp\u003E\nAny ideas anyone?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-30T16:48:48Z\u0022 title=\u002212/30/2015 04:48  PM\u0022 data-short=\u00228 yr\u0022\u003EDecember 30, 2015\u003C/time\u003E by SixHourDays\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-12-30T08:41:16Z","Content":"\n\u003Cp\u003E\nSee EvilReepers explanation (I stand corrected)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-30T09:14:40Z\u0022 title=\u002212/30/2015 09:14  AM\u0022 data-short=\u00228 yr\u0022\u003EDecember 30, 2015\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-12-30T09:06:00Z","Content":"\n\u003Cp\u003E\nObjects derived from UnityEngine.Object overload Equals and will act like they\u0027re null after their unmanaged side has been destroyed. You\u0027ll note that m_shipRef isn\u0027t \u003Cstrong\u003Eactuall\u003C/strong\u003E\u003Cstrong\u003Ey\u003C/strong\u003E null -- you can still access, say, m_shipRef.altitude just fine. The moment you try and touch the (destroyed) Unity engine representation through something like m_shipRef.transform/rigidbody etc, you\u0027ll see an exception.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan\u003E[KSPAddon(KSPAddon.Startup.Instantly, true)]\npublic class NullTestExample : MonoBehaviour\n{\n    private void Start()\n    {\n        print(\u0022Hello, world! I am \u0022 \u002B GetState());\n        DestroyImmediate(this);\n        print(\u0022Now I\u0027m \u0022 \u002B GetState());\n        print(\u0022Let me just move myself now...\u0022);\n        transform.Translate(Vector3.up);\n    }\n\n    private string GetState()\n    {\n        return this == null ? \u0022UNDEAD!!!\u0022 : \u0022fine\u0022; // note nonsensical comparison: surely this can never be NULL?\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan\u003E[LOG 00:56:41.430] Hello, world! I am fine\n[LOG 00:56:41.431] Now I\u0027m UNDEAD!!!\n[LOG 00:56:41.432] Let me just move myself now...\n[EXC 00:56:41.434] NullReferenceException\n\tUnityEngine.Component.get_transform ()\n\tTestBed.NullTestExample.Start () (at d:/For New Computer/KSPCustomMods/TestBed/TestBed/NullTestExample.cs:18)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nHere\u0027s a \u003Ca href=\u0022http://blogs.unity3d.com/2014/05/16/custom-operator-should-we-keep-it/\u0022 rel=\u0022external nofollow\u0022\u003Elink to the best explanation\u003C/a\u003E I could find\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-30T09:11:16Z\u0022 title=\u002212/30/2015 09:11  AM\u0022 data-short=\u00228 yr\u0022\u003EDecember 30, 2015\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003Cbr\u003ELink\n\u003C/span\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2015-12-30T09:23:44Z","Content":"\n\u003Cp\u003E\nI\u0027m a dangerous amateur at programming, so I may make mistakes in this... but from the best of my knowledge:\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe you\u0027re running into one of those places where objects and variables don\u0027t behave alike. \u00A0\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan\u003EVessel vessel1 = new vessel();\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\ncreates a vessel.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan\u003EVessel vessel2 = vessel1;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nPoints a new REFERENCE\u00A0at the same vessel in memory essentially. \u00A0And vessels in memory are vessels in KSP space... \u00A0so, truly copying a vessel would spawn a second vessel right on top of the first one, and when you switched to one they\u0027d collide and explode, I\u0027d think? \u00A0You can point a dozen references at a vessel, and when the vessel ceases to exist, they\u0027ll all tell you that it\u0027s null.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0Without knowing what you want to accomplish exactly... I think the way I\u0027d think about handling this is creating my own class of \u0022VesselInfo.\u0022 \u00A0Something like... \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan\u003E public class VesselInfo\n    {\n        public Guid id;\n        public String name;\n        public double launchtime;\n\n        public VesselInfo(Guid i, string n, double l)\n        {\n            id = i;\n            name = n;\n            launchtime = l;  // example of storing other data...  you can store any variable in the Vessel class, but not objects... so you can store vessel1.parts[0].name, but not vessel1.parts[0]   \n        }\n    }\n\n    [KSPAddon(KSPAddon.Startup.Flight, false)]\n    public class KSPTest : MonoBehaviour\n    {\n        VesselInfo UsedToBe = null;\n\n        void Awake()\n        {\n            GameEvents.onVesselChange.Add(MySwitchHandler);\n        }\n\n        private void MySwitchHandler(Vessel data)\n        {\n            \n            Debug.Log(\u0022 ship was \u0022 \u002B UsedToBe.name);\n            UsedToBe = new VesselInfo(data.id, data.name, data.launchTime);\n            Debug.Log(\u0022 ship is now \u0022 \u002B UsedToBe.name);\n        }\n\n       \n    }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nDisclaimer - code compiled... \u00A0didn\u0027t check to make sure it worked as advertised though, but it should be CLOSE to working. \u00A0And someone smarter may come along with a better idea in a minute! \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor general reference, to copy an object:\n\u003C/p\u003E\n\u003Cp\u003E\nSome C# classes implement an Iclonable interface,\u00A0so something like this would work:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan\u003EVessel vessel2 =(vessel)vessel1.Clone();\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nOther C# classes have a copy constructor, which would make this work:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html\u0022\u003E\nVessel vessel2=new Vessel(vessel1);\u003C/pre\u003E\n\u003Cp\u003E\nBut vessel gives you neither of these, for the above stated reasons - you don\u0027t actually WANT to copy a vessel. \u00A0In this instance you want to hang onto some data about it until you need it again... \u00A0which could be after that vessel ceased to exist.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-30T10:27:52Z\u0022 title=\u002212/30/2015 10:27  AM\u0022 data-short=\u00228 yr\u0022\u003EDecember 30, 2015\u003C/time\u003E by artwhaley\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SixHourDays","CreatedById":140711,"CreatedDateTime":"2015-12-30T16:47:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222341753\u0022 data-ipsquote-contentid=\u0022128889\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221451466360\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nObjects derived from UnityEngine.Object overload Equals and will act like they\u0027re null after their unmanaged side has been destroyed.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\naaaaaaaand the lightbulb goes on (also after a significant sleep). \u00A0Thanks for this, and the link - \u0027impossible\u0027 has now been explained into \u0027nefarious\u0027.\n\u003C/p\u003E\n"}]}