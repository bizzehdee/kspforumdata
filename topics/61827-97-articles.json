{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":97,"Articles":[{"CreatedByName":"adamzl","CreatedById":122229,"CreatedDateTime":"2015-01-11T23:21:00Z","Content":"\n\u003Cp\u003Ewould like to report a bug.\u003C/p\u003E\u003Cp\u003Esummary: when using STAGE:RESOURCES on a specific ship setup the resources for future stages are listed.\u003C/p\u003E\u003Cp\u003Ereproduction: build the ship shown below with the staging shown below. in my example LV-909 engines are used above both stack decouplers. the fuel tank for the last stage engine was not necessary to reproduce the bug but the engine was. for staging you must set the stage to contain both the decoupler and the engine, the issue is fixed if you separate the two into different stages. on launch activate the first stage and use PRINT STAGE:RESOURCES., you will see the liquid fuel and oxidizer listed.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/fCHFq1r.png\u0022 alt=\u0022fCHFq1r.png\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/o69xwFc.png\u0022 alt=\u0022o69xwFc.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/0dj4EeX.png\u0022 alt=\u00220dj4EeX.png\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/mIhdzo1.png\u0022 alt=\u0022mIhdzo1.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"VentZer0","CreatedById":130750,"CreatedDateTime":"2015-01-12T03:02:42Z","Content":"\n\u003Cp\u003EHello, I made a little aeronautic attitude observation system, basically it gives you information about, ASL/AGL/Speed/Machnumber/Roll angle/Pitch/actual flightpath Pitch/Angle of Attack/G-Forces. Right now its all embedded in a UNTIL loop because I use it to visualize flight parameters with the vectordraw function. You can just delete the Loop and the vectordrawing information and just go with the attitude sensoric stuff and use that as seperate program your for example autopilot executes to determine which way the plane is heading rolling or what other flight parameters are.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ESET counter TO 0.\u003Cbr\u003EUNTIL counter = 1500 {\u003Cbr\u003E    SET counter TO counter \u002B 1.\u003Cbr\u003E\u003Cbr\u003E    SET anArrow1 TO VECDRAW().\u003Cbr\u003E    SET anArrow1:VEC TO SHIP:FACING:FOREVECTOR.\u003Cbr\u003E    SET anArrow1:SHOW TO true.\u003Cbr\u003E    SET anArrow1:START TO V(0,0,0).\u003Cbr\u003E    SET anArrow1:COLOR TO RGB(1,0,0).\u003Cbr\u003E    SET anArrow1:SCALE TO 20.\u003Cbr\u003E\u003Cbr\u003E    SET anArrow2 TO VECDRAW().\u003Cbr\u003E    SET anArrow2:VEC TO SHIP:FACING:STARVECTOR.\u003Cbr\u003E    SET anArrow2:SHOW TO true.\u003Cbr\u003E    SET anArrow2:START TO V(0,0,0).\u003Cbr\u003E    SET anArrow2:COLOR TO RGB(0,1,0).\u003Cbr\u003E    SET anArrow2:SCALE TO 10.\u003Cbr\u003E\u003Cbr\u003E    SET anArrow3 TO VECDRAW().\u003Cbr\u003E    SET anArrow3:VEC TO SHIP:UP:VECTOR.\u003Cbr\u003E    SET anArrow3:SHOW TO true.\u003Cbr\u003E    SET anArrow3:START TO V(0,0,0).\u003Cbr\u003E    SET anArrow3:COLOR TO RGB(0,0,1).\u003Cbr\u003E    SET anArrow3:SCALE TO 10.\u003Cbr\u003E\u003Cbr\u003E    SET anArrow4 TO VECDRAW().\u003Cbr\u003E    SET anArrow4:VEC TO SHIP:FACING:TOPVECTOR.\u003Cbr\u003E    SET anArrow4:SHOW TO true.\u003Cbr\u003E    SET anArrow4:START TO V(0,0,0).\u003Cbr\u003E    SET anArrow4:COLOR TO RGB(1,1,1).\u003Cbr\u003E    SET anArrow4:SCALE TO 10.\u003Cbr\u003E\u003Cbr\u003E    SET anArrow5 TO VECDRAW().\u003Cbr\u003E    SET anArrow5:VEC TO SHIP:VELOCITY:SURFACE.\u003Cbr\u003E    SET anArrow5:SHOW TO true.\u003Cbr\u003E    SET anArrow5:START TO V(0,0,0).\u003Cbr\u003E    SET anArrow5:COLOR TO RGB(0,1,1).\u003Cbr\u003E    SET anArrow5:SCALE TO 0.1.\u003Cbr\u003E\u003Cbr\u003E    SET anArrow6 TO VECDRAW().\u003Cbr\u003E    SET anArrow6:VEC TO VCRS(-1*SHIP:FACING:FOREVECTOR,SHIP:UP:VECTOR).\u003Cbr\u003E    SET anArrow6:SHOW TO true.\u003Cbr\u003E    SET anArrow6:START TO V(0,0,0).\u003Cbr\u003E    SET anArrow6:COLOR TO RGB(1,1,0).\u003Cbr\u003E    SET anArrow6:SCALE TO 10.\u003Cbr\u003E\u003Cbr\u003E    // IMPORTANT PART, IF DO NOT NEED THE UNTIL LOOP OR VECTORDRAW DELETE EVERYTHING ABOVE\u003Cbr\u003E    SET c1 TO (90 - VANG(VCRS(SHIP:FACING:FOREVECTOR,SHIP:UP:VECTOR),SHIP:FACING:TOPVECTOR)).     // roll\u003Cbr\u003E    SET d1 TO VANG(SHIP:FACING:TOPVECTOR,SHIP:UP:VECTOR).                                         // angle between UP and TOP\u003Cbr\u003E    SET e1 TO VANG(SHIP:FACING:FOREVECTOR,SHIP:UP:VECTOR).                                         // pitch\u003Cbr\u003E    SET e2 TO VANG(SHIP:VELOCITY:SURFACE,SHIP:UP:VECTOR).                                         // flightpath pitch\u003Cbr\u003E    SET f1 TO VANG(SHIP:FACING:FOREVECTOR,SHIP:VELOCITY:SURFACE).                                 // angle of attack\u003Cbr\u003E    SET g1 TO (SHIP:SENSORS:ACC:MAG / SHIP:SENSORS:GRAV:MAG).                                    // GFORCE\u003Cbr\u003E\u003Cbr\u003E    IF VANG(SHIP:FACING:TOPVECTOR,SHIP:VELOCITY:SURFACE) \u0026lt; 90 {SET f1 TO -1*f1.}.\u003Cbr\u003E\u003Cbr\u003E    IF VANG(SHIP:FACING:FOREVECTOR,SHIP:UP:VECTOR) \u0026lt; 89 { // check nose up\u003Cbr\u003E        IF VANG(SHIP:FACING:FOREVECTOR,SHIP:UP:VECTOR) \u0026lt; 5 { // check pitch limit up\u003Cbr\u003E            SET c1 TO 0.\u003Cbr\u003E            SET d1 TO 0.\u003Cbr\u003E            // VERTICAL UP\u003Cbr\u003E        } ELSE {\u003Cbr\u003E            IF d1 \u0026lt; 90 {\u003Cbr\u003E                IF c1 \u0026lt;= 1 AND c1 \u0026gt;= -1 {\u003Cbr\u003E                    // NOSE UP LEVEL\u003Cbr\u003E                } ELSE {\u003Cbr\u003E                    IF c1 \u0026gt; 1 {\u003Cbr\u003E                        // left\u003Cbr\u003E                    }.\u003Cbr\u003E                    IF c1 \u0026lt; -1 {\u003Cbr\u003E                        // right\u003Cbr\u003E                    }.\u003Cbr\u003E                }.\u003Cbr\u003E            }.\u003Cbr\u003E            IF d1 \u0026gt; 90 {\u003Cbr\u003E                IF c1 \u0026lt;= 1 AND c1 \u0026gt;= -1 {\u003Cbr\u003E                    // NOSE UP UPSIDE DOWN\u003Cbr\u003E                } ELSE {\u003Cbr\u003E                    IF c1 \u0026gt; 1 {\u003Cbr\u003E                        SET c1 TO (180 - c1). // left\u003Cbr\u003E                    }.\u003Cbr\u003E                    IF c1 \u0026lt; -1 {\u003Cbr\u003E                        SET c1 TO -1*(180 \u002B c1). // right\u003Cbr\u003E                    }.\u003Cbr\u003E                }.\u003Cbr\u003E            }.\u003Cbr\u003E        }.\u003Cbr\u003E    } ELSE { // nose down\u003Cbr\u003E        IF VANG(SHIP:FACING:FOREVECTOR,SHIP:UP:VECTOR) \u0026gt; 91 { // check pitch limit down\u003Cbr\u003E            IF VANG(SHIP:FACING:FOREVECTOR,SHIP:UP:VECTOR) \u0026gt; 175 {\u003Cbr\u003E                SET c1 TO 0.\u003Cbr\u003E                SET d1 TO 0.\u003Cbr\u003E                // VERTICAL DOWN\u003Cbr\u003E            } ELSE {\u003Cbr\u003E                IF d1 \u0026lt; 90 {\u003Cbr\u003E                    IF c1 \u0026lt;= 1 AND c1 \u0026gt;= -1 {\u003Cbr\u003E                        // NOSE DOWN LEVEL\u003Cbr\u003E                    } ELSE {\u003Cbr\u003E                        IF c1 \u0026gt; 1 {\u003Cbr\u003E                            // left\u003Cbr\u003E                        }.\u003Cbr\u003E                        IF c1 \u0026lt; -1 {\u003Cbr\u003E                            // right\u003Cbr\u003E                        }.\u003Cbr\u003E                    }.\u003Cbr\u003E                }.\u003Cbr\u003E                IF d1 \u0026gt; 90 {\u003Cbr\u003E                    IF c1 \u0026lt;= 1 AND c1 \u0026gt;= -1 {\u003Cbr\u003E                        // NOSE DOWN UPSIDE DOWN\u003Cbr\u003E                    } ELSE {\u003Cbr\u003E                        IF c1 \u0026gt; 1 {\u003Cbr\u003E                            SET c1 TO (180 - c1). // left\u003Cbr\u003E                        }.\u003Cbr\u003E                        IF c1 \u0026lt; -1 {\u003Cbr\u003E                            SET c1 TO -1*(180 \u002B c1). // right\u003Cbr\u003E                        }.\u003Cbr\u003E                    }.\u003Cbr\u003E                }.\u003Cbr\u003E            }.\u003Cbr\u003E        } ELSE { // nose level\u003Cbr\u003E            IF d1 \u0026lt; 90 {\u003Cbr\u003E                IF c1 \u0026lt;= 1 AND c1 \u0026gt;= -1 {\u003Cbr\u003E                    // LEVEL\u003Cbr\u003E                } ELSE {\u003Cbr\u003E                    IF c1 \u0026gt; 1 {\u003Cbr\u003E                        // left\u003Cbr\u003E                    }.\u003Cbr\u003E                    IF c1 \u0026lt; -1 {\u003Cbr\u003E                        // right\u003Cbr\u003E                    }.\u003Cbr\u003E                }.\u003Cbr\u003E            }.\u003Cbr\u003E            IF d1 \u0026gt; 90 {\u003Cbr\u003E                IF c1 \u0026lt;= 1 AND c1 \u0026gt;= -1 {\u003Cbr\u003E                    // LEVEL UPSIDE DOWN\u003Cbr\u003E                } ELSE {\u003Cbr\u003E                    IF c1 \u0026gt; 1 {\u003Cbr\u003E                        SET c1 TO (180 - c1). // left\u003Cbr\u003E                    }.\u003Cbr\u003E                    IF c1 \u0026lt; -1 {\u003Cbr\u003E                        SET c1 TO -1*(180 \u002B c1). // right\u003Cbr\u003E                    }.\u003Cbr\u003E                }.\u003Cbr\u003E            }.\u003Cbr\u003E        }.\u003Cbr\u003E    }.\u003Cbr\u003E\u003Cbr\u003E    // YOU CAN DELETE ALL THIS IF YOU DO NOT USE THE UNTIL {} FUNCTION\u003Cbr\u003E    CLEARSCREEN.\u003Cbr\u003E    PRINT \u0022ASL     : \u0022 \u002B ROUND(SHIP:ALTITUDE). \u003Cbr\u003E    PRINT \u0022AGL     : \u0022 \u002B ROUND(ALT:RADAR).\u003Cbr\u003E    PRINT \u0022SPEED   : \u0022 \u002B ROUND(SHIP:VELOCITY:SURFACE:MAG*3.6).\u003Cbr\u003E    PRINT \u0022MACH    : \u0022 \u002B ROUND(SHIP:VELOCITY:SURFACE:MAG/343,2).\u003Cbr\u003E    PRINT \u0022ROLL    : \u0022 \u002B ROUND(c1,1).\u003Cbr\u003E    PRINT \u0022PITCH   : \u0022 \u002B ROUND(90 - e1,1).\u003Cbr\u003E    PRINT \u0022PITCH   : \u0022 \u002B ROUND(90 - e2,1).\u003Cbr\u003E    PRINT \u0022AOA     : \u0022 \u002B ROUND(f1,1).\u003Cbr\u003E    PRINT \u0022G-FORCE : \u0022 \u002B ROUND(g1,1).\u003Cbr\u003E    wait 0.01.\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is how it looks in action : \u003Ca href=\u0022http://imgur.com/a/vzY2F#0\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://imgur.com/a/vzY2F#0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Esidenote: how do I embed imgur galleries?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-12T03:04:55Z\u0022 title=\u002201/12/2015 03:04  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 12, 2015\u003C/time\u003E by VentZer0\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Kartoffelkuchen","CreatedById":108501,"CreatedDateTime":"2015-01-12T05:06:24Z","Content":"\n\u003Cp\u003EHi, I\u0027m working on a program for an automatic, engine powered landing for spend stages to recover them. Now, I ran into an issue:\u003C/p\u003E\u003Cp\u003EWhen the steering should be locked to the retrograde vector, the stage actually locks the steering to the Orbit-retrograde vector. And this is a big problem, because Kerbin rotates and because of Kerbin\u0027s rotation the orbit retrograde vector is always somewhere around the horizon, and the stage turns in that direction, fires up the engine, reduces the verticalspeed to about 2m/s (as planned) while the speed itself wents up to ~140m/s. \u003C/p\u003E\u003Cp\u003EI\u0027m pretty sure I didn\u0027t ran into that problem in previous versions.. :/ Does anyone know what to do, or how I can avoid using retrograde/prograde?\u003C/p\u003E\n"},{"CreatedByName":"Wercho","CreatedById":57663,"CreatedDateTime":"2015-01-12T07:21:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kartoffelkuchen\u0022 data-cite=\u0022Kartoffelkuchen\u0022\u003E\u003Cdiv\u003EAnd this is a big problem, because Kerbin rotates and because of Kerbin\u0027s rotation the orbit retrograde vector is always somewhere around the horizon, and the stage turns in that direction, fires up the engine, reduces the verticalspeed to about 2m/s (as planned) while the speed itself wents up to ~140m/s. \u003Cp\u003EI\u0027m pretty sure I didn\u0027t ran into that problem in previous versions.. :/ Does anyone know what to do, or how I can avoid using retrograde/prograde?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUse \u0022SHIP:SRFRETROGRADE\u0022 to get the surface retrograde direction, as documented \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/orbits/orbitable.html\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E.\u003C/p\u003E\n"},{"CreatedByName":"Vegemeister","CreatedById":135079,"CreatedDateTime":"2015-01-12T15:58:49Z","Content":"\n\u003Cp\u003EI haven\u0027t used any previous versions of kOS, and I\u0027m pretty new to KSP, but I have a few bugs to report:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EThe zip file on github for the 0.15.5 release may not be correct. \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/blob/v0.15.5/Resources/GameData/kOS/kOS.version\u0022 rel=\u0022external nofollow\u0022\u003EThe version file in the git tag\u003C/a\u003E for that release 0.15.5, but \u003Ca href=\u0022http://pastebin.com/yyPn5smt\u0022 rel=\u0022external nofollow\u0022\u003Ethe file that comes in the zip\u003C/a\u003E says 0.15.4. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAccessing list elements seems to be broken. \u003Ca href=\u0022http://pastebin.com/muqL2j2R\u0022 rel=\u0022external nofollow\u0022\u003EThis test case\u003C/a\u003E gives error \u0022Can\u0027t iterate on an object of type kOS.Safe.Encapsulation.ListValue\u0022. From \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/list.html\u0022 rel=\u0022external nofollow\u0022\u003Ethe documentation\u003C/a\u003E, I\u0027m pretty sure that test should work. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EI\u0027m not sure it\u0027s a \u0022bug\u0022, exactly, but in the \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/tutorials/designpatterns.html\u0022 rel=\u0022external nofollow\u0022\u003Edesign patterns\u003C/a\u003E and \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/tutorials/pidloops.html\u0022 rel=\u0022external nofollow\u0022\u003EPID loops\u003C/a\u003E sections of the documentation, there seems to be one more integration than intended, because of the \u0022set thrott to thrott \u002B dthrott.\u0022, and dthrott being the actual output of the control loop. So the \u0022proportional\u0022 controller is actually an integral controller, the \u0022PI\u0022 controller is actually an II\u00C3\u201A\u00C2\u00B2 controller, and the PID controller is actually a PII\u00C3\u201A\u00C2\u00B2 controller. \u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-12T18:22:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Vegemeister\u0022 data-cite=\u0022Vegemeister\u0022\u003E\u003Cdiv\u003EI haven\u0027t used any previous versions of kOS, and I\u0027m pretty new to KSP, but I have a few bugs to report: \u003Cp\u003E[...]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EAccessing list elements seems to be broken. \u003Ca href=\u0022http://pastebin.com/muqL2j2R\u0022 rel=\u0022external nofollow\u0022\u003EThis test case\u003C/a\u003E gives error \u0022Can\u0027t iterate on an object of type kOS.Safe.Encapsulation.ListValue\u0022. From \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/list.html\u0022 rel=\u0022external nofollow\u0022\u003Ethe documentation\u003C/a\u003E, I\u0027m pretty sure that test should work. \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan you quote the exact code you are using?\u003C/p\u003E\n"},{"CreatedByName":"Ziw","CreatedById":135292,"CreatedDateTime":"2015-01-12T18:29:14Z","Content":"\n\u003Cp\u003EHi everybody.\u003C/p\u003E\u003Cp\u003EI have a question on KOS interaction with RemoteTech as I started a new playthrough with a lot of new mods. \u003C/p\u003E\u003Cp\u003EI wrote a program that automates launch of a probe to an LKO (80km) and then creates and executes 2 nodes at next peri and then apo to bring an orbit to desired altitude. It worked perfectly without RemoteTech installed, but now, when I need the KOS autopiloting features the most it refuses to work (at least as I expected it to).\u003C/p\u003E\u003Cp\u003EThe launch script works nicely because there is still connection to KSP and I get the probe to LKO, but problem is that as soon as I loose connection to KSP I cannot execute any nodes that are in the darkside due to being unable to steer in the right direction via lock sttering to xxx.\u003C/p\u003E\u003Cp\u003EBasically this code from my exenode.ks script just hangs until I get the connection to KSC back, because the ship is unable to steer.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E...\u003Cbr\u003Eset np to nextnode:deltav:direction.\u003Cbr\u003Elock steering to np.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait until abs(np:pitch - facing:pitch) \u0026lt; 0.15 and abs(np:yaw - facing:yaw) \u0026lt; 0.15.\u003Cbr\u003E...\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003Cp\u003EAm I missing something? Is this behavior normal?\u003C/p\u003E\u003Cp\u003EEDIT: Seems like known thing, need to modify KOS config, should have googled better before posting.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-12T18:36:37Z\u0022 title=\u002201/12/2015 06:36  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 12, 2015\u003C/time\u003E by Ziw\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Vegemeister","CreatedById":135079,"CreatedDateTime":"2015-01-12T20:19:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003ECan you quote the exact code you are using?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe linked pastebin is the exact code. I haven\u0027t used lists for anything yet, but I was thinking about upgrading my ascent program\u0027s staging logic to look for empty boosters and empty tanks connected to fuel lines instead of just looking at MAXTHRUST, so that it can handle asparagus staging and vessels that mix liquid and solid motors (for partial throttle control and/or thrust vectoring). I was trying to poke at the result of \u0022list engines in foo.\u0022 in the terminal when I ran into that error.\u003C/p\u003E\u003Cp\u003EThe zip file from Curse says it\u0027s 0.15.5 in kOS.version, so I\u0027ll try that one. If that doesn\u0027t fix it, I can try to figure out how to build kOS. I don\u0027t see a Makefile or any artifacts of cmake or GNU autotools, so the build system is unfamiliar. It could get a bit hairy.\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2015-01-12T22:20:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Vegemeister\u0022 data-cite=\u0022Vegemeister\u0022\u003E\u003Cdiv\u003EThe linked pastebin is the exact code. I haven\u0027t used lists for anything yet, but I was thinking about upgrading my ascent program\u0027s staging logic to look for empty boosters and empty tanks connected to fuel lines instead of just looking at MAXTHRUST, so that it can handle asparagus staging and vessels that mix liquid and solid motors (for partial throttle control and/or thrust vectoring). I was trying to poke at the result of \u0022list engines in foo.\u0022 in the terminal when I ran into that error.\u003Cp\u003EThe zip file from Curse says it\u0027s 0.15.5 in kOS.version, so I\u0027ll try that one. If that doesn\u0027t fix it, I can try to figure out how to build kOS. I don\u0027t see a Makefile or any artifacts of cmake or GNU autotools, so the build system is unfamiliar. It could get a bit hairy.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll double check the list code when making a new list, but I know that the current version is able to iterate over a list without throwing an error (the first thing my boot script does is look for kOS processors and toggle their display).\u003C/p\u003E\u003Cp\u003EAs for the build environment, I think that the primary devs just use Visual Studio on windows to build the files. I think that mono will compile the solution as well.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-12T23:00:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hvacengi\u0022 data-cite=\u0022hvacengi\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAs for the build environment, I think that the primary devs just use Visual Studio on windows to build the files. I think that mono will compile the solution as well.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI used SharpDevelop on Windows, and I think others have had success with Monodevelop on unix.\u003C/p\u003E\u003Cp\u003EC# is like Java in that it tries to avoid the need for a makefile by tracking dependencies for you. Unlike java though it doesn\u0027t do the simple thing of just enforcing that you have to use the same name for the files as for the classes or the same name for the directories as for the namespaces, which means it has to keep track of that mapping in a separate XML file. That XML file holds the dependencies info.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-13T00:10:45Z\u0022 title=\u002201/13/2015 12:10  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 13, 2015\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MasseFlieger","CreatedById":74250,"CreatedDateTime":"2015-01-13T02:45:18Z","Content":"\n\u003Cp\u003EHello, \u003C/p\u003E\u003Cp\u003EAnyone know if there is a way to call a KOS script or method from another part? I\u0027m thinking of creating a prop that could run a set script or command at its activation, think a switch of some sort would set throttle to 10% or similar behavior like that.\u003C/p\u003E\u003Cp\u003EAppreciate any help or input.\u003C/p\u003E\n"},{"CreatedByName":"Robotengineer","CreatedById":104525,"CreatedDateTime":"2015-01-13T03:09:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003ESadly, no it isn\u0027t. The :PITCH suffix doesn\u0027t really mean \u0022pitch\u0022. It\u0027s a badly named suffix dating back to the original mod author that we\u0027re now sort of stuck with for backward compatibility. What it *actually* does is rotate around the X axis of the universe, wherever that X axis happens to currently be pointed.\u003Cp\u003ETo get what you want I recommend this: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E   lock proPitchOrb to 90 - VANG(SHIP:VELOCITY:ORBIT,SHIP:UP:VECTOR).\u003Cbr\u003E   lock proPitchSrf to 90 - VANG(SHIP:VELOCITY:SURFACE,SHIP:UP:VECTOR).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003EI don\u0027t know your purpose, so it\u0027s up to you which kind of prograde you want - the orbital or the surface.\u003C/p\u003E\u003Cp\u003EBoth of them work by using the up vector as the normal to the horizon, and comparing the angle between that and your movement vector.\u003C/p\u003E\u003Cp\u003EIn general, that\u0027s the solution to the problem \u0022what is the angle between vector V and plane P\u0022 - it\u0027s (90 - (angle between V and P\u0027s normal)).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, I will try this out. It\u0027s for an RSS rocket launch-orbit autopilot.\u003C/p\u003E\n"},{"CreatedByName":"VentZer0","CreatedById":130750,"CreatedDateTime":"2015-01-13T06:04:35Z","Content":"\n\u003Cp\u003EWhats the deal with SHIP:HEADING ? I not get any degrees instead I get numbers in the area of X*10^-6 or smaller. SHIP:BEARING gives me degrees however.\u003C/p\u003E\n"},{"CreatedByName":"Vegemeister","CreatedById":135079,"CreatedDateTime":"2015-01-13T10:42:34Z","Content":"\n\u003Cp\u003EUsing the zip from Curse fixed the list access problem, so it looks like the one on Github is an older prerelease version. Heh, kind of reminds me of that incident with Ariane 5.\u003C/p\u003E\u003Cp\u003EIn any case, thanks everyone who gave advice on building C#.\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2015-01-13T13:07:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VentZer0\u0022 data-cite=\u0022VentZer0\u0022\u003E\u003Cdiv\u003EWhats the deal with SHIP:HEADING ? I not get any degrees instead I get numbers in the area of X*10^-6 or smaller. SHIP:BEARING gives me degrees however.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe heading suffix gives the direction from the cpu vessel to the selected vessel. So if you target another vessel and then use target:heading it will give you the absolute direction to that vessel: \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/vessels/vessel.html#VESSEL:HEADING\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/vessels/vessel.html#VESSEL:HEADING\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2015-01-13T14:01:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EThe code in \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68089-0-90-kOS-Scriptable-Autopilot-System-v0-15-5-2015-1-3?p=1631515\u0026amp;viewfull=1#post1631515\u0022 rel=\u0022external nofollow\u0022\u003Ethis post\u003C/a\u003E might be useful. You will need to change the module to the appropriate Infernal Robotics one (DTMagnetometer to MuMechToggle) and change the \u003Cem\u003E|b|\u003C/em\u003E to whatever field you want to get from the right click menu. Do not forget to name your part and to apply the name to the code.\u003Cp\u003EShould be easy breezy \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBefore I start the painful and slow process of learning this language, I\u0027ve discovered it won\u0027t work. The parts I use are free runners (like the docking washer free), and IR\u0027s library doesn\u0027t give a readout on the rotation values. Too bad. \u003C/p\u003E\u003Cp\u003EHopefully one day there will be a solution so I can give my engine(s) a proper ignition system. Until then, I\u0027m going to shelve the project again.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/RLuHFSExlcA?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EThanks anyway!\u003C/p\u003E\u003Cp\u003EEdit: Okay I was a bit quick because of disappointment. \u003C/p\u003E\u003Cp\u003EThere is a different approach, it seems it\u0027s possible to read the rotational value of any part, compared with KSP\u0027s coordinates system. If kOS can read the angle of two parts and compares them, I\u0027d have the amount of degrees I need. \u003C/p\u003E\u003Cp\u003EActually the structure would be very simple: imagine a single cylinder two stroke engine. The crankshaft starts turning at 180 degrees, piston is at bottom dead center. Once it has turned exactly 185 degrees, then the piston is 5 degrees past top dead center. At that moment the program starts action group 1, which fires a jet, pushing the piston down. when the piston is 5 degrees in front of bottom dead center, the program stops action group 1. Repeat from start.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/wikipedia/commons/3/33/Two-Stroke_Engine.gif\u0022 alt=\u0022Two-Stroke_Engine.gif\u0022\u003E\u003C/p\u003E\u003Cp\u003EIf someone could help me, that would be very much appreciated. My brain works primarily with images, movies and sound. I was good at physics as long as I could visualize the stuff. \u003C/p\u003E\u003Cp\u003EBut ...\u003C/p\u003E\u003Cp\u003EI\u0027ve always been a disaster at mathematics and programming because I just can\u0027t visualize these things. I once tried learning a simple language and I found it easier to learn Klingon.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-13T16:52:58Z\u0022 title=\u002201/13/2015 04:52  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 13, 2015\u003C/time\u003E by Azimech\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-13T16:50:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Azimech\u0022 data-cite=\u0022Azimech\u0022\u003E\u003Cdiv\u003EBefore I start the painful and slow process of learning this language, I\u0027ve discovered it won\u0027t work. The parts I use are free runners (like the docking washer free), and IR\u0027s library doesn\u0027t give a readout on the rotation values. Too bad. \u003Cp\u003EHopefully one day there will be a solution so I can give my engine(s) a proper ignition system. Until then, I\u0027m going to shelve the project again.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://youtu.be/RLuHFSExlcA\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://youtu.be/RLuHFSExlcA\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThanks anyway!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EkOS does allow you to read the position and orientation of a whole part. While you can\u0027t read the sub-positions and sub-orientations of parts within parts (the sliding piece within an IR part), you can read the positions of whole parts. So whatever whole part is attached to your rotating IR part might be queryable for its PART:FACING, to get an idea. I can\u0027t tell from the video exactly how your parts are attached so I don\u0027t know for sure if this would work.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Vegemeister\u0022 data-cite=\u0022Vegemeister\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe zip file on github for the 0.15.5 release may not be correct. \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/blob/v0.15.5/Resources/GameData/kOS/kOS.version\u0022 rel=\u0022external nofollow\u0022\u003EThe version file in the git tag\u003C/a\u003E for that release 0.15.5, but \u003Ca href=\u0022http://pastebin.com/yyPn5smt\u0022 rel=\u0022external nofollow\u0022\u003Ethe file that comes in the zip\u003C/a\u003E says 0.15.4. \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve just verified this is true, and passed it on to erendrake. A fix is coming soon.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-13T17:00:46Z\u0022 title=\u002201/13/2015 05:00  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 13, 2015\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2015-01-13T17:32:06Z","Content":"\n\u003Cp\u003E\u0022PART:FACING\u0022 sounds like a good idea. Here\u0027s an example setup:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/JqN7Z6M.png\u0022 alt=\u0022JqN7Z6M.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/gla3CGI.png\u0022 alt=\u0022gla3CGI.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThis would be complicated enough. For the far future I have lots of ideas but I\u0027m happy when I don\u0027t have to tap my keyboard like with this one:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/y4DhKEznOyI?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-13T17:56:38Z","Content":"\n\u003Cp\u003EIn your example I imagine you should be able to get the vector cross product of the facing:vector of the crankshaft and the facing:vector of one of the piston housings to work out the crankshaft position.\u003C/p\u003E\u003Cp\u003ESomething a bit like this might work:\u003C/p\u003E\u003Cp\u003EAssume PIST is the Part of one of the pistons, and it\u0027s oriented such that its STARBOARD facing is out the side of the engine (you may have to change STARVECTOR for TOPVECTOR in my example below if it\u0027s not):\u003C/p\u003E\u003Cp\u003EAssume CRANK is the Part of the crankshaft, and that its TOP vector is pointing radially outward while its FORE direction is along the shaft axis.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ELOCK cosValue to VDOT(PIST:FACING:FOREVECTOR,CRANK:FACING:TOPVECTOR).\u003Cbr\u003ELOCK sinValue to VDOT(PIST:FACING:STARVECTOR,CRANK:FACING:TOPVECTOR).\u003Cbr\u003ELOCK crankAngle to ATAN2( sinValue, cosValue ).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EYou may have to try it with different variations of FOREVECTOR, STARVECTOR, and TOPVECTOR depending on how the orientation of your parts is defined. I\u0027m just guessing from the image one way they *might* have been defined. Basically, FORE is the Z axis of the part\u0027s local transform, STAR is it\u0027s X axis and TOP is its Y axis.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-13T18:44:04Z\u0022 title=\u002201/13/2015 06:44  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 13, 2015\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003Cbr\u003EI had the arguments to ATAN2 swapped\n\u003C/span\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2015-01-13T18:17:49Z","Content":"\n\u003Cp\u003EHow do I convert these values into degrees? And what is this ATAN2?\u003C/p\u003E\u003Cp\u003EMoreover, how do I tell kOS to act on that value. If I want to build an engine with multiple cylinders, I need to program in a lot of angles. \u003C/p\u003E\u003Cp\u003ESomething else ... I\u0027ve been busy for an hour and a half, trying to find kerboscript for enabling and disabling an action group. Can\u0027t find it. It\u0027s not in the new manual and can\u0027t find it using google. Is it even possible?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-13T18:20:08Z\u0022 title=\u002201/13/2015 06:20  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 13, 2015\u003C/time\u003E by Azimech\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-13T18:35:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Azimech\u0022 data-cite=\u0022Azimech\u0022\u003E\u003Cdiv\u003EHow do I convert these values into degrees? And what is this ATAN2?\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe problem with normal arctan is that when you divide Y by X to get the tangent, you lose some of the sign information. The fraction (-1/-1) and the fraction (1/1) both result in 1. The fraction (-1/1) and (1/-1) both result in -1. So you can\u0027t quite narrow down which quadrant of the 360 degree circle you\u0027re in. A tangent of 1.0 MIGHT be 45 degrees or it might be in the opposite quadrant, at 225 degrees.\u003C/p\u003E\u003Cp\u003EAtan2 (a second variant of arctan) is a thing computer math libraries added to allow you to get the full quadrant information by having you pass in both the numerator and denominator components of the tangent separately so it knows what the sign of each are. (ATAN2 *can* tell the difference between 45 degrees and 225 degrees because it knows if that 1.0 value was the result of dividing two positive numbers or two negative numbers).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EMoreover, how do I tell kOS to act on that value. If I want to build an engine with multiple cylinders, I need to program in a lot of angles. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo idea. That\u0027s too open-ended of a question, with multiple possible approaches.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESomething else ... I\u0027ve been busy for an hour and a half, trying to find kerboscript for enabling and disabling an action group. Can\u0027t find it. It\u0027s not in the new manual and can\u0027t find it using google. Is it even possible?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E AG1 on.  AG1 off.  AG2 on. AG2 off. // etc...\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-13T19:22:17Z","Content":"\n\u003Cp\u003EYou can also use \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Etoggle ag1.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2015-01-13T19:26:06Z","Content":"\n\u003Cp\u003EWell ... I\u0027d like to start with displaying crankangle value on the screen. I\u0027ll rotate the crankshaft to the right angle, read the crankangle value and then it\u0027s a simple act of\u003C/p\u003E\u003Cp\u003EWHEN crankangle=185 THEN\u003C/p\u003E\u003Cp\u003EAG1 on.\u003C/p\u003E\u003Cp\u003EWHEN crankangle= 355 THEN\u003C/p\u003E\u003Cp\u003EAG1 off.\u003C/p\u003E\u003Cp\u003Eor when having multiple cylinders, values like 45/215, 90/260, 120/290 etc.\u003C/p\u003E\u003Cp\u003EI tried this code but I don\u0027t understand the basics. At all.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/KRaiSVc.png\u0022 alt=\u0022KRaiSVc.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dr_Goddard","CreatedById":100796,"CreatedDateTime":"2015-01-13T20:21:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Azimech\u0022 data-cite=\u0022Azimech\u0022\u003E\u003Cdiv\u003EWell ... I\u0027d like to start with displaying crankangle value on the screen. I\u0027ll rotate the crankshaft to the right angle, read the crankangle value and then it\u0027s a simple act of\u003Cp\u003EWHEN crankangle=185 THEN\u003C/p\u003E\u003Cp\u003EAG1 on.\u003C/p\u003E\u003Cp\u003EWHEN crankangle= 355 THEN\u003C/p\u003E\u003Cp\u003EAG1 off.\u003C/p\u003E\u003Cp\u003Eor when having multiple cylinders, values like 45/215, 90/260, 120/290 etc.\u003C/p\u003E\u003Cp\u003EI tried this code but I don\u0027t understand the basics. At all.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/KRaiSVc.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/KRaiSVc.png\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EToo complicated. Why don\u0027t you use the laser distance mod to check for a nub on your flywheel? Far simpler, and true to the way ignition really works.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EI have a new problem. \u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EBoot files.\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EFirst of all, the new documentation makes no mention of boot files at all.\u003C/p\u003E\u003Cp\u003EWhen trying to implement three cores, I cannot select the boot file in the VAB. The slider appears, and it counts the correct number of files beginning with \u0022boot\u0022 (boot1.ks, boot2.ks, boot3.ks\u003C/p\u003E\u003Cp\u003Eor alternately booted.ks, bootgrn.ks, bootblu.ks) \u003C/p\u003E\u003Cp\u003EOnly one shows up. So I get three slider options, but they are all for the same file name.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-13T20:21:37Z\u0022 title=\u002201/13/2015 08:21  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 13, 2015\u003C/time\u003E by Dr_Goddard\u003C/strong\u003E\n\u003Cbr\u003Ei\u0026#039;m a dope\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-13T20:26:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dr_Goddard\u0022 data-cite=\u0022Dr_Goddard\u0022\u003E\u003Cdiv\u003EOnly one shows up. So I get three slider options, but they are all for the same file name.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo all three options actually run the same script?\u003C/p\u003E\n"}]}