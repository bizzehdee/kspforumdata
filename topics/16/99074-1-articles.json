{"TopicId":99074,"ForumId":16,"TopicTitle":"What does \u0026quot;Procedural Terrain\u0026quot; do to the M\u00C3\u0192\u00C2\u00BCn?","CreatedByName":"DMSP","CreatedById":124853,"CreatedDateTime":"2015-02-08T10:40:32Z","PageNum":1,"Articles":[{"CreatedByName":"DMSP","CreatedById":124853,"CreatedDateTime":"2015-02-08T10:40:32Z","Content":"\n\u003Cp\u003EI feel dumb for asking this, but what does it do?\u003C/p\u003E\u003Cp\u003EDoes it mean crafters appear or the terrain changes?\u003C/p\u003E\u003Cp\u003EThanks,\u003C/p\u003E\u003Cp\u003EDMSP\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-08T11:40:35Z\u0022 title=\u002202/08/2015 11:40  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 8, 2015\u003C/time\u003E by DMSP\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pecan","CreatedById":96332,"CreatedDateTime":"2015-02-08T11:05:15Z","Content":"\n\u003Cp\u003E\u0022Procedural\u0022 in game terms means making up as you go along instead of being fixed, yes :-0\u003C/p\u003E\u003Cp\u003EWithout it KSP would have store height-data for every square meter of Kerbin, the moons and other planets, for instance.\u003C/p\u003E\u003Cp\u003EWith it the major features and heights are defined and stored but then the programme \u0027fills in\u0027 the rest when it needs it.\u003C/p\u003E\u003Cp\u003EFor Mun, major craters won\u0027t come or go but how whether a particular spot is flat or not will do. Actual height should be within a fairly tight margin, depending on how broken the terrain is anyway at that point.\u003C/p\u003E\n"},{"CreatedByName":"DMSP","CreatedById":124853,"CreatedDateTime":"2015-02-08T11:20:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pecan\u0022 data-cite=\u0022Pecan\u0022\u003E\u003Cdiv\u003E\u0022Procedural\u0022 in game terms means making up as you go along instead of being fixed, yes :-0\u003Cp\u003EWithout it KSP would have store height-data for every square meter of Kerbin, the moons and other planets, for instance.\u003C/p\u003E\u003Cp\u003EWith it the major features and heights are defined and stored but then the programme \u0027fills in\u0027 the rest when it needs it.\u003C/p\u003E\u003Cp\u003EFor Mun, major craters won\u0027t come or go but how whether a particular spot is flat or not will do. Actual height should be within a fairly tight margin, depending on how broken the terrain is anyway at that point.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks!\u003C/p\u003E\u003Cp\u003EBut also, what does that mean for my bases?\u003C/p\u003E\u003Cp\u003EWhat happens if a Crater generates under them when I am not at the base?\u003C/p\u003E\u003Cp\u003ECan that happen?\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-08T11:34:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMSP\u0022 data-cite=\u0022DMSP\u0022\u003E\u003Cdiv\u003EWhat happens if a Crater generates under them when I am not at the base?\u003Cp\u003ECan that happen?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo. Procedural is not the same as random. It probably includes some sort of pseudo-random number generation but the seed is always the same, so the terrain under your base will not change.\u003C/p\u003E\n"},{"CreatedByName":"DMSP","CreatedById":124853,"CreatedDateTime":"2015-02-08T11:40:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003ENo. Procedural is not the same as random. It probably includes some sort of pseudo-random number generation but the seed is always the same, so the terrain under your base will not change.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFew.\u003C/p\u003E\u003Cp\u003EThanks for clearing that up!\u003C/p\u003E\n"},{"CreatedByName":"Tank Buddy","CreatedById":69635,"CreatedDateTime":"2015-02-08T16:54:33Z","Content":"\n\u003Cp\u003EBased off of what Pecan said: \u003C/p\u003E\u003Cp\u003EIf you have ever played Minecraft, you may be aware of world \u0022seeds\u0022. If you make a world based on a seed, it will be nearly identical to another created with the same seed. I\u0027m no expert on this kind of stuff, but that\u0027s how I\u0027d think of it.\u003C/p\u003E\n"},{"CreatedByName":"DMSP","CreatedById":124853,"CreatedDateTime":"2015-02-08T17:04:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tank Buddy\u0022 data-cite=\u0022Tank Buddy\u0022\u003E\u003Cdiv\u003EBased off of what Pecan said: \u003Cp\u003EIf you have ever played Minecraft, you may be aware of world \u0022seeds\u0022. If you make a world based on a seed, it will be nearly identical to another created with the same seed. I\u0027m no expert on this kind of stuff, but that\u0027s how I\u0027d think of it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, I play Minecraft, so now it makes sense. Thanks all!\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-02-08T22:21:30Z","Content":"\n\u003Cp\u003ENot everything is procedural. Mostly just the minor craters. The biomes and the larger craters are fixed. Procedural craters are only created when you start the game, unlike Minecraft which is technically generated as you expand the explored areas, even if it is based of a fixed seed. So, there is no chance of a crater forming below your base.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-02-08T22:48:04Z","Content":"\n\u003Cp\u003EWatch the\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/mXTxQko-JH0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E to see Mu talk about the terrain.\u003Cp\u003EProcedural means \u0022the mesh is not created outside the game and then loaded, it\u0027s created by the game.\u0022 It says \u003Cem\u003Enothing\u003C/em\u003E about whether that mesh is randomly generated, or (as is the case with KSP) pseudo-randomly generated from a fixed seed. In particular, while much of the planetary (moonetary?) terrain is created based of noise functions and fractals, that doesn\u0027t mean it\u0027s \u003Cem\u003Erandom\u003C/em\u003E or that it will ever \u003Cem\u003Echange\u003C/em\u003E. If your function is (add three, output, multiply by four, output, divide by seven, output) and you give it the same input (seed) it will always give you the same outputs. The only way terrain will appear to change is if you change your terrain detail settings in the game graphics options, and that\u0027s not because the height the terrain \u003Cem\u003Eshould\u003C/em\u003E be changes, but because with a lower (or higher) resolution mesh created, the appearance may change.\u003C/p\u003E\u003Cp\u003EQuick example: Think of the planet in 2D. It\u0027s a circle. However, you have to make it into a polygon for the game to render it. At low terrain detail, it\u0027s an octagon; at high detail, it\u0027s a 12-gon. That means that for any given point on the (2D) surface, what was once angled at low detail may be flat at high detail--but that\u0027s not because the underlying terrain (the circle) changed, just the resolution at which it is represented and thus the final product you see.\u003C/p\u003E\u003Cp\u003EThe old \u0022changing ocean detail in the settings.cfg file\u0022 trick, to speed up performance--you know how that changes apparent sea level? Sea level doesn\u0027t change, but the number of polygons used to, which means /\\ becomes _ near you, and so the area near you is flatter (and thus lower).\u003C/p\u003E\u003Cp\u003EEDIT: to follow up, if you are at PQS level, \u003Cem\u003Eeverything\u003C/em\u003E is procedural. Just because the mesh is created procedurally from a static heightmap as well as some seeded noise functions doesn\u0027t mean it\u0027s any less procedural. Only when you get high enough and KSP switches to \u0027scaled space\u0027 view of the body do you instead get a static mesh with a static texture.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-08T22:54:07Z\u0022 title=\u002202/08/2015 10:54  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 8, 2015\u003C/time\u003E by NathanKell\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"jedensuscg","CreatedById":76475,"CreatedDateTime":"2015-02-09T10:11:58Z","Content":"\n\u003Cp\u003EAs Nathan said, it is doubtful that there is any randomization to the terrain generation, so your base is most likely safe.\u003C/p\u003E\u003Cp\u003EIn simplest terms, procedural generation is creating something from a mathematical equation when needed, as opposed to creating a space consuming mesh in advanced, but it does not have to ever be random. I think some people confuse procedural generation with randomness. \u003C/p\u003E\u003Cp\u003EProcedural generation can be either static random (Or a combination). In static, you are using the same equation every time, and get an identical output every time, this can be done to save space when you have lots of stuff that \u0022could\u0022 be seen, but not at any particular time. Instead of of storing gigs worth of meshes, you just store textures and equations and create the content as it\u0027s needed. Static tends to lean towards games that could potentially have hundreds of gigs worth of traditional meshes or tons of data pointing to where everything needs to go in advance.\u003C/p\u003E\u003Cp\u003E In random you have random variables that can change the output each time the equation is ran. This allows for a new experience each time it\u0027s ran.\u003C/p\u003E\u003Cp\u003EI feel that most instances of procedural generation is a hybrid, and is probably what KSP uses. a combination approach leans towards small teams, in that it alleviates workload. They can use a random generated system with some predetermined variables to control specific outputs (we want this planet to be HUGE, but don\u0027t care about how it looks aside from that). They run the equation as many times as they want, and get several options to use. They can now pick the one they like best without having to hand model each one. That equation is now the static seed for that game for that planet. All they had to do was create the textures and define how those textures are applied procedurally and let the equation do the rest.\u003C/p\u003E\u003Cp\u003ENo Mans Sky a good example of a hybrid gsystem. (some speculation here as well as info from dev videos) When a planet is found and generated it\u0027s procedurally generated. Even the developers don\u0027t always know a lot of what was going to happen. However, since there is a multiplayer element to the game, and they could not have the same world look different for each person, the equations used to create each world are saved. So when a new player rediscovers an already discovered planet, it is loaded based off the saved equation, and should come out looking identical. This hybrid systems lets you have true randomization for discovery, but keep things constant between players: No one knows what that next discovered planet will look like until it\u0027s discovered. Any small changes past that point (animals moving, dying, etc, perhaps seasonal changes) are determined by another set of equations that are identical to each person visiting it. Essentially, the equations being stored on the servers changes in response to procedural generation, but it\u0027s static in that everyone who accesses it gets the same equation, and same output. All this without having to store the vast amounts of data needed on a server. Sure it taxes the computer/server CPU a bit more at generation time, but loading a single planet is easy in comparison to storing a whole universe.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-09T10:18:06Z\u0022 title=\u002202/09/2015 10:18  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 9, 2015\u003C/time\u003E by jedensuscg\u003C/strong\u003E\n\u003C/span\u003E\n"}]}