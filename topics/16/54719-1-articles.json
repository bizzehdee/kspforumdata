{"TopicId":54719,"ForumId":16,"TopicTitle":"How to simulate an atmospheric straight-up ascent?","CreatedByName":"AlexisBV","CreatedById":81911,"CreatedDateTime":"2013-11-29T21:13:12Z","PageNum":1,"Articles":[{"CreatedByName":"AlexisBV","CreatedById":81911,"CreatedDateTime":"2013-11-29T21:13:12Z","Content":"\n\u003Cp\u003EHello all,\u003C/p\u003E\u003Cp\u003EI am trying to make a performance simulation spreadsheet for a very simple straight-up atmospheric launch, but for now I\u0027m unable to match what I get in KSP, as my results are pessimistic by almost 4% for a sample case. I know 4% doesn\u0027t seem like much, but considering this should be a simple case, it doesn\u0027t given me much confidence to push into more complex stuff in its current state.\u003C/p\u003E\u003Cp\u003EI\u0027ve gone through it several times and even recoded it in Matlab, only to end up with the same results as the spreadsheet, which as I mentioned are different from flight test results. Can you help me find why?\u003C/p\u003E\u003Cp\u003EBasically, the test case is a Mk1 pod, FL-T400 tank and a LV-N engine, plus 4 sensors (temp, baro, gravity, acceleration), for a total initial mass of 5320kg. The scenario is a straight-up launch from the KSC, starting at 77m altitude as indicated in game for this ship.\u003C/p\u003E\u003Cp\u003EWe then proceed with a full-throttle launch, with SAS on, pointing up (no lateral movement). In flight, we run out of fuel at about 16530m, then coast up to a max altitude of 20553m. No parachutes after that, sorry Jeb.\u003C/p\u003E\u003Cp\u003EBut from my spreadsheet, we should run out of fuel at about 15930m, and coast up to 19822m only.\u003C/p\u003E\u003Cp\u003ENow I\u0027d understand if my results were better than in KSP, as SAS isn\u0027t perfect and can induce some steering losses. But it\u0027s the other way around here\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 so I seem to be overestimating the losses in the spreadsheet, but I don\u0027t really see how.\u003C/p\u003E\u003Cp\u003ENote I\u0027m using an iteration step of 0.1 seconds, though it doesn\u0027t seem to make a huge difference - increasing the time resolution gives better results, but even at 1000Hz (0.001s time step), the apoapsis is only 19870m, still 682m short of KSP.\u003C/p\u003E\u003Cp\u003EAnyway, here\u0027s the matlab code, let me know if you can find what\u0027s missing\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003C/p\u003E\u003Cp\u003EThanks!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eformat long g\u003Cbr\u003E\u003Cbr\u003E% --- Section 1 - Initializations ---\u003Cbr\u003E%\u003Cbr\u003E% In this section, environmental conditions and rocket parameters are set.\u003Cbr\u003E%\u003Cbr\u003E\u003Cbr\u003E%Simulation time\u003Cbr\u003Eendtime=500;\u003Cbr\u003Edt=0.1; %time step [s]\u003Cbr\u003E\u003Cbr\u003E%Ship mass [kg]\u003Cbr\u003EMass_Payload=820;  %Command Pod Mk1\u002B4 sensors\u003Cbr\u003EMass_FuelTankDry=250; %FL-T400\u003Cbr\u003EMass_FuelTankFull=2250; %FL-T400\u003Cbr\u003EMass_Engine=2250; %LV-N Atomic\u003Cbr\u003EFuelOnBoard=Mass_FuelTankFull-Mass_FuelTankDry;\u003Cbr\u003E\u003Cbr\u003E%Thrust parameters\u003Cbr\u003E%LV-N Atomic\u003Cbr\u003EEngineMaxFg=60000; %[N]\u003Cbr\u003EEngineIspAtm=220;\u003Cbr\u003EEngineIspVac=800;\u003Cbr\u003EThrottle=1; %1 = 100%\u003Cbr\u003E\u003Cbr\u003E%Environment\u003Cbr\u003Erho0=1.2230948554874;\u003Cbr\u003ECd=0.2;\u003Cbr\u003EatmosScale=5000;\u003Cbr\u003Eg0=9.81;\u003Cbr\u003EG=0.0000000000667384;\u003Cbr\u003EKerbinMass=5.2915793E\u002B22;\u003Cbr\u003EKerbinRadius=600000;\u003Cbr\u003EGravParameter=G*KerbinMass;\u003Cbr\u003E\u003Cbr\u003E%Variable initializations\u003Cbr\u003Ealtitude=zeros(1,endtime/dt);\u003Cbr\u003Eairspeed=zeros(1,endtime/dt);\u003Cbr\u003Etime=0:dt:endtime;\u003Cbr\u003EDryMass = Mass_Payload \u002B Mass_Engine \u002B Mass_FuelTankDry;\u003Cbr\u003ELostDeltaV = 0;\u003Cbr\u003EGroundElevation=77;\u003Cbr\u003E\u003Cbr\u003E%Initial conditions\u003Cbr\u003Ealtitude(1)=77; %[m]\u003Cbr\u003Eairspeed(1)=0; %[m/s]\u003Cbr\u003E\u003Cbr\u003E%Potential DeltaV calculation\u003Cbr\u003EPotDeltaVatm = log((DryMass\u002BFuelOnBoard)/DryMass) * EngineIspAtm * g0;\u003Cbr\u003EPotDeltaVvac = log((DryMass\u002BFuelOnBoard)/DryMass) * EngineIspVac * g0;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E% --- Section 2 - Simulation ---\u003Cbr\u003E%\u003Cbr\u003E% In this section, ascent performance is simulated.\u003Cbr\u003E%\u003Cbr\u003E% Three forces are calculated:\u003Cbr\u003E% - Gross thrust: fixed as long as there\u0027s fuel\u003Cbr\u003E% - Drag: in KSP, based on mass\u003Cbr\u003E% - Weight\u003Cbr\u003E%\u003Cbr\u003E% \u003Cbr\u003Efor i=1:(endtime/dt\u002B1)\u003Cbr\u003E    Mass=Mass_Payload\u002BMass_FuelTankDry\u002BMass_Engine\u002BFuelOnBoard;\u003Cbr\u003E    g=GravParameter/((KerbinRadius\u002Baltitude(i))^2);\u003Cbr\u003E\u003Cbr\u003E    % --- Weight ---\u003Cbr\u003E    Weight=-Mass*g; %Weight always points down (negative)\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    rho=exp(-altitude(i)/atmosScale) * rho0;\u003Cbr\u003E\u003Cbr\u003E    % --- Gross thrust ---\u003Cbr\u003E    %Spec impulse interpolates linearly with rho from IspAtm to IspVac\u003Cbr\u003E    IspRatio=rho/rho0;\u003Cbr\u003E    Isp=IspRatio*EngineIspAtm\u002B(1-IspRatio)*EngineIspVac;\u003Cbr\u003E\u003Cbr\u003E    %Max thrust that can be generated with the fuel on board:\u003Cbr\u003E    Fg = min(Throttle*EngineMaxFg,FuelOnBoard*Isp*g0/dt);\u003Cbr\u003E\u003Cbr\u003E    % --- Aerodynamic drag ---\u003Cbr\u003E    Drag=0.5*rho*(airspeed(i)^2)*Cd*Mass*0.008;\u003Cbr\u003E    if airspeed(i)\u0026gt;0\u003Cbr\u003E        Drag=-Drag; %Drag points down (negative) if airspeed is positive\u003Cbr\u003E    end\u003Cbr\u003E\u003Cbr\u003E    accel=(Fg\u002BWeight\u002BDrag)/Mass;\u003Cbr\u003E    altitude(i\u002B1)=altitude(i)\u002Bairspeed(i)*dt\u002B(0.5*accel)*dt^2;\u003Cbr\u003E    if altitude(i\u002B1)\u0026gt;=GroundElevation\u003Cbr\u003E        airspeed(i\u002B1)=airspeed(i)\u002Baccel*dt;\u003Cbr\u003E    else\u003Cbr\u003E        airspeed(i\u002B1)=0;\u003Cbr\u003E        altitude(i\u002B1)=0;\u003Cbr\u003E    end\u003Cbr\u003E\u003Cbr\u003E    %Fuel burn, cannot be more than the fuel on board\u003Cbr\u003E    FuelBurn=min(FuelOnBoard,Fg/(Isp*g0)*dt);\u003Cbr\u003E\u003Cbr\u003E    %Potential DeltaV for this iteration (to calculate deltaV losses to\u003Cbr\u003E    %gravity and drag)\u003Cbr\u003E    if FuelBurn\u0026gt;0\u003Cbr\u003E        PotDeltaV = log((DryMass\u002BFuelOnBoard)/ ...\u003Cbr\u003E            (DryMass\u002BFuelOnBoard-FuelBurn))*Isp*g0;\u003Cbr\u003E        LostDeltaV = LostDeltaV \u002B PotDeltaV - accel*dt;\u003Cbr\u003E    end\u003Cbr\u003E\u003Cbr\u003E    %Fuel consumed\u003Cbr\u003E    FuelOnBoard = FuelOnBoard - FuelBurn;\u003Cbr\u003Eend\u003Cbr\u003E\u003Cbr\u003E%Trim last array element beyond time scope\u003Cbr\u003Ealtitude(i)=[];\u003Cbr\u003Eairspeed(i)=[];\u003Cbr\u003E\u003Cbr\u003Eplot(time,altitude)\u003Cbr\u003Etitle([\u0027Max alt: \u0027,num2str(max(altitude))])\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-09T20:08:20Z\u0022 title=\u002212/09/2013 08:08  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 9, 2013\u003C/time\u003E by AlexisBV\u003C/strong\u003E\n\u003Cbr\u003EIssue resolved\n\u003C/span\u003E\n"},{"CreatedByName":"Taki117","CreatedById":89975,"CreatedDateTime":"2013-11-29T21:32:42Z","Content":"\n\u003Cp\u003EI believe your spreadsheet is assuming the same specific impulse for your engine as you ascend. this isn\u0027t the case. As you get higher the atmosphere thins and the specific impulse of your engine increases towards it\u0027s vaccum value. I believe there is a point in atmo where your actual specific impule ans your vaccum specific impulse are the same.\u003C/p\u003E\n"},{"CreatedByName":"AlexisBV","CreatedById":81911,"CreatedDateTime":"2013-11-29T21:44:40Z","Content":"\n\u003Cp\u003EHello Taki,\u003C/p\u003E\u003Cp\u003EThe spreadsheet/Matlab model does take into account the variable Isp (see line 78 in the code, under \u0022Gross Thrust\u0022), and I\u0027ve checked it against the flight test. It matches nicely... so it\u0027s not that.\u003C/p\u003E\u003Cp\u003EI\u0027ve also double checked calculated gravity and baro pressure against flight test data (hence the sensors on my test rocket), and they match beautifully... so it has to be something else. But what? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-29T21:48:13Z\u0022 title=\u002211/29/2013 09:48  PM\u0022 data-short=\u002210 yr\u0022\u003ENovember 29, 2013\u003C/time\u003E by AlexisBV\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Taki117","CreatedById":89975,"CreatedDateTime":"2013-11-29T21:51:38Z","Content":"\n\u003Cp\u003EAH! taking a closer look at your code your rocket equation is off. its supposed to be the natural log (ln), not the log.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.m.wikipedia.org/wiki/Tsiolkovsky_rocket_equation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.m.wikipedia.org/wiki/Tsiolkovsky_rocket_equation\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"AlexisBV","CreatedById":81911,"CreatedDateTime":"2013-11-29T21:58:34Z","Content":"\n\u003Cp\u003ENot that either... in Matlab, the natural log (base e) is \u0022log()\u0022. The (base 10) log in Matlab would be spelled \u0022log10()\u0022. In the Excel spreadsheet, I use LN().\u003C/p\u003E\u003Cp\u003EEither way, that wouldn\u0027t change much as the delta-V calculation is not actually used to obtain acceleration, only as a provision for a planned feature in the code. It also serves as a good sanity-check for validating the acceleration code in vacuum.\u003C/p\u003E\u003Cp\u003EIn fact, that gives me an idea, I\u0027ll try this code/spreadsheet on a Mun scenario in KSP, if it matches, then I\u0027ll know the issue lies with the drag calculation (which isn\u0027t physically representative anyway)...\u003C/p\u003E\u003Cp\u003EThanks!\u003C/p\u003E\n"},{"CreatedByName":"cmoody","CreatedById":73304,"CreatedDateTime":"2013-11-29T22:02:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Taki117\u0022 data-cite=\u0022Taki117\u0022\u003E\u003Cdiv\u003EAH! taking a closer look at your code your rocket equation is off. its supposed to be the natural log (ln), not the log.\u003Cp\u003E\u003Ca href=\u0022https://en.m.wikipedia.org/wiki/Tsiolkovsky_rocket_equation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.m.wikipedia.org/wiki/Tsiolkovsky_rocket_equation\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe log function in MatLab in the natural log. (Source: GEEN 1300 General Computing for Engineers)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI believe your spreadsheet is assuming the same specific impulse for your engine as you ascend. this isn\u0027t the case. As you get higher the atmosphere thins and the specific impulse of your engine increases towards it\u0027s vaccum value. I believe there is a point in atom where your actual specific impule and your vacuum specific impulse are the same.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is your problem. Make your specific impulse a linear function (which it won\u0027t be in actuality) from sea level to vacuum with the endpoints the values given in the part info box. You\u0027ll see that your equations is much more accurate. Also note by Newton\u0027s equations that gravity is NOT constant with altitude. While this is not terribly important, you\u0027ll find that your numbers are still coming up short.\u003C/p\u003E\n"},{"CreatedByName":"mhoram","CreatedById":78756,"CreatedDateTime":"2013-11-29T22:12:54Z","Content":"\n\u003Cp\u003EThe drag has to be measured by the relative airspeed.\u003C/p\u003E\u003Cp\u003EAnd since the atmosphere moves with the planet, this must be accounted for in the calculation.\u003C/p\u003E\u003Cp\u003EHave a look at the function get_drag_force in the module Satellite.pm of my \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/58531-Finding-the-best-ascent-path-for-rockets?p=785108\u0026amp;viewfull=1#post785108\u0022 rel=\u0022external nofollow\u0022\u003Eascent path optimizer\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EThese threads might be interesting for you:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/46194-I-need-someone-help-me-do-some-math-for-launch-optimization\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/46194-I-need-someone-help-me-do-some-math-for-launch-optimization\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/6664\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/6664\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-11-29T22:25:29Z","Content":"\n\u003Cp\u003EThere\u0027s another issue; you\u0027re assuming that Isp changes linearly with atmospheric pressure, when it actually follows a Bezier Curve that has slopes of 0 at vacuum and one atmosphere. It\u0027s a small error, but it might account for the problem.\u003C/p\u003E\n"},{"CreatedByName":"AlexisBV","CreatedById":81911,"CreatedDateTime":"2013-11-29T22:32:00Z","Content":"\n\u003Cp\u003EHmm, interesting point about the air moving with the planet. However I think that would only make things worse as relative airspeed (and drag) would then be higher. \u003C/p\u003E\u003Cp\u003EFerram4, the isp values calculated currently match with what I see in-game (it varies linearly with pressure)... \u003C/p\u003E\u003Cp\u003EThe program also calculates pressure and gravity matching what I see in KSP. I\u0027m on my phone now, I\u0027ll post a table later when I get home. \u003C/p\u003E\u003Cp\u003EIs there some way (add-on?) we can see what the current total drag force on the ship is?\u003C/p\u003E\n"},{"CreatedByName":"mhoram","CreatedById":78756,"CreatedDateTime":"2013-11-29T23:01:45Z","Content":"\n\u003Cp\u003E\u0022MechJeb -\u0026gt; Vessel -\u0026gt; Atmospheric drag\u0022 shows the current drag in m/s^2\u003C/p\u003E\u003Cp\u003EAll references I found also stated that in KSP Isp scales linear with pressure.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003EAnother aspect is that a rocket also has a horizontal velocity. This increases the altitude of the rocket during each simulation step, because the planet is a spere. I think that this effect can be summarized as centrifugal force.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-29T23:43:36Z\u0022 title=\u002211/29/2013 11:43  PM\u0022 data-short=\u002210 yr\u0022\u003ENovember 29, 2013\u003C/time\u003E by mhoram\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Specialist290","CreatedById":58489,"CreatedDateTime":"2013-11-29T23:36:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EThere\u0027s another issue; you\u0027re assuming that Isp changes linearly with atmospheric pressure, when it actually follows a Bezier Curve that has slopes of 0 at vacuum and one atmosphere. It\u0027s a small error, but it might account for the problem.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AlexisBV\u0022 data-cite=\u0022AlexisBV\u0022\u003E\u003Cdiv\u003EFerram4, the isp values calculated currently match with what I see in-game (it varies linearly with pressure)...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m willing to back AlexisBV up on this, given that it matches \u003Ca href=\u0022http://imgur.com/a/IWoJI\u0022 rel=\u0022external nofollow\u0022\u003Emy own experiences\u003C/a\u003E as well (at least with rockets -- I\u0027m not sure if jet engines work differently in that regard).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIs there some way (add-on?) we can see what the current total drag force on the ship is?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKerbal Engineer Redux and MechJeb both output drag effects on your craft. I believe MJ outputs it as acceleration while KER outputs it as force, so that\u0027s something to be mindful of.\u003C/p\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2013-11-30T01:19:04Z","Content":"\n\u003Cp\u003EThe curves are linear if there are two points, and not linear if there are more than two points; so a turbojet gets more than its supposed maximum 2500 Isp. But for rockets, it\u0027s linear.\u003C/p\u003E\u003Cp\u003Eg0 is 9.82 in KSP. That probably explains almost everything.\u003C/p\u003E\u003Cp\u003EAnother effect: you are going 174.5 m/s orbit horizontal speed when you fly with 0 m/s surface horizontal speed. So gravity is a little tiny bit less than what you simulate.\u003C/p\u003E\u003Cp\u003EFinally, I believe the gravitational parameter is more accurate than G * mass. Grab those values from the wiki: Kerbin is 3.5316e12.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-30T01:22:28Z\u0022 title=\u002211/30/2013 01:22  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 30, 2013\u003C/time\u003E by numerobis\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Meithan","CreatedById":76123,"CreatedDateTime":"2013-11-30T15:41:50Z","Content":"\n\u003Cp\u003EThe discrepancy is small that it\u0027s hard to assess the cause. I\u0027ve been developing an aerobraking simulator mod, and drag is where I still get slight discrepancies with MechJeb values and game results. Since drag depends on the square of velocity, small errors in velocity will translate into noticeable errors in drag, which in turn alter the calculated velocity, and so on.\u003C/p\u003E\u003Cp\u003EYou might try switching to a higher-order numerical solver. If I understand your code correctly, you\u0027re using a first-order Euler method right now. It\u0027s not the best of methods. A simple option is the midpoint method. It\u0027s quite simple: first use the Euler method to estimate values for airspeed and altitude \u003Cem\u003Ehalf a timestep\u003C/em\u003E ahead, and then use those \u0022midpoint\u0022 values to obtain the new airspeed and altitude. You\u0027ll need to compute acceleration twice so you might want to define a function that does just that based on altitude and airspeed values.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-12-01T14:10:23Z","Content":"\n\u003Cp\u003EHere\u0027s Mathematica\u0027s opinion, NDSolve uses a fancy adaptive method with very tight default tolerances (probably more accurate than KSP\u0027s own integration):\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Vertical%20ascent.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dl.dropboxusercontent.com/u/8244638/Vertical%20ascent.pdf\u003C/a\u003E (pardon the lack of plot labels)\u003C/p\u003E\u003Cp\u003ECouple hundred meters off where you said burnout should happen, but matches apoapsis to within 25 meters. I\u0027d put that small discrepancy down to the launchpad not being exactly on the equator.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-01T14:17:59Z\u0022 title=\u002212/01/2013 02:17  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 1, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-04T07:00:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AlexisBV\u0022 data-cite=\u0022AlexisBV\u0022\u003E\u003Cdiv\u003EIn fact, that gives me an idea, I\u0027ll try this code/spreadsheet on a Mun scenario in KSP, if it matches, then I\u0027ll know the issue lies with the drag calculation (which isn\u0027t physically representative anyway)...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou might want to use HyperEdit to manipulate the circumstances in KSP (change the atmosphere, gravity or else), as it helps to isolate contributing factors.\u003C/p\u003E\n"},{"CreatedByName":"AlexisBV","CreatedById":81911,"CreatedDateTime":"2013-12-09T20:07:23Z","Content":"\n\u003Cp\u003EI think I got it, based on tavert\u0027s example, it seems like it\u0027s the centripetal factor that was missing from my calculations. (I was only using thrust, gravity and drag, without correcting for the rotating planet reference). I added it to my spreadsheet, and while still not exact, it is way closer (about 0.1%) to what we see in game. I can live with that \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}