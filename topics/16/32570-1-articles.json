{"TopicId":32570,"ForumId":16,"TopicTitle":"Just some questions out of curiosity","CreatedByName":"Varryl","CreatedById":57409,"CreatedDateTime":"2013-06-12T07:10:34Z","PageNum":1,"Articles":[{"CreatedByName":"Varryl","CreatedById":57409,"CreatedDateTime":"2013-06-12T07:10:34Z","Content":"\n\u003Cp\u003EI\u0027ve been playing Kerbal since .18.2 and I\u0027ve done some interesting things. I would consider myself an intermediate player, but not an advanced one by any means. I started playing around with the part cfg files, launched some very high thrust experiments, and I had some questions: \u003C/p\u003E\u003Cp\u003E1. Does anyone know exactly how much force is used when a part is attached to another part, or how much force is required for that part to break off? \u003C/p\u003E\u003Cp\u003E2. Does anyone know how to increase the attachment force from one part to another part? \u003C/p\u003E\u003Cp\u003E3. Why do rockets that are perfectly simple (pod/probe, fuel, engine) with a high TWR start to veer off one side or another? \u003C/p\u003E\u003Cp\u003E4. Does anyone know how to adjust the ASAS force so that you\u0027re not constantly wobbling back and forth while still maintain ASAS stability features? \u003C/p\u003E\u003Cp\u003EThese questions have probably been asked before. I used search and tried to come up with some answers for myself, but the threads seemed to veer off into something tangential every time. Any information or even a link to where the information is would be greatly appreciated.\u003C/p\u003E\n"},{"CreatedByName":"Flixxbeatz","CreatedById":29991,"CreatedDateTime":"2013-06-12T07:19:40Z","Content":"\n\u003Cp\u003EThis might help you: \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s not that easy to modify the cfg files though, there\u0027s a chance that you\u0027ll mess it up.\u003C/p\u003E\n"},{"CreatedByName":"Cranium","CreatedById":69153,"CreatedDateTime":"2013-06-12T14:26:07Z","Content":"\n\u003Cp\u003EFor ASAS, I believe you can use Caps Lock to enable fine control, but I rarely use it. If my rocket can\u0027t be controlled decently with manual maneuvering, I usually go back to the drawing board, and either add more struts, or redesign it completely.\u003C/p\u003E\u003Cp\u003EASAS is only going to be able to control it if you are able to control it with perfect(?) precision.\u003C/p\u003E\n"},{"CreatedByName":"Awaras","CreatedById":15671,"CreatedDateTime":"2013-06-12T14:37:10Z","Content":"\n\u003Cp\u003EIf you want to play around with the ASAS force settings, try this mod:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kerbalspaceprogram.com/trimmable-asas/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/trimmable-asas/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Varryl","CreatedById":57409,"CreatedDateTime":"2013-06-12T16:36:13Z","Content":"\n\u003Cp\u003EThanks for all your input guys. I thought I knew what I was doing in the cfg files but looks like there is a lot more than I realized. Does anyone know what Ki, Kp and Kd do in layman\u0027s terms? I\u0027ve googled around, I\u0027ve seen them in parts cfg files, and I know they\u0027re for PID controllers, but the math was a little over my head.\u003C/p\u003E\n"},{"CreatedByName":"Awaras","CreatedById":15671,"CreatedDateTime":"2013-06-12T16:50:19Z","Content":"\n\u003Cp\u003EThis is the clearest explanation I could find:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAlthough you\u0027ll find many methods and theories on tuning a PID, here\u0027s a straight forward approach to get you up and soloing quickly.\u003Cp\u003E1. SET KP. Starting with KP=0, KI=0 and KD=0, increase KP until the output starts overshooting and ringing significantly.\u003C/p\u003E\u003Cp\u003E2. SET KD. Increase KD until the overshoot is reduced to an acceptable level.\u003C/p\u003E\u003Cp\u003E3. SET KI. Increase KI until the final error is equal to zero.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Mr Shifty","CreatedById":68146,"CreatedDateTime":"2013-06-12T17:10:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Varryl\u0022 data-cite=\u0022Varryl\u0022\u003E\u003Cdiv\u003EThanks for all your input guys. I thought I knew what I was doing in the cfg files but looks like there is a lot more than I realized. Does anyone know what Ki, Kp and Kd do in layman\u0027s terms? I\u0027ve googled around, I\u0027ve seen them in parts cfg files, and I know they\u0027re for PID controllers, but the math was a little over my head.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA control loop has some measured quantity, a setpoint, and some control parameter. For example, a thermostat for an electric heater measures temperature and could control the amount of power going to the heater coils. It measures the difference between the measured input (temperature) and the setpoint (thermostat setting) to determine the \u003Cem\u003Eerror signal\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EKp - Proportional. Kp represents how responsive the control output is to the magnitude of the error signal. In the thermostat example, if the error signal is large (large difference between current temp and setpoint), you want the power to the heater to be large, and you want it to decrease the closer you get to the setpoint. \u003C/p\u003E\u003Cp\u003EKd - Derivative. Kd represents how responsive the control output is to how fast the error signal is changing. Back to the thermostat: if you just rely on proportional control, you\u0027ll probably overshoot the setpoint, and since you have no \u0022cooldown\u0022 method, you\u0027re probably going to undershoot when the temperature comes back, which will cause you to overshoot again, oscillating back and forth. (This is called \u003Cem\u003Eringing\u003C/em\u003E.) If you make the system responsive to the rate of change of the error signal (typically inversely proportional), it will reduce the furnace power not just when the error signal is low, but also when it is changing quickly, thus damping down overshoots.\u003C/p\u003E\u003Cp\u003EKi - Integral. Ki represents how responsive the control output is to sort of the total duration of the error signal. For instance, if you\u0027ve had a large error signal for a long time (say because someone left the door open on a cold day), clearly your output power isn\u0027t high enough, so you need to increase it. You can sort of think of Kd as the system response to short-term trends and Ki as the response to long-term trends.\u003C/p\u003E\n"},{"CreatedByName":"Varryl","CreatedById":57409,"CreatedDateTime":"2013-06-12T18:02:42Z","Content":"\n\u003Cp\u003EI really appreciate all the feedback I\u0027ve gotten on the forum. Good stuff, guys. Cheers.\u003C/p\u003E\n"}]}