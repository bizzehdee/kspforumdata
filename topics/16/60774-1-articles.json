{"TopicId":60774,"ForumId":16,"TopicTitle":"What is [Max Physics Delta-Time per Frame]?","CreatedByName":"Sirine","CreatedById":74830,"CreatedDateTime":"2014-01-23T01:27:46Z","PageNum":1,"Articles":[{"CreatedByName":"Sirine","CreatedById":74830,"CreatedDateTime":"2014-01-23T01:27:46Z","Content":"\n\u003Cp\u003EWhat is [Max Physics Delta-Time per Frame]? How does it affect the playing environment?\u003C/p\u003E\u003Cp\u003ESetting are from 0.12 Sec to 0.03 Sec.\u003C/p\u003E\u003Cp\u003E0.12 Sec means?\u003C/p\u003E\u003Cp\u003E0.03 Sec means?\u003C/p\u003E\u003Cp\u003EFrom wiki\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cstrong\u003EDelta timing\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EFrom Wikipedia, the free encyclopedia\u003C/p\u003E\u003Cp\u003EDelta Time or Delta Timing is a concept used amongst programmers in relation to hardware and network responsiveness. In graphics programming, the term is usually used but for variably updating scenery based on the elapsed time since the game last updated, and also calculated separately if graphics are being multi-threaded. [1] A user with a slow internet connection or computer is often prone to experience lag or slowness in the responsiveness of the game environment. The purpose of Delta Timing is to eliminate the effects of lag on computers that try to handle complex graphics or a lot of code, by adding up to the speed of objects so that they will eventually move at the same speed, regardless of lag.\u003C/p\u003E\u003Cp\u003EIt is done by calling a timer every frame per second that holds the time between now and last call in milliseconds.[2] Thereafter the resulting number (Delta Time) is used to calculate how much faster that, for instance, a game character has to move to make up for the lag spike caused in the first place.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003ECheck the throttle-up speed. This is Max Physical Delta-Time set to 0.12.\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ESetting this high causes two issues:\u003C/p\u003E\u003Cp\u003E1st, you can only issue a command every 0.12 game seconds, so you will have trouble flying a twitchy spacecraft. \u003C/p\u003E\u003Cp\u003E2nd, the simulation will be less accurate, which can cause your spacecraft to fall apart for no good reason.-by \u003Cstrong\u003Enumerobis\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E(Example:- Landing a HEAVY plane on runway)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/Xgb_8KlFbpc?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003ECheck the throttle-up speed. This is Max Physical Delta-Time set to 0.03.\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ESetting it low means each game second will take more than one real second, which is bad if you\u0027re impatient. -by \u003Cstrong\u003Enumerobis\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/4_7F-CHCTTQ?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-23T03:14:26Z\u0022 title=\u002201/23/2014 03:14  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 23, 2014\u003C/time\u003E by Sirine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TechnicalK3rbal","CreatedById":86903,"CreatedDateTime":"2014-01-23T02:44:34Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EWhy is this a question if you answered it yourself in the original post?\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ESorry misread post.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-23T03:11:26Z\u0022 title=\u002201/23/2014 03:11  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 23, 2014\u003C/time\u003E by TechnicalK3rbal\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2014-01-23T02:44:57Z","Content":"\n\u003Cp\u003E0.12 means that every 0.12 game seconds, Unity will simulate another frame.\u003C/p\u003E\u003Cp\u003EIf Unity can simulate and render the scene in less than 0.12 real seconds, it will reduce the time per frame so you get more frames per real second.\u003C/p\u003E\u003Cp\u003ESetting this high causes two issues: first, you can only issue a command every 0.12 game seconds, so you will have trouble flying a twitchy spacecraft. Second, the simulation will be less accurate, which can cause your spacecraft to fall apart for no good reason.\u003C/p\u003E\u003Cp\u003ESetting it low means each game second will take more than one real second, which is bad if you\u0027re impatient.\u003C/p\u003E\n"},{"CreatedByName":"Dave Kerbin","CreatedById":78777,"CreatedDateTime":"2014-01-23T02:46:13Z","Content":"\n\u003Cp\u003EThe physics simulation works by taking a certain amount of time (the delta-time) and figuring out how much everything will move in that time and then figuring out if anything has collided (and some more advanced things like drag, joint tension and such).\u003C/p\u003E\u003Cp\u003ESo if you have an object moving at 10 m/s and the game chooses to calculate a delta-time of 0.1 seconds it will move the object 1m forward and then after check to see if it\u0027s touching anything. The accuracy of the simulation depends a lot on how small the delta-time is. If the delta-time was 10 seconds then the object would move 100m before checking to see if it was colliding with anything, so most of the time the object would be able to just pass through other objects without hitting them. This can actually happen in the game when flying a ship at very high time warp, if the game doesn\u0027t catch it in time and automatically lower the time warp you can pass right through a planet. Other then objects passing through each other there are more subtle effects when the delta-time is too big compared to the level of detail required. Effects like joints and friction where many forces are interacting at once need to move in small steps to ensure all the forces get balanced out nicely. If you try to move them in big steps you get violent jerky motion as parts bounce off each other and often explode from the large forces being applied all at once.\u003C/p\u003E\u003Cp\u003EKSP doesn\u0027t use a fixed delta-time for each frame. Like with the graphics it will try to calculate as many physics frames each second as it can, leading to a smoother, more accurate simulation. So the delta-time will be as small a the game can make it. but the more parts there are to calculate the more time it will take, leading to a larger delta-time for each complete frame.\u003C/p\u003E\u003Cp\u003EThe [Max Physics Delta-Time per Frame] is a safety net. It is the highest delta-time the game will use. So if it takes 0.2 seconds to calculate one frame (and so the delta-time would have to be 0.2 seconds to make the game move at 1x speed) but the [Max Physics Delta-Time per Frame] is set to 0.1 seconds then the game will use the maximum value instead. This means the game will appear to run in slow motion - for every 0.2 seconds that pass only 0.1 seconds of game time will be calculated.\u003C/p\u003E\u003Cp\u003EIn summary:\u003C/p\u003E\u003Cp\u003E[Max Physics Delta-Time per Frame] is used to balance the accuracy/stability of the simulation with the speed of the simulation.\u003C/p\u003E\u003Cp\u003EMaking [Max Physics Delta-Time per Frame] a bigger number means the game won\u0027t slow down on slower computers, but may become less accurate.\u003C/p\u003E\u003Cp\u003EMaking [Max Physics Delta-Time per Frame] a smaller number means the game will always remain accurate but may slow down as you make bigger ships.\u003C/p\u003E\n"},{"CreatedByName":"iBeej","CreatedById":78998,"CreatedDateTime":"2014-01-23T02:48:52Z","Content":"\n\u003Cp\u003ENot much else to add. You answered it in your original post. And others elaborated further. It\u0027s best to leave it at default. You can improve your frame rate with it, but then it\u0027s basically like watching slow motion because your game is processing \u0022time\u0022 slower than real time, to accommodate physics calculations. And that will most likely drive you crazy.\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2014-01-23T03:01:55Z","Content":"\n\u003Cp\u003EI have always assumed that it is the time step that the game uses when numerically integrating the forces that act on your spacecraft while it is on \u0022physics\u0022 (rather than while on rails). \u003C/p\u003E\u003Cp\u003ELonger time steps in numerical integrations typically introduce more error because they represent a courser approximation. Think of it like a low resolution image; the longer the time step (i.e. the 0.12 second setting), the lower the resolution and the \u0022grainier\u0022 the result. \u003C/p\u003E\u003Cp\u003EShorter time steps can also introduce error, however, because computers have only limited precision in the numbers that they store. Rounding errors can accumulate to become very large over enough time steps. See \u003Ca href=\u0022http://www.stewartcalculus.com/data/ESSENTIAL%20CALCULUS%20Early%20Transcendentals/upfiles/ecet-liesmycomp_stu.pdf\u0022 rel=\u0022external nofollow\u0022\u003ELies my computer and calculator told me\u003C/a\u003E for a good description of some of the pitfalls of performing calculations with computers. The article is a bit dated now but it is still relevant.\u003C/p\u003E\u003Cp\u003EI wish I could give a better answer than that, but I can\u0027t tell you which setting to use without knowing the details of how the game integrates the forces acting on your spacecraft while on physics. It is probably best to experiment with it. I have it set towards the low end on my game.\u003C/p\u003E\u003Cp\u003EEdit: Wow, uber sniped by three guys!\u003C/p\u003E\n"},{"CreatedByName":"Sirine","CreatedById":74830,"CreatedDateTime":"2014-01-23T03:05:18Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@TechnicalK3rbal\u003C/strong\u003E because English is not my primary language and I don\u0027t really understand it, and need more elaboration, aside from wiki (technical detail) explanation. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@numerobis @Dave Kerbin @iBeej @PakledHostage\u003C/strong\u003E Thanks for the answer!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-23T03:09:20Z\u0022 title=\u002201/23/2014 03:09  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 23, 2014\u003C/time\u003E by Sirine\u003C/strong\u003E\n\u003Cbr\u003Eadd in @PakledHostage\n\u003C/span\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2014-01-23T03:23:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PakledHostage\u0022 data-cite=\u0022PakledHostage\u0022\u003E\u003Cdiv\u003EI wish I could give a better answer than that, but I can\u0027t tell you which setting to use without knowing the details of how the game integrates the forces acting on your spacecraft while on physics.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere\u0027s two parts: Physx, which performs Euler integration; and the scripts that Squad have written, which go part by part in each timestep, which for the most part is equivalent to Euler integration also (exception is e.g. one jet will run out of air before the others).\u003C/p\u003E\u003Cp\u003EAnother thing that depends on the physics deltaT: Some thresholds aren\u0027t multiplied by dT like they should be. Parachutes come to mind: notice how they rip off at 4x speed but not at 1x speed? I believe that\u0027s because 4x speed is multiplying the dT by 4, which multiplies the force by 4 -- but the strength of the joints isn\u0027t increased by a factor of 4.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-01-23T06:45:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003E0.12 means that every 0.12 game seconds, Unity will simulate another frame.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s definitely not true because in that case you\u0027d run at 8 FPS with that setting.\u003C/p\u003E\u003Cp\u003EThe game works in steps - it does a physics simulation step, followed by frame rendering step. At the start of each cycle it records current time.\u003C/p\u003E\u003Cp\u003EWhen it goes to do a physics step, it compares current time with time at which it was starting the previous physics simulation step. If this time difference is smaller than the value of \u0022max physics time step\u0022, it performs physics step for the measured time difference. Only if the time difference is bigger than \u0022max physics time step\u0022, it performs physics step for time configured in this parameter, making game time pass slower than real time. It also colors the MET timer yellow to indicate that.\u003C/p\u003E\u003Cp\u003EI did my own experiment.\u003C/p\u003E\u003Cp\u003EShip 1: small 3-part ship, time till runs out of fuel. Takes 1:09 game time\u003C/p\u003E\u003Cp\u003EShip 2: large heavy ship, time till its first stage runs out of fuel. Takes 1:01 game time\u003C/p\u003E\u003Cp\u003EI measured real time from launch till these events.\u003C/p\u003E\u003Cp\u003EMPTS = 0.12: Ship 1 - 1:09 (100%), Ship 2 - 1:03 (103%)\u003C/p\u003E\u003Cp\u003EMPTS = 0.03: Ship 1 - 1:09 (100%), Ship 2 - 1:27 (143%)\u003C/p\u003E\n"},{"CreatedByName":"Sirine","CreatedById":74830,"CreatedDateTime":"2014-01-23T06:54:23Z","Content":"\n\u003Cp\u003EIn other words, If you are having some MET time challenge, set your MPTS (Max Physics Time Step) to 0.12, you will have huge advantage compare with 0.03. haha.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2014-01-23T07:07:26Z","Content":"\n\u003Cp\u003EIt\u0027ll take less time in reality, but the game time (or distance covered in a given game time) should be very similar. The only difference is in numerical integration error at a higher timestep.\u003C/p\u003E\n"},{"CreatedByName":"sjwt","CreatedById":9268,"CreatedDateTime":"2014-01-23T07:17:43Z","Content":"\n\u003Cp\u003EMax Delta time is for when the game slows down, as the physics starts to take a hit, the game will start to slow the time down in game to allow the system to perform all the physics needed.\u003C/p\u003E\u003Cp\u003EBefore max Delta time was a known setting, larger ships would slow the game down and cause massive bugs, such as not even being able to be loaded onto the launch pad. The worst I ever had was over 45 seconds for the game to render one single frame, and due the the nature of the old system that 1 frame was showing 1 second of game time elapsed, and you could go from a fine ship to a full screen of explosion with no idea what failed.\u003C/p\u003E\u003Cp\u003ENow the game brakes frames down to a maximum amount of game time before displaying what is going on. So if you are not lagging you should notice no real difference what the setting is, but load a larger ship and see. The lower the setting the more smooth a lagging game will seem.\u003C/p\u003E\n"},{"CreatedByName":"yblad","CreatedById":103824,"CreatedDateTime":"2014-02-18T20:07:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EThere\u0027s two parts: Physx, which performs Euler integration; and the scripts that Squad have written, which go part by part in each timestep, which for the most part is equivalent to Euler integration also (exception is e.g. one jet will run out of air before the others).\u003Cp\u003EAnother thing that depends on the physics deltaT: Some thresholds aren\u0027t multiplied by dT like they should be. Parachutes come to mind: notice how they rip off at 4x speed but not at 1x speed? I believe that\u0027s because 4x speed is multiplying the dT by 4, which multiplies the force by 4 -- but the strength of the joints isn\u0027t increased by a factor of 4.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThey really use Euler\u0027s method? Jees I would\u0027ve thought they\u0027d have at least gone with a 2nd order Runge-Kutta algorithm. Much better performance/accuracy ratio. Maybe i should write to them and offer them a hand. Really don\u0027t have time right now though\u003C/p\u003E\n"}]}