{"TopicId":119594,"ForumId":16,"TopicTitle":"Calculus of prograde burns.","CreatedByName":"ajburges","CreatedById":26570,"CreatedDateTime":"2015-08-28T18:32:26Z","PageNum":1,"Articles":[{"CreatedByName":"ajburges","CreatedById":26570,"CreatedDateTime":"2015-08-28T18:32:26Z","Content":"\n\u003Cp\u003EAnyone know of a reference for integrating the system of a prograde burn WRT time? I would like the ability to more accurately predict long ejection burn trajectories, but I have a feeling that the problem needs higher level differential equations to solve.\u003C/p\u003E\u003Cp\u003EI am somewhat rusty with my higher calculus and keep running into issues modeling the burn. My best was to model it as a sum of the acceleration vectors, but the thrust is dependant on the velocity direction and I can\u0027t recall a way to model that in the equations.\u003C/p\u003E\u003Cp\u003EThe reason I want this is to more accurately time high eccentricity ejections. Instantaneous impulse optimizations just don\u0027t work for 5 km/s burns and Pe kicks only saves 800 m/s from the final burn (sub-Munnar).\u003C/p\u003E\u003Cp\u003EI know an Eve flyby would make the trip more manageable, but I wanted to preserve the explore contact. After taking 6 tries to place the burn correctly, I turned to math to solve the more general problem.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-30T12:10:42Z\u0022 title=\u002208/30/2015 12:10  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 30, 2015\u003C/time\u003E by ajburges\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"LordCorwin","CreatedById":114256,"CreatedDateTime":"2015-08-28T19:47:22Z","Content":"\n\u003Cp\u003EMay be you\u0027re looking something like the JPL CSPICE library, although it is a huge library made with real kernels.\u003C/p\u003E\u003Cp\u003EAlso, I think there is the function RK78, Runge Kutta Aproximation of 7\u0027th \u0026amp; 8th order, in C \u0026amp; Fortran. I know that many orbit problems were based on it, although I had problems to use it apropiately. After the first step it always gave me 0 values.\u003C/p\u003E\u003Cp\u003EI know that it works with first order differential eqs, and that the orbit problem is a second order diff eq, but the idea is to split it in two one-order diff eqs (of 3 coordinates each one).\u003C/p\u003E\u003Cp\u003EHope this helps.\u003C/p\u003E\n"},{"CreatedByName":"GoSlash27","CreatedById":111526,"CreatedDateTime":"2015-08-28T20:19:52Z","Content":"\n\u003Cp\u003Eajburges,\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EI\u0027d think you could fairly easily compute that with a simple spreadsheet without having to integrate.\u003C/p\u003E\u003Cp\u003E The mass is going to decrease linearly over time and the force is constant. Therefore the acceleration will increase linearly over time.\u003C/p\u003E\u003Cp\u003E The mean acceleration will be the same as the integrated acceleration, so finding time is straightforward.\u003C/p\u003E\u003Cp\u003Et= DV/Am\u003C/p\u003E\u003Cp\u003EAm= (A1\u002BA2)/2\u003C/p\u003E\u003Cp\u003EA1= T/M1\u003C/p\u003E\u003Cp\u003EA2= T/M2\u003C/p\u003E\u003Cp\u003EM2= M1/Rwd\u003C/p\u003E\u003Cp\u003ERwd= e^(DV/9.81Isp)\u003C/p\u003E\u003Cp\u003Ewhere \u003C/p\u003E\u003Cp\u003Et= time in seconds\u003C/p\u003E\u003Cp\u003EDV= delta vee in m/sec\u003C/p\u003E\u003Cp\u003EAm= mean acceleration in m/sec^2\u003C/p\u003E\u003Cp\u003EA1= initial acceleration in m/sec^2\u003C/p\u003E\u003Cp\u003ET= thrust in kilonewtons\u003C/p\u003E\u003Cp\u003EM1= initial mass in kg\u003C/p\u003E\u003Cp\u003EA2= ending acceleration in m/sec^2\u003C/p\u003E\u003Cp\u003EM2= ending mass in kg\u003C/p\u003E\u003Cp\u003Ee= Euler\u0027s number; approx. 2.718\u003C/p\u003E\u003Cp\u003EIsp= specific impulse in seconds.\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EI just realized I totally misunderstood what you were after! I thought you wanted a precise burn time calculation. Sorry!\u003C/p\u003E\u003Cp\u003EBest,\u003C/p\u003E\u003Cp\u003E-Slashy\u003C/p\u003E\u003Cp\u003E(please correct any errors if you spot them!)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-28T20:34:39Z\u0022 title=\u002208/28/2015 08:34  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 28, 2015\u003C/time\u003E by GoSlash27\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ajburges","CreatedById":26570,"CreatedDateTime":"2015-08-29T00:56:30Z","Content":"\n\u003Cp\u003ESeems like my initial post had enough ambiguity for confusion.\u003C/p\u003E\u003Cp\u003EMany are familiar with the function to model the first burn off a Hohmann transfer. My problem is that that equation models the thrust as an impulse. I would like to find or derive an equation (or set) to model a thrust over time.\u003C/p\u003E\u003Cp\u003EIs there a good reference on how to model this. The most sensible approach I could conceive would be to model the acceleration as a sum of the forces and integrate WRT time, but the thrust acceleration direction is dependant on the velocity!\u003C/p\u003E\u003Cp\u003EIs the only way to solve this problem numerical integration? Part of why I want this is so that I can solve for when to start a low TWR burn for a desired escape trajectory.\u003C/p\u003E\n"},{"CreatedByName":"Jimbimbibble","CreatedById":77859,"CreatedDateTime":"2015-08-29T01:05:37Z","Content":"\n\u003Cp\u003EWell, orbits are going to be eliptical or hyperbolic and there are equations to get orbit based on velocity and position. So, you can use a numerical method to calculate the result of a burn. Get current acceleration, velocity, and position, then compute your current trajectory. Increment velocity and position and recalculate orbit. With a small enough time step you should be able to get a decent answer. You\u0027re going to have to write code to do this, of course, but it shouldn\u0027t be too bad if you restrict it to 2D. Adding plane changes is possible with this method but it would be nastier.\u003C/p\u003E\n"},{"CreatedByName":"Nich","CreatedById":145678,"CreatedDateTime":"2015-08-29T02:40:41Z","Content":"\n\u003Cp\u003EIt should be possible to obtain an approximation using laplas transforms and a lot of differential equations and a Phd in Mathmatics however Numerical integration will give you an answer that is just as accurate and is a lot easier to calculate. and yes it could be done in a spread sheet but I would use matlab\u003C/p\u003E\n"},{"CreatedByName":"GoSlash27","CreatedById":111526,"CreatedDateTime":"2015-08-29T11:02:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ajburges\u0022 data-cite=\u0022ajburges\u0022\u003E\u003Cdiv\u003ESeems like my initial post had enough ambiguity for confusion.\u003Cp\u003EMany are familiar with the function to model the first burn off a Hohmann transfer. My problem is that that equation models the thrust as an impulse. I would like to find or derive an equation (or set) to model a thrust over time.\u003C/p\u003E\u003Cp\u003EIs there a good reference on how to model this. The most sensible approach I could conceive would be to model the acceleration as a sum of the forces and integrate WRT time, but the thrust acceleration direction is dependant on the velocity!\u003C/p\u003E\u003Cp\u003EIs the only way to solve this problem numerical integration? Part of why I want this is so that I can solve for when to start a low TWR burn for a desired escape trajectory.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eajburges,\u003C/p\u003E\u003Cp\u003E The burn time formula I posted would model the thrust over time. It would not predict the effect of cosine losses, which is what I \u003Cem\u003Ethink\u003C/em\u003E you\u0027re after.\u003C/p\u003E\u003Cp\u003E Using the model I provided would tell you precisely when to start a low twr burn. It just won\u0027t tell you what happens as a result of starting it so early or which way to point.\u003C/p\u003E\u003Cp\u003EBest,\u003C/p\u003E\u003Cp\u003E-Slashy\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-29T11:13:57Z\u0022 title=\u002208/29/2015 11:13  AM\u0022 data-short=\u00228 yr\u0022\u003EAugust 29, 2015\u003C/time\u003E by GoSlash27\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2015-08-29T14:02:21Z","Content":"\n\u003Cp\u003EWithout actually trying to solve the problem, it\u0027s worth noting that it\u0027s possible it may not actually be precisely solvable without numerical integration-- there are plenty of problems (even ones simpler than that) that fall into that category.\u003C/p\u003E\u003Cp\u003EFor example: What is the circumference of an ellipse? (Or just, what is the length of an elliptic arc?) For example, I have an ellipse of semiminor axis 1 meter and semimajor axis 2 meters. What\u0027s the circumference? Sounds easy, right?\u003C/p\u003E\u003Cp\u003ETurns out that it\u0027s actually completely impossible to express in terms of elementary functions. Not just hard, but actually, provably not possible.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Elliptic_integral\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://en.wikipedia.org/wiki/Elliptic_integral\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m not making any assertion that what you\u0027ve asked for is impossible, just noting that in principle it might be. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ajburges","CreatedById":26570,"CreatedDateTime":"2015-08-30T12:09:47Z","Content":"\n\u003Cp\u003EThanks Snark. I have not completely digested that article, but it\u0027s enough to convince me that I won\u0027t be able to simply derive an equation for this.\u003C/p\u003E\u003Cp\u003ELooks like I need to read up on sage math some more to learn the calls for numerical integration. If I get it to work I might post the code here.\u003C/p\u003E\n"}]}