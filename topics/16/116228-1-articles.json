{"TopicId":116228,"ForumId":16,"TopicTitle":"kOS: calculating spacecraft weight","CreatedByName":"Hyperlynx","CreatedById":90829,"CreatedDateTime":"2015-07-18T05:38:33Z","PageNum":1,"Articles":[{"CreatedByName":"Hyperlynx","CreatedById":90829,"CreatedDateTime":"2015-07-18T05:38:33Z","Content":"I\u0027m trying to calculate my spacecraft\u0027s weight, so I can keep my TWR constant. I\u0027ve managed to get my thrust-to-MASS constant, but I\u0027m having a lot of trouble trying to calculate my weight.\n\nFrom what I understand, weight = gravity \\* mass, and gravity = G \\* (mass[craft] \\* mass[kerbin])/distance^2. However, I can\u0027t get correct results out of kOS.\n\nHere\u0027s what I\u0027m trying so far:\n\n    lock distance to SHIP:ALTITUDE \u002B BODY(\u0022Kerbin\u0022):RADIUS.lock gravity to CONSTANT():G * ((SHIP:MASS* BODY(\u0022Kerbin\u0022):MASS * 1000) / ( distance * distance )).lock weight to (SHIP:MASS) * gravity.print \u0022distance:\u0022 \u002B distance.print \u0022grav:\u0022 \u002B gravity.print \u0022weight:\u0022 \u002B weight.\n\nkOS returns SHIP:MASS in metric tons, not kilograms, so I have multiplied by 1000 to get kg.\n\nThe craft has a mass of 2,779kg, however this gives the weight as 75,723kg! That\u0027s likely because it has gravity as 27,251 when, as far as I understand, it should be just 9.8.\n\nWhat am I doing wrong? I figure I have units crossed somewhere. Or does Kerbin have fixed gravity that differs from what it should have for its mass and size?\n\n**Edited \u003Ctime datetime=\u00222015-07-19T01:32:51Z\u0022 title=\u002207/19/2015 01:32  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 19, 2015\u003C/time\u003E by Hyperlynx**"},{"CreatedByName":"FancyMouse","CreatedById":142946,"CreatedDateTime":"2015-07-18T05:47:46Z","Content":"(not so important but you could have use body()::mu)\n\nyour gravity variable is already weight - why do you multiply by mass again?"},{"CreatedByName":"Reddeyfish","CreatedById":142160,"CreatedDateTime":"2015-07-18T05:55:31Z","Content":"You have an extra SHIP:MASS term.\n\nif your \u0027gravity\u0027 variable is meant to be the acceleration due to gravity, then the equation should be CONSTANT():G \\* ((BODY(\u0022Kerbin\u0022):MASS \\* 1000) / ( distance \\* distance )). \n\n(remove the ship\u0027s mass)\n\nIf your gravity variable is meant to be the force due to gravity, then the equation to calculate gravity is correct and is equal to the weight."},{"CreatedByName":"Hyperlynx","CreatedById":90829,"CreatedDateTime":"2015-07-18T06:19:19Z","Content":"FancyMouse: I was under the impression that the formula for gravity was the acceleration under gravity, not the weight due to gravity. Not so?\n\nReddeyfish: the force of gravity is based on the mass of both bodies, though. Granted my ship\u0027s mass is infintesimal compared to Kerbin, but it still contributes. Have I got my formula for gravity wrong?"},{"CreatedByName":"FancyMouse","CreatedById":142946,"CreatedDateTime":"2015-07-18T06:20:13Z","Content":"**F**=GMm/r^2"},{"CreatedByName":"Laie","CreatedById":110461,"CreatedDateTime":"2015-07-18T06:47:03Z","Content":"If it\u0027s vital that I get local gravity right, I just add a gravmax gravioli thingy to the vessel and use SHIP:SENSORS:GRAV:MAG."},{"CreatedByName":"Sharpy","CreatedById":145504,"CreatedDateTime":"2015-07-18T07:06:01Z","Content":"*a = G\\*M/r^2 (1)*\n\n*F = m\\*a (2)*\n\n*F = G\\*M\\*m/r^2 (3)*\n\nYou mixed up two different equations, one for gravitational force and for gravitational acceleration. \n\n(1) is the acceleration. Applying Newton\u0027s second law (2) you obtain gravitational force (3), also called \u0022weight\u0022.\n\nWhat you did was taking (3) and multiplying it through all over *m* again - obtaining something... I think without a physical interpretation."},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-18T11:02:44Z","Content":"Also, in addition to what the others said above, be aware of this:\n\nYou\u0027ll have a much easier time if you leave the 1000 multiplier out and just store your weight variable as weight in kilonewtons rather than weight in newtons. This is because all the other forces and masses are returned in the \\*1000 scale already. This is the way the game \u0022thinks\u0022 under the hood all the time. To help reduce floating point error it\u0027s better to work with smaller magnitude numbers. When the stock panel shows a value like \u0022mass: 0.2 tonnes\u0022. that\u0027s not just how it displays to the user. That\u0027s really how it\u0027s doing the math itself too. The PART:MASS for that part will be returned as 0.2, not as 200.\n\n**Edited \u003Ctime datetime=\u00222015-07-18T11:07:26Z\u0022 title=\u002207/18/2015 11:07  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 18, 2015\u003C/time\u003E by Steven Mading**"},{"CreatedByName":"Hyperlynx","CreatedById":90829,"CreatedDateTime":"2015-07-19T01:20:26Z","Content":"Thanks guys! It works perfectly.\n\nThe finished code:\n\n    set stageTwoTWR to 1.3.//...set targetTWR to stageTwoTWR.lock distance to SHIP:ALTITUDE \u002B BODY(\u0022Kerbin\u0022):RADIUS.lock weight to CONSTANT():G * ((SHIP:MASS* BODY(\u0022Kerbin\u0022):MASS) / ( distance * distance )).lock THROTTLE to (targetTWR * weight) / (SHIP:MAXTHRUST \u002B 0.001).\n\n**Edited \u003Ctime datetime=\u00222015-07-19T01:39:34Z\u0022 title=\u002207/19/2015 01:39  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 19, 2015\u003C/time\u003E by Hyperlynx**"}]}