{"TopicId":58432,"ForumId":16,"TopicTitle":"Fuel crossfeed rules?","CreatedByName":"bames53","CreatedById":99349,"CreatedDateTime":"2014-01-01T01:18:46Z","PageNum":1,"Articles":[{"CreatedByName":"bames53","CreatedById":99349,"CreatedDateTime":"2014-01-01T01:18:46Z","Content":"\n\u003Cp\u003EThe KSP wiki doesn\u0027t seem to include any comprehensive article on fuel crossfeed. Can anyone explain the rules, if in fact there is a consistent set of rules? I\u0027ve been experimenting and I\u0027m starting to wonder.\u003C/p\u003E\u003Cp\u003EFor example these configurations allow all engines to take from the central fuel tank first:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/TKTQ38P.png\u0022 alt=\u0022TKTQ38P.png\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/4tZ16LY.png\u0022 alt=\u00224tZ16LY.png\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/ya3W2dU.png\u0022 alt=\u0022ya3W2dU.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EBut for some reason this doesn\u0027t, and instead uses only the radial tanks:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/ypwk43I.png\u0022 alt=\u0022ypwk43I.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EAlso I can\u0027t explain why this doesn\u0027t work:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/eOYK8a4.png\u0022 alt=\u0022eOYK8a4.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnd I had a hypothesis as to why this doesn\u0027t work:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/wAZG2ot.png\u0022 alt=\u0022wAZG2ot.png\u0022\u003E\u003C/p\u003E\u003Cp\u003Ebut it was contradicted by some of the above tests.\u003C/p\u003E\u003Cp\u003EAnd this doesn\u0027t work:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/TbWLR1j.png\u0022 alt=\u0022TbWLR1j.png\u0022\u003E\u003C/p\u003E\u003Cp\u003Edespite the fact that the engine and fuel tank have the same relative configuration as one of the earlier, working tests. In fact this lead me to a test that seems to prove that not only the connections between components matter, but that the positioning of components within the vehicle\u0027s heirarchy also matters.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/PVr9lDq.png\u0022 alt=\u0022PVr9lDq.png\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/psTyVHu.png\u0022 alt=\u0022psTyVHu.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThese two images are of two separate vehicles, where the only difference is the order in which the parts were added. Despite the identical connections between components the vehicles function differently. My initial hypothesis was that engines only take fuel from components higher up in the hierarchy, but that was disproven when I did manage to built a vehicle with an engine taking fuel from a sibling component.\u003C/p\u003E\u003Cp\u003ESo my questions are: is there some way of understanding fuel crossfeed that reveals a coherent and consistent system, or does fuel crossfeed involve a bunch of bugs and part specific idiosyncrasies that eliminate all hope for such consistency? If the latter, has experience with previous releases given any indication that this issue has received work in the past and is likely to improve with future releases?\u003C/p\u003E\n"},{"CreatedByName":"TheDarkStar","CreatedById":37056,"CreatedDateTime":"2014-01-01T05:58:16Z","Content":"\n\u003Cp\u003EThey mostly all make sense. Fuel can\u0027t flow \u0022up\u0022 the hierarchy; it only flows down (unless you add fuel flow lines). Also, fuel can\u0027t flow through probe cores or other command modules.\u003C/p\u003E\u003Cp\u003EThe second picture is the only odd one, where the wrong tank is being drained first. I\u0027ll test some things out in KSP eventually and see if I can figure out what\u0027s going on.\u003C/p\u003E\n"},{"CreatedByName":"Kerbart","CreatedById":78303,"CreatedDateTime":"2014-01-01T06:24:44Z","Content":"\n\u003Cp\u003EIt seems that two issues go on. First of all, as TheDarkStar mentioned, fuel will by default only flow \u003Cem\u003Edown\u003C/em\u003E the nodal hierarchy, not up.\u003C/p\u003E\u003Cp\u003ESecond, it looks like fuel is only pulled from the default attachment point. In #2, those FLT-400\u0027s have their default attachment point attached to x-feed capable girders. In #4, their default attachment point is empty. In #5 you have multiple problems. The quad connector is mounted upside down. Yes, it\u0027s x-feed compatible but its default fuel entry (the top) is connected to the very engine that is demanding the fuel. There are four tanks connected to it, \u003Cem\u003Ebut not to the point where fuel is supposed to be coming from\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EAt least I THINK that is what is going on.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-01-01T08:05:17Z","Content":"\n\u003Cp\u003EEach engine does a depth-first recursive scan of the ship for fuel it needs. If it uses two fuel types (liquid fuel/oxidizer), it does two separate scans, one for each fuel type.\u003C/p\u003E\u003Cp\u003EThe scan starts on the engine body, i.e. the engine part itself.\u003C/p\u003E\u003Cp\u003EResult of the scan is list of fuel tanks from which the engine draws fuel evenly (i.e. the same amount from each)\u003C/p\u003E\u003Cp\u003ERule 1: Each part can be only visited once, If it is visited for second time in particular search it returns empty list\u003C/p\u003E\u003Cp\u003ERule 2: Part performs scan on start of every fuel pipe ending in it. This scan is done in order in which pipes were installed. Then it makes an union of fuel tank sets each pipe scan returned and returns this list if it is not empty. If the list is empty, we go to further rules.\u003C/p\u003E\u003Cp\u003ERule 3: If the part is not crossfeed capable, it returns empty list\u003C/p\u003E\u003Cp\u003ERule 4: Part performs scan on each of its axially mounted neighbors (mounted through \u0022green balls\u0022 in VAB). Most parts have two, hubs have six. Couplers (bicoupler, tricoupler, ...) are exception, they only scan the \u0022single point\u0022 one, skip the points on the side where multiple points are. Again, the part creates union of scan lists from each of its neighbor and if it is not empty, returns this list. If the list is empty, we go to further rules.\u003C/p\u003E\u003Cp\u003ERule 5: If the part is fuel container for searched type of fuel (i.e. it has capability to contain that type of fuel and the fuel type was not disabled) then:\u003C/p\u003E\u003Cp\u003ERule 5a: If the part contains fuel of searched type, it returns itself\u003C/p\u003E\u003Cp\u003ERule 5b: If the part doesn\u0027t contain fuel of searched type (is empty container), it returns empty list\u003C/p\u003E\u003Cp\u003ERule 6: If the part is radially attached to another part and it is child of that part in the ship\u0027s tree structure, it scans its parent and returns whatever the parent scan returned.\u003C/p\u003E\u003Cp\u003EEdit: I made a \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/64362-Fuel-Flow-Rules-%280-23%29\u0022 rel=\u0022external nofollow\u0022\u003EFuel Flow Tutorial\u003C/a\u003E with some more details and experiments. I think it may come handy in the future.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-01T10:57:14Z\u0022 title=\u002201/01/2014 10:57  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 1, 2014\u003C/time\u003E by Kasuha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"bames53","CreatedById":99349,"CreatedDateTime":"2014-01-01T13:21:33Z","Content":"\n\u003Cp\u003EHere\u0027s my test for fuel flowing \u0027up\u0027 a vehicle\u0027s hierarchy:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://imgur.com/CEhXaMz\u0022 alt=\u0022CEhXaMz\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnd here\u0027s an example of fuel flowing through a probe core.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/5qPIkJK.png\u0022 alt=\u00225qPIkJK.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"bames53","CreatedById":99349,"CreatedDateTime":"2014-01-01T13:37:31Z","Content":"\n\u003Cp\u003EThe third image in my original post shows a part pulling fuel from a point other than it\u0027s default attachment point.\u003C/p\u003E\u003Cp\u003ESo far, it\u0027s true, I haven\u0027t been able to get fuel to flow \u0027backwards\u0027 through a quad-coupler, but that seems to be part specific as fuel can flow backwards through the other parts I\u0027ve tried E.g. flowing up instead of down through a structural fuselage.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-01-01T13:42:34Z","Content":"\n\u003Cp\u003EOnly radial attachment scan cares about which part is parent and which part is child. Axial attachments are scanned in any direction. And fuel has no problem being drawn through probe cores and any other fuel crossfeed capable parts.\u003C/p\u003E\u003Cp\u003EIf you attach an engine radially to the middle of a fuel tank stack, it will draw the fuel from both ends of the stack, too. If you use the hub part which has six attach points, fuel can be drawn from all of them as long as you use a pipe to draw the fuel out of the hub.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-01T13:48:25Z\u0022 title=\u002201/01/2014 01:48  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 1, 2014\u003C/time\u003E by Kasuha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"bames53","CreatedById":99349,"CreatedDateTime":"2014-01-01T13:53:22Z","Content":"\n\u003Cp\u003EThanks, Kasuha, that\u0027s exactly the sort of thing I\u0027m hoping checks out. It seems like the rules you show will depend a lot on exactly how the depth first traversal works. Already it\u0027s clear that, if your rules are accurate, the traversal doesn\u0027t necessary visit all the connected parts. If it did then a centrally connected engine could take fuel from radially connected tanks. Anyway I\u0027ll have to take a closer look and test out these rules. Thanks again.\u003C/p\u003E\n"}]}