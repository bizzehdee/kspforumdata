{"TopicId":95967,"ForumId":16,"TopicTitle":"Performance of game is.........","CreatedByName":"lextacy","CreatedById":107955,"CreatedDateTime":"2015-01-08T00:20:43Z","PageNum":1,"Articles":[{"CreatedByName":"lextacy","CreatedById":107955,"CreatedDateTime":"2015-01-08T00:20:43Z","Content":"\n\u003Cp\u003E......not terrible at all if you have tons of mods. That just slows your loading time down before game loads. I have discovered that the reason your game gets bad frame rate regardless if you have a 1200$ computer is because of the flight count. At about 90 flights your CPU get bogged down with all those calculations. And this is when no high part count vessels are actively loaded. THATS A DIFFERENT STORY! For example go launch a 1 part craft with 90 vessels in orbit. You frame rate should be 1 frame per second. Does anyone here have any tips on tweaking the CPU load so we can have a decent amount of flights and no slowdowns?\u003C/p\u003E\u003Cp\u003EDiscuss your findings. Also post your system specs and you frame rates with a 1 part vessel.\u003C/p\u003E\n"},{"CreatedByName":"SaturnV","CreatedById":79006,"CreatedDateTime":"2015-01-08T00:58:01Z","Content":"\n\u003Cp\u003EI don\u0027t have that much ships on orbit, but Scott Manly fly kind of smooth in his video. He got a lot ship on rail and a lot mod installed.\u003C/p\u003E\u003Cp\u003EIn my save, I found that MJ or KER will drop the dps a lot, especially with low update interval.\u003C/p\u003E\u003Cp\u003EBTW I don\u0027t think 90 vessels in orbit will cost much CPU power, because KSP calculate orbit data only for vessels out of physical range. IIRC physical calculation is the largest CPU-eater, not orbit calculation, even 90 of them.\u003C/p\u003E\n"},{"CreatedByName":"Jon144","CreatedById":80626,"CreatedDateTime":"2015-01-08T01:08:07Z","Content":"\n\u003Cp\u003EKSP uses an engine that can only effectively run physics calculations on a single computer core. KSP makes really complicated physical calculations but only does so on about 20% of someones computer. Frame-rate is bad the more calculations there are no matter what computer you are using because the game will never use its full capacity.\u003C/p\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2015-01-08T01:19:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SaturnV\u0022 data-cite=\u0022SaturnV\u0022\u003E\u003Cdiv\u003EBTW I don\u0027t think 90 vessels in orbit will cost much CPU power, because KSP calculate orbit data only for vessels out of physical range. IIRC physical calculation is the largest CPU-eater, not orbit calculation, even 90 of them.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is not entirely true, because the game has to check each ship to see if it\u0027s crossing an SOI boundary or crashing. I believe it also does this for landed vehicles (and flags!).\u003C/p\u003E\u003Cp\u003EI\u0027ve always assumed each ship counted about as much as a part. So you can fly a 500-part vessel in a clean game, or a 250 part vessel with 250 other ships (and debris, and bases, and flags) out there.\u003C/p\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2015-01-08T02:00:01Z","Content":"\n\u003Cp\u003EReally? It should just queue up times for SoI changes or whatever, and be done with that -- it can do conic patch predictions, after all.\u003C/p\u003E\u003Cp\u003E(I mean \u0022should\u0022 in the normative sense, not should as in I think that\u0027s how the code works.)\u003C/p\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2015-01-08T03:14:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EReally? It should just queue up times for SoI changes or whatever, and be done with that -- it can do conic patch predictions, after all.\u003Cp\u003E(I mean \u0022should\u0022 in the normative sense, not should as in I think that\u0027s how the code works.)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree, there\u0027s a lot of room for optimization in this area.\u003C/p\u003E\u003Cp\u003EThe proof that it doesn\u0027t do it ahead of time and just smoothly do it in the background is how you jump around oddly when you timewarp through an SOI change. If it was set up ahead of time, the game would just put you on the new conic patch at the correct place. As it is now the game is surprised by the change and just slaps a new conic patch down to match where your ship is after it blows past the SOI boundary at 10000x time warp.\u003C/p\u003E\n"},{"CreatedByName":"lextacy","CreatedById":107955,"CreatedDateTime":"2015-01-08T07:37:33Z","Content":"\n\u003Cp\u003EI hate how every second in real life , only half of the second has passed in-game.\u003C/p\u003E\n"},{"CreatedByName":"eddiew","CreatedById":127483,"CreatedDateTime":"2015-01-08T08:41:27Z","Content":"\n\u003Cp\u003EYeah, I\u0027ve noticed that all the loading between scenes at KSC gets longer and longer as I continue, even running off a decent SSD, with an i5 @ 4.3GHz. Too much of the in-memory state having to be serialised into the save file, methinks...\u003C/p\u003E\u003Cp\u003EAnd if 5thHorseman is right, then I think my habit of putting a flag in every visited biome isn\u0027t a good idea... 46 flights in progress, but only about 15 of them are ships/probes. Come on, Squad, flags as ships are totally unnecessary; fine grain latitude/longitude coordinates and 2 lines of text is all they need, but looking in the save file shows absolute heaps of data associated with them :/\u003C/p\u003E\u003Cp\u003E(I guess I\u0027ll delete my Mun/Minmus flags and see what happens; done all the biomes there anyway.)\u003C/p\u003E\n"},{"CreatedByName":"RainDreamer","CreatedById":129077,"CreatedDateTime":"2015-01-08T09:29:14Z","Content":"\n\u003Cp\u003EShould mark flag the same way with debris.\u003C/p\u003E\n"},{"CreatedByName":"Rodyle","CreatedById":103194,"CreatedDateTime":"2015-01-08T09:34:38Z","Content":"\n\u003Cp\u003EThis seems unlikely. I remember a guy who put something like 500 pieces of debris into a kerbol orbit to see how they would spread out over the entire system, interacting with other bodies and whatnot. If this is true for everyone, his computer would\u0027ve gotten to the point of a standstill.\u003C/p\u003E\u003Cp\u003EEDIT: that came out the wrong way. If you say that this happens to you, I believe you. However, I\u0027m not sure if it\u0027s an issue for everyone. Tell us more. What kind of CPU do you have? At which part counts for vessels does it choke up?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-08T09:41:34Z\u0022 title=\u002201/08/2015 09:41  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 8, 2015\u003C/time\u003E by Rodyle\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2015-01-08T10:58:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rodyle\u0022 data-cite=\u0022Rodyle\u0022\u003E\u003Cdiv\u003EThis seems unlikely. I remember a guy who put something like 500 pieces of debris into a kerbol orbit to see how they would spread out over the entire system, interacting with other bodies and whatnot. If this is true for everyone, his computer would\u0027ve gotten to the point of a standstill.\u003Cp\u003EEDIT: that came out the wrong way. If you say that this happens to you, I believe you. However, I\u0027m not sure if it\u0027s an issue for everyone. Tell us more. What kind of CPU do you have? At which part counts for vessels does it choke up?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve never actually tested it. KSP is finicky enough without me tossing 500 pieces of debris into orbit. I DO know that in one save I had about 50 flags and maybe 100 total ships and bases, and my larger ships (200 parts or so) dogged. Those same ships were fine before.\u003C/p\u003E\u003Cp\u003EI\u0027m not saying it\u0027s exactly 1:1, or even more than 1:10, I\u0027m saying ships and debris outside the physics sphere has a noticeable effect.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-08T11:22:53Z\u0022 title=\u002201/08/2015 11:22  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 8, 2015\u003C/time\u003E by 5thHorseman\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"eddiew","CreatedById":127483,"CreatedDateTime":"2015-01-08T11:36:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u00225thHorseman\u0022 data-cite=\u00225thHorseman\u0022\u003E\u003Cdiv\u003E...I\u0027m saying ships and debris outside the physics sphere has a noticeable effect.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree that it\u0027s definitely noticeable. My first playthrough, using RT2, I didn\u0027t care about avoiding debris and had ~100 probes, satellites, ships, flags, etc and it was... slow. Devastatingly so.\u003C/p\u003E\u003Cp\u003EWhich is a shame, because the on-rails background stuff is an absolute prime candidate for a 2nd thread. If anything can be parallelised, it\u0027ll be the stuff that\u0027s not actually relevant to the scene you\u0027re in!\u003C/p\u003E\n"},{"CreatedByName":"TrooperCooper","CreatedById":110599,"CreatedDateTime":"2015-01-08T14:42:14Z","Content":"\n\u003Cp\u003EI currently have more than 50 active flights in my career plus 137 pieces of debries floating arround. Yet, I am not noticing any considerable lag-effect from those \u0022out of physics range-\u0022 objects while flying other ships.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/TTYcaNu.jpg\u0022 alt=\u0022TTYcaNu.jpg\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-08T14:44:36Z\u0022 title=\u002201/08/2015 02:44  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 8, 2015\u003C/time\u003E by TrooperCooper\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"rkman","CreatedById":15721,"CreatedDateTime":"2015-01-09T15:47:06Z","Content":"\n\u003Cp\u003EI to have noticed a considerable reduction in framerate with increasing number of on-going flights. I\u0027ve always found it odd because all those flight are \u0027on rails\u0027, so the only thing slowing it down could be keeping track of the position of the vessels on their respective orbits. \u003C/p\u003E\u003Cp\u003EIt generally does not take much to push a PC that meets minimum requirements (2.5GHz quad core) into the yellow (a few mods, a 150 part ship). It\u0027s odd that people\u0027s experience with this varies so greatly, though it could depend a lot on PC performance.\u003C/p\u003E\n"},{"CreatedByName":"MarvinKitFox","CreatedById":99545,"CreatedDateTime":"2015-01-09T20:52:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rodyle\u0022 data-cite=\u0022Rodyle\u0022\u003E\u003Cdiv\u003EThis seems unlikely. I remember a guy who put something like 500 pieces of debris into a kerbol orbit to see how they would spread out over the entire system, interacting with other bodies and whatnot. If this is true for everyone, his computer would\u0027ve gotten to the point of a standstill.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/69816-A-preliminary-study-into-the-Migratory-Habits-of-the-common-Octo-2\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/69816-A-preliminary-study-into-the-Migratory-Habits-of-the-common-Octo-2\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThe game sped up immensely as soon as the flock of octo\u0027s left physics range. By a factor of 40 to 50, at least.\u003C/p\u003E\u003Cp\u003EThe calculation load of a non-physics-loaded item is *******way******* less than of the loaded \u0026amp; displayed object.\u003C/p\u003E\n"},{"CreatedByName":"jmbailey2000","CreatedById":102740,"CreatedDateTime":"2015-01-09T22:53:04Z","Content":"\n\u003Cp\u003EI too noticed a tremendous slow down in .2x as more ships were added and debris created. I eventually pulled the plug on debris and set it in settings for there to be no debris maintained at all. Helped a lot (until I added more ships/bases!!!). I\u0027m hoping a new Unity engine will takes things to multi-threaded, especially since I just fired up an I7 PC!\u003C/p\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2015-01-10T00:13:49Z","Content":"\n\u003Cp\u003EI poked around a bit.\u003C/p\u003E\u003Cp\u003EEach frame, each vessel in the game tests a couple things:\u003C/p\u003E\u003Cp\u003E1. did it enter physics range? If so, go off rails.\u003C/p\u003E\u003Cp\u003E2. did it change SoI? If so, update the orbit parameters.\u003C/p\u003E\u003Cp\u003E3. maybe some other stuff, but I had already poked enough to see what I needed.\u003C/p\u003E\u003Cp\u003EPoint (2) is pretty easy to fix. The simplest way: Every on-rails vessel solves for the time of an SoI change, and we only store the time of the next event. Every frame, we check if that time passed in the last frame. If so, check every vessel. You can do marginally better by doing more complicated stuff (maintain a priority queue), but it\u0027s probably not worth it.\u003C/p\u003E\u003Cp\u003EPoint (1) is harder: you can\u0027t solve for when an on-rails vessel will come within range, because the ship you control isn\u0027t following a known trajectory -- precisely because you\u0027re controlling it. You\u0027d need to maintain some proximity structure to avoid needing to check every vessel every frame. Not an insurmountable problem, but also probably not something you code, test, and deploy in an afternoon.\u003C/p\u003E\u003Cp\u003EParallelization I highly doubt would help. You\u0027ve only got ~500-1000 computations to do, and each one isn\u0027t very long. The problem is that you\u0027re doing them every frame.\u003C/p\u003E\n"},{"CreatedByName":"Anquietas314","CreatedById":8761,"CreatedDateTime":"2015-01-10T01:54:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EEvery on-rails vessel solves for the time of an SoI change, and we only store the time of the next event. Every frame, we check if that time passed in the last frame. If so, check every vessel. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy on earth would you check every vessel? Only one of them is going to have that SoI change; store both the time and the vessel (id) in question as part of the event. You\u0027re right that a priority queue would be a waste of time though; a simple vector (the dynamic array kind) would be faster than any other data structure for that even using the dumbest approach (storing the nearest events at the front of the vector) up to a few thousand elements. Yay cache-locality! A good (and simple) solution would be to use a vector with the elements at the \u003Cstrong\u003Eback\u003C/strong\u003E of the vector being the ones that will happen soonest. Adding near-future events and removing ones that just happened is dirt cheap, adding far-future ones doesn\u0027t need to happen often and due to cache locality is a non-issue until you\u0027re getting towards thousands of vessels with SoI changes.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EPoint (1) is harder: you can\u0027t solve for when an on-rails vessel will come within range, because the ship you control isn\u0027t following a known trajectory -- precisely because you\u0027re controlling it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile it\u0027s not as simple as on-rail SoI changes, you can technically consider entering physics range of another vessel to be similar to an SoI change, especially if you\u0027re using time-warp at the time. The ship you\u0027re controlling does actually have a known trajectory whenever it\u0027s not accelerating, but computing intersections with other vessels\u0027 physics range spheres in the current SoI for only the actively controlled ship should be cheap enough to be a non-issue even if you\u0027re doing it every frame. You could of course use something smarter as you suggested, but it wouldn\u0027t be worth it unless you have hundreds to thousands of other vessels in the current SoI.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EParallelization I highly doubt would help. You\u0027ve only got ~500-1000 computations to do, and each one isn\u0027t very long. The problem is that you\u0027re doing them every frame.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHaving a large number of (independent) small calculations is \u003Cstrong\u003Eexactly\u003C/strong\u003E the sort of situation where parallelization will give massive performance improvements (if done correctly), especially if it\u0027s done using GPU acceleration. An efficient bag of tasks implementation will work just fine too though, but the improvement will be smaller than with a GPU.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-10T02:03:30Z\u0022 title=\u002201/10/2015 02:03  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 10, 2015\u003C/time\u003E by armagheddonsgw\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2015-01-10T03:38:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022armagheddonsgw\u0022 data-cite=\u0022armagheddonsgw\u0022\u003E\u003Cdiv\u003EWhy on earth would you check every vessel?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBecause it\u0027s trivial, but gets almost all of the benefit. The comparison is what happens now, which is that there\u0027s a check of every vessel, every frame. The change would be to be doing every vessel, only on frames where something interesting happened; the rest of the time we check one number no matter how many vessels there are. However, it wouldn\u0027t help much because of point (1).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Ecomputing intersections with other vessels\u0027 physics range spheres in the current SoI for only the actively controlled ship should be cheap enough to be a non-issue even if you\u0027re doing it every frame.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat seems to contradict the rest of this thread, which is pointing out that iterating over hundreds of vessels every frame seems to actually be expensive.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EHaving a large number of (independent) small calculations is \u003Cstrong\u003Eexactly\u003C/strong\u003E the sort of situation where parallelization will give massive performance improvements...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E500 is not a large number.\u003C/p\u003E\n"},{"CreatedByName":"Anquietas314","CreatedById":8761,"CreatedDateTime":"2015-01-10T04:21:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EBecause it\u0027s trivial, but gets almost all of the benefit. The comparison is what happens now, which is that there\u0027s a check of every vessel, every frame. The change would be to be doing every vessel, only on frames where something interesting happened; the rest of the time we check one number no matter how many vessels there are. However, it wouldn\u0027t help much because of point (1).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat you propose is actually much more complicated than is necessary to solve the problem. You already know the vessel in question as you\u0027re computing the time for its SoI change; it\u0027s trivial to just store its id at the same time and use it later to retrieve the vessel, instead of having a for loop (aka a linear search) to find it. This doesn\u0027t require any additional overhead to comparing the times, except for the minor detail of having a few extra bytes per element. At worst, that\u0027ll cause cache misses slightly more often, but that won\u0027t be remotely significant given we\u0027re talking about ~16 byte elements (assuming 64 bit time and vessel id). \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EThat seems to contradict the rest of this thread, which is pointing out that iterating over hundreds of vessels every frame seems to actually be expensive.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, it doesn\u0027t. What is demonstrated is that the current implementation is stupidly inefficient for what it\u0027s trying to do. Computing intersections between a sphere and either an ellipse, parabola (rare) or hyperbola is trivially inexpensive; it should be no more than 100 floating point operations per test (that is, orbit/sphere intersection), although I don\u0027t have the exact algorithm to hand to give a more precise estimate.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003E500 is not a large number.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat depends on what you\u0027re talking about. If 500 of something is enough to cause significant overhead when done every frame (let\u0027s say 60 fps, so 30000 per second), then that 500 is way more than necessary to benefit from parallelization. With bag of tasks in particular, the overheads from making the task parallel are almost negligible assuming appropriate use of thread pooling, a lockfree data structure for the tasks, etc.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-10T04:30:21Z\u0022 title=\u002201/10/2015 04:30  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 10, 2015\u003C/time\u003E by armagheddonsgw\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lextacy","CreatedById":107955,"CreatedDateTime":"2015-01-10T06:17:58Z","Content":"\n\u003Cp\u003Eare you saying that the game has a chance of improvment during development using such theories?\u003C/p\u003E\n"},{"CreatedByName":"Anquietas314","CreatedById":8761,"CreatedDateTime":"2015-01-10T06:51:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lextacy\u0022 data-cite=\u0022lextacy\u0022\u003E\u003Cdiv\u003Eare you saying that the game has a chance of improvment during development using such theories?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEssentially yes, but in fairness the performance improvements would probably go unnoticed by most people; not everyone has 200\u002B vessels (including debris) \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"lextacy","CreatedById":107955,"CreatedDateTime":"2015-01-10T22:56:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022armagheddonsgw\u0022 data-cite=\u0022armagheddonsgw\u0022\u003E\u003Cdiv\u003EEssentially yes, but in fairness the performance improvements would probably go unnoticed by most people; not everyone has 200\u002B vessels (including debris) \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was jealous of that guy in the video who had 500 OCOT2 , but also had better frames when I have 90 flights.\u003C/p\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2015-01-11T01:23:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lextacy\u0022 data-cite=\u0022lextacy\u0022\u003E\u003Cdiv\u003Eare you saying that the game has a chance of improvment during development using such theories?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy claim is that making asymptotic improvement is hard.\u003C/p\u003E\u003Cp\u003EYou can easily solve the vast bulk of the first half of the problem (checking if ships changed SoI), but the second half (checking if ships entered the active vessel\u0027s physics range) is a lot of work.\u003C/p\u003E\u003Cp\u003EAnd that means that you won\u0027t be able to change the fact that having more vessels means the game runs slower.\u003C/p\u003E\u003Cp\u003Earmagheddonsgw seems to be excited about techniques to speed up the per-frame overhead of having more ships.\u003C/p\u003E\n"},{"CreatedByName":"Anquietas314","CreatedById":8761,"CreatedDateTime":"2015-01-11T19:29:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EMy claim is that making asymptotic improvement is hard.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn general this is true of improving on some \u0022best\u0022 algorithm for a particular task (good example: matrix multiplication), but improving on a poor ad-hoc implementation is frequently quite easy. We seem to be dealing with the latter case.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EYou can easily solve the vast bulk of the first half of the problem (checking if ships changed SoI), but the second half (checking if ships entered the active vessel\u0027s physics range) is a lot of work.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe thing is, these are both instances of \u003Cem\u003Eexactly\u003C/em\u003E the same problem: finding the intersection time between the orbit of a player-controlled ship and some fixed, moving sphere which has its own orbit. The only difference is the size of the sphere, which I suppose you could argue makes it trickier due to floating point errors. With physics spheres, the other ship behaves basically the same as, say, Mun, until you actually enter physics range. Sidestepping the detail that the other ship may itself have future SoI changes, but as far as the maths is concerned it doesn\u0027t really matter; you\u0027d just need to check the physics intersection happens before the SoI change.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003EAnd that means that you won\u0027t be able to change the fact that having more vessels means the game runs slower.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESure, but that\u0027s really a fundamental part of programming. Having more of something to process means processing it will take longer; that\u0027s completely unavoidable. We can however get it to the point where it takes absolutely absurd numbers (hundreds of thousands to millions) of vessels for it to matter \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022numerobis\u0022 data-cite=\u0022numerobis\u0022\u003E\u003Cdiv\u003Earmagheddonsgw seems to be excited about techniques to speed up the per-frame overhead of having more ships.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHeh, I think \u0022excited\u0022 is probably the wrong word. Programming is essentially my \u0022day job\u0022 (currently unpaid... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cry.gif\u0022 alt=\u0022;.;\u0022\u003E), although it is something I thoroughly enjoy \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003C/p\u003E\n"}]}