{"TopicId":34196,"ForumId":44,"TopicTitle":"Simple orbit simulation problem","CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-21T23:47:57Z","PageNum":1,"Articles":[{"CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-21T23:47:57Z","Content":"\n\u003Cp\u003EHello, i have been trying to program REALLY simple simulation of an orbit, i currently just use a simple kinectic energy vector that i give originally some speed and then i just proceed to add the force of gravity to it on every step.\u003C/p\u003E\u003Cp\u003EOnly problem i have with this system is that orbit is always centered on the domain body and there seem to be 2 apoapses and 2 periapses, like this\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://files.1337upload.net/orbitfail_1.png\u0022 alt=\u0022orbitfail_1.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EWhat force or variable have i failed to account for when this always keeps happening?\u003C/p\u003E\n"},{"CreatedByName":"metaphor","CreatedById":57640,"CreatedDateTime":"2013-06-22T02:52:33Z","Content":"\n\u003Cp\u003EAre you using Cartesian or radial coordinates? If you just have velocity and you add the acceleration from gravity to it at every step you should have an actual orbit. Kinetic energy is not a vector, it doesn\u0027t have a direction.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-06-22T03:17:49Z","Content":"\n\u003Cp\u003EI think you can get a centered ellipse like that (instead of the center of the planet being at a focus of the ellipse, like it should be) when you assume a constant gravity force instead of an inverse-square force magnitude. Or maybe it\u0027s when you leave out the Coriolis term in polar coordinates, so the angular velocity is constant instead of the angular momentum.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-22T03:25:50Z\u0022 title=\u002206/22/2013 03:25  AM\u0022 data-short=\u002211 yr\u0022\u003EJune 22, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-06-22T04:42:03Z","Content":"\n\u003Cp\u003EEllipse like that corresponds to a body in central harmonic potential. I suspect it\u0027s due to the way you are dealing with force as a vector, but you\u0027ll have to paste a portion of your code to say with certainty where the problem is.\u003C/p\u003E\n"},{"CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-22T12:25:56Z","Content":"\n\u003Cp\u003EOkay, i shall now explain the system i have used more clearly. Because of the simple nature of this i use two components to represent to motion on the 2D coordinate system, these are hspeed for horizontal speed and vspeed for vertical speed. In the beginning of the program i have hspeed on the value of 0.7 so that the craft will have its motion to keep it on the orbit.\u003C/p\u003E\u003Cp\u003EEvery step of the program i calculate the gravitational force and calculate its components and just simply add the components of the hspeed and vspeed variable. Using these hspeed and vspeed variables i move the spaceship every step.\u003C/p\u003E\u003Cp\u003EThis is the code i use to calculate the gravitational force:\u003C/p\u003E\u003Cp\u003Egrav=((Gcon*Mse*(5.9*10^24))/(distance_to_point(earth.x,earth.y)*50)^2)\u003C/p\u003E\u003Cp\u003EGcon is the gravitational constant and Mse is the mass of the craft.\u003C/p\u003E\n"},{"CreatedByName":"softweir","CreatedById":2795,"CreatedDateTime":"2013-06-22T12:51:31Z","Content":"\n\u003Cp\u003EAre you remembering to calculate A=F/m where A is the acceleration due to gravity, F is the gravitational force and m is the mass of the spaceship? You don\u0027t add force to velocity, you add acceleration to velocity!\u003C/p\u003E\u003Cp\u003EAnother way is to calculate A directly as:\u003C/p\u003E\u003Cp\u003EAcc = Gcon*5.9*10^24 / (distance_to_point(earth.x,earth.y)*50)^2\u003C/p\u003E\u003Cp\u003E.... in other words, just leave out the mass of the spaceship.\u003C/p\u003E\n"},{"CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-22T13:29:29Z","Content":"\n\u003Cp\u003EI did the things above and this still doesn\u0027t seem right\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://files.1337upload.net/Untitled_28.png\u0022 alt=\u0022Untitled_28.png\u0022\u003E\u003C/p\u003E\u003Cp\u003Eat the moment i have no idea what force or variable i have forgot to account for\u003C/p\u003E\n"},{"CreatedByName":"Epthelyn","CreatedById":57970,"CreatedDateTime":"2013-06-22T13:50:05Z","Content":"\n\u003Cp\u003EYou should be able to keep the mass of the spacecraft. After all, although the mass of the spacecraft is negligible relative to the planet, if you want to replace it with larger object later you\u0027re better off leaving it in and getting it to work. Are you sure the problem you\u0027re having isn\u0027t due to some other part of the simulation? The formula is correct.\u003C/p\u003E\n"},{"CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-22T13:55:38Z","Content":"\n\u003Cp\u003EThe problematic thing is, that this is everything that there is to it at this state, there is just a static planet and an orbiter that only does get its speed at the start and counts the gravity to itself and applies its acceleration.\u003C/p\u003E\n"},{"CreatedByName":"maltesh","CreatedById":17144,"CreatedDateTime":"2013-06-22T13:56:40Z","Content":"\n\u003Cp\u003EWithout seeing the rest of your code, it\u0027s going to be pretty much impossible to diagnose.\u003C/p\u003E\u003Cp\u003EThat said, you aren\u0027t going to get an absolutely perfect ellipse using the method you detailed, even if you implement everything correctly. The smaller your timestep, the closer the resulting path will be to a approximating a Keplerian orbit, but the step-and-calculate method is always going to result in shifting of the orbit over time.\u003C/p\u003E\n"},{"CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-22T14:07:42Z","Content":"\n\u003Cp\u003EI actually think i have found the problem here, which is that the program was cutting corners and variables got overflown and the program counted errors.\u003C/p\u003E\u003Cp\u003ENow i either need a better way of simulating this or some good way to cut down the numbers and have it still work rather same.\u003C/p\u003E\n"},{"CreatedByName":"maltesh","CreatedById":17144,"CreatedDateTime":"2013-06-22T14:22:01Z","Content":"\n\u003Cp\u003EThe question is: What are you trying to simulate?\u003C/p\u003E\u003Cp\u003EAre you ultimately headed for multi-body simulation, where every body gravitationally interacts with every other one? \u003C/p\u003E\u003Cp\u003EOr do you want to just put non-gravitating satellites in the gravitational field of the primary body, generate the Keplerian orbit that is defined by their initial position and velocity,and work out their positions as a function of time based on that orbit?\u003C/p\u003E\u003Cp\u003EThe former gets somewhat complicated for long-term accuracy. The latter is \u003Cem\u003Emostly\u003C/em\u003E straightforward.\u003C/p\u003E\n"},{"CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-22T15:52:28Z","Content":"\n\u003Cp\u003EI am just trying to have an simple satellite orbiting one domain object, so the latter\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-06-22T16:31:49Z","Content":"\n\u003Cp\u003EWhat are the exact formulae you evaluate on each step. This isn\u0027t just numerical mess, you definitely aren\u0027t computing relevant quantities correctly.\u003C/p\u003E\n"},{"CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-22T17:59:07Z","Content":"\n\u003Cp\u003EI am sorry everyone, the problem i had here was simply that i had too big numbers in these calculations, i compensated every number down and now have correct orbits.\u003C/p\u003E\u003Cp\u003EThanks for the help.\u003C/p\u003E\n"},{"CreatedByName":"MBobrik","CreatedById":59889,"CreatedDateTime":"2013-06-22T18:48:59Z","Content":"\n\u003Cp\u003EI don\u0027t claim to know what is wrong with your simulation ( you would have to show your code to be able to), but the \u0022naive\u0022 method of numerical integration ( simply summing up acceleration x timestep into velocity and velocity x timestep into position ) has very poor stability when applied to orbital dynamics. And as a result, the orbit will always drift (though most probably not much as what you\u0027ve shown ), even for small timesteps. Google some numerical methods, \u003Ca href=\u0022https://en.wikipedia.org/wiki/Leapfrog_integration\u0022 rel=\u0022external nofollow\u0022\u003Ethe leapfrog method\u003C/a\u003E is a bare minimum.\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2013-06-22T19:15:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fluoZor\u0022 data-cite=\u0022fluoZor\u0022\u003E\u003Cdiv\u003Ethe problem i had here was simply that i had too big numbers in these calculations, i compensated every number down and now have correct orbits.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECongratulations on making the effort! I\u0027m glad to hear that you figured it the source of your bug. An article you might be interested in is \u0022\u003Ca href=\u0022http://www.stewartcalculus.com/data/default/upfiles/LiesCalcAndCompTold.pdf\u0022 rel=\u0022external nofollow\u0022\u003ELies my Calculator and Computer Told Me\u003C/a\u003E\u0022. It is a bit old, but it still relevant to the issue you experienced.\u003C/p\u003E\n"},{"CreatedByName":"fluoZor","CreatedById":63735,"CreatedDateTime":"2013-06-22T20:43:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MBobrik\u0022 data-cite=\u0022MBobrik\u0022\u003E\u003Cdiv\u003EI don\u0027t claim to know what is wrong with your simulation ( you would have to show your code to be able to), but the \u0022naive\u0022 method of numerical integration ( simply summing up acceleration x timestep into velocity and velocity x timestep into position ) has very poor stability when applied to orbital dynamics. And as a result, the orbit will always drift (though most probably not much as what you\u0027ve shown ), even for small timesteps. Google some numerical methods, \u003Ca href=\u0022https://en.wikipedia.org/wiki/Leapfrog_integration\u0022 rel=\u0022external nofollow\u0022\u003Ethe leapfrog method\u003C/a\u003E is a bare minimum.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know it is not totally accurate but for my use, i do well enough using this method and forcing the craft into same position and speed on the end of each orbit to keep it from going too far. I am making space RTS with semi realistic orbit mechanics and try to avoid having too complex calculations for the units.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-06-22T21:16:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MBobrik\u0022 data-cite=\u0022MBobrik\u0022\u003E\u003Cdiv\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Leapfrog_integration\u0022 rel=\u0022external nofollow\u0022\u003Ethe leapfrog method\u003C/a\u003E is a bare minimum.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELeapfrog/Verlet only marginally improve stability of the orbital simulation, unfortunately. If you want to improve precision significantly, you have to go for higher order implicit RK integration, and that\u0027s a royal mess. And even then, you are going to have energy drifts. As far as I know, a general conservative method for n-body 1/r potential is not known.\u003C/p\u003E\u003Cp\u003EOf course, for a 2-body problem, you can always just fall back on analytic solutions.\u003C/p\u003E\n"},{"CreatedByName":"grawl","CreatedById":17329,"CreatedDateTime":"2013-06-22T22:19:02Z","Content":"\n\u003Cp\u003EHere is a thread that might help you out.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/32590-Maths-Physics-Equation-of-an-orbit\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/32590-Maths-Physics-Equation-of-an-orbit\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"metaphor","CreatedById":57640,"CreatedDateTime":"2013-06-23T03:09:06Z","Content":"\n\u003Cp\u003EIf you just have a single massive body generating gravity, you can calculate where a satellite will be at any time if you know its position and velocity at any other time, using the orbit equations. I think this is what KSP uses, which is much faster than numerical integration and will give a stable unchanging orbit over any amount of time.\u003C/p\u003E\n"}]}