{"TopicId":170110,"ForumId":36,"TopicTitle":"[WIP] Unity Editor Plugin","CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-01-26T17:52:54Z","PageNum":1,"Articles":[{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-01-26T17:52:54Z","Content":"\n\u003Cblockquote lang=\u0022en\u0022 style=\u0022text-align:center;\u0022 xml:lang=\u0022en\u0022\u003E\nWIP Repo [\u003Ca href=\u0022https://github.com/carter-james89/KSP-Unity-Editor-Plugin\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/carter-james89/KSP-Unity-Editor-Plugin\u003C/a\u003E]\n\u003C/blockquote\u003E\n\u003Cblockquote lang=\u0022en\u0022 style=\u0022text-align:center;\u0022 xml:lang=\u0022en\u0022\u003E\n\u00A0\n\u003C/blockquote\u003E\n\u003Cblockquote lang=\u0022en\u0022 style=\u0022text-align:center;\u0022 xml:lang=\u0022en\u0022\u003E\n\u003Cimg alt=\u0022WNttxj0.png\u0022 class=\u0022ipsImage\u0022 height=\u0022289\u0022 src=\u0022https://i.imgur.com/WNttxj0.png\u0022 width=\u00221024\u0022\u003E\u003C/blockquote\u003E\n\u003Cblockquote lang=\u0022en\u0022 style=\u0022text-align:center;\u0022 xml:lang=\u0022en\u0022\u003E\nEver wish you could play with KSP from the Unity editor? I have developed a way to do just that, using .net\u0027s Memory Mapped Files. This allows most of the development work to be done in the unity editor, meaning you have full debugging, realtime control via the editor, and elimination of the constant rebuild and KSP restart. Personally I have seen my progress explode in comparison to building native KSP plugins. As you can see I am currently using this technique to control Infernal Robotics, but there is no limitation on what this technique can control in KSP. Flight controls, part manipulation, and KSP world settings are all easily controlled from the Unity editor.\n\u003C/blockquote\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003EMemory Mapped Files\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\nThe closest example to this technique is kRPC, which I experimented with about a year ago when developing my F-22 drone racer. I discovered there was a significant delay between the server and client however. I was drawing a Vector3 representation every frame at my vessels position, which would fall further and further behind the craft as it\u0027s velocity increased. I have used Unity\u0027s uNet client and local server and have not experienced this lag before, which has me stumped on the cause. I would be interested to chat with someone who knows more about this mod, or anyone who has also experienced this.\n\u003C/p\u003E\n\u003Cp\u003E\nBecause of the lag I was experiencing with kRPC, I decided to build my own \u0022bridge\u0022 using Memory Mapped Files. These allow multiple processes to share memory space, which can be used to store several different types of data structures. While these are easily the fastest way to send data, there is one major complication for this project. Mmap files are only supported in .net 4\u002B, while KSP targets 3.5. My solution to this is to start a custom process at launch, which handles the memory map \u0022bridge\u0022, then I send/receive values via the process\u0027s i/o stream.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis allows me to send hundreds of values back and forth each frame, at 50\u002B ksp fps, which is perfect for the time being. My next goal however is to send much larger data structures over the bridge. I really want to get camera feeds from KSP into Unity, so that I can begin implementing VR control into my mods. I have successfully sent a Texture 2D byte array from a camera across the bridge on a frame-by-frame basis, but the problem is when I need to incorporate the process i/o. Converting the array to a string every frame gives less then 2fps in Unity. The solution to this is to get mMap files working in .net 3.5. I tried many different ways before settling on the additional process, with no luck. I do have a potential solution however, but could use some input from any .net guru\u0027s out there.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cb\u003EInverse\u003C/b\u003E\u003Cstrong\u003E\u00A0Kinematics\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe IK code is all custom, but it\u0027s pretty amature. I rely on SOHCAHTOA and the law of cosines for everything. Unity gives me a lot of cheats that aren\u0027t available in real time. Vector3.distance for example easily gives me the distance between two points. It all works though, and I plan to expand it out to more joints. The neck arm also allows rotational target matching.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/FeJs5k5g4Tg?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/EDwlRwMckks?start=163\u0026amp;feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003EPID Controller Servos\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nEach servo has it\u0027s own tunable PID loop which uses the error between the actual and IK servo angles as its process controller. This output sets the speed of the servo on a frame-by-frame basis. I only have a basic knowledge of PID tuning, so if anyone out there would like to share some advice it would be greatly appreciated.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cstrong\u003EGait Sequencing \u0026amp; Steering\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nRight now the only gait sequence that exists is walking at a set speed. Steering is the last thing I still need to do. I wrote some simple stride length adjustment code, which allows setting the desired stride length for both the right and left legs at the beginning of each stride. The actual steering is adjusted by a PID loop which decreases one side\u0027s stride length by a percentage of its default length. So my stride length is 2 meters, and the steering PID can shorten that by up to 5%.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/N7ZHFMBv7-Q?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr style=\u0022color:#222222;font-size:13px;\u0022\u003E\u003Cstrong style=\u0022font-family:Arial, Helvetica, sans-serif;color:rgb(34,34,34);font-size:13px;\u0022\u003ETerrain Mapping \u0026amp; Active Balance\u003C/strong\u003E\u003Cbr style=\u0022color:#222222;font-size:13px;\u0022\u003E\u003Cspan style=\u0022font-family:Arial, Helvetica, sans-serif;background-color:rgb(255,255,255);color:rgb(34,34,34);font-size:13px;\u0022\u003EThe hexapod now has full terrain mapping and navigation capabilities. Instead of using the vessel height to position the ground and foot targets, each foot target is now placed on the ground directly beneath it.\u003C/span\u003E\u003Cbr style=\u0022color:#222222;font-size:13px;\u0022\u003E\u003Cbr style=\u0022color:#222222;font-size:13px;\u0022\u003E\u003Cspan style=\u0022font-family:Arial, Helvetica, sans-serif;background-color:rgb(255,255,255);color:rgb(34,34,34);font-size:13px;\u0022\u003EEach hip target is now set according to the ground position of it\u0027t foot. There are two ways of setting the hip targets. Right now the hip targets are set at the average height of all the foot ground positions plus the target height. I\u0027ve realized since recording the video it would be best to just set the hip targets so that the vessel is always the target height above the ground. Or some combination of the two. The first method helps going up hill, while the second is preferable for down hill. Also setting the hip height half way between the highest (foot ground \u002B target height) and the lowest would be the way to insure each foot has the best chance of hitting it\u0027s target when going over extremely rugged terrain.\u003C/span\u003E\u003Cbr style=\u0022color:#222222;font-size:13px;\u0022\u003E\u003Cbr style=\u0022color:#222222;font-size:13px;\u0022\u003E\u003Cspan style=\u0022font-family:Arial, Helvetica, sans-serif;background-color:rgb(255,255,255);color:rgb(34,34,34);font-size:13px;\u0022\u003EThe vessel also knows if it is traversing up a hill, is level, or traversing down a hill, and sets the color of the ground accordingly. Right now nothing changes according to that, but eventually the gait will respond to the different slopes. I tried taking it out to the mountains but I still need to find a way to orient the gyroscope to a level surface, even when the launch point is not level. The triangle begin drawn on the ground represents the leg group that is actually moving the hexapod forward.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/qtR280F4g4k?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u00A0\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EVR Implimentation\u003C/strong\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs soon as I can get the camera feed from KSP to display to a render texture in Unity, I will be able to start moving forward with VR implementations. I have several things that will be pretty easy to accomplish right off the bat. I will be able to have the robotic head match the rotation of the HMD head, and display the camera feed to a HUD. I will also be able to control the arms of the mech using touch controllers. I have some thoughts on getting VR to work natively in KSP as well. This has been done before, with mixed results. I\u0027d like to see if I could do better.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedid=\u0022embed7820640227\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?app=core\u0026amp;module=system\u0026amp;controller=embed\u0026amp;url=https://gfycat.com/gifs/detail/openplushangelfish\u0022 style=\u0022height:877px;\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedid=\u0022embed4158470414\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?app=core\u0026amp;module=system\u0026amp;controller=embed\u0026amp;url=https://gfycat.com/gifs/detail/easyquarrelsomelabradorretriever\u0022 style=\u0022height:891px;\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ECollaboration and Testing\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nLet me know if you\u0027d like to contribute in any way. If you\u0027d like to help and know any Unity/C# that would be great, but I could use help with tuning and design as well. There are a lot of variables that need to be tweaked, as well as design changes to the mechs themselves. Let me know if you have any interest in helping and I can probably find something for you to do.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere is also the potential for a real life counterpart. This is something I would definitely need help with, as my hardware skills are almost non-existant. I am planing on buying a frame in the near future, and would love to have some help implementing my Unity controller in the real world. If this interests you, there is lots of info already on this thread page.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ETODO\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Cs\u003EVeering while walking\u003C/s\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nTurning in place\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cs\u003ETerrain Mapping\u003C/s\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cs\u003ETraversing slopes\u003C/s\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nQuadrapod/Bipedal Mech\n\u003C/li\u003E\n\u003Cli\u003E\nJumping/Extended flight\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nThanks for checking it out, lots more to come.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-02-25T18:47:24Z\u0022 title=\u002202/25/2019 06:47  PM\u0022 data-short=\u00225 yr\u0022\u003EFebruary 25, 2019\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2018-01-27T03:16:13Z","Content":"\n\u003Cp\u003E\n\u003Cimg alt=\u0022:confused:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 title=\u0022:confused:\u0022\u003E\u003Cimg alt=\u0022:0.0:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_shocked.gif\u0022 title=\u0022:0.0:\u0022\u003E\u003Cimg alt=\u0022:confused:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 title=\u0022:confused:\u0022\u003E that\u0027s pretty sick. Where are all the robotic fanboys? We know you\u0027re out there\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-01-29T16:13:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223278732\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517022973\u0022 data-ipsquote-userid=\u0022103177\u0022 data-ipsquote-username=\u0022Drew Kerman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/26/2018 at 9:16 PM, Drew Kerman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022:confused:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 title=\u0022:confused:\u0022\u003E\u003Cimg alt=\u0022:0.0:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_shocked.gif\u0022 title=\u0022:0.0:\u0022\u003E\u003Cimg alt=\u0022:confused:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 title=\u0022:confused:\u0022\u003E that\u0027s pretty sick. Where are all the robotic fanboys? We know you\u0027re out there\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHey thanks a lot. I know the robotics part isn\u0027t super useful to people, but I wanted to show off the memory mapped bridge. I have lots of plans to implement it in other non-robotic projects that people may find more useful.\n\u003C/p\u003E\n"},{"CreatedByName":"Colonel Cbplayer","CreatedById":102399,"CreatedDateTime":"2018-01-30T20:24:53Z","Content":"\n\u003Cp\u003E\nThis is epic!\u003Cbr\u003E\nOk after foaming at the mouth long enough to formulate a response I want to say this is exactly what I been looking for for years! I\u0027ll happily admit that my robots up to this point have been nothing more than fancy statues with features with little progress to change that. This looks like it would be a thousand times easier than using IR sequencer. I can not tell you my\u00A0gratitude for it escapes my ability for words.\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-01-30T20:38:05Z\u0022 title=\u002201/30/2018 08:38  PM\u0022 data-short=\u00226 yr\u0022\u003EJanuary 30, 2018\u003C/time\u003E by Colonel Cbplayer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-01-31T16:42:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223281605\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517343893\u0022 data-ipsquote-userid=\u0022102399\u0022 data-ipsquote-username=\u0022Colonel Cbplayer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n20 hours ago, Colonel Cbplayer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis is epic!\u003Cbr\u003E\nOk after foaming at the mouth long enough to formulate a response I want to say this is exactly what I been looking for for years! I\u0027ll happily admit that my robots up to this point have been nothing more than fancy statues with features with little progress to change that. This looks like it would be a thousand times easier than using IR sequencer. I can not tell you my\u00A0gratitude for it escapes my ability for words.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNice dude I\u0027m happy to hear you\u0027re jazzed about it. You know I\u0027ve been doing the same for years with not great results. Def not as good as your boston dynamics type dog or transformer though. I\u0027d love for you to incorporate this technique into your mechs.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nDo you happen to have any c#/dev experience? This isn\u0027t even close to being plug and play release ready. I could rig up a mech for you, but you\u0027d probably have to figure out the walking logic.\n\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2018-02-05T17:44:19Z","Content":"\n\u003Cp\u003E\nNow this is exciting!! I\u0027ve been wanting a simulation environment for testing out the mechanics of walking robots for ages, but never thought that KSP could be it, much less with my own parts!!\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m unfamiliar with unity programming but have done C#. What would it take to implement a custom algorithm with this? I am thinking this would be a great tool for designing and verifying my various walking robot designs before spending IRL money to actually build them!\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-05T19:15:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286265\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517852659\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNow this is exciting!! I\u0027ve been wanting a simulation environment for testing out the mechanics of walking robots for ages, but never thought that KSP could be it, much less with my own parts!!\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m unfamiliar with unity programming but have done C#. What would it take to implement a custom algorithm with this? I am thinking this would be a great tool for designing and verifying my various walking robot designs before spending IRL money to actually build them!\n\u003C/p\u003E\n\u003Cp\u003E\n//FROM ANOTHER THREAD\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92196-vr_dev/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292196\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92196-vr_dev/\u0022 rel=\u0022\u0022 style=\u0022color:#ffffff;font-size:12.6px;padding:0px 5px;\u0022\u003E@VR_Dev\u003C/a\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\u00A0I can\u0027t believe I didn\u0027t know about this before you posted. This is amazing!! I love how you\u0027ve got the two skeletons overlaid in the view showing the intended and actual position of the robot. My question now is, could this be used separate from / in addition to KSP, to control lets say this real robot that is collecting dust in my flat?\u00A0\u003C/span\u003E\u003Ca href=\u0022https://www.youtube.com/watch?v=sR4aj7tOwko\u0022 rel=\u0022external nofollow\u0022 style=\u0022background-color:#ffffff;color:#3d6594;font-size:14px;\u0022\u003Ehttps://www.youtube.com/watch?v=sR4aj7tOwko\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76163-zodiusinfuser/\u0026amp;do=hovercard\u0022 data-mentionid=\u002276163\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76163-zodiusinfuser/\u0022 rel=\u0022\u0022\u003E@ZodiusInfuser\u003C/a\u003E\u00A0Glad to hear you like the work so far. I was actually going to buy a hexapod kit like the ones you have, but didn\u0027t want to spend hundreds of dollars right off the bat.\u00A0So I decided to build one in KSP.\u00A0 Also in KSP it will be able to fly, which would be next to impossible IRL.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe skeletons both serve a purpose as well, in addition to showing the actual and desired position.\u00A0The speed of each\u00A0servos is\u00A0set every frame based on the error between the actual skeleton and the IK skeleton using a PID controller.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis could absolutely be used in the real world. All it needs is the input of the actual servo position, and it outputs what the servo should be set at. I use a couple built-in unity features (Vector3.Distance for example), which would have to be replaced with a real world counterpart, but it wouldn\u0027t be that hard to do.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only development you would need to do is for the actual\u00A0walking. The legs are coded to move to a target position, then you use logic to move that target position around, allowing the mech to walk. In mine, the target rotates around an anchor, then slides along the ground for the forward movement. You also have to set the target along the y axis, to move the hip to its desired location.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-05T19:27:08Z\u0022 title=\u002202/05/2018 07:27  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 5, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2018-02-05T19:37:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286357\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517858101\u0022 data-ipsquote-userid=\u002292196\u0022 data-ipsquote-username=\u0022VR_Dev\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, VR_Dev said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76163-zodiusinfuser/\u0026amp;do=hovercard\u0022 data-mentionid=\u002276163\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76163-zodiusinfuser/\u0022 rel=\u0022\u0022\u003E@ZodiusInfuser\u003C/a\u003E\u00A0Glad to hear you like the work so far. I was actually going to buy a hexapod kit like the ones you have, but didn\u0027t want to spend hundreds of dollars right off the bat.\u00A0So I decided to build one in KSP.\u00A0 Also in KSP it will be able to fly as well, which would be next to impossible IRL.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf you\u0027re wanting a cheap kit then check out the Hexy for around $300. I won\u0027t say how much mine cost to build but it was more than that...\n\u003C/p\u003E\n\u003Cp\u003E\nBeing able to fly is certainly an advantage KSP has over IRL, although I\u0027m sure some kind of drone \u002B walker could be made.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286357\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517858101\u0022 data-ipsquote-userid=\u002292196\u0022 data-ipsquote-username=\u0022VR_Dev\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, VR_Dev said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis could absolutely be used in the real world. All it needs is the input of the actual servo position, and it outputs what the servo should be set at. I use a couple built-in unity features (Vector3.Distance for example), which would have to be replaced with a real world counterpart, but it wouldn\u0027t be that hard to do.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe only potential issue I could foresee is that IRL servos often don\u0027t give you any angle back, meaning that the PID would not be able to compensate for weight due to gravity for instance. I guess a virtual model could be used to compensate for that though.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286357\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517858101\u0022 data-ipsquote-userid=\u002292196\u0022 data-ipsquote-username=\u0022VR_Dev\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 minutes ago, VR_Dev said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe skeletons both serve a purpose as well, in addition to showing the actual and desired position.\u00A0The speed of each\u00A0servos is\u00A0set every frame based on the error between the actual skeleton and the IK skeleton using a PID controller.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe only development you would need to do is for the actual\u00A0walking. The legs are coded to move to a target position, then you use logic to move that target position around, allowing the mech to walk. In mine, the target rotates around an anchor, then slides along the ground for the forward movement. You also have to set the target along the y axis, to move the hip to its desired location.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAh good, you\u0027ve abstracted the IK from the walking to become moving points around. This matches my mindset, in that the kinematics are \u0022just\u0022 an animation on top of a gait generator that moves a set of points around according to some rules set out. I\u0027ve been working on an idea for a while now of how to deal with lots of target points with different stride lengths to get full 2D motion control,\u00A0like in a First Person Shooter. Also, something that supports (omni-)wheels too.\u00A0I\u0027m nowhere near having something useable yet though, although the code I\u0027ve been writing is in C#.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m curious what you mean by rotating the target around an anchor. Is this related to the\u00A0motion path you are wanting the body to take, such as turning on the spot?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, this may be of interest to you (\u003Ca href=\u0022https://youtu.be/RjAyq2kmGT8?t=59s\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://youtu.be/RjAyq2kmGT8?t=59s\u003C/a\u003E). It\u0027s a trailer from a game that never got released, that has by far the best Quadruped IK and target control I\u0027ve seen in a game. I hope to be able to replicate this one day.\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2018-02-05T19:39:43Z","Content":"\n\u003Cp\u003E\nHmm, first thing that pops on my mind is some of \u003Ca href=\u0022https://www.arduino.cc/\u0022 rel=\u0022external nofollow\u0022\u003EArduino\u003C/a\u003E kit as possible more/less cheap controler for real life robot. I haven\u0027t get into arduino microcontrolers deeply, due to lack of free time and need for it, but as much as I was able to get info on it, it mostly use C\u002B\u002B as language for source code. Not exactly C#, but close enough if you get used to it.\n\u003C/p\u003E\n\u003Cp\u003E\nIt should be jus ta matter of proper wiring, depending of what you need to trigger, analog or digital output to control your robot. Some kind of \u0022driver\u0022 would probably be necessary in terms of relays or transistor switches that would provide power for motors and servos on robot. Some kind of sequencer/timer groups should not be hard to do with atmel microcontrolers, but logic how to execute certain sequence is different kind of animal.\n\u003C/p\u003E\n\u003Cp\u003E\nBut, yes, proper logic that made within game should be more/less easy to transfer in real life aplication. One of reasons why I like KSP and IR mod.\n\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2018-02-05T19:52:41Z","Content":"\n\u003Cp\u003E\nArduino\u00A0would definitely be my go-to for such a project, as I\u0027ve used them (and even designed my own) for other projects in the past. In fact\u00A0my hexapod has one\u00A0but not as the main servo driver unfortunately;\u00A0that is a custom thing that accepts serial commands. So at minimum, if Unity can output serial data over bluetooth then it could remote control real hardware quite easily. Having things run on-board as you point out would require porting from C# to C\u002B\u002B, which shouldn\u0027t be too hard as long as not too many libraries are used.\n\u003C/p\u003E\n\u003Cp\u003E\nIndeed, that\u0027s what I like about KSP and IR, that a lot of the knowledge and ideas can be transferred to IRL. In this case, if an algorithm could be designed and verified with KSP, that would be a lot faster than having to deal with real hardware, plus you get a physics engine with it too!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-05T19:53:25Z\u0022 title=\u002202/05/2018 07:53  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 5, 2018\u003C/time\u003E by ZodiusInfuser\u003C/strong\u003E\n\u003Cbr\u003Etypo\n\u003C/span\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2018-02-05T20:05:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286394\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517860361\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIndeed, that\u0027s what I like about KSP and IR, that a lot of the knowledge and ideas can be transferred to IRL. In this case, if an algorithm could be designed and verified with KSP, that would be a lot faster than having to deal with real hardware, plus you get a physics engine with it too!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nExactly.\n\u003C/p\u003E\n\u003Cp\u003E\nIf it is possible to create bluetooth comunication with C# (I\u0027m almost 99% sure it is possible) then it should not be too hard to create plugin compatible with unity game engine or even compatible plugin for KSP. People do similar stuff for some time:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed567623162\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/60620-custom-hardware-simpit-repository-for-people-who-take-ksp-a-little-too-far/\u0026amp;\u0026amp;do=embed\u0022 style=\u0022height:214px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://blog.arduino.cc/2018/01/24/create-a-custom-kerbal-space-program-cockpit-with-arduino/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://blog.arduino.cc/2018/01/24/create-a-custom-kerbal-space-program-cockpit-with-arduino/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf they have already created input/output commands from and to specialized KSP hardware controler, it should not be too difficult to extend it for IR mod.\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-05T22:23:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286381\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517859430\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/5/2018 at 1:37 PM, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf you\u0027re wanting a cheap kit then check out the Hexy for around $300. I won\u0027t say how much mine cost to build but it was more than that...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah I saw Hexy but the whole goal of this robotics adventure was to learn how to develop for the raspberry pi/arduino. I eventually want to program quadcopters, but I figured it would be smarter to start off on the ground. I\u0027d like to get into stuff like this.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/w2itwFJCgFQ?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nI\u0027ve already done a lot of flying programming in both kOS and native c#;\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/eawcsv3eOZM?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/ODFzVjPOzJQ?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nWingman kOS script\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00220D9abkV.png\u0022 class=\u0022ipsImage\u0022 height=\u0022584\u0022 src=\u0022https://i.imgur.com/0D9abkV.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286381\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517859430\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/5/2018 at 1:37 PM, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBeing able to fly is certainly an advantage KSP has over IRL, although I\u0027m sure some kind of drone \u002B walker could be made.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only potential issue I could foresee is that IRL servos often don\u0027t give you any angle back, meaning that the PID would not be able to compensate for weight due to gravity for instance. I guess a virtual model could be used to compensate for that though.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah a quadrapod that doubles as a quadcopter\u00A0is essentially my end goal in ksp. It would be nuts to see IRL too. Problem is the weight mostly.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI didn\u0027t know that about real servos,\u00A0I thought for sure you would get a position. Then again I know nothing about hardware. We could just drop the speed PID controls out and have a fixed speed.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286381\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517859430\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/5/2018 at 1:37 PM, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAh good, you\u0027ve abstracted the IK from the walking to become moving points around. This matches my mindset, in that the kinematics are \u0022just\u0022 an animation on top of a gait generator that moves a set of points around according to some rules set out. I\u0027ve been working on an idea for a while now of how to deal with lots of target points with different stride lengths to get full 2D motion control,\u00A0like in a First Person Shooter. Also, something that supports (omni-)wheels too.\u00A0I\u0027m nowhere near having something useable yet though, although the code I\u0027ve been writing is in C#.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m curious what you mean by rotating the target around an anchor. Is this related to the\u00A0motion path you are wanting the body to take, such as turning on the spot?\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, this may be of interest to you (\u003Ca href=\u0022https://youtu.be/RjAyq2kmGT8?t=59s\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://youtu.be/RjAyq2kmGT8?t=59s\u003C/a\u003E). It\u0027s a trailer from a game that never got released, that has by far the best Quadruped IK and target control I\u0027ve seen in a game. I hope to be able to replicate this one day.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah mine only walks in a straight line right now, barely. So there are still a lot of leg target commands/algorithms to be written. Three targets rotate around their center point for the lift and move forward cycle, while the other three leg targets just translate straight backwards for the forward motion. You can see the pink box that is the leg target anchor, then there is a forward position and rear position that the target moves between\n\u003C/p\u003E\n\u003Cp\u003E\nThat game is awesome. The IK is super smooth, and they have the gait figured out for every direction. Even for pushing things. That goes along with an idea I had where the hexapod could lift its two front arms for grabbing/shooting, then walk around like a quadrapod.\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286386\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517859583\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/5/2018 at 1:39 PM, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHmm, first thing that pops on my mind is some of \u003Ca href=\u0022https://www.arduino.cc/\u0022 rel=\u0022external nofollow\u0022\u003EArduino\u003C/a\u003E kit as possible more/less cheap controler for real life robot. I haven\u0027t get into arduino microcontrolers deeply, due to lack of free time and need for it, but as much as I was able to get info on it, it mostly use C\u002B\u002B as language for source code. Not exactly C#, but close enough if you get used to it.\n\u003C/p\u003E\n\u003Cp\u003E\nIt should be jus ta matter of proper wiring, depending of what you need to trigger, analog or digital output to control your robot. Some kind of \u0022driver\u0022 would probably be necessary in terms of relays or transistor switches that would provide power for motors and servos on robot. Some kind of sequencer/timer groups should not be hard to do with atmel microcontrolers, but logic how to execute certain sequence is different kind of animal.\n\u003C/p\u003E\n\u003Cp\u003E\nBut, yes, proper logic that made within game should be more/less easy to transfer in real life aplication. One of reasons why I like KSP and IR mod.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah I don\u0027t know much about any of that. Like I said I\u0027m all software, but I wanna learn arduino/raspberry pi. Also don\u0027t know c\u002B\u002B but I really want to learn that, else I could just create a wrapper for my c# library.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286394\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517860361\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/5/2018 at 1:52 PM, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nArduino\u00A0would definitely be my go-to for such a project, as I\u0027ve used them (and even designed my own) for other projects in the past. In fact\u00A0my hexapod has one\u00A0but not as the main servo driver unfortunately;\u00A0that is a custom thing that accepts serial commands. So at minimum, if Unity can output serial data over bluetooth then it could remote control real hardware quite easily. Having things run on-board as you point out would require porting from C# to C\u002B\u002B, which shouldn\u0027t be too hard as long as not too many libraries are used.\n\u003C/p\u003E\n\u003Cp\u003E\nIndeed, that\u0027s what I like about KSP and IR, that a lot of the knowledge and ideas can be transferred to IRL. In this case, if an algorithm could be designed and verified with KSP, that would be a lot faster than having to deal with real hardware, plus you get a physics engine with it too!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah this was always in the back of my mind, controlling a real bot from my unity controller. I always imaged it would be wired, but bluetooth would probably be the way to go. I never really mentioned in my main post but there is a plugin running on the craft in ksp, which acts as the\u00A0driver.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286407\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517861129\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/5/2018 at 2:05 PM, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nExactly.\n\u003C/p\u003E\n\u003Cp\u003E\nIf it is possible to create bluetooth comunication with C# (I\u0027m almost 99% sure it is possible) then it should not be too hard to create plugin compatible with unity game engine or even compatible plugin for KSP. People do similar stuff for some time:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed5059742794\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/60620-custom-hardware-simpit-repository-for-people-who-take-ksp-a-little-too-far/\u0026amp;\u0026amp;do=embed\u0022 style=\u0022height:211px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://blog.arduino.cc/2018/01/24/create-a-custom-kerbal-space-program-cockpit-with-arduino/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://blog.arduino.cc/2018/01/24/create-a-custom-kerbal-space-program-cockpit-with-arduino/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf they have already created input/output commands from and to specialized KSP hardware controler, it should not be too difficult to extend it for IR mod.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInteresting, I\u0027ll def look into it. You guys got me excited for a real world counterpart.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-12T17:09:10Z\u0022 title=\u002202/12/2018 05:09  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 12, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2018-02-06T16:44:26Z","Content":"\n\u003Cp\u003E\nThere is already complete module for arduino, for both, bluetooth or WiFi to extend capabilities of main controler.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://create.arduino.cc/projecthub/user206876468/arduino-bluetooth-basic-tutorial-d8b737\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://create.arduino.cc/projecthub/user206876468/arduino-bluetooth-basic-tutorial-d8b737\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://create.arduino.cc/projecthub/jeffpar0721/add-wifi-to-arduino-uno-663b9e\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://create.arduino.cc/projecthub/jeffpar0721/add-wifi-to-arduino-uno-663b9e\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFrom unity coding side, as much as I was able to understand trough quick peek, bluetooth is defined in windows system as additional \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E port in device manager. It should be possible to send/receive any kind of data on such \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E port as any other COMN port on machine. It is just a matter of writting proper software on arduino controler, to determine response on received commands and transmit some feednback to PC machine that comunicate with it.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223286381\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517859430\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n20 hours ago, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe only potential issue I could foresee is that IRL servos often don\u0027t give you any angle back, meaning that the PID would not be able to compensate for weight due to gravity for instance. I guess a virtual model could be used to compensate for that though.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWait. What ? Why you are not develop some cheap reliable way to determine exact position of angle on servos ? \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nJokes aside, it is probably easier to tell than do in real life. I haven\u0027t messed with electronics for ages, so first things that poped up on my mind is to use \u003Ca href=\u0022https://en.wikipedia.org/wiki/Variable_capacitor\u0022 rel=\u0022external nofollow\u0022\u003Evariable capacitors\u003C/a\u003E or \u003Ca href=\u0022https://en.wikipedia.org/wiki/Potentiometer\u0022 rel=\u0022external nofollow\u0022\u003Evariable resistors\u003C/a\u003E. Any kind of potentiometer might not be reliable enough, so variable capacitor in circuit with oscilator that provide AC signal with variable frequency might give more precise results. Other way may be usage of \u003Ca href=\u0022https://en.wikipedia.org/wiki/Photodiode\u0022 rel=\u0022external nofollow\u0022\u003Ephotodiodes\u003C/a\u003E. Initial thoughts with it would be to place photodiodes in circle on the edge of stator piece of robotic rotating part and light source on rotor of rotating part. As part rotate, only one of photodiode would be lighted (or maybe very few in neighborhood). Maping lighted photodiode with array of digital inputs can give good feedback about exact angle of robotic part. Other possible solution might be to use reflective surface of some kind on rotating part instead of active light source. Maybe even combination of light source - \u003Ca href=\u0022https://en.wikipedia.org/wiki/Optical_fiber\u0022 rel=\u0022external nofollow\u0022\u003Eoptic fiber\u003C/a\u003E - photodiode when you need to place large number of diodes in tight place. Since optic fiber thickness can be quite small in diameter (comparable to thickness of human hair) it could be possible to place photodiodes elsewhere in robot central body and only provide light source trough optic fiber. That coulod possibly give higher resolution of true angle position of servo motors.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyhow, that is just theoretical rambling, put something like this in practical use in real life application is different story. As I was writting this, I found that similar thing is already available, by using some kind of pattern on reflective surface that give feedback of servo angle position. Some kind of \u003Ca href=\u0022https://en.wikipedia.org/wiki/Rotary_encoder#Absolute_and_incremental_encoders\u0022 rel=\u0022external nofollow\u0022\u003Eabsolute rotary encoder\u003C/a\u003E. It is probably expencive due to specialised microcontroler and software used, so it might be out of reach for hobby usage. But that is area where arduino kicks in, with right kits used it may be reduce cost to acceptable level. Either is way out of my league to end up as expencive toy that will only collect dust over time, that is reason why I stick to the software/simulator only.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92196-vr_dev/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292196\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92196-vr_dev/\u0022 rel=\u0022\u0022\u003E@VR_Dev\u003C/a\u003E, your WIP project with unity integration might have good usage in real life other than just controling a robot trough arduino interface. With right sensors attached on robot, it can provide data back to unity what such robot can \u0022see\u0022 with sensors. Based on that data it should be possible to render 3D environment in unity game engine, giving accurate as possible feedback to human operator what is going on in robot nearby area. In some situations, for example in area full of smoke/dust or something where ordinary camera is useless, such data can be very valuable. It have a lot of potential usage, beside jsut for fun to use in game for personal pleasure. It is something worth to develop for certain.\n\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2018-02-06T17:18:28Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223287118\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517935466\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n34 minutes ago, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere is already complete module for arduino, for both, bluetooth or WiFi to extend capabilities of main controler.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://create.arduino.cc/projecthub/user206876468/arduino-bluetooth-basic-tutorial-d8b737\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://create.arduino.cc/projecthub/user206876468/arduino-bluetooth-basic-tutorial-d8b737\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://create.arduino.cc/projecthub/jeffpar0721/add-wifi-to-arduino-uno-663b9e\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://create.arduino.cc/projecthub/jeffpar0721/add-wifi-to-arduino-uno-663b9e\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFrom unity coding side, as much as I was able to understand trough quick peek, bluetooth is defined in windows system as additional \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E port in device manager. It should be possible to send/receive any kind of data on such \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E port as any other COMN port on machine. It is just a matter of writting proper software on arduino controler, to determine response on received commands and transmit some feednback to PC machine that comunicate with it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOh yes, I\u0027ve used Bluetooth as a \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E port before from a C\u002B\u002B application, just never from C#\u00A0or Unity. Writing a custom protocol would not be too hard from my experience, just requires a bit of forethought as to what you may want to support in the future.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223287118\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517935466\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n34 minutes ago, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWait. What ? Why you are not develop some cheap reliable way to determine exact position of angle on servos ? \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nJokes aside, it is probably easier to tell than do in real life. I haven\u0027t messed with electronics for ages, so first things that poped up on my mind is to use \u003Ca href=\u0022https://en.wikipedia.org/wiki/Variable_capacitor\u0022 rel=\u0022external nofollow\u0022\u003Evariable capacitors\u003C/a\u003E or \u003Ca href=\u0022https://en.wikipedia.org/wiki/Potentiometer\u0022 rel=\u0022external nofollow\u0022\u003Evariable resistors\u003C/a\u003E. Any kind of potentiometer might not be reliable enough, so variable capacitor in circuit with oscilator that provide AC signal with variable frequency might give more precise results. Other way may be usage of \u003Ca href=\u0022https://en.wikipedia.org/wiki/Photodiode\u0022 rel=\u0022external nofollow\u0022\u003Ephotodiodes\u003C/a\u003E. Initial thoughts with it would be to place photodiodes in circle on the edge of stator piece of robotic rotating part and light source on rotor of rotating part. As part rotate, only one of photodiode would be lighted (or maybe very few in neighborhood). Maping lighted photodiode with array of digital inputs can give good feedback about exact angle of robotic part. Other possible solution might be to use reflective surface of some kind on rotating part instead of active light source. Maybe even combination of light source - \u003Ca href=\u0022https://en.wikipedia.org/wiki/Optical_fiber\u0022 rel=\u0022external nofollow\u0022\u003Eoptic fiber\u003C/a\u003E - photodiode when you need to place large number of diodes in tight place. Since optic fiber thickness can be quite small in diameter (comparable to thickness of human hair) it could be possible to place photodiodes elsewhere in robot central body and only provide light source trough optic fiber. That coulod possibly give higher resolution of true angle position of servo motors.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyhow, that is just theoretical rambling, put something like this in practical use in real life application is different story. As I was writting this, I found that similar thing is already available, by using some kind of pattern on reflective surface that give feedback of servo angle position. Some kind of \u003Ca href=\u0022https://en.wikipedia.org/wiki/Rotary_encoder#Absolute_and_incremental_encoders\u0022 rel=\u0022external nofollow\u0022\u003Eabsolute rotary encoder\u003C/a\u003E. It is probably expencive due to specialised microcontroler and software used, so it might be out of reach for hobby usage. But that is area where arduino kicks in, with right kits used it may be reduce cost to acceptable level. Either is way out of my league to end up as expencive toy that will only collect dust over time, that is reason why I stick to the software/simulator only.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBecause most servos can be hacked to get their internal potentiometer value out, or you buy Dynamixels and be done with it :P. You are right that photodiodes and a reflective disc could also be used to get absolute position, but this can get really\u00A0complex if done DIY, or be very expensive if not.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-06T17:18:44Z\u0022 title=\u002202/06/2018 05:18  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 6, 2018\u003C/time\u003E by ZodiusInfuser\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2018-02-06T20:55:44Z","Content":"\n\u003Cp\u003E\nUsing \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E port in C# should not be much different than it is in C\u002B\u002B. Writting a plugin for unity is different story, though, but should not be impossible. Hey, we already got telnet communication with kOS, that suggest that communication trough \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E port is doable.\n\u003C/p\u003E\n\u003Cp\u003E\nYep, probably any idea to get absolute position already exist on market in some form as cheaper complete product than any hacky way you can made it for home usage. I carried away a bit with it, not using much of electronic stuff in RL for long time, so I don\u0027t know exactly what already exist on market and what not \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-06T22:21:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223287118\u0022 data-ipsquote-contentid=\u0022170110\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221517935466\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere is already complete module for arduino, for both, bluetooth or WiFi to extend capabilities of main controler.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92196-vr_dev/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292196\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92196-vr_dev/\u0022 rel=\u0022\u0022\u003E@VR_Dev\u003C/a\u003E, your WIP project with unity integration might have good usage in real life other than just controling a robot trough arduino interface. With right sensors attached on robot, it can provide data back to unity what such robot can \u0022see\u0022 with sensors. Based on that data it should be possible to render 3D environment in unity game engine, giving accurate as possible feedback to human operator what is going on in robot nearby area. In some situations, for example in area full of smoke/dust or something where ordinary camera is useless, such data can be very valuable. It have a lot of potential usage, beside jsut for fun to use in game for personal pleasure. It is something worth to develop for certain.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt would be cool to use WIFI, as that would probably be the most robust. I definitely would want to include sensors, but I\u0027ve always had the idea to stick one of these on a mech/quadcopter, for super accurate room tracking.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022gallery-1483576689-vive-puck.png?resize=\u0022 class=\u0022ipsImage\u0022 height=\u0022401\u0022 src=\u0022https://hips.hearstapps.com/pop.h-cdn.co/assets/17/01/2560x1338/gallery-1483576689-vive-puck.png?resize=768:*\u0022 width=\u0022768\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI have a couple laying around, and VIve\u0027s room tracking is accurate enough that you could program complex maneuvers (as long as its in a room rigged with lighthouses).\u00A0You could also then view the mech in VR, and someday AR, allowing for floating UI\u0027s around the robot.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-06T22:23:21Z\u0022 title=\u002202/06/2018 10:23  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 6, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2018-02-07T01:52:31Z","Content":"\n\u003Cp\u003E\nIf you\u0027re talking about tracking robots, then this is something I\u0027ve been very keen to get:\u00A0\u003Ca href=\u0022https://www.triadsemi.com/product/ts3633-cm1/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.triadsemi.com/product/ts3633-cm1/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWould let a robot know its exact position within a \u0022vive field\u0022 and could get around the lack of joint angle feedback if many were positioned correctly.\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-07T04:14:21Z","Content":"\n\u003Cp\u003E\nCrazy week at work for me but I did get some progress over the weekend. I rigged up the arm \u0022neck\u0022 with IK and PID servos. In terms of design I added another servo at the base of the head. This allows me to control the pitch of the head in addition to its position. Unfortunately I realized too late that servo only has a range of 60, so it will have to be replaced. I also added a rotator to control the roll of the head so that it can remain level along its z axis, when the body is not. The base of the whole neck has a rotator as well, which will swing the whole arm around. Neither of those are hooked up yet. Eventually I will use a combo of joystick/buttons to maneuver the head target around, as well as preset positions.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can see from the bouncyness the servos have to be tuned still. Also haven\u0027t figured out the extender yet. That presents an interesting challenge.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022PWyhkTA.png\u0022 class=\u0022ipsImage\u0022 height=\u0022490\u0022 src=\u0022https://i.imgur.com/PWyhkTA.png\u0022 width=\u0022570\u0022\u003E\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://thumbs.gfycat.com/BowedDesertedDuck-mobile.mp4\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://thumbs.gfycat.com/BowedDesertedDuck-mobile.mp4\u003C/a\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/FeJs5k5g4Tg?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u00A0\n\u003C/div\u003E\n\u003Cp\u003E\nThe other big thing I\u0027ve been working on is sending a render texture through my bridge. I got a camera feed down to byte array, which I can send via the bridge, but the problem comes from a critical failure in the design. KSP targets .net 3.5, and memory mapped files aren\u0027t supported unit 4\u002B. I tried a lot of ways to get around this problem, but eventually ended up starting a custom process at launch, then using the i/o for that process to send data over the bridge to unity. This works fine for single values, but encoding a byte array of a texture to strings every frame dropped the frame rate down to under 2 fps.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nReally the only solution to this is to eliminate the custom process, and get mmap files to work in 3.5.\u00A0 There seem to be a couple ways to do this, but they are very difficult. If there are any .net guru\u0027s out there, I think I have a solution, but I could use some help.\n\u003C/p\u003E\n\u003Cp\u003E\nI really want to get a camera feed from ksp into unity, because it opens a whole new world of things i could do in vr. Specifically having the neck arm mirror the heads rotation, and\u00A0displaying\u00A0the feed to a HUD of some sort.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-12T17:10:00Z\u0022 title=\u002202/12/2018 05:10  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 12, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-08T16:46:53Z","Content":"\n\u003Cp\u003E\nso this amazing\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/102399-colonel-cbplayer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022102399\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/102399-colonel-cbplayer/\u0022 rel=\u0022\u0022\u003E@Colonel Cbplayer\u003C/a\u003E\u00A0gfy really got me excited to go back to working on this guy.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedid=\u0022embed2009066001\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?app=core\u0026amp;module=system\u0026amp;controller=embed\u0026amp;url=https://gfycat.com/PointedShrillIndigowingedparrot\u0022 style=\u0022height:2319px;\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u00A0\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022G87yUjB.png\u0022 class=\u0022ipsImage\u0022 height=\u0022712\u0022 src=\u0022https://i.imgur.com/G87yUjB.png\u0022 width=\u0022893\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nIn terms of walking, I would like to build a quadrapod first, and develop some techniques for \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E management. But in the short term I think I\u0027ll rig up the arms, so that I can control the mech in VR just like this iron man project i was working on. I am controlling the arm here with a touch controller.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedid=\u0022embed4468281052\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?app=core\u0026amp;module=system\u0026amp;controller=embed\u0026amp;url=https://gfycat.com/OpenPlushAngelfish\u0022 style=\u0022height:776px;\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nI also used to use custom PID\u00A0to control the engine mounts, but I want to hook the IR straight up to the steeringmanager PID. So the IR engines would effectively work just like stock flaps. Nothing against Cbplayers transformer, but I would assume there is a fair amount of \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E controlling it. I would like the robotics to do all the work.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/rtee9CelAnk?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nThe main problem with getting this guy to walk is going to be the lack of motion along its back.\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76163-zodiusinfuser/\u0026amp;do=hovercard\u0022 data-mentionid=\u002276163\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76163-zodiusinfuser/\u0022 rel=\u0022\u0022\u003E@ZodiusInfuser\u003C/a\u003E\u00A0have you ever thought of some kind of ball joint?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-12T17:12:05Z\u0022 title=\u002202/12/2018 05:12  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 12, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-12T17:22:31Z","Content":"\n\u003Cp\u003E\nI updated the main thread with all my thoughts on this project. I will try my best to keep it updated as the project progresses. If anyone is interested in collaborating in development, or tuning/design of the mech\u0027s themselves, please let me know. I have a million ideas for this project, and I wont\u0027 be able to get to all of them by myself. There is also the potential for a real life counterpart. This is something I would definitely need help with, as my hardware skills. I am planing on buying a frame in the near future, and would love to have some help implementing my unity controller.\n\u003C/p\u003E\n\u003Cp\u003E\nCurrently I am trying to get a demo release of the project. I have started writing a custom editor that will expose all the tweakable variables the mech uses.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022fyi19Nk.png\u0022 class=\u0022ipsImage\u0022 height=\u0022263\u0022 src=\u0022https://i.imgur.com/fyi19Nk.png\u0022 width=\u0022483\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAs well as a UI to track groundspeed. This will be important for tuning the craft for top speed. You can see that in this simple VR demo video I made. Eventually you will be able to manipulate the head and arm targets with the VR hand. My end goal is to be\u00A0sitting in a cockpit, camera feeds as\u00A0the cockpit windows, and the mech skeleton displayed on a dash in front of me.\n\u003C/p\u003E\n\u003Cp\u003E\nVR Gif\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther ipsEmbeddedOther_limited\u0022\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedid=\u0022embed50420952\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?app=core\u0026amp;module=system\u0026amp;controller=embed\u0026amp;url=https://gfycat.com/gifs/detail/easyquarrelsomelabradorretriever\u0022 style=\u0022height:760px;\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-18T07:55:04Z\u0022 title=\u002202/18/2018 07:55  AM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 18, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-14T17:27:52Z","Content":"\n\u003Cp\u003E\nSo I finally got around to course correction while walking, which allowed the hexapod to walk the full length of the runway in about 15 minutes. I wrote some simple stride length adjustment code, which allows setting the desired stride length for both the right and left legs at the beginning of each stride. The actual steering is adjusted by a PID loop which decreases one side\u0027s stride length by a percentage of its default length. So my stride length is 2 meters, and the steering PID can shorten that by up to 5%.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can see in output log, at the beginning of every step cycle it prints the error, and what the stride is being adjusted by. Right now its just set to go straight, but when I start adjusting the launch vector, I will be able to control which direction the mech will travel. The stride length, PID settings, and max % can all be tweaked from my custom editor. I have been using it to do speed tests, which is why the rockets got lost.\n\u003C/p\u003E\n\u003Cp\u003E\nNext up is slope navigation. If you watch to the end of the video you\u0027ll see how great it is at it right now. One day I\u0027ll record with sound, but my gf and cats don\u0027t like the orchestra of IR servos moving.\n\u003C/p\u003E\n\u003Cp\u003E\nSteering GIf\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://gfycat.com/gifs/detail/pastinconsequentialamazondolphin\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://gfycat.com/gifs/detail/pastinconsequentialamazondolphin\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/N7ZHFMBv7-Q?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-18T07:56:18Z\u0022 title=\u002202/18/2018 07:56  AM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 18, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2018-02-14T18:59:15Z","Content":"\n\u003Cp\u003E\nAwesome!\u00A0I find funny that\u00A0since I was made aware of your efforts (and a friend for completely unrelated reasons asked me about walker motion), I\u0027ve been looking back at my 5\u002B year old notes and arrived at completely different solutions for steering and terrain adaptation. I actually did some code over\u00A0the weekend for the latter that I think would work well, but need to do more analysis to be sure.\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-19T22:09:17Z","Content":"\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/qtR280F4g4k?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMy gf was gone so I worked on this pretty much non\u00A0stop over the weekend. (Also why the recording actually has sound). The hexapod now has full terrain mapping and navigation capabilities. Instead of using the vessel height to position the ground and foot targets, each foot target is now placed on the ground directly beneath it.\n\u003C/p\u003E\n\u003Cp\u003E\nEach hip target is now set according to the ground position of it\u0027t foot. There are two ways of setting the hip targets. Right now the hip targets are set at the average height of all the foot ground positions plus the target height. I\u0027ve realized since recording the video it would be best to just set the hip targets so that the vessel is always the target height above the ground. Or some combination of the two. The first method helps going up hill, while the second is preferable for down hill. Also setting the hip height half way between the highest (foot ground \u002B target height) and the lowest would be the way to insure each foot has the best chance of hitting it\u0027s target when going over extremely rugged terrain.\n\u003C/p\u003E\n\u003Cp\u003E\nThe vessel also knows if it is traversing up a hill, is level, or traversing down a hill, and sets the color of the ground accordingly. Right now nothing changes according to that, but eventually the gait will respond to the different slopes. I tried taking it out to the mountains but I still need to find a way to orient the gyroscope to a level surface, even when the launch point is not level. The triangle begin drawn on the ground represents the leg group that is actually moving the hexapod forward.\n\u003C/p\u003E\n\u003Cp\u003E\nBuilding the terrain mapping box was pretty difficult, as there are 36 vertices being set each frame. It took a while but it was definitely worth it.\n\u003C/p\u003E\n\u003Cp\u003E\nDeveloping this process I found a couple of big mistakes in the gate code, which have now been fixed. The stride is now much smoother and more efficient than it used to be. I haven\u0027t done a top speed test yet after the fixes, but average speeds have picked up across the board. Still lots of tuning to be done.\n\u003C/p\u003E\n\u003Cp\u003E\nNext up is steering.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-19T22:38:55Z\u0022 title=\u002202/19/2018 10:38  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 19, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2018-02-20T16:18:14Z","Content":"\n\u003Cp\u003E\nSome slopes are still slippery for bot, but it walk much, much better than before \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E Great progress.\n\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2018-02-20T16:36:25Z","Content":"\n\u003Cp\u003E\nThat is one impressive terrain adaptation algorithm you\u0027ve got there! Am I right in thinking you check the height of the leg relative to the ground on each update rather than just on contact? I as\u00A0because if you were to translate this to IRL getting that height value won\u0027t be possible so another approach to terrain adaptation would be required, which is something I\u0027m currently looking in to.\n\u003C/p\u003E\n\u003Cp\u003E\nGood luck tackling steering, especially if you want to combine translation/strafing with turning. Not impossible, but to do it well is likely to require a lot of maths and may not fit in with your current circular striding approach.\n\u003C/p\u003E\n"}]}