{"TopicId":165804,"ForumId":29,"TopicTitle":"How can I add \u0026amp; join two parts together in the Editor?","CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2017-09-24T18:27:32Z","PageNum":1,"Articles":[{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2017-09-24T18:27:32Z","Content":"\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nI would like to be able to add some small separatrons to a tank in the editor.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nI have the separatron model all done, thanks to a forum user.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nSo, I have the code to get the original part, and from that I can get the size from the prefabSize, which I use to calculate the spacing around a circle around the center\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nBut so far, whatever I\u0027ve tried to attach the parts, either the new part is somewhere far away from the current part (seems to be at 0,0,0 in the editor) or I get the strangest game crashes.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nCan someone help?\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nGiven the following:\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nOriginal part: \u00A0 Part p;\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nthis code isn\u0027t working:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E//\n// Get the node_attach_top node\n//\nbool GetTopNode(Part p)\n{\n\tforeach (var attachNode in p.attachNodes.Where(an =\u0026gt; an != null))\n\t{\n\t\tif (p.srfAttachNode != null \u0026amp;\u0026amp; attachNode == p.srfAttachNode)\n\t\t\tcontinue;\n\t\tif (attachNode.id == \u0022\u0022)\n\t\t\tcontinue;\n\t\tif (attachNode.id == \u0022top\u0022)\n\t\t{\n\t\t\ttopNode = attachNode;\n\t\t\treturn true;\n\n\t\t}\n\t}\n\treturn false;\n}\n\n//\n// Create the new part\n//\npublic Part CreatePart(string partname)\n{\n\tAvailablePart avPart = PartLoader.getPartInfoByName(partname);\n\n\tUnityEngine.Object obj = UnityEngine.Object.Instantiate(avPart.partPrefab);\n\tif (!obj)\n\t{\n\t\tLog.Info(\u0022CreatePart(Crate) Failed to instantiate \u0022 \u002B avPart.partPrefab.name);\n\t\treturn null;\n\t}\n\n\tPart newPart = UnityEngine.Object.Instantiate\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Part\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(avPart.partPrefab);\n\n\tnewPart.gameObject.SetActive(true);\n\tnewPart.gameObject.name = avPart.name;\n\tnewPart.partInfo = avPart;\n\tnewPart.symMethod = SymmetryMethod.Radial;\n\t\n\treturn newPart;\n}\n\n//\n// Add nodeCnt parts to the parent part \u0022p\u0022\n//\nvoid AddParts(Part p, int nodeCnt)\n{\n\tdouble radius = Math.Min(p.prefabSize.z / 2, p.prefabSize.x / 2);\n\tdouble angle = 0;\n\n\tif (GetTopNode(p) \u0026amp;\u0026amp; nodeCnt \u0026gt; 0)\n\t{\n\t  // Add nodeCnt parts in a circle\n\t\tfor (int cnt = 0; cnt \u0026lt; Math.Max(2, nodeCnt); cnt\u002B\u002B)\n\t\t{\n\n\t\t\tPart newP = CreatePart(\u0022integratedSepMotor\u0022);\n\t\t\tLog.Info(\u0022newP prefabSize.x: \u0022 \u002B newP.prefabSize.x.ToString() \u002B \u0022, z: \u0022 \u002B newP.prefabSize.z.ToString());\n\t\t\tradius = Math.Min(p.prefabSize.z / 2, p.prefabSize.x / 2) - Math.Max(newP.prefabSize.x, newP.prefabSize.z);\n\t\t\tif (newP != null)\n\t\t\t{\n\t\t\t\t//newP.partTransform = topNode.nodeTransform;\n\t\t\t\tangle = ((360 / nodeCnt) / RADIAN) * cnt;\n\t\t\t\tdouble x = radius * Math.Cos(angle);\n\t\t\t\tdouble z = radius * Math.Sin(angle);\n\t\t\t\t//pos.z = pos.z \u002B p.prefabSize.z / 2;\n\n\t\t\t\tpos = topNode.position;\n\t\t\t\tpos.x \u002B= (float)Math.Round(x, 4);\n\t\t\t\tpos.z \u002B= (float)Math.Round(z, 4);\n\n\t\t\t\tLog.Info(\u0022cnt: \u0022 \u002B cnt.ToString() \u002B \u0022,  angle: \u0022 \u002B (angle * RADIAN).ToString() \u002B \u0022,   x: \u0022 \u002B pos.x.ToString() \u002B \u0022, z: \u0022 \u002B pos.z.ToString());\n\n\t\t\t\t// multiply rotation by 180 on y axis\n\t\t\t   // newP.transform.localRotation *= Quaternion.Euler(0f, 0f, 180f);\n\n\t\t\t\tLog.Info(\u0022Adding part\u0022);\n\t\t\t\tEditorLogic.fetch.ship.Add(newP);\n\t\t\t\tp.addChild(newP);\n\t\t\t\tnewP.setParent(p);\n\t\t\t\tnewP.transform.parent = p.transform;\n\n\t\t\t\tnewP.transform.localPosition = pos;\n\n\t\t\t\tnewP.attRotation0 = newP.transform.localRotation;\n\t\t\t\tnewP.attPos0 = pos \u002B p.attPos;\n\t\t\t\tnewP.onAttach(p, true);\n\n\t\t\t}\n\t\t}\n\t\tGameEvents.onEditorShipModified.Fire(EditorLogic.fetch.ship);\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-09-24T18:29:54Z\u0022 title=\u002209/24/2017 06:29  PM\u0022 data-short=\u00226 yr\u0022\u003ESeptember 24, 2017\u003C/time\u003E by linuxgurugamer\u003C/strong\u003E\n\u003C/span\u003E\n"}]}