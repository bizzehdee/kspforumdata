{"TopicId":223154,"ForumId":120,"TopicTitle":"Reinvent the parts physics system?","CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2024-01-20T17:10:00Z","PageNum":1,"Articles":[{"CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2024-01-20T17:10:00Z","Content":"\n\u003Cp\u003E\nThis is probably something the devs have already thought of but I can\u2019t help wondering if they need to move away from a real physics system for the parts of the craft.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u2019m very familiar with Unity, the engine KSP 2 and 1 are made in, having been working on a heavily physics based game myself for the past three years. And one thing I ended up doing on my game was moving away from physics sims in favor of scripted control when needed. Basically it\u2019s the difference between trying to puppeteer a ragdoll vs simply animating an object.\n\u003C/p\u003E\n\u003Cp\u003E\nBoth sides have their advantages and disadvantages, but it\u2019s possible to milk the best out of both worlds.\n\u003C/p\u003E\n\u003Cp\u003E\nKSP 2 is clearly using real physics sims for all of the rocket parts connected to the rocket, and this is what causes the vast amount of bugs and performance issues in the game. Thousands of parts needing to be physically simulated while also colliding with each other, slowing the game down when they aren\u2019t shaking the craft apart colliding with other parts of the ship.\n\u003C/p\u003E\n\u003Cp\u003E\nIf all the parts were not individually simulated but instead all grouped into a single rigidbody (the component that tells the engine to simulate physics for a given object) then only a single calculation would need to be run per ship. Literally hundreds or thousands of times easier for the computer to process depending on the part count of the craft.\n\u003C/p\u003E\n\u003Cp\u003E\nThis would be extremely stable, but also, perhaps a bit boring. While I tend to land on the stiffer side of the wobbly rockets debate, I do actually prefer some wobble. Not in craft that look like they should be stable, but when I build a giant noodle, I expect it to physically behave like a giant noodle.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is where you can get into faking it with scripted physics though. Instead of actually physically simulating every part, feed the forces into a script that makes them bend on their connection point based on how much force there is.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, if the ship is turning, X amount of force is delivered in a given direction to a given part. The part would bend at its connection point. So at its base, or around a radial decoupler etc. Parts connected to that part would move with their parent and similarly bend from their connection points.\n\u003C/p\u003E\n\u003Cp\u003E\nBecause this bend would be scripted though, it would be much easier to modify stiffness, making it completely rigid or complealty noodly as needed, without having to auto strut, which has a performance cost of its own. Since each of the components would have this script, they could be individually updated at runtime based on how big the ship is, to scale how noodly the ship is depending on how long it is. So stouter craft could be completely rigid, but noodles would flex as you might expect them too. This could even read from a setting in the options so that player\u2019s could globally increase or decrease wobble based on their preferences.\n\u003C/p\u003E\n\u003Cp\u003E\nThe bend could be scripted to never exceed a given angle, or break if it does exceed that angle, and that could be set on a per part level depending on how strong the part should be. Fuel tanks for example might never break but could flex to a given degree, whereas long antennas could flex then break off under too much force.\n\u003C/p\u003E\n\u003Cp\u003E\nThe individual parts could also have their own rigidbodies but it\u2019s set to kinematic (a mode that lets objects individually detect collisions but don\u2019t get simulated and thus don\u2019t eat as much performance). This would let the part detect when it\u2019s colliding with something else and take damage on a per part level, and also pass that collision data back to the root rigidbody so it\u2019s affected by the collision too. (Though there is a setting in unity that I believe is disabled by default that needs to be flipped on to allow child game objects to receive collision)\n\u003C/p\u003E\n\u003Cp\u003E\nSuch a system would be a major MAJOR overhaul, but I think long term it would solve a vast number of the issues KSP 2 has been plagued with, in addition to the future problems they are already talking about running into when dealing with much larger craft.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"DailyFrankPeter","CreatedById":101850,"CreatedDateTime":"2024-01-21T12:03:32Z","Content":"\n\u003Cp\u003E\nNot sure this isn\u0027t over most people\u0027s heads on this forum\u00A0\u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0- if not your idea itself, then the understanding of what\u0027s already in the core game, or planned in the future, optimisation-wise.\u00A0\u003C/span\u003E\u003Cbr\u003E\n\u003Cbr\u003E\nMaybe you can email the new tech lead.\u00A0\u003Cbr\u003E\n\u003Cbr\u003E\nAlso... you and I both know what happens when you say the words \u0027major overhaul\u0027. \u003Cimg alt=\u0022;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-01-21T12:10:16Z\u0022 title=\u002201/21/2024 12:10  PM\u0022 data-short=\u0022Jan 21\u0022\u003EJanuary 21\u003C/time\u003E by DailyFrankPeter\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kdaviper","CreatedById":229094,"CreatedDateTime":"2024-01-21T13:51:13Z","Content":"\n\u003Cp\u003E\nI know that in the Dev chat about wobbly rockets they said they are looking into long-term solutions as well.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Lowi_Sace","CreatedById":224820,"CreatedDateTime":"2024-01-21T14:03:16Z","Content":"\n\u003Cp\u003E\nCould be a good solution. Maybe could be coupled with a stress and strain system.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224360852\u0022 data-ipsquote-contentid=\u0022223154\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221705845073\u0022 data-ipsquote-userid=\u0022229094\u0022 data-ipsquote-username=\u0022kdaviper\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, kdaviper said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI know that in the Dev chat about wobbly rockets they said they are looking into long-term solutions as well.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, they said they were testing different long time and short time solutions (like rigidbody). Considering the complexity of the game and the fact that the system needs to work for a lot of vehicle combinations, I think we will be stuck for a while with the current system.\n\u003C/p\u003E\n"},{"CreatedByName":"steveman0","CreatedById":64580,"CreatedDateTime":"2024-01-22T03:22:53Z","Content":"\n\u003Cp\u003E\nI am half-suspecting they might be considering or even working on something like this. Given how they\u0027ve talked about some of their goals for larger ships and colonies, I suspected they have something in mind for a kind of physics LoDing that would involve something like this kind of abstraction of the parts to simulated component sets. From a scalability point of view, it\u0027s the most sensible solution.\n\u003C/p\u003E\n"},{"CreatedByName":"DailyFrankPeter","CreatedById":101850,"CreatedDateTime":"2024-01-23T12:44:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224361018\u0022 data-ipsquote-contentid=\u0022223154\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221705893773\u0022 data-ipsquote-userid=\u002264580\u0022 data-ipsquote-username=\u0022steveman0\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/22/2024 at 4:22 AM, steveman0 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nabstraction of the parts to simulated component sets. From a scalability point of view, it\u0027s the most sensible solution.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf you mean grouping into sets, which are simulated as a whole, then that\u0027s the first thing I would also do.\u003Cbr\u003E\n\u003Cbr\u003E\nThere\u0027s some real-world intuition behind it, too:\u003Cbr\u003E\n- for example a long truss may be assumed to be one piece (it\u0027s not built from cubes IRL*) and only connections between it and whatever is at either end simulated;\u003Cbr\u003E\n-\u00A0similarly for some other \u0027homogenous\u0027 groups\u003Cbr\u003E\n- small items, like \u003Cabbr title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E\u003C/abbr\u003E, attached to large parts like tanks do not have to be simulated, because it is the fuel-tank-to-rest-of-rocket joint that gets the most bending force;\u003Cbr\u003E\n-\u00A0or if there is some impact powerful enough to rupture the fuel tank, it also doesn\u0027t matter how strong the small attached part was\u003Cbr\u003E\n\u003Cbr\u003E\nSo there\u0027s definitely some opportunity to skip simulation. There could be a list of pairs of object types for which joint simulation does not matter.\u003Cbr\u003E\n\u003Cbr\u003E\n\u003Cbr\u003E\n---------------------\u003Cbr\u003E\n*well, it is from triangles, but we can assume engineers have done a good enough job to make it stiff enough to look like 1 piece\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-01-23T12:46:55Z\u0022 title=\u002201/23/2024 12:46  PM\u0022 data-short=\u0022Jan 23\u0022\u003EJanuary 23\u003C/time\u003E by DailyFrankPeter\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pg17","CreatedById":232200,"CreatedDateTime":"2024-01-23T17:16:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224361356\u0022 data-ipsquote-contentid=\u0022223154\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221706013862\u0022 data-ipsquote-userid=\u0022101850\u0022 data-ipsquote-username=\u0022DailyFrankPeter\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, DailyFrankPeter said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nfor example a long truss may be assumed to be one piece (it\u0027s not built from cubes IRL*) and only connections between it and whatever is at either end simulated;\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat is exactly the kind of cases that calls for more procedural parts. It would need to be balanced with a max length set around the point where it is considered too long to not have a noticeable or expected bent \u003Cem\u003E(at that point you have to really assemble two truss together and compute the joint)\u003C/em\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nThat being said, I second the idea of having some sort of sub assemblies with approximated simulation in specific steps. Especially payloads like satellites or rovers secured in a closed cargo bay during takeoff. I think they could be approximated as a single block with proper mass \u0026amp; \u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E without losing too much. But it\u0027s hard to say without knowing exactly what happens and what kind of computations are done under the hood. For really complex systems like physic simulation, I tend to trust \u003Cem\u003E(hope?)\u003C/em\u003E that the dev team already thought of such simple optimizations. So, it is either that they had a good reason not to implement them, or it is already in development / planned.\n\u003C/p\u003E\n"},{"CreatedByName":"Jeq","CreatedById":172375,"CreatedDateTime":"2024-01-24T14:02:15Z","Content":"\n\u003Cp\u003E\ncurrently i dont find any other problems with physics than when doing extra large rockets, their boosters doesn\u0027t keep attached, detaching before players gets see launch pad. And ROVERS!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-01-24T14:02:55Z\u0022 title=\u002201/24/2024 02:02  PM\u0022 data-short=\u0022Jan 24\u0022\u003EJanuary 24\u003C/time\u003E by Jeq\u003C/strong\u003E\n\u003C/span\u003E\n"}]}