{"TopicId":199078,"ForumId":109,"TopicTitle":"I\u0026#039;m worried about the possible system requirements of KSP2","CreatedByName":"Kerbal Productions","CreatedById":208620,"CreatedDateTime":"2020-12-26T09:05:09Z","PageNum":7,"Articles":[{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-16T04:42:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224209414\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671157696\u0022 data-ipsquote-userid=\u002277770\u0022 data-ipsquote-username=\u0022GoldForest\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, GoldForest said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA good air cooler and an aio have pretty much the same performance, so you don\u0027t really need an AIO. And Noctuas are very good air cooler.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nA low budget AIO can be cheaper than D15, by a good margin sometimes, without sacrificing performance, and because of the thermal mass, it\u0027s not going to have to spin up the fans/pump if there is a short spike of load, which happens quite often in a lot of usage cases, which means that AIO can be quieter than a comparable air blower.\n\u003C/p\u003E\n\u003Cp\u003E\nHow much of a difference that makes for you particular case is up to you, and specifics will matter from build to build, but if you\u0027re going to drop $100 on cooling and don\u0027t at least\u00A0\u003Cem\u003Econsider\u003C/em\u003E\u00A0liquid cooling instead, I have questions.\n\u003C/p\u003E\n\u003Cp\u003E\nIn contrast, unless you do have a high end CPU and/or are overclocking, maybe go with a much cheaper air blower instead. Something in $20-$40 range will do for most people in most cases, so long as they have an otherwise good air flow into the chassis. A $100 air blower is kind of a niche choice.\n\u003C/p\u003E\n"},{"CreatedByName":"GoldForest","CreatedById":77770,"CreatedDateTime":"2022-12-16T06:39:28Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224209427\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671165762\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA low budget AIO can be cheaper than D15, by a good margin sometimes, without sacrificing performance, and because of the thermal mass, it\u0027s not going to have to spin up the fans/pump if there is a short spike of load, which happens quite often in a lot of usage cases, which means that AIO can be quieter than a comparable air blower.\n\u003C/p\u003E\n\u003Cp\u003E\nHow much of a difference that makes for you particular case is up to you, and specifics will matter from build to build, but if you\u0027re going to drop $100 on cooling and don\u0027t at least\u00A0\u003Cem\u003Econsider\u003C/em\u003E\u00A0liquid cooling instead, I have questions.\n\u003C/p\u003E\n\u003Cp\u003E\nIn contrast, unless you do have a high end CPU and/or are overclocking, maybe go with a much cheaper air blower instead. Something in $20-$40 range will do for most people in most cases, so long as they have an otherwise good air flow into the chassis. A $100 air blower is kind of a niche choice.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI will admit, Noctuas are a little pricey, but they are worth it. If you want a cheap air cooler, the Cooler Master Hyper 212 Evo is a good option and performs rather well from what I\u0027ve heard.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAIOs come with the problem of a possible leak though. Even from the reputable brands like Corsair, and that\u0027s what worries people, I think. Yes, the chance of a leak is slim, but it\u0027s not zero.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-16T10:39:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224209439\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671172768\u0022 data-ipsquote-userid=\u002277770\u0022 data-ipsquote-username=\u0022GoldForest\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, GoldForest said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAIOs come with the problem of a possible leak though. Even from the reputable brands like Corsair, and that\u0027s what worries people, I think. Yes, the chance of a leak is slim, but it\u0027s not zero.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat doesn\u0027t happen in practice with any sort of noteworthy frequency with modern AIOs. Not the sort of a leak where you\u0027d have to worry about your system, at any rate. Small leaks causing loss of fluid over time do happen, which is one of the failure modes that can happen, typically after years of service. The other, as \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/223493-laikanaut/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022223493\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/223493-laikanaut/\u0022 rel=\u0022\u0022\u003E@Laikanaut\u003C/a\u003Epoints out, is pump failure. But they\u0027ll still typically serve you for years without issues with proper installation and under moderate pump speeds.\n\u003C/p\u003E\n\u003Cp\u003E\nSo the risk isn\u0027t really there, and once you get into the price point of AIOs, they usually outperform air coolers dollar-for-dollar. You can also better manage the heat flow. One of the common problems of air blowers is that its\u0027 hard not to make your CPU be eating at least some of the GPU heat. But there are a lot of variables there.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224209439\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671172768\u0022 data-ipsquote-userid=\u002277770\u0022 data-ipsquote-username=\u0022GoldForest\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, GoldForest said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI will admit, Noctuas are a little pricey, but they are worth it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFor the specific niche where they make sense, sure. But it is a niche. So is the AIO, of course. All of this exists in this narrow sliver of space where a cheap cooler doesn\u0027t cut it anymore, but you\u0027re not at a point where you need to drive a custom loop through the monoblock to manage your thermals on the power delivery.\n\u003C/p\u003E\n\u003Cp\u003E\nThe main point here is not that you shouldn\u0027t be spending money on a good cooler. Rather, if a $40 cooler isn\u0027t doing the job, and you\u0027re eying a $100 cooler, you really should be considering your options. With most configurations and given how most cases on the market are organized, AIO will probably give you the same or better performance for $60-$80.\n\u003C/p\u003E\n"},{"CreatedByName":"SciMan","CreatedById":12748,"CreatedDateTime":"2022-12-19T22:30:03Z","Content":"\n\u003Cp\u003E\nI mean I\u0027ve got a custom loop for my system, but that\u0027s because I wanted to put BOTH the CPU and GPU on the water cooling at the same time. Plus I don\u0027t trust the tiny little pump they put on the CPU block that AIO\u0027s have to not fail within a year or two.\n\u003C/p\u003E\n\u003Cp\u003E\nDon\u0027t get me wrong, I love the idea of AIO\u0027s being an easily approachable solution to water cooling, I just don\u0027t trust the particular implementation of all the AIO\u0027s on the market (the pump being so tiny and... \u0022value optimized\u0022 specifically).\n\u003C/p\u003E\n\u003Cp\u003E\nThey have a use case, just it doesn\u0027t cover MY use case since if I was going to use an AIO to cover both my CPU and GPU, well, I\u0027d need 2 AIO\u0027s and at that point it becomes easier (if not always cheaper) to just use a custom loop in the first place right from the start.\n\u003C/p\u003E\n\u003Cp\u003E\nPlus there\u0027s the serviceability part of the custom loop, if any single part has a problem, I don\u0027t have to replace the WHOLE LOOP, I can just replace the FEW parts that actually have issues, which means that a custom loop is more expensive to INITIALLY set up, but it\u0027s cheaper to keep going over time and from computer build to computer build (since you can easily transfer the parts between systems).\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-20T21:49:12Z","Content":"\n\u003Cp\u003E\nA custom loop is also fun to build. There\u0027s nothing wrong with making your computer be a little extra, even when you might not be pushing it to the kind of limits where it\u0027s absolutely necessary.\n\u003C/p\u003E\n"},{"CreatedByName":"whatsEJstandfor","CreatedById":220814,"CreatedDateTime":"2022-12-21T17:57:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224209467\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671188950\u0022 data-ipsquote-userid=\u0022223493\u0022 data-ipsquote-username=\u0022Laikanaut\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 12/16/2022 at 3:09 AM, Laikanaut said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI think generally AIOs outperform air coolers due to the vastly increased heat transfer through liquid compared to air, and if computing power continues to increase, liquid will likely become more common than air cooling due to this.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou\u0027d think so, but GN did some tests a few years ago and found that, in general, in the best case, a good AIO vs a good air cooler results in only a few degrees cooler and, in the worst case, they\u0027re pretty much equal. There are other nuances but it\u0027s certainly convinced me to go back to a quality Noctua cooler the next time I build a PC, instead of the (very good) Corsair AIO I used this time around. For me, the small cooling benefit for the CPU is outweighed by an air cooler being able to also move more air for the other components, and the (admittedly very small) chance of an AIO failure.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 frameborder=\u00220\u0022 height=\u0022113\u0022 src=\u0022https://www.youtube-nocookie.com/embed/7VzXHUTqE7E?feature=oembed\u0022 title=\u0022Liquid Cooling vs. Air Cooling Benchmark In-Depth (NH-D15, NZXT X62, \u0026amp; More)\u0022 width=\u0022200\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"miklkit","CreatedById":201493,"CreatedDateTime":"2022-12-21T18:16:45Z","Content":"\n\u003Cp\u003E\nAirhead here who does not think water and electricity mix well.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem with air cooling is the cases used these days.\u00A0 They are optimized for silence, and what is the cheapest way to keep them quiet?\u00A0 Restrict the air flow.\u00A0 AIOs place the radiators and their heat in the exhaust so the case stays cool inside.\u00A0 The heat from air coolers is trapped in the case and it turns into an oven.\u00A0 Get an open case that enables good air flow and air coolers do much better.\u00A0 In fact if the exhaust fan is removed and then the back of the case is cut out so the air cooler fans (which are by far the most powerful fans in the case) become the exhaust fans, then air cooling will surprise many.\n\u003C/p\u003E\n\u003Cp\u003E\nBack in the AMD FX days I ran 5ghz CPUs at 1.5-1.55V 24/7 for years.\u00A0 I bought a Silverstone HE01 cooler in 2013 and it went with one when I sold it in 2017.\u00A0 Still worked fine.\u00A0 In 2014 I bought a Thermalight Silver Arrow.\u00A0 Still using it today on the rig I\u0027m using now.\u00A0 The worst \u0022problem\u0022 is that a paper sticker fell off one of the fans.\u00A0 This current system only runs at 1.35V and never gets over 60C.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOTOH I had an AIO start leaking within weeks of installing it and it ran hotter than the air coolers anyway.\n\u003C/p\u003E\n"},{"CreatedByName":"SciMan","CreatedById":12748,"CreatedDateTime":"2022-12-21T21:28:59Z","Content":"\n\u003Cp\u003E\nBuilding on what \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57710-k2/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257710\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57710-k2/\u0022 rel=\u0022\u0022\u003E@K^2\u003C/a\u003E said, not only is a custom loop fun to build, but these days with the extremely high power dissipation of some brands of modern components (something like 250w for CPU and 600 w for GPU maximum thermal design power, respectively), a custom loop is practically the only way to get enough radiator area to keep temperatures down low enough so that the chips don\u0027t start their \u0022oh I\u0027m getting too hot I better start down-clocking\u0022 strategy that they use to get these high potential speeds while also being backwards compatible with older sockets and coolers (especially in the CPU market).\n\u003C/p\u003E\n\u003Cp\u003E\nBasically, if I paid for a top of the line CPU or GPU, I don\u0027t want any chance of it thermal throttling. And that means I choose a case that has great airflow, I choose to go with a custom water cooling loop to keep the heat under control, and to keep the noise down I pick high quality Noctua fans and intelligently set my fan curves and water pump speed profile so that they\u0027re not constantly changing speed.\n\u003C/p\u003E\n\u003Cp\u003E\nYes, all of that costs time and money. But right now I\u0027m sitting on a nice stable, quiet, and cool machine, my i7-9700k and RTX 3070 Ti have never gotten above 70C under sustained heavy load (3DMark Time Spy extreme stress test, run 5 times in a row with each run consisting of 20 runs of the benchmark proper, all at 4k resolution to take most advantage of the GPU).\n\u003C/p\u003E\n\u003Cp\u003E\nYes, I realize I\u0027m CPU bottlenecked, and I\u0027m planning on an upgrade to fix that. But that\u0027s gonna be expensive, cause I\u0027m aiming for an i9-13900kf CPU, a high-spec motherboard to go with it, and fast DDR5 ram to tie it all together.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m awaiting further news about AIB partner\u0027s takes on the AMD 7900 XTX GPU to see if that\u0027s a worthy upgrade from my 3070 Ti as well, even tho I haven\u0027t even had this card all that long.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-21T22:16:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224211637\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671658139\u0022 data-ipsquote-userid=\u002212748\u0022 data-ipsquote-username=\u0022SciMan\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n36 minutes ago, SciMan said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBut that\u0027s gonna be expensive, cause I\u0027m aiming for an i9-13900kf CPU, a high-spec motherboard to go with it, and fast DDR5 ram to tie it all together.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m sure you\u0027re aware, but in case someone needs to hear this, when going for a high end CPU like that with plans to utilize it to the full, make sure you pay very close attention to the motherboard specs and cooling. Either find a water block that is designed to cover both your CPU and the power distribution on that specific mobo or get separate blocks for your power MOSFET banks. Among the worst experiences in custom PC building is giving a Pikachu stare to your 50\u00B0C CPU that\u0027s thermal throttling, because your stock MOSFET heat sink is hot enough to boil water.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I\u0027m really curious what sort of performance you\u0027ll get with that OC (I presume?) 13900KF with KSP2. So keep us posted once you have that upgraded and set up.\n\u003C/p\u003E\n"},{"CreatedByName":"TheOrios","CreatedById":207750,"CreatedDateTime":"2022-12-24T14:38:48Z","Content":"\n\u003Cp\u003E\nksp 1 has existed for a while so internally it probably still has a lot of bottlenecks, like how it only ever uses 1 core.\n\u003C/p\u003E\n\u003Cp\u003E\nksp 2 is being buildt from the ground up, so most likely it will run much smoother compared to ksp 1, even on less powerful pcs\n\u003C/p\u003E\n"},{"CreatedByName":"GoldForest","CreatedById":77770,"CreatedDateTime":"2022-12-24T14:49:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212383\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671892728\u0022 data-ipsquote-userid=\u0022207750\u0022 data-ipsquote-username=\u0022TheOrios\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, TheOrios said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nksp 1 has existed for a while so internally it probably still has a lot of bottlenecks, like how it only ever uses 1 core.\n\u003C/p\u003E\n\u003Cp\u003E\nksp 2 is being buildt from the ground up, so most likely it will run much smoother compared to ksp 1, even on less powerful pcs\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nKSP uses multiple cores. It just uses 1 core for physics because of how Unity works and because calculating physics on more than one core could lead to problems.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"TheOrios","CreatedById":207750,"CreatedDateTime":"2022-12-24T15:02:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212387\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671893355\u0022 data-ipsquote-userid=\u002277770\u0022 data-ipsquote-username=\u0022GoldForest\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 minutes ago, GoldForest said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKSP uses multiple cores. It just uses 1 core for physics because of how Unity works and because calculating physics on more than one core could lead to problems.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\ndidnt know that, thx\n\u003C/p\u003E\n"},{"CreatedByName":"tstein","CreatedById":223854,"CreatedDateTime":"2022-12-24T15:42:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212387\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671893355\u0022 data-ipsquote-userid=\u002277770\u0022 data-ipsquote-username=\u0022GoldForest\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n49 minutes ago, GoldForest said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKSP uses multiple cores. It just uses 1 core for physics because of how Unity works and because calculating physics on more than one core could lead to problems.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nJust an addendum. The connected solids physics\u00A0 is the complex one to do multicore. The movement one is\u00A0 pretty easy to do multi core (although is light enough that is not really worth). Said that you can\u00A0 separate each system of components in a different core with no problems. So for example an optimized system\u00A0 could have a station being processed by one core and the ship you are flying nearby by other, only when they connect they need to offload to the same core.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-25T22:31:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212401\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221671896562\u0022 data-ipsquote-userid=\u0022223854\u0022 data-ipsquote-username=\u0022tstein\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 12/24/2022 at 7:42 AM, tstein said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nJust an addendum. The connected solids physics\u00A0 is the complex one to do multicore. The movement one is\u00A0 pretty easy to do multi core (although is light enough that is not really worth). Said that you can\u00A0 separate each system of components in a different core with no problems. So for example an optimized system\u00A0 could have a station being processed by one core and the ship you are flying nearby by other, only when they connect they need to offload to the same core.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere are three major steps in a physics frame.\n\u003C/p\u003E\n\u003Col\u003E\n\u003Cli\u003E\nFind all collisions between objects and create contact points for these.\n\u003C/li\u003E\n\u003Cli\u003E\nUpdate constraints and contact forces by solving a linear system of equations.\n\u003C/li\u003E\n\u003Cli\u003E\nUpdate positions, rotations, and velocities of all the objects in the scene.\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003Cp\u003E\nFor some definitions, a scene is going to have colliders, which are individual capsules or collision meshes, for example; rigid bodies, which for KSP are basically a component; constrained bodies, like an entire ship made of components; and islands, which are any collections connected by either a constraint or a contact (collision) point.\n\u003C/p\u003E\n\u003Cp\u003E\nIn terms of being able to split these up, for step 1, you can have each collider be assigned to a separate core. You can do some additional optimization here by assigning affinities to some early branches of the BVH tree, but that\u0027s not critical. You really can have as many threads running for that as you can spare and just split the list between them. That said, BVH itself needs some maintenance at least occasionally, and that tends to be a single thread process. Fortunately, that doesn\u0027t need to happen every frame.\n\u003C/p\u003E\n\u003Cp\u003E\nFor the second step, you can do each island in a separate thread. However, in practice, it\u0027s more expensive to check for island connections than to simply have one giant physics island. So in practice, in pretty much every physics engine I\u0027ve worked with, the entire scene is treated as an island, and so has to be processed in a single thread. There are tricks to split that out as well, but they\u0027re complicated, and in practice nobody bothers. The optimization that\u0027s actually taken is collision cache. Instead of solving the system of equations from scratch, you cache previous frame\u0027s result and only compute the difference. That can be done iteratively, and you can often get away with a single iteration of this method per frame. This way, you literally just have to iterate through contact points and constraints and update them. This can be\u00A0\u003Cem\u003Every\u003C/em\u003E\u00A0inexpensive. So the fact that this is a single thread operation isn\u0027t usually a bottleneck.\n\u003C/p\u003E\n\u003Cp\u003E\nFinally, updating positions and velocities can be done per constrained body - that is, per ship. It\u0027s usually a very cheap step anyways, so it might not even make sense to farm out for something like KSP, where you won\u0027t have a thousand objects to update. So this might end up being single-thread as well just for simplicity.\n\u003C/p\u003E\n\u003Cp\u003E\nAll of that said, collision checks are usually the most expensive part, and it\u0027s the one that\u0027s most readily made parallel. PhysX in Unity did not, which is a big part of why the performance was horrible. I don\u0027t know how much of a change this is in KSP2. Modern Unity allows using PhysX or Havok depending on how you set up your components, and we haven\u0027t heard any updates about which one KSP2 uses.\n\u003C/p\u003E\n"},{"CreatedByName":"tstein","CreatedById":223854,"CreatedDateTime":"2022-12-26T12:07:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212718\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672007479\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere are three major steps in a physics frame.\n\u003C/p\u003E\n\u003Col\u003E\n\u003Cli\u003E\nFind all collisions between objects and create contact points for these.\n\u003C/li\u003E\n\u003Cli\u003E\nUpdate constraints and contact forces by solving a linear system of equations.\n\u003C/li\u003E\n\u003Cli\u003E\nUpdate positions, rotations, and velocities of all the objects in the scene.\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003Cp\u003E\nFor some definitions, a scene is going to have colliders, which are individual capsules or collision meshes, for example; rigid bodies, which for KSP are basically a component; constrained bodies, like an entire ship made of components; and islands, which are any collections connected by either a constraint or a contact (collision) point.\n\u003C/p\u003E\n\u003Cp\u003E\nIn terms of being able to split these up, for step 1, you can have each collider be assigned to a separate core. You can do some additional optimization here by assigning affinities to some early branches of the BVH tree, but that\u0027s not critical. You really can have as many threads running for that as you can spare and just split the list between them. That said, BVH itself needs some maintenance at least occasionally, and that tends to be a single thread process. Fortunately, that doesn\u0027t need to happen every frame.\n\u003C/p\u003E\n\u003Cp\u003E\nFor the second step, you can do each island in a separate thread. However, in practice, it\u0027s more expensive to check for island connections than to simply have one giant physics island. So in practice, in pretty much every physics engine I\u0027ve worked with, the entire scene is treated as an island, and so has to be processed in a single thread. There are tricks to split that out as well, but they\u0027re complicated, and in practice nobody bothers. The optimization that\u0027s actually taken is collision cache. Instead of solving the system of equations from scratch, you cache previous frame\u0027s result and only compute the difference. That can be done iteratively, and you can often get away with a single iteration of this method per frame. This way, you literally just have to iterate through contact points and constraints and update them. This can be\u00A0\u003Cem\u003Every\u003C/em\u003E\u00A0inexpensive. So the fact that this is a single thread operation isn\u0027t usually a bottleneck.\n\u003C/p\u003E\n\u003Cp\u003E\nFinally, updating positions and velocities can be done per constrained body - that is, per ship. It\u0027s usually a very cheap step anyways, so it might not even make sense to farm out for something like KSP, where you won\u0027t have a thousand objects to update. So this might end up being single-thread as well just for simplicity.\n\u003C/p\u003E\n\u003Cp\u003E\nAll of that said, collision checks are usually the most expensive part, and it\u0027s the one that\u0027s most readily made parallel. PhysX in Unity did not, which is a big part of why the performance was horrible. I don\u0027t know how much of a change this is in KSP2. Modern Unity allows using PhysX or Havok depending on how you set up your components, and we haven\u0027t heard any updates about which one KSP2 uses.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0The\u00A0 island connections are NOT hard to deal in a game where space between islands is so large like in KSP and where\u00A0 entities also\u00A0 tend to move in\u00A0 monotonic forms relative to each other, that means\u00A0 temporal coherence is\u00A0 very large (so you know what\u00A0 islands are likely or not to interact in the next couple of frames), this is completely different from most other games where the movement patterns\u00A0 are almost arbitrary and constrained in a heavily populated and spatially dense \u0022scene\u0022.\u00A0 In such scenario a simple\u00A0 sphere intersection\u00A0 is\u00A0 good enough for that\u00A0 and\u00A0 has a near zero\u00A0 cost when you have a non stupid number of islands. (each\u00A0 compare takes 3 multiplications 5 sums, 3 movups and a branch), In fact a predictive\u00A0 space bound by a cone aligned with the vector of velocity between the 2 islands (and with its slope based on the combined maximum acceleration of both islands (that can be easily pre computed) is good enough on KSP to decide if an island should be merged or not\n\u003C/p\u003E\n\u003Cp\u003E\nThe constraint solver is\u00A0 the vast majority of the intensive physics in kerbal, but the\u00A0 independent nature of most cells means you\u00A0 can separate the islands into different cores on the most common scenarios. That is specially useful\u00A0 because\u00A0 you are\u00A0 unlikely to have 2 islands in risk of interaction at the same time when the physics load is at it\u0027s highest ( i.e. an island accelerating inside the atmosphere, that is when the engine struggles for most players. That because usually you do not have 2 ships accelerating inside the atmosphere suddenly meet each other ).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSuch a separation of cores would mean\u00A0 that\u00A0 every common scenario bar the docking connection moment scenario\u00A0 can be optimized into multiple cores.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-26T12:55:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212852\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672056458\u0022 data-ipsquote-userid=\u0022223854\u0022 data-ipsquote-username=\u0022tstein\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n47 minutes ago, tstein said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe\u00A0 island connections are NOT hard to deal in a game where space between islands is so large like in KSP\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, but it\u0027s unlikely to be a bespoke solver. It\u0027s likely either PhysX or Havok solver that come with Unity. I am well familiar with the code Havok was based on, and that does not employ multi-island optimization. I have not seen the latest Havok\u0027s code myself, so I can\u0027t insist they haven\u0027t implemented it, but I see no indication they have either.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212852\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672056458\u0022 data-ipsquote-userid=\u0022223854\u0022 data-ipsquote-username=\u0022tstein\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n47 minutes ago, tstein said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe constraint solver is\u00A0 the vast majority of the intensive physics in kerbal, but the\u00A0 independent nature of most cells means you\u00A0 can separate the islands into different cores on the most common scenarios.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMost of the time you\u0027re playing KSP, the only object in the simulation distance is your ship, and that\u0027s a single island. Even if you\u0027re looking at stage separation, if you treat the main ship and newly separated stage as a single island, your performance is at least as good as it was just before the stage separation, meaning the optimization here doesn\u0027t help your worst case.\n\u003C/p\u003E\n\u003Cp\u003E\nLikewise, if you are approaching another complex ship, odds are, you\u0027re planning to dock. Meaning, as soon as you\u0027ve docked, you have a single island, and if your performance isn\u0027t good enough here, then it doesn\u0027t matter that much if the performance drop happened when you got within physics range of the other craft or when the AABBs started to overlap. Either way, you have a more serious performance issue to address.\n\u003C/p\u003E\n\u003Cp\u003E\nBecause of that, even if we were talking about a bespoke engine, this kind of optimization would be pretty low on a priority list. So even though it\u0027s a possible optimization, I doubt heavily that it is taken. I fully expect the solver to still be single core regardless of which option the Intercept has gone with.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-12-26T12:56:23Z\u0022 title=\u002212/26/2022 12:56  PM\u0022 data-short=\u00221 yr\u0022\u003EDecember 26, 2022\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tstein","CreatedById":223854,"CreatedDateTime":"2022-12-27T11:34:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212866\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672059343\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYeah, but it\u0027s unlikely to be a bespoke solver. It\u0027s likely either PhysX or Havok solver that come with Unity. I am well familiar with the code Havok was based on, and that does not employ multi-island optimization. I have not seen the latest Havok\u0027s code myself, so I can\u0027t insist they haven\u0027t implemented it, but I see no indication they have either.\n\u003C/p\u003E\n\u003Cp\u003E\nMost of the time you\u0027re playing KSP, the only object in the simulation distance is your ship, and that\u0027s a single island. Even if you\u0027re looking at stage separation, if you treat the main ship and newly separated stage as a single island, your performance is at least as good as it was just before the stage separation, meaning the optimization here doesn\u0027t help your worst case.\n\u003C/p\u003E\n\u003Cp\u003E\nLikewise, if you are approaching another complex ship, odds are, you\u0027re planning to dock. Meaning, as soon as you\u0027ve docked, you have a single island, and if your performance isn\u0027t good enough here, then it doesn\u0027t matter that much if the performance drop happened when you got within physics range of the other craft or when the AABBs started to overlap. Either way, you have a more serious performance issue to address.\n\u003C/p\u003E\n\u003Cp\u003E\nBecause of that, even if we were talking about a bespoke engine, this kind of optimization would be pretty low on a priority list. So even though it\u0027s a possible optimization, I doubt heavily that it is taken. I fully expect the solver to still be single core regardless of which option the Intercept has gone with.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI was more worried on the concept that we will have multiplayer. And surely\u00A0 we cannot avoid having one process being the master that ensure the physics is synced on both\u00A0 players.\u00A0 The 2 players most of the time will be in independent islands. My time in the industry was when we built\u00A0 new engines for every new game family, there was not many pre made engines outside for FPS games, so my mentality is always of\u00A0 \u0022well, I would implement that\u0022\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-27T20:56:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224213112\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672140876\u0022 data-ipsquote-userid=\u0022223854\u0022 data-ipsquote-username=\u0022tstein\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, tstein said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI was more worried on the concept that we will have multiplayer. And surely\u00A0 we cannot avoid having one process being the master that ensure the physics is synced on both\u00A0 players.\u00A0 The 2 players most of the time will be in independent islands. My time in the industry was when we built\u00A0 new engines for every new game family, there was not many pre made engines outside for FPS games, so my mentality is always of\u00A0 \u0022well, I would implement that\u0022\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOh, yeah, for MP, you can treat each player\u0027s physics radius as its own scene. I have no idea if Unity actually has support for multi-threading parallel scenes, but for any custom engine this would have been an absolute freebie, for sure.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd yeah, I\u0027m one of the relatively few people still specializing in in-house engines. Fewer and fewer studios do this, but also, there aren\u0027t a lot of specialists who can jump in and work with a game engine from the ground up, so the pay is still good.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2022-12-27T21:38:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224212718\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672007479\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 12/25/2022 at 11:31 PM, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAll of that said, collision checks are usually the most expensive part, and it\u0027s the one that\u0027s most readily made parallel. PhysX in Unity did not, which is a big part of why the performance was horrible.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSpatial queries and Rigidbody simulation is far from being the main bottleneck in KSP. And PhysX is actually decently multithreaded. There are definitely some inefficiencies both on the Unity side, which doesn\u0027t expose some very useful parts of the PhysX API, but mainly on the KSP implementation side.\n\u003C/p\u003E\n\u003Cp\u003E\nBut all in all, RB and collider physics are objectively the most optimized part of KSP, taking 15-20% of the frame time in part count constrained scenarios. The single-thread bottleneck has no main culprit, it\u0027s a combination of an inadequate general architecture and of tons of tiny or not so tiny inefficiencies in all subsystems.\n\u003C/p\u003E\n\u003Cp\u003E\nThis being said, the main issue with physics in KSP is that a solver primarily made to simulate ragdoll physics is wholly inadequate for the task of simulating a rocket structural integrity. And it can even be argued that the idea of simulating structural integrity out of RBs whose shape and mass is primarily defined by function is a silly idea in the first place.\n\u003C/p\u003E\n"},{"CreatedByName":"Bej Kerman","CreatedById":182413,"CreatedDateTime":"2022-12-27T22:03:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224213276\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672177101\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd it can even be argued that the idea of simulating structural integrity out of RBs whose shape and mass is primarily defined by function is a silly idea in the first place.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt technically wouldn\u0027t be rocket science to make an engine that turns rockets into giant soft-body models that warp and explode with stress while maintaining functionality of individual parts... \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-27T22:32:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224213276\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672177101\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n32 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSpatial queries and Rigidbody simulation is far from being the main bottleneck in KSP.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFor KSP, absolutely. There is going to be a lot more pressure on physics in KSP2, though. It\u0027s a little hard to say exactly how hard Intercept is riding the physics engine in KSP2, but it\u0027s clear that they\u0027re stepping it up. Continuous collisions have been indicated in one of the blogs, which require more expensive spatial queries, and we don\u0027t know exactly how much physics will be done at what levels of warp, but it\u0027s clear that physics warp is going to be a more central features. This might be where the \u0022physics LoD\u0022 is supposed to come in play, which I\u0027m guessing is the treatment of larger sections of the ship as a single rigid body, but we don\u0027t have enough details on that yet. On the net, I expect both more optimization and more usage of the physics system in KSP2.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224213276\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672177101\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n41 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd PhysX is actually decently multithreaded. There are definitely some inefficiencies both on the Unity side, which doesn\u0027t expose some very useful parts of the PhysX API, but mainly on the KSP implementation side.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nEh... This is one of the places where the boundaries gets fuzzy. I can certainly query PhysX in parallel job threads, but then do what, disable collisions for the main scene and manually create contact points as joints? I mean, it\u0027s possible,\u00A0 but then I have to manage my own collision cache, since PhysX won\u0027t know that these are the same collision points from frame to frame, and at that point, I should probably be using my own solver for it - no need to jam that ugly hack into PhysX. And then to avoid causing hick ups in PhysX, maybe I\u0027ll do my own BVH management. Of course, that would require a custom collision broker as well, and then why am I using a PhysX scene at all?\n\u003C/p\u003E\n\u003Cp\u003E\nYou can replace pretty much every part of Unity with custom parts. You can also make a completely custom engine. That\u0027s a lot of work, though. So it\u0027s really not fair to say, \u0022It\u0027s developers\u0027 fault,\u0022 when Unity\u0027s implementation of PhysX is just bad, and would require you to rewrite the entire physics engine to get rid of all the problems.\n\u003C/p\u003E\n\u003Cp\u003E\nAdmittedly, PhysX gets more crap thrown at it than it deserves for how it\u0027s implemented in Unity, but even so, it\u0027s a sub-par physics engine, and replacing that with Havok and building a new threading model around that with the ECS was the best way Unity was able to resolve all of that.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nLast time we got any concrete updates on this side of the tech, it sounded like Intercept was still using game objects, meaning they\u0027d be stuck with the old style PhysX simulation. But that could have changed. ECS is becoming a new standard, and isn\u0027t that much work to convert to, so it\u0027s entirely possible that we\u0027re going to be looking at Havok physics, where there is way more flexibility in terms of how things are processed in threads. Plus, a\u00A0\u003Cem\u003Eway\u003C/em\u003E\u00A0more stable solver.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2022-12-27T23:40:40Z","Content":"\n\u003Cp\u003E\nYou are focusing a lot on collisions and spatial queries, but this is absolutely not a bottleneck even in KSP 1. The only perf issue is RB joints.\n\u003C/p\u003E\n\u003Cp\u003E\nGiven that ECS is barely out of experimental as we are speaking, I doubt KSP 2 is using anything beside a few specific Burst/Jobs implementations for a handful of subsystems, but maybe we will be surprised.\n\u003C/p\u003E\n\u003Cp\u003E\nThe very likely scenario is that KSP 2 is using exactely the same implementation as KSP 1 as far as RB physics are concerned, with a slightly smarter \u0022spam RB joints to avoid spring rockets\u0022 system and likely some \u0022optimizations\u0022 like merging parts as a single RB or making inactive stuff kinematic.\n\u003C/p\u003E\n\u003Cp\u003E\nAgain, the mistake here is to try to use PhysX RBs for something they can\u0027t do. Using Havoc or DOTS physics wouldn\u0027t change anything, as they all implement a lagrange multiplier solver that fundamentally can\u0027t guarantee that joint limits and drives won\u0027t be violated, and are simply not suited for long joint chains with highly variable RB mass ratios. And on a side note, PhysX also has a reduced coordinates solver, which is actually more suited for this kind of stuff. And it would not be that much of an effort to implement all RB physics stuff in a C\u002B\u002B library written on top of PhysX instead of relying on the Unity default wrapper/API.\n\u003C/p\u003E\n\u003Cp\u003E\nTime will tell soon, but while I\u0027m relatively optimistic that KSP 2 will be a better foundation than KSP 1, there are many hints that despite what was said, a lot of the core implementations were initially copypasted from KSP 1 without much analysis on if those implementations made sense in the first place. On many aspects, I\u0027m expecting a KSP 1 2.0, not a KSP 2 1.0.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2022-12-28T01:14:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224213304\u0022 data-ipsquote-contentid=\u0022199078\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672184440\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAgain, the mistake here is to try to use PhysX RBs for something they can\u0027t do. Using Havoc or DOTS physics wouldn\u0027t change anything, as they all implement a lagrange multiplier solver that fundamentally can\u0027t guarantee that joint limits and drives won\u0027t be violated, and are simply not suited for long joint chains with highly variable RB mass ratios.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think you\u0027re a bit out of date on solvers. Modern Havok solver, which is what\u0027s in Unity with ECS, uses an updated flow based on the work of Erin Catto. While the underlying principles are similar, the algorithmic approach is quite a bit different and results in much higher stability for long chains \u003Cem\u003Eand\u003C/em\u003E\u00A0much better performance. When implemented correctly, you should see no springiness at all outside of\u00A0\u003Cem\u003Eextreme\u003C/em\u003E\u00A0mass differences in the chain. That is, if you have two 1T modules hooked up to a 1kg module in between, yes, you\u0027ll see problems, though, even these can be tuned out, and if you throw a single strut between the 1T modules, that will go away completely. The bending you see with KSP is virtually nonexistent with the new solver. You literally can slap a single constraint at every logical joint and be fine for most practical cases.\n\u003C/p\u003E\n\u003Cp\u003E\nIt is also\u00A0\u003Cem\u003Efar\u003C/em\u003E\u00A0more performant. I have looked at possible room for optimizations in Crystal Dynamics\u0027 implementation (see numerous physics puzzles in reboot Lara Croft games,) and I found no reason to mess with the solver itself. We had\u00A0\u003Cem\u003Ethousands\u003C/em\u003E\u00A0RBs with thousands of contact points in a scene for Avengers, with no ill effects. (Avengers\u0027 overall performance sucks, but\u00A0\u003Cem\u003Enone\u003C/em\u003E\u00A0of that is on physics.)\u00A0Collision detection was absolutely the limiting factor for complex scenes, and that\u0027s the part that is most readily parallelized, so it hasn\u0027t made a performance difference either.\n\u003C/p\u003E\n\u003Cp\u003E\nIf your experience with solvers is PhysX, Bullet, and Havok as it worked around 2017 or earlier, you might want to get a refresher. Physics in modern solvers just isn\u0027t done this way. Better examples include Crystal Dynamics\u0027 Foundation Engine, which is the first one I\u0027m aware of implementing the new solver for a AAA game, modern implementations of Havok, and Chaos Physics from latest Unreal. The latter was still a bit unstable when I was doing evaluations for it, but that was in early private Beata of UE5, so I\u0027m told these problems got fixed and it should be a good representation. Alternatively, you can go to the source, and see how Erin Catto himself implemented it for Box2D engine.\n\u003C/p\u003E\n"},{"CreatedByName":"Arugela","CreatedById":133381,"CreatedDateTime":"2022-12-28T05:51:22Z","Content":"\n\u003Cp\u003E\nI\u0027ve been having this problem with other games that might have worked on linux except for.... (And has anyone gotten the chance to test it on proton?)\n\u003C/p\u003E\n\u003Cp\u003E\nWill this game work on an 1100t phenom? Other games recently would work performance wise, but the instructions set preclude playing the game. I forget the instruction set. But it started being used a gen after the phenom 1100t. I\u0027ve noticed it\u0027s problematic for newer games. Again, even if I could run them otherwise.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd it\u0027s still a bad time to update hardware.. At least for me.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-12-28T05:53:21Z\u0022 title=\u002212/28/2022 05:53  AM\u0022 data-short=\u00221 yr\u0022\u003EDecember 28, 2022\u003C/time\u003E by Arugela\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"GoldForest","CreatedById":77770,"CreatedDateTime":"2022-12-28T07:47:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224213384\u0022 data-ipsquote-contentid=\u0022211218\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221672206682\u0022 data-ipsquote-userid=\u0022133381\u0022 data-ipsquote-username=\u0022Arugela\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Arugela said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ve been having this problem with other games that might have worked on linux except for.... (And has anyone gotten the chance to test it on proton?)\n\u003C/p\u003E\n\u003Cp\u003E\nWill this game work on an 1100t phenom? Other games recently would work performance wise, but the instructions set preclude playing the game. I forget the instruction set. But it started being used a gen after the phenom 1100t. I\u0027ve noticed it\u0027s problematic for newer games. Again, even if I could run them otherwise.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd it\u0027s still a bad time to update hardware.. At least for me.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nKSP 2 will launch on Windows only during EA.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThey mentioned they\u0027d like to bring KSP 2 to Linux, but have no plans to do so during EA.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs for performance, no one knows. Intercept games has released no information. There\u0027s another thread talking about system requirements you might want to check out:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022208620\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed7741438408\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/199078-im-worried-about-the-possible-system-requirements-of-ksp2/\u0026amp;do=embed\u0022 style=\u0022height:197px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}