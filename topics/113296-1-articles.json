{"TopicId":113296,"ForumId":15,"TopicTitle":"Maximum Poly Counts","CreatedByName":"Phoenix1583","CreatedById":84915,"CreatedDateTime":"2015-06-18T04:34:47Z","PageNum":1,"Articles":[{"CreatedByName":"Phoenix1583","CreatedById":84915,"CreatedDateTime":"2015-06-18T04:34:47Z","Content":"Hey folks. Just curious about what level of detail should I be using when working on engines, fuel tanks, and other objects? Given that we do not yet have a functional (Windows) x64 client, I have a feeling that poly counts are rather limited. Is 3-5k polys too much for say... an engine?\n\nExample seen below (poly/tri count at top left)\n\n![2r5xgjt.jpg](http://i62.tinypic.com/2r5xgjt.jpg)\n\n**Edited \u003Ctime datetime=\u00222015-06-18T04:40:18Z\u0022 title=\u002206/18/2015 04:40  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 18, 2015\u003C/time\u003E by Phoenix1583**"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-18T08:02:00Z","Content":"Polycount doesnt do much in the way of memory or performance for that matter. Texture size is much more important. As a second concideration many unmerged/unattached objects in your part will slow down performance. \n\nWhen it comes to polycount i usually dont care so much about the count but instead i just try to keep the polygons even\u0027ish in size. Ie as cylinders taper in their segements decrease or a smaller cylinder gets less segements than a big one.\n\nI would compare a rocketengine in ksp to a weapon in an fps game for reference on how many will appear in a scene. Given that you can use too many polies but the tipping point is probably somewhere around 20-60k (depending on scale) for few use parts. And that is being quite conservative(given that ksp is played on low end computers, but in those cases you are still much more limited by texture size).\n\nYours is now about 6k. Just emagine how wastefull you would need to be to reach those kinds of numbers. For many use parts like fueltanks etc. You should probably be aiming for less than 5k polies.\n\nalso. When i say polies/poly im talking about triangles and not quads, so for a nontriangulated model youll be looking at the triangle count and not the polycount.\n\nAn example in ksp is the mainsail. It is around 10k polies if i remember correctly.\n\nhope this helps\n\nUpdate: improved explanation a bit and formatting\n\n**Edited \u003Ctime datetime=\u00222015-06-18T09:29:20Z\u0022 title=\u002206/18/2015 09:29  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 18, 2015\u003C/time\u003E by landeTLS**"},{"CreatedByName":"NecroBones","CreatedById":105424,"CreatedDateTime":"2015-06-18T13:17:40Z","Content":"\u003E \n\u003E Polycount doesnt do much in the way of memory or performance for that matter. Texture size is much more important. As a second concideration many unmerged/unattached objects in your part will slow down performance.\n\nFor clarity, specifically having multiple mesh *objects* will count against performance, much more than multiple mesh *islands* in a single object. Each mesh object is a separate draw call, and that\u0027s where you take the biggest performance hit."},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-18T14:18:38Z","Content":"Yes that was what i was getting at. It gets a bit cumbersome to explain properly because different softwares use different terminology. \n\nBasically You can have as many detached parts as you want, but they should be part of the same object (atleast when exported to unity)otherwise youll incur extra uneccesary drawcalls.\n\nTo further clarify you do not need to boolean or attach the meshes physically together, just attach them so they appear as 1 object in the inspector view. \n\nThere are cases where youll want them to be seperate objects. Like if you are animating them through basic parent/child based rigging(one example is the standard engine gimbal setup for the nozzle). If you use different texture maps for them and/or you need a different shader for the objects."},{"CreatedByName":"Beale","CreatedById":70533,"CreatedDateTime":"2015-06-18T19:29:26Z","Content":"For reference, the stock 1.25m engine (LVT-40?) has just over 1.5K triangles.\n\nTriangles is the important number, as I\u0027m pretty sure all quads and N-gons get converted to that in Unity.\n\n![77544ed5d2.png](http://puu.sh/itSWL/77544ed5d2.png)\n\nMainsail, and I imagine most of the other 2.5m engines have in region of 2.5K triangles.\n\n![e85beb5aa9.png](http://puu.sh/itTdM/e85beb5aa9.png)\n\nLike others have said, I\u0027m sure the engine can handle much higher numbers, but these are maybe good reference points.\n\n**Edited \u003Ctime datetime=\u00222015-06-18T19:33:40Z\u0022 title=\u002206/18/2015 07:33  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 18, 2015\u003C/time\u003E by Beale**"},{"CreatedByName":"Phoenix1583","CreatedById":84915,"CreatedDateTime":"2015-06-19T06:14:16Z","Content":"Alright, so to sum up what\u0027s been said thus far: \n\nA: Poly counts ingame are limited to increase performance on lower end machines.\n\nB: Poly counts are not a major factor in performance on higher end machines but textures are.\n\nC: Avoid multiple meshes where able if not needed. Combine into same group object.\n\nD: Stay under 10k tris per object to ensure that complex rocket designs are not bogging down the engine. \n\nE: Wait until 64bit becomes available. ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-19T08:58:05Z","Content":"Regarding A: yes to a small degree but texture size is still much more important. Think of it as what will tax the gpu/cpu most: The gpu is designed to render many points quickly through threading, this makes it excellent for rendering many polygons. But textures are one big 2d image that need to be painstakingly projected onto those polygons. I dont know so much about the internal processes here but from experimenting iwe seen that even lower end machines (that can barely run ksp smoothish by default) can easily handle moderately higher poly objects with small textures, its when you put in 1024\u002B\u002B textures on the parts that you get one figure framerates.\n\nE: 64bit wont do much/anything for performance. The major advantage as i see it is the ability run more mods in your game. I tell you, i was trying to get ksp running just with the full nearfuture pack and some kopernicus planets \u002B agressive texture compression. and there is just no way of balancing it to not go above the memory limit after a few launches. There may be a mem leak somewhere but even without that im too close for comfort to the memory crash limit after load.(for me the game crashes at around 3.4gb-3-8gb)\n\nBtw: did they optimize the mainsail? I thought i saw it at higher polycounts earlier.\n\n**Edited \u003Ctime datetime=\u00222015-06-19T09:00:42Z\u0022 title=\u002206/19/2015 09:00  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 19, 2015\u003C/time\u003E by landeTLS**"},{"CreatedByName":"Alewx","CreatedById":102791,"CreatedDateTime":"2015-06-19T09:10:10Z","Content":"My last stand at Unity was that it only supports meshes with up to 65k verticies.\n\nSo I think you might want to reduce the engine slightly."},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-19T11:06:10Z","Content":"Unity splits up single objects that are over 65k polygons to multiple drawcalls/objects automatically. I was able to get a model with over 1m polygons into ksp. But since it was split into almost 20 drawcalls the performance was a bit low. \n\nIn eather way his engine is only about 6k polygons not 60k so he is way below the treshold where unity needs to start splitting objects.\n\nMight be that unity counts verts here and not polygons. I dont remember. But in that case you are even better off as youll usually have less verts than polygons (triangles)\n\n**Edited \u003Ctime datetime=\u00222015-06-19T11:19:27Z\u0022 title=\u002206/19/2015 11:19  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 19, 2015\u003C/time\u003E by landeTLS**"},{"CreatedByName":"NecroBones","CreatedById":105424,"CreatedDateTime":"2015-06-19T13:38:23Z","Content":"Texture size is also important in the sense that KSP keeps all of the textures in memory all the time (unless you install ATM). For people who like to run a lot of mods, a heavy memory hit can be expensive. This is less a performance issue than one of playing nice with other mods, so that people can run more of them at once. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"Alewx","CreatedById":102791,"CreatedDateTime":"2015-06-19T13:42:03Z","Content":"\u003E \n\u003E Unity splits up single objects that are over 65k polygons to multiple drawcalls/objects automatically. I was able to get a model with over 1m polygons into ksp. But since it was split into almost 20 drawcalls the performance was a bit low. \n\u003E In eather way his engine is only about 6k polygons not 60k so he is way below the treshold where unity needs to start splitting objects.\n\u003E \n\u003E Might be that unity counts verts here and not polygons. I dont remember. But in that case you are even better off as youll usually have less verts than polygons (triangles)\n\nGood to know, in unity 3.6 (yeah that is quite a long time ago) and the one after that 65k vertices where the limit than the import stopped.\n\n\u003E \n\u003E Texture size is also important in the sense that KSP keeps all of the textures in memory all the time (unless you install ATM). For people who like to run a lot of mods, a heavy memory hit can be expensive. This is less a performance issue than one of playing nice with other mods, so that people can run more of them at once. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\nAt the same time (long ago) we learned that unity is better in handling less large textures than multiple small ones.\n\nBut like before my knowledge could be massively outdated."},{"CreatedByName":"NecroBones","CreatedById":105424,"CreatedDateTime":"2015-06-19T14:20:50Z","Content":"\u003E \n\u003E At the same time (long ago) we learned that unity is better in handling less large textures than multiple small ones.\n\u003E \n\u003E But like before my knowledge could be massively outdated.\n\nYeah, I have no idea on that one, especially with Unity 5 around the corner for us. \n\nBut just from a \u0022memory saving\u0022 context, these days I tend to favor one big texture shared amongst several parts. The more parts that can use the same texture, the better. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-19T16:00:53Z","Content":"Using a big texture across many parts/models (i believe its called \u0022texture atlasing\u0022 or something thereabouts) is a good idea for memory savings, and with limited memory available with the 32bit based ksp this becomes good practice in almost all cases. \n\nBut to delve more into detail each drawcall must now reference a big texture file rather than a smaller one, it could perhaps lower the performance compared to multiple moderatly sized maps. (For example you have 4 parts. Eather using 1 x 2048map or 4 x 512maps)\n\nBut this is where my knowledge of the processes really falls short. \n\nKsp keeps all assets loaded at all times. Ram/ddr memory is very fast and gpu memory is even faster so the fact that multiple operations may be referencing the same memory blocks at the same time should not be a performance issue. But the bigger map size may be an issue as for example each mesh rendering operation on our 4 parts must now reference the 2048map (4 x 2048) vs (4 x 512). But again there may be some batching/caching or other smart programming going on in the background to make this less of an issue(inside directx/opengl and/or in unity). So unless someone here has some more in depth knowledge, testing it ingame may be the best way to know for sure."},{"CreatedByName":"Beale","CreatedById":70533,"CreatedDateTime":"2015-06-19T17:07:55Z","Content":"\u003E \n\u003E Using a big texture across many parts/models (i believe its called \u0022texture atlasing\u0022 or something thereabouts) is a good idea for memory savings, and with limited memory available with the 32bit based ksp this becomes good practice in almost all cases. \n\u003E But to delve more into detail each drawcall must now reference a big texture file rather than a smaller one, it could perhaps lower the performance compared to multiple moderatly sized maps. (For example you have 4 parts. Eather using 1 x 2048map or 4 x 512maps)\n\nThis is my go-to method of texture design (See texture repo in signature), really can it cause performance problems? (I thought UV shapes were referenced as percentages of the distance of the height and width of the texture, so different resolutions would not impact performance).\n\nEither way, interesting info, thanks ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\n\u003E Btw: did they optimize the mainsail? I thought i saw it at higher polycounts earlier.\n\nPossibly, those numbers were taking using the Blender .MU converter - I don\u0027t know if there are any errors in conversion, so you might want to regard them with a pinch of salt.\n\n**Edited \u003Ctime datetime=\u00222015-06-19T17:14:16Z\u0022 title=\u002206/19/2015 05:14  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 19, 2015\u003C/time\u003E by Beale**"},{"CreatedByName":"NecroBones","CreatedById":105424,"CreatedDateTime":"2015-06-19T17:47:43Z","Content":"\u003E \n\u003E really can it cause performance problems? (I thought UV shapes were referenced as percentages of the distance of the height and width of the texture, so different resolutions would not impact performance).\n\nThat\u0027s my understanding as well. I\u0027m surprised to hear of performance differences with larger textures. The one thing I can think of, is if the video card has very little video memory, so the textures have to be loaded/purged from the video memory more frequently. That I could understand."},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-19T18:59:48Z","Content":"Yea. Take my theorizing with a grain of salt. It may be that the performance does indeed not take any hit what so ever by using big atlases across many parts over single per part maps. A quick google search did not uncover any good resources on this in a performance context. I kindof wanna test out using a 4096 atlas across a bunch of parts vs 512 single ones to see if there are any difference in fps.\n\nIn any case its good practice to prioritize decreasing drawcalls on your meshes. Ie avoiding multiple materials/texture maps on single parts as well as attaching objects into one as much as possible. Texture size and this does much more for your performance than does polycount\n\nedit:\n\ni did a quick atlas vs single maps experiment with my potato laptop(intel i5-460m @ 2.53ghz, ati radeon 5650 1gb, 4gb ddr3 ram) graphics card is a bit on the weak side, so this one barely runs ksp with full texture resolution(at 10-20fps..)\n\nthese are the results:\n\n\u003E [Javascript is disabled. View full album](//imgur.com/a/OFY45)\n\nas you can see the results where quite even, if you can see the tiny fps view in the upper right corner. the avarage was about the same for both the 4 parts with the single 1024 maps vs the 4 parts sharing a 4096 atlas map. i didnt do any more detailed checking because most differences will probably mostly be on account of noise on this laptop. the single maps did seem to perhaps have a higher peak fps but the avarage was 8-11 for both atlas and single.\n\ni set this up by picking a part that didnt use a normalmap and used a big texture(i picked one of the kerbodyne tanks that uses a 1024x1024map) i then duplicated the folder 4 times and renamed the parts in the cfgs. i then duplicated all 4 folders and scaled one of the texture maps to 4096x4096, put it in a seperate folder and scaled down the texture maps of those 4 parts to 1x1 i then referenced the texture atlas in the cfg of those 4 parts, and renamed them.\n\nyou can download the gamedata folder [here](https://drive.google.com/file/d/0B9yFzV-G4YPzaS1YOWUtM0piNVE/view?usp=sharing) if you wanna try it out. it would be easier to distinguish any differing results if the test is run on a more suitable (low\u003Emidrange with a slightly petter gpu) computer, and if running a better fps logger. Its probably easier to see any differences if more of each parts are used\n\nedit:\n\nsorry to the op about cluttering his thread with discussions of tiny optimizations. hopefully his questions got answered.\n\n**Edited \u003Ctime datetime=\u00222015-06-19T20:58:32Z\u0022 title=\u002206/19/2015 08:58  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 19, 2015\u003C/time\u003E by landeTLS**"},{"CreatedByName":"Beale","CreatedById":70533,"CreatedDateTime":"2015-06-19T21:57:17Z","Content":"\u003E \n\u003E -Science-\n\nGreat stuff!\n\nMany thanks for taking the time to do this.\n\nInteresting stuff, it appears the overall impact is thankfully quite minimal - *but, there is a difference* which is good to know."},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-20T01:26:45Z","Content":"\u003E \n\u003E Great stuff!\n\u003E Many thanks for taking the time to do this.\n\u003E \n\u003E Interesting stuff, it appears the overall impact is thankfully quite minimal - *but, there is a difference* which is good to know.\n\nactually youll be happy to know, i did another test after a modeling session. this time on my main gaming/rendering pc and the results are much more conclusive. there is actually about a 16% gain in performance in using an oversized atlas over single maps(in this case, might be even higher in most cases)\n\n    2015-06-20 03:07:00 - KSPFrames: 1505 - Time: 60000ms - Avg: 25.083 - Min: 9 - Max: 29//this is with single 1024x1024 texture maps2015-06-20 03:10:11 - KSPFrames: 1747 - Time: 60000ms - Avg: 29.117 - Min: 7 - Max: 35//this is with the single 4096x4096 atlas map\n\n![HZGI1ap.png](http://i.imgur.com/HZGI1ap.png)![xvG9qdW.png](http://i.imgur.com/xvG9qdW.png)\n\nepic stack of tanks is epic.\n\nsorry no FPS overlay, forgot that fraps doesnt work that way\n\n**Edited \u003Ctime datetime=\u00222015-06-20T01:39:08Z\u0022 title=\u002206/20/2015 01:39  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 20, 2015\u003C/time\u003E by landeTLS**"},{"CreatedByName":"NecroBones","CreatedById":105424,"CreatedDateTime":"2015-06-20T14:49:56Z","Content":"\u003E \n\u003E actually youll be happy to know, i did another test after a modeling session. this time on my main gaming/rendering pc and the results are much more conclusive. there is actually about a 16% gain in performance in using an oversized atlas over single maps(in this case, might be even higher in most cases)\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     2015-06-20 03:07:00 - KSPFrames: 1505 - Time: 60000ms - Avg: 25.083 - Min: 9 - Max: 29//this is with single 1024x1024 texture maps2015-06-20 03:10:11 - KSPFrames: 1747 - Time: 60000ms - Avg: 29.117 - Min: 7 - Max: 35//this is with the single 4096x4096 atlas map\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E [http://i.imgur.com/HZGI1ap.png](http://i.imgur.com/HZGI1ap.png)[http://i.imgur.com/xvG9qdW.png](http://i.imgur.com/xvG9qdW.png)\n\u003E \n\u003E epic stack of tanks is epic.\n\u003E \n\u003E sorry no FPS overlay, forgot that fraps doesnt work that way\n\nAwesome. So yes, one big texture beats many small textures. That\u0027s good to know. \n\nBTW, FRAPS has a checkbox in the screenshot settings for including framerate."},{"CreatedByName":"Beale","CreatedById":70533,"CreatedDateTime":"2015-06-20T14:59:16Z","Content":"\u003E \n\u003E actually youll be happy to know, i did another test after a modeling session. this time on my main gaming/rendering pc and the results are much more conclusive. there is actually about a 16% gain in performance in using an oversized atlas over single maps(in this case, might be even higher in most cases)\n\nWhy can\u0027t I rep you again? Ack!\n\nThat\u0027s great news, thanks for gathering even more data on it! ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-20T16:05:06Z","Content":"\u003E \n\u003E Why can\u0027t I rep you again? Ack!\n\u003E That\u0027s great news, thanks for gathering even more data on it! ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\nno problem, i just thought of another fun performance test to run. hipoly vs lowpoly w/ big maps\n\ntake one cylindrical hipoly model with 20-40k triangles(lots of greebles on it), bake out a big normalmap from it and perhaps ao to a plain cylinder. create mu files with same collider for both. but put a 1x1 texturemap to the hipoly model(this is to keep the game from temporarily freezing as it is looking for a nonexisting texture map), and the 1024x1024 normals/diffuse to the plain cylinder. put a bunch of each on two different vessels and check avarage fps over 60 sec.\n\ni might run it later.\n\njust saw the trick with the fps in fraps now, thanks to necrobones for pointing it out\n\n**Edited \u003Ctime datetime=\u00222015-06-20T16:07:34Z\u0022 title=\u002206/20/2015 04:07  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 20, 2015\u003C/time\u003E by landeTLS**"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2015-06-23T06:38:25Z","Content":"Ok, so here\u0027s a noob question. I assume collision meshes add into the equation. Do multiples of those matter much? I know they\u0027re low poly count."},{"CreatedByName":"NecroBones","CreatedById":105424,"CreatedDateTime":"2015-06-23T13:22:35Z","Content":"\u003E \n\u003E Ok, so here\u0027s a noob question. I assume collision meshes add into the equation. Do multiples of those matter much? I know they\u0027re low poly count.\n\nYep, generally you want to keep them as simple as possible, with as few of them as possible, to get a good rough estimate of the shape of your object. The more of them you have, and the more polygons they have, the more it taxes the physics system, which is where most of KSPs performance problems are. \n\nThe stock fuel tanks use a single 12-sided cylinder as the collider, as an example of what you might want to aim for. Sometimes you have no choice but to use more, for more complicated parts. Cargo bays and the like will usually have several rectangular ones for the walls and doors. Landing legs have separate colliders for the piston parts, and the attachment base.\n\nHere\u0027s an example of colliders I did for a more unusually shaped part (the command pod for the Joolian Discovery). I used a truncated \u0022sphere\u0022 for the bulk of the pod, and two more \u0022truncated cone\u0022 colliders for the neck area, all 12-sided:\n\n\u003E [Javascript is disabled. View full album](//imgur.com/a/aZpzs)"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2015-06-23T14:49:51Z","Content":"What necrobones said. In addition you are limited to 256 tris (if i remember correct, might be verts) for each collision mesh. But this is still probably more than you need. Its probably better to combine several colliders to match more complex shapes (since these dont contribute to extra drawcalls). I prefer the primitive box collider in unity for adding protruding collider pieces. But there may be some performance issues by using exessive amounts of colliders. Its also not currently possible to make concave (shapes with holes in them) colliders work in ksp. In order to make them you need to arrange several colliders to make up your shape\n\n**Edited \u003Ctime datetime=\u00222015-06-23T15:00:27Z\u0022 title=\u002206/23/2015 03:00  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 23, 2015\u003C/time\u003E by landeTLS**"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2015-06-23T16:07:42Z","Content":"\u003E \n\u003E What necrobones said. In addition you are limited to 256 tris (if i remember correct, might be verts) for each collision mesh. But this is still probably more than you need. Its probably better to combine several colliders to match more complex shapes (since these dont contribute to extra drawcalls). I prefer the primitive box collider in unity for adding protruding collider pieces. But there may be some performance issues by using exessive amounts of colliders. Its also not currently possible to make concave (shapes with holes in them) colliders work in ksp. In order to make them you need to arrange several colliders to make up your shape\n\nYea, I discovered the 256 limit in one instance in the log. What I\u0027ve mostly been doing is chopping the model into pieces in the editor (save selection as .obj) and just importing the .obj pieces into Unity and using those for colliders. Most of my parts aren\u0027t standard shapes. Looking at necro\u0027s model, I guess I would have come up with the same shapes but maybe not the same way. I would have selected all the faces in the forward round part, the truncated sphere, and exported that as an obj, and then the same for the two rear truncated cones. I wouldn\u0027t attempt to make those from Unity primitives. I assume this is the correct method.\n\nOne thing this thread has taught me, I\u0027m WAY under the poly count. I doubt any of mine have more than 500. So that\u0027s good news, I can make my models smoother. As for UV\u0027s, I used Wings 3D and have no idea how to combine the unwraps. I assume that\u0027s something I\u0027d have to plan out as in, keep model x\u0027s unwraps on the left side and model y\u0027s unwraps on the right side and then use my graphics editor to mash the two together in the same .png file?"}]}