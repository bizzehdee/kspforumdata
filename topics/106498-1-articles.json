{"TopicId":106498,"ForumId":29,"TopicTitle":"Is it o.k to extend a pre-existing partmodule?","CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2015-05-01T06:50:58Z","PageNum":1,"Articles":[{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2015-05-01T06:50:58Z","Content":"\n\u003Cp\u003EI am trying to write some code for the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/118189-1-0-Heat-Management-Heatsink-and-Radiator-parts-%28VERY-stockalike%29-Version-update-\u0022 rel=\u0022external nofollow\u0022\u003Eheating management\u003C/a\u003E mod. My initial approach was to extend the ModuleDeployableSolarPanel Module and adjust it so that it rotates itself parralell to the sun instead of perpendicular. After looking in the assembly browser I found a field called sunAOA, so I thought perfect, I\u0027ll just write a property for this that modifies it\u0027s value so that it rotates away from the sun. However, when I tried this nothing happened. the debug statements don\u0027t even show up. So now I\u0027m stuck and have no idea what i\u0027m doing wrong. any suggestions.\u003C/p\u003E\u003Cp\u003EHere is my code: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing System;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace HeatManagement\u003Cbr\u003E{\u003Cbr\u003E    public class ModuleDeployableRadiator : ModuleDeployableSolarPanel\u003Cbr\u003E    {\u003Cbr\u003E//        public override void OnStart (StartState state)\u003Cbr\u003E//        {\u003Cbr\u003E//            print(\u0022TESTING\u0022);\u003Cbr\u003E//\u003Cbr\u003E//        }\u003Cbr\u003E        private float modSunAOA = 0;\u003Cbr\u003E        public new float sunAOA\u003Cbr\u003E        {\u003Cbr\u003E            get\u003Cbr\u003E            {\u003Cbr\u003E                print (\u0022TESTING\u0022);\u003Cbr\u003E                return modSunAOA;\u003Cbr\u003E            }\u003Cbr\u003E            set\u003Cbr\u003E            {\u003Cbr\u003E                print(\u0022[HEATMANAGER] sunAOA: \u0022 \u002B sunAOA);\u003Cbr\u003E                modSunAOA = Math.Abs(value - 1);\u003Cbr\u003E                print(\u0022[HEATMANAGER] value: \u0022 \u002B value);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ENew Development (pun intended)! I tried adding a kspField to the start of my property, just to see what would happen. I changed the GUI name so I could see if it worked and when I opened the right click menu It was still \u0022Sun Exposure\u0022, the old GUI name.\u003C/p\u003E\u003Cp\u003Enew code: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing System;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace HeatManagement\u003Cbr\u003E{\u003Cbr\u003E    public class ModuleDeployableRadiator : ModuleDeployableSolarPanel\u003Cbr\u003E    {\u003Cbr\u003E//        public override void OnStart (StartState state)\u003Cbr\u003E//        {\u003Cbr\u003E//            print(\u0022TESTING\u0022);\u003Cbr\u003E//\u003Cbr\u003E//        }\u003Cbr\u003E        private float _sunAOA;\u003Cbr\u003E\u003Cbr\u003E        [KSPField (guiName = \u0022radiator occlusion\u0022, guiUnits = \u0022 \u0022, guiFormat = \u0022F2\u0022, guiActive = true)]\u003Cbr\u003E        public new float sunAOA\u003Cbr\u003E        {\u003Cbr\u003E            get\u003Cbr\u003E            {\u003Cbr\u003E                print (\u0022TESTING\u0022);\u003Cbr\u003E                return _sunAOA;\u003Cbr\u003E            }\u003Cbr\u003E            set\u003Cbr\u003E            {\u003Cbr\u003E                print(\u0022[HEATMANAGER] sunAOA: \u0022 \u002B sunAOA);\u003Cbr\u003E                _sunAOA = Math.Abs(value - 1);\u003Cbr\u003E                print(\u0022[HEATMANAGER] value: \u0022 \u002B value);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-05-01T07:08:59Z","Content":"\n\u003Cp\u003EPutting a Field tag on a property won\u0027t work is my experience.\u003C/p\u003E\n"},{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2015-05-01T07:24:40Z","Content":"\n\u003Cp\u003Eoh. any ideas on what I could do then?\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-05-01T07:38:53Z","Content":"\n\u003Cp\u003E1) Rename the module to your own name PartModule in the part cfg and add a RadiatorAoA entry\u003C/p\u003E\u003Cp\u003E2) something like this should work\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[KSPField]\u003Cbr\u003Epublic float RadiatorAoA;\u003Cbr\u003E\u003Cbr\u003Epublic override void OnStart(StartState state)\u003Cbr\u003E{\u003Cbr\u003E    SunAOA = RadiatorAoA;\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"}]}