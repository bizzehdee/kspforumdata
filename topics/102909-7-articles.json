{"TopicId":102909,"ForumId":29,"TopicTitle":"KSP Plugin debugging and profiling for Visual Studio and Monodevelop on all OS","CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-03-29T11:09:00Z","PageNum":7,"Articles":[{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2018-12-20T19:10:13Z","Content":"\u003E \n\u003E \n\u003E 11 hours ago, NermNermNerm said:\n\u003E \n\u003E \n\u003E you get pdb2mdb with your unity installation\n\u003E \n\nI have not tested it in a long time but that one used to not properly work on Roslyn generated dlls."},{"CreatedByName":"NermNermNerm","CreatedById":174264,"CreatedDateTime":"2018-12-23T03:54:44Z","Content":"\u003E \n\u003E \n\u003E On 12/20/2018 at 11:10 AM, sarbian said:\n\u003E \n\u003E \n\u003E I have not tested it in a long time but that one used to not properly work on Roslyn generated dlls.\uFEFF\n\u003E \n\nJust did - doesn\u0027t work.  WTH.  These are grownups making Unity right?  Stick with your version."},{"CreatedByName":"Gavin786","CreatedById":196260,"CreatedDateTime":"2019-03-22T23:08:19Z","Content":"\u003E \n\u003E \n\u003E On 3/30/2015 at 12:01 AM, Teknoman117 said:\n\u003E \n\u003E \n\u003E Okay, so, just my luck it doesn\u0027t work for me...\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E Did everything you said, got the \u0022development version\u0022 watermark in the KSP window and everything. However, nothing happens when I try to attach to the process (I\u0027m guessing it failed to attach). However, it sometimes opens the developer console with a long list of the same message about failing to wait on a semaphore (something which seemed to be mentioned in angavrilov\u0027s commit log for his debugger. If i try to set a breakpoint anywhere, a couple seconds later mono pops up a dialog with \u0022Debug operation failed.\u0022 I verfied that in this case I hit attach before the connection timed out.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E This is what the executable spits out for me as well.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E  \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E     Set current directory to /home/nathaniel/Projects/ksp/0.90.0\n\u003E     Found path: /home/nathaniel/Projects/ksp/0.90.0/KSP.x86_64\n\u003E     Mono path[0] = \u0027/home/nathaniel/Projects/ksp/0.90.0/KSP_Data/Managed\u0027\n\u003E     Mono path[1] = \u0027/home/nathaniel/Projects/ksp/0.90.0/KSP_Data/Mono\u0027\n\u003E     Mono config path = \u0027/home/nathaniel/Projects/ksp/0.90.0/KSP_Data/Mono/etc\u0027\n\u003E     PlayerConnection initialized from /home/nathaniel/Projects/ksp/0.90.0/KSP_Data (debug = 0)\n\u003E     PlayerConnection initialized network socket : 0.0.0.0 55502\n\u003E     Multi-casting \u0022[IP] 192.168.1.69 [Port] 55502 [Flags] 3 [Guid] 661409256 [EditorId] 803286173 [Version] 1048832 [Id] LinuxPlayer(192.168.1.69) [Debug] 1\u0022 to [225.0.0.222:54997]...\n\u003E     Waiting for connection from host on [192.168.1.69:55502]...\n\u003E     Timed out. Continuing without host connection.\n\u003E     Using monoOptions --debugger-agent=transport=dt_socket,embedding=1,defer=y,address=0.0.0.0:56256\n\u003E     PlayerConnection already initialized - listening to [192.168.1.69:55502]\n\u003E \n\nI did have a similar problem to this.\n\nFor anyone who is having the problem of clicking on \u0022Attach Unity Debugger\u0022 and not having any unity instances listed and not being able to attach.\n\nYou need to press on \u0022Open Log File\u0022.\n\nThen you need to look for the line :\n\nUsing monoOptions --debugger-agent=transport=dt\\_socket,embedding=1,defer=y,address=0.0.0.0:56900\n\nThe last value on that line in this case 56900 is the port you need to connect to.\n\nPlease be aware that so far the port changes from run to run.  Perhaps there is a way to stabilize it that some of the ppl more familiar with Unity have found out?\n\nAnyway if you go to \u0022Attach Unity Debugger\u0022, and then \u0022Input IP\u0022, specify your PC\u0027s IP then use the port 56900 in this case, whatever the port number in the log file specifies.  You can then debug your KSP mod.\n\nI hope this saves someone some time and ball ache.\n\nGavin786"},{"CreatedByName":"whitespacekilla","CreatedById":190042,"CreatedDateTime":"2019-07-01T21:28:34Z","Content":"I decided I want to be able to develop on Mac OSX as well as Windows (for whatever reason) so I figured out how to make this tutorial work for Mac. I\u0027m posting this here as much so I can find it if I need to figure it out again as for someone else\u0027s use but here goes anyway. Some items of note: KSP\u0027s files are arranged very differently in Mac OSX vs Windows and in fact they are a little \u0022quirky\u0022, you will also be browsing inside multiple \u0022.app\u0022 files, rendering the finder window less than useful. As a consequence, if you are not comfortable with the Mac OS terminal and paths, this tutorial is not for you and you will not succeed at it. Also, pdb2mdb does not work for PDBs produced in a portable format, which your Mac OSX compiler will almost certainly produce. You will need to either select a compiler that create its own mdb or use a debugger that can decompile on it\u0027s own (like JetBrains Rider), because so few plugin developers use Mac OSX, you won\u0027t get a lot of help navigating this issue, so besides the steps, paths, and advice I lay out here, you are probably on your own.\n\n- Install the correct version of Unity (down to the patch). The current correct version for KSP 1.7.2 is 2017.1.3p1; patch releases are available here -\u003E [https://unity3d.com/unity/qa/patch-releases](https://unity3d.com/unity/qa/patch-releases); non-patch releases are available here -\u003E [https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive) (NOT what you need at time of writing)\n- Determine your KSP install path (for me, it\u0027s \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/\u0022) and the correct Unity version install path (for me, it\u0027s \u0022/Applications/Unity/\u0022)\n- Copy the debug UnityPlayer from your Unity install to your KSP install; As far as I know, this must be done from the command line \u0060cp \u0022[YOUR CORRECT VERSION UNITY INSTALL PATH ]/Unity.app/Contents/PlaybackEngines/MacStandaloneSupport/Variations/universal\\_development\\_mono/UnityPlayer.app/Contents/MacOS/UnityPlayer\u0022 \u0022[YOUR KSP INSTALL PATH]/KSP.app/Contents/MacOS\u0022, for me, this command was:\n\n    cp \u0022/Applications/Unity/Unity.app/Contents/PlaybackEngines/MacStandaloneSupport/Variations/universal_development_mono/UnityPlayer.app/Contents/MacOS/UnityPlayer\u0022 \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/MacOS\u0022\n\n- Go ahead and rename the UnityPlayer you copied, as far as I can tell, this has no impact on whether it will work or not but it will help you differentiate the process you need to attach to, I ran the following command:\n\n    mv \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/MacOS/UnityPlayer\u0022 \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/MacOS/KSP_dbg\u0022\n\n- Get this [file](https://www.sarbian.com/sarbian/PlayerConnectionConfigFile) (it\u0027s just a file named PlayerConnectionConfig with contents \u0022listen 3247424759 1 1\u0022 if it ever stops being hosted) sarbian provided and put it in the Data directory (it makes the mono debugger starts its listening port, otherwise when you are browsing unity processes to attach to, you will see KSP but it will tell you it\u0027s not accepting debug connections); for me, this copy command was:\n\n    cp \u0022~/Downloads/PlayerConnectionConfigFile\u0022 \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/Resources/Data/\u0022\n\n- Ensure your toolchain will create an MDB for your plugin or select an IDE that doesn\u0027t require MDBs; [this article](https://blog.jetbrains.com/dotnet/2018/02/20/working-external-class-libraries-unity-rider/) from the team at JetBrains helped me understand what I needed to get an MDB file when compiling on Mac OS; if you use monodevelop , the mono included with your unity install will be used so this will be automatic, if you use rider or some other IDE, you will need to set your Mono executable path to the one provided by Unity, I do not know how to do this for VS on Mac and will probably not learn, it\u0027s easier to solve than any of the other items of information in this post though so, if you give up before figuring that out, you were probably going to give up anyway \\*shrug\\*\n- Launch the debug unity player, the command for me was:\n\n    cd /Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/MacOS \u0026\u0026 open KSP_dbg\n\n- Run whatever command your IDE uses to attach to a Unity process. i.e. in MonoDevelop, supposedly it\u0027s \u0022Run\u0022 \u003E \u0022Attach to Process\u0022, Select \u0022Unity Debugger\u0022, find the process, in Rider (what I currently use) it\u0027s \u0022Attached to Unity Process...\u0022. Select the KSP process and attach.\n\n**Edited \u003Ctime datetime=\u00222019-07-01T21:32:02Z\u0022 title=\u002207/01/2019 09:32  PM\u0022 data-short=\u00225 yr\u0022\u003EJuly 1, 2019\u003C/time\u003E by whitespacekilla**"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2019-07-01T21:31:48Z","Content":"\u003E \n\u003E \n\u003E 2 minutes ago, whitespacekilla said:\n\u003E \n\u003E \n\u003E I figured out how to make this tutorial work for Mac\n\u003E \n\nAwesome. Linked in the first post."},{"CreatedByName":"whitespacekilla","CreatedById":190042,"CreatedDateTime":"2019-07-01T21:38:10Z","Content":"@sarbian happy to be helpful. Your original post helped me out on Windows (to such an extent that I probably wouldn\u0027t have contributed to any mods if it weren\u0027t for your post) and steered me in the right direction for Mac.\n\nJust building on Mac OS is a little different challenge that will probably invite more questions, unfortunately. For example, I have to maintain a macos.targets file that I import into my projects only if the platform is mac. That\u0027s outside of the scope of debugging so I left it out but I really don\u0027t know how many modders will be able to put it all together. If I didn\u0027t already know a lot about msbuild, I probably would have bailed on Mac OS before I even got anything to compile.\n\nAlso, this method on Mac OS seems to fail to contact the SteamAPI. I\u0027m generally okay with that (I\u0027ve never used the steam features even when playing, let alone debugging a mod) but maybe that will present a challenge for someone?"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2019-10-16T21:04:25Z","Content":"[@JPLRepo](https://forum.kerbalspaceprogram.com/index.php?/profile/114736-jplrepo/) was kind enough to provide me with updated instruction for KSP 1.8. I ll paste them here and will update the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E later\n\n\u003E \n\u003E \n\u003E Quote\n\u003E \n\u003E \n\u003E Install 2019.2.2f1 you need these two exe\u0027s to convert the pdb to mdb:  \n\u003E \n\u003E \u003Cinstall directory=\u0022\u0022\u003E\\Editor\\Editor\\Data\\MonoBleedingEdge\\bin\\mono.exe\u003Cbr\u003E\n\u003E \u003Cinstall directory=\u0022\u0022\u003E\\Editor\\Editor\\Data\\MonoBleedingEdge\\lib\\mono\\4.5\\pdb2mdb.exe       \u003Cbr\u003E\n\u003E Unity No longer uses PlayerConnectionConfigFile instead you edit boot.config file (in the data directory where this file used to go) and add the line:\u003Cbr\u003E\n\u003E player-connection-debug=1\n\u003E \u003C/install\u003E\u003C/install\u003E\n\u003E \n\u003E \n\u003E \n\u003E For the game exe. You must copy the WindowsPlayer.exe (rename if you want) UnityPlayer.dll and WinPixEventRuntime.dll into the KSP install directory.\n\u003E"},{"CreatedByName":"micha","CreatedById":113840,"CreatedDateTime":"2019-10-20T11:26:16Z","Content":"\u003E \n\u003E \n\u003E On 10/17/2019 at 6:04 AM, sarbian said:\n\u003E \n\u003E \n\u003E [@JPLRepo](https://forum.kerbalspaceprogram.com/index.php?/profile/114736-jplrepo/) was kind enough to provide me with updated instruction for KSP 1.8. I ll paste them here and will update the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E later\n\u003E \n\nHmm, so I can\u0027t get this working properly.\n\nthe new pdb2mdb just returns:\n\n    Mono pdb to mdb debug symbol store converter\n    Usage: pdb2mdb assembly\n\nAnd yes, I provide the fully-qualified name to the DLL.\n\nI\u0027ve also tried running it via mono.exe (fully-qualified names for all paths) and then it returns:\n\n    Fatal error:\n    Microsoft.Cci.Pdb.PdbDebugException: Unknown custom metadata item kind: 6\n      at Microsoft.Cci.Pdb.PdbFunction.ReadCustomMetadata (Microsoft.Cci.Pdb.BitAccess bits) [0x000bf] in :0\n      at Microsoft.Cci.Pdb.PdbFunction..ctor (System.String module, Microsoft.Cci.Pdb.ManProcSym proc, Microsoft.Cci.Pdb.BitAccess bits) [0x00213] in :0\n      at Microsoft.Cci.Pdb.PdbFunction.LoadManagedFunctions (System.String module, Microsoft.Cci.Pdb.BitAccess bits, System.UInt32 limit, System.Boolean readStrings) [0x001e7] in :0\n      at Microsoft.Cci.Pdb.PdbFile.LoadFuncsFromDbiModule (Microsoft.Cci.Pdb.BitAccess bits, Microsoft.Cci.Pdb.DbiModuleInfo info, Microsoft.Cci.Pdb.IntHashTable names, System.Collections.ArrayList funcList, System.Boolean readStrings, Microsoft.Cci.Pdb.MsfDirectory dir, System.Collections.Generic.Dictionary\u00602[TKey,TValue] nameIndex, Microsoft.Cci.Pdb.PdbReader reader) [0x00039] in :0\n      at Microsoft.Cci.Pdb.PdbFile.LoadFunctions (System.IO.Stream read, Microsoft.Cci.Pdb.BitAccess bits, System.Boolean readAllStrings) [0x000c8] in :0\n      at Microsoft.Cci.Pdb.PdbFile.LoadFunctions (System.IO.Stream read, System.Boolean readAllStrings) [0x0000b] in :0\n      at Pdb2Mdb.Driver.Convert (Mono.Cecil.AssemblyDefinition assembly, System.IO.Stream pdb, Mono.CompilerServices.SymbolWriter.MonoSymbolWriter mdb) [0x00000] in :0\n\nThere\u0027s some very old information about this error but nothing current. All suggestions seem to be to use a standalone pdb2mdb program (which is the one I was using up to now). But using that one I can\u0027t set breakpoints so I\u0027m guessing something has changed.\n\nI eventually had some luck creating an MDB with this tool: [https://github.com/shravan2x/Pdb2Mdb-GUI/releases](https://github.com/shravan2x/Pdb2Mdb-GUI/releases) Looking at the code, it should be easy enough to create a command-line utility based on it.  \n\nHowever, it is now ridiculously slow to attach/debug, with pauses up to 10\u002B minutes. Not sure if others are seeing this, if not, any suggestions on what I should look at? I have tried both VS2017 and 2019.  \n\nPS. for the game exe, you must rename WindowsPlayer.exe and/or rename/symlink KSP\\_x64\\_Data appropriately as before."},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2019-10-20T12:00:45Z","Content":"\u003E \n\u003E \n\u003E 38 minutes ago, micha said:\n\u003E \n\u003E \n\u003E Hmm, so I can\u0027t get this working properly.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E the new pdb2mdb just returns:\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E     Mono pdb to mdb debug symbol store converter\n\u003E     Usage: pdb2mdb assembly\n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E And yes, I provide the fully-qualified name to the DLL.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E I\u0027ve also tried running it via mono.exe (fully-qualified names for all paths) and then it returns:\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E     Fatal error:\n\u003E     Microsoft.Cci.Pdb.PdbDebugException: Unknown custom metadata item kind: 6\n\u003E       at Microsoft.Cci.Pdb.PdbFunction.ReadCustomMetadata (Microsoft.Cci.Pdb.BitAccess bits) [0x000bf] in :0\n\u003E       at Microsoft.Cci.Pdb.PdbFunction..ctor (System.String module, Microsoft.Cci.Pdb.ManProcSym proc, Microsoft.Cci.Pdb.BitAccess bits) [0x00213] in :0\n\u003E       at Microsoft.Cci.Pdb.PdbFunction.LoadManagedFunctions (System.String module, Microsoft.Cci.Pdb.BitAccess bits, System.UInt32 limit, System.Boolean readStrings) [0x001e7] in :0\n\u003E       at Microsoft.Cci.Pdb.PdbFile.LoadFuncsFromDbiModule (Microsoft.Cci.Pdb.BitAccess bits, Microsoft.Cci.Pdb.DbiModuleInfo info, Microsoft.Cci.Pdb.IntHashTable names, System.Collections.ArrayList funcList, System.Boolean readStrings, Microsoft.Cci.Pdb.MsfDirectory dir, System.Collections.Generic.Dictionary\u00602[TKey,TValue] nameIndex, Microsoft.Cci.Pdb.PdbReader reader) [0x00039] in :0\n\u003E       at Microsoft.Cci.Pdb.PdbFile.LoadFunctions (System.IO.Stream read, Microsoft.Cci.Pdb.BitAccess bits, System.Boolean readAllStrings) [0x000c8] in :0\n\u003E       at Microsoft.Cci.Pdb.PdbFile.LoadFunctions (System.IO.Stream read, System.Boolean readAllStrings) [0x0000b] in :0\n\u003E       at Pdb2Mdb.Driver.Convert (Mono.Cecil.AssemblyDefinition assembly, System.IO.Stream pdb, Mono.CompilerServices.SymbolWriter.MonoSymbolWriter mdb) [0x00000] in :0\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E There\u0027s some very old information about this error but nothing current. All suggestions seem to be to use a standalone pdb2mdb program (which is the one I was using up to now). But using that one I can\u0027t set breakpoints so I\u0027m guessing something has changed.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E I eventually had some luck creating an MDB with this tool: [https://github.com/shravan2x/Pdb2Mdb-GUI/releases](https://github.com/shravan2x/Pdb2Mdb-GUI/releases) Looking at the code, it should be easy enough to create a command-line utility based on it.  \n\u003E   \n\u003E \n\u003E However, it is now ridiculously slow to attach/debug, with pauses up to 10\u002B minutes. Not sure if others are seeing this, if not, any suggestions on what I should look at? I have tried both VS2017 and 2019.  \n\u003E   \n\u003E \n\u003E PS. for the game exe, you must rename WindowsPlayer.exe and/or rename/symlink KSP\\_x64\\_Data appropriately as before.\n\u003E \n\n Can assure you it works using the mono.exe pdb2mdb.exe \u003Cassembly\u003E\n\u003C/assembly\u003E\n\nrun the fully qualified ones as per the directories Listed above (from Unity 2019.2.2f1) in the folder your assembly and pdb files are in.   \n\nyou must be using the bleeding edge ones as specified."},{"CreatedByName":"micha","CreatedById":113840,"CreatedDateTime":"2019-10-20T12:36:41Z","Content":"\u003E \n\u003E \n\u003E 31 minutes ago, JPLRepo said:\n\u003E \n\u003E \n\u003E Can assure you it works using the mono.exe pdb2mdb.exe \u003Cassembly\u003E\n\u003E \u003C/assembly\u003E\n\u003E \n\u003E \n\u003E \n\u003E run the fully qualified ones as per the directories Listed above (from Unity 2019.2.2f1) in the folder your assembly and pdb files are in.   \n\u003E \n\u003E you must be using the bleeding edge ones as specified.\n\u003E \n\nThat\u0027s what I do:\n\n    S:\\KSP\\NEOS\\OrbitalMaterialScience\\Plugin\\NE_Science\\bin\\Debug\u003E\u0022C:\\Program Files\\Unity_2019.2.2f1\\Editor\\Data\\MonoBleedingEdge\\bin\\mono.exe\u0022 \u0022C:\\Program Files\\Unity_2019.2.2f1\\Editor\\Data\\Mono\\lib\\mono\\2.0\\pdb2mdb.exe\u0022 \u0022S:\\KSP\\NEOS\\OrbitalMaterialScience\\Plugin\\NE_Science\\bin\\Debug\\NE_Science.dll\u0022\n\n    S:\\KSP\\NEOS\\OrbitalMaterialScience\\Plugin\\NE_Science\\bin\\Debug\u003Edir\n     Volume in drive S is Data\n     Volume Serial Number is B4D4-1AFF\n    \n     Directory of S:\\KSP\\NEOS\\OrbitalMaterialScience\\Plugin\\NE_Science\\bin\\Debug\n    \n    20/10/2019  21:34              .\n    20/10/2019  21:34              ..\n    20/10/2019  19:28           173,568 NE_Science.dll\n    20/10/2019  19:28           448,000 NE_Science.pdb\n                   2 File(s)        621,568 bytes\n                   2 Dir(s)  68,200,980,480 bytes free"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2019-10-20T12:53:58Z","Content":"\u003E \n\u003E \n\u003E 15 minutes ago, micha said:\n\u003E \n\u003E \n\u003E Unity\\_2019.2.2f1\\Editor\\Data\\Mono\\lib\\mono\\2.0\\pdb2mdb.exe\n\u003E \n\nYou are using the mono 2.0 old one. You need the \n\nUnity\\_2019.2.2f1\\Editor\\Data\\MonoBleedingEdge\\lib\\mono\\4.5\\pdb2mdb.exe"},{"CreatedByName":"micha","CreatedById":113840,"CreatedDateTime":"2019-10-20T14:07:30Z","Content":"\u003E \n\u003E \n\u003E 1 hour ago, sarbian said:\n\u003E \n\u003E \n\u003E You are using the mono 2.0 old one. You need the \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E Unity\\_2019.2.2f1\\Editor\\Data\\MonoBleedingEdge\\lib\\mono\\4.5\\pdb2mdb.exe\n\u003E \n\n\\*sigh\\*  Thank you!  No idea how I did that / didn\u0027t pick up on that when I was double-checking. Obviously in need of moar kawfee!  \n\nConfirm that one is working now."},{"CreatedByName":"micha","CreatedById":113840,"CreatedDateTime":"2019-10-20T14:48:03Z","Content":"PS. It still takes \\_forever\\_ (easily 10\u002B minutes) to proceed when attaching the debugger though. Any ideas what might be causing this? No such issues with previous versions of KSP."},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2019-11-01T13:32:38Z","Content":"Urgh... guys, pdb2mdb isn\u0027t needed anymore. Since 1.8, we have finally emerged from the dark ages of mono.\n\nJust change your \\*.csproj to generate \u0022portable\u0022 debug symbols instead of the old and depreciated \u0022full\u0022 format.  \n\nThe generated \\*.pdb file will be usable without any conversion using the Unity debugger for VS (and extra bonus, it should work on the VS for mac / monodevelop unity debugger plugin on OSX/linux)\n\nEither edit directly your \\*.csproj and change :\n\n    full\n\nto :\n\n    portable\n\nor in VS, go to your \u0022project properties\u0022 \u003E \u0022Build\u0022 tab \u003E \u0022Advanced\u0022 button \u003E \u0022Debugging information\u0022 \u003E \u0022Portable\u0022 :\n\n![B81mBjM.png](https://i.imgur.com/B81mBjM.png)\n\n**Edited \u003Ctime datetime=\u00222019-11-01T13:49:33Z\u0022 title=\u002211/01/2019 01:49  PM\u0022 data-short=\u00224 yr\u0022\u003ENovember 1, 2019\u003C/time\u003E by Gotmachine**"},{"CreatedByName":"Papa_Joe","CreatedById":10788,"CreatedDateTime":"2019-11-12T07:48:56Z","Content":"for those that would like, I have created a batch script that automates the update and distribution of a new game to my development environment.  It makes the process very painless.\n\nThe batch script is menu driven, so you can perform all actions, or only one at a time.  Also it pauses between steps, so you can see what is going on.  This script is specific to my environment, but it uses txt files for folder locations, so you should be able to adapt it for your needs and your environment.\n\n    @echo off\n    rem  This file sets up a fresh Development mode install of KSP from a Steam installation\n    rem  This script assumes that an existing development copy exist somewhere on your system besides steam.\n    rem  The script uses text files containing locations of various components needed for the script to work.\n    \n    rem  Change Log:\n    rem  v2.0  add support for unity 2019.\n    cd %~dp0\n    set LCL_DIR=%~dp0\n    \n    set VERSION=\u0022\u0022\n    set space = \u0022 \u0022\n    \n    set /p GIT_DIR=\u003C\u0022%LCL_DIR%\\git_dir.txt\u0022\n    set /p STEAM_DIR=\u003C\u0022%GIT_DIR%\\_LocalDev\\steam_dir.txt\u0022\n    set /p KSP_DIR=\u003C\u0022%GIT_DIR%\\_LocalDev\\ksp_dir.txt\u0022\n    \n    @echo: \n    @echo     Path tokens:\n    @echo     - LCL_DIR: %LCL_DIR%\n    @echo     - STEAM_DIR: %STEAM_DIR%    \n    @echo     - GIT_DIR: %GIT_DIR%\n    @echo     - KSP_DIR: %KSP_DIR%\n    @echo:\n    @echo   Let\u0027s get the version of the existing game...\n    \n    rem get_versions\n    set steamVer = \u0022\u0022\n    for /F \u0022usebackq skip=13 delims=\u0022 %%V in (\u0022%STEAM_DIR%\\readme.txt\u0022) do set \u0022steamVer=%%V\u0022 \u0026 goto Steamvalue\n    \n    :Steamvalue\n    set thisVer = \u0022\u0022\n    for /F \u0022usebackq skip=13 delims=\u0022 %%V in (\u0022%KSP_DIR%\\readme.txt\u0022) do set \u0022thisVer=%%V\u0022 \u0026 goto Hasvalue\n    \n    :Hasvalue\n    call set VERSION=%%thisVer:Version =%word%%%\n    \n    @echo     - Steam Version found is:  %steamVer%\n    @echo     - Dev Version found is: %thisVer%\n    set /p quit= \u0022  - Do you wish to continue? (Y/N):  \u0022\n    if /i \u0022%quit%\u0022 == \u0022N\u0022 ( @echo     - Terminating batch operation without executing Dev Setup...goto end \n    )\n    \n    :menu\n    @echo:\n    @echo:\n    @echo     ====================================================\n    @echo     Main Menu:\n    @echo:\n    @echo     1 - Perform all steps...\n    @echo     2 - Backup existing game folder...\n    @echo     3 - Remove existing game folder...\n    @echo     4 - Create new game folder...\n    @echo     5 - Copy Steam game folder...\n    @echo     6 - Copy new KSP assemblies to Dev...\n    @echo     7 - Copy Dev Debug files to Game folder...\n    @echo     8 - Copy Game Save and Ships to Game folder...\n    @echo     9 - Create linked folder...\n    @echo     X - Quit script  (Do nothing!)\n    @echo     ====================================================\n    @echo:\n    set /p optn= \u0022---\u003E Select option (1 - 9, X):  \u0022\n    @echo:\n    @echo     Choice made:  \u0022%optn%\u0022\n    @echo:\n    \n    if \u0022%optn%\u0022 == \u00221\u0022 ( goto backupGame )\n    if \u0022%optn%\u0022 == \u00222\u0022 ( goto backupGame )\n    if \u0022%optn%\u0022 == \u00223\u0022 ( goto removeGame )\n    if \u0022%optn%\u0022 == \u00224\u0022 ( goto createFolder )\n    if \u0022%optn%\u0022 == \u00225\u0022 ( goto copyGame )\n    if \u0022%optn%\u0022 == \u00226\u0022 ( goto copyAssemblies )\n    if \u0022%optn%\u0022 == \u00227\u0022 ( goto copyDebugFiles )\n    if \u0022%optn%\u0022 == \u00228\u0022 ( goto copyGameSaves )\n    if \u0022%optn%\u0022 == \u00229\u0022 ( goto createLinkedFolder )\n    if /I \u0022%optn%\u0022 == \u0022X\u0022 ( goto end )\n    \n    goto end\n    \n    :backupGame\n    @echo: \n    @echo     - Backup existing game folder...\n    \n    @echo: \n    pause\n    @echo: \n    \n    @echo     - Backup in progress, please wait...\n    xcopy /E /Y /Q \u0022%KSP_DIR%\\*.*\u0022 \u0022%KSP_DIR%_%VERSION%_old\\\u0022\n    \n    @echo     - Backup complete...\n    @echo: \n    \n    if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n    \n    :removeGame\n    @echo     - Removing existing game folder...\n    pause\n    rmdir /s /q \u0022%KSP_DIR%\u0022\n    @echo     - Removal complete...\n    @echo: \n    if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n    \n    :createFolder\n    @echo     - Creating new game folder...\n    pause\n    if not exist \u0022%KSP_DIR%\u0022 ( mkdir \u0022%KSP_DIR%\u0022 @echo     - Game folder created...\n    ) else (@echo     - Game folder exists.  Skipping...\n    )\n    @echo:\n    if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n    \n    :copyGame\n    @echo     - Ready to Copy Steam Game to local Game folder...\n    @echo       from: \u0022%STEAM_DIR%\u0022 \n    @echo         to: \u0022%KSP_DIR%\u0022\n    pause\n    xcopy /E /Y \u0022%STEAM_DIR%\\*.*\u0022 \u0022%KSP_DIR%\\\u0022\n    @echo     - Copy complete...\n    @echo:\n    if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n    \n    :copyAssemblies\n    @echo     - Ready to Copy KSP and unity assemblies \n    @echo       from: \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\u0022 \n    @echo         to: \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022 folder...\n    pause\n    xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\Assembly-CSharp.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n    xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\Assembly-CSharp-firstpass.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n    xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\KSPAssets.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n    xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\UnityEngine.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n    xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\UnityEngine.*.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n    xcopy /Y \u0022%KSP_DIR%\\readme.txt\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n    @echo     - Copy complete...\n    @echo:\n    if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n    \n    :copyDebugFiles\n    @echo     - Ready to Copy unity debug files to game folder and set debug mode...\n    pause\n    @echo player-connection-debug=1 \u003E\u003E \u0022%KSP_DIR%\\KSP_x64_Data\\boot.config\n    copy /Y \u0022%LCL_DIR%\\WindowsPlayer.exe\u0022 \u0022%KSP_DIR%\\ksp_x64_dbg.exe\u0022\n    copy /Y \u0022%LCL_DIR%\\UnityPlayer.dll\u0022 \u0022%KSP_DIR%\u0022\n    copy /Y \u0022%LCL_DIR%\\WinPixEventRuntime.dll\u0022 \u0022%KSP_DIR%\u0022\n    @echo     - Copy complete...\n    @echo: \n    if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n    \n    :copyGameSaves\n    @echo     - Ready to Copy ships, Saves and mods to the new game folder.\n    pause\n    xcopy /E /Y /D \u0022%KSP_DIR%_%VERSION%_old\\GameData\\*.*\u0022 \u0022%KSP_DIR%\\GameData\\\u0022\n    xcopy /E /Y /D \u0022%KSP_DIR%_%VERSION%_old\\ships\\*.*\u0022 \u0022%KSP_DIR%\\Ships\\\u0022\n    xcopy /E /Y /D \u0022%KSP_DIR%_%VERSION%_old\\saves\\*.*\u0022 \u0022%KSP_DIR%\\saves\\\u0022\n    @echo     - Copy complete...\n    @echo: \n    if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n    \n    :createLinkedFolder\n    @echo     - Ready to create the linked folder for debugging...\n    @echo: \n    pause\n    \n    REM cd /d \u0022%KSP_DIR%\u0022\n    REM @echo     - Curr Dir:  \u0022%cd%\u0022\n    REM @echo     - Game Directory:  \u0022%KSP_DIR%\u0022...\n    REM @echo: \n    REM pause\n    \n    mklink /J \u0022%KSP_DIR%\u0022\\KSP_x64_Dbg_Data \u0022%KSP_DIR%\u0022\\KSP_x64_Data\n    @echo     - Linked folder created...\n    @echo:\n    \n    :end\n    cd %~dp0\n    @echo     - %~dp0\n    @echo:\n    @echo     - script complete...\n    @echo:\n    pause\n\nThe script performs the following actions:\n\n1.  checks to see if a new version of the game exists in Steam, compared to the latest copy of your development version of the game.  It checks the readme.txt to get the version information.\n\n2.  Backs up the existing dev game folder for archival needs.\n\n3.  deletes the existing dev game folder\n\n4.  Copies all files from the steam installation into a new game folder.\n\n5.  copies all the KSP and unity assemblies needed for development into a location of your choice.  I do this to ensure I have the latest assemblies, and they are not tied to my steam installation.  Keeps them in sync.  Makes multi developer easier, as the assemblies are in a common location for all KSP mods I supported.\n\n6.  Copies the debug files ( WIndowsPLayer.exe, UnityPlayer.dll and WinPixEventRuntime.dll into the dev game root folder  It also sets the flag in Boot.config.\n\n7  Copies any existing saves, ships, and mods from the previous dev game installation over to the new Dev Game installation.\n\n8.  Creates the linked Folder, and finally  lets you know it is done.\n\nI hope this is helpful.  The paths in the .txt files are one line only.  This is assumed by the command reading from the file.  It will only retrieve the first line.  You could add all paths to a single file if you wish and simply read each line and assign to your vars using a different file handling technique.\n\nIf you have any questions, let me know.  This script has been tested, and I use it regularly.  It should work both by executing the script as a .bat, or by running it in power shell.\n\n**Edited \u003Ctime datetime=\u00222019-11-12T07:58:16Z\u0022 title=\u002211/12/2019 07:58  AM\u0022 data-short=\u00224 yr\u0022\u003ENovember 12, 2019\u003C/time\u003E by Papa\\_Joe**"},{"CreatedByName":"micha","CreatedById":113840,"CreatedDateTime":"2019-11-15T03:34:30Z","Content":"\u003E \n\u003E \n\u003E On 11/12/2019 at 4:48 PM, Papa\\_Joe said:\n\u003E \n\u003E \n\u003E 5.  copies all the KSP and unity assemblies needed for development into a location of your choice.  I do this to ensure I have the latest assemblies, and they are not tied to my steam installation.  Keeps them in sync.  Makes multi developer easier, as the assemblies are in a common location for all KSP mods I supported.\n\u003E \n\nGreat script, thanks for sharing!  \n\nMy personal approach to Step #5 though is to set a \u0022KSP\\_Dir\u0022 variable in a project file (or props, or project.user) and use that to reference the Assemblies.  Of course that is pointed at my current \u0022KSP\\_Dev\u0022 directory, never at my Steam install or play-through install.  This way I ensure whatever version I\u0027m testing was also the version I used to compile, and there\u0027s no need to keep the Assemblies in multiple locations and remember to keep them in sync.  \n\nWith this approach all another developer (or myself on another machine which has a different directory layout) has to do is update that one variable and all assemblies are referenced correctly.  If using the .user file approach (which shouldn\u0027t be committed to GIT) it\u0027s also very easy for multiple developers to work on a project without constantly having issues with spurious updates to the project files.  \n\nHorses for courses ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif \u0022:)\u0022)\n\n\u003E \n\u003E \n\u003E On 11/1/2019 at 10:32 PM, Gotmachine said:\n\u003E \n\u003E \n\u003E Urgh... guys, pdb2mdb isn\u0027t needed anymore. Since 1.8, we have finally emerged from the dark ages of mono.\n\u003E \n\nThank you!!!"},{"CreatedByName":"fatcargo","CreatedById":93302,"CreatedDateTime":"2019-12-15T08:36:30Z","Content":"I had a problem with breakpoints not being hit while debugging code. On a line with breakpoint i had a yellow circle with an exclamation mark and a popup text saying \u0022The breakpoint will not currently be hit. Unable to find a corresponding location.\u0022.\n\nAfter some struggle i found a solution at [https://stackoverflow.com/a/46720817](https://stackoverflow.com/a/46720817). Basically i did the same but instead using Net 2.0 i switched from original 4.5 to 4.0 and back to 4.5. Each time VS informed to re-save the project. After that i followed instructions with a clean and rebuild and it worked. My breakpoints work again. It may be worth mentioning i had OS and VS on a SSD while project files and game itself are on another HDD. It appears that VS is not properly flushing cached files, causing .pdb to be out of sync with plugin .dll. It also explains why new project had no problems and as time went on it started to misbehave. Cycling between 4.0 and 4.5 may be an overkill but i mention it just in case.\n\n**Edited \u003Ctime datetime=\u00222019-12-15T08:53:44Z\u0022 title=\u002212/15/2019 08:53  AM\u0022 data-short=\u00224 yr\u0022\u003EDecember 15, 2019\u003C/time\u003E by fatcargo**"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2019-12-16T16:48:25Z","Content":"\u003E \n\u003E \n\u003E On 11/12/2019 at 2:48 AM, Papa\\_Joe said:\n\u003E \n\u003E \n\u003E for those that would like, I have created a batch script that automates the update and distribution of a new game to my development environment.  It makes the process very painless.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E The batch script is menu driven, so you can perform all actions, or only one at a time.  Also it pauses between steps, so you can see what is going on.  This script is specific to my environment, but it uses txt files for folder locations, so you should be able to adapt it for your needs and your environment.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E  \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E     @echo off\n\u003E     rem  This file sets up a fresh Development mode install of KSP from a Steam installation\n\u003E     rem  This script assumes that an existing development copy exist somewhere on your system besides steam.\n\u003E     rem  The script uses text files containing locations of various components needed for the script to work.\n\u003E     \n\u003E     rem  Change Log:\n\u003E     rem  v2.0  add support for unity 2019.\n\u003E     cd %~dp0\n\u003E     set LCL_DIR=%~dp0\n\u003E     \n\u003E     set VERSION=\u0022\u0022\n\u003E     set space = \u0022 \u0022\n\u003E     \n\u003E     set /p GIT_DIR=\u003C\u0022%LCL_DIR%\\git_dir.txt\u0022\n\u003E     set /p STEAM_DIR=\u003C\u0022%GIT_DIR%\\_LocalDev\\steam_dir.txt\u0022\n\u003E     set /p KSP_DIR=\u003C\u0022%GIT_DIR%\\_LocalDev\\ksp_dir.txt\u0022\n\u003E     \n\u003E     @echo: \n\u003E     @echo     Path tokens:\n\u003E     @echo     - LCL_DIR: %LCL_DIR%\n\u003E     @echo     - STEAM_DIR: %STEAM_DIR%    \n\u003E     @echo     - GIT_DIR: %GIT_DIR%\n\u003E     @echo     - KSP_DIR: %KSP_DIR%\n\u003E     @echo:\n\u003E     @echo   Let\u0027s get the version of the existing game...\n\u003E     \n\u003E     rem get_versions\n\u003E     set steamVer = \u0022\u0022\n\u003E     for /F \u0022usebackq skip=13 delims=\u0022 %%V in (\u0022%STEAM_DIR%\\readme.txt\u0022) do set \u0022steamVer=%%V\u0022 \u0026 goto Steamvalue\n\u003E     \n\u003E     :Steamvalue\n\u003E     set thisVer = \u0022\u0022\n\u003E     for /F \u0022usebackq skip=13 delims=\u0022 %%V in (\u0022%KSP_DIR%\\readme.txt\u0022) do set \u0022thisVer=%%V\u0022 \u0026 goto Hasvalue\n\u003E     \n\u003E     :Hasvalue\n\u003E     call set VERSION=%%thisVer:Version =%word%%%\n\u003E     \n\u003E     @echo     - Steam Version found is:  %steamVer%\n\u003E     @echo     - Dev Version found is: %thisVer%\n\u003E     set /p quit= \u0022  - Do you wish to continue? (Y/N):  \u0022\n\u003E     if /i \u0022%quit%\u0022 == \u0022N\u0022 ( @echo     - Terminating batch operation without executing Dev Setup...goto end \n\u003E     )\n\u003E     \n\u003E     :menu\n\u003E     @echo:\n\u003E     @echo:\n\u003E     @echo     ====================================================\n\u003E     @echo     Main Menu:\n\u003E     @echo:\n\u003E     @echo     1 - Perform all steps...\n\u003E     @echo     2 - Backup existing game folder...\n\u003E     @echo     3 - Remove existing game folder...\n\u003E     @echo     4 - Create new game folder...\n\u003E     @echo     5 - Copy Steam game folder...\n\u003E     @echo     6 - Copy new KSP assemblies to Dev...\n\u003E     @echo     7 - Copy Dev Debug files to Game folder...\n\u003E     @echo     8 - Copy Game Save and Ships to Game folder...\n\u003E     @echo     9 - Create linked folder...\n\u003E     @echo     X - Quit script  (Do nothing!)\n\u003E     @echo     ====================================================\n\u003E     @echo:\n\u003E     set /p optn= \u0022---\u003E Select option (1 - 9, X):  \u0022\n\u003E     @echo:\n\u003E     @echo     Choice made:  \u0022%optn%\u0022\n\u003E     @echo:\n\u003E     \n\u003E     if \u0022%optn%\u0022 == \u00221\u0022 ( goto backupGame )\n\u003E     if \u0022%optn%\u0022 == \u00222\u0022 ( goto backupGame )\n\u003E     if \u0022%optn%\u0022 == \u00223\u0022 ( goto removeGame )\n\u003E     if \u0022%optn%\u0022 == \u00224\u0022 ( goto createFolder )\n\u003E     if \u0022%optn%\u0022 == \u00225\u0022 ( goto copyGame )\n\u003E     if \u0022%optn%\u0022 == \u00226\u0022 ( goto copyAssemblies )\n\u003E     if \u0022%optn%\u0022 == \u00227\u0022 ( goto copyDebugFiles )\n\u003E     if \u0022%optn%\u0022 == \u00228\u0022 ( goto copyGameSaves )\n\u003E     if \u0022%optn%\u0022 == \u00229\u0022 ( goto createLinkedFolder )\n\u003E     if /I \u0022%optn%\u0022 == \u0022X\u0022 ( goto end )\n\u003E     \n\u003E     goto end\n\u003E     \n\u003E     :backupGame\n\u003E     @echo: \n\u003E     @echo     - Backup existing game folder...\n\u003E     \n\u003E     @echo: \n\u003E     pause\n\u003E     @echo: \n\u003E     \n\u003E     @echo     - Backup in progress, please wait...\n\u003E     xcopy /E /Y /Q \u0022%KSP_DIR%\\*.*\u0022 \u0022%KSP_DIR%_%VERSION%_old\\\u0022\n\u003E     \n\u003E     @echo     - Backup complete...\n\u003E     @echo: \n\u003E     \n\u003E     if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n\u003E     \n\u003E     :removeGame\n\u003E     @echo     - Removing existing game folder...\n\u003E     pause\n\u003E     rmdir /s /q \u0022%KSP_DIR%\u0022\n\u003E     @echo     - Removal complete...\n\u003E     @echo: \n\u003E     if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n\u003E     \n\u003E     :createFolder\n\u003E     @echo     - Creating new game folder...\n\u003E     pause\n\u003E     if not exist \u0022%KSP_DIR%\u0022 ( mkdir \u0022%KSP_DIR%\u0022 @echo     - Game folder created...\n\u003E     ) else (@echo     - Game folder exists.  Skipping...\n\u003E     )\n\u003E     @echo:\n\u003E     if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n\u003E     \n\u003E     :copyGame\n\u003E     @echo     - Ready to Copy Steam Game to local Game folder...\n\u003E     @echo       from: \u0022%STEAM_DIR%\u0022 \n\u003E     @echo         to: \u0022%KSP_DIR%\u0022\n\u003E     pause\n\u003E     xcopy /E /Y \u0022%STEAM_DIR%\\*.*\u0022 \u0022%KSP_DIR%\\\u0022\n\u003E     @echo     - Copy complete...\n\u003E     @echo:\n\u003E     if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n\u003E     \n\u003E     :copyAssemblies\n\u003E     @echo     - Ready to Copy KSP and unity assemblies \n\u003E     @echo       from: \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\u0022 \n\u003E     @echo         to: \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022 folder...\n\u003E     pause\n\u003E     xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\Assembly-CSharp.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n\u003E     xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\Assembly-CSharp-firstpass.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n\u003E     xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\KSPAssets.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n\u003E     xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\UnityEngine.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n\u003E     xcopy /E /Y \u0022%KSP_DIR%\\KSP_x64_Data\\Managed\\UnityEngine.*.dll\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n\u003E     xcopy /Y \u0022%KSP_DIR%\\readme.txt\u0022 \u0022%GIT_DIR%\\_LocalDev\\KSPRefs\\\u0022\n\u003E     @echo     - Copy complete...\n\u003E     @echo:\n\u003E     if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n\u003E     \n\u003E     :copyDebugFiles\n\u003E     @echo     - Ready to Copy unity debug files to game folder and set debug mode...\n\u003E     pause\n\u003E     @echo player-connection-debug=1 \u003E\u003E \u0022%KSP_DIR%\\KSP_x64_Data\\boot.config\n\u003E     copy /Y \u0022%LCL_DIR%\\WindowsPlayer.exe\u0022 \u0022%KSP_DIR%\\ksp_x64_dbg.exe\u0022\n\u003E     copy /Y \u0022%LCL_DIR%\\UnityPlayer.dll\u0022 \u0022%KSP_DIR%\u0022\n\u003E     copy /Y \u0022%LCL_DIR%\\WinPixEventRuntime.dll\u0022 \u0022%KSP_DIR%\u0022\n\u003E     @echo     - Copy complete...\n\u003E     @echo: \n\u003E     if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n\u003E     \n\u003E     :copyGameSaves\n\u003E     @echo     - Ready to Copy ships, Saves and mods to the new game folder.\n\u003E     pause\n\u003E     xcopy /E /Y /D \u0022%KSP_DIR%_%VERSION%_old\\GameData\\*.*\u0022 \u0022%KSP_DIR%\\GameData\\\u0022\n\u003E     xcopy /E /Y /D \u0022%KSP_DIR%_%VERSION%_old\\ships\\*.*\u0022 \u0022%KSP_DIR%\\Ships\\\u0022\n\u003E     xcopy /E /Y /D \u0022%KSP_DIR%_%VERSION%_old\\saves\\*.*\u0022 \u0022%KSP_DIR%\\saves\\\u0022\n\u003E     @echo     - Copy complete...\n\u003E     @echo: \n\u003E     if not \u0022%optn%\u0022 == \u00221\u0022 ( goto end )\n\u003E     \n\u003E     :createLinkedFolder\n\u003E     @echo     - Ready to create the linked folder for debugging...\n\u003E     @echo: \n\u003E     pause\n\u003E     \n\u003E     REM cd /d \u0022%KSP_DIR%\u0022\n\u003E     REM @echo     - Curr Dir:  \u0022%cd%\u0022\n\u003E     REM @echo     - Game Directory:  \u0022%KSP_DIR%\u0022...\n\u003E     REM @echo: \n\u003E     REM pause\n\u003E     \n\u003E     mklink /J \u0022%KSP_DIR%\u0022\\KSP_x64_Dbg_Data \u0022%KSP_DIR%\u0022\\KSP_x64_Data\n\u003E     @echo     - Linked folder created...\n\u003E     @echo:\n\u003E     \n\u003E     :end\n\u003E     cd %~dp0\n\u003E     @echo     - %~dp0\n\u003E     @echo:\n\u003E     @echo     - script complete...\n\u003E     @echo:\n\u003E     pause\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E The script performs the following actions:\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E  \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E 1.  checks to see if a new version of the game exists in Steam, compared to the latest copy of your development version of the game.  It checks the readme.txt to get the version information.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E 2.  Backs up the existing dev game folder for archival needs.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E 3.  deletes the existing dev game folder\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E 4.  Copies all files from the steam installation into a new game folder.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E 5.  copies all the KSP and unity assemblies needed for development into a location of your choice.  I do this to ensure I have the latest assemblies, and they are not tied to my steam installation.  Keeps them in sync.  Makes multi developer easier, as the assemblies are in a common location for all KSP mods I supported.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E 6.  Copies the debug files ( WIndowsPLayer.exe, UnityPlayer.dll and WinPixEventRuntime.dll into the dev game root folder  It also sets the flag in Boot.config.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E 7  Copies any existing saves, ships, and mods from the previous dev game installation over to the new Dev Game installation.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E 8.  Creates the linked Folder, and finally  lets you know it is done.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E I hope this is helpful.  The paths in the .txt files are one line only.  This is assumed by the command reading from the file.  It will only retrieve the first line.  You could add all paths to a single file if you wish and simply read each line and assign to your vars using a different file handling technique.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E  \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E If you have any questions, let me know.  This script has been tested, and I use it regularly.  It should work both by executing the script as a .bat, or by running it in power shell.\n\u003E \n\nA few questions:\n\nCan you please explain the differences between the following.  I\u0027ve listed them with what I think you are doing:\n\n- LCL\\_DIR     the main debug directory\n- STEAM\\_DIR     The source directory for the game itself\n- GIT\\_DIR    unknown.\n- KSP\\_DIR   The directory where the game is copied to and changes made\n\nWithout an examples of what you are doing, the GIT\\_DIR and KSP\\_DIr are somewhat of a mystery.  What I don\u0027t\u0027 understand is what the **KSPRefs** directory  is used for, it\u0027s not part of KSP, and other than copying files there, I don\u0027t see the script doing anything with it.  In fact, I can run the script and leave out the \u0022copyAssemblies\u0022 step, and it will works."},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2019-12-22T19:35:19Z","Content":"[@Papa_Joe](https://forum.kerbalspaceprogram.com/index.php?/profile/10788-papa_joe/)\u0027s script makes it easier to set up a debug build, once you can figure it out.\n\nI\u0027ve rewritten it in bash, targeted at [CygWin on Windows](https://www.cygwin.com/).  While I haven\u0027t tested it yet on Linux, there are only a few places in the code which are Windows-specific, and I\u0027ve hopefully been able to surround them with **if/else/fi**\n\nI provide it here for free, any license which may apply would be the [UnLicense](https://unlicense.org/).  While not an official mod per se, I\u0027ll answer questions about it and update it if necessary\n\n    #!/bin/bash\n    \n    # detailed information located here:  https://forum.kerbalspaceprogram.com/index.php?/topic/102909-*/\n    \n    #  This file sets up a fresh Development mode install of KSP from a specified KSP installation.\n    #  If CKAN is installed, it will present a list of all installs in CKAN to choose from.\n    \n    #  Change Log:\n    #  v2.0  add support for unity 2019.\n    #  v3.0  Converted to bash shell, tested in Cygwin\n    #\t\tNow accesses CKAN if installed and specified to get list of installs\n    \n    #\n    # This script was written for use on CygWin on Windows\n    # While untested, setting the variable WINDOWS to false should disable the Windows-specific code\n    # It also assumes that all the \n    #\n    \n    #\n    # The script currently is set up for KSP 1.8.  For earlier versions of the game\n    # you will have to update where the correct version of UNITY for that version of KSP is installed\n    #\n    \n    clear\n    \n    #\n    # The following lines need to be customized for each environment\n    #\n    WINDOWS=true\n    \n    CKAN_EXE=/d/KerbalInstalls/ckan/ckan.exe\n    KSP_EXE=ksp_x64_dbg.exe\n    GAME_DIR=/r/KSP_1.8.1_Career # source game directory\n    LCL_DIR=/r/dp0              # source directory for Unity debug finish\n    \n    #\n    # Specify the desired window size here\n    #\n    WIDTH=1600\n    HEIGHT=1024\n    \n    #\n    # The location where the correct version of Unity is installed\n    #\n    UNITY=\u0022/e/Program Files/Unity524f1\u0022\n\n    ##### End of customizable lines ############################\n    #\n    ##### You should not need to change any of the lines below\n    UNITYDIR=\u0022${UNITY}/Editor/Data/PlaybackEngines/windowsstandalonesupport/Variations/win64_development_mono\u0022\n    WINDOWSPLAYER=\u0022${UNITYDIR}\u0022/WindowsPlayer.exe\n    UNITYPLAYER=\u0022${UNITYDIR}\u0022/UnityPlayer.dll\n    EVENTRUNTIME=\u0022${UNITYDIR}\u0022/WinPixEventRuntime.dll\n    \n    if [ ! -f \u0022${WINDOWSPLAYER}\u0022 ]; thenecho -e \u0022\\nMissing WindowsPlayer exe:  $WINDOWSPLAYER\u0022exit\n    fi\n\n    IFS=$oIFS\n    KSP_DIR=${LCL_DIR}/kspdev       # destination for the debug install\n    \n    tmpfile=tmp.$$\n    oIFS=$IFS\n    doallsteps=false\n    \n    #\n    ########### Functions ################\n    #\n    \n    function GetKspInstalls\n    {[ \u0022$CKAN_EXE\u0022 = \u0022\u0022 ] \u0026\u0026 return[ ! -f $CKAN_EXE ] \u0026\u0026 return\n    \n    $CKAN_EXE ksp list \u003E $tmpfilecnt=-1IFS=while read line; do\tif [ $cnt -le 0 ]; then\t\techo \u0022    $line\u0022\telse\t\tprintf \u0022%4d \u0022 $cnt\t\techo $line\t\tarr[$cnt]=$line\tfi\tcnt=$((cnt\u002B1))done \u003C $tmpfilerm $tmpfileecho -ne \u0022\\nEnter number of install to copy, press  for default ($GAME_DIR): \u0022read n\n    }\n    \n    #\n    # Display a prompt, if supplied and wait for user entry\n    #\n    function prompt\n    {\n        echo $1\n        [ $doallsteps = false ] \u0026\u0026 read -p \u0022Press  to continue\u0022\n    }\n    \n    #\n    # Do all steps to set up the dev install\n    #\n    function DoAll()\n    {\n        doallsteps=true\n        backupGame\n        removeGame\n        createFolder\n        copyGame\n        copyDebugFiles\n        createLinkedFolderresetResolution\n        finish\n    }\n    \n    #\n    # Make a backup of the current dev build\n    #\n    function backupGame\n    {\n        if [ ! -d $KSP_DIR ]; then\n            echo \u0022No game directory available to backup\u0022\n        else\n            prompt \u0022- Backup existing game folder...\u0022\n            echo \n    \n            echo     - Backup in progress, please wait...\n            #xcopy /E /Y /Q \u0022\u0022${KSP_DIR}\u0022/*.*\u0022 \u0022\u0022${KSP_DIR}\u0022_%VERSION%_old/\u0022\n            rm -fr \u0022${KSP_DIR}\u0022_${VERSION}_old\n            mkdir \u0022${KSP_DIR}\u0022_${VERSION}_old\n            cp -a \u0022${KSP_DIR}\u0022 \u0022${KSP_DIR}\u0022_${VERSION}_old\n    \n            echo     - Backup complete...\n            echo\n        fi\n    }\n    \n    #\n    # Remove the current dev build\n    #\n    function removeGame\n    {\n       if [ ! -d $KSP_DIR ]; then\n            echo \u0022No game directory available to remove\u0022\n        else\n            prompt \u0022     - Removing existing game folder...\u0022 pause\n            #rmdir /s /q \u0022\u0022${KSP_DIR}\u0022\u0022\n            rm -fr \u0022${KSP_DIR}\u0022\n            echo     - Removal complete...\n            echo \n        fi\n    }\n    \n    #\n    # Create new game folder\n    #\n    function createFolder\n    {\n        prompt \u0022     - Creating new game folder...\u0022 pause\n        if [ ! -f \u0022\u0022${KSP_DIR}\u0022\u0022 ]; then\n            mkdir \u0022${KSP_DIR}\u0022        \n            echo     - Game folder created...\n        else \n            echo     - Game folder exists.  Skipping...\n        fi\n        echo\n    }\n    \n    #\n    # Copy the entire game from the $GAME_DIR\n    #\n    function copyGame\n    {\n        echo     - Ready to Copy specified KSP Game to local Game folder...\n        echo       from: \u0022\u0022${GAME_DIR}\u0022\u0022 \n        echo         to: \u0022\u0022${KSP_DIR}\u0022\u0022\n        prompt \u0022\u0022\n        cp -a \u0022${GAME_DIR}\u0022/* \u0022${KSP_DIR}\u0022/\n        echo     - Copy complete...\n        echo\n    }\n    \n    #\n    # Copy the files needed to setup the install as a debug build\n    #\n    function copyDebugFiles\n    {\n        prompt \u0022     - Ready to Copy unity debug files to game folder and set debug mode...\u0022\n        \n        echo player-connection-debug=1 \u003E\u003E \u0022\u0022${KSP_DIR}\u0022/KSP_x64_Data/boot.config\u0022\n        \n        cp  \u0022${WINDOWSPLAYER}\u0022 \u0022${KSP_DIR}\u0022/ksp_x64_dbg.exe\n        cp  \u0022${UNITYPLAYER}\u0022 \u0022${KSP_DIR}\u0022\n        cp  \u0022${EVENTRUNTIME}\u0022 \u0022${KSP_DIR}\u0022\n\n        echo     - Copy complete...\n        echo\n    }\n    \n    #\n    # Copy the Game savefiles, not called when doing all\n    #\n    function copyGameSaves\n    {\n        prompt \u0022     - Ready to Copy ships, Saves and mods to the new game folder.\u0022 pause\n        #xcopy /E /Y /D \u0022\u0022${KSP_DIR}\u0022_%VERSION%_old/GameData/*.*\u0022 \u0022\u0022${KSP_DIR}\u0022/GameData/\u0022\n        #xcopy /E /Y /D \u0022\u0022${KSP_DIR}\u0022_%VERSION%_old/ships/*.*\u0022 \u0022\u0022${KSP_DIR}\u0022/Ships/\u0022\n        #xcopy /E /Y /D \u0022\u0022${KSP_DIR}\u0022_%VERSION%_old/saves/*.*\u0022 \u0022\u0022${KSP_DIR}\u0022/saves/\u0022\n    \n        cp -a \u0022${KSP_DIR}\u0022_${VERSION}_old/GameData/* \u0022${KSP_DIR}\u0022/GameData/\n        if [ -d \u0022${KSP_DIR}\u0022_${VERSION}_old/ships ]; then   \n            cp -a \u0022${KSP_DIR}\u0022_${VERSION}_old/ships/* \u0022${KSP_DIR}\u0022/Ships/\n        else\n            [ ! -d \u0022${KSP_DIR}\u0022/Ships } \u0026\u0026  mkdir \u0022${KSP_DIR}\u0022/Ships \n        fi\n        if [ -d \u0022${KSP_DIR}\u0022_${VERSION}_old/saves ]; then\n            cp -a \u0022${KSP_DIR}\u0022_${VERSION}_old/saves/* \u0022${KSP_DIR}\u0022/saves/\n        else\n            [ ! -d \u0022${KSP_DIR}\u0022/saves ] \u0026\u0026 mkdir \u0022${KSP_DIR}\u0022/saves\n        fi\n\n        echo     - Copy complete...\n        echo \n    }\n    \n    #\n    # Create the link needed for debugging\n    #\n    function createLinkedFolder\n    {\n        prompt \u0022     - Ready to create the linked folder for debugging...\u0022 pause\n    \n        #REM cd /d \u0022\u0022${KSP_DIR}\u0022\u0022\n        #REM @echo     - Curr Dir:  \u0022%cd%\u0022\n        #REM @echo     - Game Directory:  \u0022\u0022${KSP_DIR}\u0022\u0022...\n        #REM @echo: \n        #REM pause\n    \n        #rem mklink /J \u0022\u0022${KSP_DIR}\u0022\u0022/KSP_x64_Dbg_Data \u0022\u0022${KSP_DIR}\u0022\u0022/KSP_x64_Data\n        ln -s \u0022${KSP_DIR}\u0022/KSP_x64_Data \u0022${KSP_DIR}\u0022/KSP_x64_Dbg_Data \n        echo     - Linked folder created...\n        echo\n    }\n    \n    #\n    # Set the resolution to the predetermined values.  This will overwrite\n    # whatever is set in the settings.cfg\n    #\n    function resetResolution\n    {sed -i \u0022s/^SCREEN_RESOLUTION_WIDTH.*/SCREEN_RESOLUTION_WIDTH = ${WIDTH}/\u0022 ${KSP_DIR}/settings.cfgsed -i \u0022s/^SCREEN_RESOLUTION_HEIGHT.*/SCREEN_RESOLUTION_HEIGHT = ${HEIGHT}/\u0022 ${KSP_DIR}/settings.cfgsed -i \u0022s/^FULLSCREEN.*/FULLSCREEN = False/\u0022 ${KSP_DIR}/settings.cfg\n    }\n    \n    function finish\n    {\n        echo\n        echo     - script complete...\n        echo\n    }\n    \n    GetKspInstalls\n    \n    if [ \u0022$n\u0022 != \u0022\u0022 -a $cnt -gt -1 ]; thenif [ \u0022$n\u0022 -ge 0 -a \u0022$n\u0022 -le $cnt ] 2\u003E/dev/null; then\techo ok\tselected=\u0060echo ${arr[n]} | cut -c59- | sed \u0027s/://g\u0027 \u0060\tif [ $WINDOWS = true ]; then\t\tselected=\u0060echo \u0022${selected,}\u0022\u0060\t\tselected=\u0022/$selected\u0022\tfielse\techo Invalid number entered, exiting\texitfi\n    fi\n    [ \u0022$selected\u0022 != \u0022\u0022 ] \u0026\u0026 GAME_DIR=$selected\n\n    echo -e \u0022\\n\\n\\nSource game directory: $GAME_DIR\u0022\n    echo \n    read -p \u0022Press  to use default or enter the source directory: \u0022 sd\n    [ \u0022$selected\u0022 != \u0022\u0022 ] \u0026\u0026 GAME_DIR=\u0060echo $selected\u0060\n    GAME_DIR=\u0060echo $GAME_DIR | sed \u0027s/ *$//g\u0027\u0060\n    echo \u0022Selected game directory: \u0027$GAME_DIR\u0027\u0022\n    if [ ! -d \u0022${GAME_DIR}\u0022 ]; then\n        echo \u0022Source game directory not found, exiting\u0022\n        exit\n    fi\n    \n    VERSION=\u0022\u0022                  # will contain the version number only\n    \n    cat \u003C\u003C__EOF__\n     \n    Path tokens:\n      LCL_DIR: \u0022${LCL_DIR}\u0022\n      GAME_DIR: \u0022${GAME_DIR}\u0022    \n      KSP_DIR: \u0022${KSP_DIR}\u0022\n    \n    Let\u0027s get the version of the existing game...\n    __EOF__\n    \n    # get_versions\n    steamVer=\u0060grep ^Version \u0022${GAME_DIR}\u0022/readme.txt\u0060\n    \n    [ -d \u0022${KSP_DIR}\u0022 ] \u0026\u0026 thisVer=\u0060grep ^Version \u0022${KSP_DIR}\u0022/readme.txt\u0060\n    VERSION=\u0022$thisVer\u0022\n    \n    echo $thisVer\n    VERSION=\u0060echo $thisVer | cut -f2 -d\u0027 \u0027\u0060\n    \n    echo     - Game Version found is:  $steamVer\n    [ \u0022$thisVer\u0022 != \u0022\u0022 ] \u0026\u0026 echo \u0022   Dev Version found is: $thisVer\u0022\n    echo\n    read -p \u0022  - Do you wish to continue? (Y/N):  \u0022 quit\n    if [ \u0022$quit\u0022 == \u0022n\u0022 -o \u0022$quit\u0022 == \u0022N\u0022 ]; thenecho \u0022Terminating batch operation without executing Dev Setup...\u0022exit\n    fi\n    \n    while [ \u0022$optn\u0022 != \u0027X\u0027  -a \u0022$optn\u0022 != \u0027x\u0027 -a \u0022$optn\u0022 != \u0027Q\u0027  -a \u0022$optn\u0022 != \u0027q\u0027 ]; do\n    \n    cat \u003C\u003C_EOF_\n\n         ====================================================\n         Main Menu:\n    \n         1 - Perform all steps\n         2 - Backup existing game folder\n         3 - Remove existing game folder\n         4 - Create new game folder\n         5 - Copy source game folder\n         7 - Copy Dev Debug files to Game folder\n         8 - Copy Game Save and Ships to Game folder\n         9 - Create linked folder\n        10 - Reset screen resolution\n         R - Run the copied game\n     Q | X - Quit script\n         ====================================================\n    \n    _EOF_\n    \n        read  -p \u0022Select option (1 - 9, X):  \u0022 optn\n        echo\n        echo     Choice made:  \u0022$optn\u0022\n        echo\n    \n        case $optn in\n            1)  DoAll \n                ;;\n            2)  backupGame \n                ;;\n            3)  removeGame \n                ;;\n            4)  createFolder \n                ;;\n            5)  copyGame \n                ;;\n            7)  copyDebugFiles \n                ;;\n            8)  copyGameSaves \n                ;;\n            9)  createLinkedFolder \n                ;;\t10)\tresetResolution\t\t;;\tr|R)\t\tcd kspdev\t\t\t\t./${KSP_EXE}\u0026\t\techo \u0022Starting ${KSP_EXE}\\n\u0022\t\tsleep 5\t\tcd ..\t\techo -e \u0022\\n\\n\u0022\t\t;;\n        esac\n    \n    done\n\n**Edited \u003Ctime datetime=\u00222019-12-22T20:55:08Z\u0022 title=\u002212/22/2019 08:55  PM\u0022 data-short=\u00224 yr\u0022\u003EDecember 22, 2019\u003C/time\u003E by linuxgurugamer**"},{"CreatedByName":"severedsolo","CreatedById":80345,"CreatedDateTime":"2019-12-25T09:39:34Z","Content":"I figured out how to get this working on KSP 1.8.1 and Linux Mint 19.3 (and therefore by extension Ubuntu 18.04) by mashing together the various instructions.\n\nUnity don\u0027t offer a way (that I could find) to download the Linux version without installing Unity Hub, and the Windows version no longer offers the Linux Player so download Unity Hub from here: [https://unity3d.com/get-unity/download](https://unity3d.com/get-unity/download)\n\nOnce you\u0027ve downloaded the appimage make it executable and run it. You\u0027ll need a Unity account, but the personal licenses are free. Once you\u0027ve got Unity Hub set up, you\u0027ll need to download the right version of Unity.\n\nUnity Hub doesn\u0027t offer Unity 2019.2.2f by default, so you\u0027ll have to download it from here: [https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive) - select the Unity 2019.2.2 \u0022Unity Hub\u0022 option and it will install the right version.  \n\nAfter that the instructions are more or less as in the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E:\n\n- Insert player-connection-debug=1 into your boot.config\n- copy the LinuxPlayer into your KSP directory from: \u003Cyour unity=\u0022\u0022 installation=\u0022\u0022 folder=\u0022\u0022 as=\u0022\u0022 set=\u0022\u0022 in=\u0022\u0022 unity=\u0022\u0022 hub=\u0022\u0022\u003E/2019.2.2f1/Editor/Data/PlaybackEngines/LinuxStandaloneSupport/Variations/linux64_withgfx_development_mono to the KSP directory.\n\u003C/your\u003E\n- Rename it to KSP.x86\\_64 and make it executable\n- Disable UFW (wouldn\u0027t work for me without this)\n\n         sudo ufw disable\n- Edit your csproj file so DebugType shows as follows:\n\n        portable\n- Move the dll and pdb file however you normally would (post build events etc)\n- Start KSP\n- Attach the Unity Debugger from your IDE as normal (I\u0027ve only tested this in Rider).\n\n**Edited \u003Ctime datetime=\u00222019-12-25T09:43:33Z\u0022 title=\u002212/25/2019 09:43  AM\u0022 data-short=\u00224 yr\u0022\u003EDecember 25, 2019\u003C/time\u003E by severedsolo**"},{"CreatedByName":"mattssheep4","CreatedById":146984,"CreatedDateTime":"2020-02-21T15:51:18Z","Content":"\u003E \n\u003E \n\u003E On 11/12/2019 at 2:48 AM, Papa\\_Joe said:\n\u003E \n\u003E \n\u003E 1.  checks to see if a new version of the game exists in Steam\n\u003E \n\nDoes this require the game to be in steam then, or is it just checking if you have the latest released version? I go through the KSP Store."},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2020-03-31T17:41:48Z","Content":"New simplified method! Only 1 file to copy.\n\n1. Get this [mono-2.0-bdwgc.dll](https://ksp.sarbian.com/unity-2019.2.2/win64/mono-2.0-bdwgc.dll) and replace the one in \u003Cksp\u003E\\MonoBleedingEdge\\EmbedRuntime with it.\n\u003C/ksp\u003E\n2. Launch Game\n3. in Visual Studio go Debug -\u003E Attach Unity Debugger. Press Input IP and set the port to 55555\n\nThe dll is built with [those instructions](https://github.com/0xd4d/dnSpy/wiki/Debugging-Unity-Games). The source with the proper Unity version are [here](https://github.com/sarbian/dnSpy-Unity-mono/tree/dnSpy)\n\nWindows only for now but the source should have everything needed to build the dll for Linux and OSX in the unity-2019.2.2-mbe directory. If you compile I will add the file on my server\n\nI ll update the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E after other have confirmed it work for them \n\nIf someone want to have a look at the code and change the default port to 56000 they are welcome. I did not have the will ![:lol:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_laugh.png \u0022:lol:\u0022) ( look in around unity-2019.2.2-mbe\\mono\\mini\\debug-mini.c )"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2020-04-02T13:11:06Z","Content":"[@Thomas P.](https://forum.kerbalspaceprogram.com/index.php?/profile/113164-thomas-p/) built the lib for Linux : [libmonobdwgc-2.0.so](https://ksp.sarbian.com/unity-2019.2.2/linux64/libmonobdwgc-2.0.so)\n\nStill waiting on some feedback."},{"CreatedByName":"Sephiroth_018","CreatedById":134732,"CreatedDateTime":"2020-04-03T19:55:20Z","Content":"\u003E \n\u003E \n\u003E On 3/31/2020 at 7:41 PM, sarbian said:\n\u003E \n\u003E \n\u003E New simplified method! Only 1 file to copy.\n\u003E \n\u003E \n\u003E \n\u003E 1. Get this [mono-2.0-bdwgc.dll](https://ksp.sarbian.com/unity-2019.2.2/win64/mono-2.0-bdwgc.dll) and replace the one in \u003Cksp\u003E\\MonoBleedingEdge\\EmbedRuntime with it.\n\u003E \u003C/ksp\u003E\n\u003E 2. Launch Game\n\u003E 3. in Visual Studio go Debug -\u003E Attach Unity Debugger. Press Input IP and set the port to 55555\n\u003E \n\u003E \n\u003E \n\u003E The dll is built with [those instructions](https://github.com/0xd4d/dnSpy/wiki/Debugging-Unity-Games). The source with the proper Unity version are [here](https://github.com/sarbian/dnSpy-Unity-mono/tree/dnSpy)\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E Windows only for now but the source should have everything needed to build the dll for Linux and OSX in the unity-2019.2.2-mbe directory. If you compile I will add the file on my server\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E I ll update the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E after other have confirmed it work for them \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E If someone want to have a look at the code and change the default port to 56000 they are welcome. I did not have the will ![:lol:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_laugh.png \u0022:lol:\u0022) ( look in around unity-2019.2.2-mbe\\mono\\mini\\debug-mini.c )\n\u003E \n\nI can confirm that it works (at least for me), currently using it to try and find out what\u0027s wrong with TCA in 1.9. This method helped me avoiding some work, thanks a lot.\n\nUsed it with Visual Studio 2019 and KSP 1.9.1."},{"CreatedByName":"LucidDan","CreatedById":170250,"CreatedDateTime":"2020-04-24T01:09:57Z","Content":"\u003E \n\u003E \n\u003E On 7/2/2019 at 7:28 AM, whitespacekilla said:\n\u003E \n\u003E \n\u003E I decided I want to be able to develop on Mac OSX as well as Windows (for whatever reason) so I figured out how to make this tutorial work for Mac. I\u0027m posting this here as much so I can find it if I need to figure it out again as for someone else\u0027s use but here goes anyway. Some items of note: KSP\u0027s files are arranged very differently in Mac OSX vs Windows and in fact they are a little \u0022quirky\u0022, you will also be browsing inside multiple \u0022.app\u0022 files, rendering the finder window less than useful. As a consequence, if you are not comfortable with the Mac OS terminal and paths, this tutorial is not for you and you will not succeed at it. Also, pdb2mdb does not work for PDBs produced in a portable format, which your Mac OSX compiler will almost certainly produce. You will need to either select a compiler that create its own mdb or use a debugger that can decompile on it\u0027s own (like JetBrains Rider), because so few plugin developers use Mac OSX, you won\u0027t get a lot of help navigating this issue, so besides the steps, paths, and advice I lay out here, you are probably on your own.\n\u003E \n\u003E \n\u003E \n\u003E - Install the correct version of Unity (down to the patch). The current correct version for KSP 1.7.2 is 2017.1.3p1; patch releases are available here -\u003E [https://unity3d.com/unity/qa/patch-releases](https://unity3d.com/unity/qa/patch-releases); non-patch releases are available here -\u003E [https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive) (NOT what you need at time of writing)\n\u003E - Determine your KSP install path (for me, it\u0027s \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/\u0022) and the correct Unity version install path (for me, it\u0027s \u0022/Applications/Unity/\u0022)\n\u003E - Copy the debug UnityPlayer from your Unity install to your KSP install; As far as I know, this must be done from the command line \u0060cp \u0022[YOUR CORRECT VERSION UNITY INSTALL PATH ]/Unity.app/Contents/PlaybackEngines/MacStandaloneSupport/Variations/universal\\_development\\_mono/UnityPlayer.app/Contents/MacOS/UnityPlayer\u0022 \u0022[YOUR KSP INSTALL PATH]/KSP.app/Contents/MacOS\u0022, for me, this command was:\n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E     cp \u0022/Applications/Unity/Unity.app/Contents/PlaybackEngines/MacStandaloneSupport/Variations/universal_development_mono/UnityPlayer.app/Contents/MacOS/UnityPlayer\u0022 \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/MacOS\u0022\n\u003E \n\u003E \n\u003E - Go ahead and rename the UnityPlayer you copied, as far as I can tell, this has no impact on whether it will work or not but it will help you differentiate the process you need to attach to, I ran the following command:\n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E     mv \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/MacOS/UnityPlayer\u0022 \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/MacOS/KSP_dbg\u0022\n\u003E \n\u003E \n\u003E - Get this [file](https://www.sarbian.com/sarbian/PlayerConnectionConfigFile) (it\u0027s just a file named PlayerConnectionConfig with contents \u0022listen 3247424759 1 1\u0022 if it ever stops being hosted) sarbian provided and put it in the Data directory (it makes the mono debugger starts its listening port, otherwise when you are browsing unity processes to attach to, you will see KSP but it will tell you it\u0027s not accepting debug connections); for me, this copy command was:\n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E     cp \u0022~/Downloads/PlayerConnectionConfigFile\u0022 \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/Resources/Data/\u0022\n\u003E \n\u003E \n\u003E - Ensure your toolchain will create an MDB for your plugin or select an IDE that doesn\u0027t require MDBs; [this article](https://blog.jetbrains.com/dotnet/2018/02/20/working-external-class-libraries-unity-rider/) from the team at JetBrains helped me understand what I needed to get an MDB file when compiling on Mac OS; if you use monodevelop , the mono included with your unity install will be used so this will be automatic, if you use rider or some other IDE, you will need to set your Mono executable path to the one provided by Unity, I do not know how to do this for VS on Mac and will probably not learn, it\u0027s easier to solve than any of the other items of information in this post though so, if you give up before figuring that out, you were probably going to give up anyway \\*shrug\\*\n\u003E - Launch the debug unity player, the command for me was:\n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E     cd /Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/MacOS \u0026\u0026 open KSP_dbg\n\u003E \n\u003E \n\u003E - Run whatever command your IDE uses to attach to a Unity process. i.e. in MonoDevelop, supposedly it\u0027s \u0022Run\u0022 \u003E \u0022Attach to Process\u0022, Select \u0022Unity Debugger\u0022, find the process, in Rider (what I currently use) it\u0027s \u0022Attached to Unity Process...\u0022. Select the KSP process and attach.\n\u003E \n\nI used this to great success in 1.9.1 as well, thanks [@whitespacekilla](https://forum.kerbalspaceprogram.com/index.php?/profile/190042-whitespacekilla/)!\n\nAdditional steps for 1.9.1: the naming of the development build from Unity 2019.2.2 is slightly different (macosx64\\_development\\_mono), and you need the UnityPlayer.dylib as well as (or possibly instead of?) the UnityPlayer binary.\n\n\u003E \n\u003E \n\u003E Quote\n\u003E \n\u003E \n\u003E cp \u0022/Applications/Unity/Unity.app/Contents/PlaybackEngines/MacStandaloneSupport/Variations/macosx64\\_development\\_mono/UnityPlayer.app/Contents/Frameworks/UnityPlayer.dylib\u0022 \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/Frameworks/\u0022 ****\n\u003E \n\nAlso as noted by others for Linux and Windows, instead of PlayerConnectionConfigFile, this is now an entry in boot.config, which on the Mac app is stored in Contents/Resources/Data/, so:\n\n\u003E \n\u003E \n\u003E Quote\n\u003E \n\u003E \n\u003E echo \u0022player-connection-debug=1\u0022 \u003E\u003E \u0022~/Library/Application Support/Steam/steamapps/common/Kerbal Space Program/KSP.app/Contents/Resources/Data/boot.config\u0022\n\u003E \n\nI tested with both Visual Studio for Mac (with Unity Tools) and JetBrains Rider, and I was able to attach a Unity debugger to the KSP process. I had mixed success with VS for Mac, but Rider worked perfectly - compiled and installed a copy of HyperEdit, set a breakpoint. Portable debug symbols worked out of the box, no pdb2mdb magic required.\n\nCPU load was through the roof for some reason, especially on the Main Menu, but otherwise, it worked quite well. Will definitely be keeping this around as a backup dev/debug setup for when I\u0027m not at the desktop Windows rig."}]}