{"TopicId":73920,"ForumId":34,"TopicTitle":"[1.0.5 - Alpha 6] Dang It! (12 september 2015)","CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-06-02T16:03:50Z","PageNum":33,"Articles":[{"CreatedByName":"erbmur","CreatedById":57112,"CreatedDateTime":"2015-06-08T09:07:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tkw\u0022 data-cite=\u0022tkw\u0022\u003E\u003Cdiv\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cem\u003E\u003Cstrong\u003EINCOMPATIBLE with FAR\u003C/strong\u003E\u003C/em\u003E\u003C/span\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cry.gif\u0022 alt=\u0022;.;\u0022\u003E waa!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s only incompatible to the point where there will be no failures to any of the ailerons as far as i am aware. Apart from that everything else will fail fantastically!\u003C/p\u003E\n"},{"CreatedByName":"Bit Fiddler","CreatedById":103108,"CreatedDateTime":"2015-06-08T10:34:07Z","Content":"\n\u003Cp\u003Eis there a way to scale back the failure rate? I want the random failures but I also want to be able to expect to fly an Aircraft to the pole and back for instance without it failing. I would like it such that the failure happen just not so frequently.\u003C/p\u003E\n"},{"CreatedByName":"Daishi","CreatedById":85055,"CreatedDateTime":"2015-06-08T15:57:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mulbin\u0022 data-cite=\u0022Mulbin\u0022\u003E\u003Cdiv\u003EMy god that\u0027s pretty.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan say the same about your rockets! Thanks for the praise, and the rep - I\u0027ve got three bars now thanks to you \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022theonegalen\u0022 data-cite=\u0022theonegalen\u0022\u003E\u003Cdiv\u003EHow gorgeous! Are you planning on making an Universal Storage version?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECheers!\u003C/p\u003E\u003Cp\u003EProbably not, sorry. The future direction of the mod is going to make non-wedge parts easier to store anyway under a unified shroud structure; so a dedicated wedge is going to be a redundant part to make now that we have this. But it\u0027s early days yet, who knows \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-08T17:54:14Z\u0022 title=\u002206/08/2015 05:54  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 8, 2015\u003C/time\u003E by Daishi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Coga19000","CreatedById":125394,"CreatedDateTime":"2015-06-09T13:28:42Z","Content":"\n\u003Cp\u003EGot my first failure yesterday, yay!\u003C/p\u003E\u003Cp\u003EWell, it was not much. It was a motor failure on an... already open antenna... in a comms module with four more antennas... launched in Creative... just to check the launch vehicle.\u003C/p\u003E\u003Cp\u003EI DON\u0027T CARE, IT WAS STILL A FAILURE OKAY\u003C/p\u003E\u003Cp\u003EAnyways, thank you for your mod. It\u0027s awesome \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-10T08:25:23Z\u0022 title=\u002206/10/2015 08:25  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 10, 2015\u003C/time\u003E by Coga19000\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Coffeeman","CreatedById":69966,"CreatedDateTime":"2015-06-10T05:37:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spacepetscompany\u0022 data-cite=\u0022Spacepetscompany\u0022\u003E\u003Cdiv\u003EI apologize if this has been asked before, but is this mod compatible with TestFlight?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETheoretically they should, but they do the same thing, so no guarantees. DangIt also works on RO/RSS last I checked \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tkw\u0022 data-cite=\u0022tkw\u0022\u003E\u003Cdiv\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cem\u003E\u003Cstrong\u003EINCOMPATIBLE with FAR\u003C/strong\u003E\u003C/em\u003E\u003C/span\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cry.gif\u0022 alt=\u0022;.;\u0022\u003E waa!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis just means no control surface failures. Everything else works fine.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bit Fiddler\u0022 data-cite=\u0022Bit Fiddler\u0022\u003E\u003Cdiv\u003Eis there a way to scale back the failure rate? I want the random failures but I also want to be able to expect to fly an Aircraft to the pole and back for instance without it failing. I would like it such that the failure happen just not so frequently.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot currently, but it is a greatly asked for feature, so something for this should come soonish \u003C/p\u003E\n"},{"CreatedByName":"Miipe","CreatedById":146035,"CreatedDateTime":"2015-06-10T17:56:11Z","Content":"\n\u003Cp\u003EHi!\u003C/p\u003E\u003Cp\u003EI start playing with this awesome mod and really enjoy.\u003C/p\u003E\u003Cp\u003EAfter some time in career mode with only 50 essential mods =), the frame rate became really really bad.\u003C/p\u003E\u003Cp\u003EWhen i pressed alt\u002Bf2 the log is going crazy with the message \u0027[Error]: Input is null\u0027, and won\u0027t stop. When I EVA the message stops, change to a vessel and start again.\u003C/p\u003E\u003Cp\u003ESo I finally trace down, and appear to be from this mod. I removed all mods and start a new carrer with just Dang It (CKAN install).\u003C/p\u003E\u003Cp\u003ETo reproduce do they follow:\u003C/p\u003E\u003Cp\u003ENew Carrer -\u0026gt; normal\u003C/p\u003E\u003Cp\u003EVAB, place the command module and a parachute. After that place the Flea booster, the message [Error]: input is null will appear\u003C/p\u003E\u003Cp\u003EIf you save the ship or change stages, the log show the error again.\u003C/p\u003E\u003Cp\u003EExit VAB and enter again, click save, now the message spam twice.\u003C/p\u003E\u003Cp\u003ELaunch and the error will show twice. Land this vessel do not recover and launch another, the message will show 4 times.\u003C/p\u003E\u003Cp\u003EI don\u0027t know exactly when, maybe because the number ships and satellites not active, but the error gets exponential, taking down the frame rate.\u003C/p\u003E\u003Cp\u003EHere\u0027s the screenshot, and the log in this repro test\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/okaBNlP.jpg\u0022 alt=\u0022okaBNlP.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003ELog: \u003Ca href=\u0022http://1drv.ms/1dwUsaY\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://1drv.ms/1dwUsaY\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ETks and sorry for my english!!!\u003C/p\u003E\n"},{"CreatedByName":"Daishi","CreatedById":85055,"CreatedDateTime":"2015-06-10T18:07:58Z","Content":"\n\u003Cp\u003EDoes it happen just with that booster, or every engine? Sounds like the mod isn\u0027t integrating with the game properly :\\\u003C/p\u003E\n"},{"CreatedByName":"Miipe","CreatedById":146035,"CreatedDateTime":"2015-06-10T19:42:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Daishi\u0022 data-cite=\u0022Daishi\u0022\u003E\u003Cdiv\u003EDoes it happen just with that booster, or every engine? Sounds like the mod isn\u0027t integrating with the game properly :\\\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI tested with liquid booster, and happens too.\u003C/p\u003E\n"},{"CreatedByName":"Mitchz95","CreatedById":82292,"CreatedDateTime":"2015-06-16T00:55:34Z","Content":"\n\u003Cp\u003EI think I\u0027m experiencing a bug. Spares don\u0027t seem to appear as a resource, and I can\u0027t take any from my pods to repair failed parts.\u003C/p\u003E\n"},{"CreatedByName":"madraven","CreatedById":105574,"CreatedDateTime":"2015-06-17T17:15:28Z","Content":"\n\u003Cp\u003EHi, \u003C/p\u003E\u003Cp\u003EI am getting the same error as Miipe.\u003C/p\u003E\u003Cp\u003Eplaying in sandbox and when i add the stock LV-N \u0022Nerv\u0022 Atomic Rocket Motor to my Shuttle made of MK3 parts in the SPH I get the error [ERROR]: Input is null.\u003C/p\u003E\u003Cp\u003EOnce the motor(s) are attached to the shuttle the error(s) pop up (in the Alt-F2 log) every time a part is added to or removed from the shuttle. If i take off the motors the error stops appearing. I can add bits with out issue. However as soon as the motors are put back on the error returns..\u003C/p\u003E\u003Cp\u003EI also get this message when adding the following motors ( if i add 4 engines i get 4 errors, If i add 10 i get 10 errors)\u003C/p\u003E\u003Cp\u003EBACC \u0022Thumper\u0022 \u003C/p\u003E\u003Cp\u003EGNR-2500 Nuclear Engine (USI Freight Transport Technologies)\u003C/p\u003E\u003Cp\u003EGNR-3750 Nuclear Engine (USI Freight Transport Technologies)\u003C/p\u003E\u003Cp\u003EHoneyBadger Vtol Atmo Engine (USI)\u003C/p\u003E\u003Cp\u003EJ-33 \u0022Wheesley\u0022 Basic Jet Engine\u003C/p\u003E\u003Cp\u003EJ-X4 \u0022Whiplash Turo Ramjet Engine\u003C/p\u003E\u003Cp\u003EKerbodyne KR-2L\u002B \u0022Rhino\u0022\u003C/p\u003E\u003Cp\u003ELarge Ducted Fan (USI) is get a lot of these when adding 1 [Log]: Look rotation viewing vector is zero and i get the same number of the [Error]: Input is null just after.\u003C/p\u003E\u003Cp\u003ELV-T30 \u0022Reliant\u0022\u003C/p\u003E\u003Cp\u003ELV-T45 \u0022Swivel\u0022\u003C/p\u003E\u003Cp\u003ERT-5 \u0022Flea\u0022\u003C/p\u003E\u003Cp\u003EMedium Ducted Fan (USI)\u003C/p\u003E\u003Cp\u003EMicro Ducted Fan (USI)\u003C/p\u003E\u003Cp\u003ERE-I5 \u0022Skipper\u0022\u003C/p\u003E\u003Cp\u003ERE-L10 \u0022Poodle\u0022\u003C/p\u003E\u003Cp\u003ERE-M3 \u0022Mainsail\u0022\u003C/p\u003E\u003Cp\u003ERT-10 \u0022Hammer\u0022\u003C/p\u003E\u003Cp\u003ES1 SRB-KD25k \u0022Kickback\u0022\u003C/p\u003E\u003Cp\u003ES3 KS-25x4 \u0022mammoth\u0022\u003C/p\u003E\u003Cp\u003ESepratron I\u003C/p\u003E\u003Cp\u003EIf i uninstall DangIT the error goes away.\u003C/p\u003E\u003Cp\u003EI hope thats of some help.\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2015-06-18T05:09:27Z","Content":"\n\u003Cp\u003EDid you install community resource pack?\u003C/p\u003E\n"},{"CreatedByName":"Mitchz95","CreatedById":82292,"CreatedDateTime":"2015-06-18T06:58:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ippo\u0022 data-cite=\u0022Ippo\u0022\u003E\u003Cdiv\u003EDid you install community resource pack?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs that required? I don\u0027t see it listed in the OP.\u003C/p\u003E\n"},{"CreatedByName":"rabidninjawombat","CreatedById":108889,"CreatedDateTime":"2015-06-18T07:10:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mitchz95\u0022 data-cite=\u0022Mitchz95\u0022\u003E\u003Cdiv\u003EIs that required? I don\u0027t see it listed in the OP.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIts included in the download, generally mod developers include files in the download cause they are required \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E (unless specifically labeled as optional)\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2015-06-18T08:24:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mitchz95\u0022 data-cite=\u0022Mitchz95\u0022\u003E\u003Cdiv\u003EIs that required? I don\u0027t see it listed in the OP.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, it\u0027s required. It\u0027s stated in the \u003Ca href=\u0022https://github.com/Ippo343/DangIt/wiki/Installation\u0022 rel=\u0022external nofollow\u0022\u003Emanual installation instructions\u003C/a\u003E, and it\u0027s also bundled in the zip file.\u003C/p\u003E\u003Cp\u003EBy the way, you should really use CKAN \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"jazztoken","CreatedById":136536,"CreatedDateTime":"2015-06-22T03:58:47Z","Content":"\n\u003Cp\u003EIs there an easy way to verify that DangIt!/Entropy are working as normal? I\u0027ve launched a number of ships with DangIt! installed and haven\u0027t seen a failure since .24.\u003C/p\u003E\u003Cp\u003EI can see some log messages related to DangIt! and I can trigger manual failures, but it\u0027s spooky how long I\u0027ve gone without an unexpected one.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2015-06-22T06:11:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022jazztoken\u0022 data-cite=\u0022jazztoken\u0022\u003E\u003Cdiv\u003EI can see some log messages related to DangIt! and I can trigger manual failures\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThen they are working. Enjoy the suspense \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"autumnalequinox","CreatedById":114782,"CreatedDateTime":"2015-06-28T02:19:16Z","Content":"\n\u003Cp\u003EBeen enjoying the failure rate. It feels puuuurfect (I may have said this before). Just rare enough for my anxious brain. \u003C/p\u003E\u003Cp\u003EI know heat now degrades parts. I had a probe heading to Moho and in an attempt to perform a braking burn and get into orbit, my cryo engine fails, boom! Then I have a backup, four small monoprop engines, which immediately fail as well. I\u0027m assuming this is due to solar heating (my parts were showing about 450\u002B). In addition, I did accidently burn the transfer engine really hard earlier in the mission.\u003C/p\u003E\u003Cp\u003EMy question is, if I use a mod like heat control (bleeds heat away using radiators and heat pipes) could this save my engines? Or if I build a protective thermal shell around them and keep engines shadowed? I\u0027m using 1.02 still so I know the heat system is weird but cool = more reliable, correct?\u003C/p\u003E\u003Cp\u003EI just want to make sure I can fix this problem through creative engineering. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Z3R0_0NL1N3","CreatedById":60881,"CreatedDateTime":"2015-07-06T20:45:31Z","Content":"\n\u003Cp\u003EWhen an engine has multiple engine nozzles (like in Tantares parts or the stock Mammoth), is there a way for your mod to make one engine burn out (perhaps using a Module) and make the rest continue firing? This would replicate something like the Falcon 9\u0027s Octaweb that can still make it to orbit even if it has two engine failures, if you happen to be using a part that is, like that, an engine cluster.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-07T07:40:44Z\u0022 title=\u002207/07/2015 07:40  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 7, 2015\u003C/time\u003E by Z3R0_0NL1N3\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"majo339","CreatedById":147674,"CreatedDateTime":"2015-07-07T23:48:03Z","Content":"\n\u003Cp\u003EGreetings,\u003C/p\u003E\u003Cp\u003EFirst of all let me congratulate you for a very nice and challenging mod. A few days ago I have started to use it an I like the idea very much, however I have some doubts regarding the failure probability calculations. Maybe you could help me or give me some hints.\u003C/p\u003E\u003Cp\u003EIn the wiki of your plugin we can read that \u0022MTBF follows an exponential decay function\u0022, then there is a reference to the wikipage of the distribution itself, where MTBF, lifetime, tau, mean lifetime, exponential time constant, 1/lambda, are used as synonyms of the same value. If so, why do you specify two values for each of the elements in the *.cfg files in the ModuleManager folder: MTBF and LifeTime? Does the \u0022LifeTime\u0022 in the cfg file mean something different than \u0022LifeTime\u0022 on the wikipage of the plugin/exp distribution? Obviously they play different roles in your module (especially when you set the LifeTime value to a very low value for the engines), but I seem to be somewhat confused by the notation.\u003C/p\u003E\u003Cp\u003EThe second question is more directly bound to the gameplay. I have performed some small scale scientific mission to the moon. The ship includes 14 tanks (where 9 of them are dropped before reaching the kerbal orbit), and also four wheels on the final stage which is my scientific rover/hopper. The thing is: when I launched the mission for the first time, after several minutes of flight (yet before the orbit) one of the tanks got broken. When I restarted the game and tried it again, I made it to the mun, but after several kerbal days (maybe 20 hours) of exploration, one of the wheel tire got broken. This is where I thought to myself: what the hell, am I so unlucky or are the brake-down probabilities too high? Then I went into some literature reading, and well, there I am with my post.\u003C/p\u003E\u003Cp\u003EI even went to some reference calculation website \u003Ca href=\u0022https://reliabilityanalyticstoolkit.appspot.com/exponential_distribution\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://reliabilityanalyticstoolkit.appspot.com/exponential_distribution\u003C/a\u003E where I tried to put the MTBF of a wheel tire, of a tank, and estimate the failure probabilities of these two cases. As I expected, the probability of them (with the MTBF taken from the cfg files) during the first several tens of hours of the mission, is practically an absolute zero. So why did it happen to me?\u003C/p\u003E\u003Cp\u003EApparently I have a problem with understanding the LifeTime value from your cfg files. If you could put me some light on that, I would be grateful.\u003C/p\u003E\u003Cp\u003EBest regards,\u003C/p\u003E\u003Cp\u003EMajo339\u003C/p\u003E\u003Cp\u003EPS. I did not travel at high temperatures, I keep the speed within the atmosphere at \u0026lt;=250m/s.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2015-07-08T06:50:10Z","Content":"\n\u003Cp\u003EHello everyone! Sorry for not replying sooner, life\u0027s been pretty hectic and weird lately. For a variety of reasons, I just cannot stay at home, so even when I have some some spare time I\u0027m not around a PC.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022autumnalequinox\u0022 data-cite=\u0022autumnalequinox\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EMy question is, if I use a mod like heat control (bleeds heat away using radiators and heat pipes) could this save my engines? Or if I build a protective thermal shell around them and keep engines shadowed? I\u0027m using 1.02 still so I know the heat system is weird but cool = more reliable, correct?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe failure rate is influenced by the temperature: reducing the temperature by any means will be beneficial \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Z3R0_0NL1N3\u0022 data-cite=\u0022Z3R0_0NL1N3\u0022\u003E\u003Cdiv\u003EWhen an engine has multiple engine nozzles (like in Tantares parts or the stock Mammoth), is there a way for your mod to make one engine burn out (perhaps using a Module) and make the rest continue firing? This would replicate something like the Falcon 9\u0027s Octaweb that can still make it to orbit even if it has two engine failures, if you happen to be using a part that is, like that, an engine cluster.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnfortunately not, not at the moment.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022majo339\u0022 data-cite=\u0022majo339\u0022\u003E\u003Cdiv\u003E...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe LifeTime is the constant of the exponential decay (with all the implications that your read about already).\u003C/p\u003E\u003Cp\u003EMTBF is the initial \u003Cem\u003Evalue\u003C/em\u003E, at time zero.\u003C/p\u003E\u003Cp\u003ESo for example, if you have two parts with the same LifeTime but different MTBF, the one with the higher MTBF will always be strictly more reliable than the other. I hope it\u0027s clearer now \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Svm420","CreatedById":136047,"CreatedDateTime":"2015-07-08T12:45:16Z","Content":"\n\u003Cp\u003EAny chance of progress with procedural parts failures? I enjoy the mod, but end up missing out n any tank failures because I use Pparts. Same with entropy actually now that I think never had an srb fail and that must be why.\u003C/p\u003E\n"},{"CreatedByName":"majo339","CreatedById":147674,"CreatedDateTime":"2015-07-08T17:27:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ippo\u0022 data-cite=\u0022Ippo\u0022\u003E\u003Cdiv\u003EThe LifeTime is the constant of the exponential decay (with all the implications that your read about already). MTBF is the initial \u003Cem\u003Evalue\u003C/em\u003E, at time zero. So for example, if you have two parts with the same LifeTime but different MTBF, the one with the higher MTBF will always be strictly more reliable than the other. I hope it\u0027s clearer now \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes it is, thank you. So to make it 100% sure: MTBF(t) = MTBF(0)*e^(-t/LifeTime). Correct?\u003C/p\u003E\u003Cp\u003EA second question relates to my hitherto experience with the mod:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E1st launch: one of the 15 fuel tanks (MTBF=350400h, LifeTime=131400h) breakes within the first 5 minutes of flight\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E2nd launch: one of the four wheel tires (MTBF=350400h, LifeTime=131400h) breakes within first 10 hours of flight\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ejust a minute ago: one of the two batteries (MTBF=175200h, LifeTime=87600h) has gone short-circuited after 12h of mission\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAccording to your intuition and your intentions while programming this mod: would you say this a normal behaviour of the process at these parameters? I have a feeling that these failures happen way too early and too often.\u003C/p\u003E\u003Cp\u003EI have looked into my savegame file and I see that all the parts have the \u0022Age\u0022 parameter values set to quite high values. For example, a fuel tank has Age of 60467.11, and the wheel tires Age is 1345.39. Maybe here is something not right.\u003C/p\u003E\u003Cp\u003ERegards,\u003C/p\u003E\u003Cp\u003EMajo339\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-08T18:11:53Z\u0022 title=\u002207/08/2015 06:11  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 8, 2015\u003C/time\u003E by majo339\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2015-07-08T18:16:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Svm420\u0022 data-cite=\u0022Svm420\u0022\u003E\u003Cdiv\u003EAny chance of progress with procedural parts failures? I enjoy the mod, but end up missing out n any tank failures because I use Pparts. Same with entropy actually now that I think never had an srb fail and that must be why.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESorry bro, not happening. Not from me, anyway.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022majo339\u0022 data-cite=\u0022majo339\u0022\u003E\u003Cdiv\u003EYes it is, thank you. So to make it 100% sure: MTBF(t) = MTBF(0)*e^(-t/LifeTime). Correct?\u003Cp\u003EA second question relates to my hitherto experience with the mod:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E1st launch: one of the 15 fuel tanks (MTBF=350400h, LifeTime=131400h) breakes within the first 5 minutes of flight\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E2nd launch: one of the four wheel tires (MTBF=350400h, LifeTime=131400h) breakes within first 10 hours of flight\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ejust a minute ago: one of the two batteries (MTBF=175200h, LifeTime=87600h) has gone short-circuited after 12h of mission\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAccording to your intuition and your intentions while programming this mod: would you say this a normal behaviour of the process at these parameters? I have a feeling that these failures happen way too early and too often.\u003C/p\u003E\u003Cp\u003EI have looked into my savegame file and I see that all the parts have the \u0022Age\u0022 parameter values set to quite high values. For example, a fuel tank has Age of 60467.11, and the wheel tires Age is 1345.39. Maybe here is something not right.\u003C/p\u003E\u003Cp\u003ERegards,\u003C/p\u003E\u003Cp\u003EMajo339\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, it certainly sounds suspicious. I don\u0027t know what to say, sorry.\u003C/p\u003E\n"},{"CreatedByName":"Z3R0_0NL1N3","CreatedById":60881,"CreatedDateTime":"2015-07-14T08:19:19Z","Content":"\n\u003Cp\u003EI see in the wiki that heat causes parts to age faster. What about having excessive G-forces cause a part to have a very high chance of failure?\u003C/p\u003E\n"},{"CreatedByName":"Magitek","CreatedById":148073,"CreatedDateTime":"2015-07-15T01:32:30Z","Content":"\n\u003Cp\u003EWhile trying to get several mods to work without generating errors I noticed DangIt was throwing Error - Input is null for every part with electrical charge on it.\u003C/p\u003E\u003Cp\u003EFor whatever reason one of KSP\u0027s functions does not like being passed null so I changed the tank leak system to use to empty strings instead of null.\u003C/p\u003E\u003Cp\u003Emodified source:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003Eusing System;\u003C/p\u003E\u003Cp\u003Eusing System.IO;\u003C/p\u003E\u003Cp\u003Eusing System.Collections;\u003C/p\u003E\u003Cp\u003Eusing System.Collections.Generic;\u003C/p\u003E\u003Cp\u003Eusing System.Linq;\u003C/p\u003E\u003Cp\u003Eusing System.Text;\u003C/p\u003E\u003Cp\u003Eusing UnityEngine;\u003C/p\u003E\u003Cp\u003Enamespace ippo\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E public class ModuleTankReliability : FailureModule\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E public override string DebugName { get { return \u0022DangItTank\u0022; } }\u003C/p\u003E\u003Cp\u003E public override string ScreenName { get { return \u0022Tank\u0022; } }\u003C/p\u003E\u003Cp\u003E public override string FailureMessage { get { return \u0022A tank of \u0022 \u002B leakName \u002B \u0022 is leaking!\u0022; } }\u003C/p\u003E\u003Cp\u003E public override string RepairMessage { get { return \u0022Duct tape applied.\u0022; } }\u003C/p\u003E\u003Cp\u003E public override string FailGuiName { get { return \u0022Puncture tank\u0022; } }\u003C/p\u003E\u003Cp\u003E public override string EvaRepairGuiName { get { return \u0022Apply duct tape\u0022; } }\u003C/p\u003E\u003Cp\u003E public override string MaintenanceString { get { return \u0022Repair the insulation\u0022; } }\u003C/p\u003E\u003Cp\u003E public override string ExtraEditorInfo \u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E get\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E var temp = \u0022This part can leak one of the following resources if it fails: \u0022;\u003C/p\u003E\u003Cp\u003E foreach (PartResource pr in part.Resources.list.FindAll(r =\u0026gt; !DangIt.LeakBlackList.Contains(r.resourceName))) {\u003C/p\u003E\u003Cp\u003E temp \u002B= pr.resourceName \u002B \u0022, \u0022;\u003C/p\u003E\u003Cp\u003E };\u003C/p\u003E\u003Cp\u003E return temp.TrimEnd(\u0027 \u0027).TrimEnd(\u0027,\u0027);\u003C/p\u003E\u003Cp\u003E } \u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // The leak is modeled as an exponential function\u003C/p\u003E\u003Cp\u003E // by approximating the differential equation\u003C/p\u003E\u003Cp\u003E // dQ(t) = - pole * Q(t)\u003C/p\u003E\u003Cp\u003E // where Q is the amount of fuel left in the tank\u003C/p\u003E\u003Cp\u003E [KSPField(isPersistant = true, guiActive = false)]\u003C/p\u003E\u003Cp\u003E protected float pole = 0.01f;\u003C/p\u003E\u003Cp\u003E // Maximum and minimum values of the time constant\u003C/p\u003E\u003Cp\u003E // The time constant is generated randomly between these two limits\u003C/p\u003E\u003Cp\u003E // and pole = 1 / TC\u003C/p\u003E\u003Cp\u003E [KSPField(isPersistant = true, guiActive = false)]\u003C/p\u003E\u003Cp\u003E public float MaxTC = 60f;\u003C/p\u003E\u003Cp\u003E [KSPField(isPersistant = true, guiActive = false)]\u003C/p\u003E\u003Cp\u003E public float MinTC = 10f;\u003C/p\u003E\u003Cp\u003E // Name of the leaking resource\u003C/p\u003E\u003Cp\u003E [KSPField(isPersistant = true, guiActive = false)]\u003C/p\u003E\u003Cp\u003E public string leakName = \u0022\u0022;\u003C/p\u003E\u003Cp\u003E // List of resources that the module will choose from when starting a new leak.\u003C/p\u003E\u003Cp\u003E // This list is created when the module is started by taking all the resources\u003C/p\u003E\u003Cp\u003E // in the part and excluding the ones that have been blacklisted in the configuration file\u003C/p\u003E\u003Cp\u003E protected List\u0026lt;PartResource\u0026gt; leakables;\u003C/p\u003E\u003Cp\u003E // This method is executed once at startup during a coroutine\u003C/p\u003E\u003Cp\u003E // that waits for the runtime component to be available and then triggers\u003C/p\u003E\u003Cp\u003E // this method.\u003C/p\u003E\u003Cp\u003E protected override void DI_RuntimeFetch()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E // At this point DangIt.Instance is not null: fetch the blacklist\u003C/p\u003E\u003Cp\u003E this.leakables = part.Resources.list.FindAll(r =\u0026gt; !DangIt.LeakBlackList.Contains(r.resourceName));\u003C/p\u003E\u003Cp\u003E // If no leakables are found, just disable the module\u003C/p\u003E\u003Cp\u003E if (leakables.Count == 0)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //this.Log(\u0022The part \u0022 \u002B this.part.name \u002B \u0022 does not contain any leakable resource.\u0022);\u003C/p\u003E\u003Cp\u003E this.Events[\u0022Fail\u0022].active = false;\u003C/p\u003E\u003Cp\u003E this.leakName = \u0022\u0022;\u003C/p\u003E\u003Cp\u003E this.enabled = false; // disable the monobehaviour: this won\u0027t be updated\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E protected override void DI_Start(StartState state)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E if (HighLogic.LoadedSceneIsFlight)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E // The part was already failed when loaded:\u003C/p\u003E\u003Cp\u003E // check if the resource is still in the tank\u003C/p\u003E\u003Cp\u003E if (this.HasFailed)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E if (leakName == \u0022\u0022 || !part.Resources.Contains(leakName))\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E this.Log(\u0022ERROR: the part was started as failed but the leakName isn\u0027t valid!\u0022); ;\u003C/p\u003E\u003Cp\u003E this.SetFailureState(false);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E protected override void DI_OnLoad(ConfigNode node)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E this.pole = DangIt.Parse\u0026lt;float\u0026gt;(\u0022pole\u0022, 0.01f);\u003C/p\u003E\u003Cp\u003E this.leakName = node.GetValue(\u0022leakName\u0022);\u003C/p\u003E\u003Cp\u003E if (string.IsNullOrEmpty(leakName))\u003C/p\u003E\u003Cp\u003E leakName = \u0022\u0022;\u003C/p\u003E\u003Cp\u003E this.Log(\u0022OnLoad: loaded leakName \u0022 \u002B ((leakName == null) ? \u0022null\u0022 : leakName));\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E protected override void DI_OnSave(ConfigNode node)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E node.SetValue(\u0022leakName\u0022, (leakName == null) ? \u0022\u0022 : leakName);\u003C/p\u003E\u003Cp\u003E node.SetValue(\u0022pole\u0022, this.pole.ToString());\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E protected override void DI_Update()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E try\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E if (this.HasFailed \u0026amp;\u0026amp; (leakName != \u0022\u0022 \u0026amp;\u0026amp; (part.Resources[leakName].amount \u0026gt; 0))) // ignore empty tanks\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E double amount = pole * part.Resources[leakName].amount * TimeWarp.fixedDeltaTime;\u003C/p\u003E\u003Cp\u003E // The user can disable the flow from tanks: if he does, RequestResource\u003C/p\u003E\u003Cp\u003E // won\u0027t drain anything.\u003C/p\u003E\u003Cp\u003E // In that case, we need to subtract directly the amount we want\u003C/p\u003E\u003Cp\u003E if (part.Resources[leakName].flowState)\u003C/p\u003E\u003Cp\u003E part.RequestResource(leakName, amount);\u003C/p\u003E\u003Cp\u003E else \u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E part.Resources[leakName].amount -= amount;\u003C/p\u003E\u003Cp\u003E part.Resources[leakName].amount = Math.Max(part.Resources[leakName].amount, 0);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E catch (Exception e)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E OnError(e);\u003C/p\u003E\u003Cp\u003E this.isEnabled = false;\u003C/p\u003E\u003Cp\u003E this.SetFailureState(false);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E protected override bool DI_FailBegin()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E // Something has gone very wrong somewhere\u003C/p\u003E\u003Cp\u003E if (leakables == null)\u003C/p\u003E\u003Cp\u003E throw new Exception(\u0022The list of leakables is null!\u0022);\u003C/p\u003E\u003Cp\u003E // Discard every resource that has already been emptied\u003C/p\u003E\u003Cp\u003E leakables.RemoveAll(r =\u0026gt; r.amount == 0);\u003C/p\u003E\u003Cp\u003E if (leakables.Count \u0026gt; 0)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E // Choose a random severity of the leak\u003C/p\u003E\u003Cp\u003E // The lower TC, the faster the leak\u003C/p\u003E\u003Cp\u003E float TC = UnityEngine.Random.Range(MinTC, MaxTC);\u003C/p\u003E\u003Cp\u003E this.pole = 1 / TC;\u003C/p\u003E\u003Cp\u003E this.Log(string.Format(\u0022Chosen TC = {0} (min = {1}, max = {2})\u0022, TC, MinTC, MaxTC));\u003C/p\u003E\u003Cp\u003E // Pick a random index to leak.\u003C/p\u003E\u003Cp\u003E // Random.Range excludes the upper bound,\u003C/p\u003E\u003Cp\u003E // BUT because list.Count returns the length, not the max index, we DONT need a \u002B1\u003C/p\u003E\u003Cp\u003E // e.g. [1].Count == 1 but MyListWithOneItem[1] == IndexError\u003C/p\u003E\u003Cp\u003E int idx = UnityEngine.Random.Range(0, leakables.Count);\u003C/p\u003E\u003Cp\u003E print (\u0022Selected IDX: \u0022 \u002B idx.ToString ());\u003C/p\u003E\u003Cp\u003E print (\u0022Length of leakables: \u0022 \u002B this.leakables.Count.ToString ());\u003C/p\u003E\u003Cp\u003E print (\u0022Leakables: \u0022 \u002B this.leakables.ToString ());\u003C/p\u003E\u003Cp\u003E this.leakName = leakables[idx].resourceName;\u003C/p\u003E\u003Cp\u003E // Picked a resource, allow failing\u003C/p\u003E\u003Cp\u003E return true;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E else\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E leakName = \u0022\u0022;\u003C/p\u003E\u003Cp\u003E this.Log(\u0022Zero leakable resources found on part \u0022 \u002B this.part.partName \u002B \u0022, aborting FailBegin()\u0022);\u003C/p\u003E\u003Cp\u003E // Disallow failing\u003C/p\u003E\u003Cp\u003E return false;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E protected override void DI_Disable()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E // nothing to do for tanks\u003C/p\u003E\u003Cp\u003E return;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E protected override void DI_EvaRepair()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E this.leakName = \u0022\u0022;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E#if DEBUG\u003C/p\u003E\u003Cp\u003E [KSPEvent(active = true, guiActive = true)]\u003C/p\u003E\u003Cp\u003E public void PrintStatus()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E this.Log(\u0022Printing flow modes\u0022);\u003C/p\u003E\u003Cp\u003E foreach (PartResource res in this.part.Resources)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E this.Log(res.resourceName \u002B \u0022: \u0022 \u002B res.flowMode \u002B \u0022, \u0022 \u002B res.flowState);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E [KSPEvent(active = true, guiActive=true)]\u003C/p\u003E\u003Cp\u003E public void PrintBlackList()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E this.Log(\u0022Printing blacklist\u0022);\u003C/p\u003E\u003Cp\u003E foreach (string item in DangIt.LeakBlackList)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E this.Log(\u0022Blacklisted: \u0022 \u002B item);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E this.Log(\u0022Done\u0022);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E#endif\u003C/p\u003E\u003Cp\u003E public override bool DI_ShowInfoInEditor(){\u003C/p\u003E\u003Cp\u003E return part.Resources.list.FindAll(r =\u0026gt; !DangIt.LeakBlackList.Contains(r.resourceName)).Count\u0026gt;0; //Only show if has leakable rescoures\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\n"}]}