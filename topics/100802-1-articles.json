{"TopicId":100802,"ForumId":36,"TopicTitle":"JebmaScript - KOS Alternative using Javascript","CreatedByName":"JoerT","CreatedById":106737,"CreatedDateTime":"2015-02-26T19:44:24Z","PageNum":1,"Articles":[{"CreatedByName":"JoerT","CreatedById":106737,"CreatedDateTime":"2015-02-26T19:44:24Z","Content":"I\u0027ve recently \u0027discovered\u0027 KOS, and I absolutely love what it lets me do. While mechjeb feels like cheating, getting the same effect through a program I\u0027ve made myself feels very good. \n\nThe issue I have with KOS tho, is that it\u0027s tricky and hacky to make reusable code. You can make various scripts and pass in some parameters, but the way this works feels a bit dirty to me. I see the charm of having a system feel Apollo era, but I\u0027d rather have something more.. clean I guess. Also, the syntax of KOS, with a DOT as line terminator and odd control structures (UNTIL, WHEN THEN and IF without THEN) makes it very hard for me to write code that works right off the bat. \n\n**Disclaimer! Mad props to the developer(s) of KOS. I love what they made and really hope they keep it up. I do NOT mean to bash KOS. I just have a personal preference which is not fully matched by KOS.**\n\nI\u0027m a web-developer and work with javascript extensively. I love javascript and the way it works with closures. I thought it would better suit my needs.\n\nAfter searching around the web a bit, I found a couple of fledgeling projects trying to do the same thing, but I couldn\u0027t find any finished addon.\n\nThis all made me poke around in add-on development for the first time. I fired up Visual Studio and after a bit of hacking and brushing up my C# I\u0027ve got a working Javascript interpreter running inside KSP, printing all kinds of trash to the console. It\u0027s a long way from anything half useful, but so far I think this really has a chance of actually working.\n\nThe plan is to make the thing very much event driven. Loops would work by hooking into an update event, which gets called at regular intervals.\n\nI was wondering if anyone else thinks this is a good idea, or if I would be making this just for me (which would be fine by the way). \n\nWhat I want to avoid, is reinventing the wheel, so if anyone knows about a similar or identical addon, please yell ;p"},{"CreatedByName":"Kerbart","CreatedById":78303,"CreatedDateTime":"2015-02-26T20:44:23Z","Content":"There\u0027s a remote procedure call add-in that communicates through a tcp/ip connection; theoretically you can hook up anything \u0022on the outside\u0022 provided you write an interface for it.\n\nThere hasn\u0027t been a lot of work on it lately, sadly. The standard interface is in Python which works fine for me but I\u0027m sure if you want to sink your teeth into it you can write an ecmascript/javascript interface for it.\n\nAt the very least you could use it to see how something like this \\*could\\* work and reverse engineer a new version. Include a Python interface when you do, please. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"Van Disaster","CreatedById":58876,"CreatedDateTime":"2015-02-26T22:47:37Z","Content":"Well, personally I\u0027d rather it was Lua - it also has closures, it\u0027s a very small language, and as far as I can tell, designed for embedding ( MJ once shipped with embedded lua ) - but if you really want to try javascript, why not."},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-02-27T04:34:02Z","Content":"Hey, one of the two active devs for kOS here. Just in case you don\u0027t know kOS\u0027s current design (although this is not the original design by Nivekk, who no longer maintains the project), is that kerboscript is merely the default language that is bound to the low level virtual machine\u0027s opcodes,. Once it compiles to those opcodes in an almost JIT way (not quite JIT), then the program just executes off those opcodes alone, ignoring the higher level script it came from.\n\nThe point being that in principle it should be possible to compile more than one language down into those virtual opcodes, even though we haven\u0027t had the time to address that and give it a try yet. There is someone trying to make a .NET converter that will take a C# .NET DLL file and convert its opcodes over into kOS opcodes, but it\u0027s kind of hard because some of the limitations of kerboscript are also limitations of the underlying virtual machine itself, like not having a means of making local variables for example.\n\nIf you want to make a new system from scratch, I\u0027d love that and enjoy the \u0022competition\u0022, so to speak - as it would force us to keep pushing.\n\nBut alternatively, if you want to look into the possibility of making a javascript compiler FOR kOS we\u0027d be happy to work with you on that.\n\nThe reason I mention it is that a heck of a lot of what goes into kOS isn\u0027t \\*really\\* about the language itself and instead is a bunch of utilities connected to the interface between the language and the stock game. Making the in-game terminal window work, making the new telnet feature work, dealing with the lock steering mechanism and connecting it to KSP\u0027s API, etc. If you start a new project from scratch, there\u0027s a lot there that you\u0027d have to re-implement.\n\nWhile there might be a lot of headache around trying to work together (especially since we\u0027d probably need to do a lot of stuff at the low level to change the opcodes, but we\u0027ll have to do that anyway as I\u0027m in the midst of designing a function call (with local variables finally) system for kerboscript.\n\nAnother possibility may be to try to split kOS apart into two different mods - one that is the language and one that is the utilities (like the terminal and autopiloting system and so on), so that the utilities part of it can become a shared thing used by more than one mod (sort of like how RasterProp Monitor works).\n\nAnyway, I\u0027m just throwing ideas out randomly here. I have no idea just how workable this all really would be. \n\nAs for if you do want to go do it from scratch, here\u0027s a few things to keep in mind that we\u0027ve run into in kOS that you\u0027ll run into as well and want to consider what you\u0027d like your solutions for them to be:\n\n1 - Unity and KSP are not threadsafe, so you must do one of two things:\n\n1.A - Break up your script\u0027s running into small chunks that can be run a little bit per Update() or FixedUpdate() callbacks (depending on which you want to use - kOS uses Update() which is wrong and we have to change that some day to FixedUpdate()). The main Unity program runs all in one thread, and makes calls into your mod\u0027s update or fixedupdate callback methods. These callbacks MUST NOT take too long to run, and mustn\u0027t ever perform any blocking I/O activity like waiting for a keypress, or waiting for network traffic. Thus if your user writes a long-lasting loop in their script, you have to find a way to execute that loop a bit a few chunks at a time and save the state of things between chunks. (For example if you have the C# code \u0022while (true) {}\u0022 in one of your callbacks, you actually freeze the entire KSP game because everything your mod is doing is in the same thread as the main game.) kOS achieves this by compiling the kerboscript into lower level opcodes and then lets the virtual machine only run a fixed number of the opcodes per Update() call.\n\n1.B - The other approach would be to run your script in a separate thread that can just run as fast as it feels like, but then to do that you must make sure it never makes any use of any Unity or KSP API calls directly from the script\u0027s thread. What you\u0027d probably have to do then is devise some sort of queue or stream of marshalled API call parameter information that is used to pass these requests from your script thread to your main Update() or FixedUpdate() callbacks, which DO run in Unity\u0027s main thread, which can answer them, put the answer back out on the stream or queue, and let the script\u0027s thread then see them and act on them. While conceptually cleaner maybe, it\u0027s a heck of a lot more work because you then have to pass back a LOT of data that way for a bunch of different things. Every time the script tries to read the ship\u0027s position, or velocity, or mass, or fuel remaining, or tries to alter the throttle, or set the steering controls, it\u0027s going to have to do it through this system, and that means you have to design how all of that is going to get marshalled up and sent from one thread to the other.\n\n2. Unless you pay money to Unity for the professional development suite, you CANNOT add your own fonts to the game for your mod. The free development suite doesn\u0027t allow you to because it requires the creation of an asset bundle. It won\u0027t let you read a TTF file directly, \\*\\*EVEN THOUGH the Unity documentation says it works without mentioning the fact that it doesn\u0027t in the free version, grumble!\\*\\*. You just can\u0027t. The fact that this is the case is not well documented, and took us a long time to figure out. I don\u0027t begrudge Unity for having features that only work in the professional version, but they should freaking TELL YOU in their documentation when their instructions won\u0027t work without it. Anyway, the fact that you can\u0027t add your own fonts becomes a problem with the terminal window. SQUAD has a few fonts you can use in their own asset bundle that the game ships with, but they never put a monospaced font into their bundle of fonts. If you want a monospaced font to appear anywhere in the game, you end up either having to buy professional (expensive) Unity, or you have to fake it by manually painting rectangular zones from a template bitmap file into coordinates of the window, which is what kOS does.\n\n3. The internal coordinate system of KSP is notoriously messy because it keeps changing depending on circumstance and the XYZ axes don\u0027t stay put in the same orientation throughout the life of your campaign savegame. It\u0027s fine if only modders have to deal with it, but if you want to expose users who write their own scripts to it, they\u0027ll complain that your mod is all broken and messed up when in fact that\u0027s what KSP\u0027s system \\*really does\\* look like. You\u0027ll need to deal with finding a way to mask some of the ugliness away. (kOS doesn\u0027t fully succeed at this but it helps a little bit by always making it look to the script as if the universe\u0027s origin is centered on the CPU\u0027s ship whether it is or not).\n\n4. Some parts of the KSP API make the assumption that you are only interested in working with the \u0022active vessel\u0022, which is the one the player is in control of. Once you introduce autopilots into the picture, they can be operating on other nearby vessels that aren\u0027t the \u0022active\u0022 one. We\u0027ve tried as hard as we can in kOS to make the rule be that everything you affect about the ship is affecting the ship the CPU part is attached to, which might NOT be the one the player is in control of.\n\nWell, there\u0027s others, but I\u0027ve let this post get too long.\n\nThe tl;dr version is this: There\u0027s a lot of code inside kOS that isn\u0027t dependent on the fact that the language is kerboscript. There may be an opportunity to do some useful sharing of work here.\n\nThe person to contact is erendrake. He handles most of the high-level archetecture stuff like organizing the code tree, and dealing with the integration of DLLs and so on. I get down into the nitty gritty of things like parsers and opcodes and telnet RFCs, and so on. I\u0027m more of a C\u002B\u002B/Java programmer used to UNIX and makefiles and so on. Erendrake is more into how C# does things and I only learned C# specifically FOR doing kOS, so the way that Microsoft designed all that to work feels entirely alien (and a times very wrong) to me.\n\nYou should \\*definitely\\* contact erendrake and discuss possibilities of shared work in some fashion or another. He\u0027s usually very much in favor of that sort of thing. One caveat, though, is that kOS is licensed under GPL3, and that legally requires that if its code is ever mixed together with other code into the same codebase, that the other code has to be GPL3 as well. The fact that it uses GPL3 quite \\*literally\\* cannot ever be changed by us because it contains code from an original author who fell off the face of the internet a while ago and we have no idea how to contact him. Without permission from him, it would be illegal to change the license under which he chose to release his code.\n\n**Edited \u003Ctime datetime=\u00222015-02-27T04:36:43Z\u0022 title=\u002202/27/2015 04:36  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 27, 2015\u003C/time\u003E by Steven Mading**"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2015-02-27T07:13:25Z","Content":"Both kOS devs here with the same message. We have wanted to have support for other languages in kos so if you want to join forces we would love to help you add this to kos. I want KOS to be a tool to help people learn to code and Javascript would be my first choice for an additional language. \n\nLike Steven said, if you don\u0027t want to join us we are happy for the competition \u00C3\u00A2\u00CB\u0153\u00C2\u00BA"},{"CreatedByName":"JoerT","CreatedById":106737,"CreatedDateTime":"2015-02-28T08:28:13Z","Content":"Hey Steven, erendrake,\n\nThanks for your prompt and insanely detailed reply. Judging by all that, I\u0027m starting to thing that this thing may be more involved than I\u0027d like it to be. Hooking JS into KOS sounds amazing tho.\n\nFor now, I\u0027m still experimenting with this thing and getting my feel for c# again. Got a few things that I\u0027d like to try out and play with. I\u0027ll get back to you on where we may go from here.\n\nCurrently a bit busy with things, but when I find a bit more time I\u0027ll post a more indepth reply to your post Steven. \n\nThanks for taking this so good by the way. I was a bit worried that my starting this project would not be appreciated by you guys."},{"CreatedByName":"CoffeeKills","CreatedById":155927,"CreatedDateTime":"2015-12-26T11:58:06Z","Content":"Did you get it working?"},{"CreatedByName":"Stone Blue","CreatedById":77721,"CreatedDateTime":"2015-12-26T15:23:33Z","Content":"Wow... I didnt even realize how old this thread was till I saw the difference in timestamps between CoffeeKills\u0027 post \u0026 JoerT\u0027s... lmao  \n\nTalk about necro... ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif \u0022:)\u0022)\n\n**Edited \u003Ctime datetime=\u00222015-12-26T15:23:51Z\u0022 title=\u002212/26/2015 03:23  PM\u0022 data-short=\u00228 yr\u0022\u003EDecember 26, 2015\u003C/time\u003E by Stone Blue**"},{"CreatedByName":"MK3424","CreatedById":19932,"CreatedDateTime":"2015-12-26T18:59:40Z","Content":"Okay, we now have kOS and Jebmascript.... what\u0027s next? Mua (Mun Lua)?"},{"CreatedByName":"CoffeeKills","CreatedById":155927,"CreatedDateTime":"2015-12-26T19:18:05Z","Content":"\u003E \n\u003E \n\u003E 3 hours ago, Stone Blue said:\n\u003E \n\u003E \n\u003E Wow... I didnt even realize how old this thread was till I saw the difference in timestamps between CoffeeKills\u0027 post \u0026 JoerT\u0027s... lmao  \n\u003E   \n\u003E \n\u003E Talk about necro... ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif \u0022:)\u0022)\n\u003E \n\nLol you here for sloppy seconds mate?\n\n**Edited \u003Ctime datetime=\u00222015-12-26T19:18:34Z\u0022 title=\u002212/26/2015 07:18  PM\u0022 data-short=\u00228 yr\u0022\u003EDecember 26, 2015\u003C/time\u003E by CoffeeKills**\n  \n."},{"CreatedByName":"Stone Blue","CreatedById":77721,"CreatedDateTime":"2015-12-26T19:25:02Z","Content":"Nahh... KerbScript... lol"},{"CreatedByName":"Nova1000","CreatedById":164199,"CreatedDateTime":"2018-02-12T23:12:56Z","Content":"Hi, is this api available for use?\n\n**Edited \u003Ctime datetime=\u00222018-02-12T23:13:08Z\u0022 title=\u002202/12/2018 11:13  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 12, 2018\u003C/time\u003E by Nova1000**"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-13T02:42:33Z","Content":"I don\u0027t know anything about compiling languages down into virtual opcodes, but I am working on a technique to control KSP plugins from the Unity editor, using memory mapped files. I was experiencing lag using kRPC, so I decided to try and build a faster solution.\n\nI detail as much as I can in the thread, would love to chat with someone about getting mMap files to work in .net 3.5.\n\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed8553835767\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/170110-wip-unity-controlled-robotic-plugins/\u0026tab=comments\u0026do=embed\u0026comment=3293230\u0026embedComment=3293230\u0026embedDo=findComment#comment-3293230\u0022 style=\u0022height:264px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedid=\u0022embed5069251546\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?app=core\u0026module=system\u0026controller=embed\u0026url=https://gfycat.com/BlaringAssuredCommongonolek\u0022 style=\u0022height:865px;\u0022\u003E\u003C/iframe\u003E\n\n**Edited \u003Ctime datetime=\u00222018-02-13T02:44:03Z\u0022 title=\u002202/13/2018 02:44  AM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 13, 2018\u003C/time\u003E by VR\\_Dev**"}]}