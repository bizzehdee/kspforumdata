{"TopicId":192471,"ForumId":36,"TopicTitle":"[Hardware] mbedIO - Ethernet Based KSP Controller hardware interface for EthernetIO - based on SerialIO","CreatedByName":"Wakestrap","CreatedById":203202,"CreatedDateTime":"2020-03-17T02:02:06Z","PageNum":1,"Articles":[{"CreatedByName":"Wakestrap","CreatedById":203202,"CreatedDateTime":"2020-03-17T02:02:06Z","Content":"\n\u003Cp\u003E\nHey,\n\u003C/p\u003E\n\u003Cp\u003E\nA few friends and I recently decided to design and build our own KSP Controllers. We were planning to build it based on \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/11842-zitronen/\u0026amp;do=hovercard\u0022 data-mentionid=\u002211842\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/11842-zitronen/\u0022 rel=\u0022\u0022\u003E@zitronen\u003C/a\u003E\u00A0SerialIO plugin and while checking out the SerialIO post, I discovered \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/202721-drmarcel/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022202721\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/202721-drmarcel/\u0022 rel=\u0022\u0022\u003E@DrMarcel\u003C/a\u003E\u00A0had written EthernetIO and his own companion App. EthernetIO offered a communication interface that would allow for as much separation between the PC running KSP and the controller as I wanted. The ability to set it up in my living room to play with my daughter while my PC is downstairs in my office (streaming to the living-room TV)\u00A0was really appealing. I\u0027m a hardware engineer with a fairly limited software background but I know just enough to be dangerous. I quickly settled on using a Nucleo STM32F746ZG development board for the embedded controller for two reasons. 1) I had one laying around and 2) they are cheap, easy to get and have a ton of IO. The mbed online IDE also allowed for really easy development. If you can use an Arduino, you can handle\u00A0mbed.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe current version of the firmware (v0.01) is very basic. Once powered on and connected to the network it will automatically start looking for the UDP messages being sent out by DrMarcel\u0027s EthernetIO plugin. Once found, it will connect to the KSP EthernetIO TCP server and begin exchanging messages. As I haven\u0027t started the physical controller build yet, the code just looks for the USER BUTTON on the Nucleo board. If you hold the button while in flight, \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E will turn off and \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E will turn on.\n\u003C/p\u003E\n\u003Cp\u003E\nOpening a console window (Serial Port available via the boards USB programming port, 9600 8N1) will show basic connection status followed by Apoapsis, Altitude, and Liquid Fuel remaining once in flight. It\u0027s just to show that the hardware is working.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOnce i get the controller designed and built and write some hardware interface libraries, I\u0027ll publish it all here.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you\u0027re familiar with the SerialIO Arduino code, then this will look very familiar, it\u0027s basically a straight port with some changes made for connection handling. There is still some of the original Arduino code commented out in places.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003E\u003Cstrong\u003ERequirements:\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nYou need EthernetIO Plugin installed see here:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022202721\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed9078103315\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/191502-ksp-181-kspethernetio-012-android-client-02-beta-ethernet-based-remote-control/\u0026amp;do=embed\u0022 style=\u0022height:211px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EYou\u0027ll need a Nucleo STM32F746ZG dev board\u003C/strong\u003E (~$35CDN\\$25USD)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.digikey.com/product-detail/en/stmicroelectronics/NUCLEO-F746ZG/497-16282-ND/5806779\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.digikey.com/product-detail/en/stmicroelectronics/NUCLEO-F746ZG/497-16282-ND/5806779\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAlso available from a ton of online electronics distributors\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EBinary file can be downloaded from here:\u00A0\u003C/strong\u003E\u003Ca href=\u0022https://drive.google.com/file/d/12JZAYZDFbZub-VGDeYezi0fjspw-ufea/view\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://drive.google.com/file/d/12JZAYZDFbZub-VGDeYezi0fjspw-ufea/view\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nProject source code can be found here:\u00A0\u003Ca href=\u0022https://os.mbed.com/users/wakestrap/code/KSPmbedIO/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://os.mbed.com/users/wakestrap/code/KSPmbedIO/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nTo program the board, you can drag and drop the BIN file to the drive labelled NODE_F746ZG that is created when you connect the dev board to your computer. The attached programmer will then program the primary MCU with the BIN file. For more advanced users, I suggest getting the STM32 ST-LINK Utility from ST Micro.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll provide examples, tutorials and better commenting once I get the hardware controller built.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCheers,\n\u003C/p\u003E\n\u003Cp\u003E\nWakestrap\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-03-17T02:20:28Z\u0022 title=\u002203/17/2020 02:20  AM\u0022 data-short=\u00224 yr\u0022\u003EMarch 17, 2020\u003C/time\u003E by Wakestrap\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DrMarcel","CreatedById":202721,"CreatedDateTime":"2020-04-23T12:15:15Z","Content":"\n\u003Cp\u003E\nCool project and I\u0027m impressed, how simple the TCP connecting is implemented on STM devices. I have seen much worse on other microcontrollers.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you get trouble with high lantency you could set the TCP_NODELAY option for the socket. As I\u0027ve seen there is a .set_option function for the socket class but I could\u0027t find further information how to call this.\u003Cbr\u003E\nI had problems without the flag because my network adapter started to bundle many small packets to bigger ones.\n\u003C/p\u003E\n"}]}