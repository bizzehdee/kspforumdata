{"TopicId":163151,"ForumId":29,"TopicTitle":"Category Help","CreatedByName":"Next_Star_Industries","CreatedById":178686,"CreatedDateTime":"2017-07-11T18:28:30Z","PageNum":1,"Articles":[{"CreatedByName":"Next_Star_Industries","CreatedById":178686,"CreatedDateTime":"2017-07-11T18:28:30Z","Content":"\n\u003Cp\u003E\nOk I\u0027m trying to create a custom category module with no success. Could someone please tell me what I\u0027m doing wrong here, as it seems to me it should be working but nothing is happening can\u0027t\u00A0even get the Debug.Log(\u0022\u0022)\u00A0to show anything in the log.\n\u003C/p\u003E\n\u003Cp\u003E\nusing KSP.IO;\u003Cbr\u003E\nusing RUI.Icons.Selectable;\u003Cbr\u003E\nusing UnityEngine;\u003Cbr\u003E\nusing static KSP.UI.Screens.PartCategorizer;\n\u003C/p\u003E\n\u003Cp\u003E\nnamespace NextStarIndustries\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0 \u00A0 [KSPAddon(KSPAddon.Startup.EditorAny, false)]\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 public class NSICategoryModule : MonoBehaviour\u003Cbr\u003E\n\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 public void Start()\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 GameEvents.onGUIEditorToolbarReady.Add(NSICategory);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022Category Started\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 private void NSICategory()\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Loading Textures\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D unselected = new Texture2D(32, 32);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D selected = new Texture2D(32, 32);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D nuclear = new Texture2D(32, 32);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D conventional = new Texture2D(32, 32);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D rd = new Texture2D(32, 32);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D probe = new Texture2D(32, 32);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D engine = new Texture2D(32, 32);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 unselected.LoadImage(File.ReadAllBytes\u0026lt;NSICategoryModule\u0026gt;(\u0022GameData/BDArmory Weapons Extension/textures/NSIIcon\u0022));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 selected.LoadImage(File.ReadAllBytes\u0026lt;NSICategoryModule\u0026gt;(\u0022GameData/BDArmory Weapons Extension/textures/NSIIconActive\u0022));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 nuclear.LoadImage(File.ReadAllBytes\u0026lt;NSICategoryModule\u0026gt;(\u0022GameData/BDArmory Weapons Extension/textures/NSIIconNW\u0022));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 conventional.LoadImage(File.ReadAllBytes\u0026lt;NSICategoryModule\u0026gt;(\u0022GameData/BDArmory Weapons Extension/textures/NSIIconCW\u0022));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 rd.LoadImage(File.ReadAllBytes\u0026lt;NSICategoryModule\u0026gt;(\u0022GameData/BDArmory Weapons Extension/textures/NSIIconRD\u0022));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 probe.LoadImage(File.ReadAllBytes\u0026lt;NSICategoryModule\u0026gt;(\u0022GameData/Squad/PartList/SimpleIcons/R\u0026amp;D_node_icon_advunmanned\u0022));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 engine.LoadImage(File.ReadAllBytes\u0026lt;NSICategoryModule\u0026gt;(\u0022GameData/Squad/PartList/SimpleIcons/R\u0026amp;D_node_icon_advancedmotors\u0022));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022Textures Loaded\u0022);\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIIcon = new Icon(\u0022NSI\u0022, selected, unselected); //Defining NSIIcon\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIIconNW = new Icon(\u0022Nuclear Weapons\u0022, nuclear, nuclear); //Defining NSIIconNW\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIIconCW = new Icon(\u0022Conventional Weapons\u0022, conventional, conventional); //Defining NSIIconCW\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIIconRD = new Icon(\u0022R\u0026amp;D Parts\u0022, rd, rd); //Defining NSIIconRD\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIIconProbe = new Icon(\u0022Probes\u0022, probe, probe); //Defining NSIIconProbes\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIIconEngine = new Icon(\u0022Engines\u0022, engine, engine); //Defining NSIIconEngines\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Category NSI = AddCustomFilter(\u0022Next Star Industries\u0022, \u0022NSI\u0022, NSIIcon, Color.white);\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //filters for All NSI Parts, Nuclear Weapons, Conventional Weapons, R\u0026amp;D, Probes, and Engines\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(NSI, \u0022All NSI Parts\u0022, \u0022All NSI Parts\u0022, NSIIcon, All =\u0026gt; All.manufacturer == \u0022Next Star Industries\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(NSI, \u0022Nuclear\u0022, \u0022Nuclear Weapons\u0022, NSIIconNW, NW =\u0026gt; NW.description.Contains(\u0022Nuclear\u0022) \u0026amp;\u0026amp; NW.manufacturer == \u0022Next Star Industries\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(NSI, \u0022Conventional\u0022, \u0022Conventional Weapons\u0022, NSIIconCW, CW =\u0026gt; CW.description.Contains(\u0022Conventional\u0022) \u0026amp;\u0026amp; CW.manufacturer == \u0022Next Star Industries\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(NSI, \u0022R\u0026amp;D\u0022, \u0022R\u0026amp;D Parts\u0022, NSIIconRD, RD =\u0026gt; RD.description.Contains(\u0022R\u0026amp;D\u0022) \u0026amp;\u0026amp; RD.manufacturer == \u0022Next Star Industries\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(NSI, \u0022Probes\u0022, \u0022NSI Probes\u0022, NSIIconProbe, Probe =\u0026gt; Probe.description.Contains(\u0022Probe\u0022) \u0026amp;\u0026amp; Probe.manufacturer == \u0022Next Star Industries\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(NSI, \u0022Engines\u0022, \u0022NSI Engines\u0022, NSIIconEngine, Engine =\u0026gt; Engine.description.Contains(\u0022Engine\u0022) \u0026amp;\u0026amp; Engine.manufacturer == \u0022Next Start Industries\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 }\u003Cbr\u003E\n}\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2017-07-12T06:16:07Z","Content":"\n\u003Cp\u003E\nI use awake for Filter Extensions instead of Start, and I do recall having to change sometime in the recent past\n\u003C/p\u003E\n"},{"CreatedByName":"Next_Star_Industries","CreatedById":178686,"CreatedDateTime":"2017-07-12T15:06:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223118429\u0022 data-ipsquote-contentid=\u0022163151\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221499840167\u0022 data-ipsquote-userid=\u002292871\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Crzyrndm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI use awake for Filter Extensions instead of Start, and I do recall having to change sometime in the recent past\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks I have switched to Awake() \u00A0and have now changed all this code. I have it making the main filter now but when I try to add the subcategories it keeps crashing it out not sure what I have wrong. This what I have now and when I add the addcustomsubcategory() it crashes it. Game still loads but no custom category listed:\n\u003C/p\u003E\n\u003Cp\u003E\nusing static KSP.UI.Screens.PartCategorizer;\u003Cbr\u003E\nusing UnityEngine;\u003Cbr\u003E\nusing RUI.Icons.Selectable;\u003Cbr\u003E\nusing System.Collections.Generic;\n\u003C/p\u003E\n\u003Cp\u003E\nnamespace NextStarIndustries\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0 \u00A0 [KSPAddon(KSPAddon.Startup.MainMenu, true)]\u003Cbr\u003E\n\u00A0 \u00A0 public class NISCategoryModule : MonoBehaviour\u003Cbr\u003E\n\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 private static readonly List\u0026lt;AvailablePart\u0026gt; availableParts = new List\u0026lt;AvailablePart\u0026gt;();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 void Awake()\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 GameEvents.onGUIEditorToolbarReady.Add(NSICategory);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI Category is Awake\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 void NSICategory()\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI Category Added\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Icon Textures\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconN = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIcon\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconS = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconActive\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconNW = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconNW\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconCW = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconCW\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconRD = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconRD\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconProbes = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconActive\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconEngines = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconActive\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Icon Main Category\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSI = new Icon(\u0022NSI\u0022, NSIIconN, NSIIconS, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Icons SubCategories\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSINuclear = new Icon(\u0022Nuclear Weapons\u0022, NSIIconNW, NSIIconNW, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIConventional = new Icon(\u0022Conventional Weapons\u0022, NSIIconCW, NSIIconCW, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIRD = new Icon(\u0022R\u0026amp;D Parts\u0022, NSIIconRD, NSIIconRD, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIProbe = new Icon(\u0022Probes\u0022, NSIIconProbes, NSIIconProbes, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIEngine = new Icon(\u0022Engines\u0022, NSIIconEngines, NSIIconEngines, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Main Category\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Category filter = AddCustomFilter(\u0022NSI\u0022, \u0022Next Star Industries\u0022, NSI, Color.red);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Sub Categories\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(filter, \u0022NSI\u0022, \u0022Next Star Industries\u0022, NSI, p =\u0026gt; p.author.Contains(\u0022Next Star Industries\u0022));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 }\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nI believe it has to be the lambda expression but not sure.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-12T15:12:06Z\u0022 title=\u002207/12/2017 03:12  PM\u0022 data-short=\u00226 yr\u0022\u003EJuly 12, 2017\u003C/time\u003E by Next_Star_Industries\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Benjamin Kerman","CreatedById":172792,"CreatedDateTime":"2017-07-12T15:19:42Z","Content":"\n\u003Cp\u003E\nI think for getTexture, you need the complete file path from the hard drive, and not\u00A0from the local GameData folder.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Next_Star_Industries","CreatedById":178686,"CreatedDateTime":"2017-07-12T15:25:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223118716\u0022 data-ipsquote-contentid=\u0022163151\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221499872782\u0022 data-ipsquote-userid=\u0022172792\u0022 data-ipsquote-username=\u0022Benjamin Kerman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Benjamin Kerman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI think for getTexture, you need the complete file path from the hard drive, and not\u00A0from the local GameData folder.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI have tried both ways and they both work. The textures are being found,\u00A0and they load, and I can get it to add the main filter, I just can\u0027t get the subcategories working.\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2017-07-12T19:37:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223118703\u0022 data-ipsquote-contentid=\u0022163151\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221499871967\u0022 data-ipsquote-userid=\u0022178686\u0022 data-ipsquote-username=\u0022Next_Star_Industries\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Next_Star_Industries said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI believe it has to be the lambda expression but not sure.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nLambda is just a function (albeit an unnamed/anonymous one). \u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/SubCategoryInstance.cs#L52\u0022 rel=\u0022external nofollow\u0022\u003EFE uses the same method\u003C/a\u003E to express its callback (I do wonder why you\u0027re using string.Contains instead of Equals? But that\u0027s a nitpick...)\n\u003C/p\u003E\n\u003Cp\u003E\nI would suggest printing each of the parameters to the log (check they\u0027re not null, etc.).\u003Cbr\u003E\nWhat error is being reported in the log file? What does the stack trace point at?\u003Cbr\u003E\nDoes it work if you change the function to a coroutine and delay 10 frames before initialising?\n\u003C/p\u003E\n\u003Cp\u003E\nFE call path for completeness:\u003Cbr\u003E\u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/Editor.cs#L32\u0022 rel=\u0022external nofollow\u0022\u003EEditorInit()\u003C/a\u003E called by callback registered in awake calls initialise on \u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/Editor.cs#L41\u0022 rel=\u0022external nofollow\u0022\u003Ecategories\u003C/a\u003E\u003Cbr\u003E\u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/CategoryInstance.cs#L56-L63\u0022 rel=\u0022external nofollow\u0022\u003ECategory\u003C/a\u003E setup adds the CustomFilter and then passes the returned instance to Init Subcategories on\u003Cbr\u003E\u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/SubCategoryInstance.cs#L45\u0022 rel=\u0022external nofollow\u0022\u003ESubcategory\u003C/a\u003E initialise just registers the filter against the category\n\u003C/p\u003E\n\u003Cp\u003E\nThe only major difference I can see is that I call all this through a \u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/Editor.cs#L24\u0022 rel=\u0022external nofollow\u0022\u003Ecoroutine\u003C/a\u003E so it might be\u00A0delayed from the original callback\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-12T19:38:10Z\u0022 title=\u002207/12/2017 07:38  PM\u0022 data-short=\u00226 yr\u0022\u003EJuly 12, 2017\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Next_Star_Industries","CreatedById":178686,"CreatedDateTime":"2017-07-12T20:20:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223118981\u0022 data-ipsquote-contentid=\u0022163151\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221499888261\u0022 data-ipsquote-userid=\u002292871\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n30 minutes ago, Crzyrndm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nLambda is just a function (albeit an unnamed/anonymous one). \u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/SubCategoryInstance.cs#L52\u0022 rel=\u0022external nofollow\u0022\u003EFE uses the same method\u003C/a\u003E to express its callback (I do wonder why you\u0027re using string.Contains instead of Equals? But that\u0027s a nitpick...)\n\u003C/p\u003E\n\u003Cp\u003E\nI would suggest printing each of the parameters to the log (check they\u0027re not null, etc.).\u003Cbr\u003E\nWhat error is being reported in the log file? What does the stack trace point at?\u003Cbr\u003E\nDoes it work if you change the function to a coroutine and delay 10 frames before initialising?\n\u003C/p\u003E\n\u003Cp\u003E\nFE call path for completeness:\u003Cbr\u003E\u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/Editor.cs#L32\u0022 rel=\u0022external nofollow\u0022\u003EEditorInit()\u003C/a\u003E called by callback registered in awake calls initialise on \u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/Editor.cs#L41\u0022 rel=\u0022external nofollow\u0022\u003Ecategories\u003C/a\u003E\u003Cbr\u003E\u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/CategoryInstance.cs#L56-L63\u0022 rel=\u0022external nofollow\u0022\u003ECategory\u003C/a\u003E setup adds the CustomFilter and then passes the returned instance to Init Subcategories on\u003Cbr\u003E\u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/SubCategoryInstance.cs#L45\u0022 rel=\u0022external nofollow\u0022\u003ESubcategory\u003C/a\u003E initialise just registers the filter against the category\n\u003C/p\u003E\n\u003Cp\u003E\nThe only major difference I can see is that I call all this through a \u003Ca href=\u0022https://github.com/Crzyrndm/FilterExtension/blob/master/FilterExtension/Editor.cs#L24\u0022 rel=\u0022external nofollow\u0022\u003Ecoroutine\u003C/a\u003E so it might be\u00A0delayed from the original callback\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks for the help. The only reason for Contains is I was trying different things out but I do agree it should be Equals. Trying the coroutine I\u0027ll see what happens there.\n\u003C/p\u003E\n"},{"CreatedByName":"Next_Star_Industries","CreatedById":178686,"CreatedDateTime":"2017-07-12T21:41:26Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92871-crzyrndm/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292871\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92871-crzyrndm/\u0022 rel=\u0022\u0022\u003E@Crzyrndm\u003C/a\u003E\u00A0So after discovering what FE is and what it does \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0and after I woke up from bashing my head \u003Cimg alt=\u0022:confused:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 title=\u0022:confused:\u0022\u003E\u00A0against the desk for not finding it earlier. Everything is doing what I\u0027m wanting it to do. Thanks for the help with the coding though, but it\u0027s out \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022:wink:\u0022\u003E. I\u0027ll send the stuff to see about getting my mod added.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-12T21:43:31Z\u0022 title=\u002207/12/2017 09:43  PM\u0022 data-short=\u00226 yr\u0022\u003EJuly 12, 2017\u003C/time\u003E by Next_Star_Industries\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Next_Star_Industries","CreatedById":178686,"CreatedDateTime":"2017-07-16T18:51:07Z","Content":"\n\u003Cp\u003E\nWell FE doesn\u0027t do what I was expecting after all, but I was able to fix the code here is what I came up with. It uses the author field as a tagging system. Feel free to copy and paste the code to create your own categories while it\u0027s licence is for CC BY-SA 4.0 I give everyone permission to do what ever you want with it.\n\u003C/p\u003E\n\u003Cp\u003E\nusing RUI.Icons.Selectable;\u003Cbr\u003E\nusing System.Collections.Generic;\u003Cbr\u003E\nusing static KSP.UI.Screens.PartCategorizer;\u003Cbr\u003E\nusing UnityEngine;\n\u003C/p\u003E\n\u003Cp\u003E\nnamespace NextStarIndustries\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0 \u00A0 [KSPAddon(KSPAddon.Startup.MainMenu, true)]\u003Cbr\u003E\n\u00A0 \u00A0 public class NISCategoryModule : MonoBehaviour\u003Cbr\u003E\n\u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 readonly List\u0026lt;AvailablePart\u0026gt; availableParts = new List\u0026lt;AvailablePart\u0026gt;();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 readonly List\u0026lt;AvailablePart\u0026gt; nwParts = new List\u0026lt;AvailablePart\u0026gt;();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 readonly List\u0026lt;AvailablePart\u0026gt; cwParts = new List\u0026lt;AvailablePart\u0026gt;();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 readonly List\u0026lt;AvailablePart\u0026gt; rdParts = new List\u0026lt;AvailablePart\u0026gt;();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 readonly List\u0026lt;AvailablePart\u0026gt; probeParts = new List\u0026lt;AvailablePart\u0026gt;();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 readonly List\u0026lt;AvailablePart\u0026gt; engineParts = new List\u0026lt;AvailablePart\u0026gt;();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 void Awake()\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 availableParts.Clear();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var countap = PartLoader.LoadedPartsList.Count;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 for (int a = 0; a \u0026lt; countap; \u002B\u002Ba)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var avPart = PartLoader.LoadedPartsList[a];\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (!avPart.partPrefab) continue;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (avPart.author.Contains(\u0022NSI\u0022))\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 availableParts.Add(avPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 nwParts.Clear();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var countnp = PartLoader.LoadedPartsList.Count;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 for (int n = 0; n \u0026lt; countnp; \u002B\u002Bn)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var nPart = PartLoader.LoadedPartsList[n];\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (!nPart.partPrefab) continue;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (nPart.author.Contains(\u0022NSINuclear\u0022))\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 nwParts.Add(nPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 cwParts.Clear();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var countcp = PartLoader.LoadedPartsList.Count;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 for (int c = 0; c \u0026lt; countcp; \u002B\u002Bc)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var cPart = PartLoader.LoadedPartsList[c];\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (!cPart.partPrefab) continue;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (cPart.author.Contains(\u0022NSIConventional\u0022))\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 cwParts.Add(cPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 rdParts.Clear();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var countrdp = PartLoader.LoadedPartsList.Count;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 for (int r = 0; r \u0026lt; countcp; \u002B\u002Br)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var rdPart = PartLoader.LoadedPartsList[r];\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (!rdPart.partPrefab) continue;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (rdPart.author.Contains(\u0022NSIRD\u0022))\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 rdParts.Add(rdPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 probeParts.Clear();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var countpp = PartLoader.LoadedPartsList.Count;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 for (int p = 0; p \u0026lt; countcp; \u002B\u002Bp)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var prPart = PartLoader.LoadedPartsList[p];\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (!prPart.partPrefab) continue;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (prPart.author.Contains(\u0022NSIProbes\u0022))\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 probeParts.Add(prPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 engineParts.Clear();\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var countep = PartLoader.LoadedPartsList.Count;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 for (int e = 0; e \u0026lt; countcp; \u002B\u002Be)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 var ePart = PartLoader.LoadedPartsList[e];\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (!ePart.partPrefab) continue;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (ePart.author.Contains(\u0022NSIEngines\u0022))\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 engineParts.Add(ePart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 GameEvents.onGUIEditorToolbarReady.Add(NSICategory);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI Category is Awake\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI aPart Count: \u0022 \u002B availableParts.Count);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI nPart Count: \u0022 \u002B nwParts.Count);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI cPart Count: \u0022 \u002B cwParts.Count);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI rdPart Count: \u0022 \u002B rdParts.Count);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI pPart Count: \u0022 \u002B probeParts.Count);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI ePart Count: \u0022 \u002B engineParts.Count);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 bool ap(AvailablePart avPart)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return availableParts.Contains(avPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 bool np(AvailablePart nPart)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return nwParts.Contains(nPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 bool cp(AvailablePart cPart)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return cwParts.Contains(cPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 bool rdp(AvailablePart rdPart)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return rdParts.Contains(rdPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 bool pp(AvailablePart prPart)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return probeParts.Contains(prPart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 bool ep(AvailablePart ePart)\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return engineParts.Contains(ePart);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 void NSICategory()\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 {\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Debug.Log(\u0022NSI Category Added\u0022);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Icon Textures\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconN = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIcon\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconS = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconActive\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconNW = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconNW\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconCW = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconCW\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconRD = GameDatabase.Instance.GetTexture(\u0022BDArmory Weapons Extension/textures/NSIIconRD\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconProbes = GameDatabase.Instance.GetTexture(\u0022Squad/PartList/SimpleIcons/R\u0026amp;D_node_icon_largeprobes\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Texture2D NSIIconEngines = GameDatabase.Instance.GetTexture(\u0022Squad/PartList/SimpleIcons/R\u0026amp;D_node_icon_advancedmotors\u0022, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Icon Main Category\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSI = new Icon(\u0022NSI\u0022, NSIIconN, NSIIconS, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Icons SubCategories\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSINuclear = new Icon(\u0022Nuclear Weapons\u0022, NSIIconNW, NSIIconNW, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIConventional = new Icon(\u0022Conventional Weapons\u0022, NSIIconCW, NSIIconCW, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIRD = new Icon(\u0022R\u0026amp;D Parts\u0022, NSIIconRD, NSIIconRD, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIProbe = new Icon(\u0022Probes\u0022, NSIIconProbes, NSIIconProbes, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Icon NSIEngine = new Icon(\u0022Engines\u0022, NSIIconEngines, NSIIconEngines, false);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Main Category\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 Category filter = AddCustomFilter(\u0022NSI\u0022, \u0022Next Star Industries\u0022, NSI, Color.red);\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //Sub Categories\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(filter, \u0022NSI\u0022, \u0022Next Star Industries\u0022, NSI, p =\u0026gt; ap(p));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(filter, \u0022Nuclear\u0022, \u0022Nuclear Weapons\u0022, NSINuclear, nwp =\u0026gt; np(nwp));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(filter, \u0022Conventional\u0022, \u0022Conventional Weapons\u0022, NSIConventional, cwp =\u0026gt; cp(cwp));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(filter, \u0022R\u0026amp;D\u0022, \u0022Research and Development\u0022, NSIRD, radp =\u0026gt; rdp(radp));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(filter, \u0022NSIProbes\u0022, \u0022NSI Probe Cores\u0022, NSIProbe, prp =\u0026gt; pp(prp));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 AddCustomSubcategoryFilter(filter, \u0022NSIEngines\u0022, \u0022NSI Engines\u0022, NSIEngine, enp =\u0026gt; ep(enp));\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003Cbr\u003E\n\u00A0 \u00A0 }\u003Cbr\u003E\n}\n\u003C/p\u003E\n"},{"CreatedByName":"DoctorDavinci","CreatedById":150019,"CreatedDateTime":"2017-08-29T23:06:15Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/178686-next_star_industries/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022178686\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/178686-next_star_industries/\u0022 rel=\u0022\u0022\u003E@Next_Star_Industries\u003C/a\u003E - Here you go, in the spoiler ... This code comes out of USITools and is Licensed under GPLv3 (edited to work for your mod)\n\u003C/p\u003E\n\u003Cp\u003E\nYou will need to create icons that are 32x32 and save them in the same directory as the plugin ... One called NextStarIndustries_normal.png and the other NextStarIndustries_selected.png\n\u003C/p\u003E\n\u003Cp\u003E\nAs long as the part config has \u0027manufacturer = Next Star Industries\u0027 this code will work ... or you can change it, pretty straight forward how the code works\n\u003C/p\u003E\n\u003Cp\u003E\nAnyways, enjoy \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nusing KSP.UI.Screens;\u003Cbr\u003E\nusing RUI.Icons.Selectable;\u003Cbr\u003E\nusing System.Collections.Generic;\u003Cbr\u003E\nusing System.IO;\u003Cbr\u003E\nusing System.Reflection;\u003Cbr\u003E\nusing UnityEngine;\n\u003C/p\u003E\n\u003Cp\u003E\nnamespace NextStarIndustries\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0\u00A0 [KSPAddon(KSPAddon.Startup.MainMenu, true)]\u003Cbr\u003E\n\u00A0\u00A0\u00A0 public class NSIFilter : BaseFilter\u003Cbr\u003E\n\u00A0\u00A0\u00A0 {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 protected override string Manufacturer\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 get { return \u0022Next Star Industries\u0022; }\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 set { }\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 protected override string categoryTitle\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 get { return \u0022NSI\u0022; }\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 set { }\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n\u00A0\u00A0\u00A0 public abstract class BaseFilter : MonoBehaviour\u003Cbr\u003E\n\u00A0\u00A0\u00A0 {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 private readonly List\u0026lt;AvailablePart\u0026gt; parts = new List\u0026lt;AvailablePart\u0026gt;();\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 internal string category = \u0022Filter by function\u0022;\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 internal bool filter = true;\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 protected abstract string Manufacturer { get; set; }\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 protected abstract string categoryTitle { get; set; }\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 void Awake()\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 parts.Clear();\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var count = PartLoader.LoadedPartsList.Count;\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 for(int i = 0; i \u0026lt; count; \u002B\u002Bi)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var avPart = PartLoader.LoadedPartsList\u003Cem\u003E;\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 if (!avPart.partPrefab) continue;\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 if (avPart.manufacturer == Manufacturer)\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 {\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 parts.Add(avPart);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 } \u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 print(categoryTitle \u002B \u0022\u00A0 Filter Count: \u0022 \u002B parts.Count);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 if (parts.Count \u0026gt; 0)\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 GameEvents.onGUIEditorToolbarReady.Add(SubCategories);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 } \u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 private bool EditorItemsFilter(AvailablePart avPart)\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 {\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 return parts.Contains(avPart);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 } \u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 private void SubCategories()\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 {\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var icon = GenIcon(categoryTitle);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var filter = PartCategorizer.Instance.filters.Find(f =\u0026gt; f.button.categoryName == category);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 PartCategorizer.AddCustomSubcategoryFilter(filter, categoryTitle, categoryTitle, icon, EditorItemsFilter);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 } \u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 private Icon GenIcon(string iconName)\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 {\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var normIcon = new Texture2D(64, 64, TextureFormat.RGBA32, false);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var normIconFile = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), iconName \u002B \u0022_normal.png\u0022);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 normIcon.LoadImage(File.ReadAllBytes(normIconFile)); \u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var selIcon = new Texture2D(64, 64, TextureFormat.RGBA32, false);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var selIconFile = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), iconName \u002B \u0022_selected.png\u0022);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 selIcon.LoadImage(File.ReadAllBytes(selIconFile)); \u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 print(\u0022*****Adding icon for \u0022 \u002B categoryTitle);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 var icon = new Icon(iconName \u002B \u0022Icon\u0022, normIcon, selIcon);\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 return icon;\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u00A0\u00A0\u00A0 } \u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E} \u003C/em\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u00A0 \u003C/em\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-29T23:06:44Z\u0022 title=\u002208/29/2017 11:06  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 29, 2017\u003C/time\u003E by DoctorDavinci\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Next_Star_Industries","CreatedById":178686,"CreatedDateTime":"2017-08-30T14:29:37Z","Content":"\n\u003Cp\u003E\n\u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022150019\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0022 rel=\u0022\u0022\u003E@DoctorDavinci\u003C/a\u003E\u00A0\u003Cstrong\u003EThank you so much, this will be awesome!!\u003C/strong\u003E\u003C/span\u003E\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003Cspan\u003E I will implement\u00A0this into the mod for sure, if they would ever let me out of this dang hospital so I can get back to working on things.\u003C/span\u003E\u003Cimg alt=\u0022:/\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon1.png\u0022 title=\u0022:/\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"DoctorDavinci","CreatedById":150019,"CreatedDateTime":"2017-08-30T16:58:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223160756\u0022 data-ipsquote-contentid=\u0022163151\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504103377\u0022 data-ipsquote-userid=\u0022178686\u0022 data-ipsquote-username=\u0022Next_Star_Industries\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Next_Star_Industries said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022150019\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0022 rel=\u0022\u0022\u003E@DoctorDavinci\u003C/a\u003E\u00A0\u003Cstrong\u003EThank you so much, this will be awesome!!\u003C/strong\u003E\u003C/span\u003E\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003Cspan\u003E I will implement\u00A0this into the mod for sure, if they would ever let me out of this dang hospital so I can get back to working on things.\u003C/span\u003E\u003Cimg alt=\u0022:/\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon1.png\u0022 title=\u0022:/\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot a problem ... Lets hope they set you loose without taking a kidney\u00A0\u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nOn another note, I should have mentioned the license obligations you will have if you use that code\n\u003C/p\u003E\n\u003Cp\u003E\nYou are required to mention in the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E of your thread and the download location that your mod contains code from USITools ... put it in a spoiler at the end of your thread op (use DCK\u0027s \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E as an example if you want) and put it into your README.md on Github\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"flywlyx","CreatedById":64436,"CreatedDateTime":"2017-08-30T16:59:32Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022150019\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0022 rel=\u0022\u0022\u003E@DoctorDavinci\u003C/a\u003E\u00A0Everyday opening help and support subforum is like opening a treasure box, thanks for the awesome code.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: So, does it compile with CC licences or I need to transfer to GPL too?\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-30T17:05:54Z\u0022 title=\u002208/30/2017 05:05  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 30, 2017\u003C/time\u003E by flywlyx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DoctorDavinci","CreatedById":150019,"CreatedDateTime":"2017-08-30T17:18:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223160848\u0022 data-ipsquote-contentid=\u0022163151\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504112372\u0022 data-ipsquote-userid=\u002264436\u0022 data-ipsquote-username=\u0022flywlyx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 minutes ago, flywlyx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022150019\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0022 rel=\u0022\u0022\u003E@DoctorDavinci\u003C/a\u003E\u00A0Everyday opening help and support subforum is like opening a treasure box, thanks for the awesome code.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: So, does it compile with CC licences or I need to transfer to GPL too?\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFrom what I understand you will need to upgrade your license to GPLv3 for that portion of the code\n\u003C/p\u003E\n\u003Cp\u003E\nTake a look at the spoilers at the the bottom of the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E in DCK\u0027s thread for an example ... feel free to copy the applicable parts\n\u003C/p\u003E\n\u003Ciframe data-embedcontent=\u0022\u0022 frameborder=\u00220\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/159310-13x-dck-v021-transparent-aircraft-armor-stealth-part-camo-and-other-goodies-for-ksp-stock-bdac-bdmk22-sm_afvs08272017/\u0026amp;do=embed\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\nThere are others who know better than I and they may know more about the ins and outs\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-30T17:20:34Z\u0022 title=\u002208/30/2017 05:20  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 30, 2017\u003C/time\u003E by DoctorDavinci\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TheRagingIrishman","CreatedById":165004,"CreatedDateTime":"2017-08-30T18:02:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223160848\u0022 data-ipsquote-contentid=\u0022163151\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504112372\u0022 data-ipsquote-userid=\u002264436\u0022 data-ipsquote-username=\u0022flywlyx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, flywlyx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022150019\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/150019-doctordavinci/\u0022 rel=\u0022\u0022\u003E@DoctorDavinci\u003C/a\u003E\u00A0Everyday opening help and support subforum is like opening a treasure box, thanks for the awesome code.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: So, does it compile with CC licences or I need to transfer to GPL too?\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThey are not compatible but you are able to say \u0022The whole mod is CC except for this little section which is GPL\u0022\n\u003C/p\u003E\n"},{"CreatedByName":"DoctorDavinci","CreatedById":150019,"CreatedDateTime":"2017-08-30T20:01:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223160912\u0022 data-ipsquote-contentid=\u0022163151\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504116151\u0022 data-ipsquote-userid=\u0022165004\u0022 data-ipsquote-username=\u0022TheRagingIrishman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, TheRagingIrishman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThey are not compatible but you are able to say \u0022The whole mod is CC except for this little section which is GPL\u0022\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHonestly I do not know\n\u003C/p\u003E\n\u003Cp\u003E\nI changed DCK from MIT to GPLv3\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-30T20:02:22Z\u0022 title=\u002208/30/2017 08:02  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 30, 2017\u003C/time\u003E by DoctorDavinci\u003C/strong\u003E\n\u003C/span\u003E\n"}]}