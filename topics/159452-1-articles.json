{"TopicId":159452,"ForumId":36,"TopicTitle":"Let\u0026#039;s talk about part/modules upgrades","CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2017-04-19T20:22:06Z","PageNum":1,"Articles":[{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2017-04-19T20:22:06Z","Content":"\n\u003Cp\u003E\nHi all.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve released the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/158081-122-upgradesgui-v15-upgrades-info-and-selection-in-vabsph-part-tooltips/\u0022 rel=\u0022\u0022\u003EUpgradesGUI\u003C/a\u003E plugin, whose function is to complete the part/module upgrades feature introduced in KSP 1.2. Currently it has two main features :\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nProvide a better integration of upgrade in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E/\u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E part tooltips by showing upgraded part/module stats, something that is really lacking in stock, and very confusing to players.\n\u003C/li\u003E\n\u003Cli\u003E\nProvide a GUI interface to allow the player to select which upgrades should be activated. I\u0027ve done this by hacking the tooltips to make widgets clickable. This allow for a nice stock-integrated GUI.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nOf course I encourage mod authors to use upgrades in their parts and to recommend or even bundle my plugin. But maybe we could go further and overcome the current upgrade implementation limitations :\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EUpgrades can\u0027t reliably \u0026amp; easily be used to enable/disable modules \u003C/strong\u003E:\n\u003C/p\u003E\n\u003Cp\u003E\nBeing able to set the enabled / isEnabled properties in modules instances would allow upgrades to effectively add/remove modules. This has been requested a few times (by \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/175082-mysterysloth/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022175082\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/175082-mysterysloth/\u0022 rel=\u0022\u0022\u003E@MysterySloth\u003C/a\u003E, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/81294-sebizzr/\u0026amp;do=hovercard\u0022 data-mentionid=\u002281294\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/81294-sebizzr/\u0022 rel=\u0022\u0022\u003E@sebi.zzr\u003C/a\u003E, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/133496-skalou/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022133496\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/133496-skalou/\u0022 rel=\u0022\u0022\u003E@Skalou\u003C/a\u003E). Combined with the upgrade selection feature in my plugin, this would provide in practice a \u0022module switching\u0022 feature to KSP, something that no common switcher plugin (IFS, B9, Firespitter...) currently allow. I know that Kerbalism by \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/159391-shotgunninja/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022159391\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/159391-shotgunninja/\u0022 rel=\u0022\u0022\u003E@ShotgunNinja\u003C/a\u003E does it, maybe also SSTU by \u003Cspan\u003E\u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/138730-shadowmage/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022138730\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/138730-shadowmage/\u0022 rel=\u0022\u0022\u003E@Shadowmage\u003C/a\u003E\u003C/span\u003E\u003C/span\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nTherefore I propose a \u0022ModuleEnabler\u0022 partmodule that would allow this in a simple way :\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EMODULE\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  name \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EModuleEnabler\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  targetType \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EModuleResourceConverter\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// module to control\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  targetEnable \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// is this module enabled initialy\t \u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  showWidget \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// in the tooltip modules list, is the widget visible\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  showInfoInUpgrade \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// in the tooltip upgrades list, do the upgrade widget show the whole module info (or just the name)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Optional fields used to be sure the right module is targeted if multiple modules of the same type exist in the part :\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  targetIdField \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EConverterName\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// targeted module field name\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  targetIdValue \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003E\u003Cabbr title=\u0022Liquid Fuel\u0022\u003ELf\u003C/abbr\u003E\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan\u003EOx\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// targeted module field value\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n  UPGRADES\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    UPGRADE\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      name__ \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ISRU_Upgrade\n      description__ \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EAdd\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E an \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E\n      targetEnable \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// enable the \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E module\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      showWidget \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// show the \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E module in the part tooltip module list\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      showInfoInUpgrade \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// only show \u0022ModuleResourceConverter\u0022 in the part tooltip upgrade list (to unclutter it)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EUpgrades can\u0027t be used to change/switch RESOURCE{} nodes\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis could be done in a special \u0022ModuleUpgradeableResources\u0022 partmodule. Note that the stock behaviour with nested ConfigNodes is to delete all the nodes of the type used in the UPGRADE (here \u0022RESOURCE\u0022 nodes) in the module, and replace them with those defined in the UPGRADE node. Combined with the selection GUI, this allow for resource switching.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EMODULE\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  name \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EModuleUpgradeableResources\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Resource added by the module when no upgrade is applied\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  RESOURCE\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    name \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EElectricCharge\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    amount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    maxAmount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n  UPGRADES\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    UPGRADE\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      name__ \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMonoprop_tank\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EExclusiveWith__\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E resource \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// mandatory so only one resource set is enabled at a time\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      description__ \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EAdd\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E a monopropellant fuel tank\n      \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// replace the resources added to the part by the module with these ones\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      RESOURCE\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        name \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EElectricCharge\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        amount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        maxAmount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      RESOURCE\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        name \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMonoPropellant\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        amount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E40\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        maxAmount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E40\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    UPGRADE\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      name__ \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EXenon_tank\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EExclusiveWith__\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E resource \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// mandatory so only one resource set is enabled at a time\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      description__ \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EConvert\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E the whole part to a xenon tank\n      \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// replace the resources added to the part by the module with these ones\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      RESOURCE\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        name \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E xenonGaz\n        amount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E40\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        maxAmount \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E40\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAlso note that I\u0027m planning to give a way for players to open the upgrades selection GUI (the whole part tooltip) for already placed parts in the editor. Still not 100 % sure I can manage this, so no promise.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat do you guys think of all this ?\n\u003C/p\u003E\n\u003Cp\u003E\nWould those modules be useful for anybody ?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-19T22:17:25Z\u0022 title=\u002204/19/2017 10:17  PM\u0022 data-short=\u00227 yr\u0022\u003EApril 19, 2017\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-04-19T20:46:42Z","Content":"\n\u003Cp\u003E\nOne major problem that you are going to run into is that the \u0027moduleIsEnabled\u0027 flag only works on a handful of stock PartModules.\u00A0 Notably it does not work with ModuleEngines*, and several other \u0027common\u0027 part-modules.\n\u003C/p\u003E\n\u003Cp\u003E\nSecond, even on the modules that do support \u0027moduleIsEnabled\u0027, they often will do initialization even when disabled.\u00A0 This can cause problems if, for example, the model transforms that they rely upon are not (yet) present in the part (e.g. from mesh-switching); the module will attempt to initailize, and then null-ref partway through.\n\u003C/p\u003E\n\u003Cp\u003E\nI would say that before you could make much meaningful progress on -this- mod/question, those two problems need to be fully fixed in stock.\u00A0 -All- partmodules need to support the \u0027moduleIsEnabled\u0027 flag, and they need to only initialize when the \u0027enabled\u0027 flag is actually enabled (which means they will need a way to re-initialize when the user toggles that flag in the editor/etc).\n\u003C/p\u003E\n"},{"CreatedByName":"ShotgunNinja","CreatedById":159391,"CreatedDateTime":"2017-04-19T21:13:50Z","Content":"\n\u003Cp\u003E\nWhat I know:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nPartModule.isEnabled is the KSP PartModule flag indicating if the module fields should be added to the part UI\n\u003C/li\u003E\n\u003Cli\u003E\nPartModule.enabled\u00A0is the MonoBehaviour flag indicating if the update()/fixedUpdate()/onGui()\u00A0functions should be called - it isn\u0027t serialized, so you have to set it to false after load\n\u003C/li\u003E\n\u003Cli\u003E\nMost modules only do work inside update()/fixedUpdate()/onGui() and don\u0027t manipulate animations or rendering objects, so they\u00A0stop doing whatever they usually do\n\u003C/li\u003E\n\u003Cli\u003E\nFor the others, you need special hacking. These are the ones I\u0027m aware of:\n\u003Cul\u003E\u003Cli\u003E\nModuleEngines*: just call the Shutdown() method when disabling it\n\u003C/li\u003E\n\u003Cli\u003E\nModuleDeployable*: stop all animations on the part\n\u003C/li\u003E\n\u003Cli\u003E\nModuleLight: if animation-driven\u00A0reset it\u00A0to frame 0, else set enabled=false in all Light objects.\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2017-04-19T21:30:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223027170\u0022 data-ipsquote-contentid=\u0022159452\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221492634802\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOne major problem that you are going to run into is that the \u0027moduleIsEnabled\u0027 flag only works on a handful of stock PartModules.\u00A0 Notably it does not work with ModuleEngines*, and several other \u0027common\u0027 part-modules.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI need to verify, but seems to me that setting the \u0022enabled\u0022 MonoBehaviour property to false lead to Update/FixedUpdate/OnGui not being called. Isn\u0027t that enough to prevent all interactions ? Then the only thing that would need to be dealt with are KSPField, KSPEvent and KSPAction, to toggle their UI visibility (but I was under the impression that they don\u0027t show up if enabled = false, since OnGui isn\u0027t called).\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223027170\u0022 data-ipsquote-contentid=\u0022159452\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221492634802\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 minutes ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSecond, even on the modules that do support \u0027moduleIsEnabled\u0027, they often will do initialization even when disabled.\u00A0 This can cause problems if, for example, the model transforms that they rely upon are not (yet) present in the part (e.g. from mesh-switching); the module will attempt to initailize, and then null-ref partway through.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOf course this wouldn\u0027t support modules that do mesh switching, everything needed for the module to work should be present in the part.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223027170\u0022 data-ipsquote-contentid=\u0022159452\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221492634802\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n29 minutes ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nthey need to only initialize when the \u0027enabled\u0027 flag is actually enabled (which means they will need a way to re-initialize when the user toggles that flag in the editor/etc).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe idea is to only prevent them to Update/FixedUpdate/OnGui, not to prevent Awake/Load/Onload/Start/OnStart. By setting enabled = false in the ModuleEnabler own Update/fixedUpdate, so after everything is initialized.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223027199\u0022 data-ipsquote-contentid=\u0022159452\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221492636430\u0022 data-ipsquote-userid=\u0022159391\u0022 data-ipsquote-username=\u0022ShotgunNinja\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, ShotgunNinja said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFor the others, you need special hacking. These are the ones I\u0027m aware of:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nModuleEngines*: just call the Shutdown() method when disabling it\n\u003C/li\u003E\n\u003Cli\u003E\nModuleDeployable*: stop all animations on the part\n\u003C/li\u003E\n\u003Cli\u003E\nModuleLight: if animation-driven\u00A0reset it\u00A0to frame 0, else set enabled=false in all Light objects.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe ModuleEnabler will disable the target module only in the editor (not in flight), wouldn\u0027t this will narrow down these issues ?\n\u003C/p\u003E\n"},{"CreatedByName":"ShotgunNinja","CreatedById":159391,"CreatedDateTime":"2017-04-19T22:00:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223027211\u0022 data-ipsquote-contentid=\u0022159452\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221492637416\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n23 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe ModuleEnabler will disable the target module only in the editor (not in flight), wouldn\u0027t this will narrow down these issues\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cem\u003EPartModule.enabled\u003C/em\u003E\u00A0is not serialized. You will need to re-disable\u00A0the modules every time the vessel is loaded.\u003Cbr\u003E\nSo even if you \u0027configure\u0027 only in the editor, you will still need to \u0027enforce that configuration\u0027 in flight.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223027211\u0022 data-ipsquote-contentid=\u0022159452\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221492637416\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n24 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nbut I was under the impression that they don\u0027t show up if enabled = false, since OnGui isn\u0027t called\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou need to use\u00A0\u003Cem\u003EPartModule.isEnabled\u003C/em\u003E instead. When it is false, KSP disable the fields and actions of that\u00A0module.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-04-20T17:05:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223027211\u0022 data-ipsquote-contentid=\u0022159452\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221492637416\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe idea is to only prevent them to Update/FixedUpdate/OnGui, not to prevent Awake/Load/Onload/Start/OnStart. By setting enabled = false in the ModuleEnabler own Update/fixedUpdate, so after everything is initialized.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223027211\u0022 data-ipsquote-contentid=\u0022159452\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221492637416\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOf course this wouldn\u0027t support modules that do mesh switching, everything needed for the module to work should be present in the part.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nWell then sadly, I cannot see how this would be of any use for \u0027module-swtiching\u0027.\u00A0\u00A0 (I would probably label it more properly, as a \u0027module disabler\u0027)\n\u003C/p\u003E\n\u003Cp\u003E\nAt least two things are needed for any proper implementation of \u0027module switching\u0027.\n\u003C/p\u003E\n\u003Cp\u003E\n1.) The module is only present on the part when it is actually supposed to be.\u00A0 This means it is not \u0027there but simply disabled\u0027.\u00A0 It does not \u0027still run its init code even when disabled\u0027.\u00A0 The module is either present when it is needed, or it is not present at all.\u00A0 This is for both performance and compatibility reasons (less modules and update calls = less overhead for disabled modules = higher performance;\u00A0 modules being added/removed properly = better compatibility with other mods, as those mods won\u0027t think a part is an engine just because it has a \u0027disabled\u0027 engine module on it).\n\u003C/p\u003E\n\u003Cp\u003E\n2.) Config support -- to enable dynamically-added/enabled/disabled modules to still be patched through \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E, and still have access to all proper config-file based utilities.\u00A0 This is needed for widespread and general compatibility with the modding community.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFrom my various and sundry attempts at developing a proper module-switching implementation I can tell you that there are several problems that will need to be fixed in stock code before it can actually be implemented in a non hacky fashion.\u00A0 Mostly regarding to part module loading/saving mechanics and how part-modules are restored from a combination of prefab and persistence file.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nIf you are not working towards a proper implementation of module-swtiching, then I wish you the best of luck.\u00A0 Not something I would have any interest in or use for, but there might be others willing to live with the constraints.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2017-04-20T18:41:09Z","Content":"\n\u003Cp\u003E\nIndeed, the module name is \u0022ModuleEnabler\u0022. I understand your point of view but as you said, proper add/removal of module instances at runtime is near impossible. On the other hand, we have a more or less clean way of enabling/disabling them. From a functional point of view this achieve the same thing.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for the potential issues :\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nI\u0027m pretty sure that the \u0022overhead\u0022 (I assume you mean memory footprint) would be very low if measurable at all.\n\u003C/li\u003E\n\u003Cli\u003E\nSince disabled modules don\u0027t call Update/FixedUpdate/OnGui, there is no performance difference.\n\u003C/li\u003E\n\u003Cli\u003E\nOn your compatibility example, I\u0027m not sure I follow you. Are you talking about code compatibility or \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E patching ? In any case, having a module switching system will induce complexity for mods that want to interact with a switchable module, no matter how its done.\n\u003C/li\u003E\n\u003Cli\u003E\nMaybe the specific code issues/features, when identified, could be dealt with in an interface that other plugins could implement in their custom modules.\n\u003C/li\u003E\n\u003Cli\u003E\nUnless there is something I missed, the proposed modules are fully compatible with \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E. But I agree that the upgrade configs are a bit tedious to write (compared to what we are used to with IFS/B9/Firespitter).\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nMy point is : since 1.2, we have a stock upgrade system that is able to track what is essentially \u0022part variations\u0022. On the other hand, this is is something that the modding community need and already do heavily. Count the number of plugins that provide resource/texture/mesh/module switching : B9, Firespitter, IFS, Kerbalism, BDB, and so on... Don\u0027t you think it make sense to try to link those features to the stock upgrade system ?\n\u003C/p\u003E\n\u003Cp\u003E\nMy idea is to do this in incremental steps and see what are the issues one at a time. For two reasons : I\u0027m not a super skilled programmer, and I don\u0027t have a lot of free time.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I was thinking about what you said about mesh switching. I looked into the firespitter code and it doesn\u0027t add/remove components/objects, it only enable/disable them. Since they exist, why would referencing them cause nullrefs ?\n\u003C/p\u003E\n"}]}