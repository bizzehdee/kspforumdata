{"TopicId":205848,"ForumId":36,"TopicTitle":"[WIP][v0.9.3] Less Real Test Flight: TestFlight for stock and stockalike parts (KSP 1.12.x)","CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-04T06:46:02Z","PageNum":1,"Articles":[{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-04T06:46:02Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003ELess Real Test Flight\u003C/strong\u003E uses and extends the TestFlight failure Mod, and is intended for stock and stock-alike games.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nDownload:\u00A0\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nPrereqs:\u00A0 TestFlight, ModuleManager.\u003Cbr\u003E\nKSP version 1.12.x\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EPlayer Tips:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nTestFlight is a fairly\u00A0 complex mod and LRTF adds a new layer to this.\u00A0 To get started here are a few pointers:\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nThe core number for any part is the data unit or \u0027du\u0027.\u00A0 You gather du by running a part in flight conditions (engines need to run, parachutes need to be deployed, etc).\n\u003C/li\u003E\n\u003Cli\u003E\nEngine parts do have a limited expected run time.\u00A0 This is a fixed number for each engine and is a bit different from the MTBF (mean time between failures) number in the TestFlight window.\u00A0 Once a part goes beyond this time, failures go up dramatically, even for fully tested parts.\u00A0 Be careful not to \u0027over burn\u0027 engines.\n\u003C/li\u003E\n\u003Cli\u003E\nInitial failure rates for new parts are quite high (by design) and it takes around 10 flights or so to fully debug a part.\u00A0 If you are using the stock tech tree you should probably disabled parachute failures to at least give your Kerbals a fighting chance.\u00A0\n\u003C/li\u003E\n\u003Cli\u003E\nSome avionics failures can be crippling.\u00A0 If you can\u0027t repair a failed probe core, put it into hibernation.\u00A0 This will at least stop the avionics issues.\u00A0 Putting a backup probe core on a craft can save your mission.\u00A0 The mod will enable hibernation for failed parts even if a mod like Kerbalism normally keeps it disabled.\n\u003C/li\u003E\n\u003Cli\u003E\nDo \u0027staged repairs\u0027, trying the simplest thing first then going to more extreme measures.\u00A0 This gives you the best chance of a repair.\u00A0 For example, hardware can be repaired without\u00A0 EVA or a repair kit so the best approach is to attempt a repair from inside the capsule, then EVA, and finally EVA with a repair kit.\n\u003C/li\u003E\n\u003Cli\u003E\nIf a repair fails you can wait until you have a better understanding of the part (more data units or \u0027du\u0027), upgrade your mission control, or have a more experienced astronaut.\u00A0\u00A0\n\u003C/li\u003E\n\u003Cli\u003E\nreliability curves are now somewhat randomized.\u00A0 You can set the randomization level from the KSP Settings-\u0026gt;TestFlight tab.\n\u003C/li\u003E\n\u003Cli\u003E\nYou can now repair or rebuild parts when you roll back a craft using Kerbal Construction Time.\u00A0 Pressing the TestFlight button in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E/\u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003E\u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E\u003C/abbr\u003E will display the Part Action Window for each of the failed parts.\u00A0\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nLRTF builds on StarStrider42\u0027s experimental (and likely abandoned) stock part configs:\u00A0\u00A0\u003Ca href=\u0022https://github.com/Starstrider42/TestFlight-Configs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Starstrider42/TestFlight-Configs\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf you are unfamiliar with TestFlight, it is a parts failure mod mostly used by RealismOverhaul/RP-1.\u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/KSP-RO/TestFlight\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003E\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E\u003C/abbr\u003E/TestFligh\u003C/a\u003Et\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u002299662\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed3157298390\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/99043-122-testflight-v180-01-may-2017-bring-flight-testing-to-ksp/\u0026amp;do=embed\u0022 style=\u0022height:197px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\nIt has a nice set of features and is insanely configurable, but it comes at the cost of being complex to configure each part.\u00A0 I wanted to use TestFlight but I am far too lazy to actually write configs for every part.\u00A0 I also wanted to extend it a bit by adding in some more recording and failure modes.\u00A0 It turns out being lazy is hard work!\n\u003C/p\u003E\n\u003Cp\u003E\nInstead of writing TF configurations for each part this mod tries to sort parts into one of several configuration profiles, then makes a few adjustments to the parts as needed, generating the actual TF profiles using modified versions of the StarStrider42 scripts.\n\u003C/p\u003E\n\u003Cp\u003E\nCurrently it configures engines, command parts, fuel tanks, parachutes, \u003Cabbr title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E\u003C/abbr\u003E,\u00A0wheels, reaction wheels, parachutes, and antenna.\u00A0 Although it *should* work well enough for most stock-alike mods, it\u0027s completely untested and there are almost certainly specific parts that won\u0027t work or will be badly configured.\n\u003C/p\u003E\n\u003Cp\u003E\nIt includes the ability to repair LRTF failures, including engine repairs for LRTF configured engines but not TestFlight \u0027stock\u0027 configured engines.\n\u003C/p\u003E\n\u003Cp\u003E\nMy goals: near, far, and blue sky:\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nNear\n\u003Cul\u003E\n\u003Cli\u003E\nBug fixes.\u00A0 Always bug fixes\n\u003C/li\u003E\n\u003Cli\u003E\nBalance the failure rates and curves for the profiles\u00A0\n\u003C/li\u003E\n\u003Cli\u003E\nBalance repair probabilities\n\u003C/li\u003E\n\u003Cli\u003E\nTest RealFuel and Kerbalism support (currently preliminary)\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nFar\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cs\u003EReal Antenna support\u003C/s\u003E\u00A0\u003Cstrong\u003EDone!\u003C/strong\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cs\u003E\u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003E\u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E\u003C/abbr\u003E support\u003C/s\u003E\u00A0\u003Cstrong\u003E \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003E\u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E\u003C/abbr\u003E\u00A0Parachutes are done\u003C/strong\u003E!\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cs\u003ERealChute support\u003C/s\u003E\u00A0\u003Cstrong\u003EDone\u003C/strong\u003E!\n\u003C/li\u003E\n\u003Cli\u003E\nSupport for other parts mods\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nBlue Sky\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cs\u003EAdd somewhat randomized failure rates and curves for each part for each save.\u00A0 This means when you start a new save, each part will have its own failure rate and curve, simulating the fact that you don\u0027t always know how smooth development will be nor how good the ultimate product may be.\u003C/s\u003E\u00A0\u003Cstrong\u003EDone\u003C/strong\u003E!\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cs\u003EUse TestFlights ability to boost research for part families based on flight data from previous parts.\u00A0 See if this can be done by using manufacturers, engine class (booster, vacuum, solids, etc), etc instead of previous parts\u003C/s\u003E\u00A0 \u003Cstrong\u003EDone\u003C/strong\u003E!\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nThe mod doesn\u0027t overwrite existing TF profiles, or at least it shouldn\u0027t.\n\u003C/p\u003E\n\u003Cp\u003E\nGive it a shot!\u00A0 What\u0027s the worst that can happen?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-11-04T19:57:20Z\u0022 title=\u002211/04/2022 07:57  PM\u0022 data-short=\u00221 yr\u0022\u003ENovember 4, 2022\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Xt007","CreatedById":197003,"CreatedDateTime":"2021-12-05T04:21:14Z","Content":"\n\u003Cp\u003E\nMy two cents on general design\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBooster type engines could have a max burn time of 220 seconds\n\u003C/p\u003E\n\u003Cp\u003E\nHydrolox type engines could be 8.5 minutes\n\u003C/p\u003E\n\u003Cp\u003E\nAny monoprop engine could have unlimited ignitions and no max burn time for simplicity and flexibility of design\n\u003C/p\u003E\n\u003Cp\u003E\nGlad to see you taking this on!\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-10T23:40:35Z","Content":"\n\u003Cp\u003E\nVersion 0.2 is out.\u00A0 It adds \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E support and changes how fuel tanks are \u0027recorded\u0027 plus a bunch of other changes to the failure modes and failure curves.\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.2\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.2\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve moved to a design goal of only tracking parts while in active use as much as practical.\u00A0 TestFlight is primarily an engine failure mod and seems to work best when parts can only fail while being used.\u00A0 In practice this means MTBF will look fairly bad for parts like tanks, \u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E, etc simply because the mod won\u0027t check for failures unless they are being actively used.\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis is very much a work in progress and these releases are just snapshots when things seem to be stable and working.\u00A0 Any part of it can change at any time.\u00A0 Obviously not suitable for an ongoing career game.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have never played around with Test Flight and don\u0027t mind the rough edges, it\u0027s a good chance to see how it plays, without the full experience of RealismOverhaul.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-11T00:10:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224062073\u0022 data-ipsquote-contentid=\u0022205848\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221638678074\u0022 data-ipsquote-userid=\u0022197003\u0022 data-ipsquote-username=\u0022Xt007\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 12/4/2021 at 8:21 PM, Xt007 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMy two cents on general design\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBooster type engines could have a max burn time of 220 seconds\n\u003C/p\u003E\n\u003Cp\u003E\nHydrolox type engines could be 8.5 minutes\n\u003C/p\u003E\n\u003Cp\u003E\nAny monoprop engine could have unlimited ignitions and no max burn time for simplicity and flexibility of design\n\u003C/p\u003E\n\u003Cp\u003E\nGlad to see you taking this on!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks!\u00A0 For the engines I\u0027ve just kept the numbers from\u00A0StarStrider42\u0027s base mod which are about half that.\u00A0 I think you are right though, these may be a bit punishing.\u00A0 I\u0027m trying to balance things so a first flight gives something like a 50/50 chance for a successful launch, depending on how many new parts are used.\n\u003C/p\u003E\n\u003Cp\u003E\nSo far most of my focus has been adding in a few new failure types, in particular for fuel tanks and \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E.\u00A0 \u00A0Some of the stock TF failure types don\u0027t look like they were ever fully tested (in particular the avionics/ModuleCommand stuff) so those may need more work as well.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-17T22:35:53Z","Content":"\n\u003Cp\u003E\nI\u0027ll be adding a substantial\u00A0update sometime over the weekend but this is definitely more work than I was expecting.\u00A0 TestFlight is a really interesting failure mod but it\u0027s quite incomplete and everything except engine failures is badly broken.\u00A0 I guess that shouldn\u0027t be a surprise since more realistic engine failures was the main goal with everything else an afterthought.\u00A0 I think most of the non-engine stuff was written for testing but not fully implemented.\n\u003C/p\u003E\n\u003Cp\u003E\nThe biggest issues is that TestFlight has no built in mechanism for saving failure states, so reloading a craft erases most (but not all!) failure effects.\u00A0 \u00A0Fortunately it\u0027s super extendable.\u00A0 \u00A0It\u0027s fairly easy to create new failure mods\u00A0that include the ability to save and restore failures.\u00A0 My current focus will be to add and improve non-engine related failures and just use the \u0027stock\u0027 engine failures.\u00A0 So far I\u0027ve created or updated:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E failures\n\u003C/li\u003E\n\u003Cli\u003E\nTank(resource) failures\n\u003C/li\u003E\n\u003Cli\u003E\nAvionics failures\n\u003C/li\u003E\n\u003Cli\u003E\nReactionWheel failures\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nThe mod works best for instantaneous or in flight failures so the things I\u0027m adding will only look at parts being actively used.\n\u003C/p\u003E\n\u003Cp\u003E\nAnother big issues is it doesn\u0027t really have a repair mechanism.\u00A0 It has \u0027stub\u0027 functions that\u00A0I think the devs were hoping would get used at a later date.\u00A0 It doesn\u0027t look like it would be super difficult to add in a fairly simple repair mechanism so this may be next on my list after creating a core of non-engine failures and getting things in a more or less playable state.\u00A0 Extending this mod to beyond just stock (RealFuels, Procedurals, etc) is likely a far future task.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-23T18:07:02Z","Content":"\n\u003Cp\u003E\nVersion 0.3 is available.\u00A0 This is a pretty big update and is more or less the first playable release.\u00A0 It\u0027s still only tested for stock games and doesn\u0027t support some fairly critical mods yet (RealFuels, procedurals for example).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.3\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.3\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFull features list for this version:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nAdds a submenu to the TestFlight Game Difficulty menu:\n\u003Cul\u003E\u003Cli\u003E\nSupported failures can send a message to the Messages menu\n\u003C/li\u003E\n\u003Cli\u003E\nSupported failures can halt time warp\n\u003C/li\u003E\n\u003Cli\u003E\nSupported failure types can be enabled or disabled (Wheels will be added later)\n\u003Cul\u003E\u003Cli\u003E\nResources/Tanks\n\u003C/li\u003E\n\u003Cli\u003E\nAvionics/Command\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nReaction Wheels\n\u003C/li\u003E\n\u003Cli\u003E\nParachutes\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nAdds failure types to the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E of each part that fails.\n\u003C/li\u003E\n\u003Cli\u003E\nEngine failures are still using the stock TestFlight failures.\u00A0 Engines are divided into \u0027types\u0027 with rated burn times, failure modes, and failure probabilities applied to each type:\n\u003Cul\u003E\u003Cli\u003E\nSolids\n\u003C/li\u003E\n\u003Cli\u003E\nBoosters\n\u003C/li\u003E\n\u003Cli\u003E\nSustainers\n\u003C/li\u003E\n\u003Cli\u003E\nVacuum\n\u003C/li\u003E\n\u003Cli\u003E\nManeuvering\n\u003C/li\u003E\n\u003Cli\u003E\nHigh Efficiency\n\u003C/li\u003E\n\u003Cli\u003E\nJets\n\u003C/li\u003E\n\u003Cli\u003E\nNuclear\n\u003C/li\u003E\n\u003Cli\u003E\nElectric\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nRewrites and refactors non-engine failures so they are properly applied if a craft is reloaded in flight (missing feature in stock TestFlight)\n\u003Cul\u003E\u003Cli\u003E\nResources/Tank failures (leaks and access failures such as pressurization failures or battery failures)\n\u003C/li\u003E\n\u003Cli\u003E\nAvionics failures (\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E failures, alignment errors, etc)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E failures (currently disableds entire \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E block, others may follow)\n\u003C/li\u003E\n\u003Cli\u003E\nReaction wheel failures (torque failures and total failures)\n\u003C/li\u003E\n\u003Cli\u003E\nParachutes (reefing (full deployment)\u00A0 failures and total failures)\n\u003C/li\u003E\n\u003Cli\u003E\nWheels (brake, motor, and steering failures)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nThe actual failure rates are still being adjusted since these really require some playtesting and most of my time has been used adding features and testing for bugs.\u00A0 I\u0027ve removed solar panel failures for now.\u00A0 TestFlight really works best when applied to \u0027in flight\u0027 failures and doesn\u0027t really work for long term failures.\n\u003C/p\u003E\n\u003Cp\u003E\nThere is still a whole bunch of things that need to be done so this still isn\u0027t \u0027Save Game\u0027 ready yet.\u00A0 The next things on my list are:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nBegin adding a \u0027repair\u0027 function.\u00A0 This is a longer term project so the first version will likely only be for debugging/cheating at first.\n\u003C/li\u003E\n\u003Cli\u003E\nBalancing failures probabilities for the various parts and failure modes.\n\u003C/li\u003E\n\u003Cli\u003E\nBug fixes\n\u003C/li\u003E\n\u003Cli\u003E\nBug fixes for the bug fixes above\n\u003C/li\u003E\n\u003Cli\u003E\nMore bug fixes\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nAfter that it\u0027s expanding support to non-stock mods but I don\u0027t know how far I can take this yet.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-01-02T17:07:06Z","Content":"\n\u003Cp\u003E\nAnother update coming as soon as I can nail down a few glitches.\u00A0 This one has a bunch of bug fixes and adds\u00A0\u003Cstrong\u003Erepairs!\u003C/strong\u003E\u00A0 At least for non-engine failure modes.\u00A0 Core TestFlight is missing a few key features.\u00A0 One is remembering its \u0027state\u0027 when a craft is reloaded, the other is a functioning repair feature.\u00A0 I\u0027m avoiding messing with the core engine failures for now, so these won\u0027t have a repair feature or remember their failure state, but all the other failure modes have these features now.\n\u003C/p\u003E\n\u003Cp\u003E\nRepairs will have a probability of success based on the type of failure (hardware or software for now, others are possible), the number of \u0027data units\u0027 (du) gathered for that part, and ciucrmstatinal adjustments based on the failure type combined with:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nComms connection to the ground and the level of Mission Control\n\u003C/li\u003E\n\u003Cli\u003E\nWhether a trained astronaut is aboard and their experience level\n\u003C/li\u003E\n\u003Cli\u003E\nThe least stupid astronaut aboard\n\u003C/li\u003E\n\u003Cli\u003E\nWhether an Engineer is aboard, and their level\u00A0\n\u003C/li\u003E\n\u003Cli\u003E\nIf an astronaut is on EVA\n\u003C/li\u003E\n\u003Cli\u003E\nIf there is a repair kit available\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nThe base repair probability is more or less the inverse of the failure chance (i.e. it uses the same number of du and the same failure curve).\u00A0 This number is modified based on the above adjustments.\u00A0 \u00A0In practice this means parts are unlikely to be repaired until you have nearly maxed out the du for that part (i.e. fully tested and debugged it).\n\u003C/p\u003E\n\u003Cp\u003E\nSoftware repairs for example are almost entirely based on contact with Mission Control and its level, with a small bonus for an astronaut, their brains (i.e. inverse of their Stupidity), and if there\u0027s an engineer, but with no bonus for EVA or repair kits.\u00A0 Hardware repairs do best with an Engineer on EVA with a repair kit and contact with Mission Control but still get some bonuses for astronaut level and brains.\n\u003C/p\u003E\n\u003Cp\u003E\nRepairs can be retried but only if the repair probability is better than the last attempt.\u00A0 There is always at least a 1% of repair and it\u0027s never higher than 99%.\u00A0 In practice situations are never ideal and repair chances are lower than this.\u00A0 \u00A0Early in a career you can expect repair rates in the 2-3% range.\u00A0 Late career can give something like 95% under optimal conditions.\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s a difficulty slider in the Settings window that can adjust the repair chance a bit.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-01-03T05:34:14Z","Content":"\n\u003Cp\u003E\nVersion 0.4 is available.\u00A0 It includes some bug fixes but mostly it adds part repairs.\u00A0 As noted above this is currently only for non-engine failures (although you may notice that gimbal failures can be repaired as the stock gimbal failure is broken so I added this in using the LRTF extension to TestFlight).\u00A0 I originally planned on just adding a basic repair ability for testing but... I don\u0027t know.\u00A0 Things got out of hand I guess.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.4\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.4\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe mod in approaching usability, but isn\u0027t quite there yet.\u00A0 It\u0027s playable but probably not for a save game you care about.\u00A0 There are still quite a few issues that need to be fixed or adjusted, including:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nCurrently resource failure modes can only happen on one resource at a time (or ALL resources).\u00A0 This is a limitation of the TestFlight core mod.\u00A0 It needs to be able to fail multiple times (e.g. both LiquidFuel and Oxidizer should be able to both fail independently on each part).\n\u003C/li\u003E\n\u003Cli\u003E\nAvionics failures are not well balanced or thought out.\u00A0 They should probably be pared down and possibly modified a bit.\n\u003C/li\u003E\n\u003Cli\u003E\nFailure probabilities still need a lot of work.\n\u003C/li\u003E\n\u003Cli\u003E\nRepairs are brand new and almost certainly buggy.\u00A0 It\u0027s a bit complex and I\u0027m still not sure if it shouldn\u0027t be simplified.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nSo the next step will be to fix how resources are handled and maybe add in control surfaces.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-01-15T23:16:11Z","Content":"\n\u003Cp\u003E\nVersion 0.5 is available.\u00A0 This is the first version I would consider playable in a career game.\u00A0 It updates all the engine failures so they now enable repairs and keep their failure state if the game is reloaded.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.5\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.5\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSignificant updates for v0.5\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nEngine failures can now be repaired\n\u003C/li\u003E\n\u003Cli\u003E\nMore than one resource can fail per part\n\u003C/li\u003E\n\u003Cli\u003E\nPreliminary support for Kerbalism and RealFuels\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nAs of now LRTF has the following failure types:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nEngines\n\u003Cul\u003E\u003Cli\u003E\nCoolant (overheating)\n\u003C/li\u003E\n\u003Cli\u003E\nPerformance Loss (lower \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003E\u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E\u003C/abbr\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nShutdown (in flight engine failure)\n\u003C/li\u003E\n\u003Cli\u003E\nGimbal alignment errors\n\u003C/li\u003E\n\u003Cli\u003E\nGimbal failure (locks the gimbal)\n\u003C/li\u003E\n\u003Cli\u003E\nGimbal speed (slows gimbal reactions)\n\u003C/li\u003E\n\u003Cli\u003E\nIgnition Failure (engines fail to start)\n\u003C/li\u003E\n\u003Cli\u003E\nExplosion (engine rich combustion)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nAvionics (still not sure it makes sense to have all these failures.\u00A0 will playtest to see which ones are the most ... interesting)\n\u003Cul\u003E\u003Cli\u003E\nAxis failure (one of the 6 axes [pitch,roll,yaw,transx/y/z] failed)\n\u003C/li\u003E\n\u003Cli\u003E\nAxis clamped (one of the 6 axes does not have full control)\n\u003C/li\u003E\n\u003Cli\u003E\nAxis deadzone (one of the 6 axes is missing control for a section of the axis)\n\u003C/li\u003E\n\u003Cli\u003E\nAvionics glitch (random dropouts on one of the axes)\n\u003C/li\u003E\n\u003Cli\u003E\nInverted (one of the axes is reversed)\n\u003C/li\u003E\n\u003Cli\u003E\nPartial avionics (one of the axes does not have full range)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\u003C/abbr\u003E failure (\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\u003C/abbr\u003E module has failed)\n\u003C/li\u003E\n\u003Cli\u003E\nJammed Thruster (no control over the thrusters)\n\u003C/li\u003E\n\u003Cli\u003E\nTotal failure (no avionics control at all)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nResources\n\u003Cul\u003E\u003Cli\u003E\nResource leaks (slow leak of a resource)\n\u003C/li\u003E\n\u003Cli\u003E\nResource failures (resource will no longer flow but can be pumped to a working part)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nAerodynamics\n\u003Cul\u003E\u003Cli\u003E\nDisabled control surfaces\n\u003C/li\u003E\n\u003Cli\u003E\nDeployed control surfaces (partial deployment of surface)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nParachutes\n\u003Cul\u003E\u003Cli\u003E\nReefing failure (parachute will not fully inflate)\n\u003C/li\u003E\n\u003Cli\u003E\nDeployment failure (parachute fails to stage or deploy)\n\u003C/li\u003E\n\u003Cli\u003E\nFailure (parachute completely detaches or won\u0027t deploy at all)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\n\u003Cabbr title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E\u003C/abbr\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Cabbr title=\u0022Reaction Control System\u0022\u003E\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E\u003C/abbr\u003E block fails\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nReaction Wheels\n\u003Cul\u003E\u003Cli\u003E\nAlignment errors (pitch, roll, and yaw will not align correctly)\n\u003C/li\u003E\n\u003Cli\u003E\nFailure (reaction wheel fails completely\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nWheels\n\u003Cul\u003E\u003Cli\u003E\nBrake failure\n\u003C/li\u003E\n\u003Cli\u003E\nSteering failure\n\u003C/li\u003E\n\u003Cli\u003E\nMotor failure\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-01-15T23:45:42Z\u0022 title=\u002201/15/2022 11:45  PM\u0022 data-short=\u00222 yr\u0022\u003EJanuary 15, 2022\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MoeKitsune","CreatedById":127670,"CreatedDateTime":"2022-01-17T04:45:00Z","Content":"\n\u003Cp\u003E\nI\u0027ve been looking for a good engine/parts failure mod, I think I\u0027ve found it!\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-01-17T05:54:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224078183\u0022 data-ipsquote-contentid=\u0022205848\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221642394700\u0022 data-ipsquote-userid=\u0022127670\u0022 data-ipsquote-username=\u0022MoeKitsune\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, MoeKitsune said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ve been looking for a good engine/parts failure mod, I think I\u0027ve found it!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks!\u00A0 It\u0027s still a work in progress, but I\u0027m happy with things so far.\u00A0 I\u0027ll be posting a minor update soon to remove the force failure button since that\u0027s just for testing plus a couple of minor fixes.\n\u003C/p\u003E\n\u003Cp\u003E\nI expect there are a bunch of hidden bugs and it hasn\u0027t been tested against very many mods yet.\u00A0 There\u0027s one known bug from the TestFlight core.\u00A0 It will throw some [EXC] errors in the log when you recover a vessel.\u00A0 It looks to be harmless but you may see it when you leave or recover a craft.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-01-19T00:15:05Z","Content":"\n\u003Cp\u003E\nVersion 0.5.1 is available.\u00A0 It\u0027s a very minor update that removes\u00A0IntakeAir as a failure resource and removes the TestFail button .\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/tree/v0.5.1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/tree/v0.5.1\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"CessnaSkyhawk","CreatedById":205876,"CreatedDateTime":"2022-01-20T17:52:40Z","Content":"\n\u003Cp\u003E\nThis mod seems like a really interesting project - I\u0027ll be keeping an eye on this! I might need to look into adding an SSS support patch for this at some point.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-01-21T06:07:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224079850\u0022 data-ipsquote-contentid=\u0022205848\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221642701160\u0022 data-ipsquote-userid=\u0022205876\u0022 data-ipsquote-username=\u0022CessnaSkyhawk\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, CessnaSkyhawk said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis mod seems like a really interesting project - I\u0027ll be keeping an eye on this! I might need to look into adding an SSS support patch for this at some point.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSadly, there\u0027s very little documentation yet.\u00A0 It\u0027s still in flux a bit.\u00A0 I guess (...sigh...) that\u0027s next on my list of things to do.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have any questions about how to customize the failure modules let me know.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-01-26T04:10:19Z","Content":"\n\u003Cp\u003E\nVersion 0.6 is now available.\u00A0 \u00A0This adds two major features.\u00A0 It adds antenna/communications failures and it adds in data unit (du) bonuses based on category and manufacturer.\u00A0 In practice this means du recording will be a bit faster and later parts will start out more reliable than earlier parts.\u00A0 The failure rates have been rebalanced a bit to reflect this.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.6\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.6\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-01-28T00:44:14Z","Content":"\n\u003Cp\u003E\nI\u0027ve experimentally added decouplers to the failure modes.\u00A0 I\u0027m not sure about them yet because they use a slightly modified version of the stock ModuleDecouple and ModuleAnchorDecoupler modules.\u00A0 They definitely need more testing but if you want to look at them, they are in the latest master branch on the GitHub (not the latest 0.6 release).\u00A0 The failures are:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nFail to decouple\n\u003C/li\u003E\n\u003Cli\u003E\nPyros failure (0 force on decouple)\n\u003C/li\u003E\n\u003Cli\u003E\nPremature decouple\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-01-28T00:45:42Z\u0022 title=\u002201/28/2022 12:45  AM\u0022 data-short=\u00222 yr\u0022\u003EJanuary 28, 2022\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-02-09T18:26:57Z","Content":"\n\u003Cp\u003E\nVersion 0.6.1 is out.\u00A0 This officially adds in decoupler failures.\u00A0 It also optimizes du bonus code to run a bit faster and adjusts failure probabilities for a few categories.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.6.1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.6.1\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nNot sure what\u0027s next for failures.\u00A0 I still want to add in the ability have\u00A0 somewhat randomized failure curves so each new save game has unique failure probabilities for each part.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-02-25T05:04:27Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EIMPORTANT\u003C/strong\u003E:\u00A0 TestFlight has been updated to 2.2.0.1 but the update breaks the current version of Less Real Test Flight.\u00A0 I should have an update of LRTF over the weekend to fix this issue.\u00A0 In the mean time you may not want to upgrade TestFlight.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-03-09T18:25:23Z","Content":"\n\u003Cp\u003E\nVersion 0.6.3 (skipped a \u0027bad\u0027 version 0.6.2) is out.\u00A0 It now supports the new TestFlight v 2.2.0.1.\u00A0 I recommend updating to the latest version of TF as it fixes some issues.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.6.3\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.6.3\u003C/a\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-03-09T18:25:51Z\u0022 title=\u002203/09/2022 06:25  PM\u0022 data-short=\u00222 yr\u0022\u003EMarch 9, 2022\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-03-10T00:00:11Z","Content":"\n\u003Cp\u003E\nVersion 0.6.4 is out.\u00A0 This fixes a problem with the instantaneous decoupler failures not properly registering with TestFlight.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.6.4\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.6.4\u003C/a\u003E\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-03-22T22:46:19Z","Content":"\n\u003Cp\u003E\nVersion 0.7 is out!\u00A0 This is a fairly major update and reworks the reliability curve which determines the parts failure chance.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.7\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.7\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe mod now creates a unique reliability curve for each part in each new game save.\u00A0 In practice this means each part will have its own development path during your game.\u00A0 Some parts will have a relatively smooth development, with fewer early failures, others may be more difficult to perfect but eventually offer a highly reliable part, and some parts will just be trouble and never get fully perfected.\u00A0 You won\u0027t know until you try!\n\u003C/p\u003E\n\u003Cp\u003E\nYou can set the random-ness from the KSP Settings-TestFlight tab\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s a good example of two similar parts with different development cycles:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00229Xd2R8m.jpeg\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002244.00\u0022 height=\u0022352\u0022 width=\u0022800\u0022 src=\u0022https://i.imgur.com/9Xd2R8m.jpeg\u0022\u003E\u003Cbr\u003E\n(special thinks to sarbian for the AmazingCurveEditor mod)\n\u003C/p\u003E\n\u003Cp\u003E\nThe left part starts out a bit less reliable but quickly settles down and in the end is pretty reliable.\u00A0 The right part on the other hand has quite a troubled development and takes a while to iron out all the issues but never quite solving all of them.\n\u003C/p\u003E\n\u003Cp\u003E\nIn general parts take about 10 flights to fully debug.\u00A0 \u00A0The X axis is the chance of a failure for the full flight time and the Y axis is how many du (development units) you have gathered.\u00A0 You can see that the left part is mostly debugged by flight 2 while the right part takes 3 flights and still has issues.\n\u003C/p\u003E\n\u003Cp\u003E\nWhile this shouldn\u0027t break existing saves, the mod is still a work in progress, so keep that in mind when upgrading.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-03-23T03:29:25Z","Content":"\n\u003Cp\u003E\nv0.7.1 is available.\u00A0 It fixes a small bug with dynamic pressure (Q) engine failures.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/LRTF/releases/tag/v0.7.1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/LRTF/releases/tag/v0.7.1\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"hermano","CreatedById":99376,"CreatedDateTime":"2022-06-25T20:17:00Z","Content":"\n\u003Cp\u003E\nI ran into errors using Bluedog DB and Realfuels-Stock. In profiles_engine.cfg lrtfBurntime computation failed due to missing baseVolume for a few solid motors.\n\u003C/p\u003E\n\u003Cp\u003E\nI replaced the line\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[*]:HAS[#lrtfConfName[Solid],~lrtfBurntime,@MODULE[ModuleB9PartSwitch]/baseVolume]:NEEDS[LRTFConfig]:BEFORE[zTestFlight]\u003C/pre\u003E\n\u003Cp\u003E\nwith\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003E@PART[*]:HAS[#lrtfConfName[Solid],~lrtfBurntime,@MODULE[ModuleB9PartSwitch],#baseVolume[*]]:NEEDS[LRTFConfig]:BEFORE[zTestFlight]\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nwhich seems to work.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI haven\u0027t played much yet, but in a glance the testflight configs seem fine. Thanks for your work.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-06-25T20:18:03Z\u0022 title=\u002206/25/2022 08:18  PM\u0022 data-short=\u00222 yr\u0022\u003EJune 25, 2022\u003C/time\u003E by hermano\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-06-26T14:20:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224148696\u0022 data-ipsquote-contentid=\u0022205848\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221656188220\u0022 data-ipsquote-userid=\u002299376\u0022 data-ipsquote-username=\u0022hermano\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, hermano said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI ran into errors using Bluedog DB and Realfuels-Stock. In profiles_engine.cfg lrtfBurntime computation failed due to missing baseVolume for a few solid motors.\n\u003C/p\u003E\n\u003Cp\u003E\nI replaced the line\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[*]:HAS[#lrtfConfName[Solid],~lrtfBurntime,@MODULE[ModuleB9PartSwitch]/baseVolume]:NEEDS[LRTFConfig]:BEFORE[zTestFlight]\u003C/pre\u003E\n\u003Cp\u003E\nwith\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003E@PART[*]:HAS[#lrtfConfName[Solid],~lrtfBurntime,@MODULE[ModuleB9PartSwitch],#baseVolume[*]]:NEEDS[LRTFConfig]:BEFORE[zTestFlight]\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nwhich seems to work.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI haven\u0027t played much yet, but in a glance the testflight configs seem fine. Thanks for your work.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nGood catch!\u00A0 Yeah, that was a typo and your fix is correct.\u00A0 I\u0027ll roll it into the next update.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0Let me know how it goes.\u00A0 Any feedback is super useful.\u00A0 This is still deep in the \u0027work in progress\u0027 phase.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Strych74","CreatedById":191604,"CreatedDateTime":"2022-06-28T13:06:55Z","Content":"\n\u003Cp\u003E\nSo I don\u0027t know if this is an issue with TF, or LRTF, or both, or just me being a plain old imbecile.\u00A0 \u00A0I can see the TF button in the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E screen, and also the in-flight button and window.\u00A0 What I CAN\u0027T see is anything while inside the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E - no button, no R\u0026amp;D window, nothing TF related in the right-click part-window.\u00A0 I\u0027m running TF v2.2.0.1 and LRTF v0.7.1.\n\u003C/p\u003E\n\u003Cp\u003E\nAs an aside, the mod itself does appear to be working properly - I launch a rocket with a new engine and I can see the UI for TF, the data accrual, failure reporting etc.\u00A0 I\u0027ve also been able to confirm that the failures are persistent.\u00A0 Returning the vehicle to the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E (using KCT here) and then returning it to the launchpad shows the parts are still malfunctioning.\u00A0 What I\u0027m not clear on is whether there is a clean way of fixing these failures while in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E - can I see a list of the parts that are malfunctioning, can I repair/replace them from within a UI, or do I have to remember the malfunctioning part/s and manually replace them one by one?\u00A0 Apologies for the questions, I just haven\u0027t been able to find any screenshots / videos of people using the mod to give me an understanding of what to expect.\n\u003C/p\u003E\n"}]}