{"TopicId":223836,"ForumId":32,"TopicTitle":"The curious case of the missing jet engine thrust.","CreatedByName":"CastleBravoTest","CreatedById":232767,"CreatedDateTime":"2024-02-24T19:42:44Z","PageNum":1,"Articles":[{"CreatedByName":"CastleBravoTest","CreatedById":232767,"CreatedDateTime":"2024-02-24T19:42:44Z","Content":"\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis is my first post here. I was convinced by some friends to post the results of one of my investigations on this forum. It will be partly a question about things I have yet to fully discover, a bit of an explanation of how jet engines work. I will tell this investigation in chronological order explaining each step so if I have an error anywhere in my understanding feel free dear reader to point it out.\u003Cbr\u003E\n\u003Cbr\u003E\nI started this little investigation because of an unrelated efficiency calculation I wanted to do however it quickly spiraled into a bit of a rabit hole. I wanted to mathematically determine the most efficient jet engines for each flight regime but for this I needed a way to create a function for the thrust multiplier given the flight conditions(pressure and mach). To my understanding at the time the thrust was simply a function of two values those being the mach multiplier and the pressure multiplier. In other words:\n\u003C/p\u003E\n\u003Cp\u003E\nThrust = mach_curve x pressure_curve\n\u003C/p\u003E\n\u003Cp\u003E\nNice and simple right? The wiki shows these two curves as looking as follows for the whiplash:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u003Cimg alt=\u0022600px-J-X4_Whiplash_Turbo_Ramjet_Engine_\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002275.00\u0022 height=\u0022450\u0022 width=\u0022600\u0022 src=\u0022https://wiki.kerbalspaceprogram.com/images/thumb/c/c8/J-X4_Whiplash_Turbo_Ramjet_Engine_velocity_curve.png/600px-J-X4_Whiplash_Turbo_Ramjet_Engine_velocity_curve.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022600px-J-X4_Whiplash_Turbo_Ramjet_Engine_\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002275.00\u0022 height=\u0022450\u0022 width=\u0022600\u0022 src=\u0022https://wiki.kerbalspaceprogram.com/images/thumb/3/33/J-X4_Whiplash_Turbo_Ramjet_Engine_atmosphere_curve.png/600px-J-X4_Whiplash_Turbo_Ramjet_Engine_atmosphere_curve.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe data for these two curves are easy enough to find in the game files and look as follows (for the whiplash at least):\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003EvelCurve\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0 1 0 0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0.2 0.98 0 0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0.72 1.716 2.433527 2.433527\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1.36 3.2 1.986082 1.986082\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 2.15 4.9 1.452677 1.452677\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 3 5.8 0.0005786046 0.0005786046\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 4.5 3 -4.279616 -4.279616\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 5.5 0 -0.02420209 0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0atmCurve\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// definite \u0027kink\u0027 to the curve at high altitude, compared to flatter BJE curve\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0 0 0 0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0.045 0.166 4.304647 4.304647\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0.16 0.5 0.5779132 0.5779132\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 0.5 0.6 0.4809403 0.4809403\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0key = 1 1 1.013946 0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe way in which this is stored is not entirely obvious but through some googling i figured out it uses a technique called \u003Cem\u003ECubic Hermite spline\u00A0\u003C/em\u003Ealso known as\u00A0\u003Cem\u003ECubic Hermite interpolation\u00A0\u003C/em\u003E[source for the curious reader: \u003Ca href=\u0022https://en.wikipedia.org/wiki/Cubic_Hermite_spline#:~:text=In%20numerical%20analysis%2C%20a%20cubic,of%20the%20corresponding%20domain%20interval.\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://en.wikipedia.org/wiki/Cubic_Hermite_spline#:~:text=In numerical analysis%2C a cubic,of the corresponding domain interval.\u003C/a\u003E]. Each point (represented by a key) is defined by 4 properties which are the x, y coordinates and incoming and outgoing tangents in that order.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTo do this numerically in the program I was using(aka MATLAB) I had the option to either implement this interpolation from scratch or use one of the preexisting interpolation methods available to me. The functions that MATLAB had available were:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003Espline()\npchip()\nmakima()\n\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI first decided on\u00A0\u003Cem\u003Espline()\u00A0\u003C/em\u003E\u00A0and through that I aquired functions that produced the following curves:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022lIqjL8U.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002284.24\u0022 height=\u0022620\u0022 width=\u0022736\u0022 src=\u0022https://i.imgur.com/lIqjL8U.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nand:\u003Cbr\u003E\n\u003Cimg alt=\u0022cesbN1M.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002283.20\u0022 height=\u0022624\u0022 width=\u0022750\u0022 src=\u0022https://i.imgur.com/cesbN1M.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThese curves look good but they differ slightly from the ones found in the wiki.\u00A0 This error could be through a number of reasons, it could be that i used the wrong interpolation function, it could be that the wiki is wrong or it could even be that both I and the wiki are wrong. I tried googling for which interpolation the devs used or which interpolation unity would use by default however very predictably this gave no results (Like many things in ksp odds are they implemented a custom interpolation method). Unable to find the answers I needed online i then proceeded to look at the functions themselves available to me. Each giving ever so slightly different behavior. If i am to show the difference in the interpolation method i am going to borrow an example from the online documentation for these functions:[image source: \u003Ca href=\u0022https://se.mathworks.com/help/matlab/ref/spline.html?searchHighlight=spline\u0026amp;s_tid=srchtitle_support_results_1_spline\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://se.mathworks.com/help/matlab/ref/spline.html?searchHighlight=spline\u0026amp;s_tid=srchtitle_support_results_1_spline\u003C/a\u003E]\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022DataInterpolationComparisonExample_02.pn\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002275.00\u0022 height=\u0022420\u0022 width=\u0022560\u0022 src=\u0022https://se.mathworks.com/help/examples/matlab/win64/DataInterpolationComparisonExample_02.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs you can see from this image each interpolation method does it ever so slightly differently (though granted makima and spline are almost identical). The\u00A0\u003Cem\u003Epchip()\u00A0\u00A0\u003C/em\u003Emethod seems most similar to the one used in the wiki however at this point I was through taking peoples word for it so i decided on a different course of action.\u00A0 To determine which of these methods I should use for my function I decided to conduct a little experiment. I slapped together a tiny test rig which\u00A0 would help me (with the aid of the autopilot mod) determine the properties of such a curve. The vehicle is seen below but there is not much to say about it:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00222xnIeeM.jpg\u0022 class=\u0022ipsImage\u0022 data-ratio=\u0022120.00\u0022 height=\u0022502\u0022 width=\u00221200\u0022 src=\u0022https://i.imgur.com/2xnIeeM.jpg\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis vehicle flew on 100% throttle with infinite fuel turned on to limit the variables. The autopilot mod used was atmospheric autopilot [link: \u003Ca href=\u0022https://spacedock.info/mod/683/AtmosphereAutopilot\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://spacedock.info/mod/683/AtmosphereAutopilot\u003C/a\u003E]. This autopilot held 200m above sea level and flew only in the ocean east of the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003E\u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E\u003C/abbr\u003E. It held the speed asigned to it in mach and i confirmed the mach number both with the ingame aero data in the gui setting and through atmospheric autopilot. Then i sat down to record the data I needed. Here is a table (oh and since this whole journey started with efficiency I decided it could not hurt to record the fuel consumption as well). I did a little tweaking to the PID parameters mid flight to ensure zero steady state error and also a fast enough response.\u00A0 Here is the raw data:\n\u003C/p\u003E\n\u003Ctable border=\u00221\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022height:20cm;width:500px;\u0022\u003E\n\u003Ccaption\u003E\nRaw experimental data\n\u003C/caption\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth scope=\u0022col\u0022\u003E\nMach\n\u003C/th\u003E\n\u003Cth scope=\u0022col\u0022\u003E\nThrust [kN]\n\u003C/th\u003E\n\u003Cth scope=\u0022col\u0022\u003E\nfuel drain [u/s]\n\u003C/th\u003E\n\u003C/tr\u003E\n\u003C/thead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n1\n\u003C/td\u003E\n\u003Ctd\u003E\n292.2\n\u003C/td\u003E\n\u003Ctd\u003E\n1.372\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n1.2\n\u003C/td\u003E\n\u003Ctd\u003E\n297.6\n\u003C/td\u003E\n\u003Ctd\u003E\n1.487\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n2\n\u003C/td\u003E\n\u003Ctd\u003E\n350.2\n\u003C/td\u003E\n\u003Ctd\u003E\n1.785\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n2.2\n\u003C/td\u003E\n\u003Ctd\u003E\n357.2\n\u003C/td\u003E\n\u003Ctd\u003E\n1.821\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n2.4\n\u003C/td\u003E\n\u003Ctd\u003E\n363\n\u003C/td\u003E\n\u003Ctd\u003E\n1.852\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n2.6\n\u003C/td\u003E\n\u003Ctd\u003E\n368.4\n\u003C/td\u003E\n\u003Ctd\u003E\n1.878\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n2.8\n\u003C/td\u003E\n\u003Ctd\u003E\n371.8\n\u003C/td\u003E\n\u003Ctd\u003E\n1.89\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3\n\u003C/td\u003E\n\u003Ctd\u003E\n375.6\n\u003C/td\u003E\n\u003Ctd\u003E\n1.915\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.1\n\u003C/td\u003E\n\u003Ctd\u003E\n375.4\n\u003C/td\u003E\n\u003Ctd\u003E\n1.914\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.2\n\u003C/td\u003E\n\u003Ctd\u003E\n374.8\n\u003C/td\u003E\n\u003Ctd\u003E\n1.910\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.3\n\u003C/td\u003E\n\u003Ctd\u003E\n374.2\n\u003C/td\u003E\n\u003Ctd\u003E\n1.908\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.4\n\u003C/td\u003E\n\u003Ctd\u003E\n372.8\n\u003C/td\u003E\n\u003Ctd\u003E\n1.901\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.5\n\u003C/td\u003E\n\u003Ctd\u003E\n371.1\n\u003C/td\u003E\n\u003Ctd\u003E\n1.89\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.6\n\u003C/td\u003E\n\u003Ctd\u003E\n368.8\n\u003C/td\u003E\n\u003Ctd\u003E\n1.88\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.7\n\u003C/td\u003E\n\u003Ctd\u003E\n365.8\n\u003C/td\u003E\n\u003Ctd\u003E\n1.865\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.8\n\u003C/td\u003E\n\u003Ctd\u003E\n362.1\n\u003C/td\u003E\n\u003Ctd\u003E\n1.846\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n3.9\n\u003C/td\u003E\n\u003Ctd\u003E\n357.6\n\u003C/td\u003E\n\u003Ctd\u003E\n1.823\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\n4\n\u003C/td\u003E\n\u003Ctd\u003E\n352.0\n\u003C/td\u003E\n\u003Ctd\u003E\n1.795\n\u003C/td\u003E\n\u003C/tr\u003E\n\u003C/tbody\u003E\n\u003C/table\u003E\n\u003Cp\u003E\nI would have sampled higher but this is where my poor slapped together craft reached its maximum velocity and at any rate I had enough data to work with. I took extra readings in the top of that \u0022hump\u0022 to check if it is flat or curved. Something else stood out about this though which became all the more apparent when this data was subsiquently graphed:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u003Cimg alt=\u00220rfqMcE.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002275.00\u0022 height=\u0022420\u0022 width=\u0022560\u0022 src=\u0022https://i.imgur.com/0rfqMcE.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThere seems to be quite a bit of thrust missing from this. In other words we have a mystery multiplier at play somewhere in the code. It is less simple than the equation for thrust I stated near the beginning.\u00A0 That said from the smoothness of this curve especially around the mach 3 region i can at the very least conclude that the interpolation method in the wiki is wrong. To Investigate the thrust discrepency further I decided to plot the theoretical data divided by the experimental data and the result looks as follows:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022GuetKUw.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002281.15\u0022 height=\u0022620\u0022 width=\u0022764\u0022 src=\u0022https://i.imgur.com/GuetKUw.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe results of this show that our mystery multiplier is nonlinear making life difficult. That said I have tracked down the identity of this multiplier. It can be found in a seemingly unrelated spot in the data for the engine. The parameters section for this engine is as follows:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003E// Jet params\natmChangeFlow = True\nuseVelCurve = True\nuseAtmCurve = True\nflowMultCap = 2.0\nmachLimit = 2.5\nmachHeatMult = 6.0\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nCan you spot it? well it may not necessarily be obvious at first glance but looking back on the raw data it is curious that the fuel flow never goes above the \u003Cem\u003EflowMultCap\u003C/em\u003E\u00A0 set by the game. That is because this is our culprit. The specific impulse is tied to both thrust and fuel flow rate. The equation for which looks like this:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003EI\u003Csub\u003Esp\u003C/sub\u003E\u00A0= T * (dm/dt)\u003Csup\u003E-1\u003C/sup\u003E\u00A0*g\u003C/em\u003E\u003Csup\u003E\u003Cem\u003E-1\u003C/em\u003E\u00A0\u003C/sup\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nwhere:\u003Cbr\u003E\n\u003Cem\u003ET\u003C/em\u003E\u00A0 is \u0022thrust\u0022 expressed in newtons,\u003Cbr\u003E\n\u003Cem\u003Edm/dt\u003C/em\u003E is the mass flwo rate of the fuel into the engine expressed in kg/s\u003Cbr\u003E\n\u003Cem\u003Eg\u003C/em\u003E\u00A0 is the gravitational acceleration at the surface (9.81 m/s\u003Csup\u003E2\u003C/sup\u003E)\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe equation for Isp Ties the two values together and since the thrust can\u0027t rise without an increase in fuel flow rate and the fuel flow rate can\u0027t rise due to the limiter the end result is a situatuation where the thrust is effectivly capped at low altitudes. \u00A0Just to show this equation is accurate i am going to take a random set of values (say, @mach 3 ) and confirm the fuel flow rate from the thrust value and I\u003Csub\u003Esp\u003C/sub\u003E:\u003Cbr\u003E\nFor the whiplash at this point\u003Cbr\u003E\nI\u003Csub\u003Esp \u003C/sub\u003E= 4000\u003Cbr\u003E\nT = 375.6 [kN] = 375600 \u00A0[N]\u003Cbr\u003E\nRarranging the equation for the specific impulse gives:\u003Cbr\u003E\n(dm/dt) = T * Isp\u003Csup\u003E-1 \u003C/sup\u003E*g\u003Csup\u003E-1\u00A0\u003C/sup\u003E\u003Cbr\u003E\nsubstituting in the values gives:\u003Cbr\u003E\ndm/dt = 375600 / (4000*9.81) =\u0026gt; (dm/dt)\u003Csub\u003Etheoretical\u003C/sub\u003E = 9.572 [kg/s]\u003Cbr\u003E\nTo convert this to u/s we need to know the density which can be found on the wiki [https://wiki.kerbalspaceprogram.com/wiki/Liquid_fuel] to be 5kg/unit so:\u003Cbr\u003E\n\u00A0 (dm/dt)\u003Csub\u003Etheoretical \u003C/sub\u003E= 9.572 [kg/s] / 5 [kg/u] =\u0026gt; \u00A0(dm/dt)\u003Csub\u003Etheoretical\u003C/sub\u003E \u00A0= 1.9144 [u/s]\u003Cbr\u003E\nthis value is similar to the experimental value:\u003Cbr\u003E\n(dm/dt)\u003Csub\u003Eexperimental \u003C/sub\u003E= 1.9148 [u/s]\u003Cbr\u003E\nThe discrepency in the last digit can be ignored due to me doing this calculation with values with up to 4 significant figures and the limiting value (g) has 3 significant figures. Thus the experimental and theoretical values can be seen as equal and thus the equation works.\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I went in and changed the flowMultCap to a much higher number then the whiplash behaved as expected reaching its full thrust multiplier so it iscertainly the culprit here. When looking at the KSP API [source: \u003Ca href=\u0022https://www.kerbalspaceprogram.com/ksp/api/class_module_engines.html%5D\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.kerbalspaceprogram.com/ksp/api/class_module_engines.html]\u003C/a\u003E the description for this is:\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nfloat ModuleEngines.flowMultCap = float.MaxValue\u003Cbr\u003E\ncap beyond which increases to flow multiplier aren\u0027t fully felt (start to taper off)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis quote does not provide any actual details of how this tapering off multiplier is implemented or how it works in detail. I did a little more digging around this but found no actual answers so this is where this investigation of mine ends for now. \u00A0\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor anybody still reading this i thank you for your time. I also shall ask the question I mentioned at the beginning but never actually asked throughout the entire text. Does anybody how this flowMultCap curve is implemented? maybe you have decompiled the code somewhere and you have it handy and can share? maybe you instantly know from the shape of the functions i have presented? maybe you are a dev and have the actual code infront of you? no matter how any answers to this are appriciated and would also appriciate the feedback to any errors you have seen me make during this investigation.\n\u003C/p\u003E\n\u003Cp\u003E\nThank you for reading.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-02-24T22:32:43Z\u0022 title=\u002202/24/2024 10:32  PM\u0022 data-short=\u0022Feb 24\u0022\u003EFebruary 24\u003C/time\u003E by CastleBravoTest\u003C/strong\u003E\n\u003Cbr\u003Eundesired strike through i could not get rid of\u00A8. Further formatting errors\n\u003C/span\u003E\n"},{"CreatedByName":"CastleBravoTest","CreatedById":232767,"CreatedDateTime":"2024-02-24T20:56:31Z","Content":"\n\u003Cp\u003E\ndid a small edit due to formatting issues\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-02-24T21:40:30Z\u0022 title=\u002202/24/2024 09:40  PM\u0022 data-short=\u0022Feb 24\u0022\u003EFebruary 24\u003C/time\u003E by CastleBravoTest\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Lt_Duckweed","CreatedById":201466,"CreatedDateTime":"2024-02-27T21:16:05Z","Content":"\n\u003Cp\u003E\nThe actual trueThrustMult you get once above the flowMultCap is:\n\u003C/p\u003E\n\u003Cp\u003E\ntrueThrustMult = flowMultCap \u002B (thrustMult - flowMultCap) / (flowMultCapSharpness \u002B\u00A0(thrustMult - flowMultCap)/flowMultCap)\n\u003C/p\u003E\n\u003Cp\u003E\nBy default,\u00A0flowMultCapSharpness is 2 and no stock engine has an alternate value\n\u003C/p\u003E\n\u003Cp\u003E\nWorking an example, the Whiplash has a flowMultcap of 2 and the default sharpness of 2.\u00A0 So at a normalized density of 1 (for example, flying at sea level at 30 degrees latitude at \u00223 am\u0022 or 45min after midnight under Kerbin time) at a speed of exactly Mach 3, the supposed thrust mult of 5.8 would get transformed like so:\n\u003C/p\u003E\n\u003Cp\u003E\ntrueThrustMult = 2 \u002B (5.8 - 2) / (2 \u002B (5.8 - 2) / 2) =\u00A02.97\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: As an additional note, the atmCurve is\u00A0\u003Cem\u003Enot\u003C/em\u003E\u00A0based on pressure, but on normalized\u00A0\u003Cem\u003Edensity\u003C/em\u003E, with a normalized value of 1 = 1.225 km/m^3, which is the sea level density under the ISA (International Standard Atmosphere) and occurs at a temperature of 15C.\u00A0 Interestingly, this results in jet engines not providing their full advertised thrust on the runway, as it is significantly warmer than 15C on Kerbin\u0027s equator, and so the atmosphere is less dense.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-02-27T21:53:24Z\u0022 title=\u002202/27/2024 09:53  PM\u0022 data-short=\u0022Feb 27\u0022\u003EFebruary 27\u003C/time\u003E by Lt_Duckweed\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CastleBravoTest","CreatedById":232767,"CreatedDateTime":"2024-02-28T15:35:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224369101\u0022 data-ipsquote-contentid=\u0022223836\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221709068565\u0022 data-ipsquote-userid=\u0022201466\u0022 data-ipsquote-username=\u0022Lt_Duckweed\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, Lt_Duckweed said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe actual trueThrustMult you get once above the flowMultCap is:\n\u003C/p\u003E\n\u003Cp\u003E\ntrueThrustMult = flowMultCap \u002B (thrustMult - flowMultCap) / (flowMultCapSharpness \u002B\u00A0(thrustMult - flowMultCap)/flowMultCap)\n\u003C/p\u003E\n\u003Cp\u003E\nBy default,\u00A0flowMultCapSharpness is 2 and no stock engine has an alternate value\n\u003C/p\u003E\n\u003Cp\u003E\nWorking an example, the Whiplash has a flowMultcap of 2 and the default sharpness of 2.\u00A0 So at a normalized density of 1 (for example, flying at sea level at 30 degrees latitude at \u00223 am\u0022 or 45min after midnight under Kerbin time) at a speed of exactly Mach 3, the supposed thrust mult of 5.8 would get transformed like so:\n\u003C/p\u003E\n\u003Cp\u003E\ntrueThrustMult = 2 \u002B (5.8 - 2) / (2 \u002B (5.8 - 2) / 2) =\u00A02.97\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: As an additional note, the atmCurve is\u00A0\u003Cem\u003Enot\u003C/em\u003E\u00A0based on pressure, but on normalized\u00A0\u003Cem\u003Edensity\u003C/em\u003E, with a normalized value of 1 = 1.225 km/m^3, which is the sea level density under the ISA (International Standard Atmosphere) and occurs at a temperature of 15C.\u00A0 Interestingly, this results in jet engines not providing their full advertised thrust on the runway, as it is significantly warmer than 15C on Kerbin\u0027s equator, and so the atmosphere is less dense.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThank you for your answer and your correction, I have plotted your values with the correction and it is a lot closer that said there is still a slight discrepency.\u00A0 Your equation does not take into account the I\u003Csub\u003Esp\u003C/sub\u003E\u00A0of the engine and I am a bit confused by that. If i were to change the I\u003Csub\u003Esp\u00A0\u003C/sub\u003Eto a very high number wont that mean that my fuel consumption is near zero for the thrust i am getting and thus this clamp should not engage?\u00A0\u003Cbr\u003E\n\u003Cbr\u003E\nThis is that same theoretical data and the corrected value plotted:\u003Cbr\u003E\n\u003Cimg alt=\u0022KtyOyvP.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002281.79\u0022 height=\u0022620\u0022 width=\u0022758\u0022 src=\u0022https://i.imgur.com/KtyOyvP.png\u0022\u003E\u003Cbr\u003E\nWith experimental/theoretical plotted:\u003Cbr\u003E\n\u003Cimg alt=\u00228sFcaU2.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002280.00\u0022 height=\u0022620\u0022 width=\u0022775\u0022 src=\u0022https://i.imgur.com/8sFcaU2.png\u0022\u003E\u003Cbr\u003E\nand with the new thrust-mach curve at these conditions:\u003Cbr\u003E\n\u003Cimg alt=\u0022fwA5255.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002282.34\u0022 height=\u0022620\u0022 width=\u0022753\u0022 src=\u0022https://i.imgur.com/fwA5255.png\u0022\u003E\u003Cbr\u003E\nI am wondering of the discrepency is due to the atmospheric conditions which are near the normalized density of 1 but not quite it or if there is a small error?\u003Cbr\u003E\n\u003Cbr\u003E\nFor completeness here is the matlab code for the thrust (please ignore my poor coding standards):\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003Efunction Thrust = whiplash(M,atmp,tht)\nbaseThrust = 130 ;\n\n% logic checks and input conditioning\nM = abs(M);\nlc = double(M \u0026gt;= 0).*double(M \u0026lt;= 5.5).*double(atmp \u0026gt; 0);\n\n\n\n% velocity curve\nvelCurve = [...\n\t\t    0       1       0               0 ;\n\t\t    0.2     0.98    0               0 ;\n\t\t    0.72    1.716   2.433527        2.433527;\n\t\t    1.36    3.2     1.986082        1.986082;\n\t\t\t2.15    4.9     1.452677        1.452677;\n\t\t\t3       5.8     0.0005786046    0.0005786046;\n\t\t\t4.5     3      -4.279616       -4.279616 ;\n\t\t\t5.5     0      -0.02420209      0];\n\natmCurve = [...\n    \t\t0       0       0           0 ;\n\t\t\t0.045   0.166   4.304647    4.304647 ;\n\t\t\t0.16    0.5     0.5779132   0.5779132 ;\n\t\t\t0.5     0.6     0.4809403   0.4809403 ;\n\t\t    1       1       1.013946    0 ;];\n\n\n% velocity multiplier\nvel_mult = ppval(spline(velCurve(:, 1), [velCurve(1, 3); velCurve(:, 2); velCurve(end, 4)]), M);\n\n% atmospheric multiplier\natm_mult = ppval(spline(atmCurve(:, 1), [atmCurve(1, 3); atmCurve(:, 2); atmCurve(end, 4)]), atmp);\n\n\n\n% thrust multiplier \nThrust_MP = atm_mult.*vel_mult.*tht.*lc ;\nThrust = baseThrust.*tht.*flowmult(2,Thrust_MP) ;\nend\u003C/pre\u003E\n\u003Cp\u003E\nwith the thrust\u00A0 flowmultiplier coded as follows:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E% thrust flow limit logic\nfunction truemult = flowmult(cap,val)\nsharp = 2 ;\ntruemult = cap \u002B (val-cap)./(sharp \u002B (val - cap)./(cap)) ;\nend\u003C/pre\u003E\n\u003Cp\u003E\nall in matlab\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"CastleBravoTest","CreatedById":232767,"CreatedDateTime":"2024-02-28T15:45:53Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224369244\u0022 data-ipsquote-contentid=\u0022223836\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221709134546\u0022 data-ipsquote-userid=\u0022232767\u0022 data-ipsquote-username=\u0022CastleBravoTest\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, CastleBravoTest said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYour equation does not take into account the I\u003Csub\u003Esp\u003C/sub\u003E\u00A0of the engine and I am a bit confused by that. If i were to change the I\u003Csub\u003Esp\u00A0\u003C/sub\u003Eto a very high number wont that mean that my fuel consumption is near zero for the thrust i am getting and thus this clamp should not engage?\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI also just checked that statement by tweaking the I\u003Csub\u003ESP\u003C/sub\u003E to an absurldy large number (100 000 s) and my fuel consumption was predictably near zero but the clamp engaged so i guess it isnt dependent on the fuel flow itself. Strange way to code it\n\u003C/p\u003E\n"},{"CreatedByName":"Lt_Duckweed","CreatedById":201466,"CreatedDateTime":"2024-02-28T18:26:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224369246\u0022 data-ipsquote-contentid=\u0022223836\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221709135153\u0022 data-ipsquote-userid=\u0022232767\u0022 data-ipsquote-username=\u0022CastleBravoTest\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, CastleBravoTest said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI also just checked that statement by tweaking the I\u003Csub\u003ESP\u003C/sub\u003E to an absurldy large number (100 000 s) and my fuel consumption was predictably near zero but the clamp engaged so i guess it isnt dependent on the fuel flow itself. Strange way to code it\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes the the mults and clamps are just dimensionless constants.\u00A0 You start with a value of 1, then take the density and velocity mults and go from there\n\u003C/p\u003E\n"},{"CreatedByName":"CastleBravoTest","CreatedById":232767,"CreatedDateTime":"2024-02-28T19:45:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224369101\u0022 data-ipsquote-contentid=\u0022223836\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221709068565\u0022 data-ipsquote-userid=\u0022201466\u0022 data-ipsquote-username=\u0022Lt_Duckweed\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 hours ago, Lt_Duckweed said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\ntrueThrustMult = flowMultCap \u002B (thrustMult - flowMultCap) / (flowMultCapSharpness \u002B\u00A0(thrustMult - flowMultCap)/flowMultCap)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat said there is still something that is not quite right about that especially at higher altitudes. Here is data at high altitude (somewhere when the clamp should not be engaged):\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022mpz4f5l.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002280.83\u0022 height=\u0022620\u0022 width=\u0022767\u0022 src=\u0022https://i.imgur.com/mpz4f5l.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe error is significant. That said if i were to remove the clamp and plot this all again:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022TdtYmoc.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002280.83\u0022 height=\u0022620\u0022 width=\u0022767\u0022 src=\u0022https://i.imgur.com/TdtYmoc.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHere the data is almost striking. There must be something about that mathematics that we are missing that makes the clamp tend towards 1 at higher altitudes?\n\u003C/p\u003E\n\u003Cp\u003E\nAlso for this data I used a data logger mod that outputs a CSV file.\u00A0 As this file has almost 100 rather poorly formatted rows I shall not post it here for brevity. Furthermore I used the normalized density as you corrected me to do.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"CastleBravoTest","CreatedById":232767,"CreatedDateTime":"2024-03-02T14:20:42Z","Content":"\n\u003Cp\u003E\nI just also noticed that the last two graphs, the lables are back to front. The fashed line is the \u0022theoretical value\u0022\u00A0 and the solid line is the experimental value. The point however remains. If the clamp is a piece of mathematics that is on constantly and in the state presented then the theoretical data does not fit the experimental one. The model is slighly off.\u003Cbr\u003E\n\u003Cbr\u003E\nThis is a computer simulation so the clamp function once all of its details are discovered I would expect to converge almost perfectly with the recorded data.\u003Cbr\u003E\n\u003Cbr\u003E\nBasically this model has some flaws and some more investigation is needed. Perhaps the next step is to decompile the game and see if i can make sense of any of it (i am no expert in computer science so it remains to be seen if i can manage that)\n\u003C/p\u003E\n"}]}