{"TopicId":161318,"ForumId":18,"TopicTitle":"Truly random \u0026quot;software only\u0026quot; number generator (?)","CreatedByName":"Numerlor","CreatedById":174198,"CreatedDateTime":"2017-05-30T18:18:33Z","PageNum":1,"Articles":[{"CreatedByName":"Numerlor","CreatedById":174198,"CreatedDateTime":"2017-05-30T18:18:33Z","Content":"\n\u003Cp\u003E\nThe Idea I got is that some people (or ceratin group) would voluntary install \u0022Keylogger\u0022 But it would work by storing every keystroke in alphabetical order into some kind of text file (Or just writing how many times certain key was pressed)\u00A0and send it after a while, the number generation would be based on count of each letter press from last hour or so (A 60 C 20 etc.). Would this be random?\u003Cbr\u003E\nMaybe after 15 presses of one key it would ignore it (For gaming or spam)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n//It could also have offline version in which you would just smash your keyboard for half a minute and get something\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-03T21:03:17Z\u0022 title=\u002206/03/2017 09:03  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 3, 2017\u003C/time\u003E by Numerlor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pxi","CreatedById":78711,"CreatedDateTime":"2017-05-30T18:36:33Z","Content":"\n\u003Cp\u003E\nWould it be truly random?\u00A0 Not a mathematician but I\u0027d reckon probably not.\u00A0 People use keyboards to type meaningful things that will very frequently feature patterns.\u00A0 Might be better than pseudorandom routines like Mersenne Twister, might be \u0027random enough\u0027 for some applications, but truly random?\u00A0 I\u0027d be interested to hear the input of someone better versed in the subject.\n\u003C/p\u003E\n\u003Cp\u003E\nThe \u0027keylogger\u0027 aspect of it makes it sound extremely unattractive tbh as well... sets off all kinds of \u0027only good things can come of this\u0027 alarms in my head from a security point-of-view.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: also your \u0027anti-spam\u0027 idea might actually reduce the randomness rather than increase it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022tsNeV.jpg\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.stack.imgur.com/tsNeV.jpg\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-05-30T18:41:38Z\u0022 title=\u002205/30/2017 06:41  PM\u0022 data-short=\u00227 yr\u0022\u003EMay 30, 2017\u003C/time\u003E by pxi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Numerlor","CreatedById":174198,"CreatedDateTime":"2017-05-30T18:40:17Z","Content":"\n\u003Cp\u003E\nPatterns are out because of storing it in alphabetical order and then getting those numbers according to number of every keypress from some kind of algorithm (Badly written\u00A0in \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E, changed now)\u003Cbr\u003E\nFor that Keylogger thing, for that it would need to be open source\u00A0(or at least the key logger part) So people can see it isn\u0027t sending everything as you write it\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-05-30T18:50:51Z\u0022 title=\u002205/30/2017 06:50  PM\u0022 data-short=\u00227 yr\u0022\u003EMay 30, 2017\u003C/time\u003E by Numerlor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"IncongruousGoat","CreatedById":157062,"CreatedDateTime":"2017-05-30T18:45:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223073671\u0022 data-ipsquote-contentid=\u0022161318\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221496168313\u0022 data-ipsquote-userid=\u0022174198\u0022 data-ipsquote-username=\u0022Numerlor\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 minutes ago, Numerlor said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe Idea I got is that some people (or ceratin group) would voluntary install \u0022Keylogger\u0022 But it would work by storing every keystroke in alphabetical order into some kind of text file (Or just writing how many times certain key was pressed)\u00A0and send it after a while, the number generation would be based on let\u0027s say last 10 000 letters. Would this be random? and maybe after 15 presses of one key it would ignore it (For gaming or spam)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt wouldn\u0027t be all that random (language is too structured for that), and it sounds horribly impractical compared to existing random number generators. I think I\u0027ll stick with std::rand.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223073697\u0022 data-ipsquote-contentid=\u0022161318\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221496169617\u0022 data-ipsquote-userid=\u0022174198\u0022 data-ipsquote-username=\u0022Numerlor\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Numerlor said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPatterns are out because of storing it in alphabetical order and then getting those numbers according to number of every keypress from some kind of algorithm (Badly written\u00A0in \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E, changed now)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nEven then, it\u0027ll still not be random. Let\u0027s say we\u0027re typing English. If we\u0027re going by number of times each key is pressed, then we\u0027re going to be biased towards \u0027e\u0027 and against \u0027x\u0027. Letter distribution simply isn\u0027t even enough. Plus, a program storing all my keypresses and then sending them over the internet does not sound like a thing I would ever install.\n\u003C/p\u003E\n"},{"CreatedByName":"Numerlor","CreatedById":174198,"CreatedDateTime":"2017-05-30T18:50:41Z","Content":"\n\u003Cp\u003E\nFor letters as X Y Z I\u0027m mainly betting on gamers, I agree that vowels will be leading, might need something from that, implemeting other languages with things like \u017E \u00E4 \u00F4 would be maybe good for something but won\u0027t do much. Might need something for that but now I\u0027m aiming for creditability of main idea\u003Cbr\u003E\nOn that keylogger as I wrote above after you posted this, opensource might solve that\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-05-30T18:51:36Z\u0022 title=\u002205/30/2017 06:51  PM\u0022 data-short=\u00227 yr\u0022\u003EMay 30, 2017\u003C/time\u003E by Numerlor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pxi","CreatedById":78711,"CreatedDateTime":"2017-05-30T18:54:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223073716\u0022 data-ipsquote-contentid=\u0022161318\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221496170241\u0022 data-ipsquote-userid=\u0022174198\u0022 data-ipsquote-username=\u0022Numerlor\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, Numerlor said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOn that keylogger as I wrote above after you posted this, opensource might solve that\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou would be far better probing the hardware for things like cpu temperature etc imo... and then you don\u0027t have to convince people that your keylogger is totally not a security risk.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-05-30T18:56:15Z\u0022 title=\u002205/30/2017 06:56  PM\u0022 data-short=\u00227 yr\u0022\u003EMay 30, 2017\u003C/time\u003E by pxi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Numerlor","CreatedById":174198,"CreatedDateTime":"2017-05-30T18:56:39Z","Content":"\n\u003Cp\u003E\nCpu temp looks to consistent for me and with small usable range, if something from hardware something like number of bytes currently on RAM would be better\n\u003C/p\u003E\n"},{"CreatedByName":"pxi","CreatedById":78711,"CreatedDateTime":"2017-05-30T19:00:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223073727\u0022 data-ipsquote-contentid=\u0022161318\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221496170599\u0022 data-ipsquote-userid=\u0022174198\u0022 data-ipsquote-username=\u0022Numerlor\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, Numerlor said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCpu temp looks to consistent for me and with small usable range, if something from hardware something like number of bytes currently on RAM would be better\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSome just use coin flips.\n\u003C/p\u003E\n\u003Cp\u003E\nBut yeah, I was only giving a single example - you\u0027d look for as many sources as possible.\n\u003C/p\u003E\n"},{"CreatedByName":"Shpaget","CreatedById":45577,"CreatedDateTime":"2017-05-30T19:21:59Z","Content":"\n\u003Cp\u003E\nSince your software already runs on some hardware, why not use part of that hardware for seed?\n\u003C/p\u003E\n\u003Cp\u003E\nEven if you use pseudo RNG for majority\u00A0of your numbers, every now and then you reseed your RNG\u00A0with a trully random seed and get better overall randomness.\n\u003C/p\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2017-05-31T02:46:27Z","Content":"\n\u003Cp\u003E\nNo.\n\u003C/p\u003E\n\u003Cp\u003E\nAll modern operating systems come with cryptographically secure PRNGs (see\u00A0\u003Ca href=\u0022https://en.wikipedia.org/wiki/CryptGenRandom\u0022 rel=\u0022external nofollow\u0022\u003ECryptGenRandom\u003C/a\u003E and\u00A0\u003Ca href=\u0022https://en.wikipedia.org/wiki//dev/random\u0022 rel=\u0022external nofollow\u0022\u003E/dev/random\u003C/a\u003E\u00A0for details on the main ones). Just use the operating system facility - it\u0027s incredibly unlikely most programmers can do better.\n\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2017-06-01T12:37:40Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223073671\u0022 data-ipsquote-contentid=\u0022161318\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221496168313\u0022 data-ipsquote-userid=\u0022174198\u0022 data-ipsquote-username=\u0022Numerlor\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 30-5-2017 at 8:18 PM, Numerlor said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe Idea I got is that some people (or ceratin group) would voluntary install \u0022Keylogger\u0022 But it would work by storing every keystroke in alphabetical order into some kind of text file (Or just writing how many times certain key was pressed)\u00A0and send it after a while, the number generation would be based on count of each letter press from last hour or so (A 60 C 20 etc.). Would this be random?\u003Cbr\u003E\nMaybe after 15 presses of one key it would ignore it (For gaming or spam)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI am almost certain that, depending on the language, you can make statistical assumptions about the number of keypressen to a scary precision. Keyboard inputs are pretty much the opposite of random and the more key presses you have, the more average the result will be.\n\u003C/p\u003E\n"},{"CreatedByName":"LN400","CreatedById":140595,"CreatedDateTime":"2017-06-01T19:44:10Z","Content":"\n\u003Cp\u003E\nTo put it this way: I don\u0027t think there are\u00A0many ways left to draw statistical data from sensible text, that is text that form meaningful words and phrases, that the intel community hasn\u0027t already studied in depth. They can tell if a garbled text is fake or genuine in that the ungarbled text was meaningful. If you want something truly random then patterns is a no-no. What people type on their keyboards would be full of patterns, over time.\n\u003C/p\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2017-06-01T22:53:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223076155\u0022 data-ipsquote-contentid=\u0022161318\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221496320660\u0022 data-ipsquote-userid=\u002259088\u0022 data-ipsquote-username=\u0022Camacha\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 hours ago, Camacha said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKeyboard inputs are pretty much the opposite of random and the more key presses you have, the more average the result will be.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFor what it\u0027s worth, while the text entered is not reliable, the\u00A0\u003Cem\u003Etime\u003C/em\u003E\u00A0between keystrokes is much better and is frequently used as a source of entropy (for systems that have a keyboard, obvs).\n\u003C/p\u003E\n"},{"CreatedByName":"Benjamin Kerman","CreatedById":172792,"CreatedDateTime":"2017-06-03T19:30:38Z","Content":"\n\u003Cp\u003E\nAs some letters are pressed a lot more often than others (e vs z), you would get a lean towards those numbers...\n\u003C/p\u003E\n"},{"CreatedByName":"Numerlor","CreatedById":174198,"CreatedDateTime":"2017-06-03T21:07:16Z","Content":"\n\u003Cp\u003E\nWel, it could just be counting ones at alphabetical order\u00A0(or random from some kind of seed like \u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/45577-shpaget/\u0026amp;do=hovercard\u0022 data-mentionid=\u002245577\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/45577-shpaget/\u0022 rel=\u0022\u0022\u003E@Shpaget\u003C/a\u003E\u00A0said) and then just take that number\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"cantab","CreatedById":104935,"CreatedDateTime":"2017-06-05T01:57:09Z","Content":"\n\u003Cp\u003E\nWhat you are describing is something operating systems and applications already do. It\u0027s known as collecting \u003Cem\u003Eentropy\u003C/em\u003E, external sources of randomness from the computer\u0027s environment. It\u0027s not truly \u0027software only\u0027, it relies on a hardware source of randomness, just not a \u003Cem\u003Ededicated\u003C/em\u003E source. Mouse movements, keystroke timings, microphone noise, and so on are used. (Recording the letters typed would generally not be very helpful, and security concerns mean it\u0027s better to discard that and just use the keystroke timings). Even if the first number of such a value is quite predictable, the last decimal place is very random.\n\u003C/p\u003E\n\u003Cp\u003E\nThe entropy is then fed into the random number generator. The algorithms need to remove any biases that might be present in the entropy source.\n\u003C/p\u003E\n\u003Cp\u003E\nThe amount of entropy can also be evaluated, and this gives two options. The software can be sure to not produce more numbers than it has bits of entropy to make truly random, which means the numbers are truly random but they might be delayed coming if the entropy source is inadequate. Or the software can \u0027stretch\u0027 the entropy by being a pseudorandom number generator, which means numbers can come as fast as the CPU can calculate but they are not truly random.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example on Linux /dev/random takes the former approach and /dev/urandom takes the latter. For most applications urandom is better.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT PS: Although, an increasingly common approach is to use a dedicated hardware random number generator. Modern CPUs or chipsets typically have one built in, and these usually work by amplifying the thermal or electrical \u0027noise\u0027 present in chips. However not all programs and operating systems make use of them.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT PPS: On Linux I can monitor how many bits of entropy the RNG has. In normal use it\u0027s around 3800 (max is 4096). If I start writing pseudorandom data from /dev/urandom to disk it doesn\u0027t bat an eyelid, copying a gigabyte in a few seconds. If I start writing truly random data from /dev/random to disk the amount of entropy promptly drops to near zero and the speed of the disk writes slows to a crawl, under a kilobyte per minute, as it waits for more entropy to come in.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-05T02:07:08Z\u0022 title=\u002206/05/2017 02:07  AM\u0022 data-short=\u00227 yr\u0022\u003EJune 5, 2017\u003C/time\u003E by cantab\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Kerbart","CreatedById":78303,"CreatedDateTime":"2017-06-05T02:47:48Z","Content":"\n\u003Cp\u003E\nI\u0027m going to assume you have purpose for random numbers or you wouldn\u0027t be going through the trouble that you\u0027re describing. In that case, look at the library of your programming language of choice; there\u0027s usually a module that does what you want (the latest Python releases have a \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Esecrets\u003C/span\u003E module for generating pseudo-random numbers that are \u0022safe\u0022 to use for cryptography, for instance).\n\u003C/p\u003E\n\u003Cp\u003E\nIf you\u0027re looking for more academic purposes (classroom assignment?) consider using a webcam. Set the ISO to high and shutterspeed to fast (a guarantee for lots of noise), use the standard random generator to pick an x,y coordinate, and collect the least significant (noisy) bit from that pixel. Repeat for as many bits as you need. \u00A0Random, simple, no keylogger needed, and fast.\n\u003C/p\u003E\n"},{"CreatedByName":"Benjamin Kerman","CreatedById":172792,"CreatedDateTime":"2017-06-09T18:40:19Z","Content":"\n\u003Cp\u003E\nWhat if you made the RNG have more R by combining a bunch of them together!?!\n\u003C/p\u003E\n"}]}