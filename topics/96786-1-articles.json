{"TopicId":96786,"ForumId":18,"TopicTitle":"Learning to Code Questions","CreatedByName":"NASAHireMe","CreatedById":131205,"CreatedDateTime":"2015-01-15T18:39:20Z","PageNum":1,"Articles":[{"CreatedByName":"NASAHireMe","CreatedById":131205,"CreatedDateTime":"2015-01-15T18:39:20Z","Content":"\n\u003Cp\u003EMy New Year\u0027s resolutions for 2013, 2014, and 2015 were to learn to code. I\u0027ve had a rough going the past three years. I\u0027m reasonably proficient in C\u002B\u002B and HTML (altho I don\u0027t really consider HTML a true \u0027coding\u0027 language), and basic in JavaScript.\u003C/p\u003E\u003Cp\u003EWhat should I do next? Limitations: I\u0027m not going to pay more than $300, so a physical class like General Assembly is out (also, I don\u0027t have a car).\u003C/p\u003E\u003Cp\u003EOnline lessons are great for theory, but more than anything, I need projects. Simple ones (like a basic game), then harder ones, then even harder ones. And I need them to be solved and open and preferably ANNOTATED WITH COMMENTS so that I can check my own progress when I reach a stumbling block. I\u0027ve found that having the source code is useless if it\u0027s not annotated so that a beginner can understand it. Otherwise it\u0027s just as useful as Shakespeare in Yiddish.\u003C/p\u003E\u003Cp\u003EI know that languages are tailored to the task. I guess if I had to stipulate an end objective, it\u0027d be:\u003C/p\u003E\u003Cp\u003E 1) having the ability to generate scripts to automate stuff, do some basic data crunching, etc. Example: script that scans Twitter API and pulls out all tweets with certain words.\u003C/p\u003E\u003Cp\u003E2) make a website tool. Maybe even for KSP. Like if I could replicate AlexMoon\u0027s trajectory optimizer, complete with graph and all, and have it hosted on a website, I\u0027d be extremely satisfied.\u003C/p\u003E\u003Cp\u003ESo, what should I do? Suggestions for languages, projects, resources, books, etc. Should I keep going w/JavaScript and add JQuery (the logical step, and one that is fairly easy to do)? Or should I switch to Python (easy to learn, intuitive, variety of uses)?\u003C/p\u003E\n"},{"CreatedByName":"pxi","CreatedById":78711,"CreatedDateTime":"2015-01-15T20:25:43Z","Content":"\n\u003Cp\u003EI\u0027m in a similar boat, I\u0027ve spent the past 20 or so years learning bits of various languages, starting with ZX Spectrum BASIC and currently sitting at relatively proficient with PHP.\u003C/p\u003E\u003Cp\u003EI know that I want to learn some form of C, but haven\u0027t been able to decide between C, C\u002B\u002B or C#. Frankly, everyone I ask gives me a different answer.\u003C/p\u003E\u003Cp\u003EThe one bit of advice I\u0027ve seen come up again and again is to keep learning different languages - each has it\u0027s own mindset, and will teach you to think about things in a slightly different way. Beyond that, the only thing I can suggest is to just dip your toe into anything that looks interesting, you\u0027ll probably figure out fairly quickly if it clicks with you, and definitely have a goal in mind, otherwise you really won\u0027t get much further than the \u0027hello world\u0027 stage.\u003C/p\u003E\u003Cp\u003EI look forward to reading other opinions on the subject.\u003C/p\u003E\n"}]}