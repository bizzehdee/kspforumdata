{"TopicId":65112,"ForumId":15,"TopicTitle":"Layering more than one texture on a part","CreatedByName":"Paul Kingtiger","CreatedById":57455,"CreatedDateTime":"2014-03-07T17:22:32Z","PageNum":1,"Articles":[{"CreatedByName":"Paul Kingtiger","CreatedById":57455,"CreatedDateTime":"2014-03-07T17:22:32Z","Content":"\n\u003Cp\u003EHello,\u003C/p\u003E\u003Cp\u003EI have a model with a texture and want to create multiple versions with different labels on the texture. I can just create a custom texture for each one but it would be much easier if I could use a base texture file and layer a second texture on top (with transparencies).\u003C/p\u003E\u003Cp\u003EIs this possible using the part.cfg file?\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-03-07T19:10:26Z","Content":"\n\u003Cp\u003EYou can! Kind of but not really.\u003C/p\u003E\u003Cp\u003EOne Mesh can have One Shader, and one Shader can have one texture and up to two maps, bump map, spec map, alpha map, choose no more than 2 and pick the shader to match. This is a limitation of the shaders that we have so new shaders could allow for overlays but we don\u0027t have a shader that does.\u003C/p\u003E\u003Cp\u003EThere are two ways around that and neither is without problems. The way flag overlays work is that you have a separated mesh which initially has no texture and then KSP puts your chosen flag onto that mesh when you launch. KSP has secrets, one of these secrets solves the problem that if you have two mesh very near each other, which you need for the flag to appear over the main mesh, you are more and more likely to experience Z fighting the farther the camera is from it. I don\u0027t know of a way to access KSP\u0027s workaround but it may be possible.\u003C/p\u003E\u003Cp\u003EThe second way is to cut a chunk of your mesh out and replace it with a different mesh; then you can have a smaller texture apply to only that second mesh and change it out as desired. This can seriously complicate the geometry of the mesh and that is the sole reason I have chosen not to use this method for HexCans. It can also be very difficult to match the texel density and infuriatingly difficult to match the actual composition of the texture such that there isn\u0027t an obvious divide on the surface where one texture stops and the other begins.\u003C/p\u003E\u003Cp\u003EIt\u0027s important to weigh costs here. I\u0027ve done the math, 1 1024x1024 texture sheet with no alpha channel that is in PNG format will be loaded into memory as about 4mb, or about 0.5MB. If it\u0027s in MBM format it will be about 5.5mb or 0.6667MB because of mipmaps. At this point it\u0027s difficult to argue that there\u0027s much real savings vs the amount of work. But then, unless you\u0027re able to optimize your UV map to better utilize the removed section of the mesh such that you can reduce the total size of the primary texture map by a half or a quarter, you won\u0027t have saved anything on that sheet. Useless pixels take up just as much space as useful pixels, and alpha channels make everything take up a lot more space. Keep in mind that Unity will round any texture sheet up until it\u0027s X and Y dimensions are each a power of 2, they are allowed to be different powers of two, but if you have a 1025 square sheet, that is going to be treated as a 2048 square sheet.\u003C/p\u003E\u003Cp\u003ESo let\u0027s work with PNG to make the numbers easy; say you cut out a section of mesh but were not able to reduce the size of the texture sheet, and that primary sheet is 1024x1024, or 0.5MB, now let\u0027s say you have ten variations you want to have, so you would have had 10x0.5MB sheets, or 5MB. Now let\u0027s say that you are able to cover your new secondary mesh with a 256x256, or 0.03125MB, and you will need ten of them, so:\u003C/p\u003E\u003Cp\u003E10x0.03125MB=0.3125MB\u003C/p\u003E\u003Cp\u003E0.5MB\u002B0.3125MB=0.8125MB\u003C/p\u003E\u003Cp\u003E5MB-0.8125MB=4.1875MB\u003C/p\u003E\u003Cp\u003EYou have saved 4.1875MB of RAM, or 83.75%. The problem here is magnetudes. 5MB just isn\u0027t very much, and the work you\u0027ll have to do is fiddly and annoying, and depending on your mesh might add hundreds of tris, which is just as insignificant. KSP is able to load about 3.6GB* due to the 32bit restriction, and you\u0027re looking at saving 0.097% of that. Having duplicate sheets is easy; and if you\u0027ve got normalmaps that complicates this math substantially, but if you\u0027re only working with basic texture sheets and the basic shader, this really isn\u0027t worthwhile for you to worry about.\u003C/p\u003E\u003Cp\u003EThere is one additional methodology for you to consider. Single Sheet Multiple Mu, or B9 Method. B9 Aerospace has single texture sheets that have the iconography for multiple versions of the same part, and multiple separate .mu files containing mesh that are geometrically the same, but have differing UV maps, such that this .mu file maps that part of the mesh onto this part of the texture, but this other .mu file maps to a different part. Mesh are cheap. Geometry takes up an incredibly small amount of space both on disk and in memory; so having many mesh is insignificant. You would then use MODELing to change what mesh is used while keeping the texture the same. With this method you would have a single texture sheet so instead of saving 4.1875MB, you save 4.5MB minus whatever the mesh take up.\u003C/p\u003E\u003Cp\u003EAnd now you know everything there is to know!\u003C/p\u003E\u003Cp\u003E(*I\u0027m not particularly confidant in this number)\u003C/p\u003E\n"},{"CreatedByName":"frizzank","CreatedById":57210,"CreatedDateTime":"2014-03-07T20:06:52Z","Content":"\n\u003Cp\u003EEasy way is just multiple textures and then in the config file point the different version to the new texture.\u003C/p\u003E\u003Cp\u003ESomeone should make a plugin that can swap out textures of models in-game..\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-03-07T20:11:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022frizzank\u0022 data-cite=\u0022frizzank\u0022\u003E\u003Cdiv\u003EEasy way is just multiple textures and then in the config file point the different version to the new texture.\u003Cp\u003ESomeone should make a plugin that can swap out textures of models in-game..\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFireSpitter can do that.\u003C/p\u003E\n"},{"CreatedByName":"Paul Kingtiger","CreatedById":57455,"CreatedDateTime":"2014-03-08T12:00:48Z","Content":"\n\u003Cp\u003EThanks for the very detailed reply Greys, the B9 method sounds very interesting and something I might be able to make use of in the future.\u003C/p\u003E\n"}]}