{"TopicId":114910,"ForumId":36,"TopicTitle":"[1.2.1][alpha/WIP] Kerbal Processing Unit \u2014 part models needed!","CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-07-03T03:10:00Z","PageNum":1,"Articles":[{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-07-03T03:10:00Z","Content":"**KPU (Kerbal Processing Unit)** is an automation mod, somewhat like kOS, but the intention is to give it a tech tree progression for career mode. As well as more capable processors, you\u0027ll unlock the various sensors you need to obtain different inputs to your programs.\n\nThe automation language is fairly spartan, with a resemblance to FORTH.\n\nKPU is mainly aimed at RemoteTech users who want to be able to land probes on distant airless bodies like Tylo, in a more realistic way than trial-and-error-and-hit-F9-to-try-again.\n\nIt\u0027s currently a work in progress; most of the actual automation functionality is there, with enough inputs and outputs wired up to support many useful programs. However, because I am Not An Artist, I\u0027ve just copied existing models for the parts I\u0027ve added; PM me if you want to help.\n\n**Source code**\n\n... is on GitHub at [https://github.com/ec429/kpu_mod](https://github.com/ec429/kpu_mod)\n\n**Screenshot**\n\n![kpu_spirit.png](http://jttlov.no-ip.org/img/kpu_spirit.png)\n\n*KPU driving my rover \u0022Spirit-1\u0022 across Duna.*\n\n**Download**\n\n\u003Cu\u003EFor KSP 1.2.1\u003C/u\u003E\n\n[http://jttlov.no-ip.org/tar/kpu-alpha11.zip](http://jttlov.no-ip.org/tar/kpu-alpha11.zip)\n\n**Edited \u003Ctime datetime=\u00222016-11-12T18:51:01Z\u0022 title=\u002211/12/2016 06:51  PM\u0022 data-short=\u00227 yr\u0022\u003ENovember 12, 2016\u003C/time\u003E by soundnfury**\n  \nalpha11 released"},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-07-05T18:42:53Z","Content":"**alpha1 released** - adds a bunch of new inputs, mainly from the Kerbin Navigational System parts, several new outputs, and a few fixes/improvements.\n\nDownload link in the OP.\n\nAn example of a program made possible by this version is the following automatic launch to LKO:\n\n    IF OR \u003C orbApoapsis 72000 AND \u003E longitude \u002B orbPeriapsisLongitude 176~ \u003C orbPeriapsis 70500 THEN @throttle.incr 400ON \u003C vesselTmr 0.1 DO @stage.set trueON \u003C altitude 1000 DO @orient.set , 90 84ON \u003E altitude 1000 DO @orient.set srfProgradeON \u003E altitude 30000 DO @orient.set orbProgradeIF AND \u003E orbApoapsis 72000 OR \u003C longitude \u002B orbPeriapsisLongitude 176~ \u003E orbPeriapsis 70500 THEN @throttle.decr 400ON \u003E altitude 70000 DO ; @solarPanels.set true @rtAntennas.set true\n\nWith a suitable vessel on the launchpad, running the above program will fly it all the way up to an orbit clear of Kerbin\u0027s atmosphere with no user input!\n\nRequires the KNS or LORAN part for the inputs, and a KE-7 KPU.\n\n**Edited \u003Ctime datetime=\u00222015-07-05T19:38:06Z\u0022 title=\u002207/05/2015 07:38  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 5, 2015\u003C/time\u003E by soundnfury**"},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-07-06T21:50:14Z","Content":"**alpha2 released** - adds inputs and outputs for rovers, latches (single-bit registers for stateful code) and error trapping (so you can put your spacecraft into a \u0027safe mode\u0027 if anything goes wrong).\n\nUpdated download link in the OP."},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-07-19T11:55:41Z","Content":"**alpha3 released** - adds hibernation (because that Kelliot KE-7 really does draw a lot of electricCharge) and timers.\n\nUpdated download link in the OP."},{"CreatedByName":"YauS","CreatedById":88039,"CreatedDateTime":"2015-07-20T11:59:11Z","Content":"I think the syntax is hardly to understand. Could you give me an introduction?"},{"CreatedByName":"SnowWhite","CreatedById":121477,"CreatedDateTime":"2015-07-20T12:10:59Z","Content":"What kind of models do you need? I can help you with it."},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-07-20T20:33:29Z","Content":"\u003E \n\u003E \n\u003E YauS said:\n\u003E \n\u003E \n\u003E I think the syntax is hardly to understand.\n\u003E \n\nYes. Yes it is.\n\n\u003E \n\u003E \n\u003E Quote\n\u003E \n\u003E \n\u003E Could you give me an introduction?\n\u003E \n\nI\u0027ll try.\n\nOk so there\u0027s two layers of the syntax, statement and expression. The statement has one of three forms:\n\n    ON expression DO expression\n    IF expression THEN expression\n    ON expression HIBERNATE expression\n\n(There\u0027s also a fourth form, the comment - any line starting with # is a comment.)\n\nON/DO means \u0022whenever the first expression becomes true (i.e. on a positive edge), execute the second expression\u0022.\n\nIF/THEN means \u0022as long as the first expression is true, keep doing the second expression\u0022.\n\nON/HIBERNATE means \u0022on a positive edge of the first expression, put the processor into hibernation until the second expression becomes true\u0022.\n\nThe expressions are a bit more complicated; they\u0027re based on \u0027Prefix Notation\u0027. Conventional syntax is what\u0027s called \u0027Infix Notation\u0027, where the operator goes in between its two operands. The downside of this is that it requires operator precedence rules and brackets to disambiguate the syntax tree. Prefix Notation is much simpler to parse: the operator goes first, followed by the operands. So instead of \u00221 \u002B 2\u0022, we write \u0022\u002B 1 2\u0022; instead of \u0022(1 \u002B 2) \\* 3\u0022 we write \u0022\\* \u002B 1 2 3\u0022.\n\nParsing relies on the knowledge of how many operands each operator takes, and is essentially stack-based. So to parse \u0022\\* \u002B 1 2 3\u0022, we read from the left with an initially empty stack. We first encounter a **\\***, it\u0027s an operator so we put it on the stack. Now we come to **\u002B**, another operator so we push that to the stack too. Next is a **1**, that\u0027s the first operand to the **\u002B**, and we push it. At this point our stack holds **\\* \u002B 1**. Now we encounter a **2**, and we have enough operands to evaluate, **\u002B 1 2** becomes 1\u002B2=3, our stack is **\\* 3**. Lastly we read a **3**, we can evaluate **\\* 3 3** as 9.\n\n(In practice that\u0027s not how the implementation does it, it stores the abstract syntax tree for various reasons. But it\u0027s a useful mental model.)\n\nAs well as the usual arithmetic operators and numeric literals, we have comparison operators \u2014 \u0022\u003C 1 2\u0022 is true while \u0022\u003E 1 2\u0022 is false \u2014 and identifiers, which name inputs (like srfHeight), outputs (like wheelMotors), and also the boolean constants \u0022true\u0022 and \u0022false\u0022. The logical operators **AND** and **OR** short-circuit, i.e. the second operand will only be evaluated if needed. So in \u0022AND false true\u0022, the \u0022true\u0022 will never be evaluated because anything ANDed with false is false.\n\nThe handling of output actions is another place where things get a little weird, as we have four more operators: at (**@**), semi (**;**), comma (**,**) and dot (**.**). At and dot are used together, to construct an action: \u0022@*identifier*.*method* *value*\u0022 means \u0022run *method* on *identifier* with argument *value*\u0022. So for instance \u0022@throttle.set 100\u0022 means \u0022set the throttle to 100%\u0022.\n\nSemi is used to concatenate multiple actions; because it\u0027s a prefix operator it looks a bit weird. If you have *n* actions, you will need to prefix them with *n*-1 semis. (Formally, it takes two expressions, evaluates both of them, and returns a value of void type.)\n\nComma is somewhat similar, concatenating multiple values into a list. This is currently only needed for orienting to a fixed heading/pitch, e.g. \u0022@orient.set , 90 84\u0022 which means \u0022point the rocket 6\u00B0 eastwards of vertical\u0022.\n\nOne last weirdness is the built-in angle type. Some input values (such as srfHeading or orbPeriapsisLongitude) have type \u0027angle\u0027 rather than \u0027double\u0027, as does any numeric literal ending in **~** (chosen because it\u0027s easier to type than \u00B0). Arithmetic on these is performed modulo 360, and the **\u003C** and **\u003E** operators work according to the shortest path, so for example 0\u00B0 is less than 90\u00B0 but greater than 270\u00B0. These can be coerced to \u0027double\u0027 by arithmetic with a \u0027double\u0027 type, so \u0022\u002B 0 90~\u0022 is 90 rather than 90~.\n\nFor an example, here is a line from my rover program:\n\n    IF \u003C - srfHeading 30~ 180 THEN @wheelSteering.set * 5 \u002B 0 - srfHeading 30~\n\nTranslated into pseudocode, this reads:\n\n    IF (srfHeading - 30\u00B0) \u003C 180 THEN set wheelSteering to 5 * (srfHeading - 30\u00B0)\n\nexcept that the addition of 0 to (srfHeading - 30\u00B0) converts it to a double.\n\nHopefully that\u0027s at least somewhat clear...\n\n**Edited \u003Ctime datetime=\u00222016-03-18T18:35:36Z\u0022 title=\u002203/18/2016 06:35  PM\u0022 data-short=\u00228 yr\u0022\u003EMarch 18, 2016\u003C/time\u003E by soundnfury**\n  \nFix up Unicode borkage from the forum migration"},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-07-20T21:03:46Z","Content":"\u003E \n\u003E What kind of models do you need? I can help you with it.\n\nThe list of parts desired is in [https://raw.githubusercontent.com/ec429/kpu_mod/master/roadmap](https://raw.githubusercontent.com/ec429/kpu_mod/master/roadmap); the most urgent ones are probably those that already have part cfgs:\n\n- Kelliot 4040: I\u0027m thinking something like a circuit board with some chips and LEDs on it. Bonus points if you can make them flash in random-seeming patterns.\n- Kelliot KE-7: probably something rather like the ER-7500 model I\u0027m using currently: old-timey computer bits like tapes, blinkenlights, relays, valves (tubes), maybe even some [core memory](https://en.wikipedia.org/wiki/Magnetic-core_memory).\n- PB FS-RA: maybe a little radar dish rotating on a spindle.\n- Kybernetics KNS: some sort of radio aerial. Maybe a [yagi](https://en.wikipedia.org/wiki/Yagi-Uda_antenna) just for the sheer incongruity of it.\n- KI \u0022Loran\u0022: like the KNS only more so. Perhaps a stacked yagi.\n\nFor more information on star trackers and stellar compasses, see [yarchive](http://yarchive.net/space/spacecraft/star_tracker.html); in fact the whole [category](http://yarchive.net/space/index.html) is a treasure trove of space-related information."},{"CreatedByName":"Overjay","CreatedById":104131,"CreatedDateTime":"2015-07-26T09:37:37Z","Content":"this actually looks promising, subscribed for moar"},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-08-15T01:56:28Z","Content":"**alpha4 released** - adds integration with [my new **kappa-ray** mod](https://forum.kerbalspaceprogram.com/threads/131575) - now radiation can cause your kpu to glitch! If you don\u0027t want that, download the -nokappa version.\n\nUpdated download link in the OP."},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-08-30T16:50:30Z","Content":"**alpha5 released** - adds a bunch of new sensor parts, agencies and flags for the manufacturers (I particularly like [the Kerbal Instruments logo](https://raw.githubusercontent.com/ec429/kpu_mod/master/GameData/KPU/Agencies/Flags/KI.png)), fixes sunDegrees handling (for PIR sensors), implements resolution for customHP[R] Orientation sensors, alters throttle handling to allow RemoteTech to run maneuvers while the KPU is running\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\n\nUpdated download link in the OP."},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-10-02T03:51:41Z","Content":"**alpha6 released** - bug fixes, new parts (still no models ![:(](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif)), and now built against KSP 1.0.4!\n\n(Main reason for release is fixes \u0026 updates to kappa-ray.)"},{"CreatedByName":"LORDPrometheus","CreatedById":61414,"CreatedDateTime":"2015-10-02T07:09:24Z","Content":"\u003E \n\u003E **alpha6 released** - bug fixes, new parts (still no models ![:(](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif)), and now built against KSP 1.0.4!\n\u003E (Main reason for release is fixes \u0026 updates to kappa-ray.)\n\nWhat sort of models are you looking for like descrive what you want and give me size parameters and I can probably get something put together before long"},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-10-02T21:55:31Z","Content":"\u003E \n\u003E What sort of models are you looking for like descrive what you want and give me size parameters and I can probably get something put together before long\n\nSee my [earlier post](https://forum.kerbalspaceprogram.com/threads/127585-1-0-4-alpha-WIP-Kerbal-Processing-Unit-%E2%80%94-part-models-needed%21?p=2091848\u0026viewfull=1#post2091848) for some good parts to start with.\n\nSize-wise, most of the sensors want to be on the same sort of scale as stock science parts like the seismometer and gravioli box (hence why I\u0027ve chosen those parts for a lot of the placeholders). The processors should be slightly bigger; again, the placeholder parts are the right order of magnitude, except that the LITHP-M probably wants to be a bit bigger, like the KE-7 is. Everything (except the Inertial Platform) wants to be surface-attach, like the placeholders are.\n\nFor some of the parts that aren\u0027t mentioned in my earlier post:\n\n- 8080 KPU: like the 4040 but with more components and a blue PCB.\n- Mk1 Eyeball: a ball-shaped camera.\n- \u0022Spot\u0022 PIR: a camera with a hooded lens.\n- The various star trackers / stellar compasses: small cameras on pivots / gimbals, maybe clusters of these to point in different directions. Ideally animated to pivot around jerkily as they \u0027sight\u0027 on different stars.\n- Inertial Platform: actually it really *should* look quite similar to reaction wheels. Probably just re-texture it a bit to distinguish it?\n\nBut these are really just suggestions; I don\u0027t have strong ideas or opinions on what the parts should look like. You might prefer just to read the part descriptions and interpret them creatively. (I don\u0027t know what a typical modelling workflow is like, or how precise the requirements need to be.)"},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-11-08T05:01:53Z","Content":"**alpha7 released** - adds a \u0027library\u0027 where you can save programs \u0026 re-use them on other probes. It displays the \u0027system requirements\u0027 (processor capabilities, IMEM, inputs used) of each program, colour-coded to indicate whether the current vessel supports it.\n\nSaved programs are local to a savegame. There are two explanations for this:\n\n(i) the practical reason. It\u0027s much easier to implement this way as I can just save everything in a Scenario node\n\n(ii) the in-universe justification. The accumulated collection of debugged and tested programs is part of your Space Program\u0027s technological base; other Space Programs shouldn\u0027t be allowed to steal it!\n\nUpdated download link in the OP."},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2015-11-12T06:01:29Z","Content":"**alpha8 released** - minor bugfixes and rebuilt against KSP 1.0.5.\n\nUpdated download link in the OP."},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2016-05-31T21:39:48Z","Content":"**alpha9 released** - ported to KSP 1.1.x, improved the Library\u0027s determination of used inputs, other small fixes.\n\nUpdated download link in the OP."},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2016-11-12T05:17:22Z","Content":"**alpha10 released** - ported to KSP 1.2.1, ripped out kappa-ray integration, and improved my build setup a little bit."},{"CreatedByName":"Deimos Rast","CreatedById":157420,"CreatedDateTime":"2016-11-12T06:31:37Z","Content":"\u003E \n\u003E \n\u003E 1 hour ago, soundnfury said:\n\u003E \n\u003E \n\u003E **alpha10 released** - ported to KSP 1.2.1, ripped out kappa-ray integration, and improved my build setup a little bit.\n\u003E \n\nlatest \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E is 2.7.3 btw.\n\nIs all the documentation in the readme (which is quite a readme by the way!)?"},{"CreatedByName":"soundnfury","CreatedById":147370,"CreatedDateTime":"2016-11-12T19:08:13Z","Content":"**alpha11 released** - adds support for IPIs (Inter-Processor Interrupts) allowing multiple KPU processors on a vessel to work together.\n\n\u003E \n\u003E \n\u003E 12 hours ago, Deimos Rast said:\n\u003E \n\u003E \n\u003E Is all the documentation in the readme (which is quite a readme by the way!)?\n\u003E \n\nYeah, the readme should cover everything.  There\u0027s also a bit of a language tutorial [upthread](https://forum.kerbalspaceprogram.com/index.php?/topic/114910-121alphawip-kerbal-processing-unit-%E2%80%94-part-models-needed/\u0026do=findComment\u0026comment=2075479), for those not fluent in BNF syntax descriptions."}]}