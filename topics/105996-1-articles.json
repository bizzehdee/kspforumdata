{"TopicId":105996,"ForumId":29,"TopicTitle":"KSP 1.0 ISP Engine Values","CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-04-29T14:54:56Z","PageNum":1,"Articles":[{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-04-29T14:54:56Z","Content":"\n\u003Cp\u003EAlright. With KSP 1.0 having hit, does anyone have any details on how to get engine parameters now?\u003C/p\u003E\u003Cp\u003EThe specific parameter that prompted this question is ModuleEngines.maxThrust\u003C/p\u003E\u003Cp\u003EIn KSP .90 this was a KSPField that had the Max Thrust of an engine at 100% throttle. (Mainsail always reported 1500 thrust for this value.)\u003C/p\u003E\u003Cp\u003EIn KSP 1.0 I have no clue what this field means. It is no longer a KSPField and it always reports a value of 1376 for the mainsail, both on the pad at KSC and in orbit.\u003C/p\u003E\u003Cp\u003EI did find the .finalThrust value which appears to be current thrust of the engine as displayed on the part right-click menu but that\u0027s it, anything else continues to escape me.\u003C/p\u003E\u003Cp\u003ENow, I think that in theory I can take the .finalThrust and divide it by the .actualThrottle to get what my thrust should be at 100% throttle, but that seems a very clunky way to be doing this. (.actualThrottle is the current throttle, .requestedThrottle being the current throttle setpoint, these two values can differ due to spooling lag time.)\u003C/p\u003E\u003Cp\u003EAnyone have any thoughts?\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-04-29T15:55:54Z","Content":"\n\u003Cp\u003EYou get ISP from the atmosphereCurve. Thrust from the maxFuelFlow using other values. KER has all the math for you \u003Ca href=\u0022https://github.com/CYBUTEK/KerbalEngineer/blob/master/KerbalEngineer/VesselSimulator/EngineSim.cs#L69-L90\u0022 rel=\u0022external nofollow\u0022\u003Edone cleanly\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-04-30T01:31:16Z","Content":"\n\u003Cp\u003EOkay.\u003C/p\u003E\u003Cp\u003EWhile the KER stuff is exactly the math I am looking for, the actual method I want to use is ModuleEngines.GetEngineThrust().\u003C/p\u003E\u003Cp\u003EHowever, that is a protected method so I can\u0027t access it. :/\u003C/p\u003E\u003Cp\u003ETherefore I\u0027m going to go with ModuleEngines.finalThrust / ModuleEngines.currentThrottle to get max thrust. \u003C/p\u003E\u003Cp\u003ENot the exact way to do it, but close enough and it\u0027s only one line of code as opposed to several to re-do the math myself.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003Cp\u003Eedit: Blah, that doesn\u0027t work. Throttle off (so zero) throws a NaN which screws everything up, guess I\u0027m doing the math.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-30T01:42:07Z\u0022 title=\u002204/30/2015 01:42  AM\u0022 data-short=\u00229 yr\u0022\u003EApril 30, 2015\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Flip665","CreatedById":104032,"CreatedDateTime":"2015-04-30T03:20:30Z","Content":"\n\u003Cp\u003Ebeen experimenting with this... seems \u0027max thrust\u0027 is your in atmosphere value and your vacuum value is determined in relation to your isp value and the \u0027third key\u0027 (previously there were key 0=vacuum isp and key 1=atmosphere isp)\u003C/p\u003E\u003Cp\u003Eexample i tried to alter the ion engine to better isp and slightly higher thrust of 12000 and 10 respectively(i edit almost all of it because my laptop cant handle 300 part ships, 200 for that matter)\u003C/p\u003E\u003Cp\u003Eanyway i went into game and my ion had 1200 vac thrust...\u003C/p\u003E\u003Cp\u003Ethis is when i noticed the third key... it had a value of... key 1.2 .0001 or something to that effect... i changed it to key 1.2 .0002 and the vac thrust changed to 120 ... so i dont got the correlation nailed down yet but thats my two cents...\u003C/p\u003E\n"},{"CreatedByName":"NecroBones","CreatedById":105424,"CreatedDateTime":"2015-04-30T03:32:09Z","Content":"\n\u003Cp\u003EWithin the CFGs, the \u0022Max Thrust\u0022 is now the \u003Cem\u003EASL thrust\u003C/em\u003E, rather than \u003Cem\u003EVAC thrust\u003C/em\u003E. For instance the Mainsail still has 1500 VAC thrust, just as before, but the CFG value is now \u003Cstrong\u003E1379.032258\u003C/strong\u003E, which is simply \u003Cstrong\u003E1500 * 285 / 310\u003C/strong\u003E, or \u003Cem\u003E(VacThrust * ISP[1atm] / ISP[0atm])\u003C/em\u003E.\u003C/p\u003E\n"},{"CreatedByName":"Flip665","CreatedById":104032,"CreatedDateTime":"2015-04-30T03:44:20Z","Content":"\n\u003Cp\u003Eso whats the third isp key? key 1 key 0 key X 0.001 (x because they all seem to be different)\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-04-30T04:02:36Z","Content":"\n\u003Cp\u003EOkay, this is actually kind of ugly.\u003C/p\u003E\u003Cp\u003EThe actual max thrust of an engine is as follows:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EModuleEngines.maxFuelFlow * ModuleEngines.g * ModuleEngines.atmosphereCurve.Evaluate((float)(ModuleEngines.vessel.staticPressurekPa * PhysicsGlobals.KpaToAtmospheres)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that this code returns 100% throttle, you have to modify the .maxFuelFlow value for other throttle settings.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure what ModuleEngines.g does, but the math needs it. (Thank you KER for that tidbit, I am aware I don\u0027t fully understand the math around ISP.)\u003C/p\u003E\u003Cp\u003EThe .atmosphereCurve.Evaluate requires the current pressure in Atmospheres so the math there converts from kPa to Atm.\u003C/p\u003E\u003Cp\u003ESo ya, the correct way to do it. A lot messier then it used to be, but not horrendous either.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003Cp\u003Eedit: The third key in the part.cfg files is how fast ISP drop off in higher pressures. \u003C/p\u003E\u003Cp\u003EKey 0 is the vaccumm ISP\u003C/p\u003E\u003Cp\u003EKey 1 is the 1 Atm ISP (KSP launch pad.)\u003C/p\u003E\u003Cp\u003EKey 9 is the ISP at 9 Atm of pressure, it\u0027s mostly linear between Key 1 and this I believe. (Mainsail has a Key 9 0.001 value in there.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-30T04:05:48Z\u0022 title=\u002204/30/2015 04:05  AM\u0022 data-short=\u00229 yr\u0022\u003EApril 30, 2015\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Flip665","CreatedById":104032,"CreatedDateTime":"2015-04-30T04:32:54Z","Content":"\n\u003Cp\u003Ethanks makes some sense is your quoted code line from ker... (im assuming kerbal engineer)\u003C/p\u003E\u003Cp\u003Ei dont use it im just trying to change values in cfg files and i dont recognize it.... the vac thrust * key1 isp / key0 isp =max thrust is working for me... now to figure out how to make my ion not need 152 electric a minute lol...\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-04-30T16:35:34Z","Content":"\n\u003Cp\u003EHas anyone figured heatProduction yet? In .90 I could scale it to give scaled engines the same overheating behavior as the original size. Now KSP ignores the scaling, just like maxThrust. For maxThrust the solution was to scale maxFuelFlow instead. Is there a similar change for heat? \u003C/p\u003E\u003Cp\u003EDo the values make sense to anyone? Without scaling, large engines heat up faster and further, to the point that a 5m basic jet will explode on the pad when running long enough at full thrust. So it seems like a relative quantity. Still the value seems to go up for larger engines, though there is no obvious pattern (Ant=8, skipper=306, mainsail=180, KR-2L=70).\u003C/p\u003E\n"},{"CreatedByName":"WissNX01","CreatedById":118195,"CreatedDateTime":"2015-04-30T19:51:06Z","Content":"\n\u003Cp\u003ESo, is there anyway to increase the ISP without it affecting the thrust?\u003C/p\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2015-04-30T19:53:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022WissNX01\u0022 data-cite=\u0022WissNX01\u0022\u003E\u003Cdiv\u003ESo, is there anyway to increase the ISP without it affecting the thrust?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EReduce the fuel consumption.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-05-01T02:14:52Z","Content":"\n\u003Cp\u003EheatProduction is now scaled by the part\u0027s thermal mass (as well as the internal generation factor). So assuming the latter is 1 (it\u0027s not, it\u0027s something like 0.03) then heatProduction=1 literally means \u0022this engine produces enough heat per second to raise its temperature 1 K per second\u0022.\u003C/p\u003E\u003Cp\u003EYet increasing 0.02t of mass 1K means waaaaay less energy than increasing 6t of Mainsail. And that heat (the energy, not the temperature) conducts outward.\u003C/p\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-05-01T09:13:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EI\u0027m not sure what ModuleEngines.g does, but the math needs it. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is most likely the GravityConstant which is 9.80665\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-05-01T09:41:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EheatProduction is now scaled by the part\u0027s thermal mass (as well as the internal generation factor). So assuming the latter is 1 (it\u0027s not, it\u0027s something like 0.03) then heatProduction=1 literally means \u0022this engine produces enough heat per second to raise its temperature 1 K per second\u0022.\u003Cp\u003EYet increasing 0.02t of mass 1K means waaaaay less energy than increasing 6t of Mainsail. And that heat (the energy, not the temperature) conducts outward.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh so this is why large engines (which tend to have high TWR) usually have large heatProduction. Now this starts to make sense. \u003C/p\u003E\u003Cp\u003ESo scaled engines (with preserved TWR) should all start heating up at the same speed. When some heat is built up, small parts should emit their heat more easily (more surface/mass), so large ones get hotter. This might explain what I see for TweakScaled engines.\u003C/p\u003E\n"},{"CreatedByName":"Flip665","CreatedById":104032,"CreatedDateTime":"2015-06-27T23:41:44Z","Content":"\n\u003Cp\u003Euse formula vacuum thrust x atmosphere isp(1) / vacuum isp (0) = max thrust... just reverse engineer the problem so that vac and max thrust remain the same...\u003C/p\u003E\u003Cp\u003Eexample vac thrust(100) x atm isp(100) / vac isp(100) = max thrust 100\u003C/p\u003E\u003Cp\u003Eor vac thrust(100) x atm isp(1000) / vac isp(1000) = max thrust 100\u003C/p\u003E\u003Cp\u003Egets tricky when vac thrust or isp is greater than atm thrust or isp\u003C/p\u003E\n"}]}