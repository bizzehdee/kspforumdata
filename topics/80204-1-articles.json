{"TopicId":80204,"ForumId":16,"TopicTitle":"Ever wondered why satellite networks seem to drift so readily?","CreatedByName":"MisterFister","CreatedById":85686,"CreatedDateTime":"2014-07-31T03:29:43Z","PageNum":1,"Articles":[{"CreatedByName":"MisterFister","CreatedById":85686,"CreatedDateTime":"2014-07-31T03:29:43Z","Content":"\n\u003Cp\u003EThis is not intended as a how-to on setting up satellite networks (for example, comsat constellations for RemoteTech) as that is addressed in countless other threads. This is an explanation of why \u003Cem\u003Emaintaining\u003C/em\u003E those multiple overlapping orbits can become such a headache on older career saves, with satellites falling out of phase with each other and multiple satellites / stations \u0022bunching up\u0022 resulting in coverage gaps that might not have been there when you first set them up. Many people are surprised by this, and often, the discussions of how this happens to begin with ends up involving comparisons between GSO (Geostationary Orbit, which refers to real-world space technology [since \u0022geo-\u0022 is a word prefix that specifically means Earth, as in the actual planet -- if it\u0027s not actually the planet Earth you\u0027re talking about, the prefix \u0022geo-\u0022 isn\u0027t appropriate]) and KSO (KeoSationary Orbit, since \u0022keo-\u0022 refers to Kerbin). *\u003C/p\u003E\u003Cp\u003EFirst, it\u0027s true that real world GSO satellites drift and have to consume fuel for stationkeeping purposes to counteract this over their operational lifetimes. I highly recommend the wikipedia pages for this topic, and I specifically refer you to mentions of \u0022graveyard orbits.\u0022 Generally, real world orbit perturbations result from myriad underlying causes: including faintly off-kilter insertion calculations to begin with; fuel impurities (resulting in slightly-less-than-optimal thrust vectors, and burn times being minisculely off-mark;) and other n-body outside gravitational influences. Over extended periods for extremely accuracy-sensitive satellites, influences such as the moon\u0027s orbit, solar activity, and minute irregularities in Earth\u0027s own gravity well can interfere with orbit calculation (resulting from variations in the distribution of mass in the Earth\u0027s liquid or semisolid mantle, and unequal distribution of mass means an unequal distribution of gravity, which means that the gravity well is not a perfect sphere to begin with.) Also, there is something called insterstellar and interplanetary drag, such as that from the cumulative slowdown you get from floating through faint dust clouds and debris stemming from Keppler Syndrome; as well as naturally occurring events such as the Leonid; or even the cumulative drag effect of the \u0022solar wind,\u0022 which is literally the result of being constantly bombarded with countless photons from the sun\u0027s light and radiation (photons and other subatomic particles are funny things, but they do have mass, even though that mass is very small -- if you keep getting slammed with them at the speed of light for long enough, they WILL eventually send you off course.)\u003C/p\u003E\u003Cp\u003EObviously, since KSP is a game, the Unity engine is not designed to (nor could it ever) faithfully model every single one of those conditions in an n-body-type system, though there have been mentions by people like Scott Manley that people are trying to make it happen anyway. Indeed, in KSO all SOIs (Spheres of [gravitational] Influence) are perfectly spherical, because each planet\u0027s mass is perfectly uniformly distributed, resulting in a perfectly spherical and uniform featureless gravity well. For example, there is no such thing as Lagrange points in this game. Further, all fuel in this game is uniformly pure, as another example -- you don\u0027t have to worry in KSP about suboptimal burn times due to poor fuel mixtures unless you have a mod that specifically introduces that level of complexity. Despite all of these differences between real world orbital environments and KSP, however, there are three big items that can interfere with orbital maintenance (one is an obvious issue, and there are two others that are perhaps more subtle.)\u003C/p\u003E\u003Cp\u003EThe obvious issue is human input, just as with real world scenarios. In this game, even if you design and plan your maneuver nodes well (which even then is not entirely sufficient for the accuracy we would like, due to the two subtle reasons below) it\u0027s still necessary to \u003Cem\u003Eaim and burn them\u003C/em\u003E well, too. Good form, good practice, and good fuel efficiency on maneuver nodes begins with good calculations when designing your craft in the VAB / SPH. Good practice continues beyond the design phase to then include the practice of dividing your total burn time evenly across the node point (for example, a sixty second burn should hypothetically begin exactly 30.00s BEFORE the designated time, and end exactly 30.00s AFTER, though with the fraction of a second it takes to actually go from zero to full throttle, this is never mathematically possible without leaving your throttle maxed and controlling them by toggling the engine on and off at the correct times) and accurately following the blue node indicator on your navball. The blue node indicator is another key item of good orbital planning in this game. especially since it\u0027s so impossible to be picture-perfect on the craft-design, maneuver-node design, and maneuver-burn elements -- when you are down to the last few m/s of burn, it\u0027s generally a good idea in this game to lower your throttle, puff those final m/s out, and actually follow the drifting node marker on your navball whenever possible, since the location of the marker DOES calculate your new trajectory live by applying any burn imperfections into the original node calculations (and it does so by pretty-accurately recalculating the actual m/s needed to get your final intended course change.) Generally, everything I\u0027ve said so far makes an immediate sort of sense, when it\u0027s laid out clearly here or in other how-to posts on the forum.\u003C/p\u003E\u003Cp\u003EThe two other reasons why KSO** orbits (or any orbital arrangement, for that matter) drift into disarray the way they tend to do are much less obvious, however. First, we can agree that the actual math (advanced three-dimensional conic calculus) that goes into figuring and plotting (and subsequently simulating and rendering) any non-linear path, either through real world space or through KSP space, is highly complex, with numbers that usually have unending decimal places out to 10^(-200) or even further. Simply put, in order to \u0022work,\u0022 the KSP game engine at some point is forced to say \u0022meh, that\u0027s close enough\u0022 and stop calculating past the umpteenth decimal place and just fly with that. Those rounding errors, particularly when projected forward over simulated lapses of time acceleration, become significant -- ESPECIALLY in a situation like yours where you probably have multiple satellites involved, and one realizes that you can run the same calculation a hundred times, and round it the \u0022same way\u0022 each of those hundred times, and little eensy-teensy math discrepancies become more and more noticeable between iterations of the same satellite, the same launch, the same orbital insertion, but with minute and subtle differences in burn accuracy and launch efficiency, etc.\u003C/p\u003E\u003Cp\u003EAs if all of that wasn\u0027t enough, there\u0027s also the third fact that when actually coming into and out of time compression, and when OTHER craft in your savefile change SOIs, all of those calculations are reset and recomputed \u003Cstrong\u003Eand re-rounded anew, from scratch\u003C/strong\u003E. As you play your game and progress in your save, whether you simply blast forward at 100,000x time compression for 5 real world days, or you simply place a satcomm network for RemoteTech2 and then go about your merry ways like Scott Manley, this repetitive rounding will compound and worsen all of the above factors that I\u0027ve described, each time the engine calculates it, which can often be hundreds of times every real world second. (FYI, the fact that it crunches such heavy numbers is the specific reason why this game can become a slideshow with poor framerates when it has to keep track of large and complex craft in close proximity to each other -- when physics load onto a craft or station, it calculates all of this orbital mechanics stuff for each individual part.)\u003C/p\u003E\u003Cp\u003ESo, ultimately, there is nothing that any player of this game could ever do, \u003Cstrong\u003Eincluding savefile editing\u003C/strong\u003E, that will absolutely eliminate this problem and prevent it from coming back. Savefile editing will, of course, come the \u0022closest\u0022 to totally eliminating it, since doing so will eliminate all of the human-introduced elements of uncertainty and even a significant portion of the game-introduced factors and floating point errors that I described above. Ultimately though, just as in real world satellite maintenance, you just have to in some way incorporate this inevitability into the design of your craft and your mission profiles (for example, by periodically re-editing your savefile, or by launching more satellites for your network for extra overlapping coverage, so that when one drifts out of position, it won\u0027t IMMEDIATELY result in a blind spot, and by launching those satellites with extra RCS for better fine-tuning over a longer operational life.)\u003C/p\u003E\u003Cp\u003EI hope this explains a few things, and I invite discussion below. With new input and insight, I\u0027d enjoy editing and maintaining this thread as an educational codpiece for the forums.\u003C/p\u003E\u003Cp\u003E*Note that other proper-noun celestial bodies have their own prefixes that parallel this linguistic construction, we just don\u0027t hear them as often. For example, Mars is named after the mythical figure Ares (yes, like the zodiac sign) so Mars-stationary orbit would be \u0022areostationary\u0022 orbit. Jupiter is named after \u0022Jove,\u0022 the Latin / Roman name for the god originally called Zeus by the Greeks, so Jupiter-stationary orbit would be \u0022jovistationary\u0022 orbit, etc. This linguistic construction applies to other terminology, too; we refer to \u0022geography,\u0022 which literally translated to \u0022Earth-recording,\u0022 or \u0022land-mapping,\u0022 which is exactly what it is. On Mars, then, it would be properly referred to as \u0022aerography.\u0022 For the moon, called Luna, we\u0027d have lunography.\u003C/p\u003E\u003Cp\u003E**I\u0027ll briefly note here that \u003Cem\u003Eactual synchronicity\u003C/em\u003E in any orbital arrangement is totally unnecessary in pretty much any scenario I can think of. Synchronous orbits have the managerial benefits of always being easy to visually identify on the mapview, and the ability to predict where and when coverage blackouts might form, this much is true. And also, of course, synchronous orbits in any case cater very well to the OCD that we all have to some degree large or small. Otherwise, however, the important element in setting up any orbital pattern of multiple satellites is coverage and overlap. The orbital period for KSO in the stock game [day length of 5h59m[XX]s] is an orbital period of the length of a Kerbin day. If you wanted to keep your satellite network at lower altitude, perhaps with an orbital period closer to thirty minutes, then obviously the satellites would not remain stationary with respect to the rotating surface of the planet, but you could still achieve continuously overlapping coverage by simply sending up more copies of the satellite and keeping them properly spaced (which admittedly brings us back to the original point of this post: maintaining the spacing between orbiting objects around the same celestial body.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-31T03:32:13Z\u0022 title=\u002207/31/2014 03:32  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 31, 2014\u003C/time\u003E by MisterFister\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Kuldaralagh","CreatedById":168858,"CreatedDateTime":"2016-09-18T06:23:16Z","Content":"\n\u003Cp\u003E\nI don\u0027t get it. I mean i do, the minute details of perfect orbits are impossible to get right, but my sats dont bunch up, specially the KSO. After I get the phase alignment i want, usually 120 degrees, \u00A0i match the orbital period to the thousandth of a second.\n\u003C/p\u003E\n\u003Cp\u003E\nI am sure it will over a lot of time(a lot really, i have no idea how much) have a deviation, \u00A0but hey, just go there and align the phase again, and reset the orbital periods.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"problemecium","CreatedById":101649,"CreatedDateTime":"2016-09-18T07:52:42Z","Content":"\n\u003Cp\u003E\n^ I have no idea how you manage to synchronize within a millisecond, but mad props for that.\n\u003C/p\u003E\n\u003Cp\u003E\nRegarding bunching, I agree that concerns about bunching over short timescales, i.e. less than 20 years, are no big deal. Even then it can be solved with just a minimal bit of stationkeeping, but I\u0027ve never even found it necessary due to my saves rarely lasting more than two years (if that) before my having to restart them due to a major game version change.\n\u003C/p\u003E\n"},{"CreatedByName":"DerekL1963","CreatedById":57091,"CreatedDateTime":"2016-09-18T17:54:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222762692\u0022 data-ipsquote-contentid=\u002280204\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221474185162\u0022 data-ipsquote-userid=\u0022101649\u0022 data-ipsquote-username=\u0022parameciumkid\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, parameciumkid said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n^ I have no idea how you manage to synchronize within a millisecond, but mad props for that.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n1] Use \u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E or \u003Cabbr title=\u0022Mechjeb (mod)\u0022\u003EMJ\u003C/abbr\u003E for a high precision readout of your orbital period and SMA (which is what you really want to match). \u00A0(And \u003Cabbr title=\u0022Mechjeb (mod)\u0022\u003EMJ\u003C/abbr\u003E\u0027s \u0022Warp To\u0022 feature is very handy for zipping to a few seconds before your \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E/\u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E.)\u003Cbr\u003E\n2] A craft with a ridiculously low T/W ratio. \u00A0(\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E based preferred because you can burn pro- and retro- grade w/o rotating the vessel.)\u003Cbr\u003E\n3] Practice, practice, practice.\u003Cbr\u003E\u003Cbr\u003E\nSeriously, it\u0027s not that hard once you get in the habit of piloting \u0022by the numbers\u0022 [displayed by \u003Cabbr title=\u0022Mechjeb (mod)\u0022\u003EMJ\u003C/abbr\u003E or \u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E].\n\u003C/p\u003E\n"},{"CreatedByName":"fourfa","CreatedById":151713,"CreatedDateTime":"2016-09-19T05:03:16Z","Content":"\n\u003Cp\u003E\nNo one noticed this is a more than two years old necro?\n\u003C/p\u003E\n"},{"CreatedByName":"Val","CreatedById":126227,"CreatedDateTime":"2016-09-19T14:16:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222764174\u0022 data-ipsquote-contentid=\u002280204\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221474261396\u0022 data-ipsquote-userid=\u0022151713\u0022 data-ipsquote-username=\u0022fourfa\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, fourfa said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNo one noticed this is a more than two years old necro?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#800000;\u0022\u003EIt\u0027s only considered a necro if the topic is no longer relevant to current game state. I think, the topic of this one is still relevant.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-19T14:30:56Z\u0022 title=\u002209/19/2016 02:30  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 19, 2016\u003C/time\u003E by Val\u003C/strong\u003E\n\u003Cbr\u003EEdit fail\n\u003C/span\u003E\n"},{"CreatedByName":"Jarin","CreatedById":71395,"CreatedDateTime":"2016-09-20T01:27:24Z","Content":"\n\u003Cp\u003E\nAnother problem that I\u0027ve seen come up (and bit me repeatedly before I had the problem pointed out to me) is the difference between rotational period and\u00A0\u003Cem\u003Esidereal\u003C/em\u003E\u00A0rotational period. I got pretty darn good with minor orbit adjustments, but precision with the \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E engines doesn\u0027t help you one bit if you put up that primary KSO comsat - perfectly positioned over \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E - ... with an orbital period of exactly 6 hours. This worked fine, pre-1.0.5, but now that Kerbin has an actual\u00A0\u003Cem\u003Esynodic\u00A0\u003C/em\u003E6h day, its sidereal rotational period is down to\u00A05h 59m 9.4s, so KSO satellites need to have this orbital period to stay put properly.\n\u003C/p\u003E\n"},{"CreatedByName":"John Cochran","CreatedById":169262,"CreatedDateTime":"2016-10-13T21:58:47Z","Content":"\n\u003Cp\u003E\nThe \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E is quite right about keeping things precise, but he missed one of the MAJOR issues that cause satellites to drift out of alignment. 1.2 just got out of open beta and I had heard that G and a few other constants changed and I wanted to update my orbit calculation spreadsheet with the new numbers, so I decided to figure them out empirically by using the cheat menu placing a satellite into orbit with a specified SMA and by monitoring KerbalEngineer, see if it\u0027s drifting east or west, then adjusting the SMA up or down until I simultaneously determined both the exact SMA for a stationary satellite and the sidereal rotational period for the body I was orbiting. The answer is \u0022Yes, the mu values for the various bodies have changed a bit.\u0022 For my final test, I inserted into orbit around the eight bodies who\u0027s synchronous orbit is within the \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E. I then took note of the longitude each satellite was above and finally did a time warp a year or two into the future. Then looked at the longitudes that the satellites were are and was rather dismayed that they had drifted several minutes of arc when they hadn\u0027t even drifted 1 second of arc while I was determining the original numbers.\n\u003C/p\u003E\n\u003Cp\u003E\nSo I looked closer at the figures and was rather unpleasantly surprised and extremely annoyed. The Satellite I left in a synchronous orbit of Eeloo\u00A0with a semi-major axis of exactly 893589.151\u00A0meters\u00A0and a period of exactly\u00A05h 24m 20.000s had somehow changed to a semi-major axis of 893590.076 meters and a period of 5h 24m 20.030s. That little error of 0.030 seconds will cause quite a bit of drift over time. The SMA\u00A0I set wouldn\u0027t even drift by a second of arc over a several\u00A0game decades, but the new SMA drifts by 2 seconds of arc every orbit or a bit under 16 minutes of arc per Kerbin year.\n\u003C/p\u003E\n\u003Cp\u003E\nSince the SMA I set and the SMA I saw when I came back to the satellite after switching to the tracking center only match to 6 digits of precision, I suspect that there\u0027s a conversion from double precision to single precision somewhere in the chain of calculations going between the Unity game engine and the persistent save file. And that loss of precision makes it absolutely impossible to setup a precise constellation of satellites. I also did some tests with save file editing and have noticed that the figures for an orbit of a satellite don\u0027t change in the save file unless you actually get within physics simulation distance of that satellite. When that happens, the figures lose their precision and things start drifting again. So it is possible to setup stable constellations by save file editing. Just never make those satellites the active craft or get within physics distance of those satellites.\n\u003C/p\u003E\n\u003Cp\u003E\nFor those who are interested, the stationary SMAfor a Kerbin satellite is 3462940.708 meters and Kerbin\u0027s sidereal rotational period is 5h 59m 9.434 seconds (figured correct for\u00A0KSP version 1.2.0.1586).\n\u003C/p\u003E\n\u003Cp\u003E\nTo replicate my experiment, use the cheat menu to place a satellite into Eeloo orbit with a SMA of exactly 893589.151 meters. After doing that, while keeping that satellite the active vehicle, perform a time warp of a decade or two to see that it doesn\u0027t drift (Use \u003Cabbr title=\u0022Kerbal Engineer Redux (mod)\u0022\u003EKER\u003C/abbr\u003E to observe the latitude of the satellite). After confirming the lack of drift, go back to the tracking center at \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E and then switch back to the satellite orbiting Eeloo. You\u0027ll see that the SMA and period have changed and if you time warp, the satellite will now start drifting quite noticeably.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Serpens Solidus","CreatedById":146847,"CreatedDateTime":"2016-10-14T18:00:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222802594\u0022 data-ipsquote-contentid=\u002280204\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221476395927\u0022 data-ipsquote-userid=\u0022169262\u0022 data-ipsquote-username=\u0022John Cochran\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 hours ago, John Cochran said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI wanted to update my orbit calculation spreadsheet with the new numbers, so I decided to figure them out empirically\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInstead of empirically\u00A0determining the new values, let\u0027s calculate them. (I use \u003Ca href=\u0022https://mathworks.com/products/matlab/\u0022 rel=\u0022external nofollow\u0022\u003EMATLAB\u003C/a\u003E for convenience)\n\u003C/p\u003E\n\u003Cp\u003E\nWe have this\u003Cbr\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/147576-modders-notes-for-ksp-12/\u0022 rel=\u0022\u0022\u003EKSP now uses 9.80665 and 6.67408e-11 instead of 9.81 and 6.674e-11 for gravity equations.\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nand this\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/149179-new-stationary-orbit/\u0026amp;do=findComment\u0026amp;comment=2785579\u0022 rel=\u0022\u0022\u003EKSP calculates body mass by taking the gravity in gees at sea level (times g0) and the radius and back-calculating using G (big G). Since both g0 and G have changed, mass for all bodies will have changed slightly.\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWe first calculate the new\u00A0Kerbin year using the in game values\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\ng0 = 9.80665;\n\ngKer = 1 * g0;\nRKer = 600000;\n\ngSun = 1.74625 * g0;\nRSun = 261600000;\n\nSMA = 13599840256;\n\nyear = 2 * pi * sqrt(SMA^3 / gSun / RSun^2)\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eyear =\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 9205116.55936357\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhich is 30ish minutes (!) longer\u00A0than the old year\u00A0of\u00A09 203 490 s. (according to the \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Kerbin\u0022 rel=\u0022external nofollow\u0022\u003Ewiki\u003C/a\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nUsing the old sidereal day (also from the wiki), we get the length of a solar day\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Edsi = 21549.425;\ndso = year * dsi / (year - dsi)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Edso =\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 21599.9911592099\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhich is 8ish milliseconds shorter than the old value of 21 600 s, about 4e-7 of a day. So after a million days, the sun should be about 40% of a day ahead of\u00A0the actual time.\u00A0To test this,\u00A0I started a new game and clicked \u0022warp to next morning\u0022. The time was 4:33. Then I made a quicksave, and set the UT to 21 600 000 000. Loaded the quicksave again, warp to next morning. The time is 4:33 again, but the position of the sun in the sky hasn\u0027t changed at all. There isn\u0027t even a visible change in the shadows of the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E.\u00A0Apparently Kerbin\u0027s solar day is still exactly 21600 seconds. (gj Squad)\n\u003C/p\u003E\n\u003Cp\u003E\nThis gives the\u00A0new sidereal day, which is also the period of a KEO\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Enewdsi = year * 21600 / (year \u002B 21600)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Enewdsi =\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 21549.4337994455\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nNow we can calculate the SMA of a KEO\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EKEOSMA = (gKer * RKer^2 * newdsi^2 / 4 / pi^2)^(1/3)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EKEOSMA =\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 3462940.70836292\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBoth values match your empirically determined values, which suggests that my calculations are correct (which is always a good thing).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75006-nathankell/\u0026amp;do=hovercard\u0022 data-mentionid=\u002275006\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75006-nathankell/\u0022 rel=\u0022\u0022\u003E@NathanKell\u003C/a\u003E I have one question: Why does KSP use G in gravity calculations? When doing gravity calculations, you always use the standard gravitational parameter (G*Mass), which is equal to g\u003Csub\u003Esurface\u003C/sub\u003E\u00A0* radius\u003Csup\u003E2\u003C/sup\u003E. So you don\u0027t really need\u00A0G (or body mass).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2016-10-14T19:43:55Z","Content":"\n\u003Cp\u003E\nWe don\u0027t use big G for orbital calcs, just for calculating mass (given a sea level gravity).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nErr, KSP doesn\u0027t. Gonna take some getting used to, what words to use. :]\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-14T19:44:16Z\u0022 title=\u002210/14/2016 07:44  PM\u0022 data-short=\u00227 yr\u0022\u003EOctober 14, 2016\u003C/time\u003E by NathanKell\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"John Cochran","CreatedById":169262,"CreatedDateTime":"2016-10-14T21:55:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222804098\u0022 data-ipsquote-contentid=\u002280204\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221476468059\u0022 data-ipsquote-userid=\u0022146847\u0022 data-ipsquote-username=\u0022Serpens Solidus\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Serpens Solidus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Enewdsi =\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 21549.4337994455\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nNow we can calculate the SMA of a KEO\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003EKEOSMA = (gKer * RKer^2 * newdsi^2 / 4 / pi^2)^(1/3)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EKEOSMA =\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 3462940.70836292\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBoth values match your empirically determined values, which suggests that my calculations are correct (which is always a good thing).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNice Job. And I\u0027ll use those figures in updating mu for Kerbin in my spreadsheet. I determined the values empirically simply because I don\u0027t have what I would consider a reliable source of information for the actual parameters for G, g0, etc. The wiki has a lot of data, but doesn\u0027t bother to state what version of KSP the data is valid for, so I consider that source to be close, but unreliable if you\u0027re looking for precision.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut, alas, because of that conversion to single precision floats somewhere in the chain between the persistent file and Unity, this level of precision is not going to actually be of any use. Just switching to a precisely positioned satellite is enough to cause it to be thrown into a new orbit that\u0027s several milliseconds off in its period. Although with the introduction of Commnet, I do hope that someone comes up with a new motor that\u0027s made for precise positioning. The Ant when thrust limited to 0.5 percent still packs quite a kick and it\u0027s tricky to get a period down to the millisecond unless you\u0027ve deliberately made your satellite excessively heavy by using an absurdly large fuel tank. Would like to see something with a maximum thrust of about 1 to 20 newtons instead of the 2 kN that the Ant has. And of course, would like said very weak motor to be able to thrust limited down to 0.5 percent for when you\u0027re getting really nit picky.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"MisterFister","CreatedById":85686,"CreatedDateTime":"2016-12-28T22:33:19Z","Content":"\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222802594\u0022 data-ipsquote-contentid=\u002280204\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221476395927\u0022 data-ipsquote-userid=\u0022169262\u0022 data-ipsquote-username=\u0022John Cochran\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn \u200E10\u200E/\u200E13\u200E/\u200E2016 at 5:58 PM, John Cochran said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E is quite right about keeping things precise, but he missed one of the MAJOR issues that cause satellites to drift out of alignment.\u003Cbr\u003E\u003Cbr\u003E\n-snip-\u003Cbr\u003E\u003Cbr\u003E\nSince the SMA I set and the SMA I saw when I came back to the satellite after switching to the tracking center only match to 6 digits of precision, I suspect that there\u0027s a conversion from double precision to single precision somewhere in the chain of calculations going between the Unity game engine and the persistent save file. And that loss of precision makes it absolutely impossible to setup a precise constellation of satellites.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nI devoted literally three very detailed paragraphs explicitly and exclusively discussing the very item that you suggest I forgot to mention.\u00A0 Behold:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00221306937\u0022 data-ipsquote-contentid=\u002280204\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221406777383\u0022 data-ipsquote-userid=\u002285686\u0022 data-ipsquote-username=\u0022MisterFister\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn \u200E7\u200E/\u200E30\u200E/\u200E2014 at 11:29 PM, MisterFister said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe two other reasons why KSO** orbits (or any orbital arrangement, for that matter) drift into disarray the way they tend to do are much less obvious, however. First, we can agree that the actual math (advanced three-dimensional conic calculus) that goes into figuring and plotting (and subsequently simulating and rendering) any non-linear path, either through real world space or through KSP space, is highly complex, with numbers that usually have unending decimal places out to 10^(-200) or even further. Simply put, in order to \u0022work,\u0022 the KSP game engine at some point is forced to say \u0022meh, that\u0027s close enough\u0022 and stop calculating past the umpteenth decimal place and just fly with that. Those rounding errors, particularly when projected forward over simulated lapses of time acceleration, become significant -- ESPECIALLY in a situation like yours where you probably have multiple satellites involved, and one realizes that you can run the same calculation a hundred times, and round it the \u0022same way\u0022 each of those hundred times, and little eensy-teensy math discrepancies become more and more noticeable between iterations of the same satellite, the same launch, the same orbital insertion, but with minute and subtle differences in burn accuracy and launch efficiency, etc.\n\u003C/p\u003E\n\u003Cp\u003E\nAs if all of that wasn\u0027t enough, there\u0027s also the third fact that when actually coming into and out of time compression, and when OTHER craft in your savefile change SOIs, all of those calculations are reset and recomputed \u003Cstrong\u003Eand re-rounded anew, from scratch\u003C/strong\u003E. As you play your game and progress in your save, whether you simply blast forward at 100,000x time compression for 5 real world days, or you simply place a satcomm network for RemoteTech2 and then go about your merry ways like Scott Manley, this repetitive rounding will compound and worsen all of the above factors that I\u0027ve described, each time the engine calculates it, which can often be hundreds of times every real world second. (FYI, the fact that it crunches such heavy numbers is the specific reason why this game can become a slideshow with poor framerates when it has to keep track of large and complex craft in close proximity to each other -- when physics load onto a craft or station, it calculates all of this orbital mechanics stuff for each individual part.)\n\u003C/p\u003E\n\u003Cp\u003E\nSo, ultimately, there is nothing that any player of this game could ever do, \u003Cstrong\u003Eincluding savefile editing\u003C/strong\u003E, that will absolutely eliminate this problem and prevent it from coming back. Savefile editing will, of course, come the \u0022closest\u0022 to totally eliminating it, since doing so will eliminate all of the human-introduced elements of uncertainty and even a significant portion of the game-introduced factors and floating point errors that I described above. Ultimately though, just as in real world satellite maintenance, you just have to in some way incorporate this inevitability into the design of your craft and your mission profiles (for example, by periodically re-editing your savefile, or by launching more satellites for your network for extra overlapping coverage, so that when one drifts out of position, it won\u0027t IMMEDIATELY result in a blind spot, and by launching those satellites with extra \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E for better fine-tuning over a longer operational life.)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}