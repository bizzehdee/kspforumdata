{"TopicId":80657,"ForumId":15,"TopicTitle":"Imported InternalSpace configs bloats Unity scene filesize","CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2014-08-04T04:25:14Z","PageNum":1,"Articles":[{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2014-08-04T04:25:14Z","Content":"\n\u003Cp\u003EWhile working on various add-on packs with a mixture of parts, internals and props in Unity 4.5.2f / PartTools 0.23, I\u0027ve noticed something peculiar.\u003C/p\u003E\u003Cp\u003E - Each of my add-on authoring projects have been compartmentalized into their own Unity scene file (e.g. FusTek Station Parts.unity, SDHI Service Module), so that I can just see/work on the parts/props relevant to my current project.\u003C/p\u003E\u003Cp\u003E - Taking my FusTek project for example, I have:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E 23 GameObjects / PartTools scripts for part external models\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E6 GameObjects / PartTools scripts for internal cabin base models\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E19 GameObjects / PartTools scripts for internal props\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E - Thanks to Blender prefabs and texture-sharing, my Unity scene file for FusTek is \u003Cstrong\u003Emerely 1.04 MB\u003C/strong\u003E for all of the above.\u003C/p\u003E\u003Cp\u003E - I\u0027ve successfully created and edited InternalSpaces as well (i.e. CFG that lists what props an internal uses), so I\u0027m reasonably familiar with that too.\u003C/p\u003E\u003Cp\u003E - What I\u0027ve noticed, however, is that\u003Cem\u003E\u003Cstrong\u003E importing even a single InternalSpace config into my scene file increases its filesize greatly, and causes Unity to become extremely sluggish\u003C/strong\u003E\u003C/em\u003E. For example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EImporting \u003Cstrong\u003EALCORInternals3\u003C/strong\u003E (ALCOR pod internal) adds ~\u003Cstrong\u003E260 MB\u003C/strong\u003E, with most props sharing from a handful of texture atlases\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EImporting \u003Cstrong\u003EPodCockpit \u003C/strong\u003E(stock KSP Mk1-2 pod internal) adds ~\u003Cstrong\u003E80 MB\u003C/strong\u003E, with most props having their own unique textures\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EImporting \u003Cstrong\u003EB9_Cockpit_S2_Internal\u003C/strong\u003E (B9 Aerospace pack S2 cockpit internal) adds ~\u003Cstrong\u003E95 MB\u003C/strong\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EImporting \u003Cstrong\u003EK3_S2_Extended\u003C/strong\u003E (K3_chris\u0027s B9 S2 cockpit revamp) adds ~\u003Cstrong\u003E100 MB\u003C/strong\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EImporting \u003Cstrong\u003EInternal_KupolaObsModule\u003C/strong\u003E (FusTek Kupola internal) adds ~\u003Cstrong\u003E15 MB\u003C/strong\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EImporting \u003Cstrong\u003EInternal_KuestAirlock \u003C/strong\u003E(FusTek Kuest Airlock internal) adds ~\u003Cstrong\u003E130 MB\u003C/strong\u003E, despite the fact that all of the props share the same texture atlas\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EImporting \u003Cstrong\u003EInternal_KarmonyHabModule\u003C/strong\u003E (FusTek Karmony Habitation module internal) adds a whopping ~\u003Cstrong\u003E1.08 GB\u003C/strong\u003E, despite the fact that all of the props share the same texture atlas\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHas anyone else observed this in their own Unity projects?\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-08-04T04:36:54Z","Content":"\n\u003Cp\u003Ehm. now that you mention it. yes. very strange.\u003C/p\u003E\u003Cp\u003Ea scene I\u0027m working on went from 44KB to 126\u002B megs just from spawning one of my IVA\u003C/p\u003E\n"},{"CreatedByName":"Mu.","CreatedById":15543,"CreatedDateTime":"2014-09-04T13:15:04Z","Content":"\n\u003Cp\u003ETis because the models n textures imported via the plugin are stored in the scene file itself.\u003C/p\u003E\n"},{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2014-09-11T08:42:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mu\u0022 data-cite=\u0022Mu\u0022\u003E\u003Cdiv\u003ETis because the models n textures imported via the plugin are stored in the scene file itself.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, thanks for the explanation.\u003C/p\u003E\u003Cp\u003EAre there any alternative methods possible? The current setup is a bit of a show-stopper, since this means for every Internal configuration I want to edit, I would have to import, make my changes, write the config and delete the Internal GameObject before saving to keep file sizes manageable.\u003C/p\u003E\n"},{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2014-10-06T23:00:51Z","Content":"\n\u003Cp\u003EOkay, now that my InternalSpaces are getting more props, the current asset loading system is becoming increasingly problematic - specifically, because PartTools loads duplicates of textures and stores them directly in the scene file, my editor often crashes due to running out of memory\u003C/p\u003E\u003Cp\u003EMy current workaround is to:\u003C/p\u003E\u003Cp\u003E - Temporarily remove the prop textures from GameData\u003C/p\u003E\u003Cp\u003E - Have the InternalSpace script load just the models (which are less memory and file size intensive)\u003C/p\u003E\u003Cp\u003E - Make my changes (e.g. add / edit / remove props)\u003C/p\u003E\u003Cp\u003E - Re-export the InternalSpace config\u003C/p\u003E\u003Cp\u003E - Close the editor without saving\u003C/p\u003E\u003Cp\u003E - Move the prop textures back into GameData\u003C/p\u003E\u003Cp\u003EHowever, I would really appreciate a rework of the PropTools asset loading system.\u003C/p\u003E\n"}]}