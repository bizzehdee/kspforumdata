{"TopicId":61935,"ForumId":34,"TopicTitle":"[0.23] Im a Cupcake Wannabe (Advanced Hover System)","CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-02T14:04:56Z","PageNum":1,"Articles":[{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-02T14:04:56Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/s/nzhhty292ua6q9b/AdvancedHoverSystem.zip\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EIm A Cupcake Wannabe (Advanced Hover System V0.41)\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EV0.4 in action.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/VhF47nciV-Y?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EThe Intention of this plugin is to enable people to achieve the levels of flight control that \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/64586-Cupcake\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003ECupcake\u003C/span\u003E\u003C/a\u003E manages using just a joystick but using only a keyboard.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.youtube.com/watch?feature=player_embedded\u0026amp;v=SyUpLwbWbvU%5D\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.youtube.com/watch?feature=player_embedded\u0026amp;v=SyUpLwbWbvU]\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EYour probably better off just watching some example builds than reading my ramblings on how to use and setup the AHS.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68206-0-23-Im-a-Cupcake-Wannabe-%28Advanced-Hover-System%29?p=991997\u0026amp;viewfull=1#post991997\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EExamples Of v0.41 Builds (Tutorials)\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThe plugin currently adds the parts \u003Cstrong\u003ESmall Advanced Hover System\u003C/strong\u003E and \u003Cstrong\u003ELarge Advanced Hover System\u003C/strong\u003E to the control section and the RCS Translation Module to all thrust tweakable engines on start-up.\u003C/p\u003E\u003Cp\u003EYou may place multiple AHS on a craft at the same time and doing so will put the later found parts into a Slave mode where they just increase the number of engines that the Master AHS can control at any one time.\u003C/p\u003E\u003Cp\u003EThe AHS Has 3 hover modes\u003C/p\u003E\u003Cp\u003E1)Off = No hover control attempted\u003C/p\u003E\u003Cp\u003E2)Active = Trys to output enough thrust to hover your craft no matte what direction it is facing.\u003C/p\u003E\u003Cp\u003E3)Fixed = Uses a const thrust level that is just enough to hover but only if you point the craft in the correct direction.\u003C/p\u003E\u003Cp\u003ENone of the hover modes attempt to change your speed but just cause a zero G effect.\u003C/p\u003E\u003Cp\u003EThe hover direction can also be changed using tweakables and Actiongroups to let you change you orientation to the ground in mid flight.\u003C/p\u003E\u003Cp\u003EThere is an RCS Translation Toggle in the tweakables/Action Groups that lets you enable/disable an RCS style 3D Translation using the RCS keys.\u003C/p\u003E\u003Cp\u003ETo link engines into the AHS system you must right click on them and use the Next RCS Dimension and Toggle RCS Direction buttons to set the RCS Direction to your preferred state.\u003C/p\u003E\u003Cp\u003EEngines default to RCS Direction=None and in this state do not take up any of the AHS control slots.\u003C/p\u003E\u003Cp\u003EAction groups can also be used to set engine RCS Directions of all engines with one button press.\u003C/p\u003E\u003Cp\u003EThe AHS produces a lot of heat and the small version is prone to Crashing or exploding if you do not use enough heat-sinks.\u003C/p\u003E\u003Cp\u003EAll AHS use a SAS stack icon as to provide overheat warnings and show the active state using colour.\u003C/p\u003E\u003Cp\u003EWhite = Off\u003C/p\u003E\u003Cp\u003ELight Blue = Hover mode on and RCS Translation Active\u003C/p\u003E\u003Cp\u003EGreen = Hover mode on\u003C/p\u003E\u003Cp\u003EDark Blue = RCS Translation Active\u003C/p\u003E\u003Cp\u003ERed = Crashed\u003C/p\u003E\u003Cp\u003EThe AHS can find and connect to an Active Gravity Sensor. Hovers are set by default at 9.82/MS but even Kerbins sea level gravity dose not match this so placing a gravity sensor and activating it on launch will greatly increase your chance of a stable hover (Especially off world)\u003C/p\u003E\u003Cp\u003Ev0.3 Mun Lander Construction and Mission acelerated to 5X game time.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/3k396H0u3eA?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\u003Cstrong\u003EThings Iv Tried But Dont Want To Continue With\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAn Altitude lock. This was an attempt to maintain a set altitude but i found that with my lazy programming skills and the slow thrust change rate of the engines the craft would just yo yo \u002B i think its better to need a little skill to fly still.\u003C/p\u003E\u003Cp\u003EHorizontal translation. This was an attempt to increase thrust to an engine on one side as to cause rotation and thus translation in response to the translation keys. The hope was that S.A.S would then correct the rotation but in reality the engines were too powerful and caused a lot of S.A.S drift completely defeating the point.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThings To Do\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E1) Setup a heavy energy usage. The PNK A.S.S has a mass of 1 and should use lots of power to do all the computing. I think kerbal Comps probably get bigger as they get faster.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E2) Enable Master Slave system for PNK A.S.S so that you can have more than one unit on a craft. Adding More units will increase the number of engines you can control at anyone time.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E3) Look into adding tweakables to all engine modules as to add an RCS translation control for certain directions (RCS Mode: left/Right/none). This is just a way to better connect engine translation into the keyboard and not an attempt to replace the RCS system. These engines are not smart and will only do translation control not rotation. As the engines are manual setup this will need a lot of skill in the construction phase that should replace lake of skill one may have in the piloting phase.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E4) Providing 3 works then it should be easy to set a hover direction using Action Groups. This would let you set what translation direction to use for controlling a hover. The main reason for this would be to enable some crazy acrobatics when constructing bases. You could remove a base component horizontally from its transport craft, rotate it 90 degrease and then hit an Action button to set the new hover direction and then place the component vertically. \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EAttempt thrust to COM Alignment. Center of mass changes with strange payloads and so an auto balance system would be cool.\u003C/span\u003E while balancing trust to mass centres sounds good its a lot of work for not much of a result. Using multiple tugs at 1 time should be an easy way to balance any uneven load and force some need for skill to remain.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E5) Monitor changes to the selected engine types and set the thrust on any released engines back to 100%. (probably irelevent but depends on how the RCS engine module works)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003ETest 0.3 making a video for the Today I Build A Rocket challenge.\u003C/span\u003E (Currently the leader \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/66293-Today-I-build-a-Rocket\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003Elink\u003C/span\u003E\u003C/a\u003E)\u003C/p\u003E\u003Cp\u003EBuild a Kethane Colony or 2 to test final version.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EWork With Variable Gravity (Find and use an active Gravity Sensor)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003ESelectable Engine Type Tweakable\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EShow the PNK A.S.S in action\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EFull Change Log\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E0.41\u003Cbr\u003EFixed stupid bugs so that the RCS Translation directions are the same as the RCS system (still dose not change perspective when using control from hear).\u003Cbr\u003EFixed silly bug where slaves were controlling as well as masters.\u003Cbr\u003EAdded 95% heat auto shutdown / crash state (wont always save you on a warp though)\u003Cbr\u003ERunning out of power now causes a crash state (When crashed the AHS needs to be shut down and started up again).\u003Cbr\u003EChanged some of the max settings on sliders to try and give more precise control ( low end still seams to have a dead spot though  )\u003Cbr\u003EChanged the gravity sensor reading so that the AHS gets its own supper precise gravity reading but only if a gravity sensor is in a working readable state.\u003Cbr\u003EAdded RCS Translation event and actions (No longer uses the RCS toggle).\u003Cbr\u003ERemoved the check for SAS toggle as hover mode replaced the need for this.\u003Cbr\u003EAdded Icon colours for the SAS stack icon (Cant use custom icons yet) so you can tell what state it is in at a glance without needing to right click the part.\u003Cbr\u003E\u003Cbr\u003Ev0.4\u003Cbr\u003ERedesigned the ASS into an AHS so it now has hover direction, hover mode and some-other tweakables.\u003Cbr\u003EAdded RCSEngineTranslation Module and added it to all engine parts on start-up.\u003Cbr\u003EMade 2 new models so that the AHS have there very own look (stock style).\u003Cbr\u003EAdded resource usage so it now eats up the energy and leaks out heat.\u003Cbr\u003EAdded Master/Slave system along with a more limiting number of controllable engines so multiple AHS should be needed for large craft.\u003Cbr\u003EAdded the Active hover mode as suggested by Virindi (good call there )\u003Cbr\u003E\u003Cbr\u003Ev0.3\u003Cbr\u003EAdded reading of active gravity sensors for off world hovering.\u003Cbr\u003EAdded engine types to tweakable options for control over what engine types to use for a hover.\u003Cbr\u003EEngine Types restricted to first 5 engine types found and should work for any engines (not just stock).\u003Cbr\u003EAdded a restriction so the ASS may only control 20 engines at one time.\u003Cbr\u003E\u003Cbr\u003Ev0.2\u003Cbr\u003EAdded thrust vector analysis so hovering can be maintained if engines move or dont all point in the same direction.\u003Cbr\u003EAdded Z translation controls and tweakable for changing your vertical speed.\u003Cbr\u003E\u003Cbr\u003Ev0.1\u003Cbr\u003EAdded the PNK ASS basic hover system.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EV0.41 Code with do what you want licence at the top\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//M Pink provides AHS (v0.41) freely for anyone to use for anyreason they see fit.\u003Cbr\u003E//M Pink is not responsable for any damage caused by AHS.\u003Cbr\u003E//AHS Should Be Used At Your Own Risk !\u003Cbr\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace AHS\u003Cbr\u003E{\u003Cbr\u003E\tpublic class Direction\u003Cbr\u003E\t{//Put an end to the problems of compearing strings (miss spelling a direction) by using the AHS.Direction\u003Cbr\u003E\t\tpublic const string None     = \u0022None\u0022;\u003Cbr\u003E\t\tpublic const string Left     = \u0022Left\u0022;\u003Cbr\u003E\t\tpublic const string Right    = \u0022Right\u0022;\u003Cbr\u003E\t\tpublic const string Up       = \u0022Up\u0022;\u003Cbr\u003E\t\tpublic const string Down     = \u0022Down\u0022;\u003Cbr\u003E\t\tpublic const string Forward  = \u0022Forward\u0022;\u003Cbr\u003E\t\tpublic const string Backward = \u0022Backward\u0022;\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t[KSPAddon(KSPAddon.Startup.MainMenu,true)]\u003Cbr\u003E\tpublic class RCSAddonSetup :MonoBehaviour\u003Cbr\u003E\t{\u003Cbr\u003E\t\tvoid Awake ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Awake()\u0022);\u003Cbr\u003E\u003Cbr\u003E\t\t\tPartLoader pl = PartLoader.Instance;\u003Cbr\u003E\t\t\tif (pl==null)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Partloader was null\u0022);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Partloader Found\u0022);\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Number of parts to scan = \u0022\u002Bpl.parts.Count);\u003Cbr\u003E\t\t\t\tint a=0;\u003Cbr\u003E\t\t\t\tfor (a=0; a\u0026lt;pl.parts.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tbool has_engine = false;\u003Cbr\u003E\t\t\t\t\tbool has_rcs = false;\u003Cbr\u003E\t\t\t\t\tbool throtle_locked = true;//fail safe. Only use if throtleLocked is found and false\u003Cbr\u003E\t\t\t\t\tint b=0;\u003Cbr\u003E\t\t\t\t\tfor (b=0; b\u0026lt;pl.parts[a].moduleInfos.Count; b\u002B\u002B)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (\u0022Engine\u0022               == pl.parts[a].moduleInfos[b].moduleName) has_engine=true;\u003Cbr\u003E\t\t\t\t\t\tif (\u0022RCSEngineTranslation\u0022 == pl.parts[a].moduleInfos[b].moduleName) has_rcs=true;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\tif (has_engine)\u003Cbr\u003E\t\t\t\t\t{//parts that dont have a ModuleEngines will return null for FindModulesImplementing\u003Cbr\u003E\t\t\t\t\t\tif (pl.parts[a].partPrefab.FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;().Count!=0)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tthrotle_locked = pl.parts[a].partPrefab.FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].throttleLocked;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\tif (has_engine \u0026amp;\u0026amp; !has_rcs \u0026amp;\u0026amp; !throtle_locked)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Engine module found for \u0022\u002Bpl.parts[a].title\u002B\u0022 adding RCSEngineTranslation module\u0022);\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\t\tpl.parts[a].partPrefab.AddModule(\u0022RCSEngineTranslation\u0022);\u003Cbr\u003E\t\t\t\t\t\tAvailablePart.ModuleInfo info = new AvailablePart.ModuleInfo();\u003Cbr\u003E\t\t\t\t\t\tinfo.moduleName = \u0022RCSEngineTranslation\u0022;\u003Cbr\u003E\t\t\t\t\t\tpl.parts[a].moduleInfos.Add(info);\u003Cbr\u003E\t\t\t\t\t}//endof if (has_engine \u0026amp;\u0026amp; !has_rcs)\u003Cbr\u003E\t\t\t\t}//endof for (a=0; a\u0026lt;pl.parts.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t}//end of else if (pl==null)\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tpublic class RCSEngineTranslation : PartModule\u003Cbr\u003E\t{\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022dimention\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tint dimention = 0;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022direction\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tbool invert_direction = false;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022RCS Direction\u0022, isPersistant=false, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string state_string = \u0022Not Set Yet\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPEvent ( guiName=\u0022Next RCS Dimention\u0022, guiActive=true, guiActiveEditor=true )]\u003Cbr\u003E\t\tpublic void EventNextDirection()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention\u002B\u002B;\u003Cbr\u003E\t\t\tif (this.dimention\u0026gt;3) this.dimention=0;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPEvent ( guiName=\u0022Togle RCS Direction\u0022, guiActive=true, guiActiveEditor=true )]\u003Cbr\u003E\t\tpublic void EventTogleDirection()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.invert_direction = !this.invert_direction;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS None\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSNone ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=0;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Left\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSLeft ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=1;\u003Cbr\u003E\t\t\tthis.invert_direction=false;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Right\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSRight ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=1;\u003Cbr\u003E\t\t\tthis.invert_direction=true;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Up\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSUp ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=2;\u003Cbr\u003E\t\t\tthis.invert_direction=false;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Down\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSDown ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=2;\u003Cbr\u003E\t\t\tthis.invert_direction=true;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Forward\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSForward ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=3;\u003Cbr\u003E\t\t\tthis.invert_direction=false;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Backward\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSBackward ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=3;\u003Cbr\u003E\t\t\tthis.invert_direction=true;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void DisplayMode ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch (this.dimention)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 1: if (!this.invert_direction) this.state_string=Direction.Left; else this.state_string=Direction.Right; break;\u003Cbr\u003E\t\t\tcase 2: if (!this.invert_direction) this.state_string=Direction.Up; else this.state_string=Direction.Down; break;\u003Cbr\u003E\t\t\tcase 3: if (!this.invert_direction) this.state_string=Direction.Forward; else this.state_string=Direction.Backward; break;\u003Cbr\u003E\t\t\tdefault: this.state_string = Direction.None; break;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic RCSEngineTranslation ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t}//end of public RCSEngineTranslation ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnLoad (ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic override void OnStart (PartModule.StartState state)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t}//end of public class RCSEngineTranslation : PartModule\u003Cbr\u003E\u003Cbr\u003E\tpublic class AHS : PartModule\u003Cbr\u003E\t{\u003Cbr\u003E\u003Cbr\u003E\t\t//energy used per seconde\u003Cbr\u003E\t\t[KSPField (isPersistant=true)]\u003Cbr\u003E\t\tpublic float power_consumption = 0.5f;\u003Cbr\u003E\t\t//heat produced per seconde\u003Cbr\u003E\t\t[KSPField (isPersistant=true)]\u003Cbr\u003E\t\tpublic float heat_production = 50f;\u003Cbr\u003E\u003Cbr\u003E\t\t//thrust settings for all dimentions\u003Cbr\u003E\t\t//isPersistant is probably not needed as saves cant be done throtled up in an atmoshpher\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel left\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_left = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel right\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_right = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel up\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_up = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel down\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_down = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel forward\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_forward = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel backward\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_backward = 100f;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t//start of display fields\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Version\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string version = \u00220.41\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Comand State\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string comand_state = \u0022Not Set Yet\u0022;//Master,Slave,Off or Crashed. The state should be set to Off on deactivation and ony be set to Mast/Slave if its not Crashed\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Engine Usage\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string engine_usage = \u0022Not Set Yet\u0022;//no / max\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName=\u0022Gravity\u0022, isPersistant=false, guiActive=true, guiActiveEditor=false)]\u003Cbr\u003E\t\tpublic string gravity_state = \u0022Not Set Yet\u0022;\u003Cbr\u003E\t\tpublic int grav_sensor_index = -1;\u003Cbr\u003E\t\tpublic bool grav_sensor_active = false;\u003Cbr\u003E\t\tpublic string grav_readout = \u0022.....\u0022;\u003Cbr\u003E\t\tpublic float gravity = 9.82f;\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Deactivate\u0022, disabledText=\u0022Activate\u0022), KSPField(guiName=\u0022AHS\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool ahs_on = true;\u003Cbr\u003E\t\tpublic bool ahs_was_on = true;\u003Cbr\u003E\t\t[KSPAction (\u0022Activate AHS\u0022)]\u003Cbr\u003E\t\tpublic void ActionActivateAHS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ahs_on=true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Deactivate AHS\u0022)]\u003Cbr\u003E\t\tpublic void ActionDeactivateAHS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ahs_on=false;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Toggle AHS\u0022)]\u003Cbr\u003E\t\tpublic void ActionToggleAHS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ahs_on=!this.ahs_on;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t//halfway range seporators\u003Cbr\u003E\t\t[UI_FloatRange (stepIncrement=0.01f, maxValue=3f, minValue=0.01f), KSPField (guiName=\u0022Translation G\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic float max_g_change = 0.25f;\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_FloatRange (stepIncrement=0.5f, maxValue=25f, minValue=0.5f), KSPField (guiName=\u0022Thrust Change Rate\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic float max_thrust_change = 4f;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Deactivate\u0022, disabledText=\u0022Activate\u0022), KSPField(guiName=\u0022RCS Translation\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool rcs_on = true;\u003Cbr\u003E\t\t[KSPAction (\u0022Activate RCS Translation\u0022)]\u003Cbr\u003E\t\tpublic void ActionActivateRCSTranslation (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.rcs_on=true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Deactivate RCS Translation\u0022)]\u003Cbr\u003E\t\tpublic void ActionDeactivateRCSTranslation (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.rcs_on=false;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Toggle RCS Translation\u0022)]\u003Cbr\u003E\t\tpublic void ActionToggleRCSTranslation (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.rcs_on=!this.rcs_on;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022dimention\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tint hover_dimention = 3;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022direction\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tbool hover_invert_direction = false;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Hover Direction\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string hover_state_string = \u0022Not Set Yet\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t//index 0\u003Cbr\u003E\t\t[KSPEvent ( guiName=\u0022Next Hover Dimention\u0022, guiActive=true, guiActiveEditor=true )]\u003Cbr\u003E\t\tpublic void EventNextDirection()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention\u002B\u002B;\u003Cbr\u003E\t\t\tif (this.hover_dimention\u0026gt;3) this.hover_dimention=1;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t//index 1\u003Cbr\u003E\t\t[KSPEvent ( guiName=\u0022Togle Hover Direction\u0022, guiActive=true, guiActiveEditor=true )]\u003Cbr\u003E\t\tpublic void EventTogleDirection()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_invert_direction = !this.hover_invert_direction;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Left\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverLeft (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=1;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=false;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Right\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoveRight (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=1;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=true;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Up\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverUP (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=2;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=false;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Down\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverDown (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=2;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=true;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Forward\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverForward (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=3;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=false;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Backward\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverBackward (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=3;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=true;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic void HoverDisplayMode ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch (this.hover_dimention)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 1: if (!this.hover_invert_direction) this.hover_state_string=\u0022Left\u0022; else this.hover_state_string=\u0022Right\u0022; break;\u003Cbr\u003E\t\t\tcase 2: if (!this.hover_invert_direction) this.hover_state_string=\u0022Up\u0022; else this.hover_state_string=\u0022Down\u0022; break;\u003Cbr\u003E\t\t\tcase 3: if (!this.hover_invert_direction) this.hover_state_string=\u0022Forward\u0022; else this.hover_state_string=\u0022Backward\u0022; break;\u003Cbr\u003E\t\t\tdefault: this.hover_state_string = \u0022None\u0022; break;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName=\u0022Hover Mode: Active\u0022, guiActive=false, isPersistant=true)]\u003Cbr\u003E\t\tpublic int hover_mode = 1;\u003Cbr\u003E\t\t//index 2\u003Cbr\u003E\t\t[KSPEvent (guiName=\u0022Hover Mode: Active\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic void EventNextHoverMode()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_mode\u002B\u002B;\u003Cbr\u003E\t\t\tif (this.hover_mode\u0026gt;2) this.hover_mode=0;\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set Active Hover Mode\u0022)]\u003Cbr\u003E\t\tpublic void ActionSetActiveHover (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_mode=1;\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set Fixed Hover Mode\u0022)]\u003Cbr\u003E\t\tpublic void ActionSetFixedHover (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_mode=2;\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set Hover Mode Off\u0022)]\u003Cbr\u003E\t\tpublic void ActionSetHoverModeOff (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_mode=0;\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic void SetHoverGUI ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch(this.hover_mode)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 0: base.Events.GetByIndex(2).guiName=\u0022Hover Mode: Off\u0022; break;\u003Cbr\u003E\t\t\tcase 1: base.Events.GetByIndex(2).guiName=\u0022Hover Mode: Active\u0022; break;\u003Cbr\u003E\t\t\tcase 2: base.Events.GetByIndex(2).guiName=\u0022Hover Mode: Fixed\u0022; break;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t//index 3\u003Cbr\u003E\t\t[KSPEvent (guiName=\u0022Force Editor Update\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tvoid EventForceEditorUpdate ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.CheckSlaveState();\u003Cbr\u003E\t\t\tthis.CountEngines();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tint no_parts_in_last_check = -1;//used to check if parts have changed from last update\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (isPersistant=true)]\u003Cbr\u003E\t\tpublic int max_engines=10;\u003Cbr\u003E\t\tpublic int controlable_engines=0;\u003Cbr\u003E\t\tpublic List\u0026lt;int\u0026gt; slave_indices = new List\u0026lt;int\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E\t\tpublic AHS ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022(AHS) Constructor()\u0022);\u003Cbr\u003E\t\t}//endof public AHS ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnStart (PartModule.StartState state)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnStart (state);\u003Cbr\u003E\t\t\tif (this.vessel!=null)\u003Cbr\u003E\t\t\t{//vessel = null in editor\u003Cbr\u003E\t\t\t\t//disable editor only events\u003Cbr\u003E\t\t\t\tDebug.Log (\u0022(AHS) Number of events = \u0022\u002Bbase.Events.Count);\u003Cbr\u003E\t\t\t\tbase.Events.GetByIndex(3).active=false;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.part.stagingIcon = \u0022SAS\u0022;//DefaultIcons.CUSTOM\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnUpdate ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnUpdate();\u003Cbr\u003E\t\t\tthis.CheckSlaveState();//master slave states could change every frame so needs checking\u003Cbr\u003E\u003Cbr\u003E\t\t\t//set icon color\u003Cbr\u003E\t\t\tif (!this.ahs_on) this.part.stackIcon.SetIconColor(Color.white);\u003Cbr\u003E\t\t\telse if (this.comand_state==\u0022Crashed\u0022) this.part.stackIcon.SetIconColor(Color.red);\u003Cbr\u003E\t\t\telse if (this.hover_mode!=0 \u0026amp;\u0026amp; this.rcs_on)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.part.stackIcon.SetIconColor(Color.cyan);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse if (this.hover_mode==0 \u0026amp;\u0026amp; !this.rcs_on)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.part.stackIcon.SetIconColor(Color.white);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.hover_mode!=0) this.part.stackIcon.SetIconColor(Color.green);\u003Cbr\u003E\t\t\t\tif (this.rcs_on)        this.part.stackIcon.SetIconColor(Color.blue);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (this.comand_state!=\u0022Master\u0022 \u0026amp;\u0026amp; this.comand_state!=\u0022Slave\u0022) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.CheckGravSensor();\u003Cbr\u003E\t\t\t//all changes in craft must now have been detected and delt with\u003Cbr\u003E\t\t\tthis.no_parts_in_last_check = this.vessel.parts.Count;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t\t//energy useage check\u003Cbr\u003E\t\t\tdouble amount_needed = (double)(this.power_consumption * TimeWarp.deltaTime);\u003Cbr\u003E\t\t\tdouble amount_got = this.part.RequestResource(\u0022ElectricCharge\u0022 ,amount_needed);\u003Cbr\u003E\t\t\tif ((amount_needed*0.95) \u0026gt; amount_got )\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.comand_state = \u0022Crashed\u0022;\u003Cbr\u003E\t\t\t\treturn;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t\t//temperature check\u003Cbr\u003E\t\t\tif (this.part.temperature \u0026gt;= (this.part.maxTemp*0.95))\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.comand_state = \u0022Crashed\u0022;\u003Cbr\u003E\t\t\t\treturn;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthis.part.temperature \u002B= (this.heat_production * TimeWarp.deltaTime);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t\t//check for change in control states\u003Cbr\u003E\t\t\tthis.ahs_was_on = this.ahs_on;\u003Cbr\u003E\t\t\tif (!this.ahs_on) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.CountEngines();//engines may be changed anytime so need rechecking\u003Cbr\u003E\u003Cbr\u003E\t\t\t//only the master control system should do any actual work\u003Cbr\u003E\t\t\tif (this.comand_state!=\u0022Master\u0022) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//apply AHS stablisation\u003Cbr\u003E\t\t\tCenterOfThrustQuery cot = new CenterOfThrustQuery();\u003Cbr\u003E\t\t\tVector3 thrust_up_vec       = Vector3.zero;\u003Cbr\u003E\t\t\tVector3 thrust_down_vec     = Vector3.zero;\u003Cbr\u003E\t\t\tVector3 thrust_left_vec     = Vector3.zero;\u003Cbr\u003E\t\t\tVector3 thrust_right_vec    = Vector3.zero;\u003Cbr\u003E\t\t\tVector3 thrust_forward_vec  = Vector3.zero;\u003Cbr\u003E\t\t\tVector3 thrust_backward_vec = Vector3.zero;\u003Cbr\u003E\t\t\tfloat t;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tint c=0;\u003Cbr\u003E\t\t\tList\u0026lt;ModuleEngines\u0026gt; engine_modules = new List\u0026lt;ModuleEngines\u0026gt;();\u003Cbr\u003E\t\t\tList\u0026lt;string\u0026gt; engine_rcs_state = new List\u0026lt;string\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E\t\t\t//make thrust vectors\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;this.vessel.parts.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.vessel.parts[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (this.vessel.parts[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;()[0].state_string!=\u0022None\u0022 \u0026amp;\u0026amp; c\u0026lt;this.controlable_engines)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tc\u002B\u002B;\u003Cbr\u003E\t\t\t\t\t\tif (c==this.controlable_engines) Debug.Log(\u0022(AHS) Max controlable engines reached\u0022);\u003Cbr\u003E\t\t\t\t\t\tengine_modules.Add(this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0]);\u003Cbr\u003E\t\t\t\t\t\tengine_rcs_state.Add (this.vessel.parts[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;()[0].state_string);\u003Cbr\u003E\t\t\t\t\t\tthis.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].OnCenterOfThrustQuery(cot);\u003Cbr\u003E\t\t\t\t\t\tt = this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].finalThrust;\u003Cbr\u003E\t\t\t\t\t\tcot.dir.x *= t;\u003Cbr\u003E\t\t\t\t\t\tcot.dir.y *= t;\u003Cbr\u003E\t\t\t\t\t\tcot.dir.z *= t;\u003Cbr\u003E\t\t\t\t\t\tswitch (this.vessel.parts[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;()[0].state_string)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tcase Direction.Up:       thrust_up_vec       \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\tcase Direction.Down:     thrust_down_vec     \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\tcase Direction.Left:     thrust_left_vec     \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\tcase Direction.Right:    thrust_right_vec    \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\tcase Direction.Forward:  thrust_forward_vec  \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\tcase Direction.Backward: thrust_backward_vec \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tfloat target_up_thrust       = 0f;\u003Cbr\u003E\t\t\tfloat target_down_thrust     = 0f;\u003Cbr\u003E\t\t\tfloat target_left_thrust     = 0f;\u003Cbr\u003E\t\t\tfloat target_right_thrust    = 0f;\u003Cbr\u003E\t\t\tfloat target_forward_thrust  = 0f;\u003Cbr\u003E\t\t\tfloat target_backward_thrust = 0f;\u003Cbr\u003E\u003Cbr\u003E\t\t\tif (this.rcs_on)\u003Cbr\u003E\t\t\t{//Change target thrust and thus vertical speed\u003Cbr\u003E\t\t\t\tfloat g_change_in_thrust = (this.max_g_change*9.82f)*this.vessel.GetTotalMass();\u003Cbr\u003E\t\t\t\ttarget_down_thrust     -= (g_change_in_thrust*this.vessel.ctrlState.Y);\u003Cbr\u003E\t\t\t\ttarget_up_thrust       \u002B= (g_change_in_thrust*this.vessel.ctrlState.Y);\u003Cbr\u003E\t\t\t\ttarget_left_thrust     \u002B= (g_change_in_thrust*this.vessel.ctrlState.X);\u003Cbr\u003E\t\t\t\ttarget_right_thrust    -= (g_change_in_thrust*this.vessel.ctrlState.X);\u003Cbr\u003E\t\t\t\ttarget_forward_thrust  -= (g_change_in_thrust*this.vessel.ctrlState.Z);\u003Cbr\u003E\t\t\t\ttarget_backward_thrust \u002B= (g_change_in_thrust*this.vessel.ctrlState.Z);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t//adjust target thrust for hover correction\u003Cbr\u003E\t\t\tif (this.hover_mode\u0026gt;0)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tswitch (this.hover_state_string)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\tcase Direction.Up:       target_up_thrust       \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\tcase Direction.Down:     target_down_thrust     \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\tcase Direction.Left:     target_left_thrust     \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\tcase Direction.Right:    target_right_thrust    \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\tcase Direction.Forward:  target_forward_thrust  \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\tcase Direction.Backward: target_backward_thrust \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\tif (this.hover_mode==1)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tVector3 sky_vector =  this.vessel.mainBody.transform.position-this.vessel.transform.position;\u003Cbr\u003E\t\t\t\t\tVector3 sky_n = sky_vector.normalized;\u003Cbr\u003E\t\t\t\t\tVector3 thr_n = Vector3.zero;\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\t//rotating one normal into the other should return 0 if they are on the same plan and 1 if at 90 degrease to each other\u003Cbr\u003E\t\t\t\t\tswitch (this.hover_state_string)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tcase Direction.Up:       thr_n = thrust_up_vec.normalized;       break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Down:     thr_n = thrust_down_vec.normalized;     break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Left:     thr_n = thrust_left_vec.normalized;     break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Right:    thr_n = thrust_right_vec.normalized;    break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Forward:  thr_n = thrust_forward_vec.normalized;  break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Backward: thr_n = thrust_backward_vec.normalized; break;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\tfloat m = Mathf.Abs( (sky_n.x* thr_n.x) \u002B (sky_n.y*thr_n.y) \u002B (sky_n.z* thr_n.z));\u003Cbr\u003E\t\t\t\t\tif (m==0f) m=0.00000001f;//avoid divide by 0\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\tswitch (this.hover_state_string)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tcase Direction.Up: target_up_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Down: target_down_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Left: target_left_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Right: target_right_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Forward: target_forward_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\tcase Direction.Backward: target_backward_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t//Adjust throtles slowly and hope we find a sweatspot !\u003Cbr\u003E\t\t\tfloat irevavent_thrust = ((9.82f*this.vessel.GetTotalMass())*0.01f);\u003Cbr\u003E\t\t\tif (target_up_thrust==thrust_up_vec.magnitude \u0026amp;\u0026amp; thrust_up_vec.magnitude==0f) this.thrust_up=0f; else\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif ((target_up_thrust-thrust_up_vec.magnitude)\u0026lt;0f) this.thrust_up-=this.max_thrust_change; else this.thrust_up\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\tthis.thrust_up = Mathf.Clamp(this.thrust_up,0f,100f);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (target_down_thrust==thrust_down_vec.magnitude \u0026amp;\u0026amp; thrust_down_vec.magnitude==0f) this.thrust_down=0f; else\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif ((target_down_thrust-thrust_down_vec.magnitude)\u0026lt;0f) this.thrust_down-=this.max_thrust_change; else this.thrust_down\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\tthis.thrust_down = Mathf.Clamp(this.thrust_down,0f,100f);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (target_left_thrust==thrust_left_vec.magnitude \u0026amp;\u0026amp; thrust_left_vec.magnitude==0f) this.thrust_left=0f; else\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif ((target_left_thrust-thrust_left_vec.magnitude)\u0026lt;0f) this.thrust_left-=this.max_thrust_change; else this.thrust_left\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\tthis.thrust_left = Mathf.Clamp(this.thrust_left,0f,100f);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (target_right_thrust==thrust_right_vec.magnitude \u0026amp;\u0026amp; thrust_right_vec.magnitude==0f) this.thrust_right=0f; else\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif ((target_right_thrust-thrust_right_vec.magnitude)\u0026lt;0f) this.thrust_right-=this.max_thrust_change; else this.thrust_right\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\tthis.thrust_right = Mathf.Clamp(this.thrust_right,0f,100f);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (target_forward_thrust==thrust_forward_vec.magnitude \u0026amp;\u0026amp; thrust_forward_vec.magnitude==0f) this.thrust_forward=0f; else\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif ((target_forward_thrust-thrust_forward_vec.magnitude)\u0026lt;0f) this.thrust_forward-=this.max_thrust_change; else this.thrust_forward\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\tthis.thrust_forward = Mathf.Clamp(this.thrust_forward,0f,100f);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (target_backward_thrust==thrust_backward_vec.magnitude \u0026amp;\u0026amp; thrust_backward_vec.magnitude==0f) this.thrust_backward=0f; else\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif ((target_backward_thrust-thrust_backward_vec.magnitude)\u0026lt;0f) this.thrust_backward-=this.max_thrust_change; else this.thrust_backward\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\tthis.thrust_backward = Mathf.Clamp(this.thrust_backward,0f,100f);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t//set engine thrusts\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;engine_modules.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tswitch (engine_rcs_state[i])\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\tcase Direction.Up:       engine_modules[i].thrustPercentage = this.thrust_up;       break;\u003Cbr\u003E\t\t\t\tcase Direction.Down:     engine_modules[i].thrustPercentage = this.thrust_down;     break;\u003Cbr\u003E\t\t\t\tcase Direction.Left:     engine_modules[i].thrustPercentage = this.thrust_left;     break;\u003Cbr\u003E\t\t\t\tcase Direction.Right:    engine_modules[i].thrustPercentage = this.thrust_right;    break;\u003Cbr\u003E\t\t\t\tcase Direction.Forward:  engine_modules[i].thrustPercentage = this.thrust_forward;  break;\u003Cbr\u003E\t\t\t\tcase Direction.Backward: engine_modules[i].thrustPercentage = this.thrust_backward; break;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof public override void OnUpdate ()\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t//Used in editor to update gui info. Should be done in update as a full engine scan will be done every time as to check for states\u003Cbr\u003E\t\tpublic void CountEngines ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tint master_index=-1;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//vessel will = null in the editor so we must cycle through parts list another way if it is not set\u003Cbr\u003E\t\t\tList \u0026lt;Part\u0026gt; part_list;\u003Cbr\u003E\t\t\tif (this.vessel!=null)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list = this.vessel.Parts;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list = new List\u0026lt;Part\u0026gt;();\u003Cbr\u003E\t\t\t\tPart start_part = this.part;\u003Cbr\u003E\t\t\t\twhile (start_part.parent!=null) start_part=start_part.parent;\u003Cbr\u003E\t\t\t\tAddPartToList(start_part,part_list);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tint controlable_no = 0;\u003Cbr\u003E\t\t\tint found_engines = 0;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;part_list.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t//functional states are only Master or Slave\u003Cbr\u003E\t\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state==\u0022Master\u0022)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tmaster_index=i;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tif ( part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state==\u0022Master\u0022 ||\u003Cbr\u003E\t\t\t\t\t\t part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state==\u0022Slave\u0022 )\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tcontrolable_no \u002B= part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].max_engines;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;()[0].state_string!=\u0022None\u0022) found_engines\u002B\u002B;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (master_index!=-1)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].controlable_engines = controlable_no;\u003Cbr\u003E\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].engine_usage = found_engines\u002B\u0022/\u0022\u002Bcontrolable_no;\u003Cbr\u003E\t\t\t\tList\u0026lt;int\u0026gt; slaves = part_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].slave_indices;\u003Cbr\u003E\t\t\t\tfor (i=0; i\u0026lt;slaves.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tpart_list[slaves[i]].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].engine_usage = found_engines\u002B\u0022/\u0022\u002Bcontrolable_no;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//Search for working slaves and update the master\u0027s slave list\u003Cbr\u003E\t\tpublic void CheckSlaveState ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tint master_index = -1;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//vessel will = null in the editor so we must cycle through parts list another way if it is not set\u003Cbr\u003E\t\t\tList \u0026lt;Part\u0026gt; part_list;\u003Cbr\u003E\t\t\tif (this.vessel!=null)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list = this.vessel.Parts;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list = new List\u0026lt;Part\u0026gt;();\u003Cbr\u003E\t\t\t\tPart start_part = this.part;\u003Cbr\u003E\t\t\t\twhile (start_part.parent!=null) start_part=start_part.parent;\u003Cbr\u003E\t\t\t\tAddPartToList(start_part,part_list);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;part_list.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t//All inactive states must be checked before asigning master slave states\u003Cbr\u003E\t\t\t\t\tif (!part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].ahs_on)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tpart_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state = \u0022Off\u0022;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\telse if ( part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state!=\u0022Crashed\u0022 )\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (master_index==-1)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tmaster_index=i;\u003Cbr\u003E\t\t\t\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state = \u0022Master\u0022;\u003Cbr\u003E\t\t\t\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].slave_indices.Clear();\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\telse\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tpart_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state = \u0022Slave\u0022;\u003Cbr\u003E\t\t\t\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].slave_indices.Add(i);\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//Find active gravity sensor and then set gravity to a useable value\u003Cbr\u003E\t\tpublic void CheckGravSensor ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.FindActiveSensor();\u003Cbr\u003E\t\t}//endof void CheckGravSensor ()\u003Cbr\u003E\u003Cbr\u003E\t\t//Updates grav readout and sets active state \u002B finds an active sensor\u003Cbr\u003E\t\t//You can force sensor finding by setting grav_sensor_index to -1\u003Cbr\u003E\t\tpublic void FindActiveSensor ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tif (no_parts_in_last_check!=this.vessel.parts.Count)\u003Cbr\u003E\t\t\t{//if parts have change then the index is no longer valid\u003Cbr\u003E\t\t\t\tthis.grav_sensor_index = -1;\u003Cbr\u003E\t\t\t\tthis.grav_sensor_active = false;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif ( this.grav_sensor_index != -1 )\u003Cbr\u003E\t\t\t{//if grav sensor is valid check it is active and update readout\u003Cbr\u003E\t\t\t\tthis.ReadGravSensor();\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\t//We dont need to search again if we have an active sensor and parts have not changed\u003Cbr\u003E\t\t\tif ( no_parts_in_last_check==this.vessel.parts.Count \u0026amp;\u0026amp; this.grav_sensor_active==true ) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.grav_sensor_index = -1;\u003Cbr\u003E\t\t\tthis.grav_sensor_active = false;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;this.vessel.parts.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.vessel.parts[i].name==\u0022sensorGravimeter\u0022)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEnviroSensor\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (this.grav_sensor_index == -1)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tthis.grav_sensor_index=i;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\tthis.ReadGravSensor();\u003Cbr\u003E\t\t\t\t\t\tif (this.grav_sensor_active)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tthis.grav_sensor_index = i;\u003Cbr\u003E\t\t\t\t\t\t\tbreak;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof void FindActiveSensor ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void ReadGravSensor ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tif (this.grav_sensor_index==-1)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.grav_readout = this.gravity_state = \u0022No Sonsor Found\u0022;\u003Cbr\u003E\t\t\t\tthis.gravity = 9.82f;\u003Cbr\u003E\t\t\t\tthis.grav_sensor_active = false;\u003Cbr\u003E\t\t\t\treturn;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tfloat grav = float.NaN;\u003Cbr\u003E\t\t\ttry\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tModuleEnviroSensor sensor = this.vessel.parts[this.grav_sensor_index].FindModulesImplementing\u0026lt;ModuleEnviroSensor\u0026gt;()[0];\u003Cbr\u003E\t\t\t\tif (sensor.readoutInfo.Length\u0026gt;6)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tgrav = float.Parse(sensor.readoutInfo.Substring(0,sensor.readoutInfo.Length-6));\u003Cbr\u003E\t\t\t\t\tif (grav != float.NaN)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t//duplicate of the grav sensors methode of getting gravity but with out the lose of precision from string convertion\u003Cbr\u003E\t\t\t\t\t\tgrav = (float)FlightGlobals.getGeeForceAtPosition( base.transform.position ).magnitude;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tcatch\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tif (grav==float.NaN || float.IsInfinity(grav) || grav.ToString()==\u0022NaN\u0022)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.gravity_state = this.grav_readout = \u0022Senneor Read Error\u0022;\u003Cbr\u003E\t\t\t\tthis.gravity = 9.82f;\u003Cbr\u003E\t\t\t\tthis.grav_sensor_active = false;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.gravity_state = this.grav_readout = grav.ToString();\u003Cbr\u003E\t\t\t\tthis.gravity = grav;\u003Cbr\u003E\t\t\t\tthis.grav_sensor_active = true;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//part list builder. much better to use vessle.parts but its not avalible in the editor\u003Cbr\u003E\t\tpublic void AddPartToList ( Part p_, List\u0026lt;Part\u0026gt; list_ )\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tlist_.Add(p_);\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;p_.children.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.AddPartToList(p_.children[i],list_);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnLoad (ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnLoad(node);\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//place for adding right click info to parts in the editor ?\u003Cbr\u003E\t\tpublic override string GetInfo ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tstring result = \u0022\u0022;\u003Cbr\u003E\t\t\tresult \u002B= \u0022Energy Usage: \u0022\u002Bthis.power_consumption.ToString()\u002B\u0022/sec\\n\u0022;\u003Cbr\u003E\t\t\tresult \u002B= \u0022Heat Production: \u0022\u002Bthis.heat_production.ToString()\u002B\u0022/sec\\n\u0022;\u003Cbr\u003E\t\t\tresult \u002B= \u0022Controlable Engines: \u0022\u002Bthis.max_engines.ToString()\u002B\u0022/sec\\n\u0022;\u003Cbr\u003E\t\t\treturn base.GetInfo ()\u002Bresult;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}//endof public class AHS : PartModule\u003Cbr\u003E}//endof namespace AHS\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-26T16:30:39Z\u0022 title=\u002202/26/2014 04:30  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 26, 2014\u003C/time\u003E by mpink\u003C/strong\u003E\n\u003Cbr\u003EUpdate to V0.41\n\u003C/span\u003E\n"},{"CreatedByName":"KvickFlygarn87","CreatedById":76314,"CreatedDateTime":"2014-02-02T14:19:29Z","Content":"\n\u003Cp\u003ENeat, dude!\u003C/p\u003E\n"},{"CreatedByName":"AngelLestat","CreatedById":58968,"CreatedDateTime":"2014-02-02T14:35:31Z","Content":"\n\u003Cp\u003EAmazing demo video, I really enjoy to watch.\u003C/p\u003E\u003Cp\u003EIs a nice plugin. But if we use twekables to control thrust in jet engines, this is not kinda cheat?\u003C/p\u003E\u003Cp\u003EBecouse the cons with jet engines is that they need time to change their level of thrust.\u003C/p\u003E\u003Cp\u003EBut looking things from different perspective, we dont have the control tools needed to simule vtol jet engines like in the real world.\u003C/p\u003E\u003Cp\u003EAka harrier or others.\u003C/p\u003E\u003Cp\u003ESeems nice. Good job.\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2014-02-02T14:46:47Z","Content":"\n\u003Cp\u003EWho\u0027s Cupcake?\u003C/p\u003E\n"},{"CreatedByName":"JewelShisen","CreatedById":71737,"CreatedDateTime":"2014-02-02T14:52:36Z","Content":"\n\u003Cp\u003EProvide source code as per the forum rules\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-02T20:54:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AngelLestat\u0022 data-cite=\u0022AngelLestat\u0022\u003E\u003Cdiv\u003EIs a nice plugin. But if we use twekables to control thrust in jet engines, this is not kinda cheat?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes and no. It dose not change the engines acceleration time so that part is not cheating and adds a lot of problems to the flight.\u003C/p\u003E\u003Cp\u003EThe craft in the video has rockets clipped into the jets in order to counter the problems with engine spool up time.\u003C/p\u003E\u003Cp\u003EThe idea of the plugin is that once the engines are up to speed to cancel out gravity you don\u0027t need to change there speed very much but you do need upwards rockets for rapid speed changes.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Starwaster\u0022 data-cite=\u0022Starwaster\u0022\u003E\u003Cdiv\u003EWho\u0027s Cupcake?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/64586-Cupcake\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003ECupcake\u003C/span\u003E\u003C/a\u003E is the player who made the video (using just a joystick and not this plugin).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JewelShisen\u0022 data-cite=\u0022JewelShisen\u0022\u003E\u003Cdiv\u003EProvide source code as per the forum rules\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESource code is in the zip file named ASS.CS\u003C/p\u003E\u003Cp\u003EV0.2 =\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//M Pink provides ASS freely for anyone to use for anyreason they see fit.\u003Cbr\u003E//M Pink is not responsable for any damage caused by ASS.\u003Cbr\u003E//Ass Should Be Used At Your Own Risk !\u003Cbr\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace ASS\u003Cbr\u003E{\u003Cbr\u003E\tpublic class ASS : PartModule\u003Cbr\u003E\t{\u003Cbr\u003E\t\tfloat throtel;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Active\u0022, isPersistant = true, guiActive = true)]\u003Cbr\u003E\t\tpublic bool ass_on = true;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPAction (\u0022Activate\u0022)]\u003Cbr\u003E\t\tpublic void Activate (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ass_on=true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Deactivate\u0022)]\u003Cbr\u003E\t\tpublic void Deactivate (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ass_on=false;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Toggle\u0022)]\u003Cbr\u003E\t\tpublic void Toggle (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.OnToggle ();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPEvent (guiName = \u0022Toggle ASS\u0022, guiActive = true)]\u003Cbr\u003E\t\tpublic void OnToggle ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ass_on = !this.ass_on;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_FloatRange (stepIncrement = 0.01f, maxValue = 1f, minValue = 0f), KSPField (guiName = \u0022Translation G\u0022, isPersistant = true, guiActive = true, guiActiveEditor = true)]\u003Cbr\u003E\t\tpublic float max_g_change = 0.25f;\u003Cbr\u003E\u003Cbr\u003E\t\tbool sas_on;\u003Cbr\u003E\t\tbool rcs_on;\u003Cbr\u003E\u003Cbr\u003E\t\tpublic ASS ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022(ASS) Constructor()\u0022);\u003Cbr\u003E\t\t\tthrotel = 100f;\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.sas_on=false;\u003Cbr\u003E\t\t\tthis.rcs_on=true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnUpdate ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnUpdate();\u003Cbr\u003E\u003Cbr\u003E\t\t\tif (!this.ass_on) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//check for change in control states\u003Cbr\u003E\t\t\tbool sas_state = this.vessel.ActionGroups[KSPActionGroup.SAS];\u003Cbr\u003E\t\t\tbool sas_changed = false;\u003Cbr\u003E//\t\t\tbool rcs_changed = false;\u003Cbr\u003E\t\t\tif (this.sas_on != sas_state)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.sas_on = sas_state;\u003Cbr\u003E\t\t\t\tsas_changed = true;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (this.rcs_on != this.vessel.ActionGroups[KSPActionGroup.RCS] )\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.rcs_on = this.vessel.ActionGroups[KSPActionGroup.RCS];\u003Cbr\u003E//\t\t\t\trcs_changed = true;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t//deal with changes in control state\u003Cbr\u003E\t\t\tif (!this.sas_on \u0026amp;\u0026amp; sas_changed)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\t//set throttel to max on SAS deactivation\u003Cbr\u003E\t\t\t\tthis.throtel=100f;\u003Cbr\u003E\t\t\t\tthis.SetThrust();\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t\t//apply sas stablisation\u003Cbr\u003E\t\t\tif (this.sas_on)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tCenterOfThrustQuery cot = new CenterOfThrustQuery();\u003Cbr\u003E\t\t\t\tVector3 thrust_vec = Vector3.zero;\u003Cbr\u003E\t\t\t\tfloat t;\u003Cbr\u003E\t\t\t\tint i;\u003Cbr\u003E\t\t\t\tfloat target_thrust = 9.82f*this.vessel.GetTotalMass();\u003Cbr\u003E\t\t\t\t//find engines to check\u003Cbr\u003E\t\t\t\tfor (i=0; i\u0026lt;this.vessel.parts.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (this.vessel.parts[i].name==\u0022JetEngine\u0022)\u003Cbr\u003E\t\t\t\t\t{//make a combined thrust vector for all engines\u003Cbr\u003E\t\t\t\t\t\tthis.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].OnCenterOfThrustQuery(cot);\u003Cbr\u003E\t\t\t\t\t\tt = this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].finalThrust;\u003Cbr\u003E\t\t\t\t\t\tcot.dir.x *= t;\u003Cbr\u003E\t\t\t\t\t\tcot.dir.y *= t;\u003Cbr\u003E\t\t\t\t\t\tcot.dir.z *= t;\u003Cbr\u003E\t\t\t\t\t\tthrust_vec \u002B= cot.dir;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\tif (this.rcs_on)\u003Cbr\u003E\t\t\t\t{//Change target thrust and thus vertical speed\u003Cbr\u003E\t\t\t\t\tfloat max_thrust_change = (this.max_g_change*9.82f)*this.vessel.GetTotalMass();\u003Cbr\u003E\t\t\t\t\ttarget_thrust -= (max_thrust_change*this.vessel.ctrlState.Z);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t//Check if we should set thrust to max or none.\u003Cbr\u003E\t\t\t\t//It would be nice to calculate the exact thust needed but would be slow and hard.\u003Cbr\u003E\t\t\t\tif ((target_thrust-thrust_vec.magnitude)\u0026lt;0f) this.throtel=0f; else this.throtel=100f;\u003Cbr\u003E\t\t\t\tthis.SetThrust();\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void SetThrust ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\t//clamp throtel as setting it out of range is cheating !\u003Cbr\u003E\t\t\tif (this.throtel\u0026gt;100f) this.throtel=100f;\u003Cbr\u003E\t\t\tif (this.throtel\u0026lt;0f) this.throtel=0f;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\t//find engines\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;this.vessel.parts.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.vessel.parts[i].name==\u0022JetEngine\u0022)\u003Cbr\u003E\t\t\t\t{//apply thrtel to engine\u003Cbr\u003E\t\t\t\t\tthis.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].thrustPercentage = this.throtel;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-10T20:24:36Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/s/xqgpqefp4i90icr/Im_A_Cupcake_Wannabe.zip\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003Ev0.3 Update\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ECrank the \u003Ca href=\u0022http://www.realradioxs.co.uk/listen-live-online\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003ERock Radio\u003C/span\u003E\u003C/a\u003E up to 11 and enjoy a 3 minute tour of the KSC demonstrating the power of V0.3\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/cVorxljlKSg?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\u003Cstrong\u003EChange log\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAdded reading of active gravity sensors for off world hovering.\u003C/p\u003E\u003Cp\u003EAdded engine types to tweakable options for control over what engine types to use for a hover.\u003C/p\u003E\u003Cp\u003EEngine Types restricted to first 5 engine types found and should work for any engines (not just stock).\u003C/p\u003E\u003Cp\u003EAdded a restriction so the ASS may only control 20 engines at one time.\u003C/p\u003E\u003Cp\u003ECode is still in the zip as ASS.cs\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//M Pink provides ASS (v0.3) freely for anyone to use for anyreason they see fit.\u003Cbr\u003E//M Pink is not responsable for any damage caused by ASS.\u003Cbr\u003E//Ass Should Be Used At Your Own Risk !\u003Cbr\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace ASS\u003Cbr\u003E{\u003Cbr\u003E\tpublic class ASS : PartModule\u003Cbr\u003E\t{\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tfloat throtel = 100f;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Version\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string version = \u00220.3\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_FloatRange (stepIncrement=0.01f, maxValue=2f, minValue=0f), KSPField (guiName=\u0022Translation G\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic float max_g_change = 0.25f;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName=\u0022Gravity\u0022, isPersistant=false, guiActive=true, guiActiveEditor=false)]\u003Cbr\u003E\t\tpublic string gravity_state = \u0022No Sensor Found\u0022;\u003Cbr\u003E\t\tpublic int grav_sensor_index = -1;\u003Cbr\u003E\t\tpublic bool grav_sensor_active = false;\u003Cbr\u003E\t\tpublic string grav_readout = \u0022.....\u0022;\u003Cbr\u003E\t\tpublic float gravity = 9.82f;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Deactivate\u0022, disabledText=\u0022Activate\u0022), KSPField(guiName=\u0022ASS\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool ass_on = true;\u003Cbr\u003E\t\tpublic bool ass_was_on = true;\u003Cbr\u003E\t\t[KSPAction (\u0022Action Activate ASS\u0022)]\u003Cbr\u003E\t\tpublic void ActionActivateASS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ass_on=true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Action Deactivate ASS\u0022)]\u003Cbr\u003E\t\tpublic void ActionDeactivateASS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ass_on=false;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Action Toggle ASS\u0022)]\u003Cbr\u003E\t\tpublic void ActionToggleASS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ass_on=!this.ass_on;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t//\u003Cbr\u003E\t\t//engine list\u003Cbr\u003E\t\tint max_engine_types = 5;\u003Cbr\u003E\t\t[KSPField (guiName=\u0022no_engine_types\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tint no_engine_types = 1;\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Release\u0022, disabledText=\u0022Control\u0022), KSPField(guiName=\u0022Basic Jet Engine\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool engine_1 = true;\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Release\u0022, disabledText=\u0022Control\u0022), KSPField(guiName=\u0022Engine 2\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool engine_2 = false;\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Release\u0022, disabledText=\u0022Control\u0022), KSPField(guiName=\u0022Engine 3\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool engine_3 = false;\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Release\u0022, disabledText=\u0022Control\u0022), KSPField(guiName=\u0022Engine 4\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool engine_4 = false;\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Release\u0022, disabledText=\u0022Control\u0022), KSPField(guiName=\u0022Engine 5\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool engine_5 = false;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName=\u0022engine_name_1\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic string engine_name_1;\u003Cbr\u003E\t\t[KSPField (guiName=\u0022engine_name_2\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic string engine_name_2;\u003Cbr\u003E\t\t[KSPField (guiName=\u0022engine_name_3\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic string engine_name_3;\u003Cbr\u003E\t\t[KSPField (guiName=\u0022engine_name_4\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic string engine_name_4;\u003Cbr\u003E\t\t[KSPField (guiName=\u0022engine_name_5\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic string engine_name_5;\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void SetEngineTypeName (int index_, string name_)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.Fields[index_\u002B6].guiName=name_;\u003Cbr\u003E\t\t\tswitch(index_)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 0: this.engine_name_1=name_; break;\u003Cbr\u003E\t\t\tcase 1: this.engine_name_2=name_; break;\u003Cbr\u003E\t\t\tcase 2: this.engine_name_3=name_; break;\u003Cbr\u003E\t\t\tcase 3: this.engine_name_4=name_; break;\u003Cbr\u003E\t\t\tcase 4: this.engine_name_5=name_; break;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic string GetEngineTypeName (int index_)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch(index_)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 0: return this.engine_name_1;\u003Cbr\u003E\t\t\tcase 1: return this.engine_name_2;\u003Cbr\u003E\t\t\tcase 2: return this.engine_name_3;\u003Cbr\u003E\t\t\tcase 3: return this.engine_name_4;\u003Cbr\u003E\t\t\tcase 4: return this.engine_name_5;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthrow new SystemException(\u0022ASS.GetEngineTypeName() was passed invalid index_ of \u0022\u002Bindex_);\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic void SetEngineControl (int index_, bool control_)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch(index_)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 0: this.engine_1=control_; break;\u003Cbr\u003E\t\t\tcase 1: this.engine_2=control_; break;\u003Cbr\u003E\t\t\tcase 2: this.engine_3=control_; break;\u003Cbr\u003E\t\t\tcase 3: this.engine_4=control_; break;\u003Cbr\u003E\t\t\tcase 4: this.engine_5=control_; break;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic bool GetEngineControl (int index_)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch(index_)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 0: return this.engine_1;\u003Cbr\u003E\t\t\tcase 1: return this.engine_2;\u003Cbr\u003E\t\t\tcase 2: return this.engine_3;\u003Cbr\u003E\t\t\tcase 3: return this.engine_4;\u003Cbr\u003E\t\t\tcase 4: return this.engine_5;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthrow new SystemException(\u0022ASS.GetEngineControl() was passed invalid index_ of \u0022\u002Bindex_);\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic void SetNoEngineTypes ( int count_ )\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tint a;\u003Cbr\u003E\t\t\tthis.no_engine_types=count_;\u003Cbr\u003E\t\t\tfor (a=0; a\u0026lt;this.max_engine_types; a\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (count_\u0026gt;a)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tbase.Fields[a\u002B6].guiActive =\u003Cbr\u003E\t\t\t\t\tbase.Fields[a\u002B6].guiActiveEditor = true;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\telse\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tbase.Fields[a\u002B6].guiActive =\u003Cbr\u003E\t\t\t\t\tbase.Fields[a\u002B6].guiActiveEditor = false;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic void UpdateEngineState ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tint a;\u003Cbr\u003E\t\t\tthis.engine_state=0;\u003Cbr\u003E\t\t\tint state=1;\u003Cbr\u003E\t\t\tfor (a=0; a\u0026lt;this.no_engine_types; a\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.GetEngineControl(a)) this.engine_state \u002B= state;\u003Cbr\u003E\t\t\t\tstate*=2;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPEvent (guiName=\u0022Search For Engines\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tvoid EventSearchForEngines ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022(ASS) EventSearchForEngines() Engine State = \u0022\u002Bthis.engine_state);\u003Cbr\u003E\t\t\tthis.GenEngineTypeList();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tbool sas_on=false;\u003Cbr\u003E\t\tbool rcs_on=true;\u003Cbr\u003E\u003Cbr\u003E\t\tint no_parts_in_last_check = -1;//used to check if parts have changed from last update\u003Cbr\u003E\u003Cbr\u003E\t\t//list of part indices that are engines the system is will control\u003Cbr\u003E\t\tint no_engines=0;\u003Cbr\u003E\t\tint max_engines=20;\u003Cbr\u003E\t\tint [] engine_indices = new int[20];\u003Cbr\u003E\u003Cbr\u003E\t\tint engine_state = -1;\u003Cbr\u003E\t\tint last_engine_state = -1;\u003Cbr\u003E\u003Cbr\u003E\t\tpublic ASS ()\u003Cbr\u003E\t\t{\u003Cbr\u003E//\t\t\tDebug.Log(\u0022(ASS) Constructor()\u0022);\u003Cbr\u003E\t\t}//endof public ASS ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnStart (PartModule.StartState state)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnStart (state);\u003Cbr\u003E//\t\t\tDebug.Log(\u0022(ASS) OnStart()\u0022);\u003Cbr\u003E/*\t\t\tDebug.Log(base.Events.Count\u002B\u0022 Events\u0022);\u003Cbr\u003E\t\t\tint a;\u003Cbr\u003E\t\t\tfor (a=0; a\u0026lt;base.Events.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(a\u002B\u0022) \u0022\u002Bbase.Events.GetByIndex(a).guiName);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tDebug.Log(base.Fields.Count\u002B\u0022 Fields\u0022);\u003Cbr\u003E\t\t\tfor (a=0; a\u0026lt;base.Fields.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(a\u002B\u0022) \u0022\u002Bbase.Fields[a].guiName);\u003Cbr\u003E\t\t\t}*/\u003Cbr\u003E\t\t\tif (this.vessel!=null)\u003Cbr\u003E\t\t\t{//vessel = null in editor\u003Cbr\u003E\t\t\t\t//disable the find engines button if we are not in the editor\u003Cbr\u003E\t\t\t\tbase.Events.GetByIndex(0).active=false;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnUpdate ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnUpdate();\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.CheckGravSensor();\u003Cbr\u003E\t\t\tthis.UpdateEngineState();\u003Cbr\u003E\t\t\tthis.GenEngineList();\u003Cbr\u003E\t\t\tthis.no_parts_in_last_check = this.vessel.parts.Count;//all changes in craft must now have been detected and delt with\u003Cbr\u003E\u003Cbr\u003E\t\t\tif (this.ass_was_on \u0026amp;\u0026amp; !this.ass_on)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.throtel=100f;\u003Cbr\u003E\t\t\t\tthis.SetThrust();\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthis.ass_was_on = this.ass_on;\u003Cbr\u003E\t\t\tif (!this.ass_on) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//check for change in control states\u003Cbr\u003E\t\t\tbool sas_state = this.vessel.ActionGroups[KSPActionGroup.SAS];\u003Cbr\u003E\t\t\tbool sas_changed = false;\u003Cbr\u003E//\t\t\tbool rcs_changed = false;\u003Cbr\u003E\t\t\tif (this.sas_on != sas_state)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.sas_on = sas_state;\u003Cbr\u003E\t\t\t\tsas_changed = true;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (this.rcs_on != this.vessel.ActionGroups[KSPActionGroup.RCS] )\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.rcs_on = this.vessel.ActionGroups[KSPActionGroup.RCS];\u003Cbr\u003E//\t\t\t\trcs_changed = true;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t//deal with changes in control state\u003Cbr\u003E\t\t\tif (!this.sas_on \u0026amp;\u0026amp; sas_changed)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\t//set throttel to max on SAS deactivation\u003Cbr\u003E\t\t\t\tthis.throtel=100f;\u003Cbr\u003E\t\t\t\tthis.SetThrust();\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t\t//apply sas stablisation\u003Cbr\u003E\t\t\tif (this.sas_on)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tCenterOfThrustQuery cot = new CenterOfThrustQuery();\u003Cbr\u003E\t\t\t\tVector3 thrust_vec = Vector3.zero;\u003Cbr\u003E\t\t\t\tfloat t;\u003Cbr\u003E\t\t\t\tint i;\u003Cbr\u003E\t\t\t\tfloat combined_thust_center = 0;\u003Cbr\u003E\t\t\t\tfloat target_thrust = this.gravity*this.vessel.GetTotalMass();\u003Cbr\u003E\t\t\t\tfloat thrust_range;\u003Cbr\u003E\t\t\t\t//check engine list\u003Cbr\u003E\t\t\t\tfor (i=0; i\u0026lt;this.no_engines; i\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tthis.vessel.parts[this.engine_indices[i]].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].OnCenterOfThrustQuery(cot);\u003Cbr\u003E\t\t\t\t\tt = this.vessel.parts[this.engine_indices[i]].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].finalThrust;\u003Cbr\u003E\t\t\t\t\tcot.dir.x *= t;\u003Cbr\u003E\t\t\t\t\tcot.dir.y *= t;\u003Cbr\u003E\t\t\t\t\tcot.dir.z *= t;\u003Cbr\u003E\t\t\t\t\tthrust_vec \u002B= cot.dir;\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\tthrust_range = this.vessel.parts[this.engine_indices[i]].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].maxThrust - this.vessel.parts[this.engine_indices[i]].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].minThrust;\u003Cbr\u003E\t\t\t\t\tcombined_thust_center \u002B= ((t-this.vessel.parts[this.engine_indices[i]].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].minThrust)/thrust_range);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tcombined_thust_center /= ((float)this.no_engines);\u003Cbr\u003E\u003Cbr\u003E\t\t\t\tif (this.rcs_on)\u003Cbr\u003E\t\t\t\t{//Change target thrust and thus vertical speed\u003Cbr\u003E\t\t\t\t\tfloat max_thrust_change = (this.max_g_change*9.82f)*this.vessel.GetTotalMass  ();\u003Cbr\u003E\t\t\t\t\ttarget_thrust -= (max_thrust_change*this.vessel.ctrlState.Z);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t//Check if we should set thrust to full or none.\u003Cbr\u003E\t\t\t\t//It would be nice to calculate the exact thust needed but that would be very trouble some.\u003Cbr\u003E\t\t\t\t//if ((target_thrust-thrust_vec.magnitude)\u0026lt;0f) this.throtel=0f; else this.throtel=100f;\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t//Change of plans. Adjust throtle slowly and hope we find a sweatspot !\u003Cbr\u003E\t\t\t\tif (Mathf.Abs(target_thrust-thrust_vec.magnitude) \u0026gt; ((9.82f*this.vessel.GetTotalMass())*0.01) )\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tconst float max_change = 4f;\u003Cbr\u003E\t\t\t\t\tif ((target_thrust-thrust_vec.magnitude)\u0026lt;0f) this.throtel-=max_change; else this.throtel\u002B=max_change;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tthis.SetThrust();\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof public override void OnUpdate ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void SetThrust ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\t//SetThrust can be caled from strange places like Actions so must have n engine list generator in it to prevent the use of invalid indices\u003Cbr\u003E\t\t\tif (this.no_parts_in_last_check!=this.vessel.parts.Co  unt)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.GenEngineList();\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\t//clamp throtel as setting it out of range is cheating !\u003Cbr\u003E\t\t\tif (this.throtel\u0026gt;100f) this.throtel=100f;\u003Cbr\u003E\t\t\tif (this.throtel\u0026lt;0f) this.throtel=0f;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\t//find engines\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;this.no_engines; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.vessel.parts[this.engine_indices[i]].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].thrustPercentage = this.throtel;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof void SetThrust ()\u003Cbr\u003E\u003Cbr\u003E\t\t//Find active gravity sensor and then set gravity to a useable value\u003Cbr\u003E\t\tpublic void CheckGravSensor ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.FindActiveSensor();\u003Cbr\u003E\t\t\tif (this.grav_sensor_index==-1)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.gravity_state = \u0022No Sonsor Found\u0022;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.grav_sensor_active)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tthis.gravity_state = \u0022No Active Sensor\u0022;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\telse\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\ttry\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\tDebug.Log(\u0022(ASS) grav string = \u0022\u002Bthis.grav_readout);\u003Cbr\u003E\t\t\t\t\t\tif (this.grav_readout.Length\u0026gt;5)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tstring s = this.grav_readout.Substring(0,this.grav_readout.Le  ngth-5);\u003Cbr\u003E//\t\t\t\t\t\t\tDebug.Log(\u0022(ASS) shrotend grav string = \u0022\u002Bs);\u003Cbr\u003E\t\t\t\t\t\t\tthis.gravity = float.Parse(s);\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\telse this.gravity = 9.82f;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tcatch\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tthis.gravity = 9.82f;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tthis.gravity_state = this.grav_readout;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof void CheckGravSensor ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void FindActiveSensor ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tif (no_parts_in_last_check!=this.vessel.parts.Count)\u003Cbr\u003E\t\t\t{//if parts have change then the index is no longer valid\u003Cbr\u003E\t\t\t\tthis.grav_sensor_index = -1;\u003Cbr\u003E\t\t\t\tthis.grav_sensor_active = false;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif ( this.grav_sensor_index != -1 )\u003Cbr\u003E\t\t\t{//if grav sensor is valid check it is active and update readout\u003Cbr\u003E\t\t\t\tthis.grav_readout = this.vessel.parts[this.grav_sensor_index].FindModulesImplementing\u0026lt;ModuleEnviroSensor\u0026gt;()[0].readoutInfo;\u003Cbr\u003E\t\t\t\tthis.grav_sensor_active = this.grav_readout==\u0022off\u0022;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\t//We dont need to search again if we have an active sensor and parts have not changed\u003Cbr\u003E\t\t\tif ( no_parts_in_last_check==this.vessel.parts.Count \u0026amp;\u0026amp; this.grav_sensor_active==true ) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.grav_sensor_index = -1;\u003Cbr\u003E\t\t\tthis.grav_sensor_active = false;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;this.vessel.parts.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.vessel.parts[i].name==\u0022sensorGravimeter\u0022)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEnviroSensor\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\tDebug.Log(\u0022(ASS) found  sensor at \u0022\u002Bi\u002B\u0022) name=\u0022\u002Bthis.vessel.parts[i].name);\u003Cbr\u003E\t\t\t\t\t\tif (this.grav_sensor_index == -1)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\t\tDebug.Log(\u0022(ASS) grav sensor index set to \u0022\u002Bi\u002B\u0022 as it was invalid\u0022);\u003Cbr\u003E\t\t\t\t\t\t\tthis.grav_sensor_index=i;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\tthis.grav_readout = this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEnviroSensor\u0026gt;()[0].readoutInfo;\u003Cbr\u003E\t\t\t\t\t\tthis.grav_sensor_active = this.grav_readout==\u0022off\u0022;\u003Cbr\u003E\t\t\t\t\t\tif (this.grav_sensor_active)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\t\tDebug.Log(\u0022(ASS) found active sensor at \u0022\u002Bi\u002B\u0022 name=\u0022\u002Bthis.vessel.parts[i].name);\u003Cbr\u003E\t\t\t\t\t\t\tthis.grav_sensor_index = i;\u003Cbr\u003E\t\t\t\t\t\t\tbreak;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof void FindActiveSensor ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void AddPartToList ( Part p_, List\u0026lt;Part\u0026gt; list_ )\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tlist_.Add(p_);\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;p_.children.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.AddPartToList(p_.children[i],list_);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void GenEngineTypeList ()\u003Cbr\u003E\t\t{\u003Cbr\u003E//\t\t\tDebug.Log(\u0022(ASS) GenEngineTypeList() begining\u0022);\u003Cbr\u003E\t\t\tint c = 0;\u003Cbr\u003E\t\t\tstring[] new_names = {\u0022\u0022,\u0022\u0022,\u0022\u0022,\u0022\u0022,\u0022\u0022};\u003Cbr\u003E\t\t\tbool[] new_states = {false,false,false,false,false};\u003Cbr\u003E\t\t\t//all engines should be off by default unless there is no predefined engine states and then the 1st engine type should be enabled\u003Cbr\u003E\t\t\tif (this.no_engine_types==0) new_states[0]=true;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//vessel will = null in editor so we must cycle through parts list another way\u003Cbr\u003E\u003Cbr\u003E\t\t\tPart start_part = this.part;\u003Cbr\u003E\t\t\twhile (start_part.parent!=null) start_part=start_part.parent;\u003Cbr\u003E\u003Cbr\u003E\t\t\tList\u0026lt;Part\u0026gt; part_list = new List\u0026lt;Part\u0026gt;();\u003Cbr\u003E\t\t\tAddPartToList(start_part,part_list);\u003Cbr\u003E\u003Cbr\u003E//\t\t\tDebug.Log(\u0022(ASS) GenEngineTypeList() searching \u0022\u002Bpart_list.Count\u002B\u0022 parts\u0022);\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;part_list.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tstring s = part_list[i].partInfo.title;\u003Cbr\u003E\t\t\t\t\tint a;\u003Cbr\u003E\t\t\t\t\tbool add_type=true;\u003Cbr\u003E\t\t\t\t\tfor (a=0; a\u0026lt;c; a\u002B\u002B)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (new_names[a]==s) add_type=false;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tif (add_type)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tnew_names[c]=s;\u003Cbr\u003E\t\t\t\t\t\t//search all engine types for match\u003Cbr\u003E\t\t\t\t\t\tfor(a=0; a\u0026lt;this.max_engine_types; a\u002B\u002B)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tif (this.GetEngineTypeName(a)==s)\u003Cbr\u003E\t\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\t\tnew_states[c]=this.GetEngineControl(a);\u003Cbr\u003E//\t\t\t\t\t\t\t\tDebug.Log(\u0022(ASS) GenEngineTypeList() \u0022\u002Bs\u002B\u0022 was found in old list and set as \u0022\u002Bnew_states[c]);\u003Cbr\u003E\t\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\tc\u002B\u002B;\u003Cbr\u003E\t\t\t\t\t\tif (c\u0026gt;=this.max_engine_types) break;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tfor(i=0; i\u0026lt;c; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E//\t\t\t\tDebug.Log(\u0022(ASS) GenEngineTypeList() \u0022\u002Bi\u002B\u0022 = \u0022\u002Bnew_names[i]\u002B\u0022 \u0022\u002Bnew_states[i]);\u003Cbr\u003E\t\t\t\tthis.SetEngineTypeName(i,new_names[i]);\u003Cbr\u003E\t\t\t\tthis.SetEngineControl(i,new_states[i]);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthis.SetNoEngineTypes(c);\u003Cbr\u003E//\t\t\tDebug.Log(\u0022(ASS) GenEngineTypeList() end\u0022);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void GenEngineList ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tif (this.no_parts_in_last_check!=this.vessel.parts.Co  unt || this.last_engine_state!=this.engine_state)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E//\t\t\t\tDebug.Log(\u0022(ASS) GenEngineList() Engine State = \u0022\u002Bthis.engine_state);\u003Cbr\u003E\t\t\t\tthis.last_engine_state=this.engine_state;\u003Cbr\u003E\t\t\t\tthis.GenEngineTypeList();\u003Cbr\u003E\t\t\t\tthis.no_engines=0;\u003Cbr\u003E\t\t\t\tint p,t;\u003Cbr\u003E\t\t\t\tfor (p=0; p\u0026lt;this.vessel.parts.Count; p\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (this.vessel.parts[p].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\tDebug.Log(\u0022(ASS) found engine \u0022\u002Bp\u002B\u0022 \u0022\u002Bthis.vessel.parts[p].partInfo.title);\u003Cbr\u003E\t\t\t\t\t\tfor (t=0; t\u0026lt;this.no_engine_types; t\u002B\u002B)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tif (this.GetEngineControl(t))\u003Cbr\u003E\t\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\t\tif ( this.vessel.parts[p].partInfo.title == this.GetEngineTypeName(t) )\u003Cbr\u003E\t\t\t\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\t\t\t\tDebug.Log(\u0022(ASS) Adding engine \u0022\u002Bp\u002B\u0022 \u0022\u002Bthis.GetEngineTypeName(t));\u003Cbr\u003E\t\t\t\t\t\t\t\t\tthis.engine_indices[this.no_engines] = p;\u003Cbr\u003E\t\t\t\t\t\t\t\t\tthis.no_engines\u002B\u002B;\u003Cbr\u003E\t\t\t\t\t\t\t\t\tif ( this.no_engines \u0026gt;= this.max_engines )\u003Cbr\u003E\t\t\t\t\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\t\t\t\t\tDebug.Log(\u0022(ASS) Found max number of engines \u0022\u002Bthis.max_engines);\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\treturn;\u003Cbr\u003E\t\t\t\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E//\t\t\t\tDebug.Log(\u0022(ASS) \u0022\u002Bthis.no_engines\u002B\u0022 Engines in control list\u0022);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnLoad (ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E//\t\t\tDebug.Log(\u0022(ASS) OnLoad node = \u0022\u002Bnode.ToString());\u003Cbr\u003E\t\t\tbase.OnLoad(node);\u003Cbr\u003E\t\t\t//This should eneble and disable the correct GUI engine components\u003Cbr\u003E\t\t\tthis.SetNoEngineTypes(this.no_engine_types);\u003Cbr\u003E\t\t\t//This should set the GUI names from the stored data\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;this.no_engine_types; i\u002B\u002B) this.SetEngineTypeName(i,this.GetEngineTypeName(i)  );\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}//endof public class ASS : PartModule\u003Cbr\u003E}//endof namespace ASS\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"The Destroyer","CreatedById":36109,"CreatedDateTime":"2014-02-10T23:22:11Z","Content":"\n\u003Cp\u003EReally cool!\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-14T13:04:41Z","Content":"\n\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E just added a new video for the 0.3 demonstration.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/3k396H0u3eA?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EIv also updated my to do list with some thoughts about where to go next.\u003C/p\u003E\u003Cp\u003EIv still not tested this off world yet but i am in my base component design phase hence the thoughts about what changes would be good for 0.4\u003C/p\u003E\u003Cp\u003EBuilding the Mun Lander demonstrated to me how important it is to link translation engines into the RCS keys. Having 3 different key systems each with 3 directions of control will get Jeb killed !\u003C/p\u003E\u003Cp\u003EIf all gos well then i think 0.4 should be the completion of the plugin and a change to V1.\u003C/p\u003E\u003Cp\u003EIt should probably rename it then as to make it easier to understand. Ill certainly keep a reference to Cupcake in the description as the primary inspiration though.\u003C/p\u003E\u003Cp\u003EAnyone got an idea for a good name ?\u003C/p\u003E\u003Cp\u003EAdvanced VTOL Control Systems Humm..... adding words to an acronym is just wrong.\u003C/p\u003E\u003Cp\u003EAdvanced Hover System (VTOL) humm... AHS might be a better name for the component and the plugin.\u003C/p\u003E\u003Cp\u003ERocket Operation Coordination Kontroler...... well yeah i might need to brush of an old fashioned dictionary and search for some good K words.\u003C/p\u003E\u003Cp\u003EId think knowing k words could nether be a bad thing when it comes to naming stuff in the PNK engineering department.\u003C/p\u003E\u003Cp\u003EThis would be a great time to suggest any ideas you may have.\u003C/p\u003E\u003Cp\u003EThe next update will probably involve another complete rewrite to get everything to function correctly so suggestions are best done sooner than later.\u003C/p\u003E\u003Cp\u003EHave fun and fly safely.\u003C/p\u003E\n"},{"CreatedByName":"Virindi","CreatedById":84021,"CreatedDateTime":"2014-02-15T06:34:45Z","Content":"\n\u003Cp\u003EI can\u0027t get the part to show up in the part list. I didn\u0027t see any errors in the log.\u003C/p\u003E\u003Cp\u003EI added the module to one of the cockpits and the effect is pretty slick. Control of jet engines is way better than I expected. You seem to have hit a good balance between automation and challenge; it makes VTOLs possible to fly with precision without making it cheaty.\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-15T11:22:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI can\u0027t get the part to show up in the part list. I didn\u0027t see any errors in the log.\u003Cp\u003EI added the module to one of the cockpits and the effect is pretty slick.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHummm.... Interesting\u003C/p\u003E\u003Cp\u003EYou said you added the module to a cockpit so you must know your way around KSP very well.\u003C/p\u003E\u003Cp\u003ESo i have to ask the stupid questions just to get them out of the way.\u003C/p\u003E\u003Cp\u003EDid you copy the plugin to the GameData directory ? Of course you did or the module would not have been found.\u003C/p\u003E\u003Cp\u003EAre you running version 0.23 ? Yes or the module would not work due to lack of tweakables.\u003C/p\u003E\u003Cp\u003EDid you look in the correct place for the control system ? yes why where else would i look for a control system.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/N3Y5S77.png\u0022 alt=\u0022N3Y5S77.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ESo for some speculation.\u003C/p\u003E\u003Cp\u003ELooking at my log file i notice that there is a space in my part name.\u003C/p\u003E\u003Cp\u003E[LOG 10:06:17.233] Config(PART) Im_A_Cupcake_Wannabe/part/PNK ASS\u003C/p\u003E\u003Cp\u003EI think that can only be a bad thing. Im testing on windows 7 and it seams to work fine but im not sure why there\u0027s a directory style entry in the log with the part name in it anyway.\u003C/p\u003E\u003Cp\u003EIm sure this could cause problems on some operating systems as file paths with spaces arnt a good thing but still I cant see how it could be an actual file reference.\u003C/p\u003E\u003Cp\u003EIt is something that looks very dodgy so you could try changing the part.cfg file from \u003Cstrong\u003Ename = PNK ASS\u003C/strong\u003E to \u003Cstrong\u003Ename = PNK_ASS\u003C/strong\u003E and seeing if that fixes it.\u003C/p\u003E\u003Cp\u003EIf it still dosnt work posting your log file using the code wrap would be very handy.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E Control of jet engines is way better than I expected. You seem to have hit a good balance between automation and challenge; it makes VTOLs possible to fly with precision without making it cheaty.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003C/p\u003E\u003Cp\u003EIt was more luck than anything else. Just turns out that keeping things simple makes it work better. The original SAS system is where all the clever trickery is going on.\u003C/p\u003E\u003Cp\u003EIv tried doing the docking without using translation rockets (like cupcake dose) and it is almost impossible using keys even with the hover control so it dose just shift the problem from one of precision control to expert design.\u003C/p\u003E\u003Cp\u003EIv still not docked a full orange tank yet but im sue it can be done with a well designed craft (balanced translation rockets is the key).\u003C/p\u003E\u003Cp\u003EThings do start to get very interesting with large masses and jets though as the spool up time starts to get out of hand but then using 2 types of engines for a hover fixes that at the cost of fuel usage.\u003C/p\u003E\u003Cp\u003EThe main thing is that its a lot of fun \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-15T11:27:00Z\u0022 title=\u002202/15/2014 11:27  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 15, 2014\u003C/time\u003E by mpink\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Virindi","CreatedById":84021,"CreatedDateTime":"2014-02-15T13:00:27Z","Content":"\n\u003Cp\u003EGot it, user error. I swear I looked through every part to try to find it but I must not have noticed the second \u0027copy\u0027 of the stabilizer.\u003C/p\u003E\u003Cp\u003EIs there an easy way to query jets about their spool characteristics? If so you could have it only use the rockets while the jets are powering up, or if it needs more thrust than they can provide. Rocket fuel would last a lot longer that way.\u003C/p\u003E\n"},{"CreatedByName":"DYJ","CreatedById":8636,"CreatedDateTime":"2014-02-15T15:33:15Z","Content":"\n\u003Cp\u003ESo, Where\u0027s the license?\u003C/p\u003E\n"},{"CreatedByName":"AngelLestat","CreatedById":58968,"CreatedDateTime":"2014-02-15T15:53:28Z","Content":"\n\u003Cp\u003EI like the new demo video.\u003C/p\u003E\u003Cp\u003EI buy it.\u003C/p\u003E\u003Cp\u003EIt works with turbine engines too?\u003C/p\u003E\n"},{"CreatedByName":"Tery215","CreatedById":89094,"CreatedDateTime":"2014-02-15T16:05:06Z","Content":"\n\u003Cp\u003Enot to be an insult, but\u003C/p\u003E\u003Cp\u003Ethis basically turns your aircraft into an RCS block?\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-15T23:33:56Z","Content":"\n\u003Cp\u003EIm on the drunk side so im struggling with this a bit but hear gos.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Virindi\u0022 data-cite=\u0022Virindi\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EGot it, user error. I swear I looked through every part to try to find it but I must not have noticed the second \u0027copy\u0027 of the stabilizer.\u003C/p\u003E\u003Cp\u003EIs there an easy way to query jets about their spool characteristics? If so you could have it only use the rockets while the jets are powering up, or if it needs more thrust than they can provide. Rocket fuel would last a lot longer that way.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo problems.\u003C/p\u003E\u003Cp\u003EIts all part of the development process and i most certainly should add making a model to the to do list. \u003C/p\u003E\u003Cp\u003Eall engines use the same module and so yes easy and no hard.\u003C/p\u003E\u003Cp\u003EThe basic jet engine looks like this\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\tname = ModuleEngines\u003Cbr\u003E\tuseEngineResponseTime = True\u003Cbr\u003E       \tengineAccelerationSpeed = 0.12\u003Cbr\u003E    \tengineDecelerationSpeed = 0.21\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVery easy to find and hard to understand but\u003C/p\u003E\u003Cp\u003Eeasy to not care about and fun to tweak around while making your life just a little harder.\u003C/p\u003E\u003Cp\u003EThe even more complicated part of calculating jet thrust comes from the height curves and pressure curves.\u003C/p\u003E\u003Cp\u003EThe plugin uses a simple is best strategy and so sets all controlled engines to the same thrust which proves far more interesting than you may imagine if jets are involved.\u003C/p\u003E\u003Cp\u003EThe very 1st video shows my pod racer hovering with jets and rockets enabled in the A.S.S.\u003C/p\u003E\u003Cp\u003EThis uses lots of fuel but provides instant vertical control response that was needed at times.\u003C/p\u003E\u003Cp\u003EYou could just Action group the rockets so they turn off and give yourself some up thrust prior to disabling to get you through the change.\u003C/p\u003E\u003Cp\u003ETurning them back on would not be so bad as it would be an instant boost up and so not do any damage but the intent is to find the correct balance of jet to rocket and im sure it changes from planet to planet.\u003C/p\u003E\u003Cp\u003EAs spotted by others the plugin is not overpowered and just intended to change the form of the VTOL challenge.\u003C/p\u003E\u003Cp\u003EThe mod is very interesting hear as it runs on fact not fiction. It adjust the thrust tweak based on the current known output of the controlled engines and nothing else. This means adding thrust by activating none controlled engines will not effect the controlled engines so will result in drastic speed changes. With jets it also results in a constant yo yo thrust level as the due to spool rates.\u003C/p\u003E\u003Cp\u003EIt is finding the balance of jets to rockets that is intended to be the designers challenge (Replacing the piloting challenge).\u003C/p\u003E\u003Cp\u003EThe \u003Cstrong\u003EI build a Mun Lander\u003C/strong\u003E video has just jets in the A.S.S control and all the other rockets are set to action groups bound to the key pad.\u003C/p\u003E\u003Cp\u003EThis is my third 3D set of controls that makes Jeb die so very much at the moment.\u003C/p\u003E\u003Cp\u003EI use the (key pad) Arrows for translation with exception for very fine height controls provided by the RCS H,N key watching.\u003C/p\u003E\u003Cp\u003EThen i use 1 action group for toggling the upwards rockets for the \u003Cstrong\u003Eoh crap\u003C/strong\u003E moments.\u003C/p\u003E\u003Cp\u003E5 turns all the keypad controlled rockets off. This is needed as you will get confused and press the wrong button not know what you have done and start panicking. There are times in the video where forward and backward engines are both on and im so focused on the nav ball i just dont know so i hit the panic button and try to regain control. \u003C/p\u003E\u003Cp\u003ECombine this with SAS drift and its no walk in the park.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DYJ\u0022 data-cite=\u0022DYJ\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESo, Where\u0027s the license?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ewell in the 1st lines of the code\u003C/p\u003E\u003Cp\u003E//M Pink provides ASS (v0.3) freely for anyone to use for anyreason they see fit.\u003C/p\u003E\u003Cp\u003E//M Pink is not responsable for any damage caused by ASS.\u003C/p\u003E\u003Cp\u003E//Ass Should Be Used At Your Own Risk !\u003C/p\u003E\u003Cp\u003EIm not one for caring to much about licenses and so this dose bring up the possibility for anyone to claim the rights to this code and take ownership of it and or sell it as there own work but for me the greatest thing i could hope for is the plugin being claimed and used by squad and me not having to follow up with any problems of my bad coding \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI think it dose count as a licence without using any stranded copyright.\u003C/p\u003E\u003Cp\u003EIf there is any way i could provide this more freely and clearly or something i should add please share.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AngelLestat\u0022 data-cite=\u0022AngelLestat\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI like the new demo video.\u003C/p\u003E\u003Cp\u003EI buy it.\u003C/p\u003E\u003Cp\u003EIt works with turbine engines too?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003Eyou could always send some cheap beer \u003C/p\u003E\u003Cp\u003EI hope so but its probably a bit confusing as to how at the moment.\u003C/p\u003E\u003Cp\u003EThe tweakable is confusing and i should write something about it but hope to replace the system soon.\u003C/p\u003E\u003Cp\u003EThe design is meant to be a bit limiting so it can only recognize the first 5 found engine types.\u003C/p\u003E\u003Cp\u003EIt presents these as tweakable (Right click PNK A.S.S part) toggles with Control/Release next to them.\u003C/p\u003E\u003Cp\u003EIt gets very confusing though when in the editor as there is a scan for engines button that is needed there to find the engines.\u003C/p\u003E\u003Cp\u003EWhat makes things truly confusing though is pressing sometimes dose nothing but if you right click the part again after triggering this, the menu will refresh and you will see the list.\u003C/p\u003E\u003Cp\u003EShortened names sure don\u0027t help but i don\u0027t think there\u0027s much i can do there and the next update should change this totally anyways.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/0YOwM6v.png\u0022 alt=\u00220YOwM6v.png\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tery215\u0022 data-cite=\u0022Tery215\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Enot to be an insult, but\u003C/p\u003E\u003Cp\u003Ethis basically turns your aircraft into an RCS block?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell thats where im pushing for yes.\u003C/p\u003E\u003Cp\u003ENo insult taken its actually quite an achievement to be able to practice zero g whilst so close to a planet that you wont always die when you crash.\u003C/p\u003E\u003Cp\u003EIf memory serves some of the early moon lander practice craft were the most dangerous things we have ever tried to fly.\u003C/p\u003E\u003Cp\u003EThe idea is that the mod combined with some design skills should negate gravity until your fuel runs out and thus just a few RCS thrusters could get you from the launch pad to the VAB helipad with no \u003Cspan style=\u0022text-decoration:underline;\u0022\u003Edanger\u003C/span\u003E.\u003C/p\u003E\u003Cp\u003EThe fun comes though when you try to move something or change the S.A.S lock. The hover thrust is controlled by your crafts angle and A.S.S dose nothing to change this so life can get very complicated very very quickly if you place you RCS thrusters in a stupid place.\u003C/p\u003E\u003Cp\u003EThis is truly the most basic form of fly by wire as it just removes the need for you to do some computing in flight. It just trys to keep a thrust stream = to the strength of gravity and nothing more, not even compare if the thrust and gravity are in the opposite directions (loops are not a good idea).\u003C/p\u003E\n"},{"CreatedByName":"Virindi","CreatedById":84021,"CreatedDateTime":"2014-02-17T05:18:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mpink\u0022 data-cite=\u0022mpink\u0022\u003E\u003Cdiv\u003EThis is truly the most basic form of fly by wire as it just removes the need for you to do some computing in flight. It just trys to keep a thrust stream = to the strength of gravity and nothing more, not even compare if the thrust and gravity are in the opposite directions (loops are not a good idea).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis brings up a simple addition that could be made: assume the engines are pointed \u0027down\u0027 on the aircraft (relative to the currently active control part), and add extra throttle based on the angle of your craft to the ground. Just blindly make it so that the vertical portion of the force is equal to gravity.\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-17T10:05:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Virindi\u0022 data-cite=\u0022Virindi\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis brings up a simple addition that could be made: assume the engines are pointed \u0027down\u0027 on the aircraft (relative to the currently active control part), and add extra throttle based on the angle of your craft to the ground. Just blindly make it so that the vertical portion of the force is equal to gravity.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah it sounds interesting and I will give it a try. I dont think it will work though.\u003C/p\u003E\u003Cp\u003EI think that if you rotated to 45 degrease the jets would take so long to spool up that you would find it not very useful but thats what rockets are for \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E.\u003C/p\u003E\u003Cp\u003EI do see that it would add a lot of power to a racer and let you focus more on not crashing rather than worrying about your height so much.\u003C/p\u003E\u003Cp\u003EIt would be very easy to extend on this and say that it should select the best engines for the hover and try to only thrust up but then we would be replacing more RCS systems and loosing translation ability.\u003C/p\u003E\u003Cp\u003EI am very concerned about what should or will happen when the hover engines cant help with vertical climb though.\u003C/p\u003E\u003Cp\u003ECurrently with the fixed thrust system you can do loops without worrying that the jets might power down or power up to full when your pointing down \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_shocked.gif\u0022 alt=\u0022:0.0:\u0022\u003E.\u003C/p\u003E\u003Cp\u003EHummmm..... I see ups and downs to both systems with nether being perfect \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E so i like it and will add a mode system so you can choose what hover type to use.\u003C/p\u003E\n"},{"CreatedByName":"Virindi","CreatedById":84021,"CreatedDateTime":"2014-02-17T18:11:01Z","Content":"\n\u003Cp\u003EPerhaps just have thrust be at gravity if the angle is over 90 degrees? That way jets will never spool below what you need to maintain flight. I didn\u0027t try loops...I assume you\u0027d have to hold the up key for awhile afterwards to cancel out the downward velocity you get?\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-17T21:56:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Virindi\u0022 data-cite=\u0022Virindi\u0022\u003E\u003Cdiv\u003EPerhaps just have thrust be at gravity if the angle is over 90 degrees? That way jets will never spool below what you need to maintain flight. I didn\u0027t try loops...I assume you\u0027d have to hold the up key for awhile afterwards to cancel out the downward velocity you get?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy main reason for looping was a mismatch in jet output resulting in great climb rate after undocking LOL (not shown in a video).\u003C/p\u003E\u003Cp\u003EIt all depends on craft weight as light craft are very forgiving.\u003C/p\u003E\u003Cp\u003EI think providing there are a decent amount of Action groups so you can choose the correct setup with 1 key then there should be no problem with getting 100% thrust when pointing over horizontal \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI think no matter what i do, for anything approaching stunt flight things will get stupidly complicated and always need a vertical rocket toggle key (thats good).\u003C/p\u003E\u003Cp\u003EOh and there is always the normal throttle settings that override tweak thrust anyways. You can just hit X and throttle up again.\u003C/p\u003E\u003Cp\u003EI cant wait to see how it handles \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003C/p\u003E\u003Cp\u003EIm pondering what i should do to showoff the next version of Control system ? One thought is beating my own time for my KSC tour challenge but doing a loop around the walkway \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E or my other thought is to make a monstrous 3 part supper heavy lifter for the today i build a rocket challenge.\u003C/p\u003E\u003Cp\u003EIm still some way off of making my kethane mining colony that was my main reason for making the plugin but things are moving along there too.\u003C/p\u003E\u003Cp\u003EBeen looking into models today, mainly at the part merge tool.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/x9j75GB.png\u0022 alt=\u0022x9j75GB.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt done a very good job of showing me how to use stock parts and save game resources.\u003C/p\u003E\u003Cp\u003EIm a big fan of the stock look and way prefer the laziness of not having to make new models and textures.\u003C/p\u003E\u003Cp\u003EOnly downside is a game bug forcing vertical stacking like with the 2 cross shaped parts.\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-20T15:51:42Z","Content":"\n\u003Cp\u003EOk i have what seams to be a working \u003Ca href=\u0022https://www.dropbox.com/s/nzhhty292ua6q9b/AdvancedHoverSystem.zip\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EV0.4 Advanced Hover System\u003C/span\u003E\u003C/a\u003E update.\u003C/p\u003E\u003Cp\u003EIm more than sure there shall be some bugs to squash though. For instance iv not tested it with solid rockets yet \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E. It will probably work with them too so i should check that and see if it needs fixing.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/VhF47nciV-Y?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\u003Cstrong\u003EChange Log\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Ev0.4\u003C/p\u003E\u003Cp\u003ERedesigned the ASS into an AHS so it now has hover direction, hover mode and some-other tweakables.\u003C/p\u003E\u003Cp\u003EAdded RCSEngineTranslation Module and added it to all engine parts on start-up.\u003C/p\u003E\u003Cp\u003EMade 2 new models so that the AHS have there very own look (stock style).\u003C/p\u003E\u003Cp\u003EAdded resource usage so it now eats up the energy and leaks out heat.\u003C/p\u003E\u003Cp\u003EAdded Master/Slave system along with a more limiting number of controllable engines so multiple AHS should be needed for large craft.\u003C/p\u003E\u003Cp\u003EAdded the Active hover mode as suggested by Virindi (good call there \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EV0.4 Code with do what you want licence\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//M Pink provides AHS (v0.4) freely for anyone to use for anyreason they see fit.\u003Cbr\u003E//M Pink is not responsable for any damage caused by AHS.\u003Cbr\u003E//AHS Should Be Used At Your Own Risk !\u003Cbr\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace AHS\u003Cbr\u003E{\u003Cbr\u003E\t[KSPAddon(KSPAddon.Startup.MainMenu,true)]\u003Cbr\u003E\tpublic class RCSAddonSetup :MonoBehaviour\u003Cbr\u003E\t{\u003Cbr\u003E\t\tvoid Awake ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Awake()\u0022);\u003Cbr\u003E\u003Cbr\u003E\t\t\tPartLoader pl = PartLoader.Instance;\u003Cbr\u003E\t\t\tif (pl==null)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Partloader was null\u0022);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Partloader Found\u0022);\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Number of parts to scan = \u0022\u002Bpl.parts.Count);\u003Cbr\u003E\t\t\t\tint a=0;\u003Cbr\u003E\t\t\t\tfor (a=0; a\u0026lt;pl.parts.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tbool has_engine = false;\u003Cbr\u003E\t\t\t\t\tbool has_rcs = false;\u003Cbr\u003E\t\t\t\t\tint b=0;\u003Cbr\u003E\t\t\t\t\tfor (b=0; b\u0026lt;pl.parts[a].moduleInfos.Count; b\u002B\u002B)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (\u0022Engine\u0022==pl.parts[a].moduleInfos[b].moduleName) has_engine=true;\u003Cbr\u003E\t\t\t\t\t\tif (\u0022RCSEngineTranslation\u0022==pl.parts[a].moduleInfos[b].moduleName) has_rcs=true;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tif (has_engine \u0026amp;\u0026amp; !has_rcs)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tDebug.Log(\u0022(AHS.RCSAddonSetup) Engine module found for \u0022\u002Bpl.parts[a].title\u002B\u0022 adding RCSEngineTranslation module\u0022);\u003Cbr\u003E\t\t\t\t\t\tpl.parts[a].partPrefab.AddModule(\u0022RCSEngineTranslation\u0022);\u003Cbr\u003E\t\t\t\t\t\tAvailablePart.ModuleInfo info = new AvailablePart.ModuleInfo();\u003Cbr\u003E\t\t\t\t\t\tinfo.moduleName = \u0022RCSEngineTranslation\u0022;\u003Cbr\u003E\t\t\t\t\t\tpl.parts[a].moduleInfos.Add(info);\u003Cbr\u003E\t\t\t\t\t}//endof if (has_engine \u0026amp;\u0026amp; !has_rcs)\u003Cbr\u003E\t\t\t\t}//endof for (a=0; a\u0026lt;pl.parts.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t}//end of else if (pl==null)\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tpublic class RCSEngineTranslation : PartModule\u003Cbr\u003E\t{\u003Cbr\u003E/*\t\t[KSPAddon (KSPAddon.Startup.MainMenu,true)]\u003Cbr\u003E\t\tvoid KSPAddonSetupRCSModules ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022(AHS.RCSEngineTranslation) KSPAddonSetupRCSModules()\u0022);\u003Cbr\u003E\u003Cbr\u003E\t\t\tPartLoader pl = PartLoader.Instance;\u003Cbr\u003E\t\t\tif (pl==null)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSEngineTranslation) Partloader was null\u0022);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSEngineTranslation) Partloader Found\u0022);\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS.RCSEngineTranslation) Number of parts to scan = \u0022\u002Bpl.parts.Count);\u003Cbr\u003E\t\t\t\tint a=0;\u003Cbr\u003E\t\t\t\tfor (a=0; a\u0026lt;pl.parts.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tbool has_engine = false;\u003Cbr\u003E\t\t\t\t\tbool has_rcs = false;\u003Cbr\u003E\t\t\t\t\tint b=0;\u003Cbr\u003E\t\t\t\t\tfor (b=0; b\u0026lt;pl.parts[a].moduleInfos.Count; b\u002B\u002B)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (\u0022Engine\u0022==pl.parts[a].moduleInfos[b].moduleName) has_engine=true;\u003Cbr\u003E\t\t\t\t\t\tif (\u0022RCSEngineTranslation\u0022==pl.parts[a].moduleInfos[b].moduleName) has_rcs=true;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tif (has_engine \u0026amp;\u0026amp; !has_rcs)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tDebug.Log(\u0022(AHS.RCSEngineTranslation) Engine module found for \u0022\u002Bpl.parts[a].title\u002B\u0022 adding RCSEngineTranslation module\u0022);\u003Cbr\u003E\t\t\t\t\t\tpl.parts[a].partPrefab.AddModule(\u0022RCSEngineTranslation\u0022);\u003Cbr\u003E\t\t\t\t\t\tAvailablePart.ModuleInfo info = new AvailablePart.ModuleInfo();\u003Cbr\u003E\t\t\t\t\t\tinfo.moduleName = \u0022RCSEngineTranslation\u0022;\u003Cbr\u003E\t\t\t\t\t\tpl.parts[a].moduleInfos.Add(info);\u003Cbr\u003E\t\t\t\t\t}//endof if (has_engine \u0026amp;\u0026amp; !has_rcs)\u003Cbr\u003E\t\t\t\t}//endof for (a=0; a\u0026lt;pl.parts.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t}//end of else if (pl==null)\u003Cbr\u003E\t\t}*/\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022dimention\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tint dimention = 0;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022direction\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tbool invert_direction = false;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022RCS Direction\u0022, isPersistant=false, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string state_string = \u0022Not Set Yet\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPEvent ( guiName=\u0022Next RCS Dimention\u0022, guiActive=true, guiActiveEditor=true )]\u003Cbr\u003E\t\tpublic void EventNextDirection()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention\u002B\u002B;\u003Cbr\u003E\t\t\tif (this.dimention\u0026gt;3) this.dimention=0;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPEvent ( guiName=\u0022Togle RCS Direction\u0022, guiActive=true, guiActiveEditor=true )]\u003Cbr\u003E\t\tpublic void EventTogleDirection()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.invert_direction = !this.invert_direction;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS None\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSNone ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=0;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Left\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSLeft ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=1;\u003Cbr\u003E\t\t\tthis.invert_direction=false;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Right\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSRight ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=1;\u003Cbr\u003E\t\t\tthis.invert_direction=true;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Up\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSUp ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=2;\u003Cbr\u003E\t\t\tthis.invert_direction=false;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Down\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSDown ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=2;\u003Cbr\u003E\t\t\tthis.invert_direction=true;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Forward\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSForward ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=3;\u003Cbr\u003E\t\t\tthis.invert_direction=false;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set RCS Backward\u0022)]\u003Cbr\u003E\t\tvoid ActionSetRCSBackward ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.dimention=3;\u003Cbr\u003E\t\t\tthis.invert_direction=true;\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void DisplayMode ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch (this.dimention)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 1: if (!this.invert_direction) this.state_string=\u0022Left\u0022; else this.state_string=\u0022Right\u0022; break;\u003Cbr\u003E\t\t\tcase 2: if (!this.invert_direction) this.state_string=\u0022Up\u0022; else this.state_string=\u0022Down\u0022; break;\u003Cbr\u003E\t\t\tcase 3: if (!this.invert_direction) this.state_string=\u0022Forward\u0022; else this.state_string=\u0022Backward\u0022; break;\u003Cbr\u003E\t\t\tdefault: this.state_string = \u0022None\u0022; break;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic RCSEngineTranslation ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t}//end of public RCSEngineTranslation ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnLoad (ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic override void OnStart (PartModule.StartState state)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.DisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t}//end of public class RCSEngineTranslation : PartModule\u003Cbr\u003E\u003Cbr\u003E\tpublic class AHS : PartModule\u003Cbr\u003E\t{\u003Cbr\u003E\t\t//energy used per seconde\u003Cbr\u003E\t\t[KSPField (isPersistant=true)]\u003Cbr\u003E\t\tpublic float power_consumption = 0.5f;\u003Cbr\u003E\t\t//heat produced per seconde\u003Cbr\u003E\t\t[KSPField (isPersistant=true)]\u003Cbr\u003E\t\tpublic float heat_production = 50f;\u003Cbr\u003E\u003Cbr\u003E\t\t//thrust settings for all dimentions\u003Cbr\u003E\t\t//isPersistant is probably not needed as saves cant be done throtled up in an atmoshpher\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel left\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_left = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel right\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_right = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel up\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_up = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel down\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_down = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel forward\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_forward = 100f;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022throtel backward\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tpublic float thrust_backward = 100f;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t//start of display fields\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Version\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string version = \u00220.4\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Comand State\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string comand_state = \u0022Not Set Yet\u0022;//Master,Slave,No Energy\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Engine Usage\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string engine_usage = \u0022Not Set Yet\u0022;//no / max\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName=\u0022Gravity\u0022, isPersistant=false, guiActive=true, guiActiveEditor=false)]\u003Cbr\u003E\t\tpublic string gravity_state = \u0022Not Set Yet\u0022;\u003Cbr\u003E\t\tpublic int grav_sensor_index = -1;\u003Cbr\u003E\t\tpublic bool grav_sensor_active = false;\u003Cbr\u003E\t\tpublic string grav_readout = \u0022.....\u0022;\u003Cbr\u003E\t\tpublic float gravity = 9.82f;\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_Toggle (enabledText=\u0022Deactivate\u0022, disabledText=\u0022Activate\u0022), KSPField(guiName=\u0022AHS\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic bool ahs_on = true;\u003Cbr\u003E\t\tpublic bool ahs_was_on = true;\u003Cbr\u003E\t\t[KSPAction (\u0022Activate AHS\u0022)]\u003Cbr\u003E\t\tpublic void ActionActivateAHS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ahs_on=true;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Deactivate AHS\u0022)]\u003Cbr\u003E\t\tpublic void ActionDeactivateAHS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ahs_on=false;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Toggle AHS\u0022)]\u003Cbr\u003E\t\tpublic void ActionToggleAHS (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.ahs_on=!this.ahs_on;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t//halfway range seporators\u003Cbr\u003E\t\t[UI_FloatRange (stepIncrement=0.01f, maxValue=4f, minValue=0.01f), KSPField (guiName=\u0022Translation G\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic float max_g_change = 0.25f;\u003Cbr\u003E\u003Cbr\u003E\t\t[UI_FloatRange (stepIncrement=0.5f, maxValue=100f, minValue=0.5f), KSPField (guiName=\u0022Thrust Change Rate\u0022, isPersistant=true, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic float max_thrust_change = 4f;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022dimention\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tint hover_dimention = 3;\u003Cbr\u003E\t\t[KSPField (guiName = \u0022direction\u0022, isPersistant=true, guiActive=false)]\u003Cbr\u003E\t\tbool hover_invert_direction = false;\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName = \u0022Hover Direction\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic string hover_state_string = \u0022Not Set Yet\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t//index 0\u003Cbr\u003E\t\t[KSPEvent ( guiName=\u0022Next Hover Dimention\u0022, guiActive=true, guiActiveEditor=true )]\u003Cbr\u003E\t\tpublic void EventNextDirection()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention\u002B\u002B;\u003Cbr\u003E\t\t\tif (this.hover_dimention\u0026gt;3) this.hover_dimention=1;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t//inde 1\u003Cbr\u003E\t\t[KSPEvent ( guiName=\u0022Togle Hover Direction\u0022, guiActive=true, guiActiveEditor=true )]\u003Cbr\u003E\t\tpublic void EventTogleDirection()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_invert_direction = !this.hover_invert_direction;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (guiName=\u0022Hover Mode: Active\u0022, guiActive=false, isPersistant=true)]\u003Cbr\u003E\t\tpublic int hover_mode = 1;\u003Cbr\u003E\t\t//index 2\u003Cbr\u003E\t\t[KSPEvent (guiName=\u0022Hover Mode: Active\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tpublic void EventNextHoverMode()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_mode\u002B\u002B;\u003Cbr\u003E\t\t\tif (this.hover_mode\u0026gt;2) this.hover_mode=0;\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set Active Hover Mode\u0022)]\u003Cbr\u003E\t\tpublic void ActionSetActiveHover (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_mode=1;\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set Fixed Hover Mode\u0022)]\u003Cbr\u003E\t\tpublic void ActionSetFixedHover (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_mode=2;\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Set Hover Mode Off\u0022)]\u003Cbr\u003E\t\tpublic void ActionSetHoverModeOff (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_mode=0;\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tpublic void SetHoverGUI ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch(this.hover_mode)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 0: base.Events.GetByIndex(2).guiName=\u0022Hover Mode: Off\u0022; break;\u003Cbr\u003E\t\t\tcase 1: base.Events.GetByIndex(2).guiName=\u0022Hover Mode: Active\u0022; break;\u003Cbr\u003E\t\t\tcase 2: base.Events.GetByIndex(2).guiName=\u0022Hover Mode: Fixed\u0022; break;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Left\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverLeft (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=1;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=false;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Right\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoveRight (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=1;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=true;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Up\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverUP (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=2;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=false;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Down\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverDown (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=2;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=true;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Forward\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverForward (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=3;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=false;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t[KSPAction (\u0022Hover Backward\u0022)]\u003Cbr\u003E\t\tpublic void ActionHoverBackward (KSPActionParam param)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.hover_dimention=3;\u003Cbr\u003E\t\t\tthis.hover_invert_direction=true;\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic void HoverDisplayMode ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tswitch (this.hover_dimention)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\tcase 1: if (!this.hover_invert_direction) this.hover_state_string=\u0022Left\u0022; else this.hover_state_string=\u0022Right\u0022; break;\u003Cbr\u003E\t\t\tcase 2: if (!this.hover_invert_direction) this.hover_state_string=\u0022Up\u0022; else this.hover_state_string=\u0022Down\u0022; break;\u003Cbr\u003E\t\t\tcase 3: if (!this.hover_invert_direction) this.hover_state_string=\u0022Forward\u0022; else this.hover_state_string=\u0022Backward\u0022; break;\u003Cbr\u003E\t\t\tdefault: this.hover_state_string = \u0022None\u0022; break;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//index 3\u003Cbr\u003E\t\t[KSPEvent (guiName=\u0022Force Editor Update\u0022, guiActive=true, guiActiveEditor=true)]\u003Cbr\u003E\t\tvoid EventForceEditorUpdate ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.CheckSlaveState();\u003Cbr\u003E\t\t\tthis.CountEngines();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tbool sas_on=false;\u003Cbr\u003E\t\tbool rcs_on=true;\u003Cbr\u003E\u003Cbr\u003E\t\tint no_parts_in_last_check = -1;//used to check if parts have changed from last update\u003Cbr\u003E\u003Cbr\u003E\t\t[KSPField (isPersistant=true)]\u003Cbr\u003E\t\tpublic int max_engines=10;\u003Cbr\u003E\t\tpublic int controlable_engines=0;\u003Cbr\u003E\t\tpublic List\u0026lt;int\u0026gt; slave_indices = new List\u0026lt;int\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E\t\tpublic AHS ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log(\u0022(AHS) Constructor()\u0022);\u003Cbr\u003E\t\t\t/*\u003Cbr\u003E\t\t\tPartLoader pl = PartLoader.Instance;\u003Cbr\u003E\t\t\tif (pl==null)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS) Partloader was null\u0022);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS) Partloader Found\u0022);\u003Cbr\u003E\t\t\t\tDebug.Log(\u0022(AHS) Number of parts to scan = \u0022\u002Bpl.parts.Count);\u003Cbr\u003E\t\t\t\tint a=0;\u003Cbr\u003E\t\t\t\tfor (a=0; a\u0026lt;pl.parts.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tbool has_engine = false;\u003Cbr\u003E\t\t\t\t\tbool has_rcs = false;\u003Cbr\u003E\t\t\t\t\tint b=0;\u003Cbr\u003E\t\t\t\t\tfor (b=0; b\u0026lt;pl.parts[a].moduleInfos.Count; b\u002B\u002B)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (\u0022Engine\u0022==pl.parts[a].moduleInfos[b].moduleName) has_engine=true;\u003Cbr\u003E\t\t\t\t\t\tif (\u0022RCSEngineTranslation\u0022==pl.parts[a].moduleInfos[b].moduleName) has_rcs=true;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tif (has_engine \u0026amp;\u0026amp; !has_rcs)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tDebug.Log(\u0022(AHS) Engine module found for \u0022\u002Bpl.parts[a].title\u002B\u0022 adding RCSEngineTranslation module\u0022);\u003Cbr\u003E\t\t\t\t\t\tpl.parts[a].partPrefab.AddModule(\u0022RCSEngineTranslation\u0022);\u003Cbr\u003E\t\t\t\t\t\tAvailablePart.ModuleInfo info = new AvailablePart.ModuleInfo();\u003Cbr\u003E\t\t\t\t\t\tinfo.moduleName = \u0022RCSEngineTranslation\u0022;\u003Cbr\u003E\t\t\t\t\t\tpl.parts[a].moduleInfos.Add(info);\u003Cbr\u003E\t\t\t\t\t}//endof if (has_engine \u0026amp;\u0026amp; !has_rcs)\u003Cbr\u003E\t\t\t\t}//endof for (a=0; a\u0026lt;pl.parts.Count; a\u002B\u002B)\u003Cbr\u003E\t\t\t}//end of else if (pl==null)\u003Cbr\u003E\t\t\t*/\u003Cbr\u003E\t\t}//endof public AHS ()\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnStart (PartModule.StartState state)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnStart (state);\u003Cbr\u003E\t\t\tif (this.vessel!=null)\u003Cbr\u003E\t\t\t{//vessel = null in editor\u003Cbr\u003E\t\t\t\t//disable editor only events\u003Cbr\u003E\t\t\t\tDebug.Log (\u0022(AHS) Number of events = \u0022\u002Bbase.Events.Count);\u003Cbr\u003E\t\t\t\tbase.Events.GetByIndex(3).active=false;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t\tif (base.part.stagingIcon == string.Empty)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tbase.part.stagingIcon = \u0022ADV_SAS\u0022;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnUpdate ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnUpdate();\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.CheckGravSensor();\u003Cbr\u003E\t\t\t//all changes in craft must now have been detected and delt with\u003Cbr\u003E\t\t\tthis.no_parts_in_last_check = this.vessel.parts.Count;\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.ahs_was_on = this.ahs_on;\u003Cbr\u003E\t\t\tif (!this.ahs_on) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//check for change in control states\u003Cbr\u003E\t\t\tbool sas_state = this.vessel.ActionGroups[KSPActionGroup.SAS];\u003Cbr\u003E\t\t\tbool sas_changed = false;\u003Cbr\u003E\t\t\tif (this.sas_on != sas_state)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.sas_on = sas_state;\u003Cbr\u003E\t\t\t\tsas_changed = true;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (this.rcs_on != this.vessel.ActionGroups[KSPActionGroup.RCS] )\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.rcs_on = this.vessel.ActionGroups[KSPActionGroup.RCS];\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tdouble amount_needed = (double)(this.power_consumption * TimeWarp.deltaTime);\u003Cbr\u003E\t\t\tdouble amount_got = this.part.RequestResource(\u0022ElectricCharge\u0022 ,amount_needed);\u003Cbr\u003E\t\t\tif ((amount_needed*0.95) \u0026gt; amount_got )\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.comand_state = \u0022No Energy\u0022;\u003Cbr\u003E\t\t\t\tthis.CheckSlaveState();\u003Cbr\u003E\t\t\t\treturn;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.comand_state==\u0022No Energy\u0022)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tthis.comand_state=\u0022Rebooting\u0022;\u003Cbr\u003E\t\t\t\t\tthis.CheckSlaveState();\u003Cbr\u003E\t\t\t\t\treturn;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthis.part.temperature \u002B= (this.heat_production * TimeWarp.deltaTime);\u003Cbr\u003E\u003Cbr\u003E\t\t\t//deal with changes in control state\u003Cbr\u003E\t\t\tif (!this.sas_on \u0026amp;\u0026amp; sas_changed)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\t//set thrust back to max on SAS deactivation\u003Cbr\u003E\t\t\t\tthis.thrust_backward = 100f;\u003Cbr\u003E\t\t\t\tthis.thrust_down     = 100f;\u003Cbr\u003E\t\t\t\tthis.thrust_forward  = 100f;\u003Cbr\u003E\t\t\t\tthis.thrust_left     = 100f;\u003Cbr\u003E\t\t\t\tthis.thrust_right    = 100f;\u003Cbr\u003E\t\t\t\tthis.thrust_up       = 100f;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tthis.CheckSlaveState();//master slave states could change every frame so need checking\u003Cbr\u003E\t\t\tthis.CountEngines();//engines may be changed anytime so need rechecking\u003Cbr\u003E\u003Cbr\u003E\t\t\t//apply sas stablisation\u003Cbr\u003E\t\t\tif (this.sas_on)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tCenterOfThrustQuery cot = new CenterOfThrustQuery();\u003Cbr\u003E\t\t\t\tVector3 thrust_up_vec = Vector3.zero;\u003Cbr\u003E\t\t\t\tVector3 thrust_down_vec = Vector3.zero;\u003Cbr\u003E\t\t\t\tVector3 thrust_left_vec = Vector3.zero;\u003Cbr\u003E\t\t\t\tVector3 thrust_right_vec = Vector3.zero;\u003Cbr\u003E\t\t\t\tVector3 thrust_forward_vec = Vector3.zero;\u003Cbr\u003E\t\t\t\tVector3 thrust_backward_vec = Vector3.zero;\u003Cbr\u003E\t\t\t\tfloat t;\u003Cbr\u003E\t\t\t\tint i;\u003Cbr\u003E\t\t\t\tint c=0;\u003Cbr\u003E\t\t\t\tList\u0026lt;ModuleEngines\u0026gt; engine_modules = new List\u0026lt;ModuleEngines\u0026gt;();\u003Cbr\u003E\t\t\t\tList\u0026lt;string\u0026gt; engine_rcs_state = new List\u0026lt;string\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t//make thrust vectors\u003Cbr\u003E\t\t\t\tfor (i=0; i\u0026lt;this.vessel.parts.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (this.vessel.parts[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (this.vessel.parts[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;()[0].state_string!=\u0022None\u0022 \u0026amp;\u0026amp; c\u0026lt;this.controlable_engines)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tc\u002B\u002B;\u003Cbr\u003E\t\t\t\t\t\t\tif (c==this.controlable_engines) Debug.Log(\u0022(AHS) Max controlable engines reached\u0022);\u003Cbr\u003E\t\t\t\t\t\t\tengine_modules.Add(this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0]);\u003Cbr\u003E\t\t\t\t\t\t\tengine_rcs_state.Add (this.vessel.parts[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;()[0].state_string);\u003Cbr\u003E\t\t\t\t\t\t\tthis.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].OnCenterOfThrustQuery(cot);\u003Cbr\u003E\t\t\t\t\t\t\tt = this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()[0].finalThrust;\u003Cbr\u003E\t\t\t\t\t\t\tcot.dir.x *= t;\u003Cbr\u003E\t\t\t\t\t\t\tcot.dir.y *= t;\u003Cbr\u003E\t\t\t\t\t\t\tcot.dir.z *= t;\u003Cbr\u003E\t\t\t\t\t\t\tswitch (this.vessel.parts[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;()[0].state_string)\u003Cbr\u003E\t\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tcase \u0022Up\u0022:       thrust_up_vec       \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\t\tcase \u0022Down\u0022:     thrust_down_vec     \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\t\tcase \u0022Left\u0022:     thrust_left_vec     \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\t\tcase \u0022Right\u0022:    thrust_right_vec    \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\t\tcase \u0022Forward\u0022:  thrust_forward_vec  \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\t\tcase \u0022Backward\u0022: thrust_backward_vec \u002B= cot.dir; break;\u003Cbr\u003E\t\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\tfloat target_up_thrust       = 0f;\u003Cbr\u003E\t\t\t\tfloat target_down_thrust     = 0f;\u003Cbr\u003E\t\t\t\tfloat target_left_thrust     = 0f;\u003Cbr\u003E\t\t\t\tfloat target_right_thrust    = 0f;\u003Cbr\u003E\t\t\t\tfloat target_forward_thrust  = 0f;\u003Cbr\u003E\t\t\t\tfloat target_backward_thrust = 0f;\u003Cbr\u003E\u003Cbr\u003E\t\t\t\tif (this.rcs_on)\u003Cbr\u003E\t\t\t\t{//Change target thrust and thus vertical speed\u003Cbr\u003E\t\t\t\t\tfloat g_change_in_thrust = (this.max_g_change*9.82f)*this.vessel.GetTotalMass();\u003Cbr\u003E\t\t\t\t\ttarget_down_thrust     -= (g_change_in_thrust*this.vessel.ctrlState.Y);\u003Cbr\u003E\t\t\t\t\ttarget_up_thrust       \u002B= (g_change_in_thrust*this.vessel.ctrlState.Y);\u003Cbr\u003E\t\t\t\t\ttarget_left_thrust     -= (g_change_in_thrust*this.vessel.ctrlState.X);\u003Cbr\u003E\t\t\t\t\ttarget_right_thrust    \u002B= (g_change_in_thrust*this.vessel.ctrlState.X);\u003Cbr\u003E\t\t\t\t\ttarget_forward_thrust  -= (g_change_in_thrust*this.vessel.ctrlState.Z);\u003Cbr\u003E\t\t\t\t\ttarget_backward_thrust \u002B= (g_change_in_thrust*this.vessel.ctrlState.Z);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t//adjust target thrust for hover correction\u003Cbr\u003E\t\t\t\tif (this.hover_mode\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tswitch (this.hover_state_string)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tcase \u0022Up\u0022:       target_up_thrust       \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Down\u0022:     target_down_thrust     \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Left\u0022:     target_left_thrust     \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Right\u0022:    target_right_thrust    \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Forward\u0022:  target_forward_thrust  \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Backward\u0022: target_backward_thrust \u002B= (this.gravity*this.vessel.GetTotalMass()); break;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\tif (this.hover_mode==1)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tVector3 sky_vector =  this.vessel.mainBody.transform.position-this.vessel.transform.position;\u003Cbr\u003E\t\t\t\t\t\tVector3 sky_n = sky_vector.normalized;\u003Cbr\u003E\t\t\t\t\t\tVector3 thr_n = Vector3.zero;\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\t\t//rotating one normal into the other should return 0 if they are on the same plan and 1 if at 90 degrease to each other\u003Cbr\u003E\t\t\t\t\t\tswitch (this.hover_state_string)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Up\u0022:       thr_n=thrust_up_vec.normalized;       break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Down\u0022:     thr_n=thrust_down_vec.normalized;     break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Left\u0022:     thr_n=thrust_left_vec.normalized;     break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Right\u0022:    thr_n=thrust_right_vec.normalized;    break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Forward\u0022:  thr_n=thrust_forward_vec.normalized;  break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Backward\u0022: thr_n=thrust_backward_vec.normalized; break;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\t\tfloat m = Mathf.Abs( (sky_n.x* thr_n.x) \u002B (sky_n.y*thr_n.y) \u002B (sky_n.z* thr_n.z));\u003Cbr\u003E\t\t\t\t\t\tif (m==0f) m=0.00000001f;//avoid divide by 0\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t\t\tswitch (this.hover_state_string)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Up\u0022: target_up_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Down\u0022: target_down_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Left\u0022: target_left_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Right\u0022: target_right_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Forward\u0022: target_forward_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\t\tcase\u0022Backward\u0022: target_backward_thrust /= m; break;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t//Adjust throtles slowly and hope we find a sweatspot !\u003Cbr\u003E\t\t\t\tfloat irevavent_thrust = ((9.82f*this.vessel.GetTotalMass())*0.01f);\u003Cbr\u003E\t\t\t\tif (target_up_thrust==thrust_up_vec.magnitude \u0026amp;\u0026amp; thrust_up_vec.magnitude==0f) this.thrust_up=0f; else\u003Cbr\u003E\t\t\t\tif (Mathf.Abs(target_up_thrust-thrust_up_vec.magnitude) \u0026gt; irevavent_thrust )\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif ((target_up_thrust-thrust_up_vec.magnitude)\u0026lt;0f) this.thrust_up-=this.max_thrust_change; else this.thrust_up\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\t\tthis.thrust_up = Mathf.Clamp(this.thrust_up,0f,100f);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tif (target_down_thrust==thrust_down_vec.magnitude \u0026amp;\u0026amp; thrust_down_vec.magnitude==0f) this.thrust_down=0f; else\u003Cbr\u003E\t\t\t\tif (Mathf.Abs(target_down_thrust-thrust_down_vec.magnitude) \u0026gt; irevavent_thrust )\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif ((target_down_thrust-thrust_down_vec.magnitude)\u0026lt;0f) this.thrust_down-=this.max_thrust_change; else this.thrust_down\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\t\tthis.thrust_down = Mathf.Clamp(this.thrust_down,0f,100f);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tif (target_left_thrust==thrust_left_vec.magnitude \u0026amp;\u0026amp; thrust_left_vec.magnitude==0f) this.thrust_left=0f; else\u003Cbr\u003E\t\t\t\tif (Mathf.Abs(target_left_thrust-thrust_left_vec.magnitude) \u0026gt; irevavent_thrust )\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif ((target_left_thrust-thrust_left_vec.magnitude)\u0026lt;0f) this.thrust_left-=this.max_thrust_change; else this.thrust_left\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\t\tthis.thrust_left = Mathf.Clamp(this.thrust_up,0f,100f);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tif (target_right_thrust==thrust_right_vec.magnitude \u0026amp;\u0026amp; thrust_right_vec.magnitude==0f) this.thrust_right=0f; else\u003Cbr\u003E\t\t\t\tif (Mathf.Abs(target_right_thrust-thrust_right_vec.magnitude) \u0026gt; irevavent_thrust )\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif ((target_right_thrust-thrust_right_vec.magnitude)\u0026lt;0f) this.thrust_right-=this.max_thrust_change; else this.thrust_right\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\t\tthis.thrust_right = Mathf.Clamp(this.thrust_right,0f,100f);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tif (target_forward_thrust==thrust_forward_vec.magnitude \u0026amp;\u0026amp; thrust_forward_vec.magnitude==0f) this.thrust_forward=0f; else\u003Cbr\u003E\t\t\t\tif (Mathf.Abs(target_forward_thrust-thrust_forward_vec.magnitude) \u0026gt; irevavent_thrust )\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif ((target_forward_thrust-thrust_forward_vec.magnitude)\u0026lt;0f) this.thrust_forward-=this.max_thrust_change; else this.thrust_forward\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\t\tthis.thrust_forward = Mathf.Clamp(this.thrust_forward,0f,100f);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tif (target_backward_thrust==thrust_backward_vec.magnitude \u0026amp;\u0026amp; thrust_backward_vec.magnitude==0f) this.thrust_backward=0f; else\u003Cbr\u003E\t\t\t\tif (Mathf.Abs(target_backward_thrust-thrust_backward_vec.magnitude) \u0026gt; irevavent_thrust )\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif ((target_backward_thrust-thrust_backward_vec.magnitude)\u0026lt;0f) this.thrust_backward-=this.max_thrust_change; else this.thrust_backward\u002B=this.max_thrust_change;\u003Cbr\u003E\t\t\t\t\tthis.thrust_backward = Mathf.Clamp(this.thrust_backward,0f,100f);\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\t\t//set engine thrusts\u003Cbr\u003E\t\t\t\tfor (i=0; i\u0026lt;engine_modules.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tswitch (engine_rcs_state[i])\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tcase \u0022Up\u0022:       engine_modules[i].thrustPercentage = this.thrust_up;       break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Down\u0022:     engine_modules[i].thrustPercentage = this.thrust_down;     break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Left\u0022:     engine_modules[i].thrustPercentage = this.thrust_left;     break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Right\u0022:    engine_modules[i].thrustPercentage = this.thrust_right;    break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Forward\u0022:  engine_modules[i].thrustPercentage = this.thrust_forward;  break;\u003Cbr\u003E\t\t\t\t\tcase \u0022Backward\u0022: engine_modules[i].thrustPercentage = this.thrust_backward; break;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof public override void OnUpdate ()\u003Cbr\u003E\u003Cbr\u003E\t\t//Used in editor to update gui info. Should be done in update as a full engine scan will be done every time as to check for states\u003Cbr\u003E\t\tpublic void CountEngines ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tint master_index=-1;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//vessel will = null in the editor so we must cycle through parts list another way if it is not set\u003Cbr\u003E\t\t\tList \u0026lt;Part\u0026gt; part_list;\u003Cbr\u003E\t\t\tif (this.vessel!=null)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list = this.vessel.Parts;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list = new List\u0026lt;Part\u0026gt;();\u003Cbr\u003E\t\t\t\tPart start_part = this.part;\u003Cbr\u003E\t\t\t\twhile (start_part.parent!=null) start_part=start_part.parent;\u003Cbr\u003E\t\t\t\tAddPartToList(start_part,part_list);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tint controlable_no = 0;\u003Cbr\u003E\t\t\tint found_engines = 0;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;part_list.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t//functional states are only Master or Slave\u003Cbr\u003E\t\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state==\u0022Master\u0022)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tmaster_index=i;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tif ( part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state==\u0022Master\u0022 ||\u003Cbr\u003E\t\t\t\t\t\t part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state==\u0022Slave\u0022 )\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tcontrolable_no \u002B= part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].max_engines;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;RCSEngineTranslation\u0026gt;()[0].state_string!=\u0022None\u0022) found_engines\u002B\u002B;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif (master_index!=-1)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].controlable_engines = controlable_no;\u003Cbr\u003E\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].engine_usage = found_engines\u002B\u0022/\u0022\u002Bcontrolable_no;\u003Cbr\u003E\t\t\t\tList\u0026lt;int\u0026gt; slaves = part_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].slave_indices;\u003Cbr\u003E\t\t\t\tfor (i=0; i\u0026lt;slaves.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tpart_list[slaves[i]].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].engine_usage = found_engines\u002B\u0022/\u0022\u002Bcontrolable_no;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//Search for working slaves and update the master\u0027s slave list\u003Cbr\u003E\t\tpublic void CheckSlaveState ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tint master_index = -1;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\u003Cbr\u003E\t\t\t//vessel will = null in the editor so we must cycle through parts list another way if it is not set\u003Cbr\u003E\t\t\tList \u0026lt;Part\u0026gt; part_list;\u003Cbr\u003E\t\t\tif (this.vessel!=null)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list = this.vessel.Parts;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tpart_list = new List\u0026lt;Part\u0026gt;();\u003Cbr\u003E\t\t\t\tPart start_part = this.part;\u003Cbr\u003E\t\t\t\twhile (start_part.parent!=null) start_part=start_part.parent;\u003Cbr\u003E\t\t\t\tAddPartToList(start_part,part_list);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;part_list.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t//All inactive states must be checked before asigning master slave states\u003Cbr\u003E\t\t\t\t\tif (!part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].ahs_on)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tpart_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state = \u0022Off\u0022;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\telse if ( part_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state!=\u0022No Power\u0022 )\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tif (master_index==-1)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tmaster_index=i;\u003Cbr\u003E\t\t\t\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state = \u0022Master\u0022;\u003Cbr\u003E\t\t\t\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].slave_indices.Clear();\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\telse\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tpart_list[i].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].comand_state = \u0022Slave\u0022;\u003Cbr\u003E\t\t\t\t\t\t\tpart_list[master_index].FindModulesImplementing\u0026lt;AHS\u0026gt;()[0].slave_indices.Add(i);\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//Find active gravity sensor and then set gravity to a useable value\u003Cbr\u003E\t\tpublic void CheckGravSensor ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.FindActiveSensor();\u003Cbr\u003E\t\t\tif (this.grav_sensor_index==-1)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.gravity_state = \u0022No Sonsor Found\u0022;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.grav_sensor_active)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tthis.gravity_state = \u0022No Active Sensor\u0022;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t\telse\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\ttry\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\tDebug.Log(\u0022(AHS) grav string = \u0022\u002Bthis.grav_readout);\u003Cbr\u003E\t\t\t\t\t\tif (this.grav_readout.Length\u0026gt;5)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tstring s = this.grav_readout.Substring(0,this.grav_readout.Length-5);\u003Cbr\u003E//\t\t\t\t\t\t\tDebug.Log(\u0022(AHS) shrotend grav string = \u0022\u002Bs);\u003Cbr\u003E\t\t\t\t\t\t\tthis.gravity = float.Parse(s);\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\telse this.gravity = 9.82f;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tcatch\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tthis.gravity = 9.82f;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tthis.gravity_state = this.grav_readout;\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof void CheckGravSensor ()\u003Cbr\u003E\u003Cbr\u003E\t\t//Updates grav readout and sets active state \u002B finds an active sensor\u003Cbr\u003E\t\t//You can force sensor finding by setting grav_sensor_index to -1\u003Cbr\u003E\t\tpublic void FindActiveSensor ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tif (no_parts_in_last_check!=this.vessel.parts.Count)\u003Cbr\u003E\t\t\t{//if parts have change then the index is no longer valid\u003Cbr\u003E\t\t\t\tthis.grav_sensor_index = -1;\u003Cbr\u003E\t\t\t\tthis.grav_sensor_active = false;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\tif ( this.grav_sensor_index != -1 )\u003Cbr\u003E\t\t\t{//if grav sensor is valid check it is active and update readout\u003Cbr\u003E\t\t\t\tthis.grav_readout = this.vessel.parts[this.grav_sensor_index].FindModulesImplementing\u0026lt;ModuleEnviroSensor\u0026gt;()[0].readoutInfo;\u003Cbr\u003E\t\t\t\tthis.grav_sensor_active = this.grav_readout==\u0022off\u0022;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\t//We dont need to search again if we have an active sensor and parts have not changed\u003Cbr\u003E\t\t\tif ( no_parts_in_last_check==this.vessel.parts.Count \u0026amp;\u0026amp; this.grav_sensor_active==true ) return;\u003Cbr\u003E\u003Cbr\u003E\t\t\tthis.grav_sensor_index = -1;\u003Cbr\u003E\t\t\tthis.grav_sensor_active = false;\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;this.vessel.parts.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tif (this.vessel.parts[i].name==\u0022sensorGravimeter\u0022)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tif (this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEnviroSensor\u0026gt;().Count\u0026gt;0)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\tDebug.Log(\u0022(AHS) found  sensor at \u0022\u002Bi\u002B\u0022) name=\u0022\u002Bthis.vessel.parts[i].name);\u003Cbr\u003E\t\t\t\t\t\tif (this.grav_sensor_index == -1)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\t\tDebug.Log(\u0022(AHS) grav sensor index set to \u0022\u002Bi\u002B\u0022 as it was invalid\u0022);\u003Cbr\u003E\t\t\t\t\t\t\tthis.grav_sensor_index=i;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\tthis.grav_readout = this.vessel.parts[i].FindModulesImplementing\u0026lt;ModuleEnviroSensor\u0026gt;()[0].readoutInfo;\u003Cbr\u003E\t\t\t\t\t\tthis.grav_sensor_active = this.grav_readout==\u0022off\u0022;\u003Cbr\u003E\t\t\t\t\t\tif (this.grav_sensor_active)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E//\t\t\t\t\t\t\tDebug.Log(\u0022(AHS) found active sensor at \u0022\u002Bi\u002B\u0022 name=\u0022\u002Bthis.vessel.parts[i].name);\u003Cbr\u003E\t\t\t\t\t\t\tthis.grav_sensor_index = i;\u003Cbr\u003E\t\t\t\t\t\t\tbreak;\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}//endof void FindActiveSensor ()\u003Cbr\u003E\u003Cbr\u003E\t\t//part list builder. much better to use vessle.parts but its not avalible in the editor\u003Cbr\u003E\t\tpublic void AddPartToList ( Part p_, List\u0026lt;Part\u0026gt; list_ )\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tlist_.Add(p_);\u003Cbr\u003E\t\t\tint i;\u003Cbr\u003E\t\t\tfor (i=0; i\u0026lt;p_.children.Count; i\u002B\u002B)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tthis.AddPartToList(p_.children[i],list_);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnLoad (ConfigNode node)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnLoad(node);\u003Cbr\u003E\t\t\tthis.HoverDisplayMode();\u003Cbr\u003E\t\t\tthis.SetHoverGUI();\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//place for adding right click info to parts in the editor ?\u003Cbr\u003E\t\tpublic override string GetInfo ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tstring result = \u0022\u0022;\u003Cbr\u003E\t\t\tresult \u002B= \u0022Energy Usage: \u0022\u002Bthis.power_consumption.ToString()\u002B\u0022/sec\\n\u0022;\u003Cbr\u003E\t\t\tresult \u002B= \u0022Heat Production: \u0022\u002Bthis.heat_production.ToString()\u002B\u0022/sec\\n\u0022;\u003Cbr\u003E\t\t\tresult \u002B= \u0022Controlable Engines: \u0022\u002Bthis.max_engines.ToString()\u002B\u0022/sec\\n\u0022;\u003Cbr\u003E\t\t\treturn base.GetInfo ()\u002Bresult;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}//endof public class AHS : PartModule\u003Cbr\u003E}//endof namespace AHS\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Hammer Tech","CreatedById":97099,"CreatedDateTime":"2014-02-20T16:59:16Z","Content":"\n\u003Cp\u003EI\u0027m well excited about this mod- I have investigated hover-based craft in the past but they\u0027re all but impossible to get running. This should make that a lot easier \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-21T22:00:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Hammer Tech\u0022 data-cite=\u0022Hammer Tech\u0022\u003E\u003Cdiv\u003EI\u0027m well excited about this mod- I have investigated hover-based craft in the past but they\u0027re all but impossible to get running. This should make that a lot easier \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I hope it makes things achievable for you and don\u0027t forgot to let me know how you get on ?\u003C/p\u003E\u003Cp\u003EId love to see craft photos and stories about any achievements or even near misses from the plugin (Its the little things that make me feel the worth of publishing).\u003C/p\u003E\u003Cp\u003EI can confirm that v0.4 certainly dose work with solid rockets and that i should fix this by checking for ModuleEngines.throttleLocked = True.\u003C/p\u003E\u003Cp\u003EI also found a nasty bug where setting time warp causes the small AHS to explode from over heating.\u003C/p\u003E\u003Cp\u003EYou can avoid this by turning it off before warping.\u003C/p\u003E\u003Cp\u003EIts a very fine balance with heat on the small AHS but i hope that changing both the heat and power over usage into a crashed state should fix this.\u003C/p\u003E\u003Cp\u003EThis would crash the system and stop it generating heat if you reach 95% heat or run out of power. You would then need to turn the system off and back on again (like you don\u0027t know how to deal with a crash !).\u003C/p\u003E\u003Cp\u003EI could use some feed back on power usage and heat production.\u003C/p\u003E\u003Cp\u003EI am sure its going to be hard to please every one with my moral obligation to transferring the difficulty from one place to another.\u003C/p\u003E\u003Cp\u003EI think 0.4 is starting to get on the overpowered side with both the active hover and RCS Translation systems but feedback always helps.\u003C/p\u003E\u003Cp\u003EI have not tested the Large AHS yet but at a 6T mass i was hoping it would make large hover systems unwieldy.\u003C/p\u003E\u003Cp\u003EIv also found that low gravity effects result in more unstable hovers and suspect that there is a major reduction in the sensitivity of a grav sensor readout when compered to a 32bit float.\u003C/p\u003E\u003Cp\u003EIt should not be to hard to check this but will take a few mins of work.\u003C/p\u003E\u003Cp\u003EHummm.... ill have to update the to do list when i sober up\u003C/p\u003E\n"},{"CreatedByName":"123nick","CreatedById":27488,"CreatedDateTime":"2014-02-23T10:38:19Z","Content":"\n\u003Cp\u003Ei tried everything, but i cant get it too work. should i have the engines emiting thrusts downward be set as forward or down? i need a tutorial!\u003C/p\u003E\n"},{"CreatedByName":"mpink","CreatedById":57827,"CreatedDateTime":"2014-02-23T13:10:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022123nick\u0022 data-cite=\u0022123nick\u0022\u003E\u003Cdiv\u003Ei tried everything, but i cant get it too work. should i have the engines emiting thrusts downward be set as forward or down? i need a tutorial!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah the video ended up being a bit too fast and so not very easy to understand \u002B i should have built the craft so you could see the full setup process.\u003C/p\u003E\u003Cp\u003EYou should right click on an engine and use the \u003Cstrong\u003ENext RCS Dimension\u003C/strong\u003E and \u003Cstrong\u003EToggle RCS Direction\u003C/strong\u003E to set the \u003Cstrong\u003ERCS Direction\u003C/strong\u003E and thus define how the engine is controlled.\u003C/p\u003E\u003Cp\u003EI use Forward as my preferred hover direction as the H/N keys are called Forward/Backward in the settings and my 1st craft had a cockpit pointing at the sky. These directions have no relevance to what way you are facing (unlike RCS) but are just a way to connect keys with events. If you like I/K as your hover control keys then theres no reason not to use Up as your Hover direction but be Warned that the default keys are K/I = Up/Down.\u003C/p\u003E\u003Cp\u003EBy default the AHS is set to use Forward engines for hover but this is changeable using the change Hover tweakables or action groups.\u003C/p\u003E\u003Cp\u003EIt may well be too flexible now and so stupidly complex to setup.\u003C/p\u003E\u003Cp\u003EYou must then enable SAS for the system to attempt any form of control and enable RCS if you want translation control (This seams to now be total missing from any text and was in the part description).\u003C/p\u003E\u003Cp\u003EThat seams very silly now as the hover mode setting allows you to enable/disable hover and thus replaces the need to check the SAS state.\u003C/p\u003E\u003Cp\u003EThe only reason for using these states now would be that they have a good GUI on the HUD.\u003C/p\u003E\u003Cp\u003EYou must also check your energy usage but if your using jets that tends not to be a problem.\u003C/p\u003E\u003Cp\u003EI will do another video very soon once iv fixed a few little bugs.\u003C/p\u003E\n"}]}