{"TopicId":7542,"ForumId":29,"TopicTitle":"The official unoffical \u0026quot;help a fellow plugin developer\u0026quot; thread","CreatedByName":"Cephei","CreatedById":2555,"CreatedDateTime":"2012-03-04T10:02:40Z","PageNum":49,"Articles":[{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-08-01T00:51:12Z","Content":"\n\u003Cp\u003E@blizzy78: Thank you for that, .removeNode and .addNode are working as expected.\u003C/p\u003E\u003Cp\u003EMy suspicion is that .setNode was not working either because I had not named the configNodes, or if you try and .setNode into a node that is named the same, it assumes the nodes are the same and does not update. I\u0027m not going to experiment further as I actually want to make progress though.\u003C/p\u003E\u003Cp\u003E@Noro: You want to be looking at [KSPField] with the persistent attribute set to be saving data. A quick google should turn up one of the previous posts explaining how those work better then I can here in a couple minutes.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"Noro","CreatedById":116579,"CreatedDateTime":"2014-08-01T06:35:09Z","Content":"\n\u003Cp\u003E@Diazo: Nope, [KSPField] is definetely not the thing I want. It\u0027s for part plugins mainly and it just save attributes by itself. I have fully functional save/load functionality in my plugin already.\u003C/p\u003E\u003Cp\u003EWhat I want, is a way to create instance of the plugin\u0027s class that will live through entire game session, without destroying it and recreating in every scene change. But it seems impossible with the way KSP manages plugins currently.\u003C/p\u003E\u003Cp\u003ESign, I guess I just have to save and recreate entire data structure on save/load(and that\u0027s gonna be a lot complicated data \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E ).\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-08-01T07:53:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Noro\u0022 data-cite=\u0022Noro\u0022\u003E\u003Cdiv\u003EWhat I want, is a way to create instance of the plugin\u0027s class that will live through entire game session, without destroying it and recreating in every scene change. But it seems impossible with the way KSP manages plugins currently.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, you could do something similar to SCANsat. Treat your ScenarioModule as a repository for information and then create a \u003Cem\u003Eseparate\u003C/em\u003E KSPAddon-marked MonoBehaviour for the work logic. KSP will destroy ScenarioModules between scenes regardless but you can use the DontDestroyOnLoad(this) on a regular KSPAddon and it will work as you\u0027d like\u003C/p\u003E\n"},{"CreatedByName":"neurotoxin","CreatedById":70873,"CreatedDateTime":"2014-08-02T22:21:41Z","Content":"\n\u003Cp\u003EHow would one go about overriding a built in class? Like, let\u0027s say I extended Wheel, overrode a method, and now I want KSP to use my wheel rather than it\u0027s own? I\u0027ve looked into Reflection but, well it\u0027s a bit confusing and a LOT of code for something that seems like it should be simple.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-08-02T22:51:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022neurotoxin\u0022 data-cite=\u0022neurotoxin\u0022\u003E\u003Cdiv\u003EHow would one go about overriding a built in class? Like, let\u0027s say I extended Wheel, overrode a method, and now I want KSP to use my wheel rather than it\u0027s own? I\u0027ve looked into Reflection but, well it\u0027s a bit confusing and a LOT of code for something that seems like it should be simple.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou mean you extended the wheel module? Something as simple as changing the names of the modules in the configs will do.\u003C/p\u003E\n"},{"CreatedByName":"neurotoxin","CreatedById":70873,"CreatedDateTime":"2014-08-02T23:04:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EYou mean you extended the wheel module? Something as simple as changing the names of the modules in the configs will do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah I know I could do that, but I\u0027m trying to avoid it. The question is more theoretical than something I intend to use in a practical mod. \u003C/p\u003E\u003Cp\u003EI don\u0027t have the .dll open atm so these are just made up names but let\u0027s say the .dll has a Wheel class with a method named Roll(). Is there any way to make it so when the game calls Wheel.Roll() it actually calls MyNewWheel.Roll(). For this example let\u0027s assume MyNewWheel : Wheel and only the Roll method has been overridden. Again all theoretical, any resemblance to real people or places is purely fiction.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-08-03T00:54:41Z","Content":"\n\u003Cp\u003EWell unfortunately for you I can see two ways to do this, an easy and a complex one. The easy one is to do what I proposed and replace the name of modules with ModuleManager. It\u0027s really as simple as this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[*]:HAS[@MODULE[ModuleWheel]]\u003Cbr\u003E{\u003Cbr\u003E    @MODULE[ModuleWheel]\u003Cbr\u003E    {\u003Cbr\u003E         @name = YourModuleWheel\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd that will do everything for you. You just really have to inherit ModuleWheel and do whatever tweaks you need to do.\u003C/p\u003E\u003Cp\u003EThe other one might be harder and it might not even work, and it necessitate reflection. Basically it all depends if ModuleWheel uses a public Wheel field, and if so you could be able to dynamically replace it for your own Wheel class since. But if it\u0027s not public, you\u0027re pretty much doomed because you won\u0027t be able to know if it\u0027s there or even if theres one given we can only look with non-decompiling assembly browsers at what KSP does.\u003C/p\u003E\u003Cp\u003EReally theres no easy way to do it if it\u0027s what you were wondering.\u003C/p\u003E\n"},{"CreatedByName":"neurotoxin","CreatedById":70873,"CreatedDateTime":"2014-08-03T01:42:07Z","Content":"\n\u003Cp\u003EYeah, I didn\u0027t think it\u0027d be easy or else the answer would have shown up from my first hour of googling. Well, it did, in the form of reflection. I guess it\u0027s time to look into the reflection API. Thanks for the replies. Honestly, this wasn\u0027t even directly KSP related but there are a lot of talented programmers here so I thought I might get a good answer, which I did, thus why I am quick to dismiss module manager. Once again, thanks for the help.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-08-03T02:12:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022neurotoxin\u0022 data-cite=\u0022neurotoxin\u0022\u003E\u003Cdiv\u003EYeah, I didn\u0027t think it\u0027d be easy or else the answer would have shown up from my first hour of googling. Well, it did, in the form of reflection. I guess it\u0027s time to look into the reflection API. Thanks for the replies. Honestly, this wasn\u0027t even directly KSP related but there are a lot of talented programmers here so I thought I might get a good answer, which I did, thus why I am quick to dismiss module manager. Once again, thanks for the help.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m pretty sure most people here would tell you that ModuleManager is the best solution for what you need. Really, if you can avoid reflection, you always should.\u003C/p\u003E\n"},{"CreatedByName":"neurotoxin","CreatedById":70873,"CreatedDateTime":"2014-08-03T02:26:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EI\u0027m pretty sure most people here would tell you that ModuleManager is the best solution for what you need. Really, if you can avoid reflection, you always should.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep, I agree, but with what I\u0027m doing I can\u0027t avoid it. I actually just found exactly what I\u0027m looking for. So long and thanks for all the fish!\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-08-11T16:49:14Z","Content":"\n\u003Cp\u003EWhat\u0027s the proper way to add a new AppLauncher button to the stock toolbar? I want it to show in the space centre only. Right now I am doing \u003Ca href=\u0022http://pastebin.com/LLtbXjwh\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E (posted to pastebin because it\u0027s a bit long and terrible without highlighting).\u003C/p\u003E\u003Cp\u003EAm I missing something obvious?\u003C/p\u003E\u003Cp\u003E--- EDIT:\u003C/p\u003E\u003Cp\u003EI changed the code around to mimic the code I found in FAR. I changed OnAwake to Awake (dammit, KSP). Overall the code is pretty much the same as it was before: \u003Ca href=\u0022http://pastebin.com/emzRgMm9\u0022 rel=\u0022external nofollow\u0022\u003Ecode\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EHowever, this throws an exception that I don\u0027t understand: in the log file, I find this\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[DangIt]: Instantiating runtime...\u003Cbr\u003E\u003Cbr\u003E(Filename: C:/BuildAgent/work/d63dfc6385190b60/artifacts/StandalonePlayerGenerated/UnityEngineDebug.cpp Line: 49)\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E[DangIt]: Awaking runtime...\u003Cbr\u003E\u003Cbr\u003E(Filename: C:/BuildAgent/work/d63dfc6385190b60/artifacts/StandalonePlayerGenerated/UnityEngineDebug.cpp Line: 49)\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ENullReferenceException: Object reference not set to an instance of an object\u003Cbr\u003E  at ScenarioModule.Load (.ConfigNode node) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  at ScenarioRunner.AddModule (.ConfigNode node) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  at ProtoScenarioModule.Load (.ScenarioRunner host) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  at ScenarioRunner\u002B.MoveNext () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E--- EDIT 2: solved (well... kinda), \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/7544-The-official-unoffical-help-a-fellow-plugin-developer-thread?p=1344912\u0026amp;viewfull=1#post1344912\u0022 rel=\u0022external nofollow\u0022\u003Etwo posts down\u003C/a\u003E.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-11T18:15:03Z\u0022 title=\u002208/11/2014 06:15  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 11, 2014\u003C/time\u003E by Ippo\u003C/strong\u003E\n\u003Cbr\u003E\u0026quot;solved\u0026quot;\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-08-11T17:50:57Z","Content":"\n\u003Cp\u003EI see a confignode in there, my first through is that there is a scenariomodule saved in the persistent.sfs file that no longer has an attached .dll file.\u003C/p\u003E\u003Cp\u003ESo KSP sees the OldScenarioData configNode, goes to load it, but there is no .dll with OldScenarioData :ScenarioModule present anymore.\u003C/p\u003E\u003Cp\u003ECan not test this at the moment, but I vaguely remember something like this from a while ago when I was testing.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-08-11T18:10:01Z","Content":"\n\u003Cp\u003EWell, no, it had to be something else.\u003C/p\u003E\u003Cp\u003EI was able to replicate the bug even in new saves and even with just my mod installed to rule out every other possibility, so it was definitely a bug in my code.\u003C/p\u003E\u003Cp\u003EHowever I was looking at the logs, and the order in which the debug logs appeared didn\u0027t quite match what I expected (it tried to add the button BEFORE Awake \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E), so I tried a coroutine:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        public DangIt()\u003Cbr\u003E        {\u003Cbr\u003E            // constructor stuff\u003Cbr\u003E            this.StartCoroutine(\u0022AddAppButton\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        IEnumerator AddAppButton()\u003Cbr\u003E        {\u003Cbr\u003E            while (!ApplicationLauncher.Ready || !this.IsReady)\u003Cbr\u003E                yield return null;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            if (ApplicationLauncher.Ready \u0026amp;\u0026amp; this.IsReady)\u003Cbr\u003E            {\u003Cbr\u003E                try\u003Cbr\u003E                {\u003Cbr\u003E                    Debug.Log(\u0022About to add the app button...\u0022);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                    Texture btnTex = GameDatabase.Instance.GetTexture(\u0022DangIt/Textures/appBtn\u0022, false);\u003Cbr\u003E                    if (btnTex == null)\u003Cbr\u003E                        throw new Exception(\u0022The texture wasn\u0027t loaded!\u0022);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                    appBtn = ApplicationLauncher.Instance.AddModApplication(\u003Cbr\u003E                                onAppBtnToggleOn,\u003Cbr\u003E                                onAppBtnToggleOff,\u003Cbr\u003E                                dummyVoid,\u003Cbr\u003E                                dummyVoid,\u003Cbr\u003E                                dummyVoid,\u003Cbr\u003E                                dummyVoid,\u003Cbr\u003E                                ApplicationLauncher.AppScenes.SPACECENTER,\u003Cbr\u003E                                btnTex);\u003Cbr\u003E                }\u003Cbr\u003E                catch (Exception e)\u003Cbr\u003E                {\u003Cbr\u003E                    Debug.Log(\u0022[DangIt]: Error! \u0022 \u002B e.Message);\u003Cbr\u003E                    throw;\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMaybe it\u0027s a bit overkill, but it works now. :shrug:\u003C/p\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2014-08-11T21:14:33Z","Content":"\n\u003Cp\u003EI\u0027ve implemented it in a mod myself, pretty much just following the same stuff you have here. The only diff I can see/think of is that I add the button to the launcher in response to the GameEvents.onGUIApplicationLauncherReady event (from this note: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/86682-Appilcation-Launcher-and-Mods?p=1302840\u0026amp;viewfull=1#post1302840\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/86682-Appilcation-Launcher-and-Mods?p=1302840\u0026amp;viewfull=1#post1302840\u003C/a\u003E). You can see my code in the ARP mod from my signature.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-08-12T02:58:32Z","Content":"\n\u003Cp\u003EOkay, I\u0027m trying to find all game objects of type ShipTemplate and I\u0027m not sure what\u0027s going wrong.\u003C/p\u003E\u003Cp\u003EThe following works:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUnityEngine.GameObject[] loadShipList = FindObjectsOfType\u0026lt;UnityEngine.GameObject\u0026gt;();\u003C/pre\u003E\u003Cp\u003E and returns 5000 or so items, including the 18 items I want to find.\u003C/p\u003E\u003Cp\u003EThe following does not:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EShipTemplate[] loadShipList = FindObjectsOfType\u0026lt;ShipTemplate\u0026gt;();\u003C/pre\u003E\u003Cp\u003E and it throws the following error: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EError\t2\tThe type \u0027ShipTemplate\u0027 cannot be used as type parameter \u0027T\u0027 in the generic type or method \u0027UnityEngine.Object.FindObjectsOfType\u0026lt;T\u0026gt;()\u0027. There is no implicit reference conversion from \u0027ShipTemplate\u0027 to \u0027UnityEngine.Object\u0027.\tH:\\KSPEdits\\AGExt\\AGExt\\Editor.cs\t315\t43\tAGExt\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo, ShipTemplate does not inherit UnityEngine.Object? Then how do I go about finding the 18 ShipTemplates I know exist? But doesn\u0027t it have to inherit? I find them in the list when I get all UnityEngine.GameObjects.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-12T04:12:02Z\u0022 title=\u002208/12/2014 04:12  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 12, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-08-12T09:09:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EOkay, I\u0027m trying to find all game objects of type ShipTemplate and I\u0027m not sure what\u0027s going wrong.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m at work, so I can\u0027t look it up myself here. What type is ShipTemplate actually? Is it a MonoBehaviour? If so, you could try finding all GameObjects that have it attached:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EFindObjectsOfType\u0026lt;GameObject\u0026gt;().Where(go =\u0026gt; go.GetComponent\u0026lt;ShipTemplate\u0026gt;() != null)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis works with all types that are derived from Component (such as MonoBehaviour.)\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-08-12T13:31:36Z","Content":"\n\u003Cp\u003EAlright, I\u0027ll give that a shot, it looks like it should work.\u003C/p\u003E\u003Cp\u003EI do not remember what the type of ShipTemplate was exactly but I\u0027ll give it a shot.\u003C/p\u003E\u003Cp\u003EThanks,\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-08-12T16:05:15Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic class ShipTemplate {\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ELooks like it wouldn\u0027t work with FindObjectsOfType().\u003C/p\u003E\n"},{"CreatedByName":"Zyrac","CreatedById":50037,"CreatedDateTime":"2014-08-12T16:51:21Z","Content":"\n\u003Cp\u003EHi, I\u0027ve made a bit of progress on adding a science experiment module to a part through a KSP event button, but I\u0027m having some problems. I have the following sections of code in my plugin:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic class RUILifeTech005 : PartModule\u003Cbr\u003E\t{\t\t\u003Cbr\u003E\t\t[KSPEvent(guiActive = true, guiName = \u0022Activate\u0022, active = true)]\u003Cbr\u003E\t\tpublic void Activate()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tEvents[\u0022Activate\u0022].active = false;\u003Cbr\u003E\t\t\tEvents[\u0022Deactivate\u0022].active = true;\u003Cbr\u003E\t\t\tprint(\u0022Adding Module...\u0022);\u003Cbr\u003E\t\t\tpart.AddModule(\u0022LifeTechScience\u0022);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t [KSPEvent(guiActive = false, active = false)]\u003Cbr\u003E\t\t public void Deactivate()\u003Cbr\u003E\t\t {\u003Cbr\u003E\t\t \tEvents[\u0022Activate\u0022].active = true;\u003Cbr\u003E\t\t \tEvents[\u0022Deactivate\u0022].active = false;\u003Cbr\u003E\t\t }\u003Cbr\u003E\t}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand then:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic class LifeTechScience : ModuleScienceExperiment\u003Cbr\u003E\t{\u003Cbr\u003E\t\tpublic override void OnSave(ConfigNode lifetechnode)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tprint(\u0022Added Module!\u0022);\u003Cbr\u003E\t\t\tlifetechnode.AddNode(\u0022MODULESCIENCEEXPERIMENT\u0022);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(name, \u0022MODULESCIENCEEXPERIMENT\u0022);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(experimentID, \u0022LifeTechAnalysis\u0022);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(experimentActionName, \u0022Conduct Analysis\u0022);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(resetActionName, \u0022Reset Data\u0022);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(\u0022useStaging\u0022, true);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(\u0022useActionGroups\u0022, true);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(\u0022hideUIwhenUnavailable\u0022, true);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(\u0022xmitDataScalar\u0022, \u00220.2f\u0022);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(\u0022dataIsCollectable\u0022, true);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(collectActionName, \u0022Collect Data\u0022);\t\u003Cbr\u003E\t\t\tlifetechnode.AddValue(\u0022interactionRange\u0022, 1.2f);\u003Cbr\u003E\t\t\tlifetechnode.AddValue(\u0022rerunnable\u0022, true);\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe problem seems to be with the actual values of the experiment module. It seems to register the addition of a new experiment module, coming up with buttons for Deploy, Review Data and Reset, though none of these actually do anything. The debug console prints the \u0022Adding Module...\u0022 that I added to the code to see what bits work, but not \u0022Added Module!\u0022. It also comes up with an error: \u0022Reference not set to an instance of an object.\u0022 I\u0027m new to creating config nodes in plugins, so any help would be great. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Thanks\u003C/p\u003E\n"},{"CreatedByName":"McOffsky","CreatedById":108431,"CreatedDateTime":"2014-08-13T22:48:58Z","Content":"\n\u003Cp\u003EHi, is there any way to obtain part persistent id? \u003C/p\u003E\u003Cp\u003EI\u0027m trying to access other parts from my part and I cannot find any id field that is persistent in VAB, in game, after reload or vessel switch.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E if ((Time.time - lastUpdate) \u0026gt; logInterval)\u003Cbr\u003E            {\u003Cbr\u003E                foreach (Part _part in this.vessel.Parts)\u003Cbr\u003E                {\u003Cbr\u003E                    Debug.Log(\u0022vessel name \u0022 \u002B _part.vessel.name \u002B\u003Cbr\u003E                        \u0022 | name \u0022 \u002B _part.name \u002B\u003Cbr\u003E                        \u0022 | ClassID \u0022 \u002B _part.ClassID \u002B \u003Cbr\u003E                        \u0022 | ClassName \u0022 \u002B _part.ClassName \u002B\u003Cbr\u003E                        \u0022 | ConstructID \u0022 \u002B _part.ConstructID \u002B\u003Cbr\u003E                        \u0022 | uid \u0022 \u002B _part.uid \u002B\u003Cbr\u003E                        \u0022 | flightID \u0022 \u002B _part.flightID); \u003Cbr\u003E                }\u003Cbr\u003E                lastUpdate = Time.time;\u003Cbr\u003E                Debug.Log(\u0022My Module \u0022 \u002B this.vessel.Parts.Count);\u003Cbr\u003E            }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003Cp\u003ECode above generates this output:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[LOG 00:44:02.865] [FLIGHT GLOBALS]: Switching To Vessel test 3 ---------------------- \u003Cbr\u003E\u003Cbr\u003E[LOG 00:44:19.965] vessel name mumech.MJ2.Pod (test 3) | name largeSolarPanel | ClassID 2480147 | ClassName Part | ConstructID largeSolarPanel_4294870102 | uid 4294870098 | flightID 3679346614\u003Cbr\u003E\u003Cbr\u003E[LOG 00:44:19.987] [FLIGHT GLOBALS]: Switching To Vessel test 2 ---------------------- \u003Cbr\u003E\u003Cbr\u003E(...)\u003Cbr\u003E\u003Cbr\u003E[LOG 00:46:04.011] [FLIGHT GLOBALS]: Switching To Vessel test 3 ---------------------- \u003Cbr\u003E\u003Cbr\u003E[LOG 00:46:15.636] vessel name mumech.MJ2.Pod (test 3) | name largeSolarPanel | ClassID 2480147 | ClassName Part | ConstructID largeSolarPanel_4294469078 | uid 4294469074 | flightID 3679346614\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-13T23:52:33Z\u0022 title=\u002208/13/2014 11:52  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 13, 2014\u003C/time\u003E by McOffsky\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-08-13T23:03:35Z","Content":"\n\u003Cp\u003EPart derives from UnityEngine.Object, so it has a GetInstanceID() method. However, I wouldn\u0027t bet on it being persistent across different scenes as I imagine it will change each time that you focus back to the ship / reload a save.\u003C/p\u003E\u003Cp\u003ETry and see if the instance ID is persistent, but personally I think you will have to add your own persistent field.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-08-13T23:15:39Z","Content":"\n\u003Cp\u003E@McOffSky:\u003C/p\u003E\u003Cp\u003EFirst, there is no link between the VAB and the flight scene for parts.\u003C/p\u003E\u003Cp\u003EWhen you launch a vessel, KSP reads the craft file and makes the vessel with new parts so there is no relation between the information in the .craft file and the parts in flight.\u003C/p\u003E\u003Cp\u003EHowever, once that vessel is created in flight, that part is persistent in the vessel in the persistent.sfs and I would think on of the ID fields is the same? However the two fields I would have assumed that of, ConstructID and uID does seem to stay the same based on your test above. Odd, and I have no answer for that.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"McOffsky","CreatedById":108431,"CreatedDateTime":"2014-08-13T23:50:37Z","Content":"\n\u003Cp\u003E@Ippo\u003C/p\u003E\u003Cp\u003EGetInstanceID() is not useful for me, I need some way of storing part reference to perform actions on it even after game reload.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E@Diazo\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EI will read your plugin \u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Ecode \u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E(Actions Extended) for inspiration, \u003C/span\u003Eit does almost exactly\u003Cspan style=\u0022color:#333333;\u0022\u003E what I need.\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2014-08-14T00:14:19Z","Content":"\n\u003Cp\u003EWell, the only solution that comes to my mind is to create a PartModule and attach it to every part.\u003C/p\u003E\u003Cp\u003EIn this module you can have a field with your ID and make it persistent by saving / loading in the OnSave / OnLoad methods.\u003C/p\u003E\u003Cp\u003EThis would work, but it\u0027s so god-awful that there must be a better way. :/\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-08-14T00:20:53Z","Content":"\n\u003Cp\u003EHmm, looking at the persistent.sfs file, uid is a valid field.\u003C/p\u003E\u003Cp\u003EConstructID is not there that I can see though so I would expect uid should do this.\u003C/p\u003E\u003Cp\u003EI\u0027ll run some actual experiments after supper.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003Cp\u003Eedit: Nope, uid is not persistent. Launch a Kerbal 2, land it next to the launch pad, launch a second Kerbal 2, it now has the same Uid that the first Kerbal 2 did at lauch and the first kerbal 2 now has a different uid. \u003C/p\u003E\u003Cp\u003EWhat does uid stand for then? I though it was Unique IDentifier, but obviously not.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-14T00:40:07Z\u0022 title=\u002208/14/2014 12:40  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 14, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"}]}