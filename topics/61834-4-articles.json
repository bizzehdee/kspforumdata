{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":4,"Articles":[{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-16T03:27:40Z","Content":"\n\u003Cp\u003EI just remembered there was some discussion on having kOS run a standard script upon boot, enabling recovery of units that lose contact or vehicles automatically resuming when reloaded. Do you think something like that can be implemented?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-16T03:32:01Z\u0022 title=\u002202/16/2014 03:32  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 16, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Buttons840","CreatedById":103276,"CreatedDateTime":"2014-02-16T05:40:18Z","Content":"\n\u003Cp\u003EI saw on the kOS wiki (\u003Ca href=\u0022http://kos.wikia.com/wiki/List_of_all_Commands\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/List_of_all_Commands\u003C/a\u003E) that an up coming feature is \u0022T() Value = new TimeSpan(parameters[0]);\u0022 Please, please, please don\u0027t take inspiration from Java and add stuff like the new keyword.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-16T20:43:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Buttons840\u0022 data-cite=\u0022Buttons840\u0022\u003E\u003Cdiv\u003EI saw on the kOS wiki (\u003Ca href=\u0022http://kos.wikia.com/wiki/List_of_all_Commands\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/List_of_all_Commands\u003C/a\u003E) that an up coming feature is \u0022T() Value = new TimeSpan(parameters[0]);\u0022 Please, please, please don\u0027t take inspiration from Java and add stuff like the new keyword.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1. There is nothing bad about the \u0027new\u0027 keyword.\u003C/p\u003E\u003Cp\u003E2. That syntax is so unlike kOS that it would really require quite a change to the parser in ways a lot more drastic than just adding the \u0027new\u0027 keyword. I doubt it will look anything like that shorthand statement.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-16T20:51:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI just remembered there was some discussion on having kOS run a standard script upon boot, enabling recovery of units that lose contact or vehicles automatically resuming when reloaded. Do you think something like that can be implemented?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBoot is slightly different from reloading. A SCS unit that loses power and then regains power (i.e. solar panels go into shadow a long time and then come back into the sun later) does actually reboot, but an SCS unit was \u0022on rails\u0022 and then becomes loaded into the physics engine again does not go through the \u0022boot\u0022. Instead the mod attempts to put the unit right back where it was, in the same state - a bit like a computer going into sleep mode and then being re-awakened and it continues running programs where it left off. Back in version 0.9x that feature was still rather broken and untested (partly because the variable save/load bug made it moot anyway) but I saw that the attempt to do that was in the code. I don\u0027t know if 0.10 and up have messed with it much or not. I haven\u0027t tested it yet.\u003C/p\u003E\u003Cp\u003EBut the point I wanted to bring up is that if a \u0027run on bootup\u0027 feature was implemented it would probably not quite cover both those two cases you mention, for that reason.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-17T00:28:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI just remembered there was some discussion on having kOS run a standard script upon boot, enabling recovery of units that lose contact or vehicles automatically resuming when reloaded. Do you think something like that can be implemented?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt can surely be implemented, Right now im working on Direct flight, rcs control so we can accomplish docking missions more easily. Having some kind of bootstrapper should be doable \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EActually what i have been working on most lately has been the documentation site \u003Ca href=\u0022http://erendrake.github.io/KOS/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://erendrake.github.io/KOS/\u003C/a\u003E, I think im ready for the community to review and tell me where i messed up.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-17T00:52:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Buttons840\u0022 data-cite=\u0022Buttons840\u0022\u003E\u003Cdiv\u003EI saw on the kOS wiki (\u003Ca href=\u0022http://kos.wikia.com/wiki/List_of_all_Commands\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/List_of_all_Commands\u003C/a\u003E) that an up coming feature is \u0022T() Value = new TimeSpan(parameters[0]);\u0022 Please, please, please don\u0027t take inspiration from Java and add stuff like the new keyword.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E1. There is nothing bad about the \u0027new\u0027 keyword.\u003Cp\u003E2. That syntax is so unlike kOS that it would really require quite a change to the parser in ways a lot more drastic than just adding the \u0027new\u0027 keyword. I doubt it will look anything like that shorthand statement.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree with Steven. What has the new keyword ever done to you? I think it makes for clearer code when you are explicitly creating new structures. \u003C/p\u003E\u003Cp\u003EHowever, I have no plans for adding that keyword to KOS. the example in the wiki is pseudocode. Do we think that a timespan structure would be useful for scripters?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-17T01:12:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EBoot is slightly different from reloading. A SCS unit that loses power and then regains power (i.e. solar panels go into shadow a long time and then come back into the sun later) does actually reboot, but an SCS unit was \u0022on rails\u0022 and then becomes loaded into the physics engine again does not go through the \u0022boot\u0022. Instead the mod attempts to put the unit right back where it was, in the same state - a bit like a computer going into sleep mode and then being re-awakened and it continues running programs where it left off. Back in version 0.9x that feature was still rather broken and untested (partly because the variable save/load bug made it moot anyway) but I saw that the attempt to do that was in the code. I don\u0027t know if 0.10 and up have messed with it much or not. I haven\u0027t tested it yet.\u003Cp\u003EBut the point I wanted to bring up is that if a \u0027run on bootup\u0027 feature was implemented it would probably not quite cover both those two cases you mention, for that reason.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think that my preference with something like this would be to let each of you register an external to run on boot, something like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EREGISTER BOOTSTRAPPER TO \u0026lt;FILENAME\u0026gt;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd maybe even one for when you are losing power like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EREGISTER POWERLOSS TO \u0026lt;FILENAME\u0026gt;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd so on. I can think of a bunch of events that we might want to listen for. I also like giving control to you rather than just saving all state and magically restore it back to you.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-17T01:15:03Z\u0022 title=\u002202/17/2014 01:15  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 17, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-17T02:35:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EBut the point I wanted to bring up is that if a \u0027run on bootup\u0027 feature was implemented it would probably not quite cover both those two cases you mention, for that reason.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are right, the way I put it made it sound like the same feature. The way you describe it is accurate.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EIt can surely be implemented, Right now im working on Direct flight, rcs control so we can accomplish docking missions more easily. Having some kind of bootstrapper should be doable \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDirect flight for normal and RCS controls is a very nice feature to have. It will make life even harder (no more \u003Cem\u003Elock steering\u003C/em\u003E abuse for me), but a lot more interesting.\u003C/p\u003E\u003Cp\u003EI think the idea was to make a bootstrapper that could be primed through the VAB description, enabling the user to \u0027bake\u0027 some basic commands and a script to copy from archive upon launch into each craft. Maybe that is a bit too complicated for now, but that would be a pretty neat feature for putting craft as finished products on the launchpad.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-17T03:12:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003Eputting craft as finished products on the launchpad.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is a pretty compelling idea. I was very interested in using the description until i could not find a way to actually get at it through the API \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EFaced with the idea of having to persist that data in the craft file, I decided to work on some lower hanging fruit first.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-17T16:39:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI think that my preference with something like this would be to let each of you register an external to run on boot, something like\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EREGISTER BOOTSTRAPPER TO \u0026lt;FILENAME\u0026gt;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd maybe even one for when you are losing power like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EREGISTER POWERLOSS TO \u0026lt;FILENAME\u0026gt;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd so on. I can think of a bunch of events that we might want to listen for. I also like giving control to you rather than just saving all state and magically restore it back to you.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d like to register my approval of this idea for power off. (But not for going on/off rails, as I think that restoring code state for that makes more sense as on/off rails is a sort of breaking 4th-wall simulation artifact.)\u003C/p\u003E\u003Cp\u003EShouldn\u0027t the hook be called POWERRESUME rather than POWERLOSS? Presumably it would run the code when the power comes back on again, not when it gets lost.\u003C/p\u003E\u003Cp\u003EI assume the \u0026lt;FILENAME\u0026gt; has to be local to the SCS unit for powering up, as I assume the SCS unit would forget the state of \u0022switch to ....\u0022 when powered off. But would that be true of all hooks?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-17T16:43:14Z\u0022 title=\u002202/17/2014 04:43  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 17, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-17T19:30:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003E#4 I think kOS definitely should have more flow control. Something akin to sys.exit(); to terminate a program at that point. As well as continue; and break; equivalent statements.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere really should be two different types of \u0027early quit\u0027, analogous to \u0022exit\u0022 and \u0022return\u0022 in most languages.\u003C/p\u003E\u003Cp\u003E\u0022exit\u0022 = end the whole process.\u003C/p\u003E\u003Cp\u003E\u0022return\u0022 = just quit the current routine. (which in the case of kOS means the current script file program).\u003C/p\u003E\u003Cp\u003EThey\u0027d behave identically when just running one program, but differ when program calls are nested in other program calls.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-17T20:47:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI think the idea was to make a bootstrapper that could be primed through the VAB description\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI now realize that the ALCOR project found a way to get this data, its pretty crazy to get it but im going to give it a shot \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-18T02:02:52Z","Content":"\n\u003Cp\u003EI understand the current work is on direct inputs (QEWASD and translations), right? I was wondering how accurately this can be controlled. Is it a matter of \u003Cem\u003Eon/off\u003C/em\u003E or is there more in between, like what possible with analog sticks?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI now realize that the ALCOR project found a way to get this data, its pretty crazy to get it but im going to give it a shot \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI love your fire, man. \u003Cspan style=\u0022font-size:8px;\u0022\u003EMake sure you do not burn yourself up!\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThey\u0027d behave identically when just running one program, but differ when program calls are nested in other program calls.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would like some more clarity when it comes to nested behaviour too. I found that previously nesting would work one way, but not the other. Running a script that started another version of itself each time it ran and then issuing a \u003Cem\u003Ebreak\u003C/em\u003E command it exited all instances of it. I guess you would call it flow control when asking for some insight in the process and means to direct it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-18T02:06:28Z\u0022 title=\u002202/18/2014 02:06  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 18, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-18T02:34:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI understand the current work is on direct inputs (QEWASD and translations), right? I was wondering how accurately this can be controlled. Is it a matter of \u003Cem\u003Eon/off\u003C/em\u003E or is there more in between, like what possible with analog sticks?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eit looks like it will work like this, there are 6 controls:\u003C/p\u003E\u003Cp\u003Epitch,\u003C/p\u003E\u003Cp\u003Eroll,\u003C/p\u003E\u003Cp\u003Eyaw,\u003C/p\u003E\u003Cp\u003ExTranslate, (anyone have a better name for these?)\u003C/p\u003E\u003Cp\u003EyTranslate,\u003C/p\u003E\u003Cp\u003EzTranslate\u003C/p\u003E\u003Cp\u003Ethey are all floats and should accept any value between 1 and -1 i think? im not 100% on the domain.\u003C/p\u003E\u003Cp\u003Ethere will also be two flags you can toggle:\u003C/p\u003E\u003Cp\u003ENeutral,\u003C/p\u003E\u003Cp\u003EKill\u003C/p\u003E\u003Cp\u003Eneutral just resets everything to 0, \u003C/p\u003E\u003Cp\u003Ekill takes over and tries to steady your ship.\u003C/p\u003E\u003Cp\u003Ethere are a few other properties in the bag like trim that i havent hooked up yet and might not, not sure.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI love your fire, man. \u003Cspan style=\u0022font-size:8px;\u0022\u003EMake sure you do not burn yourself up!\u003C/span\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIll try \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-18T02:59:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003Eit looks like it will work like this, there are 6 controls:\u003Cp\u003Ethey are all floats and should accept any value between 1 and -1 i think? im not 100% on the domain.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFunny, I thought to myself that might be useful to set it up like the throttle control. Apparently you came to the same conclusion \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E If you are going to arbitrarily pick a domain, I feel that picking one akin to the throttle control is a fair way to go.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-18T03:08:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003Eit looks like it will work like this, there are 6 controls:\u003Cp\u003ExTranslate, (anyone have a better name for these?)\u003C/p\u003E\u003Cp\u003EyTranslate,\u003C/p\u003E\u003Cp\u003EzTranslate\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMaybe \u003Cem\u003Exaxis\u003C/em\u003E, \u003Cem\u003Eyaxis\u003C/em\u003E and \u003Cem\u003Ezaxis\u003C/em\u003E? Or \u003Cem\u003Eaxisx\u003C/em\u003E, \u003Cem\u003Eaxisy\u003C/em\u003E and \u003Cem\u003Eaxisz\u003C/em\u003E, for that matter. I am not too fond of fumbling around with capitals, as those were not required in kOS. The x, y and z terms should definitly be in the names though, as that makes it very clear what is going on and if not, Wikipedia and the internet are full of explanations what that means.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Ethere will also be two flags you can toggle:\u003C/p\u003E\u003Cp\u003E[...]\u003C/p\u003E\u003Cp\u003EKill\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow should I view this? As something like ASAS?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-18T16:30:27Z\u0022 title=\u002202/18/2014 04:30  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 18, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-18T03:49:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EMaybe \u003Cem\u003Exaxis\u003C/em\u003E, \u003Cem\u003Eyaxis\u003C/em\u003E and \u003Cem\u003Ezaxis\u003C/em\u003E? Or \u003Cem\u003Eaxisx\u003C/em\u003E, \u003Cem\u003Eaxisy\u003C/em\u003E and \u003Cem\u003Eaxisz\u003C/em\u003E, for that matter. I am not too fond of fumbling around with capitals, as those were not required in kOS. The x, y and z terms should definitly be in the names though, as that makes it very clear what is going on and if not, Wikipedia and the internet is full of explanations what that means.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Esorry about the caps, they are not required, we are still case insensitive for things like this \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EHow should I view this? As something like ASAS?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESure, I am not sure if it is actually is the same as SAS but its in the API and i think its useful.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-18T07:14:29Z","Content":"\n\u003Cp\u003EI\u0027m against the idea of using the nomenclature \u0022x,y,z\u0022 for direct RCS translation control (i.e. the HNIJKL keys).\u003C/p\u003E\u003Cp\u003EThis is because there\u0027s already a frame of reference in the game using x,y,z axes that are oriented with the orbital body not the vessel. (where Y is north, and the XZ plane is the equator), and axes in this direction are what is used every time you get a vector\u0027s XYZ parts in kOS.\u003C/p\u003E\u003Cp\u003ECalling the vessel\u0027s orientation by the same naming convention would really be confusing because the X,y,z you\u0027re talking about when steering the vessel would be different from when doing everything else in kOS.\u003C/p\u003E\u003Cp\u003EHow about making it clear that it\u0027s relative to the vessel by calling the 6 directions something like Fore, Aft, Port, Starboard, Top, and Bottom? (or left and right if you prefer that to port and starboard). You could have the 3 axes being called Fore, Starboard, Top. (That\u0027s a left-handed system akin to the rest of Unity. If you want a right-handed system then change Starbaord to Port.)\u003C/p\u003E\u003Cp\u003E(I sugested \u0022top\u0022 rather than \u0022up\u0022 because there\u0027s already an \u0022up\u0022 direction that means something else in kOS).\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-18T16:59:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThis is because there\u0027s already a frame of reference in the game using x,y,z axes that are oriented with the orbital body not the vessel. (where Y is north, and the XZ plane is the equator), and axes in this direction are what is used every time you get a vector\u0027s XYZ parts in kOS.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs this integral to kOS and available and out in the open for the user? Because if it is something under the hood - or something that should be under the hood - I think it does not really matter that it is already in use. However, if there is a legitimate concern that confusion may arise, nomenclature should be appropiately adjusted - but I would strongly suggest to keep it in line with \u003Cem\u003Ex, y and z\u003C/em\u003E conventions. Those are so well known that I would loathe to change it unless it is absolutely necessary.\u003C/p\u003E\u003Cp\u003ETo be honest, I think some stuff currently in kOS should not be there to see for the user. It is fine that KSP uses strange internal trickery to get the numbers to work on a solar system scale, but KSP and kOS users should not be confronted with Euler rotations that are relative to different objects at different times and that change seemingly arbitrarily. If at all possible, values should be translated into the real world numbers that engineers also have to deal with when solving the problems that users are trying to solve with kOS. Not only does that make things easier to understand, you will also learn more actually useful stuff (rather than learning a lot about the obscure inner workings of KSP).\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-18T17:22:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EIs this integral to kOS and available and out in the open for the user? Because if it is something under the hood - or something that should be under the hood - I think it does not really matter that it is already in use. However, if there is a legitimate concern that confusion may arise, nomenclature should be appropiately adjusted - but I would strongly suggest to keep it in line with \u003Cem\u003Ex, y and z\u003C/em\u003E conventions. Those are so well known that I would loathe to change it unless it is absolutely necessary.\u003Cp\u003ETo be honest, I think some stuff currently in kOS should not be there to see for the user. It is fine that KSP uses strange internal trickery to get the numbers to work on a solar system scale, but KSP and kOS users should not be confronted with Euler rotations that are relative to different objects at different times and that change seemingly arbitrarily. If at all possible, values should be translated into the real world numbers that engineers also have to deal with when solving the problems that users are trying to solve with kOS. Not only does that make things easier to understand, you will also learn more actually useful stuff (rather than learning a lot about the obscure inner workings of KSP).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree that there should be consistency and ease of use for KOS users. I am willing to add as much complexity to KOS itself as needed to abstract API weirdness. I have a stranger idea for how to deal with both the rotational and translational setting. How would you feel with something like this?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E \u003Cbr\u003ELOCK TRANSLATION TO V(1,-0.25,0). \u003Cbr\u003ELOCK ROTATION TO V(0,0,-1).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis would only work for the active vessel and I\u0027m not 100% on this being a schematically correct use of vector\u003C/p\u003E\u003Cp\u003EFor all vessels We could use \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET TARGET:CONTROL:TRANSLATE TO V(1,-0.25,0). \u003Cbr\u003ELOCK TARGET:CONTROL:ROTATE TO V(0,0,-1).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-18T17:53:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI\u0027m against the idea of using the nomenclature \u0022x,y,z\u0022 for direct RCS translation control (i.e. the HNIJKL keys).\u003Cp\u003EThis is because there\u0027s already a frame of reference in the game using x,y,z axes that are oriented with the orbital body not the vessel. (where Y is north, and the XZ plane is the equator), and axes in this direction are what is used every time you get a vector\u0027s XYZ parts in kOS.\u003C/p\u003E\u003Cp\u003ECalling the vessel\u0027s orientation by the same naming convention would really be confusing because the X,y,z you\u0027re talking about when steering the vessel would be different from when doing everything else in kOS.\u003C/p\u003E\u003Cp\u003EHow about making it clear that it\u0027s relative to the vessel by calling the 6 directions something like Fore, Aft, Port, Starboard, Top, and Bottom? (or left and right if you prefer that to port and starboard). You could have the 3 axes being called Fore, Starboard, Top. (That\u0027s a left-handed system akin to the rest of Unity. If you want a right-handed system then change Starbaord to Port.)\u003C/p\u003E\u003Cp\u003E(I sugested \u0022top\u0022 rather than \u0022up\u0022 because there\u0027s already an \u0022up\u0022 direction that means something else in kOS).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree with you that XYZ are overloaded, this is why i asked for suggestions for names. I think that if we explicitly call out the XYZ axis in the documentation calling it STARBOARD/TOP/FORE makes sense. I do like the nautical wording as they are very explicit.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-18T18:20:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EHow would you feel with something like this?\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E \u003Cbr\u003ELOCK TRANSLATION TO V(1,-0.25,0). \u003Cbr\u003ELOCK ROTATION TO V(0,0,-1).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis would only work for the active vessel and I\u0027m not 100% on this being a schematically correct use of vector\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am not sure you would need to (or should) call it a vector. Just the three terms would work for me. But doing it that way is not a bad idea. You can independently control each axis within the earlier discussed -1 to 1 domain and pretty much everything in between. I think I like it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003ETwo things come to mind:\u003C/p\u003E\u003Cp\u003E- I would personally like the ability to \u003Cem\u003Eset\u003C/em\u003E something to a value instead of just locking it. Now, it is impossible to set the throttle to 50% without also denying the user any input. \u003C/p\u003E\u003Cp\u003EBy the same token, reading current throttle and probably rotation and translation values would be desirable. I would love to be able to readout what throttle setting the user set. Something like \u003Cem\u003Eprint throttle\u003C/em\u003E or \u003Cem\u003Eset throtval to throttle\u003C/em\u003E would be sufficient I think. It would conveniently also be most of what is needed for indirect user control (fly-by-wire) capabilities, although some thought needs to be put into how to seperate user input from kOS output.\u003C/p\u003E\u003Cp\u003E- For maximum flexibility it would be nice to be able to set one value without having to touch the others. That way I could write a script that would just prevent craft rotation, but leaves the user free to pitch and yaw as desired.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EFor all vessels We could use \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET TARGET:CONTROL:TRANSLATE TO V(1,-0.25,0). \u003Cbr\u003ELOCK TARGET:CONTROL:ROTATE TO V(0,0,-1).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs long as we are careful not to string these things together too much (lock orbit:mun:target:control:rotate:periapsis:time to 2 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E), that should work.\u003C/p\u003E\u003Cp\u003EI guess it is a matter of finding a balance between hierarchy - and thus predictability - and keeping things legible and easy to use.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EPlease excuse any wonky language, very little sleep and lots of coffee.\u003C/span\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-18T18:44:18Z\u0022 title=\u002202/18/2014 06:44  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 18, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-18T19:20:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI agree with you that XYZ are overloaded, this is why i asked for suggestions for names. I think that if we explicitly call out the XYZ axis in the documentation calling it STARBOARD/TOP/FORE makes sense. I do like the nautical wording as they are very explicit.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI like the terms because they make it 100% crystal clear that what you are dealing with is a frame of reference that rotates with the ship. It\u0027s clear that \u0022fore\u0022 can\u0027t be anything other than the direction the nose is pointed.\u003C/p\u003E\u003Cp\u003EAs for the other confusion over xyz changing its frame of reference willy-nilly because of how KSP solved the space kraken problem, I agree that that could be cleared up (although it *definately* would introduce backward compatibility problems, it\u0027s better to do that earlier rather than later). It would be useful if kOS always returned values in the fixed-planet reference system instead of sometimes using the rotating-planet reference system. (That would mean normalizing the X and Z axes to always be the same longitude lines.) But that would require quite an overhaul in the code, as you\u0027d have to remember to always run all user-supplied coordinates through the transformation before sending them to the KSP API functions.) And on that subject, another point of real confusion is how the *ORIGIN* of the XYZ system keeps changing depending on what value you\u0027re retrieving, not just on where you are. For example, the POSITION of a body is its position relative to your ship, while the VELOCITY of it is its velocity relative to your current SOI body. The fact that position and velocity are measured in frames of reference that don\u0027t have the same origin point is really messy and utterly non-intuitive. (thankfully they do have the same rotation other wise it would be even more messy).\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-18T19:34:08Z","Content":"\n\u003Cp\u003EYes, that is exactly the kind of stuff users should never deal with. I know the back end is probably going to be a pain, but fixing it suits the intention and purpose of kOS perfectly.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-18T19:43:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis would only work for the active vessel and I\u0027m not 100% on this being a schematically correct use of vector\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDespite what I said about avoiding the terms X,Y, and Z, if Vectors were used I\u0027d prefer to keep the terms X Y and Z. The terms Fore/starboard/top would be used if we weren\u0027t using Vectors at all. I do sort of see a problem in that vectors are handy thing to have and yet the terminology could confuse people\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6. I\u0027m now waffling on what\u0027s the better thing to do.\u003C/p\u003E\u003Cp\u003EThe thing I fear is someone combining operations between the games\u0027 other vectors and the \u0027docking vectors\u0027 and thinking they\u0027re the same X Y and Z axes. But the other thing is that being able to treat docking operations with vectors would open up a lot of useful things like using dot and cross products to help you calculate docking moves. These two goals are in direct contradiction\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6. Hmmm\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003C/p\u003E\u003Cp\u003EI\u0027m sure you\u0027ve seen the stuff I put on the wiki ages ago about rotating frames of reference between native XYZ and north/east/up coordinates. What I\u0027m now wondering is whether or not what kOS needs is a few frame-of-reference translation functions that users can call, like so:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset vel to velocity:orbit.\u003Cbr\u003Eset relVel to coordSpaceToShip( vel ).\u003Cbr\u003Eprint \u0022I am drifting at \u0022 \u002B relVel:y \u002B \u0022 m/s toward my roof.\u0022.\u003Cbr\u003Eprint \u0022I am drifting at \u0022 \u002B relVel:x \u002B \u0022 m/s toward my right.\u0022.\u003Cbr\u003Eprint \u0022I am drifting at \u0022 \u002B relVel:z \u002B \u0022 m/s forward.\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ei.e.\u003C/p\u003E\u003Cp\u003EcoordSpaceToShip() : input a vector in KSP\u0027s XYZ system. outputs a vector in ship-relative system.\u003C/p\u003E\u003Cp\u003EcoordShipToSpace() goes the other way.\u003C/p\u003E\u003Cp\u003EcoordSpaceToGeo() : inputs a vector in KSP\u0027s XYZ system. Outputs a vector in the current east/north/up.\u003C/p\u003E\u003Cp\u003EcoordGeoToSpace() goes the other way.\u003C/p\u003E\u003Cp\u003EThe thing is, by adding these functions to the language, you\u0027d make it explicitly clear to users that the XYZ of vectors can be in different frames of reference, and get them used to the idea that the X of one vector might not be the same as the X of another vector. Maybe if these functions existed then having different meanings of X Y and Z wouldn\u0027t be as confusing as I had first thought.\u003C/p\u003E\u003Cp\u003EThere\u0027s a part of me that feels a bit prideful that I worked out how to deal with XYZ\u0027s in KOS and do stuff like those transformations on my own with just trial and error and investigation at the terminal to work out what the coordinate grid is actually like, but I also recognize that having to do that was just silly and shouldn\u0027t have been necessary. Maybe providing these as built-ins would be a good idea.\u003C/p\u003E\u003Cp\u003E(On that subject, also the ability to convert between Direction and Vector, another thing I made a small program using transformation matrices for, would be nice. Obviously when going from Direction to Vector you have no magnitude for the vector, so you just make it a unit vector, and when going from vector to Direction you have no roll information so you have to just pick an arbitrary roll.)\u003C/p\u003E\n"}]}