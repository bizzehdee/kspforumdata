{"TopicId":140769,"ForumId":32,"TopicTitle":"The format of sfs save files","CreatedByName":"SalehRam","CreatedById":138066,"CreatedDateTime":"2016-05-29T20:11:43Z","PageNum":1,"Articles":[{"CreatedByName":"SalehRam","CreatedById":138066,"CreatedDateTime":"2016-05-29T20:11:43Z","Content":"\n\u003Cp\u003E\nHello,\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI have asked this in the addons development forum but got no answer...\n\u003C/p\u003E\n\u003Cp\u003E\nSo I woul like to know the format of the sfs save files, are they following a standard or is it just a format made up by squad?\n\u003C/p\u003E\n\u003Cp\u003E\nI need to know this as I am planning to do a small app using .NET that can work with sfs to do specific tasks that I could not find somewhere else...\n\u003C/p\u003E\n\u003Cp\u003E\nThanks a lot!\n\u003C/p\u003E\n"},{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2016-05-29T22:05:39Z","Content":"\n\u003Cp\u003E\nHave you tried opening them in a hex editor and search for patterns?\u003Cbr\u003E\nlook on youtube for data hacking tutorials, the stuff\u0027s not hard to figure out once you understand that everything has a structure, but the shape of those structures is unknown.\n\u003C/p\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2016-05-29T22:23:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222607202\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464559539\u0022 data-ipsquote-userid=\u0022139010\u0022 data-ipsquote-username=\u0022Xyphos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 minutes ago, Xyphos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHave you tried opening them in a hex editor and search for patterns?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOr, indeed, in a text editor, since it\u0027s not a binary file.\u00A0 \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222607027\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464552703\u0022 data-ipsquote-userid=\u0022138066\u0022 data-ipsquote-username=\u0022SalehRam\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, SalehRam said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nare they following a standard or is it just a format made up by squad?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n...as far as I know, it\u0027s just a format made up by Squad.\u00A0 Would happily be proven wrong if someone knows better.\n\u003C/p\u003E\n\u003Cp\u003E\nThat said... it\u0027s a pretty straightforward format to reverse-engineer, just look at the text.\u00A0 It\u0027s your basic key = value, named-structure-with-curly-brace-contents format.\n\u003C/p\u003E\n"},{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2016-05-29T22:24:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222607223\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464560610\u0022 data-ipsquote-userid=\u0022125662\u0022 data-ipsquote-username=\u0022Snark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, Snark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOr, indeed, in a text editor, since it\u0027s not a binary file.\u00A0 \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\noh, I know. I was just trying to learn him a thing or two. \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"jwenting","CreatedById":57735,"CreatedDateTime":"2016-05-30T08:39:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222607223\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464560610\u0022 data-ipsquote-userid=\u0022125662\u0022 data-ipsquote-username=\u0022Snark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 hours ago, Snark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOr, indeed, in a text editor, since it\u0027s not a binary file.\u00A0 \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n...as far as I know, it\u0027s just a format made up by Squad.\u00A0 Would happily be proven wrong if someone knows better.\n\u003C/p\u003E\n\u003Cp\u003E\nThat said... it\u0027s a pretty straightforward format to reverse-engineer, just look at the text.\u00A0 It\u0027s your basic key = value, named-structure-with-curly-brace-contents format.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhich is why I wonder why Squad didn\u0027t use XML as that\u0027s a pretty well standardized format with parsers available for most programming languages (and indeed provided as standard with a lot of them, including C#).\n\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-05-30T08:56:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222607735\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464597592\u0022 data-ipsquote-userid=\u002257735\u0022 data-ipsquote-username=\u0022jwenting\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 minutes ago, jwenting said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhich is why I wonder why Squad didn\u0027t use XML as that\u0027s a pretty well standardized format with parsers available for most programming languages (and indeed provided as standard with a lot of them, including C#).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is a very common practice when you don\u0027t need all the features of XML. \u00A0A well written, simple text parser should be substantially more efficient than any full-blown XML parser. \u00A0Also, the extra cruft in XML files tends to make them harder to read...\n\u003C/p\u003E\n"},{"CreatedByName":"cicatrix","CreatedById":120831,"CreatedDateTime":"2016-05-30T12:28:33Z","Content":"\n\u003Cp\u003E\nIt\u0027s \u003Ca href=\u0022http://www.json.org/\u0022 rel=\u0022external nofollow\u0022\u003EJSON\u003C/a\u003E... Well, almost. I couldn\u0027t make standard JSON libraries work with this, but after certain amount of effort I could successfully parse those files.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-30T12:29:09Z\u0022 title=\u002205/30/2016 12:29  PM\u0022 data-short=\u00228 yr\u0022\u003EMay 30, 2016\u003C/time\u003E by cicatrix\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2016-05-30T15:37:16Z","Content":"\n\u003Cp\u003E\n\u003Cu\u003E\u003C/u\u003EThe APIs to parse the Squad file format are accessible to modders. Probably you can use them from your own program if you link it with the KSP DLL files. Not sure if legal, but I think it\u0027s possible.\n\u003C/p\u003E\n"},{"CreatedByName":"SalehRam","CreatedById":138066,"CreatedDateTime":"2016-05-30T19:05:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222607890\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464611313\u0022 data-ipsquote-userid=\u0022120831\u0022 data-ipsquote-username=\u0022cicatrix\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, cicatrix said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s \u003Ca href=\u0022http://www.json.org/\u0022 rel=\u0022external nofollow\u0022\u003EJSON\u003C/a\u003E... Well, almost. I couldn\u0027t make standard JSON libraries work with this, but after certain amount of effort I could successfully parse those files.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nLooking at JSON structure (which I am familiar with, but somehow I missed the very similarity with sfs), I think with some few manipulations to text after loading it into my application I can utilize standard JSON libraries to read the text \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"SalehRam","CreatedById":138066,"CreatedDateTime":"2016-05-30T20:39:26Z","Content":"\n\u003Cp\u003E\nJust for the sake of sharing ideas and knowledge, these are my observations and idea about reading the sfs file as a JSON:\n\u003C/p\u003E\n\u003Cp\u003E\nPart of sfs file:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EGAME\n{\n    version = 1.1.2\n    Title = DrMath (CAREER)\n    Description = No description available.\n    linkURL =\n    linkCaption =\n    Mode = CAREER\n    Status = 1\n    scene = 5\n    editor = None\n    flag = Squad/Flags/hexagon\n    launchID = 47\n    modded = True\n    envInfo =  - Environment Info - Win32NT 7FFFFFFFFFFFFFFF  Args: KSP_x64.exe  -\n    PARAMETERS\n    {\n        preset = Custom\n        FLIGHT\n        {\n            CanQuickSave = True\n            CanQuickLoad = True\n            CanAutoSave = True\n            CanUseMap = True\n            CanSwitchVesselsNear = True\n            CanSwitchVesselsFar = True\n            CanTimeWarpHigh = True\n            CanTimeWarpLow = True\n            CanEVA = True\n            CanIVA = True\n            CanBoard = True\n            CanRestart = True\n            CanLeaveToEditor = True\n            CanLeaveToTrackingStation = True\n            CanLeaveToSpaceCenter = True\n            CanLeaveToMainMenu = False\n        }\n        EDITOR\n        {\n            CanSave = True\n            CanLoad = True\n            CanStartNew = True\n            CanLaunch = True\n            CanLeaveToSpaceCenter = True\n            CanLeaveToMainMenu = False\n            startUpMode = 0\n            craftFileToLoad =\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAnd an example of a JSON structure:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E{\u0022widget\u0022: {\n    \u0022debug\u0022: \u0022on\u0022,\n    \u0022window\u0022: {\n        \u0022title\u0022: \u0022Sample Konfabulator Widget\u0022,\n        \u0022name\u0022: \u0022main_window\u0022,\n        \u0022width\u0022: 500,\n        \u0022height\u0022: 500\n    },\n    \u0022image\u0022: { \n        \u0022src\u0022: \u0022Images/Sun.png\u0022,\n        \u0022name\u0022: \u0022sun1\u0022,\n        \u0022hOffset\u0022: 250,\n        \u0022vOffset\u0022: 250,\n        \u0022alignment\u0022: \u0022center\u0022\n    },\n    \u0022text\u0022: {\n        \u0022data\u0022: \u0022Click Here\u0022,\n        \u0022size\u0022: 36,\n        \u0022style\u0022: \u0022bold\u0022,\n        \u0022name\u0022: \u0022text1\u0022,\n        \u0022hOffset\u0022: 250,\n        \u0022vOffset\u0022: 100,\n        \u0022alignment\u0022: \u0022center\u0022,\n        \u0022onMouseUp\u0022: \u0022sun1.opacity = (sun1.opacity / 100) * 90;\u0022\n    }\n}}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSo, I can load the sfs into memory (it is going to eat the hell out of the memory), then implement a function that will modify the text to match the JSON structure exactly, such as replacing the equal signs, adding quotation marks and value commas, etc... and then the remaining is easy for a JSON library...\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThis is one approach, which I both like and dislike, as it will add some complexity and make some double work...\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nOther approach, which I kinda prefer, is to write a function that will read the whole sfs line by line and determine the key and the value, then outputs it in an XML format...\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, that will require more work but the result will be much more rewarding from the previous approach for me...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-30T20:42:37Z\u0022 title=\u002205/30/2016 08:42  PM\u0022 data-short=\u00228 yr\u0022\u003EMay 30, 2016\u003C/time\u003E by SalehRam\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Xyphos","CreatedById":139010,"CreatedDateTime":"2016-05-31T01:52:17Z","Content":"\n\u003Cp\u003E\nthere are similarities to JSON, but I think YAML would have been a better choice.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"cicatrix","CreatedById":120831,"CreatedDateTime":"2016-05-31T06:45:22Z","Content":"\n\u003Cp\u003E\nInstead of loading the whole file in memory you can make SFSReader class which would read it element by element. I wish I had more time to make something presentable out of my C# code that messes with these files.\n\u003C/p\u003E\n"},{"CreatedByName":"steuben","CreatedById":77368,"CreatedDateTime":"2016-05-31T12:04:19Z","Content":"\n\u003Cp\u003E\nYou guys are all over thinking this. I\u0027ve got a little Excel file that will strip struts out of a craft file without using scripts.\n\u003C/p\u003E\n\u003Cp\u003E\nAs much as I think that learning how to translate stuff into the various standard formats is a good thing... I\u0027m going to ask \u0022why\u0022.\u00A0It feels like much of the leverage that you would get from translation will be lost. Mostly because in doing the translation you have the data in hand. So why process it to \u0026lt;insert format here\u0026gt;, do whatever you want to it, process it out of \u0026lt;insert format here\u0026gt;?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-05-31T14:56:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222609593\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464696259\u0022 data-ipsquote-userid=\u002277368\u0022 data-ipsquote-username=\u0022steuben\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, steuben said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou guys are all over thinking this. I\u0027ve got a little Excel file that will strip struts out of a craft file without using scripts.\n\u003C/p\u003E\n\u003Cp\u003E\nAs much as I think that learning how to translate stuff into the various standard formats is a good thing... I\u0027m going to ask \u0022why\u0022.\u00A0It feels like much of the leverage that you would get from translation will be lost. Mostly because in doing the translation you have the data in hand. So why process it to \u0026lt;insert format here\u0026gt;, do whatever you want to it, process it out of \u0026lt;insert format here\u0026gt;?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhile I basically agree with your second paragraph that there is no point converting the format to XML so you can use an XML library to read it, (the conversion process, by definition, must be decoding the data out of the format in order to generate\u00A0useful XML so just use the data directly) the first paragraph isn\u0027t particularly related.\u00A0 It is significantly harder to write a program that can remove parts from vessels in flight as the linkages between the parts are stored differently in the .sfs file than in a .craft file.\u00A0 In a craft file you can basically just strip out whole parts as you feel like but, if you do the same in a save file then it is highly unlikely to load because references to other parts are specified as indices into the part array of the vessel and removing parts will change the index of every following part.\u00A0 For this reason, when messing with vessels in save files, you really need to load the data into an in-memory structure that resembles the actual layout of the file, so that, when you write it out again, you can fix up the part references...\n\u003C/p\u003E\n"},{"CreatedByName":"cicatrix","CreatedById":120831,"CreatedDateTime":"2016-05-31T15:05:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222609593\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464696259\u0022 data-ipsquote-userid=\u002277368\u0022 data-ipsquote-username=\u0022steuben\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, steuben said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou guys are all over thinking this. I\u0027ve got a little Excel file that will strip struts out of a craft file without using scripts.\n\u003C/p\u003E\n\u003Cp\u003E\nAs much as I think that learning how to translate stuff into the various standard formats is a good thing... I\u0027m going to ask \u0022why\u0022.\u00A0It feels like much of the leverage that you would get from translation will be lost. Mostly because in doing the translation you have the data in hand. So why process it to \u0026lt;insert format here\u0026gt;, do whatever you want to it, process it out of \u0026lt;insert format here\u0026gt;?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBecause if you do and make it open source other people might do something really useful with your library.\n\u003C/p\u003E\n"},{"CreatedByName":"SalehRam","CreatedById":138066,"CreatedDateTime":"2016-06-02T12:37:15Z","Content":"\n\u003Cp\u003E\nFirst, I would go through the steps to do this from scratch is because 1. I enjoy it, 2. I tend to go to the \u0022do it yourself\u0022 approach when I really and badly need a thing and not find it, at one point, I really needed to work with SFS files quickly and easily, and while I appreciate the tools that are available out there, my own criteria was still not satisfied...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo, the idea I will work on is:\n\u003C/p\u003E\n\u003Cp\u003E\nRead the SFS file line by line, map every line in the file, then manipulate the whole file and convert it into something compatible with standard markdown formats (be it JSON, XML or whatever, though JSON for me seems easier). and link every line of the new file to the matching line of the original file\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I finish working with the file, I simply merge the values of file with the original one based on the map and links I created earlier in the process...\n\u003C/p\u003E\n\u003Cp\u003E\nBecause of the nature of this, I will need to use a tool (programming language) that I feel very comfortable with, and that is VB.NET as I know others, but I have been with VB/VB.NET since 1996. (as a hobby)\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll put the project on github later for contributions\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-02T12:37:49Z\u0022 title=\u002206/02/2016 12:37  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 2, 2016\u003C/time\u003E by SalehRam\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Curveball Anders","CreatedById":107529,"CreatedDateTime":"2016-06-02T13:56:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222607735\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221464597592\u0022 data-ipsquote-userid=\u002257735\u0022 data-ipsquote-username=\u0022jwenting\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2016-05-30 at 10:39 AM, jwenting said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhich is why I wonder why Squad didn\u0027t use XML as that\u0027s a pretty well standardized format with parsers available for most programming languages (and indeed provided as standard with a lot of them, including C#).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u0022Everything looks like a nail for someone used to a hammer\u0022 -- Unknown Ancient Sage.\n\u003C/p\u003E\n\u003Cp\u003E\nAny coder\u0027s (or other person involved in creating software) choice of tool or tool chain often comes down to known and/or previously used stuff and not always (or even ever) the tool or tool chain that would be most suitable based on perfect knowledge and 20/20 hindsight \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s also a known fact that when a team member returns from a demo/training/briefing on a tool, she/he/it will insist on converting all possible (and some impossible) code to this new and revolutionary concept ...\n\u003C/p\u003E\n\u003Cp\u003E\nSquad\u0027s (most likely HarvesteR\u0027s) choice of format was simply the one that was most obvious right there and then \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"SalehRam","CreatedById":138066,"CreatedDateTime":"2016-06-09T11:26:28Z","Content":"\n\u003Cp\u003E\nGot something going... Will get it on Github once I get home, it is C# though (I thought why not get out of the box anyways and do something new all together).\n\u003C/p\u003E\n\u003Cp\u003E\nBasically, I take the file, read it line by line, index the nodes, and their sub-nodes.\n\u003C/p\u003E\n\u003Cp\u003E\nUsing 5-d array, a treenode object to build the structure.\n\u003C/p\u003E\n\u003Cp\u003E\nI thought about using dataset, xml file, dictionaries, but the thing is, I could think about it easily done with a 5-d array like:\n\u003C/p\u003E\n\u003Cp\u003E\n[original line number in sfs file, tab spaces (/t), property name, property value, the index of the property in treenode]\n\u003C/p\u003E\n\u003Cp\u003E\nThe brackets \u0022{,}\u0022 are going to be ignored, and the node headers are not going to be included in the array as well.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m now at the point of building the treenode structure, and once that is done, everything is done.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOnce that is completed, searching, through the array will be possible and I believe I can do anything with the content that I will get at the end.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs for the memory usage, so far it goes up to 30mb, implementing the array will bump it another 60 or 90 mb, so I am talking about a total of 150mb\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-09T11:35:33Z\u0022 title=\u002206/09/2016 11:35  AM\u0022 data-short=\u00228 yr\u0022\u003EJune 9, 2016\u003C/time\u003E by SalehRam\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"steuben","CreatedById":77368,"CreatedDateTime":"2016-06-09T13:37:11Z","Content":"\n\u003Cp\u003E\nI\u0027m curious about it... how big is the sfs you\u0027re feeding into it?\n\u003C/p\u003E\n"},{"CreatedByName":"SalehRam","CreatedById":138066,"CreatedDateTime":"2016-06-09T15:42:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222623734\u0022 data-ipsquote-contentid=\u0022140769\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465479431\u0022 data-ipsquote-userid=\u002277368\u0022 data-ipsquote-username=\u0022steuben\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, steuben said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m curious about it... how big is the sfs you\u0027re feeding into it?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAbout 6.5mb, it has about 313,000 lines as well\n\u003C/p\u003E\n\u003Cp\u003E\nI will include it in the github repository once I upload it\n\u003C/p\u003E\n"},{"CreatedByName":"cantab","CreatedById":104935,"CreatedDateTime":"2016-06-09T16:04:43Z","Content":"\n\u003Cp\u003E\nYeah, it\u0027s a fairly straightforward file format. I don\u0027t know if it\u0027s any standard or something Squad cooked up. There is already a program capable of reading and parsing the .sfs format - KSP itself!\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s nothing like XML. It\u0027s not JSON, though\u00A0at first\u00A0glance it looks\u00A0close. Practically, probably the biggest deal is that .sfs is a line-by-line format, whereas JSON uses punctuation. It\u0027s not INI, YAML, or libconfig\u00A0either.\n\u003C/p\u003E\n\u003Cp\u003E\nIt is I think the same basic format as the .cfg files for parts, and the settings.cfg file. And the format is inherited and extended by Module Manager.\n\u003C/p\u003E\n\u003Cp\u003E\nI believe the KSP Trajectory Optimization Tool also reads .sfs files , though it only cares about a small portion of them.\n\u003C/p\u003E\n"},{"CreatedByName":"Ippo","CreatedById":107018,"CreatedDateTime":"2016-06-09T16:15:33Z","Content":"\n\u003Cp\u003E\nIn case anyone needs it, a long time ago I had written a small parser for ConfigNode objects. It has never been 100% complete or tested, and I haven\u0027t checked if it works in ages, but it should be a good start I hope.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/Ippo343/OpenNodeParser\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Ippo343/OpenNodeParser\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nLicense is public domain (aka \u0022do what you want with it\u0022).\n\u003C/p\u003E\n\u003Cp\u003E\nP.S: oh, and it\u0027s neither JSON nor YAML. It\u0027s just a Squad proprietary standard.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-09T16:20:45Z\u0022 title=\u002206/09/2016 04:20  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 9, 2016\u003C/time\u003E by Ippo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SalehRam","CreatedById":138066,"CreatedDateTime":"2016-06-10T03:08:55Z","Content":"\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/salehram/SFSReaderClass\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/salehram/SFSReaderClass\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThat\u0027s my mess... Might look awkward the way I did this, but I was just going through with my thoughts...\n\u003C/p\u003E\n\u003Cp\u003E\nThe idea is you will get 2 references, one is visualized in the node tree, the other one is a sort of dictionary for the whole file. When an item from the tree is selected, there is an index for it, that index then will be matched from the other reference which also contain the line number of each line of the SFS file, that way, direct search and modifications are possible. a complete file rewrite can be done...\n\u003C/p\u003E\n\u003Cp\u003E\nThere are few things that I need to complete yet, but this is about 90% of the work, and that is my whole POC project about this... I did it because it was fun - and to break the wall with C#\n\u003C/p\u003E\n\u003Cp\u003E\nEdit:\n\u003C/p\u003E\n\u003Cp\u003E\nI took the approach of looping through the file and looking for nodes start and ends rather than regex because I built all of this on the assumption that I know nothing about the format of the file and what standard if follows. I know that node titles are capitalized, and I know the main node titles (GAME, PARAMETERS, CAREER, VESSEL, etc...), but that was not enough for me... it is not like having a full documented standard like JSON, YAML or others... so I approached this as a completely unknown format and dealt with it based on that\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ciframe class=\u0022imgur-album\u0022 frameborder=\u00220\u0022 height=\u0022550\u0022 src=\u0022//imgur.com/a/NEVIl/embed?background=ffffff\u0026amp;text=1a1a1a\u0026amp;link=4e76c9\u0022 width=\u0022100%\u0022\u003E\u003C/iframe\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022color:#B22222;\u0022\u003EPS: Can I ask for this to be moved to the development forum now that it has a content relevant to there? \u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-10T11:04:56Z\u0022 title=\u002206/10/2016 11:04  AM\u0022 data-short=\u00228 yr\u0022\u003EJune 10, 2016\u003C/time\u003E by SalehRam\u003C/strong\u003E\n\u003C/span\u003E\n"}]}