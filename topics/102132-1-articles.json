{"TopicId":102132,"ForumId":69,"TopicTitle":"Memory leak?","CreatedByName":"xerogravity","CreatedById":138388,"CreatedDateTime":"2015-03-17T12:18:35Z","PageNum":1,"Articles":[{"CreatedByName":"xerogravity","CreatedById":138388,"CreatedDateTime":"2015-03-17T12:18:35Z","Content":"\n\u003Cp\u003EI\u0027ve just started playing KPS on a new (to me) iMac\u003C/p\u003E\u003Cp\u003EThe iMac is running 10.9.5 (Mavericks) and has 16Gb RAM, 2.9Ghz i5.\u003C/p\u003E\u003Cp\u003EI\u0027m running the latest version of KSP\u003C/p\u003E\u003Cp\u003EAs my KSP session progresses, if I spend too long on Kerbin (airplane stuff rather than orbital), the ground textures begin to go. To try and explain, there appears to be a corrupted texture leaking over the top of the correct texture, like a grey mash-up grid.\u003C/p\u003E\u003Cp\u003ESoon after this any change in area status; moving between SPH and runway, VAB and pad, causes the game to go black screen and hang.\u003C/p\u003E\u003Cp\u003EIf I go orbital, there isn\u0027t quite the same problem but going back to the Space Centre or sometimes even switching ships causes black screen and a hang.\u003C/p\u003E\u003Cp\u003EIt has all the hallmarks of a memory leak. I tend to just use KSP in short bursts now or quicksave a lot. I can cope with this, irritating as it is, but as we lurch towards a 1.0 release I think t needs to be sorted. First, I need to know if any other Mac users or having any similar problems then I can report this as a bug.\u003C/p\u003E\u003Cp\u003EThanks for your time.\u003C/p\u003E\n"},{"CreatedByName":"undercoveryankee","CreatedById":103505,"CreatedDateTime":"2015-03-17T21:20:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022xerogravity\u0022 data-cite=\u0022xerogravity\u0022\u003E\u003Cdiv\u003EI\u0027ve just started playing KPS on a new (to me) iMac\u003Cp\u003EThe iMac is running 10.9.5 (Mavericks) and has 16Gb RAM, 2.9Ghz i5.\u003C/p\u003E\u003Cp\u003EI\u0027m running the latest version of KSP\u003C/p\u003E\u003Cp\u003EAs my KSP session progresses, if I spend too long on Kerbin (airplane stuff rather than orbital), the ground textures begin to go. To try and explain, there appears to be a corrupted texture leaking over the top of the correct texture, like a grey mash-up grid.\u003C/p\u003E\u003Cp\u003ESoon after this any change in area status; moving between SPH and runway, VAB and pad, causes the game to go black screen and hang.\u003C/p\u003E\u003Cp\u003EIf I go orbital, there isn\u0027t quite the same problem but going back to the Space Centre or sometimes even switching ships causes black screen and a hang.\u003C/p\u003E\u003Cp\u003EIt has all the hallmarks of a memory leak. I tend to just use KSP in short bursts now or quicksave a lot. I can cope with this, irritating as it is, but as we lurch towards a 1.0 release I think t needs to be sorted. First, I need to know if any other Mac users or having any similar problems then I can report this as a bug.\u003C/p\u003E\u003Cp\u003EThanks for your time.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKSP is a 32-bit process on OS X, so you\u0027ll start to see glitches as you approach 4 GB of RAM used. I\u0027ve seen address-space pressure cause basically the same failure modes you\u0027re describing across a couple of different versions of KSP and OS X. There are enough bugs open on the tracker for apparent leaks that opening another one probably won\u0027t add any useful information.\u003C/p\u003E\u003Cp\u003EThe kinds of memory leaks that affect .NET applications like Unity are hard to debug. The system garbage collector doesn\u0027t allow unreachable memory to remain allocated (usually; there are a few lower-level bugs where garbage collecting a managed object fails to deallocate an unmanaged allocation that it uses). The more common type of leak is one where an object remains reachable somewhere even after the programmer is no longer interested in it. Automated analysis tools can\u0027t tell whether you\u0027ve leaked that memory or just haven\u0027t run the code you were saving it for. And when the crash happens, the stack trace tells you only what was trying to allocate memory when you ran out. You\u0027re on your own to figure out what code should have disposed of something to prevent the crash.\u003C/p\u003E\u003Cp\u003E1.0 probably won\u0027t be the end of memory leaks, but I do hope to see some incremental improvements.\u003C/p\u003E\n"},{"CreatedByName":"xerogravity","CreatedById":138388,"CreatedDateTime":"2015-03-18T16:10:27Z","Content":"\n\u003Cp\u003EI used to run the Boulder Co clouds etc but am now down to just NavyFish Docking Alignment as my only mod. It still bugs out unmodded so I\u0027ve tried various configs and most mods make it happen sooner. Bit disappointing really.\u003C/p\u003E\u003Cp\u003EPrior to v0.24 I ran KSP on an older Mac with no real problems but it started spluttering around 0.25 so moved to the new iMac for 0.9. Even stock won\u0027t run cleanly now. Doesn\u0027t look good for 1.0 at this rate.\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2015-03-21T19:33:08Z","Content":"\n\u003Cp\u003EHi xerogravity \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt has been noticed that Macs use a lot of RAM even when idle, so there is not much RAM for KSP, this causes KSP assets to be cached and they may not be retrieved properly.\u003C/p\u003E\u003Cp\u003EAnything you can do to reduce your RAM use may help, such as shutting down unused applications, also please see the stickies and provide your logs.\u003C/p\u003E\n"},{"CreatedByName":"Faster","CreatedById":116429,"CreatedDateTime":"2015-03-21T22:39:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sal_vager\u0022 data-cite=\u0022sal_vager\u0022\u003E\u003Cdiv\u003EIt has been noticed that Macs use a lot of RAM even when idle, so there is not much RAM for KSP, this causes KSP assets to be cached and they may not be retrieved properly.[...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELikely you typed that in a hurry and what was thought and typed turned out different, so no worries as the intent was obviously to be helpful; unfortunately what came across is neither factual nor logical. The closest I could some would be the (made up) \u0022It has been noticed that Mac users usually buy Macs with small amounts of RAM (less than 4GB),and then there\u0027s not enough for KSP, causing some of KSP\u0027s memory to be swapped to disk, i.e., virtual memory is used, leading to awful performance, but no visual glitches or crashes or bugs like you just described.\u0022 That\u0027s also not true (particularly in this case where 16GB was reported), nor related to symptoms in rendering, but it would make sense if it were.\u003C/p\u003E\u003Cp\u003EAnyway, one way for xerogravity to check if s/he is on to something is to observe memory consumption over time especially when returning to known states, e.g., back to the Space Center with the same number of craft/parts in flight or none. If memory is indeed leaking, then consumption will trend up over time even in these steady-state situations. But, I don\u0027t think it would be worth the headache: what would you do with that information, tell Squad the OS X build is broken? \u003C/p\u003E\u003Cp\u003EMemory leaks don\u0027t directly cause problems other than out-of-memory crashes (they can indirectly cause all sorts of other problems, e.g., poor performance with certain GC algorithms that tend to thrash when memory pressure is high.) The symptoms xerogravity saw presenting are indicative of programming errors, bugs in texture handling most likely, not poor reference management. Though, in theory they could be bugs whose symptoms are triggered by other bugs that are technically memory leaks. \u003C/p\u003E\u003Cp\u003Exerogravity: the forums seem to say 0.90 on OS X is a very mixed bag and far less stable for many of the folks reporting than previous versions, e.g., the thread I started related to this: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/113514-Which-Operating-System-for-0-90-on-Apple-Hardware\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/113514-Which-Operating-System-for-0-90-on-Apple-Hardware\u003C/a\u003E -- though I didn\u0027t call out all the symptoms you saw, I have seen them all and much more on OS X with 0.90; the last 0.24.x builds were the Rock of Gibraltar by comparison.\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2015-03-22T14:13:12Z","Content":"\n\u003Cp\u003EHeh, \u003Ca href=\u0022https://duckduckgo.com/?q=mac\u002Busing\u002Btoo\u002Bmuch\u002Bram\u0026amp;t=canonical\u0022 rel=\u0022external nofollow\u0022\u003EMacs using a lot of Ram is common\u003C/a\u003E, apparently this is normal and \u0022unused ram is wasted\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003ESeveral Mac users I know are finding 4 to 6 gigs of their Ram are in use even immediately after boot and with no programs open, and on an 8gig system that isn\u0027t leaving KSP with as much, especially if you have Safari or other programs running.\u003C/p\u003E\u003Cp\u003EYes KSP and the Unity3D game engine will load assets and keep them in memory, these are freed on scene change but the PQS terrain system is known to allocate a larger cache than there is memory available, but rather than being a \u0022\u003Ca href=\u0022https://en.wikipedia.org/wiki/Memory_leak\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003Ememory leak\u003C/strong\u003E\u003C/a\u003E\u0022 this is a bounds checking issue.\u003C/p\u003E\u003Cp\u003EThere\u0027s no fix for this at this time, the only workarounds are to reduce memory usage overall with texture management addons, the 1.0 release should improve the situation though if Squad take note of community feedback.\u003C/p\u003E\u003Cp\u003EAlso, KSP on OSX has some issues with graphics which may explain the grey grid xerogravity reports, these are usually caused by anti-aliasing and the PPFX edge detection graphics feature, neither of which are working properly in Unity on OSX and are disabled by default on OSX for this reason.\u003C/p\u003E\n"},{"CreatedByName":"Jouni","CreatedById":97346,"CreatedDateTime":"2015-03-22T16:41:58Z","Content":"\n\u003Cp\u003EFirst, \u0022free memory\u0022 is an ambiguous term, especially when we\u0027re comparing different operating systems. In many systems, the amount of memory a process uses is not even a well-defined quantity, because memory regions may be shared between processes.\u003C/p\u003E\u003Cp\u003EHere is an overview of the memory usage of my two Macs (8 GB MacBook Pro and 16 GB iMac) under a fairly typical workload in OS X 10.10:\u003C/p\u003E\u003Cp\u003E[table]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td][/td]\u003C/p\u003E\u003Cp\u003E [td]MacBook Pro[/td]\u003C/p\u003E\u003Cp\u003E [td]iMac[/td]\u003C/p\u003E\u003Cp\u003E [td]iMac with KSP[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]App Memory[/td]\u003C/p\u003E\u003Cp\u003E [td]3.81 GB[/td]\u003C/p\u003E\u003Cp\u003E [td]4.17 GB[/td]\u003C/p\u003E\u003Cp\u003E [td]6.70 GB[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]File Cache[/td]\u003C/p\u003E\u003Cp\u003E [td]990 MB[/td]\u003C/p\u003E\u003Cp\u003E [td]3.24 GB[/td]\u003C/p\u003E\u003Cp\u003E [td]5.17 GB[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]Wired Memory[/td]\u003C/p\u003E\u003Cp\u003E [td]1.22 GB[/td]\u003C/p\u003E\u003Cp\u003E [td]1.28 GB[/td]\u003C/p\u003E\u003Cp\u003E [td]1.29 GB[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[/table]\u003C/p\u003E\u003Cp\u003EThe workload is the same for both computers. App Memory means memory used by user-level processes, while Wired Memory is used by kernel processes. File Cache is essentially free memory: recently opened files that are kept in memory, because there is no better use for the memory at the moment. These figures are based on the figures reported by Activity Monitor; top reports about 1 GB less. I\u0027m not even sure what causes the difference.\u003C/p\u003E\u003Cp\u003EThere is definitely something strange going on with the memory usage of KSP in OS X 10.10. The last column is the iMac with a newly started unmodded KSP sandbox in empty VAB. KSP uses 2.45 GB of memory, which is a lot more than it used to be. If I put a Mk1 command pod on the launchpad and revert to VAB, memory usage increases to 2.50 GB. I repeat the same a few times with a few different command pods, and the memory usage increases to 2.57 GB. After doing the same with Kerbal X and Learstar A1, memory usage in empty VAB increases to 2.71 GB. After a few more stock crafts, the memory usage is at 2.76 GB. After doing the same with a newly-built 41-part rocket using parts not in the stock crafts, memory usage is at 2.90 GB. Then I fly a mission with the rocket, recover the pod, and return to VAB, and the memory usage has increased to 2.95 GB. I clear the VAB, and the infamous disco effects start.\u003C/p\u003E\u003Cp\u003EThe same also occurs with anti-aliasing off (it has been at the default 2x setting since I originally installed KSP 0.22 on this Mac). At the end of a similar sequence, the memory usage in empty VAB is 2.77 GB. After deliberately using as many different parts as possible and reverting to VAB, I finally got the memory usage over 2.95 GB, starting the disco effects.\u003C/p\u003E\u003Cp\u003EIt doesn\u0027t look like a memory leak to me. More likely, the game caches the assets that have been used, in addition to loading them at startup. The more parts there are, the higher the initial memory usage becomes. The more parts you use in a single session, the higher the memory usage grows.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-03-22T18:42:35Z\u0022 title=\u002203/22/2015 06:42  PM\u0022 data-short=\u00229 yr\u0022\u003EMarch 22, 2015\u003C/time\u003E by Jouni\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jouni","CreatedById":97346,"CreatedDateTime":"2015-03-22T23:35:11Z","Content":"\n\u003Cp\u003ERandom observation: 32-bit processes can\u0027t use the full 4 GB in Yosemite. I tried allocating memory in 1 MB blocks, and the allocations started to fail soon after 3500 MB (around 3.42 GB). Apparently the rest of address space is reserved for something else. Kernel-related stuff and GPU memory are my best guesses. Incidentally, the GPU of my iMac has 1 GB of memory, and KSP starts behaving badly when memory usage approaches 3 GB. A similar limit may have existed before, or it may have been introduced in Yosemite, or even in some GPU drivers shipped with Yosemite.\u003C/p\u003E\u003Cp\u003EIt seems that there are a number of reasons why KSP 0.90 and OS X 10.10 are such a bad combination:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003E KSP both preloads all assets on startup, and caches a second copy of the assets that have actually been used. This may either be intentional or a bug, and the bug can be general or Mac-specific.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E A 32-bit program can\u0027t use the full 4 GB addess space in Yosemite. The precise limit may depend on the GPU drivers used.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E The number of stock parts increased significantly in 0.25 and 0.90. As a result, the memory limit is now easier to reach than before.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Master Tao","CreatedById":110410,"CreatedDateTime":"2015-03-23T00:48:58Z","Content":"\n\u003Cp\u003EAy, memory management on Mac OS X is... complex. I\u0027ve been trying to track down reproduction steps for the odd memory-related crash off and on since last July.\u003C/p\u003E\u003Cp\u003EThe best I can say is this: with stock KSP, I\u0027ve never had a memory crash as long as I free up at least 3.5-4 GB of physical RAM before starting KSP.\u003C/p\u003E\u003Cp\u003EThis type of crash does happen much more frequently if there\u0027s little to no physical RAM available at launch, but I can\u0027t get them to happen consistently. Any ideas?\u003C/p\u003E\n"},{"CreatedByName":"Jouni","CreatedById":97346,"CreatedDateTime":"2015-03-23T09:16:14Z","Content":"\n\u003Cp\u003EI investigated some of the more obscure sides of OS X memory management. Apparently OS X always reserves around 0.5 GB of address space for shared libraries, leaving only 3.5 GB writable virtual memory for a 32-bit process. My test program was able to use 3.4 GB of that, so it worked as it should. KSP, on the other hand, allocated only 2.8-2.9 GB of virtual memory, leaving a large unmapped region at the end of the address space. As it uses around 200 MB of shared libraries, KSP ran out of memory when its memory usage approached 3 GB.\u003C/p\u003E\u003Cp\u003EThis has probably something to do with the fact that KSP runs in a virtual machine. Perhaps Mono sets the heap limit lower in OS X 10.10 than in earlier OS X versions. If someone using an earlier version of OS X could run \u0022vmmap -resident KSP\u0022 when KSP is running, and post the end of the output similar to the following, it might help understanding the situation.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E==== Summary for process 1586\u003Cbr\u003EReadOnly portion of Libraries: Total=205.3M resident=118.8M(58%) swapped_out_or_unallocated=86.5M(42%)\u003Cbr\u003EWritable regions: Total=2.9G written=2.2G(73%) resident=2.3G(80%) swapped_out=261.5M(9%) unallocated=616.6M(20%)\u003Cbr\u003E\u003Cbr\u003EREGION TYPE                      VIRTUAL RESIDENT\u003Cbr\u003E===========                      ======= ========\u003Cbr\u003ECG backing stores                  7188K    7188K\u003Cbr\u003ECG image                             40K      40K\u003Cbr\u003ECG raster data                     14.8M    14.8M\u003Cbr\u003ECG shared images                    336K      96K\u003Cbr\u003ECoreAnimation                        16K      16K\u003Cbr\u003ECoreUI image data                    84K      84K\u003Cbr\u003EFoundation                            4K       4K\u003Cbr\u003EIOKit                             510.3M   358.0M\u003Cbr\u003EKernel Alloc Once                     4K       4K\u003Cbr\u003EMALLOC                              1.9G     1.5G        see MALLOC ZONE table below\u003Cbr\u003EMALLOC (admin)                       64K      16K\u003Cbr\u003EMALLOC freed, no zone              2768K    2736K\u003Cbr\u003EMALLOC_LARGE                       3720K    3680K\u003Cbr\u003EMALLOC_LARGE (reserved)             912K       0K        reserved VM address space (unallocated)\u003Cbr\u003EMemory Tag 242                       12K      12K\u003Cbr\u003EOpenCL                               16K      16K\u003Cbr\u003EOpenGL GLSL                         128K      76K\u003Cbr\u003ESTACK GUARD                        56.1M       0K\u003Cbr\u003EStack                              23.8M     560K\u003Cbr\u003EVM_ALLOCATE                       549.1M   477.1M\u003Cbr\u003EVM_ALLOCATE (freed)                  12K       8K\u003Cbr\u003EVM_ALLOCATE (reserved)               40K       0K        reserved VM address space (unallocated)\u003Cbr\u003E__DATA                             9204K    5512K\u003Cbr\u003E__GLSLBUILTINS                     2588K     412K\u003Cbr\u003E__IMAGE                             528K       0K\u003Cbr\u003E__LINKEDIT                         49.4M    11.9M\u003Cbr\u003E__OBJC                             2488K    2144K\u003Cbr\u003E__TEXT                            155.9M   106.9M\u003Cbr\u003E__UNICODE                           544K     256K\u003Cbr\u003Emapped file                        68.2M    17.9M\u003Cbr\u003Eshared memory                        68K       8K\u003Cbr\u003E===========                      ======= ========\u003Cbr\u003ETOTAL                               3.3G     2.5G\u003Cbr\u003ETOTAL, minus reserved VM space      3.3G     2.5G\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                                   VIRTUAL   RESIDENT ALLOCATION      BYTES\u003Cbr\u003EMALLOC ZONE                           SIZE       SIZE      COUNT  ALLOCATED  % FULL\u003Cbr\u003E===========                        =======  =========  =========  =========  ======\u003Cbr\u003EGFXMallocZone_0x15e9000               1.1G     893.6M      38306       1.1G     94%\u003Cbr\u003EDefaultMallocZone_0x15cb000         724.6M     641.3M     427680     668.1M     92%\u003Cbr\u003EDispatchContinuations_0x15f8000      8192K       116K        107         7K      0%\u003Cbr\u003ECoreGraphics_0x3800c00                244K       232K        665        15K      6%\u003Cbr\u003EQuartzCore_0x182dc00                   76K        76K        508        16K     20%\u003Cbr\u003E===========                        =======  =========  =========  =========  ======\u003Cbr\u003ETOTAL                                 1.9G       1.5G     467266       1.7G     93%\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Jouni","CreatedById":97346,"CreatedDateTime":"2015-03-23T15:16:44Z","Content":"\n\u003Cp\u003EI continued abusing KSP until it crashed. The game managed to allocate 3.2 GB of writable virtual memory, but over 240 MB of that was still free, when it ran out of memory. This looks like a fragmentation issue. Player.log shows a large number of error messages like the following:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EKSP(13161,0xb06a9000) malloc: *** mach_vm_map(size=8294400) failed (error code=3)\u003Cbr\u003E*** error: can\u0027t allocate region\u003Cbr\u003E*** set a breakpoint in malloc_error_break to debug\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMy interpretation is that the game tries to allocate between 4 MB and 8 MB using malloc(), but the malloc zone (probably DefaultMallocZone) does not have a contiguous region large enough to satisfy the demand. malloc() then tries to allocate 8 MB more virtual memory using mach_vm_map(), but that request also fails. Either none of the remaining regions of contiguous address space is large enough, or OS X just refuses to allocate address space from the remaining regions.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003E==== Summary for process 13161\u003Cbr\u003EReadOnly portion of Libraries: Total=200.8M resident=163.5M(81%) swapped_out_or_unallocated=37.3M(19%)\u003Cbr\u003EWritable regions: Total=3.2G written=56.8M(2%) resident=3.0G(93%) swapped_out=0K(0%) unallocated=242.7M(7%)\u003Cbr\u003E\u003Cbr\u003EREGION TYPE VIRTUAL RESIDENT\u003Cbr\u003E=========== ======= ========\u003Cbr\u003ECG backing stores 9044K 9044K\u003Cbr\u003ECG image 12K 12K\u003Cbr\u003ECG shared images 336K 100K\u003Cbr\u003ECoreServices 468K 468K\u003Cbr\u003ECoreUI image data 64K 64K\u003Cbr\u003EIOKit 637.8M 582.4M\u003Cbr\u003EKernel Alloc Once 4K 4K\u003Cbr\u003EMALLOC 1.9G 1.8G see MALLOC ZONE table below\u003Cbr\u003EMALLOC (admin) 64K 16K\u003Cbr\u003EMALLOC freed, no zone 7132K 7060K\u003Cbr\u003EMALLOC_LARGE (reserved) 912K 0K reserved VM address space (unallocated)\u003Cbr\u003EMemory Tag 242 12K 12K\u003Cbr\u003EOpenCL 16K 16K\u003Cbr\u003EOpenGL GLSL 128K 76K\u003Cbr\u003ESTACK GUARD 56.1M 0K\u003Cbr\u003EStack 23.3M 576K\u003Cbr\u003EVM_ALLOCATE 763.4M 649.4M\u003Cbr\u003EVM_ALLOCATE (freed) 16K 16K\u003Cbr\u003EVM_ALLOCATE (reserved) 40K 0K reserved VM address space (unallocated)\u003Cbr\u003E__DATA 9120K 6436K\u003Cbr\u003E__GLSLBUILTINS 2588K 708K\u003Cbr\u003E__IMAGE 528K 124K\u003Cbr\u003E__LINKEDIT 48.4M 15.3M\u003Cbr\u003E__OBJC 2488K 2452K\u003Cbr\u003E__TEXT 152.3M 148.2M\u003Cbr\u003E__UNICODE 544K 484K\u003Cbr\u003Emapped file 69.1M 27.0M\u003Cbr\u003Eshared memory 132K 112K\u003Cbr\u003E=========== ======= ========\u003Cbr\u003ETOTAL 3.7G 3.2G\u003Cbr\u003ETOTAL, minus reserved VM space 3.7G 3.2G\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E VIRTUAL RESIDENT ALLOCATION BYTES\u003Cbr\u003EMALLOC ZONE SIZE SIZE COUNT ALLOCATED % FULL\u003Cbr\u003E=========== ======= ========= ========= ========= ======\u003Cbr\u003EGFXMallocZone_0x15e9000 1.1G 1.1G 56719 1.1G 95%\u003Cbr\u003EDefaultMallocZone_0x15cb000 804.3M 724.2M 984987 741.3M 92%\u003Cbr\u003EDispatchContinuations_0x15f8000 8192K 108K 112 7K 0%\u003Cbr\u003ECoreGraphics_0x400a000 152K 144K 660 15K 9%\u003Cbr\u003EQuartzCore_0x182ce00 16K 16K 2 112 0%\u003Cbr\u003E=========== ======= ========= ========= ========= ======\u003Cbr\u003ETOTAL 1.9G 1.8G 1042480 1.8G 93%\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are three kinds of memory regions that kept growing, as I used different parts and moved between VAB and the launchpad:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003E IOKit, which means stuff related to device drivers. This suggests that there could be a problem in some GPU drivers shipped with Yosemite.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E MALLOC, and specifically DefaultMallocZone. The region does not really grow, but it keeps fragmenting due to a large number of small memory allocations.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E VM_ALLOCATE, which I guess is the memory managed directly by Mono without using malloc(). This could be a result of the game caching the assets that are currently in use, but not releasing them when they\u0027re no longer needed.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEdit:\u003C/strong\u003E There is also \u0022GL: Detected 0 MB VRAM\u0022 near the beginning of Player.log, which suggests a Unity/GPU driver issue.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-03-23T15:30:10Z\u0022 title=\u002203/23/2015 03:30  PM\u0022 data-short=\u00229 yr\u0022\u003EMarch 23, 2015\u003C/time\u003E by Jouni\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Yakky","CreatedById":94432,"CreatedDateTime":"2015-03-23T22:49:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sal_vager\u0022 data-cite=\u0022sal_vager\u0022\u003E\u003Cdiv\u003EHi xerogravity \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EIt has been noticed that Macs use a lot of RAM even when idle, so there is not much RAM for KSP, this causes KSP assets to be cached and they may not be retrieved properly.\u003C/p\u003E\u003Cp\u003EAnything you can do to reduce your RAM use may help, such as shutting down unused applications, also please see the stickies and provide your logs.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFWIW I run KSP on a Mac with 32 gigs of physical RAM and still have these problems, so I don\u0027t think the main culprit is a memory paging or swapping issue, although it\u0027s possible that it could compound other problems.\u003C/p\u003E\n"},{"CreatedByName":"Master Tao","CreatedById":110410,"CreatedDateTime":"2015-03-24T00:55:41Z","Content":"\n\u003Cp\u003EThat\u0027s a good start.\u003C/p\u003E\u003Cp\u003EWhat ways did you abuse KSP? It would really help to have a reasonably reliable method of intentionally causing that crash, not just waiting until it does.\u003C/p\u003E\n"},{"CreatedByName":"Jouni","CreatedById":97346,"CreatedDateTime":"2015-03-24T01:51:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Master Tao\u0022 data-cite=\u0022Master Tao\u0022\u003E\u003Cdiv\u003EWhat ways did you abuse KSP? It would really help to have a reasonably reliable method of intentionally causing that crash, not just waiting until it does.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe easiest way is to build a craft with as many different parts as possible, put it on the launchpad, and revert to VAB. After reverting, the game uses more memory in VAB than before. If that doesn\u0027t raise memory usage high enough to cause disco lights or other graphics glitches, repeat the same with parts you haven\u0027t used already.\u003C/p\u003E\u003Cp\u003EReusing the parts you have already used doesn\u0027t seem to affect memory usage that much. I\u0027d guess that either the game caches a second copy of the assets that have been used, or there is a weirder than usual memory management issue. If you\u0027re using stock parts with low graphics settings, you may run out of parts before memory usage grows high enough. In that case, you may try observing different planets at various distances to increase memory usage. It\u0027s helpful to return to VAB afterwards, as the game seems to use more memory in VAB than during flight.\u003C/p\u003E\n"},{"CreatedByName":"Master Tao","CreatedById":110410,"CreatedDateTime":"2015-03-25T01:23:37Z","Content":"\n\u003Cp\u003EThanks!\u003C/p\u003E\u003Cp\u003EI\u0027ll give those approaches a deeper look Soon\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Csup\u003ETM\u003C/sup\u003E\u003C/span\u003E. Any chance you have a craft file that will cause the crash with load-launch-revert?\u003C/p\u003E\n"}]}