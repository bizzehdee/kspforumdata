{"TopicId":214751,"ForumId":119,"TopicTitle":"KSP2 - Bug solutions from a game developer\u0027s view","CreatedByName":"EverydayKerbonaut","CreatedById":226879,"CreatedDateTime":"2023-03-08T20:58:34Z","PageNum":1,"Articles":[{"CreatedByName":"EverydayKerbonaut","CreatedById":226879,"CreatedDateTime":"2023-03-08T20:58:34Z","Content":"\n\u003Cp\u003E\nSo there is bugs, yea we expected some.\u003Cbr\u003E\nbut looking at the most common bugs raises concerns that they need to go \u0022back to formula\u0022\u003Cbr\u003E\nsee what outers think is simply a annoyance bug points to much larger issues. and there are a few \u0022gotcha\u0027s\u0022\u00A0\u003Cbr\u003E\n\u003Cbr\u003E\nFirst off is simply user interface, how key and button input is handled. but also how it is processed.\u003Cbr\u003E\nan example is when writing a ship\u0027s name, M key takes you to a map view.\u003Cbr\u003E\n\u00A0this shows inputs are global instead of mode specific and/or the mode swapping is not handled properly.\u003Cbr\u003E\n\u003Cbr\u003E\nthen there is the lack of response from interface when crafts of extreme loads are being launched, lets say you get time to pass once every 10 seconds, pressing esc you wait up to 10 seconds to see map.\u003Cbr\u003E\nthis is first a ticking issue, shows the menu is not calculated independently and have to wait for the world render cycle to complete before it is acted upon. the menu us a slave function to rendering. this should not be so.\n\u003C/p\u003E\n\u003Cp\u003E\nnext there is time itself.\u003Cbr\u003E\ntime should pass once every second, no lag or load should reduce that.\u003Cbr\u003E\nany function should be a slave of time and use \u0022time passed since last action\u0022 as part of its calculations. instead of relying on each action\u0027s output to calculate the next, formula\u0027s should allow passing of any amount of time and be able to adapt to those.\u003Cbr\u003E\nan example is rotating to a position over time, instead of needing to take action at every passing unit of time, a simple formula can be used to see how far it would be towards its goal giving this amount of time passed.\u003Cbr\u003E\nso if a craft would need 8 seconds to rotate from prograde to retro, and you are on 10x speed, then simply assume that in the passing of 10 seconds it made the rotation and set it as such, and deduct the propellant it would have used for that. simple\u003Cbr\u003E\nthis will fix rotation and acceleration not\u00A0\u00A0functioning over time warp of any kind.\u003Cbr\u003E\n\u003Cbr\u003E\nthen as for physics, this should be simplified where you can pre-calculate it\u003Cbr\u003E\ntake the assembled craft in its current state, then do a linetrace from it from every direction, get the relevant angle of the hit and assign a value to it.\u00A0do an additive overlay for control surfaces and other moving parts.\u003Cbr\u003E\nnow simplify it into center of drag, and center of mass\u003Cbr\u003E\nuse this along with speed to calculate everything else needed, bit you now get to treat it as a single part and not 100\u0027s of parts, and only needs to recalculate if the assembly changes.\u003Cbr\u003E\nyou can further pre-calculate each part and in the final calculation use those as an is visible basis.\u003Cbr\u003E\n\u00A0you\u0027re welcome.\u003Cbr\u003E\n\u003Cbr\u003E\nthe current setup looks to prioritize visual\u003Cbr\u003E\npriority of execution should be:\u003Cbr\u003E\n1 - time\u003Cbr\u003E\n2 - interface input and response\u003Cbr\u003E\n3 - control input and response\u003Cbr\u003E\n4 - vehicle movement\u003Cbr\u003E\n5 - actual rendering, here going LOD or even complete basic Low poly will be acceptable as long as time keeps passing, input responding and actions happening reliably.\u00A0\u003Cbr\u003E\n\u003Cbr\u003E\nnext assembly\u003Cbr\u003E\nagain looks like rendering is prioritized. it looks like everything is as movable and lighting is dynamic, this is wrong and even bad for performance.\u003Cbr\u003E\ntreat every placed object as static, use directional light and pre-bake light as much as possible, then calculate dynamic shadows for the single combined model.\u003Cbr\u003E\nalso \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E should have better uniform lighting with less shadows, it\u0027s a rocket factory after all so can assume its getting at least 4x light from each side and from on top, this makes baking light easier.\u003Cbr\u003E\nas for placement sockets, sure snapping to anything is a function now, but how about if we mid-mouse-button select something to then prioritize snapping to the object that we are focusing our view on?\u003Cbr\u003E\nalso you dont have to make an entire assembly as moveable to attach it, simply rendering a 2d version of it for the current view and using a depth offset, use that as a card for the moveable part, and hide the static once you render the card, then you dont even need movables.\u003Cbr\u003E\nthere is also collision issues with many parts, the simple solution is to do a visual interrace and get tangent at location, use that instead of collision, so a surface mount item will mount to the visual outer surface.\u003Cbr\u003E\n\u003Cbr\u003E\nthese are just a few bug fixes and performance booster i would have looked at.\u003Cbr\u003E\nagain this is speculative and only the opinion of a play test, and I have no actual knowledge of how the code actually functions\n\u003C/p\u003E\n"},{"CreatedByName":"Sea_Kerman","CreatedById":226149,"CreatedDateTime":"2023-03-09T00:48:35Z","Content":"\n\u003Cp\u003E\nSo you\u0027re saying don\u0027t simulate the internal forces of a vehicle? I think yous hould have to design your craft to be structurally sufficient, it\u0027s a big concern in vehicle design, especially the big long interstellar craft built around a central truss.\n\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2023-03-09T03:29:45Z","Content":"\n\u003Cp\u003E\ni can make a case for long patch cycle times. i have a harder time making a case for a weekly patch cycle. id have hoped a quick and dirty initial patch was in the cards, but that was only wishful thinking.\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-03-09T03:34:42Z\u0022 title=\u002203/09/2023 03:34  AM\u0022 data-short=\u00221 yr\u0022\u003EMarch 9, 2023\u003C/time\u003E by Nuke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Profugo Barbatus","CreatedById":220450,"CreatedDateTime":"2023-03-09T03:56:00Z","Content":"\n\u003Cp\u003E\nThis reads like you\u0027ve only ever made static environment, limited interaction games at best, and have no idea what your talking about at worse. What you\u0027ve written reads to me as \u0022Just abstract away every interacting element of the simulation in pursuit of a stable physics delta\u0022 which can be translated for the less development inclined as \u0022Just use the KSP Physics model from 2013 and drop all the new simulation details\u0022. It defeats the purpose of a freeform sandbox\u00A0\u003Cem\u003Esimulation\u003C/em\u003E\u00A0of rocket building and flight. Not to mention half the abstractions via assumption you propose break fundamentally under anything more complex than single resource sink perfect scenario operations. And if it were as simple as \u0022if 15 seconds passed irl and lag means you only finished 8 seconds worth of processing, just simulate the other 7 but faster\u0022 is like telling someone to charge their phone by turning up the brightness - you can\u0027t fix an execution speed problem by enforcing that the execution happen on time without just abandoning a processing cycle halfway through every time it goes under load - which would ensure complete collapse of the physics simulation at that point as you just have to ignore impulses or time travel. Reducing the physics delta is what they already do, and its the only viable option.\n\u003C/p\u003E\n\u003Cp\u003E\nPretty much the only thing I nodded along to with a \u0022Yea\u0022 was the rename/map issue where someone just forgot to set a flag somewhere in their UI toolkit or input mappings.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Fullmetal Analyst","CreatedById":212373,"CreatedDateTime":"2023-03-09T06:02:11Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224255093\u0022 data-ipsquote-contentid=\u0022214751\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221678309114\u0022 data-ipsquote-userid=\u0022226879\u0022 data-ipsquote-username=\u0022EverydayKerbonaut\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, EverydayKerbonaut said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo there is bugs, yea we expected some.\u003Cbr\u003E\nbut looking at the most common bugs raises concerns that they need to go \u0022back to formula\u0022\u003Cbr\u003E\nsee what outers think is simply a annoyance bug points to much larger issues. and there are a few \u0022gotcha\u0027s\u0022\u00A0\u003Cbr\u003E\n\u003Cbr\u003E\nFirst off is simply user interface, how key and button input is handled. but also how it is processed.\u003Cbr\u003E\nan example is when writing a ship\u0027s name, M key takes you to a map view.\u003Cbr\u003E\n\u00A0this shows inputs are global instead of mode specific and/or the mode swapping is not handled properly.\u003Cbr\u003E\n\u003Cbr\u003E\nthen there is the lack of response from interface when crafts of extreme loads are being launched, lets say you get time to pass once every 10 seconds, pressing esc you wait up to 10 seconds to see map.\u003Cbr\u003E\nthis is first a ticking issue, shows the menu is not calculated independently and have to wait for the world render cycle to complete before it is acted upon. the menu us a slave function to rendering. this should not be so.\n\u003C/p\u003E\n\u003Cp\u003E\nnext there is time itself.\u003Cbr\u003E\ntime should pass once every second, no lag or load should reduce that.\u003Cbr\u003E\nany function should be a slave of time and use \u0022time passed since last action\u0022 as part of its calculations. instead of relying on each action\u0027s output to calculate the next, formula\u0027s should allow passing of any amount of time and be able to adapt to those.\u003Cbr\u003E\nan example is rotating to a position over time, instead of needing to take action at every passing unit of time, a simple formula can be used to see how far it would be towards its goal giving this amount of time passed.\u003Cbr\u003E\nso if a craft would need 8 seconds to rotate from prograde to retro, and you are on 10x speed, then simply assume that in the passing of 10 seconds it made the rotation and set it as such, and deduct the propellant it would have used for that. simple\u003Cbr\u003E\nthis will fix rotation and acceleration not\u00A0\u00A0functioning over time warp of any kind.\u003Cbr\u003E\n\u003Cbr\u003E\nthen as for physics, this should be simplified where you can pre-calculate it\u003Cbr\u003E\ntake the assembled craft in its current state, then do a linetrace from it from every direction, get the relevant angle of the hit and assign a value to it.\u00A0do an additive overlay for control surfaces and other moving parts.\u003Cbr\u003E\nnow simplify it into center of drag, and center of mass\u003Cbr\u003E\nuse this along with speed to calculate everything else needed, bit you now get to treat it as a single part and not 100\u0027s of parts, and only needs to recalculate if the assembly changes.\u003Cbr\u003E\nyou can further pre-calculate each part and in the final calculation use those as an is visible basis.\u003Cbr\u003E\n\u00A0you\u0027re welcome.\u003Cbr\u003E\n\u003Cbr\u003E\nthe current setup looks to prioritize visual\u003Cbr\u003E\npriority of execution should be:\u003Cbr\u003E\n1 - time\u003Cbr\u003E\n2 - interface input and response\u003Cbr\u003E\n3 - control input and response\u003Cbr\u003E\n4 - vehicle movement\u003Cbr\u003E\n5 - actual rendering, here going LOD or even complete basic Low poly will be acceptable as long as time keeps passing, input responding and actions happening reliably.\u00A0\u003Cbr\u003E\n\u003Cbr\u003E\nnext assembly\u003Cbr\u003E\nagain looks like rendering is prioritized. it looks like everything is as movable and lighting is dynamic, this is wrong and even bad for performance.\u003Cbr\u003E\ntreat every placed object as static, use directional light and pre-bake light as much as possible, then calculate dynamic shadows for the single combined model.\u003Cbr\u003E\nalso \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E should have better uniform lighting with less shadows, it\u0027s a rocket factory after all so can assume its getting at least 4x light from each side and from on top, this makes baking light easier.\u003Cbr\u003E\nas for placement sockets, sure snapping to anything is a function now, but how about if we mid-mouse-button select something to then prioritize snapping to the object that we are focusing our view on?\u003Cbr\u003E\nalso you dont have to make an entire assembly as moveable to attach it, simply rendering a 2d version of it for the current view and using a depth offset, use that as a card for the moveable part, and hide the static once you render the card, then you dont even need movables.\u003Cbr\u003E\nthere is also collision issues with many parts, the simple solution is to do a visual interrace and get tangent at location, use that instead of collision, so a surface mount item will mount to the visual outer surface.\u003Cbr\u003E\n\u003Cbr\u003E\nthese are just a few bug fixes and performance booster i would have looked at.\u003Cbr\u003E\nagain this is speculative and only the opinion of a play test, and I have no actual knowledge of how the code actually functions\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nbruh they are making this in unity engine\u00A0\u003Cimg alt=\u0022:retrograde:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/retrograde2.png\u0022 title=\u0022:retrograde:\u0022\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"EverydayKerbonaut","CreatedById":226879,"CreatedDateTime":"2023-03-09T13:47:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224255283\u0022 data-ipsquote-contentid=\u0022214751\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221678334160\u0022 data-ipsquote-userid=\u0022220450\u0022 data-ipsquote-username=\u0022Profugo Barbatus\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, Profugo Barbatus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis reads like you\u0027ve only ever made static environment, limited interaction games at best, and have no idea what your talking about at worse. What you\u0027ve written reads to me as \u0022Just abstract away every interacting element of the simulation in pursuit of a stable physics delta\u0022 which can be translated for the less development inclined as \u0022Just use the KSP Physics model from 2013 and drop all the new simulation details\u0022. It defeats the purpose of a freeform sandbox\u00A0\u003Cem\u003Esimulation\u003C/em\u003E\u00A0of rocket building and flight. Not to mention half the abstractions via assumption you propose break fundamentally under anything more complex than single resource sink perfect scenario operations. And if it were as simple as \u0022if 15 seconds passed irl and lag means you only finished 8 seconds worth of processing, just simulate the other 7 but faster\u0022 is like telling someone to charge their phone by turning up the brightness - you can\u0027t fix an execution speed problem by enforcing that the execution happen on time without just abandoning a processing cycle halfway through every time it goes under load - which would ensure complete collapse of the physics simulation at that point as you just have to ignore impulses or time travel. Reducing the physics delta is what they already do, and its the only viable option.\n\u003C/p\u003E\n\u003Cp\u003E\nPretty much the only thing I nodded along to with a \u0022Yea\u0022 was the rename/map issue where someone just forgot to set a flag somewhere in their UI toolkit or input mappings.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nno i think you are missing the point.\u003Cbr\u003E\nthis needs to improve the formula\u0027s used for calculations and have time passed as a factor.\u003Cbr\u003E\nthis needs to be simplified so a ship can be calculated moving at 10x, 50x, or 1000x\u003Cbr\u003E\nyou should not need to watch it do calculations for every frame, since time warp is a thing, and inactive vessels is a thing,\u00A0\u003Cbr\u003E\nthe formula used for time warp simply needs to see if the craft can obtain a stable rotation in the time that passed, or calculate movement change in the time passed and current heading, velocity and all that.\u003Cbr\u003E\n\u003Cbr\u003E\nnow as for physics, it needs to simulate larger chunks of time as a single calculation so if it takes 5 seconds to simulate 1 second worth of action then instead it is smart enough to group every 5 actions into a single simulation and achieve a steady 1 second to simulate 1 second worth of action.\u003Cbr\u003E\nthe physics formula needs to adjust to allow the steady passing of time,\u00A0\u003Cbr\u003E\n\u003Cbr\u003E\nnow if physics formula allows for larger chunks of time to be calculated, then it will also work with warping.\u003Cbr\u003E\none formula that fix lag and allow time to move at the correct speed, and also allow for it to function under time warp as well.\u003Cbr\u003E\n\u003Cbr\u003E\noh and for multiplayer they will need to reduce the amount of info sent over the network and most likely its simply the vessel layout, and initial orbit, then only changes to orbit and configuration\n\u003C/p\u003E\n"},{"CreatedByName":"dvrabel","CreatedById":226165,"CreatedDateTime":"2023-03-09T16:06:08Z","Content":"\n\u003Cp\u003E\nAnalytical solutions for coupled, multi-body systems do not exist, so it is \u003Cem\u003Eimpossible\u003C/em\u003E to \u0022improve the formula\u0027s used for calculations and have time passed as a factor\u0022. Take a look at \u0022double pendulums\u0022 for an illustrative example.\n\u003C/p\u003E\n\u003Cp\u003E\nThe differential equations for such systems need to be solved using numerical methods and thus require small time deltas to get a sufficiently well-behaved approximation of reality.\n\u003C/p\u003E\n"},{"CreatedByName":"Periple","CreatedById":225622,"CreatedDateTime":"2023-03-09T16:26:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224255479\u0022 data-ipsquote-contentid=\u0022214751\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221678369653\u0022 data-ipsquote-userid=\u0022226879\u0022 data-ipsquote-username=\u0022EverydayKerbonaut\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, EverydayKerbonaut said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nnow if physics formula allows for larger chunks of time to be calculated\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBig if \u003Cimg alt=\u0022:joy:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/joy.png\u0022 title=\u0022:joy:\u0022\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"lemon cup","CreatedById":199693,"CreatedDateTime":"2023-03-09T18:57:39Z","Content":"\n\u003Cp\u003E\n\u201Csimply\u201D \u201Conly\u201D \u201Cjust\u201D \u201Cshould work\u201D\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nReduction fallacy\n\u003C/p\u003E\n"}]}