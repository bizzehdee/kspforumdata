{"TopicId":224740,"ForumId":119,"TopicTitle":"Where is Nate?","CreatedByName":"RUD Everyday","CreatedById":228396,"CreatedDateTime":"2024-05-04T20:07:13Z","PageNum":7,"Articles":[{"CreatedByName":"dprostock","CreatedById":195079,"CreatedDateTime":"2024-05-20T17:02:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391444\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716217518\u0022 data-ipsquote-userid=\u0022210112\u0022 data-ipsquote-username=\u0022Scarecrow71\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Scarecrow71 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou know, that\u0027s something I never could figure out as to why that happens.\u00A0 I mean, I get that IRL rockets are rolled slowly from where they are built to the pad, and that in the game they spawn on the pad.\u00A0 I just never understood why the physics would have the rocket start jumping up and down upon being spawned.\u00A0 It\u0027s as if the game spawns the rocket ABOVE the ground, and then it falls (albeit very slightly) to the ground, causing it to bounce around.\n\u003C/p\u003E\n\u003Cp\u003E\nAm I close on that?\u00A0 Or do I need a new set of eyes?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSimply because they\u0027re a bunch of jerks and there\u0027s no one in charge! They apply to the entire calculation of gravity (with parameters that vary according to the celestial object) but did not realize that at the same time it causes displacement of the objects that are resting on the surface of the celestial body. Instead of cancelling it for that case, they want to cancel it with an inordinate increase in the values of the friction algorithm. The result is the same as what we saw in the KSP and they never noticed anything.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTo put it simply, the planet keeps spinning and that\u0027s why it seems that your rocket is moving, what moves is the planet and it doesn\u0027t \u0022drag\u0022 whatever it has resting on its surface.\n\u003C/p\u003E\n\u003Cp\u003E\nA no-brainer for any self-respecting engineer or developer, but hey....\n\u003C/p\u003E\n\u003Cp\u003E\nIt was cooler to spend time for the kerbal to behave like an ape in the little window at the bottom right corner of the screen.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Scarecrow71","CreatedById":210112,"CreatedDateTime":"2024-05-20T18:16:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391483\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716224530\u0022 data-ipsquote-userid=\u0022195079\u0022 data-ipsquote-username=\u0022dprostock\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, dprostock said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSimply because they\u0027re a bunch of jerks and there\u0027s no one in charge! They apply to the entire calculation of gravity (with parameters that vary according to the celestial object) but did not realize that at the same time it causes displacement of the objects that are resting on the surface of the celestial body. Instead of cancelling it for that case, they want to cancel it with an inordinate increase in the values of the friction algorithm. The result is the same as what we saw in the KSP and they never noticed anything.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTo put it simply, the planet keeps spinning and that\u0027s why it seems that your rocket is moving, what moves is the planet and it doesn\u0027t \u0022drag\u0022 whatever it has resting on its surface.\n\u003C/p\u003E\n\u003Cp\u003E\nA no-brainer for any self-respecting engineer or developer, but hey....\n\u003C/p\u003E\n\u003Cp\u003E\nIt was cooler to spend time for the kerbal to behave like an ape in the little window at the bottom right corner of the screen.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI asked a serious question, and I was hoping to get some insight from people here.\u00A0 Instead, I get this.\u00A0 Sigh.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have nothing to add to the conversation, don\u0027t say anything at all.\n\u003C/p\u003E\n"},{"CreatedByName":"RKunze","CreatedById":204847,"CreatedDateTime":"2024-05-20T19:25:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391447\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716217826\u0022 data-ipsquote-userid=\u0022225696\u0022 data-ipsquote-username=\u0022cocoscacao\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, cocoscacao said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI thought it runs on each engine \u0022tick\u0022 and I didn\u0027t know it \u003Cem\u003Eapproximates\u003C/em\u003E. I assume it at least goes through every part on each iteration...?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt does (both run in each engine tick and handle each part on every tick). And though it does approximate (can\u0027t actually do anything else, both because the problem usually does not habe an exact analytical solution and even if there is, floating point math has limited resolution anyway), that is not really the problem.\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem is that the solver \u003Cem\u003Eiterates: \u003C/em\u003EIt starts with something that is (hopefully) already close to a solution and then does a couple of refinement steps until it reaches the solution (actually, an approximation that is close enough to the solution). This works very well if the starting point \u003Cem\u003Ealready is\u003C/em\u003E close to the solution - for example, if the starting point is the solution from the previous engine tick, and the solver just needs to catch up some 100 milliseconds or so.\n\u003C/p\u003E\n\u003Cp\u003E\nBut on a \u0022cold start\u0022 of the solver, the starting point is usually very far from a solution, and the solver needs to run quite a bit longer until it finds a solution (\u0022converges on a solution\u0022 is the technical term you usually read in papers). Or worst case, the solver does not find a solution at all in this situation - that\u0027s called \u0022the solution diverges\u0022 or \u0022does not converge\u0022 in scientific papers, and \u0022Kraken attack\u0022 in KSP.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2024-05-20T19:42:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391482\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716224505\u0022 data-ipsquote-userid=\u002264580\u0022 data-ipsquote-username=\u0022steveman0\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, steveman0 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis doesn\u0027t require it to occur immediately after a scene load, though it often does. I assumed this was due to the lack of sensible dampening forces leading to rounding errors becoming blown out by some singularity. I assumed that this would be something applied outside to overlay the physics model, but it is sounding like there might be more reliance on the canned solution that makes it more opaque in understanding what is at fault.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m curious to get your thoughts on this. Would the solver have something built-in to suppress spurious noise that could lead to this kind of result, or is that something that would be left to the developer to layer over the physics model to address? Anytime I\u0027ve built a model for some project from scratch, I would plan some kind of corrective force to ensure a stable state for predictability. Could some of the problems observed be explainable by the absense of something similar here? This seems necessary to ensure stability even if it might not be 100% accurate to life given the constraints imposed by the boundary conditions.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think there\u0027s more than one thing that\u0027s going on.\n\u003C/p\u003E\n\u003Cp\u003E\nModern approach is to use velocity constraints with Baumgarte stabilization for drifts. Baumgarte does work a bit like a spring coefficient, but the velocity constraint already has damping built in. So with a sensible choice of coefficients, any perturbations should naturally decay, rather than lead to more oscillation for any\u00A0\u003Cem\u003Esingle\u003C/em\u003E\u00A0joint. Unfortunately, systems of joints can still misbehave. The worst case is usually a light object sandwiched between two heavy objects. Unfortunately, I just described every single stage separator and decoupler, which immediately becomes a problem in KSP if you don\u0027t add additional joints to stabilize it (such as multi-joint connectors, autostruts, etc.)\n\u003C/p\u003E\n\u003Cp\u003E\nA very good read on the topic is Erin Catto\u0027s GDC presentation from 2009, \u003Ca href=\u0022https://box2d.org/files/ErinCatto_ModelingAndSolvingConstraints_GDC2009.pdf\u0022 rel=\u0022external nofollow\u0022\u003EModeling and Solving Constraints\u003C/a\u003E. Every modern physics engine I\u0027ve seen goes back to this talk. At a minimum, Havok and Chaos do, as well as Crystal\u0027s and Blizzard\u0027s internal engine implementations because Erin Catto worked there and was instrumental in making sure these engines worked. Now, not every engine uses impulse exchange as their iteration method, but all iterative solvers are going to behave similarly. I think Erin really likes impulse exchange mostly due to its logical simplicity compared to pure linear algebra methods.\n\u003C/p\u003E\n\u003Cp\u003E\nCrucially, the PhysX version that ships with Unity predates the industry\u0027s switch to this as the main method. So their constraints handling might be a little different, and I haven\u0027t looked at the code for that specifically. Though, it might be interesting to try and dig up the source for a relevant PhysX engine and to make sure. In general, even the older physics engines had to solve the same fundamental problem of enforcing constraints. And even if you start with position constraint (rather than velocity constraint) and work your way from there, you are still building a damped harmonic oscillator, but your coefficients might be less \u0022magical\u0022 and require more careful tuning. So we\u0027re still dealing with what\u0027s ultimately a damped harmonic oscillator for each individual joint, but what can still fall into some sort of a bad feedback loop between multiple joints. And we know that mass ratios are a problem for the PhysX joints as well, so whatever the solver is iterating over, it\u0027s not that far different.\n\u003C/p\u003E\n\u003Cp\u003E\nSo that\u0027s one part of it. Even with a good solver, there are bad configurations that you need to learn to avoid, and for something like KSP that means either merging some rigid bodies together (e.g., if you made decoupler and whatever it\u0027s permanently attached to into a single rigid body) or doing what KSP1 does and adding additional joints in a way that avoids the unstable configurations.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe second part is, I think, what muddled the situation for KSP2. And here we\u0027re back to logical connection vs actual joints. I have seen a number of times when a ship spawns in (either at the launch site or from a save) with some parts detached. And it\u0027s one thing to just watch some part of your ship drift away, and another is if it\u0027s some internal part with collisions that ends up doing a ragdoll-spaz inside the ship. I don\u0027t know how many of the KSP2 physics explosions are due to bad joint configurations and how many are due to a part getting loose and spazzing out. I\u0027ve definitely seen both, but I wouldn\u0027t be able to identify each particular case. And I think that might have been why Intercept kept having these issues creep back up, because there are several different bugs they\u0027re trying to fix that can be reported as one bug: rapid disassembly without any obvious cause.\n\u003C/p\u003E\n\u003Cp\u003E\nAll of this is kind of self-inflicted, but I do sympathize. Again, it\u0027s a hard problem, and unless you happened to have worked on these exact problems before, it takes time to catch up on all the terminology and required reading.\n\u003C/p\u003E\n"},{"CreatedByName":"dprostock","CreatedById":195079,"CreatedDateTime":"2024-05-20T20:06:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391499\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716228997\u0022 data-ipsquote-userid=\u0022210112\u0022 data-ipsquote-username=\u0022Scarecrow71\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Scarecrow71 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI asked a serious question, and I was hoping to get some insight from people here.\u00A0 Instead, I get this.\u00A0 Sigh.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have nothing to add to the conversation, don\u0027t say anything at all.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nDoes it bother you really? I am sorry. It\u0027s the technical answer you should have been hoping for.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you don\u0027t want to know the truth, don\u0027t ask.\n\u003C/p\u003E\n\u003Cp\u003E\nNo one realized that the gravitation algorithm that rotates the celestial body affected the objects perched on it, and there you have the problem. Poorly detected in KSP1 and lines of code copied in KSP2.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, everything is sterile. It\u0027s never going to be solved, that\u0027s for sure.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003EThe truth is out there, I\u0027m sorry if they don\u0027t tell you.\u00A0\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"RUD Everyday","CreatedById":228396,"CreatedDateTime":"2024-05-20T20:36:35Z","Content":"\n\u003Cp\u003E\nRemember the question, where is Nate and why isnt he anywhere to be found?\n\u003C/p\u003E\n"},{"CreatedByName":"Bej Kerman","CreatedById":182413,"CreatedDateTime":"2024-05-20T20:42:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391525\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716237395\u0022 data-ipsquote-userid=\u0022228396\u0022 data-ipsquote-username=\u0022gfdgfherytrey\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, gfdgfherytrey said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nRemember the question, where is Nate and why isnt he anywhere to be found?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNDAs, next question \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Tony Tony Chopper","CreatedById":229524,"CreatedDateTime":"2024-05-20T21:02:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391526\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716237754\u0022 data-ipsquote-userid=\u0022182413\u0022 data-ipsquote-username=\u0022Bej Kerman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 minutes ago, Bej Kerman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNDAs, next question \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI admire this simplicity, but such a chatty species can\u0027t be satisfied with mere answers I\u0027m afraid.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2024-05-20T21:03:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391526\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716237754\u0022 data-ipsquote-userid=\u0022182413\u0022 data-ipsquote-username=\u0022Bej Kerman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 minutes ago, Bej Kerman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNDAs, next question \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTo be fair (and pedantic, and as a joke, and just so that we still have a topic,) this doesn\u0027t answer the question of\u00A0\u003Cem\u003Ewhere\u003C/em\u003E\u00A0is Nate.\n\u003C/p\u003E\n\u003Cp\u003E\nPersonally, I\u0027d go on a vacation. Layoffs suck. If you can afford to take a break after one, you should.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I know a lot of the former Intercept employees had to start applying for other jobs right away, but I hope they\u0027ll at least have some time between the interviews to decompress a bit. It\u0027s most definitely not the shiny part of the game dev career, but being able to use the quiet times between interviews to relax, despite knowing a limited runway on funds before you need to have a job or face serious problems, is kind of a skill we end up having to acquire. So if you\u0027re wondering, why nobody\u0027s talking, yeah, NDAs, but also, they were just laid off. Last thing they want to think about is KSP2 or Intercept.\n\u003C/p\u003E\n"},{"CreatedByName":"Skorj","CreatedById":201273,"CreatedDateTime":"2024-05-21T00:00:24Z","Content":"\n\u003Cp\u003E\nIf you\u0027ve ever noticed the \u0022ease in physics\u0022 setting in KSP1, this is why it\u0027s needed.\u00A0 It\u0027s not just on load, I think, but any time you switch to a new craft, it risks kraken attack due to only partial state being cached.\u00A0 Squad solved this rather elegantly IMO by simply ignoring some physics effects until the physics model has time to settle down.\u00A0 Now that I understand K^2\u0027s explanation, I have to admire this approach.\n\u003C/p\u003E\n"},{"CreatedByName":"GigFiz","CreatedById":205457,"CreatedDateTime":"2024-05-22T21:33:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224391512\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716234156\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/20/2024 at 12:42 PM, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nEvery modern physics engine I\u0027ve seen\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOut of curiosity, especially since you clearly have, likely, the most (and most relevant) experience in game physics programming out of everyone who frequents this forum: if this were your project and you were in the position were you got to make the decisions, what game/physics engine would you use (for sake of relevance, say, both if it was started now and for if it was started in the 2017-2020 range, like ksp2 was)? Since all we can really do now is talk about what ifs, and I (and others, I think) always value your insight, it would be quite interesting/educational to read.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, If you want to go into what your overall approach would be if you were engineering and/or game lead, too, please be my guest (it would be quite interesting, I imagine). I know, though, that you\u0027ve given aspects of that already (though putting it all together would still be of value), and it would easily be mass wall of text that you may or may not feel like like writing, so do what you feel like. (for a given value of force). But, if you genuinely WANT to, please do.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2024-05-23T07:21:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392060\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716413586\u0022 data-ipsquote-userid=\u0022205457\u0022 data-ipsquote-username=\u0022GigFiz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, GigFiz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOut of curiosity, especially since you clearly have, likely, the most (and most relevant) experience in game physics programming out of everyone who frequents this forum: if this were your project and you were in the position were you got to make the decisions, what game/physics engine would you use (for sake of relevance, say, both if it was started now and for if it was started in the 2017-2020 range, like ksp2 was)? Since all we can really do now is talk about what ifs, and I (and others, I think) always value your insight, it would be quite interesting/educational to read.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, If you want to go into what your overall approach would be if you were engineering and/or game lead, too, please be my guest (it would be quite interesting, I imagine). I know, though, that you\u0027ve given aspects of that already (though putting it all together would still be of value), and it would easily be mass wall of text that you may or may not feel like like writing, so do what you feel like. (for a given value of force). But, if you genuinely WANT to, please do.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s a little bit hard to be certain in retrospective. I said a few things about that already, but some\u00A0expectations we\u0027ve all had about where the engines are going in 2020 have came to be, and others not so much. The landscape change quite a bit, and it\u0027s hard to now talk about it without the benefit if hindsight.\n\u003C/p\u003E\n\u003Cp\u003E\nIn a similar vein, what we know about the project has changed. Even just talking about what is believed to be the scope of the KSP2 plan in 2017, 2020, and 2023 are likely to have been quite different. So there are quite a few blanks to fill in with any number of plausible options.\n\u003C/p\u003E\n\u003Cp\u003E\nLets start with a slightly different hypothetical, one that\u0027s almost plausible, albeit very unlikely given the ownership chains and realities of the game market. Say the game goes on ice. About a year from now, my boss tells me, \u0022Hey, Kat, \u0026lt;our company\u0026gt; is in talks with T2 to rebuild KSP2 under license. Want to take this one?\u0022 In this hypothetical I have a pretty good picture of what sort of resources and budgets we\u0027d be operating with, as well as have specific people in mind for some of the work. And unless I have to be very scrappy with this, like I get only a skeleton team and just need to make the best of it, I would scrap the code and rebuild everything in Unreal. This is despite the fact that I have access to some amazing Unity engineers in our organization. The mid-2024 reality of Unity vs Unreal is that this is a better route. In part, I\u0027m taking into the account the disaster areas of the KSP2 and that a lot of the code would have to be scrapped anyways, but it\u0027s a little bit bigger than that. The advantages of Unreal for KSP2 are quite enormous.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m not usually this generous towards Epic Games, but they have made several bets and investments in tech that have payed out. Crucially to KSP2, the three areas that are important are the physics engine, procedural placement, and large worlds. Chaos physics is good right now. It is better than Havok and quite a bit easier to use in your flows in Unreal than importing Havok as a middleware. That last part\u0027s just the advantage of it being already integrated, of course, and not a dig at Havok. Going with Chaos in 5.4 would eliminate a lot (not all!) of the problems with simulation stability\u00A0\u003Cem\u003Eand\u003C/em\u003E\u00A0networking. If you were to start building KSP2 code base from scratch today in 5.4, there is zero reason not to have multiplayer enabled from the go and do all of your testing in server-client configuration. In a similar vein, basically all of the work that Intercept did for planet tiles, painted procedural biomes, and origin relocation for interstellar scaling comes out of the box with Unreal 5.4. We are talking probably the past four years of Intercept\u0027s work, about half of their team, possibly more, were building stuff that just comes packaged with 5.4. And it\u0027s\u00A0\u003Cem\u003Ebetter\u003C/em\u003E. The performance is better, the stability is better, there are more features and options...\n\u003C/p\u003E\n\u003Cp\u003E\nNote that this all hinges on some assumptions I\u0027m making about the content, and that we\u0027d be able to port over the art and tech art work that was done on planets and rocket parts over. I\u0027m prepared to scrap the code, because in about a year of development we can be fully caught up, and have almost all of the problems fixed \u0022for free\u0022 because they are already fixed in the engine. But I\u0027m not prepared to scrap the art in general, and there\u0027s a lot of fiddly planet-building work that\u0027s gone in, much of which we haven\u0027t even seen yet, and throwing that away is a much more expensive proposition. So if we were just starting KSP2 clean today, no contest - Unreal, if we\u0027re trying to salvage parts of KSP2 (which is more realistic) I still want to say Unreal, but I\u0027m making some assumptions which might change under closer examination of what\u0027s there in the dev folders.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAlright, sorry about the long preamble, but that is to set up the question of what would be the correct choice for Intercept in 2020. With hindsight in mind, still Unreal - no competition. Without, there\u0027s a lot we didn\u0027t know back then. Unreal 4 was well established, and we have seen a lot of 5.0 previews to know what Epic is promising us, but there were a lot of undelivered promises in 4, so grain of salt. I started evaluating Chaos in late 2020, and it was raw then. I think in early 2020 when KSP2 dev work started, my realistic options would have been Havok or Havok. I\u00A0\u003Cem\u003Esort\u003C/em\u003E\u003Cem\u003E\u00A0of\u003C/em\u003E\u00A0understand why \u0022Lets use Havok in Unity,\u0022 wasn\u0027t the go-to for Intercept, but I think I would have been prepared to take the risk on ECS and DOTS even if decision was made to go with Unity. PhysX just comes with way too much baggage, and Intercept has rather predictably struggled with it. The only choice besides Havok was building custom, and as fun as that would be, I don\u0027t think I\u0027d get a sign-off on the extra budget. So Havok it would be. Now the actual choice of Unreal vs Unity would have been a little tougher back then. The team had experience with Unity and the advantages of taking parts of KSP1 that do work fine or work well enough as temps to bootstrap some parts of development are pretty clear. So it looked like a decent enough choice on the surface\u00A0\u003Cem\u003Ebut\u003C/em\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nThe big tipping point is what we didn\u0027t know about the scope of KSP2, but that was clearly in Nate\u0027s mind back then. I\u0027m pretty sure that one meeting with Nate about the art/design direction of the game would have made it clear that scalable, procedural environments for the planets with modern visuals was a big part of the 2020 pitch. And with that in mind I would have pivoted hard towards Unreal. The reason is that the proc gen stuff was already in 4. In a somewhat early form, but we\u0027ve seen it in shipped games by that point. Unreal 4 also supports tiling and virtual texturing out of the box, which I know are major boons to large world development. One thing I absolutely had in my bag in February 2020 is a year of working on building these features for an in-house engine and I would feel like shaking anyone who says, \u0022We\u0027re going to build all of that in Unity.\u0022 To Intercept\u0027s credit, and part of why I\u0027m probably less critical of them than most people here, they made that part work, and it\u0027s a monumental amount of effort. Just that alone would have probably freed up2-3 engineers and a tech artist to work on\u00A0\u003Cem\u003Eother things\u003C/em\u003E\u00A0in KSP2 for 3 years until EA release. And even Unreal 4\u0027s implementation of these things is a bit better peformance-wise. So you\u0027d have better framerate, Havok out of the box, and all the things that would get fixed/built with the extra technical people freed up from that work. That would already put KSP2 in a much better place, and this is just from things that would have been known to me in 2020.\n\u003C/p\u003E\n\u003Cp\u003E\nLooking back, it\u0027s clear that going with Unreal 4 in 2020 would have led to a switch to Unreal 5 in late \u002721, early \u002722 and make things even better. There are still a lot of things that needed to be done differently in KSP2 in terms of architecture to make it stable and performant as a game overall, but the engine choice would have been a leg up. If you look at the speculation we\u0027ve had around early 2020, you might even find some posts from me unsure on whether Unity or Unreal is a better option, but a lot of it was coming from our best guesses on the art/design directions back then, and a lot of that came from by-then outdated articles and previews.\n\u003C/p\u003E\n\u003Cp\u003E\ntl;dr, a well informed and competent TD in 2020 should have chosen to go with Unreal. Going with Unity was a big mistake, and likely caused by the narrow experience of the technical leadership at the time, who knew Unity almost exclusively. Do keep in mind that I am saying that with the advantage of hindsight, as much as I try to compensate for it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nRolling back to 2017, we\u0027re in a completely different world. Not only is the tech different, with a lot of the features that would make Unreal a clear winner still very early in development or even entirely as unannounced plans on the roadmap, but also the scope of the game was different, as far as we know. I\u0027m not going to spend too much time going over this. Assuming that I understand correctly that the pitch for KSP2 was, \u0022Take KSP1, make it look shinier, add a star system, and do some cool colony-building gameplay,\u0022 Unity was the right call. You\u0027d be able to reuse much of the work that KSP1 team did, both under HarvesteR and later with new tech team at Squad. And while at the time it would have meant steaking with PhysX, we\u0027re also talking about a smaller game where a lot of KSP1 patches on top of that would have been adequate. Especially if multiplayer wasn\u0027t planned at the time. So I think Star Theory\u0027s plan for KSP2 was fine and probably would have panned out if the scope didn\u0027t expand so much. We\u0027d probably get KSP2 in 2020, and it\u0027d probably look like KSP1 with some visual and interstellar mods and colony gameplay. Hopefully, with some loading issues addressed, since ST would need to improve on them for interstellar. It\u0027d be fine, and most KSP1 players would probably jump over to it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIn terms of general changes I would make compared to how KSP2 seems to have been developed across both iterations, I\u0027m just going to run through bullet points.\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nIntroduce compound rigid bodies. It\u0027d be exposed to Chaos/Havok/PhysX as a single rigid body, but we\u0027d be able to compute the stress on implied joints between the actual component parts of it. So if any limits are exceeded, it can still break, and if it crashes into the terrain, parts of it could be destroyed rather than all of it at once. I\u0027ve mentioned advantage for colonies, but you can also use it for physics LoDs and crucially for things like a tank with a decoupler or docking port on it. The latter parts are very light compared to the tank, making the joints flimsy. Turning this into a single rigid body would make all the joints so much more stable even if we\u0027re talking about KSP2 2017 and we\u0027re doing this in PhysX. So many physics problems would just not.\n\u003C/li\u003E\n\u003Cli\u003E\nDon\u0027t rely on game physics for any part of orbital motion simulation. The \u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E of every ship should be on its orbital element rails, with any external forces (sum total of all engines or a binary planet situation) added together and applied to the ships in this bespoke simulation. So even if you\u0027re focused on a ship, yeah, it should be simulated for any rotation, part flexing, joint stress, etc. But the net force applied to it should go to the external, bespoke orbital mechanics sim that just moves the ship\u0027s \u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E. And in your local view, the ship\u0027s \u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E should be reset to that position on every frame to nulify drift from any Kraken forces. Energy and momentum should be conserved, full stop.\n\u003C/li\u003E\n\u003Cli\u003E\nBuild the data representation incrementally, testing along the way. Playtesting, QA testing, and unit tests everywhere. The KSP2 data mess looks like the team that worked on saved games, editor, and actual simulation never talked to each other. I don\u0027t know how that happened, I wasn\u0027t there, but I\u0027d like to think I can avoid that kind of a disaster. It\u0027s just bad.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nThere are also performance considerations that are graphics related. I\u0027m not a graphics engineer, though. And I don\u0027t know how much of what we\u0027ve seen in KSP2 is really a tech problem, and how much is just tech art not having had an optimization pass. It\u0027s very easy to make a quick and dirty shader that does the job but is awful on rendering performance, and you see a lot of that in early alphas. Given that EA is pre-alpha, I\u0027m not sure how harsh I should even be on this. But the bottom line is if there were tech issues, I don\u0027t know if I\u0027d know how to fix them. But I also don\u0027t really need to. The most important bit is knowing how to find people who can do these tasks. I think a lot of bad calls in that regard were budget restrictions, but it also seems like tech leadership at Intercept hasn\u0027t done an ideal job of it. So that\u0027s sort of the final part of it.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd as a final note, a lot of what I wrote here is criticism, but I know where some rakes are hidden, and I don\u0027t know how many rakes Intercept avoided that they knew about that I don\u0027t. I think I could have made a much better KSP2 from the purely technical perspective whether I was given the TD on it in 2017 or 2020. Would KSP2 be a better game overall? I don\u0027t know. It\u0027d be less broken, but would less broken KSP2 that looks like garbage and has almost unusable UI and editor be better? (Not saying as a necessary cost, but purely as a hypothetical, knowing that these are areas where my own expertise wouldn\u0027t be enough.) I don\u0027t know. So don\u0027t levy all of that against ST or Intercept. This is purely a list of ways that would have been available to make things better if somebody with the right talents was on the team, but everything\u0027s an opportunity cost.\n\u003C/p\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2024-05-23T09:20:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392138\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716448868\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u0026lt;snip a lot of very informative and thoughtful commentary\u0026gt;\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI couldn\u0027t give this post 10 likes so I went back and gave a like to the last 10 posts of yours that I hadn\u0027t already given a like to \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392138\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716448868\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDon\u0027t rely on game physics for any part of orbital motion simulation.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat this isn\u0027t already a thing blows my mind. I understand why it wasn\u0027t that way in KSP1 because by the time it was obvious it was needed it would have probably taken a whole game rewrite... but the whole point of KSP2 was a whole game rewrite!\n\u003C/p\u003E\n"},{"CreatedByName":"Stevie_D","CreatedById":103007,"CreatedDateTime":"2024-05-23T10:06:50Z","Content":"\n\u003Cp\u003E\nWhenever I see the title of this thread, my mind goes back to The Dark Knight and, instead of Harvey Dent, the cop saying : \u0022If Nate\u0027s got any sense, he\u0027s halfway to Mexico by now.\u0022\u00A0\u003Cimg alt=\u0022:lol:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_laugh.png\u0022 title=\u0022:lol:\u0022\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2024-05-23T10:33:53Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392148\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716456049\u0022 data-ipsquote-userid=\u002273725\u0022 data-ipsquote-username=\u0022Superfluous J\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n49 minutes ago, Superfluous J said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat this isn\u0027t already a thing blows my mind. I understand why it wasn\u0027t that way in KSP1 because by the time it was obvious it was needed it would have probably taken a whole game rewrite... but the whole point of KSP2 was a whole game rewrite!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s really easy to fall into the hole of, \u0022Orbits will be fine, so long as the integrator is good,\u0022 because gravity just doesn\u0027t like that happening. If you are coming into it from perspective of a game developer, velocity Verlet solves basically all your problems, and RK4 is there for the few cases it doesn\u0027t. Gravity is a rare exception to that. Likewise, if you\u0027re coming in from physics, the understanding of the physics can actually be a little disarming. All of the actual physics that\u0027s relevant to a game like KSP I have learned in undergraduate courses, mostly in Classical Mechanics. I\u0027ve picked up more context, some methods, and just experience using this in the later years studying physics, but if anything, it made me feel like gravity is a simple problem compared to other things I knew. And that can do more harm than good when you start trying to solve a practical problem.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only reason I really know better is because I have tried to write simulations, realized I\u0027m crap at it, and started looking at other ways to do this. And I\u0027ve done so incrementally over the years, often prompted by something that came up in KSP or on this forum. This is an atypical experience for any given team you\u0027ll put together to make a game.\n\u003C/p\u003E\n\u003Cp\u003E\nI can only guess at the logic that went into the KSP2 sim, but the requirement to warp under thrust was probably what kicked off the chain of bad decisions there. KSP1 didn\u0027t need to do simulation. The moment you go into warp, simulation\u0027s frozen and everything\u0027s on rail. The only part of it that\u0027s sim-like is \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESoI\u003C/abbr\u003E boundary crossings, and as far as I can tell, it would just check if you are in a different \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESoI\u003C/abbr\u003E after doing a time step. So there was some randomness based on where the true \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESoI\u003C/abbr\u003E crossing is compared to the step size, but it\u0027s nothing that\u0027s going to impact the gameplay. I\u0027m sure that even with the on-rails update there were places where drifts could occur, but it\u0027s nothing like KSP2\u0027s.\n\u003C/p\u003E\n\u003Cp\u003E\nIn KSP2, you had to be able to leave the engine running and go to max warp, because you\u0027re not crossing an interstellar void otherwise. So you have to simulate physics somehow. And it turns out, applying a simulated force to an object in orbit is actually really, really hard. We\u0027re talking old books, from the pre-computer era hard, because while there are numerical methods for dealing with this, they\u0027re absurdly expensive computationally. If you want a good simulation that gives you stable orbits, is fast to compute, and can work across time warp ranges, you have to work with orbital elements, and not simply use them as a convenient geometrical representation, but understanding how they arise from the constants of motion, understand Hamilton-Jacobi equations, have a strong sense for a classical perturbation theory... This used to be fairly common part of physics curriculum in, like, 70s and 80s, back when things like orbit precession had to be computed by hand, but basically as soon as that was replaced by computers, it started becoming a lost art. And it\u0027s not that it\u0027s so hard to learn for anyone who has been doing other areas of physics. It\u0027s just knowing that you need to learn it so that you can do the numerical simulation that KSP2 requires is a very non-trivial bit of domain knowledge.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd yeah, it\u0027s not like it hasn\u0027t come up before. There have been numerous discussions on physics under warp and n-body gravity on this very Forum, plus a number of members of KSP1 modding community have become acutely aware of the problem trying to implement these features as mods. So it\u0027s not like KSP2 team wasn\u0027t able to discover both the problem and some potential paths of solving it in advance. But they evidently didn\u0027t, so that was another rake in the tall grass.\n\u003C/p\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2024-05-23T16:57:20Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392158\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716460433\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0And it turns out, applying a simulated force to an object in orbit is actually really, really hard.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t recall it beeing that nessisary computional hard, basicly what you need to do is adjust the orbit every time Delta\u00A0 with generated engine Force. As long as your positional orbit isn\u0027t too curved, or crossing \u003Cabbr title=\u0022Sphere of Influence\u0022\u003E\u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E\u003C/abbr\u003E it seems to work fine when you prevent the edge cases.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-05-23T17:36:11Z\u0022 title=\u002205/23/2024 05:36  PM\u0022 data-short=\u0022May 23\u0022\u003EMay 23\u003C/time\u003E by FreeThinker\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DA299","CreatedById":200518,"CreatedDateTime":"2024-05-23T17:18:30Z","Content":"\n\u003Cp\u003E\nI bet the Principia devs could have helped out KSP2 devs when it comes to orbital simulations. Their handling of orbital mechanics is far better than stock KSP1, with the exception of thrust under warp. but like K^2 says, that\u0027s a very hard problem, likely even harder in true n-body simulations.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2024-05-23T20:30:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392224\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716483440\u0022 data-ipsquote-userid=\u0022117389\u0022 data-ipsquote-username=\u0022FreeThinker\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, FreeThinker said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t recall it beeing that nessisary computional hard, basicly what you need to do is adjust the orbit every time Delta\u00A0 with generated engine Force.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe question comes down to how you update the orbit. KSP1 ran this for ships under player control in Cartesian coordinates. Fast and dirty, and also results in an absurd amount of error. It looks like KSP2 team was doing something very similar. And in Cartesian, just integrating the main body\u0027s gravity goes awful immediately.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you are integrating forces in orbital elements coordinates, you\u0027re back to doing very heavy math for changes in argument of periapsis and anomaly at epoch.\n\u003C/p\u003E\n\u003Cp\u003E\nFortunately, KSP simulation doesn\u0027t need to be predicting with high degree of accuracy if a given real world asteroid is a danger to Earth 30 years from now. So a mixed coordinate system can be used as I\u0027ve mentioned earlier in the thread. So long as you integrate energy and angular momentum change directly, your orbital shape will be correct, and then you can use the Cartesian update to figure out periapsis precession and the true anomaly update. And if these latter two end up a little off, nobody playing the game will notice.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392224\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716483440\u0022 data-ipsquote-userid=\u0022117389\u0022 data-ipsquote-username=\u0022FreeThinker\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, FreeThinker said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs long as your positional orbit isn\u0027t too curved\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat part there are at least standard methods for. You basically have to run a variable time step, with different step sizes for every craft, depending on their local gravity strength and the engine thrust. In most of these cases, the craft is either engines-off and on rails, or it won\u0027t be in high curvature area for long, so it\u0027s ok to spend more computation there. At worst, you\u0027ll have very occasional slowdowns in your simulation.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only special case is low orbit, low thrust. Here you\u0027ll have to pull out some formulae from dusty books on satellites orbiting the Earth to see some approximate analytical solutions which will let you apply coarser steps to such craft.\n\u003C/p\u003E\n"},{"CreatedByName":"GigFiz","CreatedById":205457,"CreatedDateTime":"2024-05-23T20:57:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392138\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716448868\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nLets start with a slightly different hypothetical\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat one really falls in with the things I was wondering, so that was great. And thank you very much for the detailed answer!\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve seen so much talk about how Unity was the wrong choice, that it makes you wonder why they used it in the first place, but the change in scope after starting in a place where it had advantages, does make sense, and seems like it certainly led to problems when they ended up at place where they were making something with an engine that no longer made sense for the project, but were likely in too deep, and probably couldn\u0027t get the time/budget/manpower approval for an engine change, even if that was on their minds as something they wished they could do.\n\u003C/p\u003E\n\u003Cp\u003E\nBy the by, what do you think of their solution for precision at the scales of distance being dealt with? There was a dev diary about the problems with necessary floating point precision being impossible at the distance scales being dealt with, without resorting to methods that increase computation cost impossibly high, so essentially they had a little bubble of higher precision simulation around the craft being controlled, in order to get the precision necessary for things like docking. Judging from the explanation, and the overall logic of the problem, it seems like this would be necessary, and your answers would lead me to think you would go in a similar direction, but curious about if you think that\u0027s one they got right, or if there was a better alternative.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-05-23T22:56:40Z\u0022 title=\u002205/23/2024 10:56  PM\u0022 data-short=\u0022May 23\u0022\u003EMay 23\u003C/time\u003E by GigFiz\u003C/strong\u003E\n\u003Cbr\u003Espelling\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2024-05-23T22:57:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392287\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716497872\u0022 data-ipsquote-userid=\u0022205457\u0022 data-ipsquote-username=\u0022GigFiz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, GigFiz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBy the by, what do you think of their solution for precision at the scales of distance being dealt with? There was a dev diary about the problems with necessary floating point precision being impossible at the distance scales being dealt with, without resorting to methods that increase computation cost impossibly high, so essentially they had a little bubble of higher precision simulation around the craft being controlled, in order to get the precision necessary for things like docking. Judging from the explanation, and the overall logic of the problem, it seems like this would be necessary, and your answers would lead me to think you would go in a similar direction, but curious about if you think that\u0027s one they got right, or if there was a better alternative.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s a standard solution. When you\u0027re doing floating point math, your sensible options are single precision (32 bit) or double precision (64 bit). And while most modern CPUs do basic operations with double precision floats at an ok speed, a lot of the vector operations aren\u0027t built for it, and consumer GPUs are absolutely horrible with it. Your realistic performance penalty from going from 32 bit to 64 bit floats could easily be in 5x-10x range. As a consequence, none of the tools are even built for it as an option, so you\u0027d be stuck with dirty workarounds to have an awful performance in the end anyways.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd 32 bit floats are precise to roughly one part in 10 million relative to their magnitude. So if you\u0027re dealing in distances of a few km, your precision is sub-mm, and that\u0027s fine. Once your distance scale is more like an astronomic unit, the smallest increment you can do in your position is in tens of km, so all your craft parts and geometry are at the same exact coordinate to that floating point precision. Realistically, though, your ship will get krakened to bits long before you make it that far.\n\u003C/p\u003E\n\u003Cp\u003E\nSo instead, you do all your physics and rendering in some sort of a local coordinate system, relative to an origin that you relocate as needed. There is a little bit of a leeway in how you store that origin\u0027s position, and I haven\u0027t looked at how KSP2 handled it. A lot of open world games that start running up against this simply store origin as a float as well, and eat the complexities of dealing with the fact that the location isn\u0027t perfectly fixed, but even that starts getting wonky at interstellar distances. Using a double precision float is a lot more viable for the origin position, since you don\u0027t use it in simulation - it\u0027s just an offset. So that\u0027s pretty common. I would make a case for using a 64 bit integer, though. You could then place an origin anywhere within 1km of where you want to do the simulation, which is close enough, and that\u0027d still let you place objects nearly a million real world light years away from Kerbin without loss of precision.\n\u003C/p\u003E\n\u003Cp\u003E\nThe way Intercept talked about it makes it sound like they were having more trouble with it than I\u0027d expect, which might be just the devs never having to have had to deal with this before, but otherwise the approach is fine. It does look like they had some bugs in the relocation code, and I don\u0027t know if they were all fixed, but that in itself isn\u0027t really uncommon either. This is just part of a development experience for a game where distances are that huge.\n\u003C/p\u003E\n"},{"CreatedByName":"PDCWolf","CreatedById":58026,"CreatedDateTime":"2024-05-23T23:03:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392148\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716456049\u0022 data-ipsquote-userid=\u002273725\u0022 data-ipsquote-username=\u0022Superfluous J\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, Superfluous J said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0but the whole point of KSP2 was a whole game rewrite!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFrom our position. For IG/PD/T2 it was, I\u0027m pretty sure they thought, a golden egg goose with a very quick turn around and minimum budget for the numbers T2 oversees.\n\u003C/p\u003E\n"},{"CreatedByName":"R-T-B","CreatedById":200868,"CreatedDateTime":"2024-05-23T23:55:58Z","Content":"\n\u003Cp\u003E\nI\u0027m just going to drop this here:\n\u003C/p\u003E\n\u003Cp\u003E\nWith Kopernicus\u0027s distant collider fix (it disables colliders too far out to be relevant in gameplay, or in our case, past stock eeloo distance), you can actually move pretty reliably between systems literal lightyears away.\u00A0 Actually, the only real bugs with moving to systems that far out appeared in 1.8\u002B... \u00A0 This is all In KSP1.\u00A0 So they certainly had some knowledge of floating origin working, it just needed some tuning.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-05-23T23:56:41Z\u0022 title=\u002205/23/2024 11:56  PM\u0022 data-short=\u0022May 23\u0022\u003EMay 23\u003C/time\u003E by R-T-B\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AVaughan","CreatedById":152784,"CreatedDateTime":"2024-05-24T01:17:28Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392158\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716460433\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIn KSP2, you had to be able to leave the engine running and go to max warp, because you\u0027re not crossing an interstellar void otherwise.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI actually think they made a mistake in going for interstellar travel that way.\u00A0 Even their new manoeuvre node editor seems to only generate burns in a constant cartesian co-ordinate frame.\u00A0 Whereas if you really want to do long durations burns efficiently, (eg ion engines) you want to be able to do burns that are always parallel to your prograde vector, so I\u0027m not sure their new manoeuvre node code would result in efficient multi-year burns for an interstellar voyage.\u00A0 (It would probably generate a burn that would work, but with significate penalties for much of the burn not being prograde, when compared to a more optimised burn).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m only part way through the exploration mode campaign, but given the way that sems to be focused on monuments presumably left behind by some predecessors, they might have been better off with the Kerbals finding some sort of a gateway on a planetoid in an asteroid field at one of Jool\u0027s Lagrange points.\u00A0 Land on a surface portal there, then trigger a transfer to another system.\u00A0 Still wants ships with high \u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E\u003C/abbr\u003E, to rendezvous with a planetoid at Jool\u0027s lagrange points, then need more \u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E\u003C/abbr\u003E to get anywhere from another Lagrange point, and more \u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E\u003C/abbr\u003E, if you want to return science/samples/Kerbals.\u00A0 So still want more advanced engines than KSP 1.\u00A0 Whilst it isn\u0027t hard physics, what we would have got from generations ships would have probably skipped much of the hard physics/engineering problems of interstellar ships.\u00A0 (eg Life support over generations, shielding against debris when traveling at significant fractions of light speed).\n\u003C/p\u003E\n\u003Cp\u003E\nThat sort of approach wouldn\u0027t have needed much beyond what KSP 1 could do as far as orbital mechanics (mainly the need to simulate multiple solar systems, rather than just one), and wouldn\u0027t have required players to warp through tens/hundreds or even thousand of years of interstellar travel.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-05-24T01:18:20Z\u0022 title=\u002205/24/2024 01:18  AM\u0022 data-short=\u0022May 24\u0022\u003EMay 24\u003C/time\u003E by AVaughan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2024-05-24T02:48:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392343\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716513448\u0022 data-ipsquote-userid=\u0022152784\u0022 data-ipsquote-username=\u0022AVaughan\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, AVaughan said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nit isn\u0027t hard physics\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWherein the problem lies. They wanted to keep KSP \u0022realistic-ish\u0022 in that way.\n\u003C/p\u003E\n\u003Cp\u003E\nAs a simulator, I agree that realism is important. As a game, I would much prefer to be able to just \u0022jump\u0022 to other systems using some interesting but totally unrealistic method, like your Joolian Trojan (Troojan?) asteroid idea. Or just make it so you have to reach a specific point in the system and then initiate the \u0022Jump,\u0022 or even better have to build an interplanetary station (Hello!? Colony!) that served as a huge jumpgate or something.\n\u003C/p\u003E\n\u003Cp\u003E\nYes 90% of the forum would lose their... uh anyway they\u0027d freak out but 90% of the forum is freaking out at any given time so whatever.\n\u003C/p\u003E\n"},{"CreatedByName":"LameLefty","CreatedById":57336,"CreatedDateTime":"2024-05-24T15:05:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224392343\u0022 data-ipsquote-contentid=\u0022224740\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221716513448\u0022 data-ipsquote-userid=\u0022152784\u0022 data-ipsquote-username=\u0022AVaughan\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, AVaughan said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m only part way through the exploration mode campaign, but given the way that sems to be focused on monuments presumably left behind by some predecessors, they might have been better off with the Kerbals finding some sort of a gateway\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot gonna lie, when I discovered the fancy Mun Arch with the glowy bits, and the monuments on Minmus and Duna, I was sure that\u0027s what they were going for.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut even setting the whole mess of math involved with integrating interstellar burns and the resultant trajectory over the scale of lightyears, the fumbling of basic part physics (exhaustively detailed in this thread and others) is just mind-boggling. I still have a save from my first landing at the Duna monument that just falls apart on scene loading, even with the patches.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-05-24T15:05:30Z\u0022 title=\u002205/24/2024 03:05  PM\u0022 data-short=\u0022May 24\u0022\u003EMay 24\u003C/time\u003E by LameLefty\u003C/strong\u003E\n\u003C/span\u003E\n"}]}