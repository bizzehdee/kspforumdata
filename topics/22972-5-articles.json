{"TopicId":22972,"ForumId":34,"TopicTitle":"[0.90] ProgCom - CPU Emulator V0.11.1","CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-04-19T22:57:47Z","PageNum":5,"Articles":[{"CreatedByName":"Cilph","CreatedById":21477,"CreatedDateTime":"2013-07-01T03:10:39Z","Content":"\n\u003Cp\u003ECurrently trying to integrate Progcom into RemoteTech 2, which means the following:\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Moving the GUI stuff over to the RemoteTech Flight Computer;\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Signal delay on loading scripts and on any external input;\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Antenna configuration and network status via the memory map/bus.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EUnfortunately the majority of the stuff in Progcom is marked internal, so I can\u0027t even wrap the cpu \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E. I can play around with InternalsVisibleToAttribute locally, but it\u0027s still annoying.\u003C/p\u003E\u003Cp\u003EThat aside, the current implementation for attaching to a serial bus relies on the existence of the ProgCom part. Meaning if I replace the ProgCom part others won\u0027t be able to find a serial bus to attach to.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-01T03:37:39Z\u0022 title=\u002207/01/2013 03:37  AM\u0022 data-short=\u002211 yr\u0022\u003EJuly 1, 2013\u003C/time\u003E by Cilph\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kellpossible","CreatedById":62739,"CreatedDateTime":"2013-07-01T07:38:02Z","Content":"\n\u003Cp\u003EHey SimplySimon, I see you added my radial part, I hope it suits ok. I\u0027m on holidays now so I\u0027ll have to finish the texture off for that I guess!\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-07-05T23:58:13Z","Content":"\n\u003Cp\u003ESorry for the late replies, I have been somewhat busy.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022xorg\u0022 data-cite=\u0022xorg\u0022\u003E\u003Cdiv\u003EBest mod ever!\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/XEWfaCJHxqw?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m glad you like it! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rainerd66\u0022 data-cite=\u0022rainerd66\u0022\u003E\u003Cdiv\u003EWhat a great idea!\u003Cp\u003EAny chance it could be combined with Damned Robotics?\u003C/p\u003E\u003Cp\u003EMaybe some sensors would be great, too!\u003C/p\u003E\u003Cp\u003EWhat do you think?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would be interesting, but I have other things to do before I implement sensors.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HoneyFox\u0022 data-cite=\u0022HoneyFox\u0022\u003E\u003Cdiv\u003EHmm... I\u0027ve written another simple script interpreter several weeks ago...\u003Cp\u003EAnd i wonder if i should show it here so that you can consider use something from it.\u003C/p\u003E\u003Cp\u003EAnyway i post the url here... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/HoneyFox/AsmInterpreter/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/HoneyFox/AsmInterpreter/\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI looked through it. It is interesting, but it seems to be constructed in such a way that it is quite incompatible. Thank you for the offer though! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022khyperia\u0022 data-cite=\u0022khyperia\u0022\u003E\u003Cdiv\u003EYou know what would be really great... is if ProgCom was no longer interpreted, but rather compiled in-memory.\u003Cp\u003EIt\u0027s really simple to do. Only problem is compatibility, but hey, most people have x86 nowadays, so say \u0022screw you\u0022 to all the other people \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EBasically, \u003Ca href=\u0022http://stackoverflow.com/a/959144/901037\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://stackoverflow.com/a/959144/901037\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ll put into English words what that code is doing.\u003C/p\u003E\u003Cp\u003EYou take a byte[] array, standard C#, normal stuff. You fill it with binary machine code opcodes doing literally whatever you want it to do. You copy it over to a section of memory with the executable bit set. You convert it to a delegate. \u003Cem\u003EYou call it.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EEssentially, executing \u003Cem\u003Eraw machine code\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EAlso, that is \u003Cem\u003Ereally terrifying\u003C/em\u003E that it is \u003Cem\u003Eso simple and easy\u003C/em\u003E to do something like that. Like, \u003Cstrong\u003Eseriously\u003C/strong\u003E terrifying.\u003C/p\u003E\u003Cp\u003EEdit: You can also use Reflection.Emit, but that\u0027s boring \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh, wow! That does seem like a security hazard. I would like to do that, but I\u0027m not quite sure how I\u0027d pull it off, or if it would even be possible. The function needs to return after a while and if you accidentally make an infinite loop your game would freeze, I think. I could spawn a thread for it, but I think squad has disabled all the thread stuff. Also, I don\u0027t know if Squads policy allows mods that turn KSP into a potential tool for taking over your pc \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cilph\u0022 data-cite=\u0022Cilph\u0022\u003E\u003Cdiv\u003ECurrently trying to integrate Progcom into RemoteTech 2, which means the following:\u003Cul\u003E\u003Cli\u003E Moving the GUI stuff over to the RemoteTech Flight Computer;\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Signal delay on loading scripts and on any external input;\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Antenna configuration and network status via the memory map/bus.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EUnfortunately the majority of the stuff in Progcom is marked internal, so I can\u0027t even wrap the cpu \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E. I can play around with InternalsVisibleToAttribute locally, but it\u0027s still annoying.\u003C/p\u003E\u003Cp\u003EThat aside, the current implementation for attaching to a serial bus relies on the existence of the ProgCom part. Meaning if I replace the ProgCom part others won\u0027t be able to find a serial bus to attach to.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI could make the cpu, keyboard and monitor public as well as add a public iSerialConnector interface to connect to instead of progcom, would that solve the problem?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kellpossible\u0022 data-cite=\u0022kellpossible\u0022\u003E\u003Cdiv\u003EHey SimplySimon, I see you added my radial part, I hope it suits ok. I\u0027m on holidays now so I\u0027ll have to finish the texture off for that I guess!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt suits ok. I would have given you some more time to finish it before I uploaded it, but someone requested a radial part on the irc.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-06T00:01:29Z\u0022 title=\u002207/06/2013 12:01  AM\u0022 data-short=\u002211 yr\u0022\u003EJuly 6, 2013\u003C/time\u003E by SimplySimon\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MaHuJa","CreatedById":58370,"CreatedDateTime":"2013-07-07T03:59:20Z","Content":"\n\u003Cp\u003EThere\u0027s a conflict between the Extraplanetary Launchpads build window and the progcom window. On a ship that has both, it will offer to \u0022close\u0022 the build menu if the computer window is open. On opening it, it\u0027ll be the progcom window but stretched.\u003C/p\u003E\u003Cp\u003EI\u0027ve edited my savefile to remove the progcom component, and it worked again.\u003C/p\u003E\n"},{"CreatedByName":"Cilph","CreatedById":21477,"CreatedDateTime":"2013-07-07T13:52:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003EI could make the cpu, keyboard and monitor public as well as add a public iSerialConnector interface to connect to instead of progcom, would that solve the problem?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve forked it on Github and will send a pull request when I get around to finishing integration. Although currently the only things I\u0027ve changed is making the cpu, assembler, keyboard, monitor public. Having a SerialConnector interface will take care of the second problem. Feel free to do any of the above without me sending a pull request though.\u003C/p\u003E\u003Cp\u003EEDIT: Just thought of this. Might it not be a good idea to add a second CPU based on the DCPU-16 that Notch\u0027s new game uses? It has a lot of tools available.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-08T16:36:03Z\u0022 title=\u002207/08/2013 04:36  PM\u0022 data-short=\u002211 yr\u0022\u003EJuly 8, 2013\u003C/time\u003E by Cilph\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-07-10T00:23:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cilph\u0022 data-cite=\u0022Cilph\u0022\u003E\u003Cdiv\u003EEDIT: Just thought of this. Might it not be a good idea to add a second CPU based on the DCPU-16 that Notch\u0027s new game uses? It has a lot of tools available.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve been thinking bout it. It does have a large ammount of tools available, but it would require a fairly significant rewrite. The \u0022progcom\u0022 class could be mostly the same I think, the cpu emulator would need substantial modifications and the rest of the code would probably either have to be scrapped or completely rewritten. If I had the time I would probably do it, but since I don\u0027t currently have the time for two projects I\u0027ll focus on this one. That said, if anyone else is up to implementing DCPU in KSP, feel free to use anything you want from ProgCom\u0027s code.\u003C/p\u003E\n"},{"CreatedByName":"khyperia","CreatedById":25539,"CreatedDateTime":"2013-07-10T21:17:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003EI\u0027ve been thinking bout it. It does have a large ammount of tools available, but it would require a fairly significant rewrite. The \u0022progcom\u0022 class could be mostly the same I think, the cpu emulator would need substantial modifications and the rest of the code would probably either have to be scrapped or completely rewritten. If I had the time I would probably do it, but since I don\u0027t currently have the time for two projects I\u0027ll focus on this one. That said, if anyone else is up to implementing DCPU in KSP, feel free to use anything you want from ProgCom\u0027s code.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E*squinty eyes* Considering doing that.\u003C/p\u003E\u003Cp\u003EPossibly. Maybe. I dunno.\u003C/p\u003E\u003Cp\u003EDepends on a bunch of stuff.\u003C/p\u003E\n"},{"CreatedByName":"Cepheus","CreatedById":10683,"CreatedDateTime":"2013-07-15T02:22:43Z","Content":"\n\u003Cp\u003EAny news on this? I\u0027ve got something I want to use it on, but I need to know how much support it\u0027ll have in the later versions of KSP. (especially concerning clock speed, and the rest)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-15T16:28:51Z\u0022 title=\u002207/15/2013 04:28  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 15, 2013\u003C/time\u003E by Cepheus\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2013-07-15T16:24:40Z","Content":"\n\u003Cp\u003EWhat kind of news are you looking for? Looking at this thread its easy to tell ProgCom is being actively developed and discussed.\u003C/p\u003E\n"},{"CreatedByName":"betaking","CreatedById":58281,"CreatedDateTime":"2013-07-18T12:21:33Z","Content":"\n\u003Cp\u003EI like this plugin, I like the idea, it could be better, a great deal better.\u003C/p\u003E\u003Cp\u003EThe problem is the implimentation of the idea. A better interface would probably look like something that would be a cross between Python\u0027s IDLE, and possibly a language derrived from C or Java, probably java, as it would need to have objects.\u003C/p\u003E\n"},{"CreatedByName":"Cepheus","CreatedById":10683,"CreatedDateTime":"2013-07-18T13:57:31Z","Content":"\n\u003Cp\u003EAgreed. If the language was one derived from C, it would make this a lot more user friendly, I think.\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2013-07-18T14:00:53Z","Content":"\n\u003Cp\u003EI would like to have the ability to have my choice of low level (asm type), mid (C type) and high level (Ida) type choices. for very specific tasks, it would be very rewarding to write the module from scratch in asm. However for fully automated probe missions, you would need to have the ability to use a more object like lang.\u003C/p\u003E\u003Cp\u003Ejust my thoughts.\u003C/p\u003E\u003Cp\u003EDrTedAstro.\u003C/p\u003E\n"},{"CreatedByName":"khyperia","CreatedById":25539,"CreatedDateTime":"2013-07-18T21:47:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cepheus\u0022 data-cite=\u0022Cepheus\u0022\u003E\u003Cdiv\u003EAgreed. If the language was one derived from C, it would make this a lot more user friendly, I think.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022drtedastro\u0022 data-cite=\u0022drtedastro\u0022\u003E\u003Cdiv\u003EI would like to have the ability to have my choice of low level (asm type), mid (C type) and high level (Ida) type choices. for very specific tasks, it would be very rewarding to write the module from scratch in asm. However for fully automated probe missions, you would need to have the ability to use a more object like lang.\u003Cp\u003Ejust my thoughts.\u003C/p\u003E\u003Cp\u003EDrTedAstro.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETwo notes: One, I hacked up a very terrible C compiler for ProgCom, I don\u0027t think it really works all too good, but it\u0027s definitely a proof-of-concept (linked somewhere at the beginning of this thread). I tried going for a full rewrite of a compiler, which might not be the best idea for full-use things (although it certainly was fun for me!) If someone writes a GCC machine description or LLVM backend, it would open up a whole world of programming languages (most in the \u0022mid\u0022 or C range, but there\u0027s a couple high-level languages, e.g. Rust, that use llvm as a backend)\u003C/p\u003E\u003Cp\u003EMy second note: I\u0027m taking up an idea, I\u0027m making a DCPU emulator for KSP. The DCPU already has a bunch of tools for it (it\u0027s originally from one of notch\u0027s games, and that guy has a massive following of programming minions), including llvm backends, C compilers, and a whole swath of custom language compilers. That might also interest you, I dunno.\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2013-07-18T22:00:06Z","Content":"\n\u003Cp\u003Einteresting.\u003C/p\u003E\n"},{"CreatedByName":"Cilph","CreatedById":21477,"CreatedDateTime":"2013-07-18T22:45:37Z","Content":"\n\u003Cp\u003EHave begun work on some hardware documentation for khyperia\u0027s DCPU project. Looking forward to its completion~\u003C/p\u003E\n"},{"CreatedByName":"zengei","CreatedById":75233,"CreatedDateTime":"2013-07-21T15:59:29Z","Content":"\n\u003Cp\u003EI\u0027ve actually independently created a DCPU-16 plugin, \u003Ca href=\u0022https://github.com/dbent/Ketchup\u0022 rel=\u0022external nofollow\u0022\u003EKetchup\u003C/a\u003E, derived the \u003Ca href=\u0022https://github.com/SirCmpwn/Tomato\u0022 rel=\u0022external nofollow\u0022\u003ETomato\u003C/a\u003E C# emulator. My implementation currently has no devices which allow control of the vessel, I was hoping to get some collaborators and interested players to reach a consensus on interfaces and specifications.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-21T16:44:07Z\u0022 title=\u002207/21/2013 04:44  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 21, 2013\u003C/time\u003E by zengei\u003C/strong\u003E\n\u003Cbr\u003EFix url\n\u003C/span\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-07-26T21:45:39Z","Content":"\n\u003Cp\u003EI thought I\u0027d give a status update \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI have implemented the non-volatile memory I have talked about, which is a tape drive. I have also done some minor changes and bugfixes to the interrupts which I hope will make them more usable, as well as some other minor changes and bugfixes elsewhere.\u003C/p\u003E\u003Cp\u003ECurrently I am redoing program loading to actually have the emulator load programs from a \u0022tape\u0022, instead of magically inserting the program into memory like it does now. When that is done I plan to do an overhaul for the cache memory, since it doesn\u0027t behave quite realistically at the moment. That should be all for this update, so hopefully I\u0027ll get everything done relatively fast.\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2013-08-07T22:38:40Z","Content":"\n\u003Cp\u003EHello, \u003C/p\u003E\u003Cp\u003Ejust wanted to see if there was any new News??????\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-08-08T03:19:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003EI thought I\u0027d give a status update \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EI have implemented the non-volatile memory I have talked about, which is a tape drive. I have also done some minor changes and bugfixes to the interrupts which I hope will make them more usable, as well as some other minor changes and bugfixes elsewhere.\u003C/p\u003E\u003Cp\u003ECurrently I am redoing program loading to actually have the emulator load programs from a \u0022tape\u0022, instead of magically inserting the program into memory like it does now. When that is done I plan to do an overhaul for the cache memory, since it doesn\u0027t behave quite realistically at the moment. That should be all for this update, so hopefully I\u0027ll get everything done relatively fast.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat? No braided memory? How dare you sir! I am thinking we don\u0027t need so much non-volatile memory as a tape drive. Lets just say that the programs and global values are hand woven by juvenile kerbals in vast factories called \u0022Fun Zones\u0022 that most certainly don\u0027t resemble anything like a sweatshop. You can have a peg board looking thing. The old tape drive is played out and not as cool as woven memory.\u003C/p\u003E\u003Cp\u003EBEHOLD!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/P12r8DKHsak?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-08-09T01:07:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022drtedastro\u0022 data-cite=\u0022drtedastro\u0022\u003E\u003Cdiv\u003EHello, \u003Cp\u003Ejust wanted to see if there was any new News??????\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot really, I\u0027m still trying to get the program to load from a tape. I think I\u0027m making progress though. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003EWhat? No braided memory? How dare you sir! I am thinking we don\u0027t need so much non-volatile memory as a tape drive. Lets just say that the programs and global values are hand woven by juvenile kerbals in vast factories called \u0022Fun Zones\u0022 that most certainly don\u0027t resemble anything like a sweatshop. You can have a peg board looking thing. The old tape drive is played out and not as cool as woven memory.\u003Cp\u003EBEHOLD!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/P12r8DKHsak?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile rope memory certainly is interesting it is, if I remember correctly, limited to ROM only. Since what I want to do is have some way of saving data from the emulator to somewhere it won\u0027t be deleted every time it is reset rope memory would not work for this purpose.\u003C/p\u003E\n"},{"CreatedByName":"Scrumilation","CreatedById":77419,"CreatedDateTime":"2013-08-09T01:22:36Z","Content":"\n\u003Cp\u003EI could mess around with it... if i knew anything about powerpc assembly.\u003C/p\u003E\u003Cp\u003EBut i\u0027ll try to get some auto yaw and pitch correction with the poc c compiller.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-08-13T08:21:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003ENot really, I\u0027m still trying to get the program to load from a tape. I think I\u0027m making progress though. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EWhile rope memory certainly is interesting it is, if I remember correctly, limited to ROM only. Since what I want to do is have some way of saving data from the emulator to somewhere it won\u0027t be deleted every time it is reset rope memory would not work for this purpose.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENope there are two kinds of rope memory. ROM and RAM. What you see the ladies making in this film is non-volatile. The volatile types used a few more wires to control the magnetic field. That requires electricity to store memory.\u003C/p\u003E\u003Cp\u003EBTW, ROM is non-volatile storage. RAM is volatile.\u003C/p\u003E\u003Cp\u003EThe programs and mathematical constants were hand woven into this storage medium. Temporary info was stored in rope RAM and most notably, actual notebooks to be re-entered in-case of a main computer power down. That only happened one time to Apollo 13. There is no need for any real writable storage on a guidance computer. It\u0027s nice but most certainly not required. In many cases it wouldn\u0027t even be desirable. A tape, as it were, would serve no purpose besides adding weight. In space, the magnetic region on the tape would be corrupted in short order.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-13T08:25:54Z\u0022 title=\u002208/13/2013 08:25  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 13, 2013\u003C/time\u003E by Payload\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2013-08-13T08:33:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003ENope there are two kinds of rope memory. ROM and RAM. What you see the ladies making in this film is non-volatile. The volatile types used a few more wires to control the magnetic field. That requires electricity to store memory.\u003Cp\u003EBTW, ROM is non-volatile storage. RAM is volatile.\u003C/p\u003E\u003Cp\u003EThe programs and mathematical constants were hand woven into this storage medium. Temporary info was stored in rope RAM and most notably, actual notebooks to be re-entered in-case of a main computer power down. That only happened one time to Apollo 13. There is no need for any real writable storage on a guidance computer. It\u0027s nice but most certainly not required. In many cases it wouldn\u0027t even be desirable. A tape, as it were, would serve no purpose besides adding weight. In space, the magnetic region on the tape would be corrupted in short order.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EH\u0027mm, if the mag tape would be \u0027corrupted in short order\u0027, why did the cassette player work on Apollo 13? little itsy bitsy mag tape?\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-08-13T10:54:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022drtedastro\u0022 data-cite=\u0022drtedastro\u0022\u003E\u003Cdiv\u003EH\u0027mm, if the mag tape would be \u0027corrupted in short order\u0027, why did the cassette player work on Apollo 13? little itsy bitsy mag tape?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBecause it was analog. You might get a pop or a hiss but you won\u0027t lose everything. With computer data you really can\u0027t lose anything. The longer that tape is in space, the worse the data rot will get. I\u0027m not really sure what relevance the size of tape makes in this comparison. Tape media is a poor choice for space travel. Reprogramming your flight computer in space is also a terrible idea for numerous reasons. I wouldn\u0027t like to die a quick but violent death because Bob went mucking about with the landing routine and left out a zero somewhere.\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2013-08-13T17:32:03Z","Content":"\n\u003Cp\u003EPaper tape would be interesting for bootstrapping.... I can just see Jeb with a paper punch \u0027fixing\u0027 something for Bill to try.....\u003C/p\u003E\n"}]}