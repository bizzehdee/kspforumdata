{"TopicId":6663,"ForumId":25,"TopicTitle":"Mini-challenge: max altitude with this supplied spacecraft","CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-14T18:26:41Z","PageNum":3,"Articles":[{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-02-17T01:22:03Z","Content":"\n\u003Cp\u003EOk, now for explaining how the throttle is adjusted:\u003C/p\u003E\u003Cp\u003EI have one column that calculates the velocity needed for drag to equal weight. A second column calculates the acceleration needed to get to that speed within the next time interval (it also adds on acceleration due to the change in needed velocity from the previous time interval). The third column calculates the thrust required to achieve the needed acceleration. Finally, the last column sets the rocket\\\u0027s thrust (within bounds of max thrust and zero thrust).\u003C/p\u003E\u003Cp\u003EFormulas:\u003C/p\u003E\u003Cp\u003EV\u003Csub\u003Eneeded\u003C/sub\u003E = SQRT(2*F\u003Csub\u003Eg\u003C/sub\u003E/(?*m*C\u003Csub\u003ED\u003C/sub\u003E))\u003C/p\u003E\u003Cp\u003Ea\u003Csub\u003Eneeded\u003C/sub\u003E = ((V\u003Csub\u003Eneeded\u003C/sub\u003E - V) \u002B (V\u003Csub\u003Eneeded\u003C/sub\u003E - V\u003Csub\u003Eneeded,previous\u003C/sub\u003E))/?t\u003C/p\u003E\u003Cp\u003Ethrust\u003Csub\u003Eneeded\u003C/sub\u003E = W \u002B F\u003Csub\u003ED\u003C/sub\u003E \u002B a\u003Csub\u003Eneeded\u003C/sub\u003E*?t\u003C/p\u003E\u003Cp\u003ETo further improve this, a predictor equation for the change in needed velocity will have to be employed.\u003C/p\u003E\u003Cp\u003E@ PakledHostage\u003C/p\u003E\u003Cp\u003ECan you provide some data to prove that C\u003Csub\u003Ed\u003C/sub\u003E is not used?\u003C/p\u003E\u003Cp\u003ETo support that it is used, I\\\u0027ll refer you to my drop test with parachute deployed.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=5623.msg92588#msg92588\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/forum/index.php?topic=5623.msg92588#msg92588\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-17T02:54:29Z","Content":"\n\u003Cp\u003ESeconded - the \u003Cem\u003Emaximum_drag\u003C/em\u003E factors (let\\\u0027s not call them c\u003Csub\u003ED\u003C/sub\u003E\\\u0027s, which are unitless) are definitely used. You can edit the values in the .cfg file for, say, a command pod, and then launch and drop it from a large height. If you make the \u003Cem\u003Emaximum_drag\u003C/em\u003E factor over 100, you won\\\u0027t need a parachute for it!\u003C/p\u003E\u003Cp\u003EAgain, in KSP, the drag force on any given part F\u003Csub\u003ED\u003C/sub\u003E = 1/2 x \u003Cem\u003Emaximum_drag \u003C/em\u003Ex mass x density x \u003Cem\u003Ev\u003C/em\u003E\u003Csup\u003E2\u003C/sup\u003E. Add up the force on separate parts (no matter how they are arranged) to get the total drag force.\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-17T03:09:48Z","Content":"\n\u003Cp\u003E@Kosmo-not,\u003C/p\u003E\u003Cp\u003EThat\\\u0027s a very successful \u0027shooting\u0027 method you are employing, and your first solution is pretty close to optimal. I bet that if you iterated for one more pass, using (TWR)best = 2 \u002B2a/g, you\\\u0027d get even closer.\u003C/p\u003E\u003Cp\u003EFor the \u0027target\u0027 velocity if you stick with TWR=2 on your first pass, as you did, that is already a known function of height (see my PDF above) since it is the same as the local terminal velocity. You could try a first pass with target velocity =v\u003Csub\u003ET\u003C/sub\u003E=97.8 m/s exp(\u002Bheight/9891m). (*)\u003C/p\u003E\u003Cp\u003EOne clever part of your scheme is that it can switch from full throttle at launch to the correct amount once the best speed has been achieved. I was thinking about using piecewise functions to do that but your method is much more flexible.\u003C/p\u003E\u003Cp\u003E(*) The sea-level terminal speed is 97.8 m/s is for an object with mass-averaged \u003Cem\u003Emaximum_drag\u003C/em\u003E =0.2. It is probably a bit less for the ship in this challenge, but only depends on the square root of \u003Cem\u003Emaximum_drag\u003C/em\u003E so will be close. \u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-02-17T04:05:37Z","Content":"\n\u003Cp\u003EOk, I made the change as you suggested. It increases the maximum altitude by a small amount. I\\\u0027ll also have to make some changes because the drag coefficient for the rocket varies with time, thanks to that tri-coupler.\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-17T05:44:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThe drag coefficient for the rocket varies with time, thanks to that tri-coupler.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOK you\\\u0027re teasing me, please explain! The multiplier of (density x v\u003Csup\u003E2\u003C/sup\u003E) should be constant for that part, right?\u003C/p\u003E\u003Cp\u003EI am pleased that my suggested changes made a small difference in the positive direction.\u003C/p\u003E\u003Cp\u003EWe really need someone who can do optimal control theory to find the theoretical max. height for this craft. Quite a few people here (and whom I know) tell me it\\\u0027s a straightforward problem, but no-one has come out and just solved it!\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-02-17T05:48:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kosmo-not\u0022 data-cite=\u0022Kosmo-not\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ECan you provide some data to prove that C\u003Csub\u003Ed\u003C/sub\u003E is not used?\u003C/p\u003E\u003Cp\u003ETo support that it is used, I\\\u0027ll refer you to my drop test with parachute deployed.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=5623.msg92588#msg92588\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/forum/index.php?topic=5623.msg92588#msg92588\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOK. You got me there! I admit I didn\\\u0027t think of that obvious example... I only noticed Closette\\\u0027s description of how to calculate C\u003Csub\u003Ed\u003C/sub\u003E for an assembly: \u003C/p\u003E\u003Cp\u003E\u0027For an assembled spacecraft replace the maximum_drag with a mass-weighted average of all the parts\\\u0027 maximum_drag factors, which usually results in a value of 0.2-0.3.\u0027\u003C/p\u003E\u003Cp\u003Eafter I made my last post, but I don\\\u0027t know how that method was arrived at. Maybe one of you two can fill the rest of us in? \u003C/p\u003E\u003Cp\u003EMy (apperantly flawed) idea that C\u003Csub\u003Ed\u003C/sub\u003E is not used in the game is based on my own numerical integration of the two \u0027drop tests\u0027 that I described earlier in this thread. As I mentioned above, my model (using the two equations that I posted above, and which are the same equations that you describe) allowed me to make very accurate predictions of the two flight trajectories that I tested.\u003C/p\u003E\u003Cp\u003EAs unlikely as it would have to be, it may be that the \u0027mass-weighted average\u0027 maximum_drag factor for the two (very different) stacks that I tested was 0.2027. This would have made it appear that the C\u003Csub\u003Ed\u003C/sub\u003E term was not used because C\u003Csub\u003Ed\u003C/sub\u003E would have been the same for both my tests as it was for your test.\u003C/p\u003E\u003Cp\u003EClosette\\\u0027s post above claims that the \u0027mass-weighted average\u0027 maximum_drag factor typically ranges between 0.2 and 0.3, so this is a possible explanation. \u003C/p\u003E\u003Cp\u003EI\\\u0027ll trust that that is the case. But please, for the rest of our benefit, can you please explain where using the \u0027mass-weighted average of all the parts\\\u0027 maximum_drag factors\u0027 comes from?\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003Cp\u003EPH.\u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-02-17T05:50:52Z","Content":"\n\u003Cp\u003E@ closette\u003C/p\u003E\u003Cp\u003Edrag coefficient at launch: (12.8*0.2 \u002B 0.8*0.3)/13.6 = 0.20588\u003C/p\u003E\u003Cp\u003Edrag coefficient at 0 fuel: ((12.8-4.4)*0.2 \u002B 0.8*0.3)/(13.6 - 4.4) = 0.20870\u003C/p\u003E\u003Cp\u003EIt\\\u0027s not much of a difference, though.\u003C/p\u003E\u003Cp\u003E@ PakledHostage\u003C/p\u003E\u003Cp\u003EIt comes from summing the drag forces. It\\\u0027s easier to work with an equivalent drag coefficient for the mass of the entire rocket.\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-02-17T05:57:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PakledHostage\u0022 data-cite=\u0022PakledHostage\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EBut please, for the rest of our benefit, can you please explain where using the \u0027mass-weighted average of all the parts\\\u0027 maximum_drag factors\u0027 comes from?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENever mind. I just figured it out... I\\\u0027ll post the explanation if anyone wants it, but I don\\\u0027t have time to make an image of the equation right now.\u003C/p\u003E\u003Cp\u003EPH.\u003C/p\u003E\u003Cp\u003EEdit: I\\\u0027m adding the aerodynamic drag and density equations discussed in this thread to this post for the benefit of future readers who, like me, require things to be a bit more obvious:\u003C/p\u003E\u003Cp\u003EIn-game aerodynamic drag equation:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/zIuDg.jpg\u0022 alt=\u0022zIuDg.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003Ewhere:\u003C/p\u003E\u003Cp\u003Em is the instantaneous total spacecraft mass\u003C/p\u003E\u003Cp\u003EC\u003Csub\u003Ed\u003C/sub\u003E is the \u0027mass-weighted average of all the parts\\\u0027 maximum_drag factors\u0027\u003C/p\u003E\u003Cp\u003EThe \u0027mass-weighted average of all the parts\\\u0027 maximum_drag factors\u0027 is defined as:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/4xklX.jpg\u0022 alt=\u00224xklX.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003Ewhere:\u003C/p\u003E\u003Cp\u003En is the number of individual components in the stack\u003C/p\u003E\u003Cp\u003Em\u003Csub\u003Ej\u003C/sub\u003E are the individual masses of each of the spacecraft components (from the VAB)\u003C/p\u003E\u003Cp\u003ECd\u003Csub\u003Ej\u003C/sub\u003E are the individual drag coefficients of the spacecraft components (from the VAB)\u003C/p\u003E\u003Cp\u003EKerbin\\\u0027s atmospheric density (rho in the drag equation above) can be approximated as:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/RPgG6.jpg\u0022 alt=\u0022RPgG6.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003Ewhere:\u003C/p\u003E\u003Cp\u003EAltitude is in metres.\u003C/p\u003E\u003Cp\u003EAnd while solving the Goddard problem is \u003Cstrong\u003EFAR\u003C/strong\u003E beyond my own mathematical abilities, I have benefited from Kosmo-not, Closette, et al\\\u0027s efforts in this and related threads. I hope to use these equations to more accurately predict my re-entry trajectories and for planning more precise aerobraking manoeuvres. \u003C/p\u003E\u003Cp\u003EThank you all for your excellent work!\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-17T06:01:23Z","Content":"\n\u003Cp\u003EOK I just figured it out as you were replying - the tricoupler is the only part in there with \u003Cem\u003Emaximum_drag\u003C/em\u003E not equal to 0.2. Sorry to take up your time.\u003C/p\u003E\u003Cp\u003E(As a favor please don\\\u0027t call \u003Cem\u003Emaximum_drag\u003C/em\u003E a \u0027drag coefficient\u0027 as this will confuse other readers who will try to apply the terrestrial, real-world drag equation and we\\\u0027ll have to \\\u0027splain it all over again! No need to reply). \u003Cspan style=\u0022text-decoration:underline;\u0022\u003EI\u003C/span\u003E know what you mean though!\u003C/p\u003E\u003Cp\u003EIf you can tell the difference between mass-averaged \u003Cem\u003Emaximum_drag\u003C/em\u003E of 0.20588 and 0.20870 you must be very, very close to optimum!\u003C/p\u003E\u003Cp\u003EThe mass-weighted average maximum_drag for an assembly of parts 1, 2, ... \u003C/p\u003E\u003Cp\u003E= (maximum_drag\u003Csub\u003E1\u003C/sub\u003E x m\u003Csub\u003E1\u003C/sub\u003E \u002B maximum_drag\u003Csub\u003E2\u003C/sub\u003E x m\u003Csub\u003E2\u003C/sub\u003E \u002B ...) / (m\u003Csub\u003E1\u003C/sub\u003E \u002B m\u003Csub\u003E2\u003C/sub\u003E \u002B ...)\u003C/p\u003E\u003Cp\u003EThe numerator x density x v\u003Csup\u003E2\u003C/sup\u003E gives the total drag force. The denominator is just the total mass of the craft.\u003C/p\u003E\u003Cp\u003EThat way the total drag force on the craft can be written as:\u003C/p\u003E\u003Cp\u003E F\u003Csub\u003ED\u003C/sub\u003E =mass-weighted average maximum_drag x total mass x density x v\u003Csup\u003E2\u003C/sup\u003E\u003Csup\u003E.\u003C/sup\u003E\u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-02-17T07:08:53Z","Content":"\n\u003Cp\u003EI fixed an error in my spreadsheet. Now it\\\u0027s reporting a maximum altitude of about 33,500. Tomorrow, I\\\u0027ll add in a column for a changing maximum_drag and an accurate fuel cutoff. I don\\\u0027t think it will be possible for anyone to get to 35,000.\u003C/p\u003E\n"},{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-02-17T13:06:45Z","Content":"\n\u003Cp\u003EAbout the theoretical solution: I don\\\u0027t think it\\\u0027s as simple as it seems to be. While it is fairly obvious that there is a solution, to actually obtain it one has to solve an inverse problem. However, since the problem is non-linear and since we have some mathematically strange constraints (mainly from burnout: there\\\u0027s a minimum mass, and the end time isn\\\u0027t fixed), this is not straight forward. There\\\u0027s a lot of theory about that stuff, in this case one would probably go with an adjoint method, but I don\\\u0027t know enough about them to do it for this problem. For problems with a small parameter space one can usually use Monte Carlo (try a lot of random thrust profiles) or brute force (try all possible thrust profiles), but my attempts in that direction have failed so far: Monte Carlo doesn\\\u0027t converge, and brute force doesn\\\u0027t get to a sufficient resolution in thrust and time. So it seems that there\\\u0027s no way around this kind of stuff: \u003Ca href=\u0022http://cas.ensmp.fr/~petit/papers/ifac2008/0637.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://cas.ensmp.fr/~petit/papers/ifac2008/0637.pdf\u003C/a\u003E. Probably one could email the authors, obtain their MATLAB-script and adapt it to kerbal parameters? Their problem is very close to what we want to solve...\u003C/p\u003E\u003Cp\u003E@closette,\u003C/p\u003E\u003Cp\u003Ethanks for the pdf, makes sense now. So the way I understand it: a TWR of 2 is optimal if we are close to the surface (g=const), and if we don\\\u0027t accelerate much, which is the case after the initial full throttle ascent and before we reach higher altitudes.\u003C/p\u003E\n"},{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-02-17T14:22:10Z","Content":"\n\u003Cp\u003EI just came up with another idea how one could find a theoretical optimum. I\\\u0027m still missing one essential idea, but maybe somebody here can help?\u003C/p\u003E\u003Cp\u003EThe problem we want to solve is something like this:\u003C/p\u003E\u003Cp\u003Edt(h) = v\u003C/p\u003E\u003Cp\u003Edt(v) = u/m - D(h, v) - b/h^2\u003C/p\u003E\u003Cp\u003Edt(m) = -u/c\u003C/p\u003E\u003Cp\u003Ewith the time derivative dt(), distance from planetary center h, velocity v, thrust u, drag D, gravitational parameter b, and specific momentum of the engine c.\u003C/p\u003E\u003Cp\u003EThe idea is to discretize this by replacing dt(x) by (x_(i\u002B1) - x_i) / dx for some suffiently large time interval [0..n] and set up a linear system of equations Ax=b with the discretized quantities x=(h_1..h_n, v_1..v_n, m_1..m_n, u_1..u_n), a matrix of coefficients A, and some right hand side b. Once we have that system, we could just solve it for x.\u003C/p\u003E\u003Cp\u003EObviously, there\\\u0027s a couple of problems with this:\u003C/p\u003E\u003Cp\u003E[list type=decimal]\u003C/p\u003E\u003Cp\u003E[li]The system of ODEs is nonlinear[/li]\u003C/p\u003E\u003Cp\u003E[li]Thrust has a max and a min value[/li]\u003C/p\u003E\u003Cp\u003E[li]We need to constrain the integral over the thrust to a certain value (burnout after no more fuel is left)[/li]\u003C/p\u003E\u003Cp\u003E[li]The matrix A is not square, so the system has infinitely many solutions[/li]\u003C/p\u003E\u003Cp\u003E[li]We need to introduce an equation that optimizes the height[/li]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe first three problems I could deal with:\u003C/p\u003E\u003Cp\u003E[list type=decimal]\u003C/p\u003E\u003Cp\u003E[li]Nonlinearity: Implement some iterative scheme to approach the solution. The whole thing is highly non-linear, so I don\\\u0027t know if it would converge, but with a clever choice for the linear problem I think it should be possible[/li]\u003C/p\u003E\u003Cp\u003E[li]Thrust is bounded: Solve for some variable psi(u) that is not bounded and define a map between psi and u like eg tanh[/li]\u003C/p\u003E\u003Cp\u003E[li]We have limited fuel: Just add one equation that sums up the thrust at all time steps and set it to a fixed value[/li]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHowever, the last two issues I\\\u0027m not yet sure how they could be solved, but they go hand in hand: I think one could define some penalty functions that pick and optimize the highest altidude achieved, but I\\\u0027m not sure how... If someone can come up with an idea I would be willing to go ahead and implement the whole thing.\u003C/p\u003E\u003Cp\u003EAs of now this is just an idea, and I don\\\u0027t know if it would work, but who knows?\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-17T15:42:12Z","Content":"\n\u003Cp\u003E@jebbe,\u003C/p\u003E\u003Cp\u003E I admit I\\\u0027m at my limit of math skills for this problem, but it\\\u0027s a challenge in itself. If you can go for a solution (sounds like you are close) I\\\u0027ll be cheerleading all the way!\u003C/p\u003E\u003Cp\u003EIf it makes things simpler, you can assume that \u0027g\u0027 is approximately constant at 9.7 m/s/s for this problem and just redefine your \u0027h\u0027 as altitude above Kerbin\\\u0027s surface. I know, \u0027g\u0027 does decrease by about 10% at 30000m but for a first attempt at these coupled equations you can probably ignore this.\u003C/p\u003E\u003Cp\u003EIn the paper you quoted, the bounding function psi(thrust) caused the authors problems where they had to dream up some penalty function later on. Ugh. Again only if it helps, and you are going with iteration, I suggest that thrust could be limited to (say) 6 possible values: 0, 120, 240, 360, 480, or 600 N at each time step. That\\\u0027s not much worse than the resolution one can get with the SHIFT/CTRL keys, and you could change the number later.\u003C/p\u003E\n"},{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-02-17T20:16:21Z","Content":"\n\u003Cp\u003E@closette:\u003C/p\u003E\u003Cp\u003ESorry, but I think I have to disappoint you, this exceeds my math skills as well. I was hopeful with the Monte Carlo approach (where I used discretized thrust levels), but it seems that the problem is too complex for that. As I said, the standard approach here would probably be an adjoint method, but I\\\u0027ve never worked with them myself and unfortunately I don\\\u0027t have the time to spend weeks getting into that.\u003C/p\u003E\u003Cp\u003EAs of the other idea: So far this is only speculation, even if someone comes up with an idea for an optimizing condition I don\\\u0027t know if it would actually work. In any case it\\\u0027s far from standard, it\\\u0027s just an attempt to apply a method I know on a problem that is probably not really well suited for it.\u003C/p\u003E\u003Cp\u003ESo let\\\u0027s hope someone with actual knowledge in control theory picks this up!\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-17T21:14:46Z","Content":"\n\u003Cp\u003EI\\\u0027m taking off for the weekend but will\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E email\u003C/span\u003E ask one of the profs I know to send an email the authors of that paper - who knows they may want to help... hopefully their code is readable (sensible variable names and comments) and can be adapted to different spacecraft easily. \u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-02-17T21:27:00Z","Content":"\n\u003Cp\u003EI cleaned up my spreadsheet and added the features I said I would.\u003C/p\u003E\u003Cp\u003EThe change in the maximum_drag factor didn\\\u0027t make much of a difference to the maximum altitude.\u003C/p\u003E\u003Cp\u003EAttached is the spreadsheet if you wish to mess around with it.\u003C/p\u003E\u003Cp\u003EThe \u0027a factor\u0027 at the top is \\\u0027x\\\u0027 in \u0027x*(a/g)\u0027 for determining needed acceleration.\u003C/p\u003E\u003Cp\u003EI think it\\\u0027s accurate to within a few percentage points.\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-17T22:22:39Z","Content":"\n\u003Cp\u003EWhat is the maximum theoretical altitude? I see different numbers in each Sheet of the Excel file. \u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-02-17T22:40:27Z","Content":"\n\u003Cp\u003EMy bad. I forgot about the extra sheets I no longer use. I posted the correct excel spreadsheet above.\u003C/p\u003E\n"},{"CreatedByName":"boolybooly","CreatedById":6572,"CreatedDateTime":"2012-02-21T14:37:38Z","Content":"\n\u003Cp\u003EOK two questions, first if KSP applies drag using a stepwise model related to altitude, shouldn\\\u0027t we apply thrust to attain max velocities in a stepwise fashion ?\u003C/p\u003E\u003Cp\u003EAlso, there is a big elephant in the room regarding engine efficiency, is it constant or does it vary at different thrust levels?\u003C/p\u003E\u003Cp\u003EMy best 33,319 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Causeless","CreatedById":5366,"CreatedDateTime":"2012-02-21T16:14:13Z","Content":"\n\u003Cp\u003EMy brain has exploded.\u003C/p\u003E\u003Cp\u003EToo much maths. ???\u003C/p\u003E\n"},{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-02-21T17:23:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022boolybooly\u0022 data-cite=\u0022boolybooly\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOK two questions, first if KSP applies drag using a stepwise model related to altitude, shouldn\\\u0027t we apply thrust to attain max velocities in a stepwise fashion ?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre you thinking about a layered atmosphere, as the height indicator with the different shades of blue seems to suggest? Some people here have figured out that there are no steps, the density of the air decreases exponentially, just like on earth. See e.g.:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kosmo-not\u0022 data-cite=\u0022Kosmo-not\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Edensity = 0.0098*exp(-altitude/5000)\u003C/p\u003E\u003Cp\u003Eit\\\u0027s not perfect, but it\\\u0027s pretty close\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022boolybooly\u0022 data-cite=\u0022boolybooly\u0022\u003E\u003Cdiv\u003EAlso, there is a big elephant in the room regarding engine efficiency, is it constant or does it vary at different thrust levels?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat do you mean by engine efficiency? Are you talking about the delta-v you get out of a certain amount of fuel? That\\\u0027s the specific momentum, and as far as I know it\\\u0027s constant, regardless of the throttle setting. So in outer space it doesn\\\u0027t matter how vigorously you burn, if you burn a certain amount of fuel, you accelerate by one given velocity.\u003C/p\u003E\u003Cp\u003EThe efficiency of your burn as a whole on the other hand does depend on the throttle, but only because of gravity and air resistance. You want to escape gravity as fast as you can to avoid hovering (which consumes fuel without bringing you forward), but at the same time want to go as slow as possible to minimize air resistance. Optimizing between these two contradicting goals is known as the Goddard problem, which we\\\u0027re discussing here.\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-21T17:25:27Z","Content":"\n\u003Cp\u003EThe problem here among us is \u0027not quite enough maths\u0027.\u003C/p\u003E\u003Cp\u003E@boolybooly - thanks for trying the challenge, 33319 m is a worthy attempt. I note that not many of those who downloaded the spacecraft have actually posted their results. \u003C/p\u003E\u003Cp\u003EAs for stepwise application of the physics (drag model), I presume it is done with a time step that is \u0027small enough\u0027 to look continuous, otherwise we\\\u0027d see our ships rising up jerkily against the background. Kosmo-not\\\u0027s spreadsheet approach also uses steps (rows) to move the spacecraft a bit, subtract some fuel, calculate the new weight and drag, change the thrust etc. And the more steps used (subject to rounding errors) the closer we get to the continuous case.\u003C/p\u003E\u003Cp\u003EAs far as we know, the engine thrust at a given setting is constant with altitude and time, which is one simplification this problem has compared to real-world cases.\u003C/p\u003E\n"},{"CreatedByName":"boolybooly","CreatedById":6572,"CreatedDateTime":"2012-02-21T19:56:41Z","Content":"\n\u003Cp\u003EWell that\\\u0027s two illusions shattered in one afternoon!\u003C/p\u003E\u003Cp\u003EI think it was because people like HarvesteR talked about the atmosphere cutting out at a certain altitude that I assumed since it had an outer boundary it also had some kind of internal layering to account for the subjectively sudden changes in density.\u003C/p\u003E\u003Cp\u003EI had also laboured under the delusion that burning at low throttle ie \u0026lt;20% might be more efficient than burning at higher throttles, again subjectively. I always meant to test it and never got round to it until now, but I just have and you are right, it doesn\\\u0027t make a difference. Would prefer it did actually though that does make life simpler.\u003C/p\u003E\u003Cp\u003ELearnt something useful anyway.\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-21T21:25:06Z","Content":"\n\u003Cp\u003E@boolybooly,\u003C/p\u003E\u003Cp\u003E Glad you learned something new - one of the reasons I submitted this challenge was so we could learn from each other, and I think this has been a success despite the low participation.\u003C/p\u003E\u003Cp\u003EWhen someone tells us \u0027100% throttle all the way, all the time\u0027, now we can point them to this thread.\u003C/p\u003E\u003Cp\u003EI had an epiphany as to why Kosmo-not\\\u0027s spreadsheet scheme works so well, and I don\\\u0027t think we need fancy optimal control software.\u003C/p\u003E\u003Cp\u003EStay with me here!\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EI. Ascent through a uniform \u0027slab\u0027 atmosphere\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EImagine a uniform-density atmosphere in a slab over Kerbin\\\u0027s surface. From the equation of motion (refer to the PDF attached to one of my posts above: \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=7161.msg102364#msg102364\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/forum/index.php?topic=7161.msg102364#msg102364\u003C/a\u003E) we found that the most fuel-efficient speed up through this slab is equal to the craft\\\u0027s terminal speed, which in KSP\\\u0027s drag model would be ~ constant. Also TWR=2. So the best strategy to improve your fuel efficiency (in miles per gallon or mpg) would be (1) accelerate as fast as you can up to the terminal speed, then (2) stay at this speed, which would mean that your thrust/weight ratio = 2. \u003C/p\u003E\u003Cp\u003EThe initial maximum acceleration helps you in two ways:\u003C/p\u003E\u003Cp\u003E- you spend less time at low mpg (fuel efficiency)\u003C/p\u003E\u003Cp\u003E- at maximum thrust you reduce the craft\\\u0027s weight the fastest, leaving less to lift later on and greater fuel efficiency for the rest of the ascent. (As shown in my PDF, the instantaneous efficiency \u003Cem\u003Ee\u003C/em\u003E is inversely proportional to weight \u003Cem\u003EW\u003C/em\u003E).\u003C/p\u003E\u003Cp\u003E- but be sure not go above the terminal speed at any time, because then you\\\u0027ll be wasting fuel by fighting the increased air drag,\u003C/p\u003E\u003Cp\u003EStill with me?\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EII. Adding a second, less dense slab\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ENow put another, less dense slab above the first one. The terminal speed in this slab is higher, so on crossing the boundary what should you do to maximize your mpg? As before, speed up to the new terminal speed as fast as possible, then throttle back to TWR=2 and stay ascending at that constant speed.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIII. Putting it all together: ascent through an exponential atmosphere\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAdding additional constant-density slabs on top would force you into the same strategy of \u0027chasing\u0027 the terminal speed and staying there with TWR=2 until you need to throttle up above TWR=2 just as you hit the next slab. Now make lots of such slabs and make them thinner and thinner, and you get a close approximation to Kerbin\\\u0027s atmosphere.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIV. Optimal fuel-saving ascent strategy for a single stage\u003C/strong\u003E \u003C/p\u003E\u003Cp\u003ESo, you need 100% throttle at launch (and some SRBs would come in handy as well) until you reach terminal speed, then throttle down if you have to, to match the terminal speed for as long as you have fuel. To do this, from the equation of motion, will require a TWR= 2 \u002B v\u003Csub\u003ET\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/(2H) where H is the scale height of the exponential atmosphere. \u003C/p\u003E\u003Cp\u003EFor most spacecraft, due to KSP\\\u0027s unrealistic drag model, the terminal speed which is the \u0027target\u0027 speed to shoot for as a function of altitude is given roughly by v\u003Csub\u003ET\u003C/sub\u003E ~ 97.3 exp(\u002Baltitude / 10183m), so for example:\u003C/p\u003E\u003Cp\u003EAltitude (m) Target speed (m/s) - rounded to nearest 5 m/s \u003C/p\u003E\u003Cp\u003E0 97.3- you\\\u0027d better get a move on! \u003C/p\u003E\u003Cp\u003E500 105 - you should be catching up by now! \u003C/p\u003E\u003Cp\u003E1000 110 \u003C/p\u003E\u003Cp\u003E2000 120 \u003C/p\u003E\u003Cp\u003E3000 130 - usually the first benchmark I have time to look at \u003C/p\u003E\u003Cp\u003E5000 160 \u003C/p\u003E\u003Cp\u003E8000 215 \u003C/p\u003E\u003Cp\u003E10000 260\u003C/p\u003E\u003Cp\u003E13000 350\u003C/p\u003E\u003Cp\u003E15000 425\u003C/p\u003E\u003Cp\u003E16000 470 - most of us are at least thinking about staging and pitchover maneuvers by now!\u003C/p\u003E\u003Cp\u003E..\u003C/p\u003E\u003Cp\u003E32000 2250 - this is equal to the orbital speed, so by now you should be pushing over hard for orbit, and air drag is not as important above this altitude.\u003C/p\u003E\u003Cp\u003EThe resulting ascent profile looks very similar to those that use optimal control theory to solve the Goddard Problem, e.g. Figure 2 in this paper (thanks jebbe for the link): \u003Ca href=\u0022http://cas.ensmp.fr/~petit/papers/ifac2008/0637.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://cas.ensmp.fr/~petit/papers/ifac2008/0637.pdf\u003C/a\u003EComments welcome, if you\\\u0027ve read this far!\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-02-21T23:18:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022closette\u0022 data-cite=\u0022closette\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EGlad you learned something new - one of the reasons I submitted this challenge was so we could learn from each other, and I think this has been a success despite the low participation.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAlthough I\\\u0027ve already extensively used what I learned in this challenge, I\\\u0027ve been distracted by other challenges... I\\\u0027ll give it a try when I next get a chance to play the game. I might not get that chance until tomorrow evening though. I\\\u0027ll post back with my results. \u003C/p\u003E\n"}]}