{"TopicId":107466,"ForumId":20,"TopicTitle":"module \u003E part not counting in rocket part limit for upgraded buildings","CreatedByName":"Scientist","CreatedById":129760,"CreatedDateTime":"2015-05-04T17:32:02Z","PageNum":1,"Articles":[{"CreatedByName":"Scientist","CreatedById":129760,"CreatedDateTime":"2015-05-04T17:32:02Z","Content":"ok so heavy modded game, alot of parts we add just for decor to make our rockets look nice, but then get kicked in the head because the part count is higher than VAB/launchpad allow until you upgrade further, but cant upgrade yet o.O so a simple module, if on a part, that part isnt counted in the limit\n\nMODULE\n\n{\n\n name = ModuleExcludePartLimit\n\n}\n\nor such ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\ni tried looking through some of ksp code, but can\u0027t find where to hook into the part counting, so maybe theres better modders ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-05-04T19:32:10Z","Content":"The simplest way would be to dynamically increase the part limit instead. Just glancing at it, I\u0027d say actually preventing the part from being included in the count would exceed the effort : reward ratio for your mod\n\n    [KSPAddon(KSPAddon.Startup.MainMenu, true)]public class ExtendPartLimitCount : GameVariables{    private void Awake() // important that this be in Awake    {        // just a little future-proofing        if (Instance.GetType() != typeof (GameVariables))        {            Debug.LogError(string.Format(\u0022{0} cannot run; conflicting GameVariables instance of type {1}\u0022,                GetType().Name, Instance.GetType().FullName));            Destroy(this);            return;        }        Instance = this;        DontDestroyOnLoad(this);    }    public override int GetPartCountLimit(float editorNormLevel)    {        var baseLimit = base.GetPartCountLimit(editorNormLevel);        if (!HighLogic.LoadedSceneIsEditor) return baseLimit;        return baseLimit \u002B EditorLogic.fetch.ship.parts            .Count(p =\u003E p.GetComponent() != null);    }}public class ExtendPartCountLimitModule : PartModule{}"}]}