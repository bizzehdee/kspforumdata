{"TopicId":60281,"ForumId":36,"TopicTitle":"[Hardware, Plugin] Arduino based physical display \u002B serial port io\u002B tutorial (24-11-19)","CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-01-18T01:25:25Z","PageNum":29,"Articles":[{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2014-12-30T10:32:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ChikkaChiChi\u0022 data-cite=\u0022ChikkaChiChi\u0022\u003E\u003Cdiv\u003EI tried asking for one [edit]\u003Cstrong\u003Esubforum\u003C/strong\u003E[/edit], it was mostly ignored. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E All this work being shared (and code along with it) certainly seems to be a completely different topic than one single \u0022mod\u0022\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHonestly, I disagree. There are only a handful of active hardware controller projects - each with their own thread, plus this one on the shared software side and Mulbins \u0022collection of hardware threads\u0022 thread. If you compare that to other shared mods (life support, resources, OKS/MKS come to mind, also RasterPropMonitor and maybe even kOS) they all have more posts per day than we have combined most of the time.\u003C/p\u003E\u003Cp\u003EI think it\u0027s fine as it is. I\u0027m subscribed to every hardware thread that I can find so finding new posts is as easy as going to \u0022settings\u0022 on the top right. \u003C/p\u003E\u003Cp\u003EThat said, what we could do to keep Zitronens life a bit easier is add feature requests and their respective discussions on \u003Ca href=\u0022https://github.com/zitron-git/KSPSerialIO\u0022 rel=\u0022external nofollow\u0022\u003Ehis github page\u003C/a\u003E instead of this thread.\u003C/p\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2014-12-30T14:52:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zitronen\u0022 data-cite=\u0022zitronen\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ERight now the controls are only \u0022Synced\u0022 during scene changes (going back to VAB, tracking station), I can make it sync on vessel switching, but that can cause other problems like on ship A you have control group 10 set to solar panels and you switch to ship B which has it set to jettison engines, so when you switch vessel, well you get the idea... Docking, EVA adds even more complexity so I don\u0027t think sync on vessel switching will be a good idea. Once you have the status information your LEDs will reflect the actual states in the game, this will be less of a problem I hope.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI understand where you\u0027re coming from. If I may, I\u0027d then suggest adding a \u0022force sync\u0022 to the ControlPacket, so you could get immediate sync after an undock. It is a bit stressful to loose throttle and RCS during these maneuvers. \u003C/p\u003E\u003Cp\u003EOn the bug I wrote about, I think the issue is fuel lines. My pod has fuel lines linked directly to the engine, and the fuel in these tanks is not counted.\u003C/p\u003E\u003Cp\u003EHope you have a happy new year.\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2014-12-31T16:00:45Z","Content":"\n\u003Cp\u003EAll you builders, makers, tinkerers and rocket instrumentation engineers!\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHave a great launch into 2015!\u003C/strong\u003E \u003Cspan style=\u0022color:#A9A9A9;\u0022\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E(and don\u0027t forget the \u0027chutes!)\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://cloud-4.steampowered.com/ugc/558737235189490508/613E0654EE92A3488172D37A702F70960E3B9D00/\u0022 alt=\u0022613E0654EE92A3488172D37A702F70960E3B9D00\u0022\u003E\u003C/p\u003E\u003Cp\u003ESee you on the other side \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"hakan","CreatedById":92934,"CreatedDateTime":"2015-01-01T21:29:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrOnak\u0022 data-cite=\u0022MrOnak\u0022\u003E\u003Cdiv\u003ESee you on the other side \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENow *that* is a nice Kerbaly picture \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-01T23:42:27Z","Content":"\n\u003Cp\u003E@Zitronen: Am I right that the Arduino side of your plugin is not on your github?\u003C/p\u003E\u003Cp\u003EReason why I\u0027m asking is because I\u0027ve applied a useful patch to my AVR-c \u0022fork\u0022 of your code that adds a return value to kspio_input() and I believe that might be useful for your official code as well. My kspio_input() function matches your input().\u003C/p\u003E\u003Cp\u003EThe return value allows to run code that depends on vesselData numbers to be run only when the numbers actually have changed.\u003C/p\u003E\u003Cp\u003ESee my latest commit in my branch for details:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/MrOnak/avr_KSPIO/commit/6d3c1bb5d483c28d6feb542f67f1b07ed9a99ce4\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/MrOnak/avr_KSPIO/commit/6d3c1bb5d483c28d6feb542f67f1b07ed9a99ce4\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIf I\u0027m not mistaken your code with this patch would be this (changes in \u003Cspan style=\u0022color:#FF0000;\u0022\u003E\u003Cstrong\u003Ebold\u003C/strong\u003E\u003C/span\u003E):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[B][COLOR=\u0022#FF0000\u0022]int[/COLOR] [/B]input() {\u003Cbr\u003E  now = millis();\u003Cbr\u003E [B] [COLOR=\u0022#FF0000\u0022]int returnValue = -1;[/COLOR][/B]\u003Cbr\u003E\u003Cbr\u003E  if (KSPBoardReceiveData()){\u003Cbr\u003E    deadtimeOld = now;\u003Cbr\u003E   [B] [COLOR=\u0022#FF0000\u0022]returnValue = id;[/COLOR][/B]\u003Cbr\u003E\u003Cbr\u003E    switch(id) {\u003Cbr\u003E    case 0: //Handshake packet\u003Cbr\u003E      Handshake();\u003Cbr\u003E      break;\u003Cbr\u003E    case 1:\u003Cbr\u003E      Indicators();\u003Cbr\u003E      break;\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    //We got some data, turn the green led on\u003Cbr\u003E    digitalWrite(GLED,HIGH);\u003Cbr\u003E    Connected = true;\u003Cbr\u003E  }\u003Cbr\u003E  else\u003Cbr\u003E  { //if no message received for a while, go idle\u003Cbr\u003E    deadtime = now - deadtimeOld; \u003Cbr\u003E    if (deadtime \u0026gt; IDLETIMER)\u003Cbr\u003E    {\u003Cbr\u003E      deadtimeOld = now;\u003Cbr\u003E      Connected = false;\u003Cbr\u003E      LEDSAllOff();\u003Cbr\u003E    }    \u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  [B][COLOR=\u0022#FF0000\u0022]return returnValue;[/COLOR][/B]\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIn case you\u0027re interested in a bit of collaboration, I\u0027ll try and send you pull requests whenever I find useful changes / additions and your Arduino code is on github \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-02T13:13:17Z","Content":"\n\u003Cp\u003EOkay, I did some thinking about the amount of time the microcontroller spends to receive the data packets from KSP and I wanted to start a little discussion if anyone has tried faster baud rates than the default 38400 to have more time available doing something other than receiving.\u003C/p\u003E\u003Cp\u003EIf my maths is right then a single data packet consists of 177 bytes, more to come with the SAS/RCS/... settings and the SOI information. With 38400 baud, that takes (177*10/38400 =) 0.046 seconds to receive - not counting software overhead on either side.\u003C/p\u003E\u003Cp\u003EThe default transmission frequency seems to resolve to 12.5 transmissions per second which in turn means that the microcontroller spends (12.5 * 0.046 =) 0.57 seconds \u003Cem\u003Eeach second\u003C/em\u003E to receive data. Add a bit of overhead and you have 60% MCU time spent. In other words you have 40% of overall MCU time available to do something.\u003C/p\u003E\u003Cp\u003ENow that percentage may very well go up a bit if you\u0027re using lots of interrupts but in the end you need to read the buffer before it gets overridden so lets keep the maths simple \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E.\u003C/p\u003E\u003Cp\u003EIs my maths right so far?\u003C/p\u003E\u003Cp\u003EIf it is:\u003C/p\u003E\u003Cp\u003ELet\u0027s assume we keep the transmission frequency fixed at 12.5 Hz, but increase the transmission baud rate:\u003C/p\u003E\u003Cp\u003E- with a baud rate of 57600 the overall time spent receiving would come down to roughly 0.38s per second, giving us around 60% free MCU time.\u003C/p\u003E\u003Cp\u003E- with the highest \u0022standard\u0022 baud rate setting of 115200 the amount of \u0022free\u0022 MCU time goes up to around 80% (0.19s spent receiving).\u003C/p\u003E\u003Cp\u003ENow... receiving at 115200 baud is generally not an issue for the ATMega328 but I haven\u0027t tested it with KSP yet. \u003C/p\u003E\u003Cp\u003EHas anyone tried this? Any surprising side effects or noticeable drawbacks? How does KSP handle that ( I suspect I wouldn\u0027t notice the effect on KSP)?\u003C/p\u003E\u003Cp\u003E@Zitronen: Any specific reason for setting the default baud rate to 38400?\u003C/p\u003E\u003Cp\u003EThanks a lot in advance for any helpful comments, insights into things I didn\u0027t take into account or plainly pointing out that my maths is borked \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2015-01-02T14:46:15Z","Content":"\n\u003Cp\u003EI am a lowly system administrator who generally thinks in gigabytes not bits, so take my thoughts with a reasonable grain of salt. Also, nitpicking, but the flow rate is specified as bits per second, not baud. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe Arduino core library allocates 64 bytes for the Hardware Serial receive buffer. Boards that ship their own cores can increase this apparently, but I have no idea how many do. (similarly, my five minutes googling says that if you want a bigger buffer for your Mega2560, you\u0027ll be hacking up a slightly modified core).\u003C/p\u003E\u003Cp\u003EThis means that, at 38400bps, you need to have polled and started reading (64*10/38400) = 0.016 seconds after the packet started to arrive, otherwise the buffer overflows and the packet is corrupt. And after you\u0027ve read that 64 bytes, you\u0027ve only got another 0.016 seconds to come back and check again for the next 64 bytes. It\u0027ll take a minimum of three batches of reads to get the full packet, possibly more depending on how much time the controller is spending on other tasks.\u003C/p\u003E\u003Cp\u003EAt 57600bps, the buffer overflows in 0.011 seconds. And at 115200bps, you\u0027ve got 0.005 seconds before the buffer overflows. Even though you\u0027ve got a lot more idle CPU time, you need to keep individual tasks quite short because you literally need to poll for new serial data every 5 milliseconds.\u003C/p\u003E\u003Cp\u003EYou can relax some of those. I\u0027d be happy letting processing and display update tasks run longer than 5ms after a new packet has arrived on the assumption there won\u0027t be another one for 70-odd milliseconds. But to do it without a significant number of dropped packets I think would require much more careful structure.\u003C/p\u003E\u003Cp\u003EI\u0027ve been approaching this from the other direction. I\u0027ve put a lot of thought in to how long I\u0027d need to poll my inputs, run business logic, update displays. And a fair bit of effort in to optimising how well they run and how often they need to run, so I\u0027d have plenty of idle time for serial IO. Haven\u0027t yet done any analysis of how busy my arduino is and how many packets are being dropped from the CPU. But I was planning on integrating a second microcontroller soon, and using that to benchmark the main processor\u0027s performance sounds like an excellent plan.\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-02T16:06:27Z","Content":"\n\u003Cp\u003EI too usually think in terms of how many cores per server blade and GHz/GB so yeah, I get where you\u0027re coming from \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003C/p\u003E\u003Cp\u003EThe thought about how often to poll in order to not corrupt a packet is actually very valuable, so thanks for that!\u003C/p\u003E\u003Cp\u003EThe thing is I\u0027m having a tough time to wrap my head around how long my business logic will take to execute - I\u0027m simply lacking some monitoring tools and counting number of commands \u0026amp; calculating execution time from that is really not something I\u0027m looking forward to, so if you have any hints on how to do that I\u0027ll be more than happy.\u003C/p\u003E\u003Cp\u003EI should note here that I\u0027m running on a \u0022naked\u0022 ATMega328p, not a full Arduino so I do have a bit more control over what\u0027s happening... not that I necessarily have the knowledge to do so but at least its not all hidden behind abstraction layers \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E.\u003C/p\u003E\u003Cp\u003ESome thinking about the poll rate issues that you brought up, and I really mean thinking, not teaching - all of this might be rubbish:\u003C/p\u003E\u003Cp\u003EAs far as I see it there are two aspects to reading the data on the MUC: \u003C/p\u003E\u003Cp\u003EFirst: Fetching the UART packets quickly enough to avoid corrupted data. \u003C/p\u003E\u003Cp\u003ESecond: Reading the data from the UART buffer and putting it into the KSPIO data structure where it becomes usable.\u003C/p\u003E\u003Cp\u003EOn the first aspect:\u003C/p\u003E\u003Cp\u003E- The UART library I\u0027m using has one 32 byte circular buffer each for transmitting and receiving but their sizes are simple #defines and thus easily changeable as long as they fit into the SRAM.\u003C/p\u003E\u003Cp\u003E- The UART library also works with interrupts to send/receive.\u003C/p\u003E\u003Cp\u003EI believe from that follows that the serial packets will be fetched in time and written to the UART buffer as long as my own interrupt routines - during which other interrupts are disabled - finish fast enough. Wouldn\u0027t that mean that the UART buffer is always valid? \u003C/p\u003E\u003Cp\u003EOn the second aspect - and I do find it hard to put in words:\u003C/p\u003E\u003Cp\u003EIf the business logic runs fast enough to be able to run KSPIO input() often enough to fetch every transmission into the KSPIO data structure everything is good anyway so no point discussing that situation.\u003C/p\u003E\u003Cp\u003EBut if the business logic takes so much time that we write only every second transmission into the KSPIO data structure, is there any communication breakdown?\u003C/p\u003E\u003Cp\u003EI mean, missing a transmission means the code runs with \u0022old\u0022 data which of course is suboptimal for calculations. But I doubt that updating displays with changing values 12 times per second is much better than updating the values lets say 5 times per second. So how bad a missed transmission is depends on what I\u0027m doing with the data I guess?\u003C/p\u003E\u003Cp\u003EQuestion for me is whether or not the serial communication will recover in case packets have been dropped - but I believe the answer is \u0022yes\u0022 since resetting the MUC (not the USB2serial circuit, which for me is seperate!) causes no obvious effects - numbers still change afterwards.\u003C/p\u003E\u003Cp\u003EHmmm... I\u0027ll have to do more thinking on this I believe \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. Any more comments? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003E----\u003C/p\u003E\u003Cp\u003EQuick addition on your numbers: 0.005s time between packets at 115200 baud - running 16MHz that is still 80000 clock cycles in between, right?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-02T16:09:55Z\u0022 title=\u002201/02/2015 04:09  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 2, 2015\u003C/time\u003E by MrOnak\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2015-01-02T16:46:28Z","Content":"\n\u003Cp\u003ERight, I\u0027m back! What did I miss?... oh.. about 10 versions of the plugin \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EMy first new batch of parts has arrived, but as many already know, while I\u0027m not bad at designing a panel, I\u0027m useless at electronics!\u003C/p\u003E\u003Cp\u003EI have just got 6 of these 7 segment boards which each have a MAX7219 chip. Any advice on how to wire these up to my arduino without frying them would be gratefully received! I will be using this batch for AP, PE, Time to AP/PE, Altitude, Excentricity and Inclination. I will no doubt buy more later for other data such as MET\u003C/p\u003E\u003Cp\u003EHere are some pics of the components, thanks in advance!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cimg src=\u0022http://i.imgur.com/IAzd6Hi.jpg\u0022 alt=\u0022IAzd6Hi.jpg\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/GovYf5K.jpg\u0022 alt=\u0022GovYf5K.jpg\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/vOISQsY.jpg\u0022 alt=\u0022vOISQsY.jpg\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/vvqOl2f.jpg\u0022 alt=\u0022vvqOl2f.jpg\u0022\u003E\u003C/blockquote\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-02T16:49:34Z\u0022 title=\u002201/02/2015 04:49  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 2, 2015\u003C/time\u003E by Mulbin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Daid","CreatedById":32171,"CreatedDateTime":"2015-01-02T16:56:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrOnak\u0022 data-cite=\u0022MrOnak\u0022\u003E\u003Cdiv\u003EHmmm... I\u0027ll have to do more thinking on this I believe \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. Any more comments? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EJust a small one.\u003C/p\u003E\u003Cp\u003EI have a ton of experience on Arduino USB Serial communication. (From a 3D printer perspective. As I\u0027ve build and maintain one of the leading open source 3D printing applications)\u003C/p\u003E\u003Cp\u003EFrom this I can tell you that you are missing one important factor, USB. USB is polling based, there are wierd driver interactions happening, that even I do no fully understand. But you won\u0027t get full speeds, and there are some strange \u0022bulk\u0022 transfers going on behind your back. So while the serial port might look like a stream from A to B, there is actually a polling based bulk transfer in between. So sending data really quick does not do much except for making it difficult on you MCU side.\u003C/p\u003E\u003Cp\u003EI would recommend updating at 10Hz. That\u0027s quick enough for you to make it feel like \u0022real time\u0022, but won\u0027t make stuff extremely complex on the MCU side.\u003C/p\u003E\u003Cp\u003EAlso, for anything serious on Arduinos, you\u0027ll better use your own UART driver. As the Arduino drivers pretty much suck at just about everything.\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-02T17:03:46Z","Content":"\n\u003Cp\u003EHeh, thanks Daid. I\u0027ll keep that \u0022bulk communication\u0022 hint in mind once I start benchmarking things seriously.\u003C/p\u003E\u003Cp\u003ELike I said, the UART driver I\u0027m using is a custom one, not done by me but by \u003Ca href=\u0022http://jump.to/fleury\u0022 rel=\u0022external nofollow\u0022\u003EPeter Fleury\u003C/a\u003E who seems to know what he\u0027s doing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. And I do share your thoughts about the Arduino drivers as you put it, too much bulk, too much abstraction. Nice for the beginner but the losses are staggering.\u003C/p\u003E\u003Cp\u003E *takes mental note to bug Daid when the 3d printer project is on the desk*\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2015-01-02T20:29:41Z","Content":"\n\u003Cp\u003EOk, it was far easier than I expected to get a 7 segment running! Wired the first one up and have also added the LedControl library and got the display to fire up a simple sketch.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/MlhZ5b4.jpg\u0022 alt=\u0022MlhZ5b4.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003ENext request... can anyone give me a sample arduino code to include in my code? Something to display some data, such as MET so I can start to get my head around how to code outputs for 7 segment.\u003C/p\u003E\u003Cp\u003EI am using LedControl plugin via 8 digit 7 segments (can daisy chain them.. I have 6 boards currently!) each is running on a MAX7219 chip. Thanks in advance for any help!\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-03T07:16:34Z","Content":"\n\u003Cp\u003EHey Mulbin, glad you got it to work that easily.\u003C/p\u003E\u003Cp\u003EDisplaying KSP data on the 7segs should be fairly easy:\u003C/p\u003E\u003Cp\u003EDownload Zitronens demo code for Arduino: \u003Ca href=\u0022https://sites.google.com/site/zitronfiles/KSPIODemo8.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://sites.google.com/site/zitronfiles/KSPIODemo8.zip\u003C/a\u003E to get started.\u003C/p\u003E\u003Cp\u003EAdd the #includes (...) for the LedControl library to the top part and LedControl initialization stuff in setup() as you already did with your test code.\u003C/p\u003E\u003Cp\u003EInside the loop() function you want to add your stuff:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Evoid loop()\u003Cbr\u003E{  \u003Cbr\u003E  input();\u003Cbr\u003E  output(); // not needed for displaying only\u003Cbr\u003E\u003Cbr\u003E  updateDisplays(); // your new method\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003Evoid updateDisplays() \u003Cbr\u003E{\u003Cbr\u003E  // this is to drive an LCD display, your code will differ, depending how the LedControl library works\u003Cbr\u003E  lcd.setCursor(0, 0); lcd.print(\u0022alt: \u0022);\u003Cbr\u003E  lcd.setCursor(5, 0); lcd.print[B][COLOR=\u0022#FF0000\u0022]((long) VData.Alt[/COLOR][/B]);\u003Cbr\u003E\u003Cbr\u003E  lcd.print(\u0022LF: \u0022);\u003Cbr\u003E  lcd.setCursor(4, 1); lcd.print([COLOR=\u0022#FF0000\u0022][B](long) VData.LiquidFuelS[/B][/COLOR]);\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E...and that should be it. Not very elegant and not very high performance but since you\u0027re offloading the multiplexing to the MAX chips on your LED boards it should be good enough.\u003C/p\u003E\u003Cp\u003EFor a list of available data and their variable names, see Zitronens first post (or the struct VesselData) on top of the KSPIODemo8 code.\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2015-01-03T13:10:02Z","Content":"\n\u003Cp\u003EI\u0027m just getting errors thrown up from this...\u003C/p\u003E\u003Cp\u003EKSPIODemo8.ino: In function \u0027void updateDisplays()\u0027:\u003C/p\u003E\u003Cp\u003EKSPIODemo8:159: error: \u0027lcd\u0027 was not declared in this scope\u003C/p\u003E\u003Cp\u003EAlso... I\u0027m looking for code for a 7 segment, not an LCD\u003C/p\u003E\u003Cp\u003EThanks for the help though!\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-03T16:02:33Z","Content":"\n\u003Cp\u003EErm yeah that\u0027s what I meant when I wrote the code is for an LCD \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E. You\u0027ll have to replace the \u0022lcd.*\u0022 commands with whatever LedControl uses. Since you have a working demo code for LedControl (the one that you used to output \u002287654321\u0022 on that one display it shouldn\u0027t be too hard. \u003C/p\u003E\u003Cp\u003ESorry I can\u0027t help you more at the moment, I haven\u0027t used the LedControl library yet.\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2015-01-03T16:41:17Z","Content":"\n\u003Cp\u003EHmm, think it\u0027s all waaaaaay beyond my understanding. I\u0027ve managed to get switches and voltmeter dials working but things seem far to complicated for 7 segments (just looks like random words and numbers to me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E ).\u003C/p\u003E\u003Cp\u003EI\u0027ll start putting some feelers out to see if anyone is willing to write some code for me in exchange for some panel graphics! When you don\u0027t have a skill, trade the skills you do have \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"katton","CreatedById":97529,"CreatedDateTime":"2015-01-03T17:32:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mulbin\u0022 data-cite=\u0022Mulbin\u0022\u003E\u003Cdiv\u003EHmm, think it\u0027s all waaaaaay beyond my understanding. I\u0027ve managed to get switches and voltmeter dials working but things seem far to complicated for 7 segments (just looks like random words and numbers to me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E ).\u003Cp\u003EI\u0027ll start putting some feelers out to see if anyone is willing to write some code for me in exchange for some panel graphics! When you don\u0027t have a skill, trade the skills you do have \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was around where you are a while ago, and got some code up and running for my display they you will probably be able to reuse. I was only using 4 digit 7segment displays, but was using k- or m- modifier lights to extend their range. The main problem that I ran into was that the arduino did not have enough power to translate a dozen float values into what I needed to send to the displays (basically just formatting the numbers into four digits, plus the two modifiers and the decimal position) in a timely enough fashion. If you were only using one or two displays it shouldn\u0027t be a problem.\u003C/p\u003E\u003Cp\u003EI eventually decided that I would have to format the values on the computer before sending them over serial, but that would require forking zitronen\u0027s plugin, so I kind of gave up for a bit. I have a feeling that if I were more clever at coding, I might be able to optimize it enough, but I got busy right around that time anyways. \u003C/p\u003E\u003Cp\u003EThis is where I got to, and was able to get all the values populated, but the refresh rate was down to one or two seconds, so basically unusable: \u003Ca href=\u0022http://i.imgur.com/JYEeGEm.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/JYEeGEm.jpg\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-03T18:53:29Z","Content":"\n\u003Cp\u003E@Mulbin: Paste the code that you have that displays the \u002287654321\u0022 on a single display, it shouldn\u0027t be too hard to adapt that to display something from KSP.\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2015-01-03T23:27:31Z","Content":"\n\u003Cp\u003EHere you go...\u003C/p\u003E\u003Cp\u003E#include \u0022LedControl.h\u0022 \u003C/p\u003E\u003Cp\u003E// Arduino Pin 7 to DIN, 6 to Clk, 5 to LOAD, no.of devices is 1 \u003C/p\u003E\u003Cp\u003ELedControl lc=LedControl(7,6,5,1); \u003C/p\u003E\u003Cp\u003Evoid setup() \u003C/p\u003E\u003Cp\u003E{ \u003C/p\u003E\u003Cp\u003E// Initialize the MAX7219 device \u003C/p\u003E\u003Cp\u003Elc.shutdown(0,false); // Enable display \u003C/p\u003E\u003Cp\u003Elc.setIntensity(0,10); // Set brightness level (0 is min, 15 is max) \u003C/p\u003E\u003Cp\u003Elc.clearDisplay(0); // Clear display register \u003C/p\u003E\u003Cp\u003E} void loop() \u003C/p\u003E\u003Cp\u003E{ \u003C/p\u003E\u003Cp\u003Efor(int i=0; i\u0026lt;8; i\u002B\u002B){ \u003C/p\u003E\u003Cp\u003Elc.setDigit(0,i,i\u002B1,false); \u003C/p\u003E\u003Cp\u003E} \u003C/p\u003E\u003Cp\u003Edelay(1000); \u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-04T00:06:18Z","Content":"\n\u003Cp\u003EAlright. \u003C/p\u003E\u003Cp\u003E- Download the KSPIODemo8 that I linked earlier (link also in Zitronen\u0027s first post), unpack it somewhere and open it in your Arduino IDE.\u003C/p\u003E\u003Cp\u003E- open HandShake.ino and remove line 4 (\u003Cem\u003EdigitalWrite(GLED,HIGH);\u003C/em\u003E )\u003C/p\u003E\u003Cp\u003E- open Input.ino and remove lines 10-12 (\u003Cem\u003Ecase 1: [...] break;\u003C/em\u003E)\u003C/p\u003E\u003Cp\u003E- still in Input.ino, remove line 16 (\u003Cem\u003EdigitalWrite(GLED,HIGH);\u003C/em\u003E)\u003C/p\u003E\u003Cp\u003E- still in Input.ino, remove line 26 (\u003Cem\u003ELEDSAllOff();\u003C/em\u003E)\u003C/p\u003E\u003Cp\u003E- open KSPIODemo8.ino and replace the whole thing with this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E#include \u0022LedControl.h\u0022\u003Cbr\u003E// Arduino Pin 7 to DIN, 6 to Clk, 5 to LOAD, no.of devices is 1\u003Cbr\u003ELedControl lc=LedControl(7,6,5,1);\u003Cbr\u003E\u003Cbr\u003E//---- START initialization stuff from KSPIO - NOT cleaned by me, you can probably get rid of a lot\u003Cbr\u003E//pins for LEDs\u003Cbr\u003E#define GLED 5\u003Cbr\u003E#define YLED 6\u003Cbr\u003E#define RLED 7\u003Cbr\u003E\u003Cbr\u003E//pins for input\u003Cbr\u003E#define SASPIN 8\u003Cbr\u003E#define RCSPIN 9\u003Cbr\u003E#define CG1PIN 10\u003Cbr\u003E#define THROTTLEPIN 0\u003Cbr\u003E\u003Cbr\u003E#define THROTTLEDB 4 //Throttle axis deadband\u003Cbr\u003E\u003Cbr\u003E#define SAS 7\u003Cbr\u003E#define RCS 6\u003Cbr\u003E#define LIGHTS 5\u003Cbr\u003E#define GEAR 4\u003Cbr\u003E#define BRAKES 3\u003Cbr\u003E#define PRECISION 2\u003Cbr\u003E#define ABORT 1\u003Cbr\u003E#define STAGE 0\u003Cbr\u003E\u003Cbr\u003E//macro \u003Cbr\u003E#define details(name) (uint8_t*)\u0026amp;name,sizeof(name)\u003Cbr\u003E\u003Cbr\u003E//if no message received from KSP for more than 2s, go idle\u003Cbr\u003E#define IDLETIMER 2000\u003Cbr\u003E#define CONTROLREFRESH 25\u003Cbr\u003E\u003Cbr\u003E//warnings\u003Cbr\u003E#define GWARN 9                  //9G Warning\u003Cbr\u003E#define GCAUTION 5               //5G Caution\u003Cbr\u003E#define FUELCAUTION 10.0         //10% Fuel Caution\u003Cbr\u003E#define FUELWARN 5.0             //5% Fuel warning\u003Cbr\u003E\u003Cbr\u003Eunsigned long deadtime, deadtimeOld, controlTime, controlTimeOld;\u003Cbr\u003Eunsigned long now;\u003Cbr\u003E\u003Cbr\u003Eboolean Connected = false;\u003Cbr\u003Ebyte caution = 0, warning = 0, id;\u003Cbr\u003E//---- END initialization stuff from KSPIO - NOT cleaned by me, you can probably get rid of a lot\u003Cbr\u003E\u003Cbr\u003Estruct VesselData\u003Cbr\u003E{\u003Cbr\u003E  byte id;                //1\u003Cbr\u003E  float AP;               //2\u003Cbr\u003E  float PE;               //3\u003Cbr\u003E  float SemiMajorAxis;    //4\u003Cbr\u003E  float SemiMinorAxis;    //5\u003Cbr\u003E  float VVI;              //6\u003Cbr\u003E  float e;                //7\u003Cbr\u003E  float inc;              //8\u003Cbr\u003E  float G;                //9\u003Cbr\u003E  long TAp;               //10\u003Cbr\u003E  long TPe;               //11\u003Cbr\u003E  float TrueAnomaly;      //12\u003Cbr\u003E  float Density;          //13\u003Cbr\u003E  long period;            //14\u003Cbr\u003E  float RAlt;             //15\u003Cbr\u003E  float Alt;              //16\u003Cbr\u003E  float Vsurf;            //17\u003Cbr\u003E  float Lat;              //18\u003Cbr\u003E  float Lon;              //19\u003Cbr\u003E  float LiquidFuelTot;    //20\u003Cbr\u003E  float LiquidFuel;       //21\u003Cbr\u003E  float OxidizerTot;      //22\u003Cbr\u003E  float Oxidizer;         //23\u003Cbr\u003E  float EChargeTot;       //24\u003Cbr\u003E  float ECharge;          //25\u003Cbr\u003E  float MonoPropTot;      //26\u003Cbr\u003E  float MonoProp;         //27\u003Cbr\u003E  float IntakeAirTot;     //28\u003Cbr\u003E  float IntakeAir;        //29\u003Cbr\u003E  float SolidFuelTot;     //30\u003Cbr\u003E  float SolidFuel;        //31\u003Cbr\u003E  float XenonGasTot;      //32\u003Cbr\u003E  float XenonGas;         //33\u003Cbr\u003E  float LiquidFuelTotS;   //34\u003Cbr\u003E  float LiquidFuelS;      //35\u003Cbr\u003E  float OxidizerTotS;     //36\u003Cbr\u003E  float OxidizerS;        //37\u003Cbr\u003E  uint32_t MissionTime;   //38\u003Cbr\u003E  float deltaTime;        //39\u003Cbr\u003E  float VOrbit;           //40\u003Cbr\u003E  uint32_t MNTime;        //41\u003Cbr\u003E  float MNDeltaV;         //42\u003Cbr\u003E  float Pitch;            //43  \u003Cbr\u003E  float Roll;             //44  \u003Cbr\u003E  float Heading;          //45  \u003Cbr\u003E};\u003Cbr\u003E\u003Cbr\u003Estruct HandShakePacket\u003Cbr\u003E{\u003Cbr\u003E  byte id;\u003Cbr\u003E  byte M1;\u003Cbr\u003E  byte M2;\u003Cbr\u003E  byte M3;\u003Cbr\u003E};\u003Cbr\u003E\u003Cbr\u003Estruct ControlPacket {\u003Cbr\u003E  byte id;\u003Cbr\u003E  byte MainControls;                  //SAS RCS Lights Gear Brakes Precision Abort Stage \u003Cbr\u003E  byte Mode;                          //0 = stage, 1 = docking, 2 = map\u003Cbr\u003E  unsigned int ControlGroup;          //control groups 1-10 in 2 bytes\u003Cbr\u003E  byte AdditionalControlByte1;        //other stuff\u003Cbr\u003E  byte AdditionalControlByte2;\u003Cbr\u003E  int Pitch;                          //-1000 -\u0026gt; 1000\u003Cbr\u003E  int Roll;                           //-1000 -\u0026gt; 1000\u003Cbr\u003E  int Yaw;                            //-1000 -\u0026gt; 1000\u003Cbr\u003E  int TX;                             //-1000 -\u0026gt; 1000\u003Cbr\u003E  int TY;                             //-1000 -\u0026gt; 1000\u003Cbr\u003E  int TZ;                             //-1000 -\u0026gt; 1000\u003Cbr\u003E  int Throttle;                       //    0 -\u0026gt; 1000\u003Cbr\u003E};\u003Cbr\u003E\u003Cbr\u003EHandShakePacket HPacket;\u003Cbr\u003EVesselData VData;\u003Cbr\u003EControlPacket CPacket;\u003Cbr\u003E\u003Cbr\u003Elong alt;\u003Cbr\u003Ebyte digit;\u003Cbr\u003E\u003Cbr\u003Evoid setup()\u003Cbr\u003E{\u003Cbr\u003E  // initialize KSPIO - read-only! if you want to control the vessels more is needed\u003Cbr\u003E  Serial.begin(38400);\u003Cbr\u003E  InitTxPackets();\u003Cbr\u003E\u003Cbr\u003E  // Initialize the MAX7219 device\u003Cbr\u003E  lc.shutdown(0,false); // Enable display\u003Cbr\u003E  lc.setIntensity(0,10); // Set brightness level (0 is min, 15 is max)\u003Cbr\u003E  lc.clearDisplay(0); // Clear display register\u003Cbr\u003E} \u003Cbr\u003E\u003Cbr\u003Evoid loop()\u003Cbr\u003E{  \u003Cbr\u003E\u003Cbr\u003E  // update KSP data\u003Cbr\u003E  input();\u003Cbr\u003E\u003Cbr\u003E  // fetch current altitude as long value, not as floating point\u003Cbr\u003E  alt = (long) VData.Alt; // casting to long is needed to be able to fetch individual digits I believe\u003Cbr\u003E\u003Cbr\u003E  // update displays - for loop staring at 1 to make pow() work\u003Cbr\u003E  for(int i = 1; i \u0026lt; 9; i\u002B\u002B) { \u003Cbr\u003E    // this isolates the i-th digit, but note that pow() is expensive. a big ol\u0027 switch(){} is much faster\u003Cbr\u003E    digit = (alt / pow(10, i)) % 10;\u003Cbr\u003E    lc.setDigit(0, i, digit, false);\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  delay(70); // roughly matches the default update frequency of KSPIO\u003Cbr\u003E} \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E- compile and upload to your Arduino\u003C/p\u003E\u003Cp\u003E- open the GameData\\KSPSerialIO\\PluginData\\KSPSerialIO\\config.xml and replace the \u0022DefaultPort\u0022 value with the com port that\u0027s listed in the bottom-right corner of your Arduino IDE.\u003C/p\u003E\u003Cp\u003E- Start KSP\u003C/p\u003E\u003Cp\u003EOnce you put a vessel on the pad you should see a message on the right of your monitor confirming that KSP and the Arduino talk to each other. \u003C/p\u003E\u003Cp\u003EIf that happens you have a slim chance that I didn\u0027t make any mistakes in the code / instructions about KSPIO above and you see your current altitude on your display.\u003C/p\u003E\u003Cp\u003E[disclaimer]It\u0027s Saturday, I\u0027m not exactly sober \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E[/disclaimer]\u003C/p\u003E\u003Cp\u003ENote, if your Arduino is connected to a COM port higher than 9 then you have a chance that KSP won\u0027t find it, even if you configure the .xml correctly. Find the Arduino in the device manager and change the COM port to a single-digit number.\u003C/p\u003E\u003Cp\u003EOn the off-chance *cough* that it doesn\u0027t work right out of the box, the KSPIODemo8.ino I posted above is a mix of your code, Zitronen\u0027s demo and something I have running on an LCD display. I left comments wherever I changed / extended your code. You might find clues there.\u003C/p\u003E\u003Cp\u003EIf not, report any issues here (or PM) and I\u0027ll see what I can do. \u003C/p\u003E\u003Cp\u003EGod speed sailor!\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2015-01-04T00:40:53Z","Content":"\n\u003Cp\u003EThat\u0027s a lot of code for a Saturday \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Thanks for your time, let me know if you want any help on facia panel design/production techniques!\u003C/p\u003E\u003Cp\u003EStill getting an error though... \u003C/p\u003E\u003Cp\u003EKSPIODemo8.ino: In function \u0027void loop()\u0027:\u003C/p\u003E\u003Cp\u003EKSPIODemo8:152: error: invalid operands of types \u0027double\u0027 and \u0027int\u0027 to binary \u0027operator%\u0027\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-04T01:01:17Z","Content":"\n\u003Cp\u003EOh... yeah... \u003C/p\u003E\u003Cp\u003Ereplace line 152 of KSPIODemo8 with this:\u003C/p\u003E\u003Cp\u003E digit = (long) (alt / pow(10, i)) % 10;\u003C/p\u003E\u003Cp\u003EAnd don\u0027t worry, I\u0027m in a polar orbit around Minmus spamming biome EVA reports so... there\u0027s time \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2015-01-04T11:42:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrOnak\u0022 data-cite=\u0022MrOnak\u0022\u003E\u003Cdiv\u003EOh... yeah... \u003Cp\u003Ereplace line 152 of KSPIODemo8 with this:\u003C/p\u003E\u003Cp\u003E digit = (long) (alt / pow(10, i)) % 10;\u003C/p\u003E\u003Cp\u003EAnd don\u0027t worry, I\u0027m in a polar orbit around Minmus spamming biome EVA reports so... there\u0027s time \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs you said, pow() is expensive. In this case, I think you can replace it with a running counter that gets multiplied by 10 on each run:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Evoid loop()\u003Cbr\u003E{  \u003Cbr\u003E\u003Cbr\u003E  // update KSP data\u003Cbr\u003E  input();\u003Cbr\u003E\u003Cbr\u003E  // fetch current altitude as long value, not as floating point\u003Cbr\u003E  alt = (long) VData.Alt; // casting to long is needed to be able to fetch individual digits I believe\u003Cbr\u003E\u003Cbr\u003E  // update displays - for loop staring at 1 to make pow() work\u003Cbr\u003E\u003Cbr\u003E[COLOR=#008000]  int [I]digitPlace = 1;[/I][/COLOR]\u003Cbr\u003E\u003Cbr\u003E  for(int i = 1; i \u0026lt; 9; i\u002B\u002B) { \u003Cbr\u003E    // this isolates the i-th digit, but note that pow() is expensive. a big ol\u0027 switch(){} is much faster\u003Cbr\u003E\u003Cbr\u003E[COLOR=#008000]    [I]digit = (alt / digitPlace) % 10;[/I][/COLOR]\u003Cbr\u003E[COLOR=#ff0000]    //digit = (alt / pow(10, i)) % 10;[/COLOR]\u003Cbr\u003E    lc.setDigit(0, i, digit, false);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E[COLOR=#008000]    [I]digitPlace = digitPlace *10;[/I][/COLOR]\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  delay(70); // roughly matches the default update frequency of KSPIO\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESomething like this, I have not tested it.\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2015-01-04T12:02:47Z","Content":"\n\u003Cp\u003EYep that should work \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThere are many ways to improve from pow()... one is what you posted, another one is to get rid of the for() {} loop altogether and simply have 8 lines of lc.setDigits() \u0022hardwired\u0022.\u003C/p\u003E\u003Cp\u003EAaaanyway, point of the exercise is to get something showing up on Mulbins rig \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2015-01-04T18:53:03Z","Content":"\n\u003Cp\u003EProgress! The sketch now uploads to the Arduino. Com port is working fine and KSPserial is detecting the device but...\u003C/p\u003E\u003Cp\u003EAll that happens is the display shows 0000000 leaving the last digit unlit. I\u0027m assuming from the code that it should be showing Altitude?\u003C/p\u003E\u003Cp\u003ETried both MrOnak\u0027s original version and Freshmeat\u0027s edit (keen to be efficient as will be running 2 daisy chains each with 8 Max chips... so a total 128 digits!), both codes have the same effect.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/FgOcpEy.jpg\u0022 alt=\u0022FgOcpEy.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EAlso, just dug this up from earlier in the thread by Zitronen if it\u0027s any help! (all greek to me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E )\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zitronen\u0022 data-cite=\u0022zitronen\u0022\u003E\u003Cdiv\u003EI also use the LEDControl library katton used. My code for displaying is really simple:\u003Cp\u003ECode:\u003C/p\u003E\u003Cp\u003Evoid write7Segment(byte display, char value[7], byte decimal)\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E for (byte j = 0; j\u0026lt;6; j\u002B\u002B) {\u003C/p\u003E\u003Cp\u003E lc.setChar(display,j,value[j],decimal==j);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EDisplay is the display number if you have daisy chained more\u003C/p\u003E\u003Cp\u003Evalue is what you want to display, it\u0027s char so you can write \u0022-BOOB-\u0022\u003C/p\u003E\u003Cp\u003Edecimal is which digit you want the decimal to show, set it to 10 or some hight number if you don\u0027t want it.\u003C/p\u003E\u003Cp\u003EThis is obviously only for 6 digits, just modify it for more or less digits.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-04T18:55:42Z\u0022 title=\u002201/04/2015 06:55  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 4, 2015\u003C/time\u003E by Mulbin\u003C/strong\u003E\n\u003C/span\u003E\n"}]}