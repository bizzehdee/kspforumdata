{"TopicId":141322,"ForumId":29,"TopicTitle":"Help with trying to make two mods live happily together","CreatedByName":"Kerbonaut257","CreatedById":159462,"CreatedDateTime":"2016-06-06T20:42:34Z","PageNum":1,"Articles":[{"CreatedByName":"Kerbonaut257","CreatedById":159462,"CreatedDateTime":"2016-06-06T20:42:34Z","Content":"\n\u003Cp\u003E\nSo I\u0027ve got two mods that I REALLY would like to use together. Kerbal research and development, and procedural parts. The issue is that they both modify parts in the VAB and if both are installed, procedural parts look like they work in the VAB, but when you launch the craft, the procedural fuel tanks, for instance, only have the default amount of fuel (95/115) even if they\u0027re HUGE.\n\u003C/p\u003E\n\u003Cp\u003E\nNow the nice part is I don\u0027t need the kerbal R\u0026amp;D module on the procedural parts. I\u0027m fine if I don\u0027t upgrade those. But the KR\u0026amp;D module needs to be on all the other, non-procedural parts.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo I appended the cfg file in KRnD to try to remove the KRnD module from procedural parts.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhy doesn\u0027t this remove the KRnDmodule?\n\u003C/p\u003E\n\u003Cp\u003E\n@PART[*]:HAS[MODULE[ProceduralPart]]:FINAL\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0-MODULE,KRnDModule {}\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI even tried removing ALL modules from the liquid procedural tank just to see if it worked, and it didnt.\n\u003C/p\u003E\n\u003Cp\u003E\n@PART[proceduralTankLiquid]\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0-MODULE,* {}\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo what gives? I have no idea how I\u0027m supposed to find the right syntax, the online help for module manager is slim at best\n\u003C/p\u003E\n\u003Cp\u003E\nThanks for the help!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor what it\u0027s worth, this is what KRnD adds to each part:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E@PART[*]:HAS[!MODULE[KRnDModule]]\n{\n\u00A0\u00A0\u00A0 \u00A0MODULE\n\u00A0\u00A0 \u00A0{\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0name = KRnDModule\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// All parts:\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0dryMass_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 10\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0dryMass_costScaleReference\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// the base science cost scales with the original mass, in this case 10 science for 1 ton\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0dryMass_costScale \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0dryMass_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= -0.1\u00A0\u00A0 \u00A0// -10% for the first upgrade\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0dryMass_improvementScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Engines / RCS:\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ispVac_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 15\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ispVac_costScale \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.8\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// the cost increases each level by: scienceCost * costScale ^ level\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ispVac_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.05\u00A0\u00A0 \u00A0// \u002B5% for the first upgrade\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ispVac_improvementScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// the improvement increases each level by: improvement * improvementScale ^ level\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ispAtm_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ispAtm_costScale \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ispAtm_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.05\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ispAtm_improvementScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1\n\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelFlow_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 10\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelFlow_costScale \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelFlow_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelFlow_improvementScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Reaction Wheels:\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0torque_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 5\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0torque_costScale \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.7\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0torque_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.25\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0torque_improvementScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1\n\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Solar Panels:\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0chargeRate_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 10\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0chargeRate_costScale \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.7\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0chargeRate_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.05\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0chargeRate_improvementScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Landing Legs:\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0crashTolerance_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 10\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0crashTolerance_costScale \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.5\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0crashTolerance_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.15\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0crashTolerance_improvementScale\u00A0\u00A0 \u00A0= 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Batteries:\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0batteryCharge_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 10\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0batteryCharge_costScaleReference = 500\u00A0\u00A0 \u00A0// the base science cost scales with the original capacity, in this case 10 science for 500 charge-units\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0batteryCharge_costScale \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.7\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0batteryCharge_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.2\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0batteryCharge_improvementScale\u00A0\u00A0 \u00A0= 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Generators (eg RTG):\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0generatorEfficiency_scienceCost\u00A0\u00A0 \u00A0= 15\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0generatorEfficiency_costScale \u00A0\u00A0 \u00A0= 1.8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0generatorEfficiency_improvement\u00A0\u00A0 \u00A0= 0.1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0generatorEfficiency_improvementScale = 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Converter (eg Ore-Converter or Fuel Cells):\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0converterEfficiency_scienceCost\u00A0\u00A0 \u00A0= 15\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0converterEfficiency_costScale \u00A0\u00A0 \u00A0= 1.8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0converterEfficiency_improvement\u00A0\u00A0 \u00A0= 0.1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0converterEfficiency_improvementScale = 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Parachute Strength (cut and deployment speeds):\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0parachuteStrength_scienceCost\u00A0\u00A0 \u00A0= 10\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0parachuteStrength_costScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0parachuteStrength_improvement\u00A0\u00A0 \u00A0= 0.3\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0parachuteStrength_improvementScale = 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Max Internal- and Skin-Temperature (for withstanding re-entry heat):\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0maxTemperature_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 5\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0maxTemperature_costScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0maxTemperature_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.2\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0maxTemperature_improvementScale\u00A0\u00A0 \u00A0= 1\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0// Fuel Capacity (amount of fuel a tank can hold):\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelCapacity_scienceCost\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 5\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelCapacity_costScaleReference\u00A0\u00A0 \u00A0= 1000\u00A0\u00A0 \u00A0// the base science cost scales with the original capacity of a tank (sum of all fuels), in this case 5 science for 1000 fuel units\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelCapacity_costScale\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 1.8\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelCapacity_improvement\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0= 0.05\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0fuelCapacity_improvementScale\u00A0\u00A0 \u00A0= 1\n\u00A0\u00A0 \u00A0}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-06T20:44:08Z\u0022 title=\u002206/06/2016 08:44  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 6, 2016\u003C/time\u003E by Kerbonaut257\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Aelfhe1m","CreatedById":142910,"CreatedDateTime":"2016-06-06T21:15:32Z","Content":"\n\u003Cp\u003E\nTry:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n@PART[*]:HAS[MODULE[ProceduralPart],MODULE[KRnDModule]]:FINAL\n{\n    !MODULE[KRnDModule] {}\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}