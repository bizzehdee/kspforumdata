{"TopicId":7542,"ForumId":29,"TopicTitle":"The official unoffical \u0026quot;help a fellow plugin developer\u0026quot; thread","CreatedByName":"Cephei","CreatedById":2555,"CreatedDateTime":"2012-03-04T10:02:40Z","PageNum":90,"Articles":[{"CreatedByName":"PT","CreatedById":154223,"CreatedDateTime":"2016-07-29T10:39:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222695827\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469785967\u0022 data-ipsquote-userid=\u002228891\u0022 data-ipsquote-username=\u0022wile1411\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, wile1411 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf you do have a proof of concept bit of code, it\u0027d be great to have a look.\n\u003C/p\u003E\n\u003Cp\u003E\nIs all the clean up necessary only if you want to keep a tree intact when pruning from the middle? I figures with craft always being broken via various impacts, that killing off a parts should be within scope of the default process.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m looking to use a part I\u0027ve built and add a\u00A0part to that known piece\u00A0as an \u0022end node\u0022. Depending on when the player does down the track, I plan to remove it later using the part.die command. I was hoping with the information I already know about my parts location and orientation, spawning in a part attached to it could be a matter of working out the location if reference to the known part rather than from the root part.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPart tree in game is almost proper tree. You have Part-\u0026gt;AttachmentNode-\u0026gt;Part, no id\u0027s at all. However editing this tree is horror from what I saw in \u003Cabbr title=\u0022Kerbal Attachment System (mod)\u0022\u003EKAS\u003C/abbr\u003E/\u003Cabbr title=\u0022Kerbal Inventory System (mod)\u0022\u003EKIS\u003C/abbr\u003E code. Check out \u003Cspan style=\u0022color:rgb(121,93,163);font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:20px;text-indent:0px;text-transform:none;white-space:pre;word-spacing:0px;float:none;background-color:rgb(255,255,255);\u0022\u003ECreatePart (line 306) \u003C/span\u003Ein \u003Ca href=\u0022https://github.com/KospY/KIS/blob/master/Plugins/Source/KIS_Shared.cs\u0022 rel=\u0022external nofollow\u0022\u003EKIS_Sharded.cs\u003C/a\u003E. It appears \u003Cabbr title=\u0022Kerbal Inventory System (mod)\u0022\u003EKIS\u003C/abbr\u003E is chasing targeted attachment node with new part until game allows coupling to happen. Part tree will get more and more convulted with each docking, decoupling or \u003Cabbr title=\u0022Kerbal Attachment System (mod)\u0022\u003EKAS\u003C/abbr\u003E/\u003Cabbr title=\u0022Kerbal Inventory System (mod)\u0022\u003EKIS\u003C/abbr\u003E operation. And then you risk awakening some sort of kraken when physics kicks in again for\u00A0changed vessel.\n\u003C/p\u003E\n\u003Cp\u003E\nIn .sfs save file part tree is flattened to list, just open it in notepad and search for your VESSEL by name ( in my lib it is root.Find(\u0022GAME\\\\FLIGHTSTATE\u0022).Select(\u0022VESSEL\u0022,\u0022name\u0022,\u0022\u0026lt;vessel name\u0022)[0].Select(\u0022PART\u0022), or you can just use LINQ instead of those ugly constructs, but LINQ/foreach in Mono leaves tons of garbage in memory\u00A0). In PART entries you have \u0022parent = \u0026lt;parent_id\u0026gt;\u0022 , \u0022attN = \u0026lt;node name\u0026gt;, \u0026lt;other_part_id\u0026gt;\u0022 and \u0022surfaceN = surface, \u0026lt;parent_id\u0026gt;\u0022 (I forgot exact keys for surface attachment). \u0022parent\u0022 is most important, required to build proper part tree when save is loaded, with incorrect values you get uncontrollable rocket. Proper values \u0022attN\u0022 are needed only\u00A0for rocket to retain its shape.\u00A0With incorrect part id in \u0022attN\u0022 \u00A0I got, for example, quad-symmetry radial Thuds to decouple from rocket (zero force) and sit all in same spot (in place where I clicked in \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E).\n\u003C/p\u003E\n\u003Cp\u003E\nCleaning will always be necessary when editing .sfs, because removing part in middle changes id\u0027s of every part after it. So you need to update parent id in children and its attachment nodes as well as child id in parent attachment nodes. Not the best format I had to work with.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere is problem with finding part you clicked on in .sfs. There is no unique id to use, we would need to first add custom field with our own unique id\u00A0to part you clicked, then find it in .sfs. From what i understand it should be doable. If all else fails, it could be done by custom resource (hide id in amount)..\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll upload my code later today, when I\u0027ll be at my computer.\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-07-29T12:41:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222695732\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469777151\u0022 data-ipsquote-userid=\u0022154223\u0022 data-ipsquote-username=\u0022PT\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, PT said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI picked different approach in my project.\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nSave game\n\u003C/li\u003E\n\u003Cli\u003E\nEdit .sfs\n\u003C/li\u003E\n\u003Cli\u003E\nSave modified .sfs\n\u003C/li\u003E\n\u003Cli\u003E\nLoad game\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\n(mods can save and load saves)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n*cringe*\n\u003C/p\u003E\n\u003Cp\u003E\nDecoupling is easy. ( part.decouple(0)\u00A0 or part.parent.decouple(0) depending on where you want to cut). Doing it by hand is a bit more complex but not that much and has been done in other mods.\n\u003C/p\u003E\n\u003Cp\u003E\nThere are many mods that does it and many other that adds part (\u003Cabbr title=\u0022Kerbal Inventory System (mod)\u0022\u003EKIS\u003C/abbr\u003E and Extraplanetary-Launchpads being the two that do the most).\n\u003C/p\u003E\n\u003Cp\u003E\nSo why use a complex solution that may break horribly with future update and could easily corrupt save ???\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"PT","CreatedById":154223,"CreatedDateTime":"2016-07-29T13:04:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222695934\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469796079\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 minutes ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n*cringe*\n\u003C/p\u003E\n\u003Cp\u003E\nDecoupling is easy. ( part.decouple(0)\u00A0 or part.parent.decouple(0) depending on where you want to cut). Doing it by hand is a bit more complex but not that much and has been done in other mods.\n\u003C/p\u003E\n\u003Cp\u003E\nThere are many mods that does it and many other that adds part (\u003Cabbr title=\u0022Kerbal Inventory System (mod)\u0022\u003E\u003Cabbr title=\u0022Kerbal Inventory System (mod)\u0022\u003EKIS\u003C/abbr\u003E\u003C/abbr\u003E and Extraplanetary-Launchpads being the two that do the most).\n\u003C/p\u003E\n\u003Cp\u003E\nSo why use a complex solution that may break horribly with future update and could easily corrupt save ???\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI do not want to decouple. I want to remove many parts in many places. And them\u00A0add parts\u00A0back again when\u00A0I will feel like doing so.\n\u003C/p\u003E\n\u003Cp\u003E\nAs I wrote earlier, I did read \u003Cabbr title=\u0022Kerbal Inventory System (mod)\u0022\u003EKIS\u003C/abbr\u003E sources where adding parts is complex\u00A0solution,\u00A0working in complex and weird api of KSP intestines, where child is not certain to be child of its parent.\n\u003C/p\u003E\n\u003Cp\u003E\nHaven\u0027t thought about stealing ideas from launchpad mod.\n\u003C/p\u003E\n"},{"CreatedByName":"cyberKerb","CreatedById":28891,"CreatedDateTime":"2016-08-01T01:24:41Z","Content":"\n\u003Cp\u003E\nI\u0027m looking to programmatically\u00A0identify the celestial body (CB) a science experiment is related to. Note, I have the Experiment data first - the CB isn\u0027t known in this context. Ie the player isn\u0027t landed on the body the experiment came from.\n\u003C/p\u003E\n\u003Cp\u003E\nLooking at the resulting data object from ModuleScienceContainer,\u00A0I can see there is a SubjectID.\u00A0From that I found the function that specifically uses subjectID to get some information about the science status of a given\u00A0experiment. However I can\u0027t find any direct reference to which celestial body\u00A0it is related to.\u003Cbr\u003E\nExample:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003ESubjectID = \u0022surfaceSample@KerbinSrfLandedLaunchPad\u0022\nScienceSubject scisub;\nscisub =\u00A0ResearchAndDevelopment.GetSubjectByID(subjectID);\nprint(scisub.title);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis outputs the title of the experiment to the debug screen - in the example this would be: \u0022Surface Sample from LaunchPad\u0022 but does contain the name as a property or within the text. There is also no property for \u0022body\u0022\u00A0that I found.\n\u003C/p\u003E\n\u003Cp\u003E\nOnly thing I did see was\u00A0ScienceSubject.IsFromBody(cb) - Am I safe to say there is no direct reference and it has to be looked up via this method anytime I want the CB info/name?\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nReceived an answer from \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/159391-shotgunninja/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022159391\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/159391-shotgunninja/\u0022 rel=\u0022\u0022\u003E@ShotgunNinja\u003C/a\u003E\u00A0via msg (Thank you!) - the answer was surprisingly simple - even how stock does it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022core\u0022 data-ipsquote-contentclass=\u0022core_Messenger_Conversation\u0022 data-ipsquote-contentcommentid=\u0022172788\u0022 data-ipsquote-contentid=\u0022122762\u0022 data-ipsquote-contenttype=\u0022messaging\u0022 data-ipsquote-timestamp=\u00221471570629\u0022 data-ipsquote-userid=\u0022159391\u0022 data-ipsquote-username=\u0022ShotgunNinja\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n20 hours ago, ShotgunNinja said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe science system is a bit of a mess. The key to understand it is the \u0027subject_id\u0027. You ask \u0022where is the body stored?\u0022 and the answer is \u0022the subject_id\u0022. If you\u0027d ask \u0022where is the situation stored?\u0022 the answer will be the same.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, how does the stock game recognize when some science data is from a particular body? What is\u00A0ScienceSubject.IsFromBody(db) doing?\u00A0A substring search like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EIsFromBody\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003ECelestialBody\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cb\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EContains\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecb\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EbodyName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-19T21:54:18Z\u0022 title=\u002208/19/2016 09:54  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 19, 2016\u003C/time\u003E by wile1411\u003C/strong\u003E\n\u003Cbr\u003Eadded answer that was msg\u0026#039;ed to me\n\u003C/span\u003E\n"},{"CreatedByName":"RocketSquid","CreatedById":152665,"CreatedDateTime":"2016-08-01T16:39:59Z","Content":"\n\u003Cp\u003E\nIs there any way to alter the range of docking port magnetics?\n\u003C/p\u003E\n\u003Cp\u003E\nPlease quote or mention me if you answer.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-01T16:40:24Z\u0022 title=\u002208/01/2016 04:40  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 1, 2016\u003C/time\u003E by RocketSquid\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-01T17:07:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222700252\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470069599\u0022 data-ipsquote-userid=\u0022152665\u0022 data-ipsquote-username=\u0022RocketSquid\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n26 minutes ago, RocketSquid said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIs there any way to alter the range of docking port magnetics?\n\u003C/p\u003E\n\u003Cp\u003E\nPlease quote or mention me if you answer.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, there\u0027s a field acquireRange on ModuleDockingNode which defaults to 0.5\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t think this strictly has to do with plugin development though\n\u003C/p\u003E\n"},{"CreatedByName":"RocketSquid","CreatedById":152665,"CreatedDateTime":"2016-08-01T17:50:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222700277\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470071272\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n42 minutes ago, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYes, there\u0027s a field acquireRange on ModuleDockingNode which defaults to 0.5\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t think this strictly has to do with plugin development though\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m working on a plugin for docking port tractor beams.\n\u003C/p\u003E\n"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2016-08-02T18:31:56Z","Content":"\n\u003Cp\u003E\nGetting an engine normalized thrust.\n\u003C/p\u003E\n\u003Cp\u003E\nI get the engine this way:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E                    if (part.Modules.OfType\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleEnginesFX\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E().Count() == 0)\n                    {\n                        if (part.Modules.OfType\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleEngines\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E().Count() == 0)\n                        {\n                            return;\n                        }\n                        else\n                        {\n                            myEngine = part.Modules.OfType\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleEngines\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E().FirstOrDefault();\n                        }\n                    }\n                    else\n                    {\n                            myEngine = part.Modules.OfType\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleEnginesFX\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E().FirstOrDefault();\n                    }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWhen I do this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E                        MPLog.Writelog(\u0022[Maritime Pack] (aniEngine) normalized Thrust \u0022 \u002B myEngine.normalizedThrustOutput);\n                        MPLog.Writelog(\u0022[Maritime Pack] (aniEngine) normalized Output \u0022 \u002B myEngine.normalizedOutput);\n                        MPLog.Writelog(\u0022[Maritime Pack] (aniEngine) Current Thrust \u0022 \u002B myEngine.finalThrust);\n                        MPLog.Writelog(\u0022[Maritime Pack] (aniEngine) Max Thrust \u0022 \u002B myEngine.GetMaxThrust());\n                        MPLog.Writelog(\u0022[Maritime Pack] (aniEngine) Current Throttle \u0022 \u002B myEngine.currentThrottle);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nEverything except GetMaxThrust and currentThrottle constantly read 0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m hoping to get a normalizedThrust, which I assume reads 0-1.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-02T18:32:12Z\u0022 title=\u002208/02/2016 06:32  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 2, 2016\u003C/time\u003E by Fengist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-02T18:45:29Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78435-fengist/\u0026amp;do=hovercard\u0022 data-mentionid=\u002278435\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78435-fengist/\u0022 rel=\u0022\u0022\u003E@Fengist\u003C/a\u003E\u00A0not sure about your issue, but you could simplify that code quite a bit. \u00A0part.Modules.OfType\u0026lt;ModuleEngines\u0026gt; will give you both ModuleEngines and ModuleEnginesFX, since ModuleEnginesFX derives from ModuleEngines. \u00A0Also probably easier to check whether FirstOrDefault gave you anything rather than looking at the count as well. \u00A0Also, part has a method for doing this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EmyEngine = part.FindModuleImplementing\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleEngines\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n\nif (myEngine == null) return;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2016-08-02T18:53:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222701794\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470163529\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78435-fengist/\u0026amp;do=hovercard\u0022 data-mentionid=\u002278435\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78435-fengist/\u0022 rel=\u0022\u0022\u003E@Fengist\u003C/a\u003E\u00A0not sure about your issue, but you could simplify that code quite a bit. \u00A0part.Modules.OfType\u0026lt;ModuleEngines\u0026gt; will give you both ModuleEngines and ModuleEnginesFX, since ModuleEnginesFX derives from ModuleEngines. \u00A0Also probably easier to check whether FirstOrDefault gave you anything rather than looking at the count as well. \u00A0Also, part has a method for doing this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003EmyEngine = part.FindModuleImplementing\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleEngines\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n\nif (myEngine == null) return;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYea, I was trying different things to find out why I wasn\u0027t getting data from the engine. \u00A0That\u0027s pretty much how I originally had it, assuming engine would inherit the data from engineFX\n\u003C/p\u003E\n\u003Cp\u003E\nI know why now, my own utter stupidity.\n\u003C/p\u003E\n\u003Cp\u003E\nI was doing this just before the log output:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E(partType == \u0022Engine\u0022 \u0026amp;\u0026amp; !myEngine.EngineIgnited)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSo, the only time it showed any data was when the engine was shut down.\n\u003C/p\u003E\n\u003Cp\u003E\nDuh!\n\u003C/p\u003E\n\u003Cp\u003E\nThanks \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"RocketSquid","CreatedById":152665,"CreatedDateTime":"2016-08-05T16:53:25Z","Content":"\n\u003Cp\u003E\nWhat version of unity does KSP currently use?\n\u003C/p\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-08-05T19:11:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222705802\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470416005\u0022 data-ipsquote-userid=\u0022152665\u0022 data-ipsquote-username=\u0022RocketSquid\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, RocketSquid said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat version of unity does KSP currently use?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat depends on what version of KSP you are referring to.\u003Cbr\u003E\nIf you go to the output_log.txt you will find a line like this:\u003Cbr\u003E\nInitialize engine version: 5.2.4f1\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nThat is the Unity version number (in this case KSP1.1.3)\n\u003C/p\u003E\n"},{"CreatedByName":"Tralfagar","CreatedById":150801,"CreatedDateTime":"2016-08-08T00:15:02Z","Content":"\n\u003Cp\u003E\nI have a method in a plugin I\u0027m working on that will go through a list of vessels and return a list of vessels that implement my plugin. \u00A0I\u0027ve been trying to troubleshoot the problem and it looks like the list is not returning correctly. \u00A0The list as Start() sees it has 0 elements, instead of the number of ships (2). \u00A0I\u0027ve added some log writes at different points.\u00A0 The code I am running:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Enamespace \u003C/span\u003E\u003Cspan\u003ECivilianPopulationRevamp\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan\u003EKSPAddon\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EKSPAddon\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EStartup\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFlight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBackgroundGrowth\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECivilianPopulationRegulator\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E listCivilianVessels \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EStart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EdebuggingClass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmodName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Running OnStart in BackgroundGrowth!\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E listOfVessels \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFlightGlobals\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      listCivilianVessels \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E getCivilianVessels \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ElistOfVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EdebuggingClass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmodName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E listCivilianVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECount\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civvieVessel in listCivilianVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EdebuggingClass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmodName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civvieVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EvesselName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end start\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \n      \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E getCivilianVessels \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E listOfVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      bool hasCivModule \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//used to flag whether or not my plugin is on that craft\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianDockList \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//list of civilian vessels to be returned\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n      foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sumVes in listOfVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        hasCivModule \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EsumVes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EisActiveVessel \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EsumVes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eloaded\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n          \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partSnapshots \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sumVes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprotoVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprotoPartSnapshots\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n          foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partSnapshot in partSnapshots\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E protoPartModules \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E partSnapshot\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Emodules\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E protoPartModule in protoPartModules\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n              \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprotoPartModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmoduleName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022CivilianDockGrowth\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                hasCivModule \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n              \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end if plugin name matches\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end foreach ProtoPartModuleSnapshot\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n          \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end foreach protoPartSnapshot\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end if vessel active\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EhasCivModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n          listCivilianVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAdd\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EsumVes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n          \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EdebuggingClass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmodName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Added \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sumVes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EvesselName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 to civilian list, implementing CivilianDockGrowth\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end foreach Vessel\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianDockList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end getCivilianVessels\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end class\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//end namespace\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis returns the following in the KSP log:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E[LOG 17:08:25.604] [CivilianPop Revamp]Running OnStart in BackgroundGrowth!\n[LOG 17:08:25.605] [CivilianPop Revamp]Added Untitled Space Craft to civilian list, implementing CivilianDockGrowth\n[LOG 17:08:25.605] [CivilianPop Revamp]Added ActiveTestVessel1 to civilian list, implementing CivilianDockGrowth\n[LOG 17:08:25.605] [CivilianPop Revamp]0\n[LOG 17:08:25.615] [CivilianPop Revamp]civieDock (Untitled Space Craft) is running OnStart()!\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNote: \u00A0The last line is from another portion of code, meaning that the above Start() method has finished executing. \u00A0Has anyone seen something similar to this? \u00A0The searching I\u0027ve done says that the above (return variable_name) is the correct way to return an object. \u00A0Is there something I\u0027m missing (like a need to return by reference)?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-08T00:17:35Z\u0022 title=\u002208/08/2016 12:17  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 8, 2016\u003C/time\u003E by Tralfagar\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-08-08T07:59:05Z","Content":"\n\u003Cp\u003E\nYou Add to listCivilianVessels but you return civilianDockList.\n\u003C/p\u003E\n"},{"CreatedByName":"Cramblesquash","CreatedById":166701,"CreatedDateTime":"2016-08-14T09:34:09Z","Content":"\n\u003Cp\u003E\nIs it possible to make an opaque Gui like the KSPedia, or Astronaut complex Gui? I want it to be open and closable via the appLauncher from the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E. I thought it would be possible with this new KSPAsset system, but I just can\u0027t get my head round how to do it, and from what I\u0027ve read, it\u0027s not easy to get gui\u0027s made in this way to be dynamic, which is something I\u0027m looking for. In an ideal world, I\u0027d actually like to add it to the Administration building as another tab, but I\u0027m guessing this is impossible, or more effort that it\u0027s worth.\n\u003C/p\u003E\n\u003Cp\u003E\nAny help would be greatly appreciated.\n\u003C/p\u003E\n"},{"CreatedByName":"Tralfagar","CreatedById":150801,"CreatedDateTime":"2016-08-14T20:13:00Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57146-sarbian/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257146\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57146-sarbian/\u0022 rel=\u0022\u0022\u003E@sarbian\u003C/a\u003E\u00A0Thank you! \u00A0Now I feel like a real dunce.\u003Cimg alt=\u0022:confused:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 title=\u0022:confused:\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nLooking back, I\u0027m trying to make my code more readable/less resource intensive. \u00A0But\u00A0I\u0027m having trouble figuring out if what I want to do is possible in C#. \u00A0It probably is, but I don\u0027t know the technical term for it.\n\u003C/p\u003E\n\u003Cp\u003E\nRight now, I am going through a list of each inactive vessel and selecting each that has one of my part modules. \u00A0Form there, I cycle through each part to find the specific part implementing my mod. \u00A0Then I use the part snapshot (another array nested in the above part) to obtain the resourceSnapshot. \u00A0This is a lot of lists to go through in order to find something that should not be changing much (this section only runs on vessels that are unloaded).\u00A0 I would like to save that memory location in a new class\u00A0so I can directly modify it without having to set up several nested\u00A0foreach loops. \u00A0In C/C\u002B\u002B, I\u0027d use pointers to keep that information and bundle them in a struct. \u00A0From there, if I want to change the value, I need only pass the pointer a new value.\n\u003C/p\u003E\n\u003Cp\u003E\nSo instead of this in the start AND update section of code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eforeach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianVessel in listCivilianVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  bool appliedVesselChanges \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianPartSnapshots \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprotoVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprotoPartSnapshots\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EProtoPartSnapshot\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianPartSnapshot in civilianPartSnapshots\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EProtoPartModuleSnapshot\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianPartSnapshotModule in civilianPartSnapshot\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Emodules\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EdebuggingClass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmodName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianPartSnapshotModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmoduleName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcivilianPartSnapshotModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmoduleName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022populationGrowthModifier\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EappliedVesselChanges\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianResourceList \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianPartSnapshot\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eresources\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EProtoPartResourceSnapshot\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E civilianResource in civilianResourceList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n          \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//apply logic to increment resources here\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n          appliedVesselChanges \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe above would be run once to collect information and log it into an array of classes\u00A0My code could look like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic class myBackgroundClass\n{\n  List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UnloadedVesselClass\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E listUnloadedVessels = new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;UnloadedVesselClass\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n\n  OnStart(startState state)\n  {\n    //apply logic to find appropriate vessel resource, as above\n    var snapshotResourceAmount//one of the variables I want to edit within the snapshot\n    var newResourceInfo = new UnloadedVesselClass(snapshotResourceAmount);\n    listUnloadedVessels.Add(newResourceInfo);\n  }\n  \n  OnUpdate()\n  {\n    foreach(civilianVessel in listUnloadedVessels){\n    //Apply logic to increment resources here; i.e. civilianVesel.resourceAmount\u002B\u002B\n  }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI\u0027ve tried using the \u0022ref\u0022 keyword, but it does not seem to work with Lists. \u00A0When I try using an intermediate variable, I\u00A0store the location of *that* variable instead of the member of the list. \u00A0Does anyone have any ideas?\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-08-14T22:10:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222716617\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471167249\u0022 data-ipsquote-userid=\u0022166701\u0022 data-ipsquote-username=\u0022Cramblesquash\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, Cramblesquash said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIs it possible to make an opaque Gui like the KSPedia, or Astronaut complex Gui? I want it to be open and closable via the appLauncher from the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003E\u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E\u003C/abbr\u003E. I thought it would be possible with this new KSPAsset system, but I just can\u0027t get my head round how to do it, and from what I\u0027ve read, it\u0027s not easy to get gui\u0027s made in this way to be dynamic, which is something I\u0027m looking for. In an ideal world, I\u0027d actually like to add it to the Administration building as another tab, but I\u0027m guessing this is impossible, or more effort that it\u0027s worth.\n\u003C/p\u003E\n\u003Cp\u003E\nAny help would be greatly appreciated.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt is possible but as you said it is not easy. As for the \u0022not easy to be dynamic\u0022 part it depends what you call\u00A0dynamics. If it s mostly button and text you re fine. Design your UI, use different names for each item and then you can load it as a bundle (see \u003Ca href=\u0022https://github.com/sarbian/GCMonitor/blob/master/GCMonitor.cs#L1035-L1245\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E for inspiration)\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-08-15T03:26:05Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222717267\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471212603\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt is possible but as you said it is not easy. As for the \u0022not easy to be dynamic\u0022 part it depends what you call\u00A0dynamics. If it s mostly button and text you re fine. Design your UI, use different names for each item and then you can load it as a bundle (see \u003Ca href=\u0022https://github.com/sarbian/GCMonitor/blob/master/GCMonitor.cs#L1035-L1245\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E for inspiration)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAs Sarbian says, if dynamic is just adding set piece elements at run time it\u0027s relatively easy to do (you just need multiple prefabs). I wouldn\u0027t neccesarily limit that to buttons and text either. It\u0027s all just a matter of finding the correct component (which Unity provides plenty of options to do) and setting it up the way you want / adding applicable callbacks.\n\u003C/p\u003E\n\u003Cp\u003E\ntl;dr: Identify repeated components, make prefabs of them (I make a class for each prefab to make the C# side obvious)\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2016-08-15T06:26:04Z","Content":"\n\u003Cp\u003E\nWhere are the sound effects currently used by the game? I figured it\u0027d be easier to change those files than the configs of every engine mod I have, but I can\u0027t find them. Are they accessible?\n\u003C/p\u003E\n"},{"CreatedByName":"cyberKerb","CreatedById":28891,"CreatedDateTime":"2016-08-15T06:56:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222717585\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471242364\u0022 data-ipsquote-userid=\u0022162845\u0022 data-ipsquote-username=\u0022String Witch\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n29 minutes ago, String Witch said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhere are the sound effects currently used by the game? I figured it\u0027d be easier to change those files than the configs of every engine mod I have, but I can\u0027t find them. Are they accessible?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nyou mean the files located here?\u00A0GameData\\Squad\\Sounds\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-15T06:56:10Z\u0022 title=\u002208/15/2016 06:56  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 15, 2016\u003C/time\u003E by wile1411\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hab136","CreatedById":75997,"CreatedDateTime":"2016-08-15T09:34:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222717130\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471205580\u0022 data-ipsquote-userid=\u0022150801\u0022 data-ipsquote-username=\u0022Tralfagar\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, Tralfagar said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022 style=\u0022background-image:none;background-position:0% 0%;background-repeat:repeat;\u0022\u003E\n\u003Cp\u003E\nI\u0027ve tried using the \u0022ref\u0022 keyword, but it does not seem to work with Lists. \u00A0When I try using an intermediate variable, I\u00A0store the location of *that* variable instead of the member of the list. \u00A0Does anyone have any ideas?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf I understand what you\u0027re trying to do, you\u0027re trying real hard to get something you already have. \u00A0They\u0027re already pointers.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example if you do:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nList\u0026lt;PartResource\u0026gt; myres;\n \nmyres.Add(vessel.parts[7].Resources[0])\n\nmyres[0].amount\u002B=1;\u003C/pre\u003E\n\u003Cp\u003E\nThen myres[0]\u00A0isn\u0027t a \u003Cem\u003Ecopy\u003C/em\u003E of the original resource; it \u003Cem\u003Eis\u003C/em\u003E the original resource. \u00A0In C terms, it\u0027s\u00A0already a pointer to the original resource. \u00A0If you modify myres[0].amount, you\u0027re really modifying vessel.parts[7].Resources[0].amount.\n\u003C/p\u003E\n\u003Cp\u003E\nFor a simple\u00A0example, SafeChute gathers all the part modules from a ship that are parachutes, and then saves them in a List, and then accesses that List to read values from the original part:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/henrybauer/SafeChute/blob/master/SafeChute.cs#L113-L119\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/henrybauer/SafeChute/blob/master/SafeChute.cs#L113-L119\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nCloser to what you want to do, TacFuelBalancer\u0027s fuel controller builds a \u0022map\u0022 of the ship and then caches it. \u00A0It then accesses the parts (and their resources) through that map:\n\u003C/p\u003E\n\u003Cp\u003E\nMap building:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/thewebbooth/TacFuelBalancer/blob/master/Source/FuelBalanceController.cs#L409-L562\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/thewebbooth/TacFuelBalancer/blob/master/Source/FuelBalanceController.cs#L409-L562\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAccessing the real parts via the map:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/thewebbooth/TacFuelBalancer/blob/master/Source/FuelBalanceController.cs#L598-L617\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/thewebbooth/TacFuelBalancer/blob/master/Source/FuelBalanceController.cs#L598-L617\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2016-08-15T16:05:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222717594\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471244161\u0022 data-ipsquote-userid=\u002228891\u0022 data-ipsquote-username=\u0022wile1411\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, wile1411 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nyou mean the files located here?\u00A0GameData\\Squad\\Sounds\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNo; those files aren\u0027t actually used by the current build of the game. A number of filenames referenced in engine configs aren\u0027t in that folder, besides.\n\u003C/p\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-08-15T18:28:32Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222717929\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471277124\u0022 data-ipsquote-userid=\u0022162845\u0022 data-ipsquote-username=\u0022String Witch\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, String Witch said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNo; those files aren\u0027t actually used by the current build of the game. A number of filenames referenced in engine configs aren\u0027t in that folder, besides.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can\u0027t as the sounds are distributed as part of the Unity deployed game package. They are not individual files. The EULA prohibits you from touching them. To do what you want to do your only option IS to \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E the sounds out of config files and replace them with others that way.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-15T18:29:55Z\u0022 title=\u002208/15/2016 06:29  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 15, 2016\u003C/time\u003E by JPLRepo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Cramblesquash","CreatedById":166701,"CreatedDateTime":"2016-08-15T19:45:56Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222717267\u0022 data-ipsquote-contentid=\u00227542\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471212603\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt is possible but as you said it is not easy. As for the \u0022not easy to be dynamic\u0022 part it depends what you call\u00A0dynamics. If it s mostly button and text you re fine. Design your UI, use different names for each item and then you can load it as a bundle (see \u003Ca href=\u0022https://github.com/sarbian/GCMonitor/blob/master/GCMonitor.cs#L1035-L1245\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E for inspiration)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHmmm ok. I would definitely want some of the text to change, certainly at the press of a button, and possibly in real time, and possibly plot a graph (particularly if someone has a neat way of drawing graphs!). I\u0027ll have a go with using the asset bundle for now, but give up on that pretty soon if it gives me more grief. My understanding is I can kinda copy old GUI tutorials, just with the re-factoring outlined in the 1.1 conversion thread? Thanks for your help\n\u003C/p\u003E\n"},{"CreatedByName":"Malah","CreatedById":96644,"CreatedDateTime":"2016-08-19T15:19:35Z","Content":"\n\u003Cp\u003E\nHello, Is there a way to keep a coroutine active when the game is paused (with something like FlightDriver.setPause(True,True) or in the RnD building) ?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve tried this...\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing System.Collections;\nusing UnityEngine;\n\nnamespace corTest {\n\t[KSPAddon (KSPAddon.Startup.EveryScene, false)]\n\tpublic class corTest : MonoBehaviour {\n\t\tvoid Start() {\n\t\t\tStartCoroutine (test ());\n\t\t\tGameEvents.onGamePause.Add (gamePause);\n\t\t\tGameEvents.onGameUnpause.Add (gameUnPause);\n\t\t\tDebug.Log (\u0022Start\u0022);\n\t\t}\n\t\tvoid OnDestroy() {\n\t\t\tStopCoroutine (test ());\n\t\t\tGameEvents.onGamePause.Remove (gamePause);\n\t\t\tGameEvents.onGameUnpause.Remove (gameUnPause);\n\t\t\tDebug.Log (\u0022OnDestroy\u0022);\n\t\t}\n\t\tIEnumerator test() {\n\t\t\tint i = 0;\n\t\t\twhile (true) {\n\t\t\t\tDebug.Log (\u0022wait ... \u0022 \u002B i);\n\t\t\t\ti\u002B\u002B;\n\t\t\t\tyield return new WaitForSeconds (1);\n\t\t\t}\n\t\t}\n\t\tvoid gamePause() {\n\t\t\tDebug.Log (\u0022gamePause\u0022);\n\t\t}\n\t\tvoid gameUnPause() {\n\t\t\tDebug.Log (\u0022gameUnPause\u0022);\n\t\t}\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAnd the result is:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Ewait ... 1\nwait ... 2\nwait ... 3\nwait ... 4\nwait ... 5\nwait ... 6\nwait ... 7\ngamePause\ngameUnPause\nwait ... 8\nwait ... 9\nwait ... 10\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI just want to keep counting on my coroutine without the use of Update(). Thanks !\n\u003C/p\u003E\n"}]}