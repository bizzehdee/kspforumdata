{"TopicId":117577,"ForumId":36,"TopicTitle":"Part Reconstructinator Mod - Convert your useless Mun debris into a base!","CreatedByName":"Hexicube","CreatedById":109496,"CreatedDateTime":"2015-08-04T01:43:32Z","PageNum":1,"Articles":[{"CreatedByName":"Hexicube","CreatedById":109496,"CreatedDateTime":"2015-08-04T01:43:32Z","Content":"\n\u003Cp\u003EFinally managed to create a fully functioning prototype of my mod, I now only need to create nodes on most stock parts (some parts will not be disassemble-able), create more components (only metal/solar so far, both sharing the same model), and create the part itself (module was tacked onto another part).\u003C/p\u003E\u003Cp\u003EAlso, for those who have seen it, I\u0027m aware this is similar to OSE-Workshop. I had a chat with the author of that mod and they felt that, at the current time, making parts break down into multiple components was too much hassle. I created this primarily as an alternative for those who didn\u0027t want to be able to break down girders to create an ion probe, which would be an alternative that I want to use.\u003C/p\u003E\u003Cp\u003EThe basic premise is this:\u003C/p\u003E\u003Cp\u003E- Attach a Part Reconstructinator and some KIS containers to a vessel\u003C/p\u003E\u003Cp\u003E- Launch the vessel INTO SPACE (or wherever you need it, really)\u003C/p\u003E\u003Cp\u003E- Put the unwanted parts into the KIS container (via normal means)\u003C/p\u003E\u003Cp\u003E- Disassemble those parts through the Part Reconstructinator to get components\u003C/p\u003E\u003Cp\u003E- Assemble parts that you actually want through the Part Reconstructinator using those components\u003C/p\u003E\u003Cp\u003E- Build TEH LEET BASE using your new parts\u003C/p\u003E\u003Cp\u003EHere\u0027s a diagram to help explain how this generally works:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/ix50Jeb.png\u0022 alt=\u0022ix50Jeb.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EFunctional notes about the mod:\u003C/p\u003E\u003Cp\u003E- The Part Reconstructinator is only capable of processing one item at a time. I may add a queue in the future, but for now you\u0027ll have to keep track of it.\u003C/p\u003E\u003Cp\u003E- The Part Reconstructinator works anywhere within physics range, and also respects time-warp. The GUI works with time-warp on but only shows for the active vessel.\u003C/p\u003E\u003Cp\u003E- The Part Reconstructinator checks if an inventory is internally accessible, ignoring those which are not. With only the default KIS inventories, that would be the in-line container only.\u003C/p\u003E\u003Cp\u003E- Components are stored inside KIS containers, they probably end up taking less volume than the part that was disassembled but should have the same mass. They also stack.\u003C/p\u003E\u003Cp\u003E- The Part Reconstructinator will stop functioning if it can\u0027t store an item (an assembled part, or components). It will remember those items through save/load cycles, and will tell you on the GUI if it\u0027s stopped and what needs storing.\u003C/p\u003E\u003Cp\u003E- When taking or storing items, the Part Reconstructinator will always attempt to do so on it\u0027s own inventory first, if it has one. When the mod is finished, it will have a small container primarily for storing components.\u003C/p\u003E\u003Cp\u003E- Storing parts into containers respects container volume limitations, and will also try to add those parts onto an existing stack in that inventory before taking a free slot (currently only components check for stacks).\u003C/p\u003E\u003Cp\u003E- The mod will not be balanced for career mode, it\u0027s flat-out impossible to remove all loopholes (LV-1 vs LV-1R for instance). I will balance it for science/sandbox when it\u0027s almost finished.\u003C/p\u003E\u003Cp\u003EThings I\u0027m considering changing for the mod, but haven\u0027t decided:\u003C/p\u003E\u003Cp\u003E- ISRU creation of some components (i.e. gravel from ore to create ground pylons)\u003C/p\u003E\u003Cp\u003E- Compound components (metal \u002B electromagnet = motor)\u003C/p\u003E\u003Cp\u003EAny part with the following node will be added to the list of parts that are recognised by the Part Reconstructinator:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EHEXI_RECYCLE\u003Cbr\u003E{\u003Cbr\u003E\tcanCreate = true\u003Cbr\u003E\ttimeToDismantle = 60\u003Cbr\u003E\tcostToDismantle = 600\u003Cbr\u003E\tmetal = 100\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E- \u0022canCreate\u0022 determines if the part can be assembled, all parts with the HEXI_RECYCLE node can be disassembled\u003C/p\u003E\u003Cp\u003E- \u0022timeToDismantle\u0022 determines how many seconds it takes to disassemble a part\u003C/p\u003E\u003Cp\u003E- \u0022costToDismantle\u0022 determines the total ElectricCharge needed to disassemble a part (currently assembly requires double, will change that)\u003C/p\u003E\u003Cp\u003E- Every other line dictates a component that the part is made of (provided that component actually exists)\u003C/p\u003E\u003Cp\u003EAny part which should be a Part Reconstructinator requires this node:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = HexiRecycler\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENothing complicated. There isn\u0027t a need for specific logic yet, and all the inventory shenanigans will be handled by KIS, so there\u0027s nothing you can tweak there. In the future I\u0027ll add options for if the part can (dis)assemble (cheap one-way alternatives to the big unit), cost/speed multipliers (smaller unit that processes slower, advanced unit that processes at 2x speed for 3x cost), and perhaps a limit to the volume of parts that can be (dis)assembled (as determined by KIS).\u003C/p\u003E\u003Cp\u003EThings that I need to do (things with a \u002B are done but not in the download yet):\u003C/p\u003E\u003Cp\u003E- Create rest of component models\u003C/p\u003E\u003Cp\u003E- Create a proper part for the Part Reconstructinator module (will probably be similar to the ISRU unit, in terms of size and mass)\u003C/p\u003E\u003Cp\u003E- Display part quantities in the disassembly section of the Part Reconstructinator GUI\u003C/p\u003E\u003Cp\u003E- Attempt to add created parts to existing stacks, assuming it\u0027s stackable in the first place\u003C/p\u003E\u003Cp\u003E- Prevent using the Part Reconstructinator if the vessel lacks control capability\u003C/p\u003E\u003Cp\u003EKnown issues (same drill with \u002B):\u003C/p\u003E\u003Cp\u003E\u002B Creating any part that has a command module on it causes bad things to happen\u003C/p\u003E\u003Cp\u003E- Created fuel tanks are magically filled (bug is with FSfuelSwitch, doesn\u0027t occur without it, can\u0027t fix)\u003C/p\u003E\u003Cp\u003E- Really bad things happen to the GUI after a quick-load (NRE hiding somewhere in the render code)\u003C/p\u003E\u003Cp\u003E- Mass isn\u0027t accounted for on items stored inside the Part Reconstructinator (not sure why, might need to call something)\u003C/p\u003E\u003Cp\u003EDownload: \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/13281778/KSP%20Mods/Part%20Reconstructinator%20Mod%20V0.2.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dl.dropboxusercontent.com/u/13281778/KSP%20Mods/Part%20Reconstructinator%20Mod%20V0.2.zip\u003C/a\u003E (V0.2)\u003C/p\u003E\u003Cp\u003ENote that you\u0027ll have to do some config editing to make use of that download (adding the module onto a part).\u003C/p\u003E\u003Cp\u003EThe module should be bug-free, however I haven\u0027t done extensive testing on it. I\u0027m also unsure on the CPU impact, considering there\u0027s a lot of iterative tasks going on per physics step it might actually be a little bit excessive.\u003C/p\u003E\u003Cp\u003ESource code comes with the download, however the VS2013 project uses some absolute paths to the referenced KSP libraries. Vanilla KSP is installed on my E drive (mod area is on C), so you\u0027ll have to change them to match your install location.\u003C/p\u003E\u003Cp\u003EMy license of choice is CC BY-SA-NC 4.0 International. That can be found here: \u003Ca href=\u0022https://creativecommons.org/licenses/by-nc-sa/4.0/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://creativecommons.org/licenses/by-nc-sa/4.0/\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-08T17:18:46Z\u0022 title=\u002208/08/2015 05:18  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 8, 2015\u003C/time\u003E by Hexicube\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hieywiey","CreatedById":99098,"CreatedDateTime":"2015-08-04T02:38:20Z","Content":"\n\u003Cp\u003EPictures or Diagrams (preferably the latter, I personally like diagrams better) please, Visual learners, like me have trouble grasping a concept from just a big wall of text.\u003C/p\u003E\n"},{"CreatedByName":"Hexicube","CreatedById":109496,"CreatedDateTime":"2015-08-04T12:47:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hieywiey\u0022 data-cite=\u0022hieywiey\u0022\u003E\u003Cdiv\u003EPictures or Diagrams (preferably the latter, I personally like diagrams better) please, Visual learners, like me have trouble grasping a concept from just a big wall of text.\u003C/div\u003E\u003C/blockquote\u003EI added a diagram to the main post (tad oversized but w/e), did that help?\n"},{"CreatedByName":"Hexicube","CreatedById":109496,"CreatedDateTime":"2015-08-05T01:03:00Z","Content":"\n\u003Cp\u003EStarting the tedious task of making \u0027recipes\u0027 for pretty much every stock part, should be fun.\u003C/p\u003E\u003Cp\u003EOne thing I have noticed, the radial xenon tank has a dry mass of 31.43. What a fun number 3143 is, the product of 7 and 449, both of which are primes. That means to have my metal component (which is filler) not need HUGE quantities (like, actual millions) for most parts, I\u0027ll be changing that to 31.5 with ModuleManager (which is also adding the recipe node to EVERYTHING), allowing the metal component to have a mass of 500g (0.0005) instead of 10g (0.000001) to perfectly mass-match all parts (all other parts have masses to a half-kilo).\u003C/p\u003E\u003Cp\u003EFor those interested, the components will end up working like this:\u003C/p\u003E\u003Cp\u003E- Metal = Filler component for most parts\u003C/p\u003E\u003Cp\u003E- Plastic = Filler component for some parts\u003C/p\u003E\u003Cp\u003E- Thruster = 1 per 2kN of thrust, rounded up\u003C/p\u003E\u003Cp\u003E- Battery = 1 per 5 ElectricCharge storage\u003C/p\u003E\u003Cp\u003E- Solar = 1 per 5? ElectricCharge generation\u003C/p\u003E\u003Cp\u003E- Electromagnet = 1 per ? torque\u003C/p\u003E\u003Cp\u003E- Blutonium238 = Don\u0027t need a rule as only 2 parts need it\u003C/p\u003E\u003Cp\u003E- Computer = Added to any part with a controllable function (gimbal, reaction wheel, actual wheel) excluding the ability to throttle\u003C/p\u003E\u003Cp\u003ESo far, most parts are pretty simple. Engines end up just being metal and thrusters (need to include computers for those that gimbal), and fuel tank and structural parts are 100% metal. I\u0027m contemplating if having the plastic filler is required, as nothing would really be lost by just using the metal filler instead.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-05T01:14:13Z\u0022 title=\u002208/05/2015 01:14  AM\u0022 data-short=\u00228 yr\u0022\u003EAugust 5, 2015\u003C/time\u003E by Hexicube\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Hexicube","CreatedById":109496,"CreatedDateTime":"2015-08-07T12:14:51Z","Content":"\n\u003Cp\u003EUploaded another test version, this one has a bunch of new things (if I can remember them):\u003C/p\u003E\u003Cp\u003E- All stock parts (more-or-less) have recycle recipes attached, making the module fully functional once it\u0027s added to a part\u003C/p\u003E\u003Cp\u003E- Mousing over a part in either the assembly or disassembly screen shows information about that part\u003C/p\u003E\u003Cp\u003E- Other stuff (can\u0027t remember, first bullet point took up most of the time on this)\u003C/p\u003E\u003Cp\u003EI\u0027ve also fixed a couple things:\u003C/p\u003E\u003Cp\u003E- Changed how I constructed a KIS_Item for information gathering, on some parts this was waking the kraken\u003C/p\u003E\u003Cp\u003E- Fixed issues with low power and 100% completion detection (float vs double shenanigans)\u003C/p\u003E\u003Cp\u003EJust pop a HexiRecycler module onto another part with this new version and you\u0027ll get an idea of what I want the end product to be like! This is also a good time for balancing feedback.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/13281778/KSP%20Mods/Part%20Reconstructinator%20Mod%20V0.2.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dl.dropboxusercontent.com/u/13281778/KSP%20Mods/Part%20Reconstructinator%20Mod%20V0.2.zip\u003C/a\u003E\u003C/p\u003E\n"}]}