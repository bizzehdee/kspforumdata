{"TopicId":119211,"ForumId":36,"TopicTitle":"[WIP] Kopernicus Expansion v0.2: comets, footprints, new PQSMods for Kopernicus","CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-08-24T02:23:11Z","PageNum":5,"Articles":[{"CreatedByName":"Proot","CreatedById":98932,"CreatedDateTime":"2015-10-20T20:50:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003EAt the moment, I have no plans to implement my own volumetric cloud system. I don\u0027t really see the point of remaking something that\u0027s already been made.\u003Cp\u003EI am, however, going to be making particle based winds, if that interests you. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EVery cool!\u003C/p\u003E\n"},{"CreatedByName":"daniel l.","CreatedById":57763,"CreatedDateTime":"2015-10-21T04:57:13Z","Content":"\n\u003Cp\u003EIs it possible to make a procedural sun that has prominences and flares and a bubbly hydrogen looking surface.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-10-21T20:27:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022daniel l.\u0022 data-cite=\u0022daniel l.\u0022\u003E\u003Cdiv\u003EIs it possible to make a procedural sun that has prominences and flares and a bubbly hydrogen looking surface.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFor the \u0022bubbly hydrogen looking surface,\u0022 Do you mean something similar to the procedural gas giants, except for stars?\u003C/p\u003E\u003Cp\u003EAs for flares, I don\u0027t plan on implementing custom lens flares until 1.1 anyways, because 1.1 uses Unity 5, and Unity 5 allows the exporting of AssetBundles in the free version, and people could just make their lens flares in unity and export them in a .assetbundle file.\u003C/p\u003E\u003Cp\u003ENot sure about solar prominences. It seems like they\u0027d be difficult to implement, especially considering that they would just be eye candy.\u003C/p\u003E\n"},{"CreatedByName":"daniel l.","CreatedById":57763,"CreatedDateTime":"2015-10-21T22:38:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003EFor the \u0022bubbly hydrogen looking surface,\u0022 Do you mean something similar to the procedural gas giants, except for stars?\u003Cp\u003EAs for flares, I don\u0027t plan on implementing custom lens flares until 1.1 anyways, because 1.1 uses Unity 5, and Unity 5 allows the exporting of AssetBundles in the free version, and people could just make their lens flares in unity and export them in a .assetbundle file.\u003C/p\u003E\u003Cp\u003ENot sure about solar prominences. It seems like they\u0027d be difficult to implement, especially considering that they would just be eye candy.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes i do mean like gas giants only with stars \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnd as for flares... I dont mean lens flares i mean solar flares.\u003C/p\u003E\n"},{"CreatedByName":"sashan","CreatedById":98897,"CreatedDateTime":"2015-10-21T22:42:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003EThe Squig already has an animation. It would be stupid to not have animations anyways. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHere comes Arthur C Clarke with his Jupiter Gasbags! \u003C/p\u003E\u003Cp\u003ECan\u0027t wait to hear thin scream of hydrogen wind \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EOne suggestion: Persistent terrain scatters with collision. Use pseudorandom generator with seed saved in persistent file to get their positions - similar to map seed in games like Minecraft and Age of Empires, where same seed would give you same map all the time. You can even spawn some large rocks with that, to get DUna to look like Mars in the Martian.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-21T22:49:08Z\u0022 title=\u002210/21/2015 10:49  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 21, 2015\u003C/time\u003E by sashan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-10-22T00:19:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022daniel l.\u0022 data-cite=\u0022daniel l.\u0022\u003E\u003Cdiv\u003EI dont mean lens flares i mean solar flares.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAccording to wikipedia, solar flares are just large bursts of energy from the sun\u0027s surface, and they usually result in solar prominences, which I already said aren\u0027t that big of a priority at the moment.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sashan\u0022 data-cite=\u0022sashan\u0022\u003E\u003Cdiv\u003EOne suggestion: Persistent terrain scatters with collision.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBesides the collision, that\u0027s already a stock feature. Stock ground scatter is persistent, and Kopernicus itself adds collision.\u003C/p\u003E\n"},{"CreatedByName":"amarius1","CreatedById":111155,"CreatedDateTime":"2015-10-23T15:42:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003ESo I spent most of the last few days on a new feature, which I\u0027m very happy about: Modular Noise\u003Cp\u003EIt adds a new PQS Mod to the game that allows you to mix noises together in virtually unlimited ways, by exposing almost all of LibNoise\u0027s (KSP\u0027s noise library) API to config files.\u003C/p\u003E\u003Cp\u003EI\u0027m sure KillAshley is going to love this...\u003C/p\u003E\u003Cp\u003EI put together a tutorial for it here:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EFirst, an example config:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003EPQS\u003Cbr\u003E{\u003Cbr\u003E Mods\u003Cbr\u003E {\u003Cbr\u003E ModularNoise\u003Cbr\u003E {\u003Cbr\u003E enabled = true\u003Cbr\u003E order = 10\u003Cbr\u003E\u003Cbr\u003E deformity = 10000\u003Cbr\u003E\u003Cbr\u003E finalNoise = PerlinNoise1\u003Cbr\u003E Noises\u003Cbr\u003E {\u003Cbr\u003E NOISE\u003Cbr\u003E {\u003Cbr\u003E name = PerlinNoise1\u003Cbr\u003E type = Perlin\u003Cbr\u003E frequency = 8\u003Cbr\u003E lacunarity = 2\u003Cbr\u003E persistence = 0.5\u003Cbr\u003E octaves = 5\u003Cbr\u003E seed = 123456\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E Operators\u003Cbr\u003E {\u003Cbr\u003E MULT\u003Cbr\u003E {\u003Cbr\u003E order = 0\u003Cbr\u003E applyTo = PerlinNoise1\u003Cbr\u003E X = 0.2\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003C/blockquote\u003E\u003Cp\u003ELet\u0027s go over each component of this config:\u003C/p\u003E\u003Cp\u003EThe first 2 lines are lines included in every PQS mod, whether it\u0027s enabled, and what position, or order, it is in the PQSMod list.\u003C/p\u003E\u003Cp\u003ENext, there\u0027s the \u003Cem\u003Edeformity\u003C/em\u003E property. It\u0027s the same as the deformity property in other PQSMods, It just determines the maximum height that this PQSMod\u0027s terrain will reach; in this case, 10 kilometers.\u003C/p\u003E\u003Cp\u003ENow something interesting: the \u003Cem\u003EfinalNoise\u003C/em\u003E property. It says which NOISE node is used to calculate the final value, which is then multiplied by \u003Cem\u003Edeformity\u003C/em\u003E, and applied to the terrain.\u003C/p\u003E\u003Cp\u003ENext, there\u0027s a Noise node, which can contain and arbitrary number ( \u00C3\u00A2\u00E2\u20AC\u00B0\u00C2\u00A5 1 ) of NOISE nodes. This is basically a list of all the NOISE objects you can use. I\u0027ll explain it more later.\u003C/p\u003E\u003Cp\u003ENOISE nodes describe NOISE objects. This config only has 1 NOISE object, which is named PerlinNoise1. You probably noticed that PerlinNoise1 is also what the \u003Cem\u003EfinalNoise\u003C/em\u003E property is equal to. That means that the terrain is deformed based on whatever value is taken from PerlinNoise1.\u003C/p\u003E\u003Cp\u003EInside the NOISE node, there is a type and a name property, and some others.\u003C/p\u003E\u003Cp\u003EThe most important property is the type. There are 6 types of noise supported at the moment:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EPerlin noise\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBillow noise\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERidgedMultiFractal noise\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EVoronoi noise\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EConst noise\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EExDistPerlin noise\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIMPORTANT NOTE: NOISE objects always return a value between 0 and 1, before operators are applied.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003ENoise Types\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPerlin:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EPerlin noise is just simple perlin noise. It looks like this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/jy6vGtV.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/jy6vGtV.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt has 5 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003E\u003Cem\u003Eseed\u003C/em\u003E: an integer between 0 and 2,147,483,647. The same seed will always output the same results.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Eoctaves\u003C/em\u003E: an integer between 1 and 30, determines how much detail is generated. The greater the number, the slower the terrain will generate, and the laggier your planet will be. Try to keep it below 8, but a value of 4 or 5 will suffice for most purposes.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Efrequency\u003C/em\u003E: a number greater than 0 which determines how close together features are generated.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Elacunarity\u003C/em\u003E: a number greater than 0 which determines how much smaller features in one octave will be than the previous octave. The default value is 2\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Epersistence\u003C/em\u003E: a number between 0 and 1 which determines how large features in octaves will be compared to the previous octave. The default value is 0.5\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThese 5 properties are also used in Billow, RidgedMultiFractal, and ExDistPerlin noise types.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EBillow:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EBillow noise is just perlin noise with an absolute value function called on it. It looks like this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/T33rRzo.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/T33rRzo.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt has the exact same properties as Perlin noise.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERidgedMultiFractal:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ERidgedMultiFractal noise (sometimes spelled RiggedMultiFractal) is a noise type that is very good for mountains. It looks like this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/gd7iBSI.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/gd7iBSI.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt has the same properties as Perlin noise, except you don\u0027t need to set the persistence value.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EConst:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EConst noise isn\u0027t actually noise, it\u0027s just a constant value. It looks like this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/6hYoHsN.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/6hYoHsN.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt has 1 property:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EconstantValue\u003C/em\u003E: whatever the constant value is. It can be any real number between -10\u003Csup\u003E304\u003C/sup\u003E and 10\u003Csup\u003E30\u003C/sup\u003E. It\u0027s recommended you stay between -1 and 1\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EVoronoi:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EVoronoi noise is very intersting. It\u0027s used to generate the Mun\u0027s procedural craters, among other things.\u003C/p\u003E\u003Cp\u003EIt can have 2 distinct looks, depending on how you configure it:\u003C/p\u003E\u003Cp\u003EThis:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/4sUeJJ2.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/4sUeJJ2.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAnd this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/2917ZH9.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/2917ZH9.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt has 4 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003Eseed\u003C/em\u003E: an integer between 0 and 2,147,483,647. The same seed will always output the same results.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Efrequency\u003C/em\u003E: a number greater than 0 that determines how large the cells are. Similar to the frequency property in Perlin noise\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Edisplacement\u003C/em\u003E: a number between 0 and 1. determines how much cells are offset.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003EvoronoiUseDistance\u003C/em\u003E: a true/false value that determines which one of those \u003Cem\u003Elooks\u003C/em\u003E the noise will have. True will use the second one, and False will use the first one.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EKeep in mind that if you don\u0027t have \u003Cem\u003EvoronoiUseDistance\u003C/em\u003E set to true, there will be sudden changes in terrain height, which can result in really ugly cliffs.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EExDistPerlin:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EExDistPerlin (short for Exponentially Distributed Perlin) is a derivative of Perlin noise, created by a \u003Ca href=\u0022http://larc.unt.edu/ian/research/tobler/\u0022 rel=\u0022external nofollow\u0022\u003Eprofessor at UNT\u003C/a\u003E, which is exactly the same as Perlin noise, except for the fact that instead of having linearly distributed gradients, it has exponentially distributed gradients. This means that terrain features will be less evenly spaced, and will more closely model real life terrain. I highly suggest you look at the linked page, because the images explain it better than me.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eimage coming soon...\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EIt has the same properties as Perlin noise, but with one extra property: \u003Cem\u003Emu\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Cem\u003Emu\u003C/em\u003E property determines how the terrain features are distributed. A higher \u003Cem\u003Emu\u003C/em\u003E value means that there will be more flatter terrain, and less mountainous terrain. The default value is 1.0146, and a value of 1 is the same as regular perlin noise.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EOperators\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAfter the list of NOISEs, there is another list, called Operators, that contains all of the operators used. An operator is a basic function that can be applied to a NOISE object, such as MULT (multiplies it by X) or CLAMP (clamps the noise value between two values).\u003C/p\u003E\u003Cp\u003EEvery operator has at lease 2 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003E\u003Cem\u003Eorder\u003C/em\u003E: the order in the list this operator is in\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003EapplyTo\u003C/em\u003E: the name of the NOISE object this operator affects. Operators can only affect this NOISE object, even if it uses 2 or more NOISE\u0027s.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIn the example config, there is one operator, a MULT operator, which is in order 0 (is executes first) and it applies to PerlinNoise1.\u003C/p\u003E\u003Cp\u003EThere are currently 15 operators supported:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EADD\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMULT\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMIN\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMAX\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EEXPONENT\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EABS\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECLAMP\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECURVE\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDEFORMITYCURVE\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELATITUDECURVE\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELONGITUDECURVE\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESCALE\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ETURBULENCE\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBLEND\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESELECT\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI find that all of this is best explained with a flowchart:\u003C/p\u003E\u003Cp\u003EThis flowchart depitcts the config below\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003EPQS\u003Cbr\u003E{\u003Cbr\u003E Mods\u003Cbr\u003E {\u003Cbr\u003E ModularNoise\u003Cbr\u003E {\u003Cbr\u003E enabled = true\u003Cbr\u003E order = 10\u003Cbr\u003E\u003Cbr\u003E deformity = 8000\u003Cbr\u003E\u003Cbr\u003E finalNoise = Blender\u003Cbr\u003E Noises\u003Cbr\u003E {\u003Cbr\u003E NOISE\u003Cbr\u003E {\u003Cbr\u003E name = PerlinNoise1\u003Cbr\u003E type = Perlin\u003Cbr\u003E frequency = 8\u003Cbr\u003E lacunarity = 2\u003Cbr\u003E persistence = 0.5\u003Cbr\u003E octaves = 5\u003Cbr\u003E seed = 123456\u003Cbr\u003E }\u003Cbr\u003E NOISE\u003Cbr\u003E {\u003Cbr\u003E name = RidgedMultiFractal1\u003Cbr\u003E type = RidgedMultiFractal\u003Cbr\u003E frequency = 3\u003Cbr\u003E lacunarity = 1.6\u003Cbr\u003E octaves = 6\u003Cbr\u003E seed = 654321\u003Cbr\u003E }\u003Cbr\u003E NOISE\u003Cbr\u003E {\u003Cbr\u003E name = Blender\u003Cbr\u003E type = Const\u003Cbr\u003E constantValue = 0.4\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E Operators\u003Cbr\u003E {\u003Cbr\u003E ADD\u003Cbr\u003E {\u003Cbr\u003E order = 1\u003Cbr\u003E applyTo = PerlinNoise1\u003Cbr\u003E X = 0.2\u003Cbr\u003E }\u003Cbr\u003E ADD\u003Cbr\u003E {\u003Cbr\u003E order = 1\u003Cbr\u003E applyTo = RidgedMultiFractal1\u003Cbr\u003E X = 0.6\u003Cbr\u003E }\u003Cbr\u003E BLEND\u003Cbr\u003E {\u003Cbr\u003E order = 2\u003Cbr\u003E applyTo = Blender\u003Cbr\u003E firstNoise = PerlinNoise1\u003Cbr\u003E secondNoise = RidgedMultiFractal1\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/5jSIZkC.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/5jSIZkC.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EIn the flowchart, rounded rectangles are NOISE objects and ovals are operators.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EADD:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe ADD operator is a simple operator that adds a value to a noise. It can also add one NOISE\u0027s value to it\u0027s own value.\u003C/p\u003E\u003Cp\u003EIt has 2 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EapplyFrom\u003C/em\u003E: the name of a noise to add to \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value. It will also normalize the two values, meaning that if \u003Cem\u003EapplyTo\u003C/em\u003E and \u003Cem\u003EapplyFrom\u003C/em\u003E are equal to 1, then they will still be 1, because they were normalized.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003EX\u003C/em\u003E: If \u003Cem\u003EapplyFrom\u003C/em\u003E is not set, then \u003Cem\u003EX\u003C/em\u003E is added to \u003Cem\u003EapplyTo\u0027s\u003C/em\u003E value instead of \u003Cem\u003EapplyFrom\u003C/em\u003E. It is a number that can have decimals.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENOTE: You can do subtraction by using a negative X value in this operator, or by using a MULT operator on \u003Cem\u003EapplyFrom\u003C/em\u003E\u0027s NOISE object, with an X value of -1.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMULT:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe MULT operator is a simple operator that multiplies a value to a noise. It can also multiply it\u0027s own value by another NOISE\u0027s value.\u003C/p\u003E\u003Cp\u003EIt has 2 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EapplyFrom\u003C/em\u003E: the name of a noise to multiply with \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003EX\u003C/em\u003E: If \u003Cem\u003EapplyFrom\u003C/em\u003E is not set, then \u003Cem\u003EX\u003C/em\u003E is added to \u003Cem\u003EapplyTo\u0027s\u003C/em\u003E value instead of \u003Cem\u003EapplyFrom\u003C/em\u003E. It is a number that can have decimals.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMIN:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe MIN operator is an operator that selects the minimum of 2 NOISE object\u0027s values.\u003C/p\u003E\u003Cp\u003EIt has 1 property:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EapplyFrom\u003C/em\u003E: the name of the second NOISE object. Keep in mind that this will only affect \u003Cem\u003EapplyTo\u0027s\u003C/em\u003E value, and not \u003Cem\u003EapplyFrom\u003C/em\u003E\u0027s\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMAX:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe MAX operator is an operator that selects the maximum of 2 NOISE object\u0027s values.\u003C/p\u003E\u003Cp\u003EIt has 1 property:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EapplyFrom\u003C/em\u003E: the name of the second NOISE object. Keep in mind that this will only affect \u003Cem\u003EapplyTo\u0027s\u003C/em\u003E value, and not \u003Cem\u003EapplyFrom\u003C/em\u003E\u0027s\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENOTE: If you want to set a minimum or maximum hard value for a NOISE object, use CLAMP.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEXPONENT:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe EXPONENT operator is an operator that sets \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value to the power of either X, or \u003Cem\u003EapplyFrom\u003C/em\u003E\u0027s value\u003C/p\u003E\u003Cp\u003EIt has 1 property:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EapplyFrom\u003C/em\u003E: the name of the second NOISE object. Keep in mind that this will only affect \u003Cem\u003EapplyTo\u0027s\u003C/em\u003E value, and not \u003Cem\u003EapplyFrom\u003C/em\u003E\u0027s\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003EX\u003C/em\u003E: the hard value that will be used if \u003Cem\u003EapplyFrom\u003C/em\u003E is not set.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EABS:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe ABS operator is an operator that puts \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value though an Absolute Value function.\u003C/p\u003E\u003Cp\u003EThis operator has no extra properties.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ECLAMP:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe CLAMP operator is an operator that clamps \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value between a minimum and a maximum.\u003C/p\u003E\u003Cp\u003EIt has 2 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003Emin\u003C/em\u003E: the minimum value\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Emax\u003C/em\u003E: the maximum value\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENOTE: Keep in mind that the minimum should be less than the maximum, or else things will break. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ECURVE:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe CURVE operator is an operator that puts \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value though a curve. The curve should be in the shape of whatever prominent terrain feature you need. If your curve looks like the image below, then your terrain will have plateaus. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Ca href=\u0022https://bobsullivan.net/wp-content/uploads/2014/04/slope.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://bobsullivan.net/wp-content/uploads/2014/04/slope.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EIt has 1 property:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003ECurve\u003C/em\u003E: the curve that this noises\u0027s output will be put though\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EDEFORMITYCURVE:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe DEFORMITYCURVE operator is an operator that allows you to modify the deformity based on the preexisting height of the terrain. This way, you could make a noise that only gets applied in high areas.\u003C/p\u003E\u003Cp\u003EIt has 1 property:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EDeformityCurve\u003C/em\u003E: the curve that this noises\u0027s output will be put though\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ELATITUDECURVE:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe LATITUDECURVE operator is an operator that puts \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value though a curve, based on it\u0027s latitude. This allows you to have the poles of the planet (or some other arbitrary latitude range) not affected by this noise at all.\u003C/p\u003E\u003Cp\u003EIt has 2 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003ELatitudeCurve\u003C/em\u003E: the curve that this noises\u0027s output will be put though, based on the latitude\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ELONGITUDECURVE:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe LONGITUDECURVE operator is an operator that puts \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value though a curve, based on it\u0027s longitude. This allows you to have a range of longitudes on the planet (or some other arbitrary latitude range) not affected by this noise at all.\u003C/p\u003E\u003Cp\u003EIt has 2 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003ELongitudeCurve\u003C/em\u003E: the curve that this noises\u0027s output will be put though, based on the longitude\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESCALE:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe SCALE operator is an operator that pertubes \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value so that you can \u003C/p\u003E\u003Cp\u003EIt has 3 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EXScale\u003C/em\u003E: the scale along the X axis.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003EYScale\u003C/em\u003E: the scale along the Y axis. Larger values will squish the planet\u0027s terrain pole to pole, and smaller values will stretch it.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EZScale: the scale along the Z axis.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENOTE: this does not actually stretch or squish the planet itself, just the terrain\u0027s shape. It\u0027s not a replacement for VertexHeightOblate.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ETURBULENCE:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe TURBULENCE operator is an operator that randomly pertubes \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value.\u003C/p\u003E\u003Cp\u003EIt has 6 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003Eseed\u003C/em\u003E: the same as a NOISE object\u0027s seed\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Efrequency\u003C/em\u003E: the frequency of the pertubations. smaller values will result in larger scale pertubations.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Elacunarity\u003C/em\u003E: the same as Perlin noise\u0027s lacunarity value. the default is 1.5\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Epersistence\u003C/em\u003E: the same as Perlin noise\u0027s persistence value. the default is 0.5\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Eroughness\u003C/em\u003E: an integer between 1 and 30. a good value is 3 or 4. similar to Perlin noise\u0027s octaves value.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Epower\u003C/em\u003E: a number greater than or equal to 0 that determines how powerful the pertubations are. A good value should be between 0 and 0.5. anything more, and there are diminishing returns. 0 means that the pertubations don\u0027t appear.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENOTE: this is the most resource intensive operator. Use it with care.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EBLEND:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe BLEND operator is an operator that blends two noises together into \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value. It selects between the 2 values using \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value, so if applyTo\u0027s value is 0.4, it samples the first noise at 40%, and the second noise at 60%. This is where Const type NOISE objects are most useful, because you can use them to have a constant blend between the two values.\u003C/p\u003E\u003Cp\u003EIt has 2 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EfirstNoise\u003C/em\u003E: the name of the first NOISE object\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003EsecondNoise\u003C/em\u003E: the name of the second NOISE object\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt looks like this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/hKaDKGj.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/hKaDKGj.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIn that image, the bottom noise is \u003Cem\u003EapplyTo\u003C/em\u003E, and the other two are \u003Cem\u003EfirstNoise\u003C/em\u003E and \u003Cem\u003EsecondNoise\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESELECT:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe SELECT operator is an operator that blends between two noises based on \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value. It selects between the 2 values using \u003Cem\u003EapplyTo\u003C/em\u003E\u0027s value.\u003C/p\u003E\u003Cp\u003EIt has 5 properties:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cem\u003EfirstNoise\u003C/em\u003E: the name of the first NOISE object\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003EsecondNoise\u003C/em\u003E: the name of the second NOISE object\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Efalloff\u003C/em\u003E: how large the gradient between the two noises is.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Emin\u003C/em\u003E: the minimum value for secondNoise to be set\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cem\u003Emax\u003C/em\u003E: the maximum value for secondNoise to be set\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt looks like this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/zWlQfSh.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/zWlQfSh.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIn that image, the bottom noise is \u003Cem\u003EapplyTo\u003C/em\u003E, and the other two are \u003Cem\u003EfirstNoise\u003C/em\u003E and \u003Cem\u003EsecondNoise\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EImages from \u003Ca href=\u0022http://www.draw.io\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.draw.io\u003C/a\u003E and \u003Ca href=\u0022http://libnoise.sourceforge.net\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://libnoise.sourceforge.net\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cp\u003EAlso, to avoid a double post...\u003C/p\u003E\u003Cp\u003EI\u0027m not sure what\u0027s going on there, but it looks like an issue with the texture rather than the shader. Try converting the image to a .png file. If you had a texture with solid colors like that, then you\u0027d get that look.\u003C/p\u003E\u003Cp\u003EAlso, KopernicusExpansion does not \u003Cem\u003Eofficially\u003C/em\u003E support Kopernicus 0.4 yet. This is in development, so don\u0027t expect perfection. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EFor what it\u0027s worth, send me your output_log.txt folder (found in KSP/KSP_data/ folder) and I\u0027ll see what might have happened\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELOL when can we expect to use this?\u003C/p\u003E\n"},{"CreatedByName":"RaffaCT14","CreatedById":152708,"CreatedDateTime":"2015-10-27T17:23:26Z","Content":"\n\u003Cp\u003EHi! I love your comet mod and I used it in my game. I have only one question: there is the possibility to rotate the dust tail like the real ones?\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/wikipedia/commons/c/cb/Cometorbit.png\u0022 alt=\u0022Cometorbit.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m asking that because in this moment ion tail and dust tail are rotating togheter opposite to the sun.\u003C/p\u003E\u003Cp\u003EThank you for your attention, and congratulations for your mods!\u003C/p\u003E\n"},{"CreatedByName":"sashan","CreatedById":98897,"CreatedDateTime":"2015-10-27T18:36:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003E. Stock ground scatter is persistent, and Kopernicus itself adds collision.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, I\u0027ve noticed that it changes position from one load to another. At least from one game launch to another. Here I am standing besides the tree, save\u0026amp;exit, load the same vessel next day, the\u0027s no tree but there are small stones all around.\u003C/p\u003E\u003Cp\u003EWhat I wanted to do is to randomly place such giant rocks in certain biomes of Duna. From my experience with mapping in Crysis, which also has random vegetation placing feature, 6-10 different models of similar rocks plus random rotation and scaling makes it look good enough.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://static2.techinsider.io/image/55d4962b2acae7a6098c1368-1145-526/screen%20shot%202015-08-19%20at%2010.41.45%20am.png\u0022 alt=\u0022screen%20shot%202015-08-19%20at%2010.41.45%20am.png\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-27T18:39:54Z\u0022 title=\u002210/27/2015 06:39  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 27, 2015\u003C/time\u003E by sashan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tkw","CreatedById":142638,"CreatedDateTime":"2015-10-28T03:30:07Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9you can add this like this\u003C/span\u003E \u003Cimg src=\u0022https://41.media.tumblr.com/892c541a667bfe89b691c75982fbb750/tumblr_nvsh7sBMqz1us21qco2_1280.jpg\u0022 alt=\u0022tumblr_nvsh7sBMqz1us21qco2_1280.jpg\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"CaptRobau","CreatedById":41695,"CreatedDateTime":"2015-10-28T09:03:46Z","Content":"\n\u003Cp\u003EMrHappyFace, my mod\u0027s users have been coming to me about weird things happening to Jool. It seems to be related to KopernicusExpansion. Someone in this thread already mentioned it: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/132390-WIP-Kopernicus-Expansion-v0-1-2-comets-animated-gas-giants-and-more?p=2248687\u0026amp;viewfull=1#post2248687\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/132390-WIP-Kopernicus-Expansion-v0-1-2-comets-animated-gas-giants-and-more?p=2248687\u0026amp;viewfull=1#post2248687\u003C/a\u003E. Could you perhaps take a look at this?\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-10-28T14:26:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022RaffaCT14\u0022 data-cite=\u0022RaffaCT14\u0022\u003E\u003Cdiv\u003EHi! I love your comet mod and I used it in my game. I have only one question: there is the possibility to rotate the dust tail like the real ones?\u003Cp\u003E\u003Ca href=\u0022https://upload.wikimedia.org/wikipedia/commons/c/cb/Cometorbit.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://upload.wikimedia.org/wikipedia/commons/c/cb/Cometorbit.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m asking that because in this moment ion tail and dust tail are rotating togheter opposite to the sun.\u003C/p\u003E\u003Cp\u003EThank you for your attention, and congratulations for your mods!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was originally going to include that, but the game wouldn\u0027t cooperate. Maybe in the next update if I can fix it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022CaptRobau\u0022 data-cite=\u0022CaptRobau\u0022\u003E\u003Cdiv\u003EMrHappyFace, my mod\u0027s users have been coming to me about weird things happening to Jool. It seems to be related to KopernicusExpansion. Someone in this thread already mentioned it: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/132390-WIP-Kopernicus-Expansion-v0-1-2-comets-animated-gas-giants-and-more?p=2248687\u0026amp;viewfull=1#post2248687\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/132390-WIP-Kopernicus-Expansion-v0-1-2-comets-animated-gas-giants-and-more?p=2248687\u0026amp;viewfull=1#post2248687\u003C/a\u003E. Could you perhaps take a look at this?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve never seen this bug on my own computer, and until I do, I can\u0027t do anything until someone sends me logs or an actual bug report about it. I imagine it\u0027s got something to do with DirectX vs OpenGL, but I can\u0027t really test it.\u003C/p\u003E\n"},{"CreatedByName":"daniel l.","CreatedById":57763,"CreatedDateTime":"2015-10-29T09:52:53Z","Content":"\n\u003Cp\u003Ehow about making nebulas? you know maybe a 3d model rendered in scaled space that transitions into particle effects at close proximity.\u003C/p\u003E\n"},{"CreatedByName":"Dunrana","CreatedById":138830,"CreatedDateTime":"2015-10-29T12:59:58Z","Content":"\n\u003Cp\u003EAny chance we could make some sort of normal map for a star? Maybe even a solar atmosphere? I\u0027m thinking it would be terribly cool to see a star like Betelgeuse with massive convection bubbles rising and falling.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022daniel l.\u0022 data-cite=\u0022daniel l.\u0022\u003E\u003Cdiv\u003Ehow about making nebulas? you know maybe a 3d model rendered in scaled space that transitions into particle effects at close proximity.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think it might just be simpler to include nebulae by editing the skybox. think about how big a nebula is compared to a normal solar system. KSP just isn\u0027t made to handle any object, let alone a particle effect 50 light years in diameter.\u003C/p\u003E\n"},{"CreatedByName":"daniel l.","CreatedById":57763,"CreatedDateTime":"2015-10-29T20:50:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dunrana\u0022 data-cite=\u0022Dunrana\u0022\u003E\u003Cdiv\u003EAny chance we could make some sort of normal map for a star? Maybe even a solar atmosphere? I\u0027m thinking it would be terribly cool to see a star like Betelgeuse with massive convection bubbles rising and falling.\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EI think it might just be simpler to include nebulae by editing the skybox. think about how big a nebula is compared to a normal solar system. KSP just isn\u0027t made to handle any object, let alone a particle effect 50 light years in diameter.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot all nebulas are epic in size, take planetary nebulae for example or the crab nebula.\u003C/p\u003E\n"},{"CreatedByName":"Dunrana","CreatedById":138830,"CreatedDateTime":"2015-10-30T14:09:13Z","Content":"\n\u003Cp\u003Eeven a planatary nebula is pretty epic in scale, and likely too much for the KSP engine to handle in a suitably realistic way.\u003C/p\u003E\u003Cp\u003EThat said, it would be pretty cool. i just don\u0027t believe the game can really handle it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-30T14:11:14Z\u0022 title=\u002210/30/2015 02:11  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 30, 2015\u003C/time\u003E by Dunrana\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-10-30T14:19:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dunrana\u0022 data-cite=\u0022Dunrana\u0022\u003E\u003Cdiv\u003Eeven a planatary nebula is pretty epic in scale, and likely too much for the KSP engine to handle in a suitably realistic way.\u003Cp\u003EThat said, it would be pretty cool. i just don\u0027t believe the game can really handle it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027d be surprised. I have no doubts that KSP\u0027s engine could handle things the size of planetary nebulas, maybe not stellar nebulas, but definitely planetary ones. That said, I have no plans to implement them.\u003C/p\u003E\n"},{"CreatedByName":"pozine","CreatedById":134382,"CreatedDateTime":"2015-11-02T01:48:16Z","Content":"\n\u003Cp\u003EHi! I\u0027ve been struggling with trying to make comet tails in RealSolarSystem, and failed miserably. It appears that your mod can detect that I added this to my planets but doesn\u0027t render the tail. \u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003ECometTails {\u003C/p\u003E\u003Cp\u003E Tails\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E Tail\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E type = Ion\u003C/p\u003E\u003Cp\u003E color = 0,0.4,1,1\u003C/p\u003E\u003Cp\u003E radius = 3750\u003C/p\u003E\u003Cp\u003E length = 100000\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E Tail\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E type = Dust\u003C/p\u003E\u003Cp\u003E color = 0.4,0.4,0.5,1\u003C/p\u003E\u003Cp\u003E radius = 5000\u003C/p\u003E\u003Cp\u003E length = 65000\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"RA3236","CreatedById":150734,"CreatedDateTime":"2015-11-03T21:19:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pozine\u0022 data-cite=\u0022pozine\u0022\u003E\u003Cdiv\u003EHi! I\u0027ve been struggling with trying to make comet tails in RealSolarSystem, and failed miserably. It appears that your mod can detect that I added this to my planets but doesn\u0027t render the tail. \u003C/div\u003E\u003Cblockquote\u003E\u003Cdiv\u003ECometTails {\u003C/div\u003E\u003Cp\u003E Tails\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E Tail\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E type = Ion\u003C/p\u003E\u003Cp\u003E color = 0,0.4,1,1\u003C/p\u003E\u003Cp\u003E radius = 3750\u003C/p\u003E\u003Cp\u003E length = 100000\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E Tail\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E type = Dust\u003C/p\u003E\u003Cp\u003E color = 0.4,0.4,0.5,1\u003C/p\u003E\u003Cp\u003E radius = 5000\u003C/p\u003E\u003Cp\u003E length = 65000\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003C/blockquote\u003E\u003C/blockquote\u003E\u003Cp\u003EI am also having problems with comet tails (using the examples) and they are not showing up with Eeloo and in the editor. The orbit modification works. Help anyone?\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2015-11-04T01:34:08Z","Content":"\n\u003Cp\u003EI\u0027m trying to write a patch that changes Minmus to be kind of a standin for Charon, and moves the Mun to an inclined, slightly eccentric, more distant orbit around Kerbin. My game doesn\u0027t want to load my patches though. I also want to shrink and copy Ike to imitate Phobos and Deimos. Could someone help me with those configs?\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2015-11-04T04:12:23Z","Content":"\n\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@Kopernicus:AFTER[Kopernicus]\u003Cbr\u003E{\u003Cbr\u003E\t@Body[Moho]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 1\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Eve]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 2\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Kerbin]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 3\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Mun]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 4\u003Cbr\u003E\t\t@Orbit\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\t@semiMajorAxis = 38440000\u003Cbr\u003E\t\t\t@inclination = 5.16\u003Cbr\u003E\t\t\t@eccentricity = 0.0554\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Duna]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 5\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Ike] //Phobos\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 6\u003Cbr\u003E\t\t@Properties\u003Cbr\u003E\t\t{ \u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t@Orbit\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Minmus] //Deimos\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 7\u003Cbr\u003E\t\t@Properties\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\t@Orbit\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Dres]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 8\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Jool]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 9\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Laythe]\u003Cbr\u003E\t{\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Eeloo] //Europa\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsindex = 10\u003Cbr\u003E\t\t@Orbit\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\t@referenceBody = Jool\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Tylo]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 11\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Bop]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 12\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Pol]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 13\u003Cbr\u003E\t}\u003Cbr\u003E\t@Body[Vall] //Pluto\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@flightGlobalsIndex = 14\u003Cbr\u003E\t\t@Orbit\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\t@referenceBody = Sun\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\tBody\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Karus\u003Cbr\u003E\t\tflightGlobalsIndex = 15\u003Cbr\u003E\t\tOrbit\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\treferenceBody = Eeloo\u003Cbr\u003E\t\t\tinclination =\u003Cbr\u003E\t\t\teccentricity = \u003Cbr\u003E\t\t\tsemiMajorAxis = \u003Cbr\u003E\t\t\tlongitudeOfAscendingNode = \u003Cbr\u003E\t\t\targumentOfPeriapsis = \u003Cbr\u003E\t\t\tmeanAnomalyAtEpoch = \u003Cbr\u003E\t\t\tepoch = \u003Cbr\u003E\t\t\tcolor = \u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tProperties\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tdescription = \u003Cbr\u003E\t\t\tradius = \u003Cbr\u003E\t\t\tgeeASL = \u003Cbr\u003E\t\t\tScienceValues\u003Cbr\u003E\t\t\t{\u003Cbr\u003E                \t\tflyingLowDataValue = 14\u003Cbr\u003E                \t\tflyingHighDataValue = 13\u003Cbr\u003E                \t\tinSpaceLowDataValue = 12\u003Cbr\u003E                \t\tinSpaceHighDataValue = 11\u003Cbr\u003E                \t\trecoveryValue = 11\u003Cbr\u003E                \t\tflyingAltitudeThreshold = 130000\u003Cbr\u003E                \t\tspaceAltitudeThreshold = 5000000\u003Cbr\u003E            \t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-04T04:13:23Z\u0022 title=\u002211/04/2015 04:13  AM\u0022 data-short=\u00228 yr\u0022\u003ENovember 4, 2015\u003C/time\u003E by MAFman\u003C/strong\u003E\n\u003Cbr\u003ERemembered to fix a value\n\u003C/span\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-11-04T16:40:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MAFman\u0022 data-cite=\u0022MAFman\u0022\u003E\u003Cdiv\u003EI\u0027m trying to write a patch that changes Minmus to be kind of a standin for Charon, and moves the Mun to an inclined, slightly eccentric, more distant orbit around Kerbin. My game doesn\u0027t want to load my patches though. I also want to shrink and copy Ike to imitate Phobos and Deimos. Could someone help me with those configs?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAsk in the Kopernicus thread, this is a development thread for a different mod.\u003C/p\u003E\u003Cp\u003ELink: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/114649-1-0-4-Kopernicus-Beta\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/114649-1-0-4-Kopernicus-Beta\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"amarius1","CreatedById":111155,"CreatedDateTime":"2015-11-06T20:34:39Z","Content":"\n\u003Cp\u003EHey Happy face is there a guide on how to write custom PQS mods?\u003C/p\u003E\u003Cp\u003EI can\u0027t find Microsoft Visual C\u002B\u002B in my win10 computer even trough I installed it a second time. BTW if I would find it, I could theoreticaly study existent PQS code to create aother one... I just need to make a PQS mod that smooths terrain. Like smooth terrain created with PQSMod_VertexHeightNoise riggedMultifractal mod.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-06T20:54:43Z\u0022 title=\u002211/06/2015 08:54  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 6, 2015\u003C/time\u003E by amarius1\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"amarius1","CreatedById":111155,"CreatedDateTime":"2015-11-07T09:34:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Thomas P.\u0022 data-cite=\u0022Thomas P.\u0022\u003E\u003Cdiv\u003EOhhhkay. It seems that you don\u0027t have any clue how to write Plugins in KSP. That is a good starting point: \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Plugins\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Plugins\u003C/a\u003E\u003Cp\u003EKSP Plugins are written in .NET (mostly C#, but any .NET language will work). You can\u0027t look at the source of the PQSMods, because they are compiled into the .dll and the EULA forbids decompiling theese .dlls to look at the source.\u003C/p\u003E\u003Cp\u003EBasically, you need to create a new class that derives from PQSMod and override OnVertexBuildHeight and OnVertexBuild. In theese methods you can manipulate the height and color of the PQS.\u003C/p\u003E\u003Cp\u003EIf you have more questions, send me a PM.\u003C/p\u003E\u003Cp\u003E(Sorry for the Offtopic @MrHappyFace \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you a lot...\u003C/p\u003E\n"},{"CreatedByName":"Tristonwilson12","CreatedById":136353,"CreatedDateTime":"2015-11-12T20:08:48Z","Content":"\n\u003Cp\u003Eif I wanted to make Comet 67p, how would I do that?\u003C/p\u003E\n"}]}