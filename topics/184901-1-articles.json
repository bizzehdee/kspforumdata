{"TopicId":184901,"ForumId":107,"TopicTitle":"Deficiencies in Kal-1000 Controller","CreatedByName":"Acru","CreatedById":142432,"CreatedDateTime":"2019-05-31T04:13:11Z","PageNum":1,"Articles":[{"CreatedByName":"Acru","CreatedById":142432,"CreatedDateTime":"2019-05-31T04:13:11Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EConcerning the loop modes\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThere is currently None, Repeat, and Ping-Pong.\u00A0 What I need is the Repeat and Ping-Pong with a \u0027stop between loops\u0027 option, ready to be triggered again.\n\u003C/p\u003E\n\u003Cp\u003E\nThe latter could be done in an action by \u0027reverse\u0027 plus \u0027play/pause\u0027 with loop mode \u0027None\u0027, but there is no easy way to do the former.\u00A0 Possibly a \u0027rewind\u0027 action would be another option to work around this, and also have other uses?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EConcerning the toggle actions\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI have need of a dedicated play command for within an action, so a motion will complete even if the play action is triggered again via other actions.\u00A0 A dedicated pause action may be useful too for the same reason.\n\u003C/p\u003E\n\u003Cp\u003E\nFor that matter, dedicated direction \u0027forward\u0027 and \u0027reverse\u0027 actions rather than just the toggle action would be useful too, when you want to specifically extend or retract something with two separate actions, though the axis groups might work too.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHope to see these in a patch, thanks.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nPS: One extended feature that could be useful is to allow a controller to trigger an action upon completion.\n\u003C/p\u003E\n\u003Cp\u003E\nPPS: Though it is beyond a quick-fix, if there was a way to trigger a controller or set its position based on the detected position of a piston/rotor/etc, one could make some marvelous autonomous contraptions~\u00A0 Perhaps in the form of a sensor part attached to the part to be monitored?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-01T19:12:02Z\u0022 title=\u002206/01/2019 07:12  PM\u0022 data-short=\u00225 yr\u0022\u003EJune 1, 2019\u003C/time\u003E by Acru\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Acru","CreatedById":142432,"CreatedDateTime":"2019-05-31T06:00:39Z","Content":"\n\u003Cp\u003E\nAlso, typing in the track editor text boxes doesn\u0027t block ship control inputs\n\u003C/p\u003E\n"},{"CreatedByName":"Acru","CreatedById":142432,"CreatedDateTime":"2019-06-03T18:39:19Z","Content":"\n\u003Cp\u003E\nI notice the Kal-1000 can\u0027t control the position of stock landing struts too, which would be useful.\n\u003C/p\u003E\n\u003Cp\u003E\nI mean, one could build custom landing legs out of robotic parts, but there is no ideal \u0027landing foot\u0027 part that would survive the impact of landing, and pistons apply constant force where landing struts apply increasing force as they are compressed like a spring and don\u0027t require power.\u00A0 Perhaps a \u0027spring strut\u0027 part would allow for better custom landing legs?\n\u003C/p\u003E\n"}]}