{"TopicId":50533,"ForumId":34,"TopicTitle":"[1.8.x-1.12.x] Module Manager 4.2.3 (July 03th 2023) - Fireworks season","CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2013-10-25T13:01:36Z","PageNum":112,"Articles":[{"CreatedByName":"Sigma88","CreatedById":113260,"CreatedDateTime":"2015-07-09T18:10:48Z","Content":"\n\u003Cp\u003EIf I want to remove a key from all the modules in a part, can I do it with this?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[partname]\u003Cbr\u003E{\u003Cbr\u003E     @MODULE\u003Cbr\u003E[*]\u003Cbr\u003E     {\u003Cbr\u003E          !key = DEL\u003Cbr\u003E     }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI don\u0027t know why, but I had to do this in order to make it work\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[partname]\u003Cbr\u003E{\u003Cbr\u003E     @MODULE:HAS[#key\u003Cbr\u003E[*]]\u003Cbr\u003E     {\u003Cbr\u003E          !key = DEL\u003Cbr\u003E     }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-09T18:27:10Z\u0022 title=\u002207/09/2015 06:27  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 9, 2015\u003C/time\u003E by Sigma88\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-07-09T19:13:59Z","Content":"\n\u003Cp\u003E@MODULE[foo] will run only on the first module that matches.\u003C/p\u003E\u003Cp\u003EYou want @MODULE,*\u003C/p\u003E\n"},{"CreatedByName":"Sigma88","CreatedById":113260,"CreatedDateTime":"2015-07-09T19:15:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003E@MODULE[foo] will run only on the first module that matches.\u003Cp\u003EYou want @MODULE,*\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOH, I thought @MODULE\u003C/p\u003E\u003Cp\u003E[*] would have targettet any module.\u003C/p\u003E\u003Cp\u003Efair enough, thanks for the tip \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Felbourn","CreatedById":97344,"CreatedDateTime":"2015-07-10T14:34:55Z","Content":"\n\u003Cp\u003EAre changes not immediate?\u003C/p\u003E\u003Cp\u003EI did this test:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EtempFX1 = #$/MODULE[ModuleEnginesFX]/maxThrust$\u003Cbr\u003E@MODULE[ModuleEnginesFX]\u003Cbr\u003E{\u003Cbr\u003E   @maxThrust = 250\u003Cbr\u003E}\u003Cbr\u003EtempFX2 = #$/MODULE[ModuleEnginesFX]/maxThrust$\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EmaxThrust is 90 in the orginal CFG file.\u003C/p\u003E\u003Cp\u003EThe MM cache file shows these values after loading:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EtempFX1 = 90\u003Cbr\u003EtempFX2 = 90\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E   ...\u003Cbr\u003E   maxThrust = 250\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo the change is taking place but the before and after vars are the original.\u003C/p\u003E\n"},{"CreatedByName":"Sigma88","CreatedById":113260,"CreatedDateTime":"2015-07-10T14:42:27Z","Content":"\n\u003Cp\u003Eis there more than one MODULE[ModuleEnginesFX] in the part you are editing?\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-07-10T15:06:49Z","Content":"\n\u003Cp\u003EThe directive are not processed in the order you write them in the script. loaded config node are composed of a list of values and a list of sub node. MM process the value first and then the subnodes.\u003C/p\u003E\u003Cp\u003ESo the actual processing order of your test would be : \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EtempFX1 = #$/MODULE[ModuleEnginesFX]/maxThrust$\u003Cbr\u003EtempFX2 = #$/MODULE[ModuleEnginesFX]/maxThrust$\u003Cbr\u003E@MODULE[ModuleEnginesFX]\u003Cbr\u003E{\u003Cbr\u003E   @maxThrust = 250\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Sigma88","CreatedById":113260,"CreatedDateTime":"2015-07-10T15:13:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EThe directive are not processed in the order you write them in the script. loaded config node are composed of a list of values and a list of sub node. MM process the value first and then the subnodes.\u003Cp\u003ESo the actual processing order of your test would be : \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EtempFX1 = #$/MODULE[ModuleEnginesFX]/maxThrust$\u003Cbr\u003EtempFX2 = #$/MODULE[ModuleEnginesFX]/maxThrust$\u003Cbr\u003E@MODULE[ModuleEnginesFX]\u003Cbr\u003E{\u003Cbr\u003E   @maxThrust = 250\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ereally??? oh $....\u003C/p\u003E\u003Cp\u003EI need to go back and re-check everything then...\u003C/p\u003E\u003Cp\u003Edoes it work the same for sub-subnodes?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@Part\u003Cbr\u003E{\u003Cbr\u003E     @MODULE\u003Cbr\u003E     {\u003Cbr\u003E          @key\u003Cbr\u003E          @SUBMODULE\u003Cbr\u003E          {\u003Cbr\u003E                @key\u003Cbr\u003E          }\u003Cbr\u003E          @key\u003Cbr\u003E     }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Felbourn","CreatedById":97344,"CreatedDateTime":"2015-07-10T15:18:13Z","Content":"\n\u003Cp\u003EThanks. I\u0027ll just work around it by having a second @PART which I assume those are processed in the order they are seen in the same file. Yea?\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-07-10T16:21:28Z","Content":"\n\u003Cp\u003EYep, they do\u003C/p\u003E\n"},{"CreatedByName":"Sigma88","CreatedById":113260,"CreatedDateTime":"2015-07-11T16:14:44Z","Content":"\n\u003Cp\u003Eis module manager case sensitive?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EIf I do something like this:\u003C/p\u003E\u003Cp\u003E@MODULE:HAS[#key[true]]\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003Ebut the module has \u0022key = True\u0022, would that change?\u003C/p\u003E\u003Cp\u003Eshould I use\u003C/p\u003E\u003Cp\u003E:HAS[#key[?rue]]\u003C/p\u003E\u003Cp\u003E?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003Eedit\u003C/p\u003E\u003Cp\u003Eyeah fixed it.\u003C/p\u003E\u003Cp\u003EEdit2\u003C/p\u003E\u003Cp\u003Eis there any way to make a patch not case sensitive?\u003C/p\u003E\u003Cp\u003EI\u0027m having an issue making a mod to patch other mods, and each modder use different upcase and LOWERCASE ( \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E ) WoRds\u003C/p\u003E\u003Cp\u003Eit\u0027s a NIghTMaRe\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-11T19:18:42Z\u0022 title=\u002207/11/2015 07:18  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 11, 2015\u003C/time\u003E by Sigma88\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"cipherpunks","CreatedById":114858,"CreatedDateTime":"2015-07-12T16:51:02Z","Content":"\n\u003Cp\u003ESo let\u0027s say I want to fix all the old part/mod bottom nodes that have \u002B1 in their 5th position.\u003C/p\u003E\u003Cp\u003EWhat do I do to match, and then change, @node_stack_bottom\u0027s 5th item? Just :HAS[#node_stack_bottom,5[1]] and @node_stack_bottom,5 = -1?\u003C/p\u003E\n"},{"CreatedByName":"Sigma88","CreatedById":113260,"CreatedDateTime":"2015-07-12T16:55:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022cipherpunks\u0022 data-cite=\u0022cipherpunks\u0022\u003E\u003Cdiv\u003ESo let\u0027s say I want to fix all the old part/mod bottom nodes that have \u002B1 in their 5th position.\u003Cp\u003EWhat do I do to match, and then change, @node_stack_bottom\u0027s 5th item? Just :HAS[#node_stack_bottom,5[1]] and @node_stack_bottom,5 = -1?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ethe fifth would be node_stack_bottom,4 (the first being node_stack_bottom,0)\u003C/p\u003E\u003Cp\u003Eother than that, idk if it will work in the :HAS[]\u003C/p\u003E\n"},{"CreatedByName":"cipherpunks","CreatedById":114858,"CreatedDateTime":"2015-07-12T17:05:57Z","Content":"\n\u003Cp\u003EOne more question. I\u0027m trying to fix old Goodspeed parts, and I do this:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[goodspeedRocketPartsTank,goodspeedGoldFuelBall,goodspeedGoldXenonBall] { @MODEL,* { @texture,* ^= :crewCabin:hitchhikerStorageContainer: } }  // Goodspeed Rocket Parts Container, FB-G Fuel Tank, XB-G Xenon Tank\u003Cbr\u003E@PART[goodspeedPartsWarehouse]  { @MODEL,* { @texture,* ^= :Utility/roverBody:Command/probeRoverBody:  } }  // Goodspeed Rocket Parts Warehouse\u003Cbr\u003E@PART[goodspeedHexFrame*,goodspeedHexSideMount1] { @MODEL,* { @texture,* ^= :strutCube:strutCubicOcto: } }  // Goodspeed TR6.1 Structural Frame, TR6.3 Structural Frame, TR-S Side Mount\u003Cbr\u003E@PART[goodspeedStashBox] { @MODEL,* { @texture,* ^= :mk2LanderCabin:mk2LanderCan: } }  // Goodspeed Experiment Storage Device\u003Cbr\u003E@PART[goodspeedOrangeFuelBall] { @MODEL,* { @texture,* ^= :fuelTank3-2:fuelTankJumbo-64: } }  // Goodspeed FB-O Fuel Tank, FP-O Fuel Tank\u003Cbr\u003E@PART[goodspeedRoundFuelCap] { @MODEL,* { @texture,* ^= :fuelTank_long:fuelTankT800: } }  // Goodspeed Rounded Fuel Cap\u003Cbr\u003E@PART[goodspeedNuclearReactor*] { @MODEL,* { @texture,* ^= :nuclearEngine:liquidEngineLV-N: } }  // Goodspeed UNSFE-100 Nuclear Reactor, UNSFE-200 Nuclear Reactor, UNSFE-400 Nuclear Reactor\u003Cbr\u003E@PART[goodspeed_zap01] { @MODEL,* { @texture,* ^= :ksp_r_largeBatteryPack:z-400Battery: } }  // Goodspeed ZAP-01 Radioisotope Thermoelectric Generator\u003Cbr\u003E@PART[goodspeedSideNose1250] { @MODEL,* { @texture,* ^= :solidBooster1-1:solidBoosterBACC: } }  // Goodspeed SM-1250 Rocket Cap\u003Cbr\u003E@PART[goodspeedSideMount1250] { @MODEL,* { @texture,* ^= :StackDecoupler:decouplerStackTR-18A: } }  // Goodspeed SMD-250 Side Mount \u0026amp; Decoupler\u003C/pre\u003E\u003Cp\u003Eand it doesn\u0027t work; in ModuleManager.ConfigCache I see:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        MODEL        {\u003Cbr\u003E[B]            texture = :StackDecoupler:decouplerStackTR-18A:[/B]\u003Cbr\u003E            texture = model001, Squad/Parts/Utility/StackDecoupler/model001\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI also do this:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[goodspeedMonoStack3750] { @MODEL,* { @model ^= :RCSTank1-2:RCSFuelTankR1: } }  // Goodspeed FL-R5 RCS Fuel Tank\u003Cbr\u003E\u003Cbr\u003E@PART[goodspeedSweptPylon400] {  // Goodspeed SW-400 Pylon \u0026amp; Decoupler\u003Cbr\u003E  @MODEL,0 {\u003Cbr\u003E    @texture,0 ^= :Aero/advancedCanard:Structural/strutCubicOcto:\u003Cbr\u003E    @texture,1 ^= :Aero/advancedCanard:Structural/strutCubicOcto:\u003Cbr\u003E  }  // MODEL\u003Cbr\u003E}  // PART\u003C/pre\u003E\u003Cp\u003Eand this works fine (both ways).\u003C/p\u003E\u003Cp\u003EWhat gives?..\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sigma88\u0022 data-cite=\u0022Sigma88\u0022\u003E\u003Cdiv\u003Ethe fifth would be node_stack_bottom,4 (the first being node_stack_bottom,0)\u003C/div\u003E\u003C/blockquote\u003EYeah, forgot that, 10x. But... Using \u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@node_stack_bottom,4 = -1\u003C/pre\u003E\u003Cp\u003Ejust breaks the nodes, giving\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Enode_stack_bottom = -1\u003C/pre\u003E\u003Cp\u003E :-( So there must be some other method of accessing that.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-12T19:08:39Z\u0022 title=\u002207/12/2015 07:08  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 12, 2015\u003C/time\u003E by cipherpunks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"cipherpunks","CreatedById":114858,"CreatedDateTime":"2015-07-12T17:47:47Z","Content":"\n\u003Cp\u003ESo, here\u0027s what I came with:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[goodspeed*]:HAS[#node_stack_bottom\u003Cbr\u003E[*]]:NEEDS[Goodspeed]:FIRST {  // Goodspeed parts have old-style, \u0022wrong\u0022 bottom nodes; some are overrided later, hence :FIRST\u003Cbr\u003E  @node_stack_bottom = #$node_stack_bottom[0]$, $node_stack_bottom[1]$, $node_stack_bottom[2]$, $node_stack_bottom[3]$, -1, $node_stack_bottom[5]$, $node_stack_bottom[6]$\u003Cbr\u003E}  // PART\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EStill need to solve \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E@MODEL,* { @texture\u003C/span\u003E\u003Cspan style=\u0022color:#b22222;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E,* ^=\u003C/span\u003E\u003C/span\u003E problem. Sarbian?...\u003C/p\u003E\u003Cp\u003EAnd can You please add ; as statement separator, so I could neatly \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E@oneline { @var1 = val1; @var2 = somethingelse } \u003C/span\u003E? Screen real estate is precious.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-12T19:34:38Z\u0022 title=\u002207/12/2015 07:34  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 12, 2015\u003C/time\u003E by cipherpunks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-07-13T08:35:59Z","Content":"\n\u003Cp\u003EI ll have a look at the regex but I m pretty sure someone already wrote a similar patch that worked.\u003C/p\u003E\u003Cp\u003EThe file are parsed by KSP, so no \u0022;\u0022. And even if it was not I would not. One line code is the root of all evil.\u003C/p\u003E\n"},{"CreatedByName":"cipherpunks","CreatedById":114858,"CreatedDateTime":"2015-07-13T13:51:48Z","Content":"\n\u003Cp\u003EWhy it is? Can You elaborate? cause I\u0027ve been using one-liners for so many years with great success, in various OS\u0027s and lang\u0027s....\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-07-13T16:09:53Z","Content":"\n\u003Cp\u003EThat does not make them a good idea.\u003C/p\u003E\n"},{"CreatedByName":"pack_rtr","CreatedById":147970,"CreatedDateTime":"2015-07-13T16:11:56Z","Content":"\n\u003Cp\u003EI am making a custom 0.90 install and i need an older version of Module Manager. Can you provide me with a link?\u003C/p\u003E\n"},{"CreatedByName":"Nori","CreatedById":41334,"CreatedDateTime":"2015-07-13T21:22:18Z","Content":"\n\u003Cp\u003EAll of the releases are here: \u003Ca href=\u0022https://github.com/sarbian/ModuleManager/releases\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/sarbian/ModuleManager/releases\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s linked right on the first page.\u003C/p\u003E\u003Cp\u003ECan you have a HAS[@MODULE[!XYZ] applied right after a module?\u003C/p\u003E\u003Cp\u003EBasically I\u0027m trying to apply a module, but only if it isn\u0027t on there. If the module is on, or added, delete another module..\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:NEEDS[CrossFeedEnabler]:HAS[@MODULE[InterstellarFuelSwitch]]:FOR[zCustom]:Final\u003Cbr\u003E{\u003Cbr\u003E\tMODULE[ModuleCrossFeed]:HAS[!MODULE[ModuleCrossFeed]]\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ModuleCrossFeed\u003Cbr\u003E\t\tcrossFeedOverride = False\u003Cbr\u003E\t}\u003Cbr\u003E\t!MODULE[ModuleFuelCrossfeedActions]:HAS[MODULE[ModuleCrossFeed]]{}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"pack_rtr","CreatedById":147970,"CreatedDateTime":"2015-07-13T21:38:23Z","Content":"\n\u003Cp\u003EThanks a lot!!!\u003C/p\u003E\n"},{"CreatedByName":"Murdabenne","CreatedById":142825,"CreatedDateTime":"2015-07-14T01:36:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022cipherpunks\u0022 data-cite=\u0022cipherpunks\u0022\u003E\u003Cdiv\u003EWhy it is? Can You elaborate? cause I\u0027ve been using one-liners for so many years with great success, in various OS\u0027s and lang\u0027s....\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EReadability enhances maintainability. Cryptiuc and dense one liners are part of the things that made perl known as a \u0022write only\u0022 language.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-07-14T02:37:18Z","Content":"\n\u003Cp\u003ENori, those are just tags. They only have the source.\u003C/p\u003E\u003Cp\u003Epack_rtr, you want the build server. On the left, Build History. \u003Ca href=\u0022https://ksp.sarbian.com/jenkins/job/ModuleManager/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp.sarbian.com/jenkins/job/ModuleManager/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENori: HAS means \u0022does this node have this thing\u0022 so no.\u003C/p\u003E\u003Cp\u003EConsider two things:\u003C/p\u003E\u003Cp\u003E@MODULE[foo] is just shorthand for @MODULE:HAS[#name[foo]]\u003C/p\u003E\u003Cp\u003E@MODULE[foo]:HAS[@MODULE[bar] means to find the MODULE with name == \u0027foo\u0027 that has a node inside it named MODULE which has a value inside that called \u0027name = bar\u0027.\u003C/p\u003E\u003Cp\u003EI don\u0027t think that\u0027s what you want to be doing.\u003C/p\u003E\u003Cp\u003EAlso, you can\u0027t have multiple pass specifiers (well, you can, but only the first one will be used). That is to say, :FOR[foo]:FINAL is \u003Cem\u003Eexactly\u003C/em\u003E the same as just :FOR[foo] because the FOR pass for mod \u0027foo\u0027 comes before the FINAL pass.\u003C/p\u003E\u003Cp\u003EJust like FOR[foo]:AFTER[bar] will run on the AFTER pass for mod bar, not on the FOR pass for mod foo.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-14T02:39:28Z\u0022 title=\u002207/14/2015 02:39  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 14, 2015\u003C/time\u003E by NathanKell\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"cipherpunks","CreatedById":114858,"CreatedDateTime":"2015-07-14T08:18:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EThat does not make them a good idea.\u003C/div\u003E\u003C/blockquote\u003EThis argument seems purely subjective to me. Don\u0027t get me wrong, but \u003Cstrong\u003Eplease elaborate or retract.\u003C/strong\u003E Cause if one-liners \u003Cstrong\u003Eare\u003C/strong\u003E bad, then bigger half of I.T. world is doing bad thing many times per day (for example \u003Cem\u003Eusing shell, chaining commands with pipes in shell \u003C/em\u003Eetc), and it is our duty to warn them, right?\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Murdabenne\u0022 data-cite=\u0022Murdabenne\u0022\u003E\u003Cdiv\u003EReadability enhances maintainability. Cryptiuc and dense one liners are part of the things that made perl known as a \u0022write only\u0022 language.\u003C/div\u003E\u003C/blockquote\u003EExcuse me, but (increasing line count) != (readability will increase linearly). Quite often it\u0027s quite the contrary \u003Cspan style=\u0022font-size:8px;\u0022\u003E(as screen space is limited and you need to scroll when the code is really sparse, so you can\u0027t read entire section in one glimpse, and risk distraction.\u003C/span\u003E\u003Cp\u003EBesides, AFAIK Perl haters hate Perl because of regexps, which \u003Cstrong\u003E\u003Cem\u003Eare\u003C/em\u003E\u003C/strong\u003E dense; but You do not advocate removing regex support from MM, do You?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-14T09:34:58Z\u0022 title=\u002207/14/2015 09:34  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 14, 2015\u003C/time\u003E by cipherpunks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pack_rtr","CreatedById":147970,"CreatedDateTime":"2015-07-14T16:36:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003ENori, those are just tags. They only have the source.\u003Cp\u003Epack_rtr, you want the build server. On the left, Build History. \u003Ca href=\u0022https://ksp.sarbian.com/jenkins/job/ModuleManager/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp.sarbian.com/jenkins/job/ModuleManager/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENori: HAS means \u0022does this node have this thing\u0022 so no.\u003C/p\u003E\u003Cp\u003EConsider two things:\u003C/p\u003E\u003Cp\u003E@MODULE[foo] is just shorthand for @MODULE:HAS[#name[foo]]\u003C/p\u003E\u003Cp\u003E@MODULE[foo]:HAS[@MODULE[bar] means to find the MODULE with name == \u0027foo\u0027 that has a node inside it named MODULE which has a value inside that called \u0027name = bar\u0027.\u003C/p\u003E\u003Cp\u003EI don\u0027t think that\u0027s what you want to be doing.\u003C/p\u003E\u003Cp\u003EAlso, you can\u0027t have multiple pass specifiers (well, you can, but only the first one will be used). That is to say, :FOR[foo]:FINAL is \u003Cem\u003Eexactly\u003C/em\u003E the same as just :FOR[foo] because the FOR pass for mod \u0027foo\u0027 comes before the FINAL pass.\u003C/p\u003E\u003Cp\u003EJust like FOR[foo]:AFTER[bar] will run on the AFTER pass for mod bar, not on the FOR pass for mod foo.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhich is the newest build for 0.90?\u003C/p\u003E\n"},{"CreatedByName":"Nori","CreatedById":41334,"CreatedDateTime":"2015-07-14T17:04:02Z","Content":"\n\u003Cp\u003EWhoops. Sorry about that. I\u0027m so used to downloading mods from github that I just assumed it included the DLL.\u003C/p\u003E\u003Cp\u003E@pack_rtr - I think this is what you want: \u003Ca href=\u0022https://ksp.sarbian.com/jenkins/job/ModuleManager/83/artifact/ModuleManager.2.6.0.dll\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp.sarbian.com/jenkins/job/ModuleManager/83/artifact/ModuleManager.2.6.0.dll\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThat is the last build before KSP 1.0 was released.\u003C/p\u003E\u003Cp\u003EThanks NathanKell. I was wondering about FOR and Final as the Final didn\u0027t seem to be final.. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Hm, I thought that I have seen AFTER \u002B FOR in some mods but maybe I\u0027m wrong? Probably was a NEEDS \u002B FOR.\u003C/p\u003E\u003Cp\u003EConsidering this is for my own tweaks, is it best to use a FOR[zCustom] like I am, or should I just put :Final on my changes? I am sometimes overwriting MM changes made by other mods, was hoping FOR[zCustom] would apply after most mods as I figured FOR was done alphabetically, but maybe I\u0027m wrong.\u003C/p\u003E\u003Cp\u003EOk, so basically I\u0027m just going to have to do this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:NEEDS[CrossFeedEnabler]:HAS[@MODULE[InterstellarFuelSwitch],@MODULE[ModuleCrossFeed]]:FOR[zCustom]\u003Cbr\u003E{\u003Cbr\u003E\t!MODULE[ModuleFuelCrossfeedActions]{}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[*]:NEEDS[CrossFeedEnabler]:HAS[@MODULE[InterstellarFuelSwitch],!MODULE[ModuleCrossFeed]]:FOR[zCustom]\u003Cbr\u003E{\u003Cbr\u003E\tMODULE[ModuleCrossFeed]\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ModuleCrossFeed\u003Cbr\u003E\t\tcrossFeedOverride = False\u003Cbr\u003E\t}\u003Cbr\u003E\t!MODULE[ModuleFuelCrossfeedActions]{}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"}]}