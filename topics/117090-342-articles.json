{"TopicId":117090,"ForumId":36,"TopicTitle":"[WIP][1.8.x] SSTULabs - Low Part Count Solutions (Orbiters, Landers, Lifters) - Dev Thread [11-18-18]","CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2015-07-28T18:13:57Z","PageNum":342,"Articles":[{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-17T18:46:34Z","Content":"Much progress this week on bringing the StationCore parts back online.  So far, so good.  ST-DOS and ST-COS parts have had basic conversion done, and are loading properly.  ST-HAB has had model defs updated, with part configs WIP.  Current focus is on updating the ST-CFG parts, including some improved handling of the inflation sequence and rotation handling.\n\n![x4zBNxp.png](https://i.imgur.com/x4zBNxp.png)\n\nI know its not that impressive to show pics of parts that *already worked* in previous versions... but steps such as this are actually a pretty \u0027big deal\u0027.  Specifically, how easy it is to get all of these different parts working using the new module.  Simply setup the model definitions correctly, plug in the proper values to the part config, and hit \u0027play\u0027 (it is quite a lot of config work, but its not *hard* work).  So easy to add new options and features, or customize the parts for specific setups.\n\nAfter I get things a little bit further along and into the external testing phase (hopefully next week...), I intend on writing up a couple of sample parts to showcase some of the more.... complex... features of the new module, such as the model-layouts and integrated animation handling.  (these likely won\u0027t be parts intended for actual use, merely for showing off some of the features that are not yet used in any \u0027live\u0027 parts)\n\nRegarding \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E/RF use -- during or shortly after the initial testing period for these releases, it would be nice to take a look at cleaning up the RF integration for the modular-parts (MEC, MFT, MUS, ST, etc...), to allow for at least some level of integration.  I believe the problematic point will be, as it has always been, supporting the use of ModuleEngineConfigs without breaking the engine clustering code.  If others are ***serious*** about being able to use SSTU with RF/\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E, it might well take some codeside changes to the RF modules to allow for some different interfaces.  If/when I get to this point, I\u0027ll probably reach out for help from someone who is actually familiar with \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E configs/setup.\n\n(note, I still do not intend on *supporting* \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E/RF use or providing any configs, but I will do everything that I can to make it *compatible* from a plugin perspective)"},{"CreatedByName":"Iso-Polaris","CreatedById":165467,"CreatedDateTime":"2018-05-18T00:11:03Z","Content":"\u003E \n\u003E \n\u003E 9 hours ago, Jimbodiah said:\n\u003E \n\u003E \n\u003E If you don\u0027t want to use \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E (and I don\u0027t either), just use my patch. No need messing with weights and rescaling of parts. Not sure why you want RF if you are not using \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E though, as SSTU does not support either.\n\u003E \n\nWhere is that \u0022your patch\u0022 you are talking about?\n\nI don\u0027t use \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E cuz it\u0027s messing up with KSPI-E but RF works fine with it. Since im playing with \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E-size planet pack its essential to have the weights messed with.\n\n\u003E \n\u003E \n\u003E 5 hours ago, Shadowmage said:\n\u003E \n\u003E \n\u003E Regarding \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E/RF use -- during or shortly after the initial testing period for these releases, it would be nice to take a look at cleaning up the RF integration for the modular-parts (MEC, MFT, MUS, ST, etc...), to allow for at least some level of integration.  I believe the problematic point will be, as it has always been, supporting the use of ModuleEngineConfigs without breaking the engine clustering code.  If others are ***serious*** about being able to use SSTU with RF/\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E, it might well take some codeside changes to the RF modules to allow for some different interfaces.  If/when I get to this point, I\u0027ll probably reach out for help from someone who is actually familiar with \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E configs/setup.\n\u003E \n\nFrom I can tell, lots of people do love to use SSTU with RF/\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E."},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2018-05-18T00:14:07Z","Content":"Check my signature... if you\u0027re not using \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E then just change/remove the NEEDS[...] part."},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2018-05-18T05:06:09Z","Content":"\u003E \n\u003E \n\u003E 13 hours ago, Shadowmage said:\n\u003E \n\u003E \n\u003E For reference -- if RF is the problem, it is not with any of its actual *fuel* related functions.  The technical issue is (and always has been) with ModuleEngineConfigs;  two entirely separate part-modules, both trying to manipulate part-mass (and thrust, isp, cost...etc).  If you use RF for only the fuel tanks, and don\u0027t include or use any of the engine-manipulation modules, there shouldn\u0027t be any problems with the engine parts.\n\u003E \n\nSet origMass to -1 (or even delete it outright since it defaults to that anyway) and it won\u0027t touch mass.\n\n\u003E \n\u003E \n\u003E 4 hours ago, Iso-Polaris said:\n\u003E \n\u003E \n\u003E From I can tell, lots of people do love to use SSTU with RF/\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E.\n\u003E \n\nAs do I; no problems here."},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-18T14:21:57Z","Content":"General development news:\n\nStill working away at part configs.  Only the ST-HAB and MSRB parts left to do initial conversions on.  HAB will likely be cleaned up today/have the first pass done, and I want to take a look at the MSRB stuff over the weekend.  Really seems like initial test releases might be Sunday at the earliest, or more likely sometime next week/week-end.\n\nI have adjusted the RCSFuelSwitch module to be a bit more generic.  It can now interface with ModuleRCS, ModuleEngines, and SSTUVolumeContainer; for \u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E/engine it sets the propellant and \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E, and for VC it sets the resources and ratios (all while in the editor; no flight-scene adjustments are possible).  While I likely won\u0027t be using much of these functions in the default SSTU releases right now, I have a feeling they could be put to good use in the future (methalox engine conversions?).\n\nCurrently a bit \u0027stuck\u0027 on trying to figure out the best way to handle the container setup for the StationCore parts.  I want them to have the adapter selection contribute to the available volume for the parts... but I also want to keep a pre-set balance for the part in its default configuration (\u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E, life-support, etc).  Seems like I\u0027ll be accomplishing this by manually specifying the volume for the CORE model, and letting the adapters contribute their volume to a container that is set to be \u0027empty\u0027 be default.\n\nI\u0027m also working on making the \u0027support container\u0027 setup used by the MUS into a generic system usable by the ModularPart system.  When enabled, this will allow for a user-controlled percentage of config defined containers to be diverted to a secondary config-defined container.  So you\u0027ll be able to change the ratio of main propellant vs. \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E propellant without too much difficulty.  When combined with the FuelSelection module from above, this will allow for direct GUI control of the main fuel types (e.g. fuel for engines) as well as the auxiliary fuel types (e.g. fuel for \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E), all without opening up the \u0027edit container GUI\u0027, and while also setting the \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E (or engine) to the proper fuel type.\n\n\u003E \n\u003E \n\u003E 9 hours ago, Starwaster said:\n\u003E \n\u003E \n\u003E Set origMass to -1 (or even delete it outright since it defaults to that anyway) and it won\u0027t touch mass.\n\u003E \n\nI\u0027ll have to give that a try when I\u0027m trying out the RF integration stuff.  Is that a setting in the ModuleEngineConfigs  .cfg, or something I\u0027ll need to set through code (reflection)?"},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2018-05-18T15:24:00Z","Content":"\u003E \n\u003E \n\u003E 1 hour ago, Shadowmage said:\n\u003E \n\u003E \n\u003E for \u003Cabbr title=\u0022Reaction Control System\u0022\u003Ercs\u003C/abbr\u003E/engine it sets the propellant and \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E\n\u003E \n\n![:wub:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_wub.png \u0022:wub:\u0022)"},{"CreatedByName":"DragonRoco","CreatedById":63676,"CreatedDateTime":"2018-05-18T15:39:31Z","Content":"\u003E \n\u003E \n\u003E 1 hour ago, Shadowmage said:\n\u003E \n\u003E \n\u003E While\uFEFF I likely won\u0027t be using much of these functions in the default SSTU releases right\uFEFF now, I have a feeling they could be put to good use in the future (methalox \uFEFF\uFEFFengine conversions?).\n\u003E \n\nThat might make it neater than cloning the part. Once it comes out I might release my methalox configs along with some other small stuff. \n\nIs there any large config changes to the engine clusters? I\u0027m thinking about doing the configs for the near future line soon."},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2018-05-18T16:44:09Z","Content":"\u003E \n\u003E \n\u003E 2 hours ago, Shadowmage said:\n\u003E \n\u003E \n\u003E I\u0027ll have to give that a try when I\u0027m trying out the RF integration stuff.  Is that a setting in the ModuleEngineConfigs  .cfg, or something I\u0027ll need to set through code (reflection)?\n\u003E \n\nSet it in the MEC config\n\nOn another note, can you/would you expose the number of engines in a cluster, preferably as a persistent field in its config in order to allow other mods to pick up on the fact that it represents multiple engines? Stage Recovery can\u0027t really see it as anything other than a single engine. It would help with a pull I\u0027d like to make to SR to fix the issue (SR can\u0027t really see the engine properly since it only sees it when it\u0027s off rails and off screen so it\u0027s either look at it\u0027s prefab or look at the config for the module)"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-18T17:10:40Z","Content":"\u003E \n\u003E \n\u003E 8 minutes ago, Starwaster said:\n\u003E \n\u003E \n\u003E On another note, can you/would you expose the number of engines in a cluster, preferably as a persistent field in its config in order to allow other mods to pick up on the fact that it represents multiple engines?\n\u003E \n\nI\u0027ll look into it.  Going to be not very straightforward though, as the number of engines isn\u0027t tracked like that -- it is dependent upon the currently selected \u0027layout\u0027, and how many POSITION nodes are defined in it.  I only store the current layout name, and a reference to the data-construct for the actual layout.  I could certainly write a method to return the # of positions as an integer, but it would be difficult (and entirely useless to SSTU) to expose it as a field.\n\nSo, in theory, that information is already available.  Grab the \u0027currentEngineLayoutName\u0027 name (public field, marked with KSPField) from the engine-cluster module, look up that layout via name from the KSP GameDatabase, and then count the number of \u0027POSITION\u0027 nodes in the config of layout.\n\nExample code that should return the # of positions in the currently selected layout for an engine cluster.  Simply feed in the ModularEngineCluster part-module, and it should return the # of positions.  Structured in such a way as to not require reflection or compile-time dependencies (should be able to copy/paste that code into your mod, and it should \u0027just work\u0027).\n\n            public static int getEngineClusterPosCount(PartModule module)\n            {\n                string layoutName = string.Empty;\n                BaseField field = module.Fields[\u0022currentEngineLayoutName\u0022];\n                if (field != null) { layoutName = (string)field.GetValue(module); }\n                if (!string.IsNullOrEmpty(layoutName)) { return findLayoutClusterPosCount(layoutName); }\n                return 0;\n            }\n    \n            public static int findLayoutClusterPosCount(string layoutName)\n            {\n                ConfigNode[] layoutNodes = GameDatabase.Instance.GetConfigNodes(\u0022SSTU_ENGINELAYOUT\u0022);\n                int len = layoutNodes.Length;\n                for (int i = 0; i \u003C len; i\u002B\u002B)\n                {\n                    if (layoutNodes[i].GetValue(\u0022name\u0022) == layoutName) { return layoutNodes[i].GetNodes(\u0022POSITION\u0022).Length; }\n                }\n                return 0;\n            }"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2018-05-18T20:51:05Z","Content":"\u003E \n\u003E \n\u003E 3 hours ago, Shadowmage said:\n\u003E \n\u003E \n\u003E I\u0027ll look into it.  Going to be not very straightforward though, as the number of engines isn\u0027t tracked like that -- it is dependent upon the currently selected \u0027layout\u0027, and how many POSITION nodes are defined in it.  I only store the current layout name, and a reference to the data-construct for the actual layout.  I could certainly write a method to return the # of positions as an integer, but it would be difficult (and entirely useless to SSTU) to expose it as a field.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E So, in theory, that information is already available.  Grab the \u0027currentEngineLayoutName\u0027 name (public field, marked with KSPField) from the engine-cluster module, look up that layout via name from the KSP GameDatabase, and then count the number of \u0027POSITION\u0027 nodes in the config of layout.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E Example code that should return the # of positions in the currently selected layout for an engine cluster.  Simply feed in the ModularEngineCluster part-module, and it should return the # of positions.  Structured in such a way as to not require reflection or compile-time dependencies (should be able to copy/paste that code into your mod, and it should \u0027just work\u0027).\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     \n\u003E     \n\u003E             public static int getEngineClusterPosCount(PartModule module)\n\u003E             {\n\u003E                 string layoutName = string.Empty;\n\u003E                 BaseField field = module.Fields[\u0022currentEngineLayoutName\u0022];\n\u003E                 if (field != null) { layoutName = (string)field.GetValue(module); }\n\u003E                 if (!string.IsNullOrEmpty(layoutName)) { return findLayoutClusterPosCount(layoutName); }\n\u003E                 return 0;\n\u003E             }\n\u003E     \n\u003E             public static int findLayoutClusterPosCount(string layoutName)\n\u003E             {\n\u003E                 ConfigNode[] layoutNodes = GameDatabase.Instance.GetConfigNodes(\u0022SSTU_ENGINELAYOUT\u0022);\n\u003E                 int len = layoutNodes.Length;\n\u003E                 for (int i = 0; i \u003C len; i\u002B\u002B)\n\u003E                 {\n\u003E                     if (layoutNodes[i].GetValue(\u0022name\u0022) == layoutName) { return layoutNodes[i].GetNodes(\u0022POSITION\u0022).Length; }\n\u003E                 }\n\u003E                 return 0;\n\u003E             }\n\u003E \n\nNot sure why it wouldn\u0027t be straightforward as it\u0027s three lines of code but as you say it\u0027s of no use to SSTU so I understand your position.\n\nAs to the suggested code, the second one could work as the module\u0027s saved ConfigNode could be retrieved easily enough... that\u0027s basically the only reliable information that\u0027s available at the time the code would have to be run since the vessel in question wouldn\u0027t have properly loaded PartModules."},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-18T21:05:33Z","Content":"\u003E \n\u003E \n\u003E 5 minutes ago, Starwaster said:\n\u003E \n\u003E \n\u003E Not sure why it wouldn\u0027t be straightforward as it\u0027s three lines of code but as you say it\u0027s of no use to SSTU so I understand your position.\n\u003E \n\nBecause it is not a field that is already in use.  I would have to create a new public field in the class to store the information (not hard at all), and then I would have to make sure to manually update it and keep it in sync with the actual data from the layout (potentially not that hard, but is needless complexity).\n\nBut if the live and fully initialized PartModule (and its fields) are not accessible as you say... a \u0027position count\u0027 field wouldn\u0027t help either.  The layout name is already a persistent public field of the module, and would have the exact same accessibility as any \u0027position count\u0027 field I could potentially add."},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-18T23:12:17Z","Content":"SSTUFuelSelection module \u002B SSTUVolumeContainer...\n\nIn this example I\u0027ve defined a separate CONTAINER in the config that is responsible for the \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E fuel.  By default it is set to AZ50/NTO mix which is shared by the engines (top screenshot), but can be changed to MP with the \u0027\u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E Fuel\u0027 selection widget (lower screenshot)\n\n![upmzmUv.png](https://i.imgur.com/upmzmUv.png)\n\n![BNmICi3.png](https://i.imgur.com/BNmICi3.png)"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-21T15:30:37Z","Content":"Much work over the weekend on finishing up the rest of the plugin features and updating configs.  I think at this point it is about as ready for initial testing as it will ever be.  Undoubtedly there are still a few things that got missed, are unfinished, or are actual bugs.\n\nSo, for anyone interested in helping to do testing on the 1.4 versions, you may find it all here:  [https://github.com/shadowmage45/SSTULabs/archive/dev.zip](https://github.com/shadowmage45/SSTULabs/archive/dev.zip)\n\nThe above link should be a zipped up copy of the entire dev repository.  You should install only the contents of the GameData/ folder,  minus the Optional Patches and Texture Sets folders.  I will not be packing up actual releases until this initial testing period is done and most of the bugs/issues have been resolved.  I anticipate that at least a couple of weeks worth of testing and cleanup will be needed.\n\nIn regards to submitting bug reports -- keep them all on the Github issues tracker, preferably in one of the existing issues.  Please take a look at the existing issue tickets before posting about a problem and make sure it hasn\u0027t already been reported.  For most part-related problems, you will also need to include at least the last few hundred lines of your KSP.log file.\n\nAny \u0027bug reports\u0027 for 1.4\u002B versions posted here on the forums will result in me adding you to my forum ignore list, without further warning or response.  This *is* your warning, single and only...be responsible and respectful, or there will be no further releases (dev or otherwise)."},{"CreatedByName":"tater","CreatedById":119411,"CreatedDateTime":"2018-05-21T16:20:27Z","Content":"I\u2019m out of town, but will grab it tomorrow."},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-21T17:00:17Z","Content":"\u003E \n\u003E \n\u003E 16 minutes ago, tater said:\n\u003E \n\u003E \n\u003E I\u2019m out of town, but will grab it tomorrow.\n\u003E \n\nThanks.  No rush, whenever you have time.\n\nShould also mention that I\u0027ll be updating the dev branch regularly (likely several times per day), so it would be best to keep an eye on the commit log to be apprised of changes and fixes ( [https://github.com/shadowmage45/SSTULabs/commits/dev](https://github.com/shadowmage45/SSTULabs/commits/dev) ).  Just use the same link as posted above to grab the updated version (it always points to the most recent .zip of the dev branch)."},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2018-05-21T17:39:50Z","Content":"ok, time to start playing with the dev stuff.\n\nthanks.\n\nhey, any new craft files?  or which should we use for initial testing ??\n\nCheers."},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2018-05-21T17:44:49Z","Content":"This is to test at part level,; craft files will come after the official non-dev release is stable. I\u0027ll add the craft files to the repository."},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2018-05-21T17:47:58Z","Content":"roger that.  just thought initial tests using a blueprint would come first.\n\nmy bad.\n\nlets see what we can concoct.\n\ncheers."},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2018-05-21T18:35:45Z","Content":"This is to see if the parts actually still work as the underlying code was changed considerably and needs to be tested. So it is best to wait a bit before making complete craft files that might be broken by a new release. It doesn\u0027t take much time to make an apollo replica, so by the time the 1.4 release is stable you will see the updated craft files appear. I\u0027ll try to make a few career crafts as well like last time.  \n\nMeanwhile in KSP 1.3.1: J.J. is a sissy.  \n![sstu_sunflare_01.jpg](http://jimbodiah.com/ksp/sstu/sstu_sunflare_01.jpg)\n\n**Edited \u003Ctime datetime=\u00222018-05-21T18:36:40Z\u0022 title=\u002205/21/2018 06:36  PM\u0022 data-short=\u00226 yr\u0022\u003EMay 21, 2018\u003C/time\u003E by Jimbodiah**"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2018-05-22T00:37:11Z","Content":"Many thanks for info and reply.\n\nI am starting from scratch with a complete clean install.  currently i can not get ksp to load with the new sstu dir\u0027s installed.  just bare load is causing ksp to hang.\n\nI will find it.\n\ncheers."},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2018-05-22T00:50:05Z","Content":"I see you got it to work over on github?    Try the new dev version, Mage fixed some things.\n\n**Edited \u003Ctime datetime=\u00222018-05-22T00:51:16Z\u0022 title=\u002205/22/2018 12:51  AM\u0022 data-short=\u00226 yr\u0022\u003EMay 22, 2018\u003C/time\u003E by Jimbodiah**"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-22T15:27:49Z","Content":"\u003E \n\u003E \n\u003E 14 hours ago, drtedastro said:\n\u003E \n\u003E \n\u003E Many thanks for info and reply.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E I am starting from scratch with a complete clean install.  currently i can not get ksp to load with the new sstu dir\u0027s installed.  just bare load is causing ksp to hang.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E I will find it.\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E  \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E cheers.\n\u003E \n\n\u003E \n\u003E \n\u003E 14 hours ago, Jimbodiah said:\n\u003E \n\u003E \n\u003E I see you got it to work over on github?    Try the new dev version, Mage fixed some things.\n\u003E \n\n^^ This.  There were some out of date dependencies in the dev branch.  Also, as previously posted, keep **all discussion of problems and issues regarding the 1.4 testing versions on Github.**  No further warnings will be issued, I\u0027ll just start ignoring people.  I have enabled and use the github issue tracker for a reason, and it is not so that I can sort through pages of forum posts....\n\nOn a more positive note:\n\nThe new plugin code has made it possible to add separation motors to the MFT-D (radial booster fuel tank).  The only limitation would be that if it were added to the part, it would always be present on the part -- it could not be disabled in the editor, and would have to be patched/edited out of the part to be removed.  What kind of interest is there in having this feature added?"},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2018-05-22T15:51:10Z","Content":"Can\u0027t ~~you~~ the user just set the solid fuel or the thrust to zero in the gui? The same goes for the radial booster decouplers.\n\n**Edited \u003Ctime datetime=\u00222018-05-22T15:52:03Z\u0022 title=\u002205/22/2018 03:52  PM\u0022 data-short=\u00226 yr\u0022\u003EMay 22, 2018\u003C/time\u003E by Jimbodiah**"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2018-05-22T15:53:09Z","Content":"\u003E \n\u003E \n\u003E Just now, Jimbodiah said:\n\u003E \n\u003E \n\u003E Can\u0027t you just set the solid fuel or the thrust to zero in the gui? The same goes for the radial booster decouplers.\n\u003E \n\nYes, you could still do that.  I was more referring to the fact that the \u0027ModuleEngines\u0027 can\u0027t be removed from the part once added.  But yes, you could set the thrust \u002B resources to zero, which would effectively disable it."},{"CreatedByName":"Inside-Squirrel","CreatedById":189125,"CreatedDateTime":"2018-05-22T17:56:39Z","Content":"\u003E \n\u003E \n\u003E On 5/21/2018 at 6:30 PM, Shadowmage said:\n\u003E \n\u003E \n\u003E So, for anyone interested in helping to do testing on the 1.4 versions, you may find it all here:  [https://github.com/shadowmage45/SSTULabs/archive/dev.zip](https://github.com/shadowmage45/SSTULabs/archive/dev.zip)\n\u003E \n\nIn the perspective of the next 3 months, which minor version of the game will concentrate the developer\u0027s efforts? (1.4.1, 1.4.2 or 1.4.3)  \n\nI can take part in testing dev version with the game version 1.4.3  \n\nor do I need to downgrade to 1.4.2?\n\nP.S.\n\nThanks for the excellent mod!"}]}