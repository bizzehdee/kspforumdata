{"TopicId":93780,"ForumId":16,"TopicTitle":"Help with Orbit Math please","CreatedByName":"grom","CreatedById":57418,"CreatedDateTime":"2014-12-20T00:43:28Z","PageNum":1,"Articles":[{"CreatedByName":"grom","CreatedById":57418,"CreatedDateTime":"2014-12-20T00:43:28Z","Content":"\n\u003Cp\u003EI am trying to work out some orbital maths. The problem I\u0027m working on is when to launch in order to rendezvous with a station. To simplify I\u0027m assuming orbits along the equator plane. So far I\u0027ve code code for converting between state vectors and orbital elements \u003Ca href=\u0022http://grom.zeminvaders.net/orbitsim/orbit_calc.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://grom.zeminvaders.net/orbitsim/orbit_calc.html\u003C/a\u003E and a basic ascent simulator (which currently ignores atmosphere and uses a pitch of 45 degrees so is not optimal - its in very raw form) \u003Ca href=\u0022http://grom.zeminvaders.net/ascent.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://grom.zeminvaders.net/ascent.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAt the moment how it works is once the rockets orbit (AP) will intersect with the stations orbit I stop simulating it and keep simulating until the station reaches that point on the orbit. On IRC someone gave me this equation on how to find the time to reach a position in the orbit given current position of station:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://integrals.wolfram.com/index.jsp?expr=sqrt%28l%2F%28GM%29%29x%2Fsqrt%28%28e%5E2-1%29x%5E2%2B2lx-l%5E2%29\u0026amp;random=false\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://integrals.wolfram.com/index.jsp?expr=sqrt%28l%2F%28GM%29%29x%2Fsqrt%28%28e^2-1%29x^2%2B2lx-l^2%29\u0026amp;random=false\u003C/a\u003E\u003C/p\u003E\u003Cp\u003El = semi latus rectum\u003C/p\u003E\u003Cp\u003Ee = eccentricity\u003C/p\u003E\u003Cp\u003Ex = distance between centers\u003C/p\u003E\u003Cp\u003EI don\u0027t understand how to simplify this equation in order to convert it into code. So my aim is when I calculate the rocket will intersect the stations orbit that I use a formula to calculate the time it would take for the station to reach this position.\u003C/p\u003E\n"},{"CreatedByName":"Alias72","CreatedById":111778,"CreatedDateTime":"2014-12-20T00:51:58Z","Content":"\n\u003Cp\u003Ecould the poster who answers this also explain the process for the community. I am sure some people (me) will find it very useful and will be very grateful to you.\u003C/p\u003E\n"},{"CreatedByName":"Bill Phil","CreatedById":127797,"CreatedDateTime":"2014-12-20T00:55:29Z","Content":"\n\u003Cp\u003EIt may be better to just rendezvous once in orbit. It\u0027s easier, but really you do want to get close after launch. I usually just eyeball it because I don\u0027t want to go through all that stuff with numbers at the moment...\u003C/p\u003E\n"},{"CreatedByName":"Vanamonde","CreatedById":27914,"CreatedDateTime":"2014-12-20T03:16:26Z","Content":"\n\u003Cp\u003EThis sort of orbital mechanics discussion belongs in Gameplay Questions. And so, moved. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Srpadget","CreatedById":111267,"CreatedDateTime":"2014-12-20T03:28:45Z","Content":"\n\u003Cp\u003EWhat I think you\u0027re asking for is known professionally as \u0022the prediction problem\u0022 or \u0022the Kepler problem\u0022. Or, at least, that\u0027s a major aspect of the overall problem you\u0027re working on.\u003C/p\u003E\u003Cp\u003EKepler lived 400 years ago. And it is STILL known by a phrase containing 1) the name of the guy who first took a serious crack at it four hundred years ago, and 2) the word \u0022problem\u0022. This should tell you something.\u003C/p\u003E\u003Cp\u003EFlipping through my ancient college textbook \u0022Fundamentals of Astrodynamics\u0022 (written by 3 professors at the US Air Force Academy), I see a major section of Chapter 4 is devoted to this. Several pages of vector math featuring determinants of matrices, some 3-space vector differential equations, efforts to invert them using seemingly-arbitrary variable substitutions, peppered with phrases such as \u0022...these equations are indeterminate for...\u0022 and \u0022...a better approximation is obtained from the Newton iteration algorithm...\u0022 and \u0022...we get (equation with \u0022approximately equal to\u0022 featured prominently); use this as a first guess...\u0022 and finally \u0022...we can see how the iteration drives successive approximations toward...\u0022 with warnings about techniques to use to keep the singularities in the equations from crashing your computer.\u003C/p\u003E\u003Cp\u003EI mean, the problem obviously can be solved and answers obtained, but to the best of my knowledge nobody has ever succeeded in turning it into a closed-form \u0022feed these parameters into this set of equations and here\u0027s the answer\u0022 sort of recipe. It\u0027s an iterative process that starts with a (literal!) guess and then looping back through the equations multiple times will make that guess successively closer to correct. And the math is sufficiently turgid, with enough seemingly-arbitrary variable substitutions, that I\u0027m not sure I could even distill it down to a reasonably-tight set of equations which could be picked up and easily mechanized (even iteratively!) by someone else.\u003C/p\u003E\u003Cp\u003EOn the plus side, for what it\u0027s worth... the problem that\u0027s tripping you up here is one that also stumped Johannes Kepler, Sir Isaac Newton, Tsiolkovsky, von Braun... So you\u0027re in EXCELLENT company! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"grom","CreatedById":57418,"CreatedDateTime":"2014-12-21T01:57:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Srpadget\u0022 data-cite=\u0022Srpadget\u0022\u003E\u003Cdiv\u003EI mean, the problem obviously can be solved and answers obtained, but to the best of my knowledge nobody has ever succeeded in turning it into a closed-form \u0022feed these parameters into this set of equations and here\u0027s the answer\u0022 sort of recipe. It\u0027s an iterative process that starts with a (literal!) guess and then looping back through the equations multiple times will make that guess successively closer to correct. And the math is sufficiently turgid, with enough seemingly-arbitrary variable substitutions, that I\u0027m not sure I could even distill it down to a reasonably-tight set of equations which could be picked up and easily mechanized (even iteratively!) by someone else.\u003Cp\u003EOn the plus side, for what it\u0027s worth... the problem that\u0027s tripping you up here is one that also stumped Johannes Kepler, Sir Isaac Newton, Tsiolkovsky, von Braun... So you\u0027re in EXCELLENT company! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMmmm.. yes so far it seems using the RK4 iteration I have its not a bad solution then. Just need to clean up the code and add comments.\u003C/p\u003E\u003Cp\u003EAnd I\u0027m only dealing with orbits on the same plane. Have no idea how to take inclined orbits into consideration, other then simulate to where the inclined orbit passes over the launch site.\u003C/p\u003E\n"},{"CreatedByName":"grom","CreatedById":57418,"CreatedDateTime":"2014-12-21T01:59:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bill Phil\u0022 data-cite=\u0022Bill Phil\u0022\u003E\u003Cdiv\u003EIt may be better to just rendezvous once in orbit. It\u0027s easier, but really you do want to get close after launch. I usually just eyeball it because I don\u0027t want to go through all that stuff with numbers at the moment...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes that is easier.. but also uses up deltaV. I originally started to work on this little simulator cause I was in situation where I had limited fuel. At the time I resorted to trail and error with quicksave/quickload and thought if only I had a calculator for this. It was quite an interesting situation.. I had to even use jetpack fuel to save Jeb.\u003C/p\u003E\n"},{"CreatedByName":"GoSlash27","CreatedById":111526,"CreatedDateTime":"2014-12-21T03:36:19Z","Content":"\n\u003Cp\u003Egrom,\u003C/p\u003E\u003Cp\u003E I\u0027m sorry, but I\u0027m having a hard time following what you\u0027re saying here in some parts.\u003C/p\u003E\u003Cp\u003E The problem isn\u0027t figuring out when a launched rocket will intersect the orbit of a station, but rather figuring out how much time it takes for \u003Cem\u003Eyour\u003C/em\u003E rocket to achieve that orbit and where it will be when it does. This problem is compounded by the launch mode that you\u0027re using.\u003C/p\u003E\u003Cp\u003E A highly- efficient ion glider might take most of an hour to achieve orbit and be on the other side of the planet when it finally does. A high thrust-to-weight rocket will only take a few minutes. Both examples require completely different flight profiles.\u003C/p\u003E\u003Cp\u003E All you can do really is trial and error in sandbox until you get a feel for where the station needs to be at launch for that particular rocket.\u003C/p\u003E\u003Cp\u003ESorry,\u003C/p\u003E\u003Cp\u003E-Slashy\u003C/p\u003E\n"},{"CreatedByName":"Jimbimbibble","CreatedById":77859,"CreatedDateTime":"2014-12-21T07:00:59Z","Content":"\n\u003Cp\u003EWith most of my lifters I find that if the station is about 15-20 degrees behind the space center I can launch and rendezvous in no more than 1-2 orbits. In real life, they slowly phase in over a period of days. It took the shuttle 3 days to dock with the ISS.\u003C/p\u003E\n"},{"CreatedByName":"grom","CreatedById":57418,"CreatedDateTime":"2014-12-21T12:18:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022GoSlash27\u0022 data-cite=\u0022GoSlash27\u0022\u003E\u003Cdiv\u003Egrom,\u003Cp\u003E The problem isn\u0027t figuring out when a launched rocket will intersect the orbit of a station, but rather figuring out how much time it takes for \u003Cem\u003Eyour\u003C/em\u003E rocket to achieve that orbit and where it will be when it does. This problem is compounded by the launch mode that you\u0027re using.\u003C/p\u003E\u003Cp\u003E All you can do really is trial and error in sandbox until you get a feel for where the station needs to be at launch for that particular rocket.\u003C/p\u003E\u003Cp\u003ESorry,\u003C/p\u003E\u003Cp\u003E-Slashy\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHey Slashy, I value the input. Well my original situation I was dealing with was the Mun. But you are correct about launch profile. That is why I using an RK4 simulator. I program in a launch profile, the one I have at the moment is hell basic, but I can put it code for other launch profiles.\u003C/p\u003E\u003Cp\u003EBut the problem I was trying to solve with maths was once I find where I intersect the stations orbit, I know the current stations position. I want to then know the time difference it would be for the station to be in that intersection point from its current position. Or in other words.. Given two points in an orbit, calculate the time difference between them. Does that make sense now?\u003C/p\u003E\n"},{"CreatedByName":"maltesh","CreatedById":17144,"CreatedDateTime":"2014-12-21T12:33:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022grom\u0022 data-cite=\u0022grom\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003Ca href=\u0022http://integrals.wolfram.com/index.jsp?expr=sqrt%28l%2F%28GM%29%29x%2Fsqrt%28%28e%5E2-1%29x%5E2%2B2lx-l%5E2%29\u0026amp;random=false\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://integrals.wolfram.com/index.jsp?expr=sqrt%28l%2F%28GM%29%29x%2Fsqrt%28%28e^2-1%29x^2%2B2lx-l^2%29\u0026amp;random=false\u003C/a\u003E\u003C/p\u003E\u003Cp\u003El = semi latus rectum\u003C/p\u003E\u003Cp\u003Ee = eccentricity\u003C/p\u003E\u003Cp\u003Ex = distance between centers\u003C/p\u003E\u003Cp\u003EI don\u0027t understand how to simplify this equation in order to convert it into code. So my aim is when I calculate the rocket will intersect the stations orbit that I use a formula to calculate the time it would take for the station to reach this position.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWolfram Alpha is certainly going to assume that \u0022e\u0022 in an equation is Euler\u0027s Number (2.7182818284...) , not a variable for eccentricity. Which is why the logarithms show up when you attempt to have Wolfram solve it.\u003C/p\u003E\u003Cp\u003EEdit: No, I guess it\u0027s not the /only/ reason. Nevertheless, I\u0027ve never encountered an online calculator that knew about Euler\u0027s number that didn\u0027t automatically substitute it whenever \u0022e\u0022 showed up.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-21T12:37:59Z\u0022 title=\u002212/21/2014 12:37  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 21, 2014\u003C/time\u003E by maltesh\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Srpadget","CreatedById":111267,"CreatedDateTime":"2014-12-23T20:54:19Z","Content":"\n\u003Cp\u003ENow, having gone on a while back about what a bear Kepler\u0027s Problem is to solve from a mathematical perspective, I\u0027ll let you know how I do it in KSP, good enough for the practical purpose of rendezvous with an orbiting station.\u003C/p\u003E\u003Cp\u003EFirst: make sure your station is in a nigh-PERFECT circular orbit (I tend to do some fussy orbit adjustments of my LKO stations whenever I\u0027m off-circle enough that the Ap and Pe don\u0027t \u0027dance\u0027 due to rounding errors, around Ap-Pe \u0026lt; 100 meters). (Genuinely circular orbits make all sorts of rendezvous-related tasks more straightforward.) Next, find your orbital period.\u003C/p\u003E\u003Cp\u003ENow take advantage of the fact that circular orbits are a special case where you don\u0027t really need to go through all the hardcore math: your station\u0027s orbital speed is essentially constant. So if you know the time-to-orbit of your launcher, you know where your station needs to be at launch simply by noting the fraction of its orbital period consumed by your launcher\u0027s ascent. Easy-peasy.\u003C/p\u003E\u003Cp\u003EBut if for some reason your target is in a noticeably eccentric orbit, then yeah--I\u0027m afraid an iterative process wrapped around an RK integration of the EoM is pretty much your best bet.\u003C/p\u003E\n"},{"CreatedByName":"Rook116","CreatedById":101479,"CreatedDateTime":"2014-12-24T05:46:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022grom\u0022 data-cite=\u0022grom\u0022\u003E\u003Cdiv\u003EHey Slashy, I value the input. Well my original situation I was dealing with was the Mun. But you are correct about launch profile. That is why I using an RK4 simulator. I program in a launch profile, the one I have at the moment is hell basic, but I can put it code for other launch profiles.\u003Cp\u003EBut the problem I was trying to solve with maths was once I find where I intersect the stations orbit, I know the current stations position. I want to then know the time difference it would be for the station to be in that intersection point from its current position. Or in other words.. Given two points in an orbit, calculate the time difference between them. Does that make sense now?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGrom,\u003C/p\u003E\u003Cp\u003EI hope I understand your problem, otherwise just ignore the link.\u003C/p\u003E\u003Cp\u003EI think you are looking for transit time in a Hohmann transfer (\u003Ca href=\u0022https://en.wikipedia.org/wiki/Hohmann_transfer_orbit\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Hohmann_transfer_orbit\u003C/a\u003E). This will work for moving from one orbit to another (I just did this for a satellite in a parking orbit and moving into a Keostationary orbit). However, due to atmospheric effects, the calculation gets more complicated when trying to time a launch from KSC. I usually just determine the time to reach a desired stable orbit with a specific build, then back calculate the orbital period for that altitude and determine the angular travel that my rendezvous point would make in that time.\u003C/p\u003E\u003Cp\u003EHope this helps.\u003C/p\u003E\n"},{"CreatedByName":"hypermetric","CreatedById":95967,"CreatedDateTime":"2014-12-24T07:57:08Z","Content":"\n\u003Cp\u003EKepler\u0027s third law might be helpful then T1^2/T2^2 = r1^3/r2^3. I too have a copy of Fundamentals of Astrodynamics. I find I don\u0027t use it much as vanilla gameplay does not provide complete orbit elements. I takes no less than 6 numbers to fully define an unpeturbed obit. KSP usually doesn\u0027t provide more than 2. There might be someway to deduce the other elements using in game references points but I haven\u0027t figured it out.\u003C/p\u003E\n"},{"CreatedByName":"Rook116","CreatedById":101479,"CreatedDateTime":"2014-12-24T16:59:56Z","Content":"\n\u003Cp\u003EThe persistent.sfs file has the orbital elements of any ship...\u003C/p\u003E\u003Cp\u003EORBIT\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E SMA = 8291050.81119871\u003C/p\u003E\u003Cp\u003E ECC = 0.00553219673058219\u003C/p\u003E\u003Cp\u003E INC = 87.7990597329687\u003C/p\u003E\u003Cp\u003E LPE = 183.533727002483\u003C/p\u003E\u003Cp\u003E LAN = 201.48070476959\u003C/p\u003E\u003Cp\u003E MNA = 1.50049493127066\u003C/p\u003E\u003Cp\u003E EPH = 230587.888000713\u003C/p\u003E\u003Cp\u003E REF = 1\u003C/p\u003E\u003Cp\u003ESMA : Semimajor axis \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 the average of the periapsis and apoapsis distances from the orbiting body center\u003C/p\u003E\u003Cp\u003EECC : Eccentricity \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 shape of the ellipse, describing how much it elongated compared to a circle.\u003C/p\u003E\u003Cp\u003EINC : Inclination \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 vertical tilt of the ellipse with respect to the reference plane, measured at the ascending node.\u003C/p\u003E\u003Cp\u003ELPE : Longitude of periapsis \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 horizontally orients the periapsis of the ellipse.\u003C/p\u003E\u003Cp\u003ELAN : Longitude of the ascending node \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 horizontally orients the ascending node of the ellipse.\u003C/p\u003E\u003Cp\u003EMNA : Mean anomaly at epoch \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 defines the position of the orbiting body along the ellipse at a specific time.\u003C/p\u003E\u003Cp\u003EEPH : epoch \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 the reference time for the orbit.\u003C/p\u003E\u003Cp\u003EREF : reference body \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u0153 the ID of the body around which the orbit occurs. 0 is the sun, 1 is Kerbin, 2 is Mun, 3 is Minmus.\u003C/p\u003E\u003Cp\u003EAlso, see the link at the bottom of maltesh\u0027s post.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-24T17:02:12Z\u0022 title=\u002212/24/2014 05:02  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 24, 2014\u003C/time\u003E by Rook116\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hypermetric","CreatedById":95967,"CreatedDateTime":"2014-12-26T23:07:11Z","Content":"\n\u003Cp\u003EOh that will be very helpful for trip planning, thank you. Still though I was thinking about seeing this info in for whatever situation you are in. Any real space agency would be able to tell you at least that much about their spacecraft at any given moment. The game gives you altitude and speed in any situation (not velocity like it says, velocity would be vector and much more helpful). What the game should provide is declination and right ascension at least. Given those readings the orbit could be figured out. I don\u0027t know if there is a way to do it with just the altitude and speed. I suppose I could figure much of it out by waiting to reach ap or pe to record speed, but I don\u0027t think that will get me further than just the ap and pe altitudes alone do and wouldn\u0027t be much help in planning a landing. Though I suppose the lack of info the game provides forces you to get a feel for it, I wish more info was there even as a cheat or something.\u003C/p\u003E\n"},{"CreatedByName":"taio","CreatedById":131170,"CreatedDateTime":"2014-12-26T23:21:17Z","Content":"\n\u003Cp\u003EMechJeb provides the orbital elements. KER or VOID might too, but I forget. Certainly they provide some of them.\u003C/p\u003E\n"},{"CreatedByName":"Tripzter","CreatedById":75335,"CreatedDateTime":"2014-12-27T02:18:46Z","Content":"\n\u003Cp\u003EEye ball the launch, if you end up ahead of it, go in higher orbit, if you end up behind it go in low orbit.\u003C/p\u003E\n"},{"CreatedByName":"maltesh","CreatedById":17144,"CreatedDateTime":"2014-12-27T02:42:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hypermetric\u0022 data-cite=\u0022hypermetric\u0022\u003E\u003Cdiv\u003EOh that will be very helpful for trip planning, thank you. Still though I was thinking about seeing this info in for whatever situation you are in. Any real space agency would be able to tell you at least that much about their spacecraft at any given moment. The game gives you altitude and speed in any situation (not velocity like it says, velocity would be vector and much more helpful). What the game should provide is declination and right ascension at least. Given those readings the orbit could be figured out. I don\u0027t know if there is a way to do it with just the altitude and speed. I suppose I could figure much of it out by waiting to reach ap or pe to record speed, but I don\u0027t think that will get me further than just the ap and pe altitudes alone do and wouldn\u0027t be much help in planning a landing. Though I suppose the lack of info the game provides forces you to get a feel for it, I wish more info was there even as a cheat or something.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWith altitude, speed, and pitch angle, (and knowing the gravitational parameter and the radius of the object you\u0027re orbiting), you can figure out the shape of your orbit, and where you are on that orbit, and travel times to arbitrary points on that orbit. I wound up writing a program to do that back in the 0.8-ish era before there was a map screen. That said, it diesn\u0027t help much with rendezvous, as that info doesn\u0027t tell you how your orbit is aligned in space, and not uch with landing, as it doesn\u0027t tell you how the world below you is spinning.\u003C/p\u003E\n"}]}