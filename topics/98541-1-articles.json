{"TopicId":98541,"ForumId":55,"TopicTitle":"Why was Unity used instead of something like Unreal?","CreatedByName":"JordanL","CreatedById":95655,"CreatedDateTime":"2015-02-02T10:10:23Z","PageNum":1,"Articles":[{"CreatedByName":"JordanL","CreatedById":95655,"CreatedDateTime":"2015-02-02T10:10:23Z","Content":"\n\u003Cp\u003EI\u0027m not asking as a way to poke at squad or anything, I\u0027m honestly curious. In game development, unity is kind of awful, unless you\u0027re making a game that needs to be on like eight different platforms including phones. \u003C/p\u003E\u003Cp\u003EBut KSP is only on desktop, so why was Unity chosen? I\u0027m really curious.\u003C/p\u003E\n"},{"CreatedByName":"KerBlam","CreatedById":134309,"CreatedDateTime":"2015-02-02T10:23:25Z","Content":"\n\u003Cp\u003EIf I had to guess, I\u0027d say initially it was the price point and accessibility of C#. Just a guess though.\u003C/p\u003E\n"},{"CreatedByName":"LongHairedHuman","CreatedById":14396,"CreatedDateTime":"2015-02-02T10:53:24Z","Content":"\n\u003Cp\u003EIn game development, unity is a godsend. It allows for easy implementation of object-oriented programming, and the interface allows you to work closely with the code. It allows for easy asset importing, and you can get feedback quickly with the scene editor. It\u0027s one of the best game engines out there for small teams.\u003C/p\u003E\n"},{"CreatedByName":"vexx32","CreatedById":12283,"CreatedDateTime":"2015-02-02T11:30:06Z","Content":"\n\u003Cp\u003EIn addition, although I am not intimately familiar with Unreal, to the best of my knowledge it\u0027s not an engine designed to simulate gravity and other aspects of physics in the way KSP needs them to be simulated to reflect reality to a useful extent.\u003C/p\u003E\u003Cp\u003EI could be wrong, of course, but AFAIK Unreal is not really suited to the kind of game KSP is.\u003C/p\u003E\n"},{"CreatedByName":"rynak","CreatedById":115092,"CreatedDateTime":"2015-02-02T13:32:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022vexx32\u0022 data-cite=\u0022vexx32\u0022\u003E\u003Cdiv\u003EIn addition, although I am not intimately familiar with Unreal, to the best of my knowledge it\u0027s not an engine designed to simulate gravity and other aspects of physics in the way KSP needs them to be simulated to reflect reality to a useful extent.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat might be considered a feature. After all, physics bugs and performance has been a constant problem all the time. It would have been much better to code a custom physics subsystem for the game - of course, this assumes one is capable of doing so.\u003C/p\u003E\u003Cp\u003EFrom what i know - NOW unreal is a better fit in almost every regard except of the instant feedback in the editor. However, things weren\u0027t like this back when dev of KSP started. And of course, back then Unity was the only cool kid on the block, with a low entry barrier. Competitors are catching up, while unity gets ever more retarded - i mean, read up on what\u0027s coming in unity 5 - complete garbage, except for 64bit support and a better physics subsystem. I suppose by the time Unity 6 is ready, Gamemaker will look like a sane dev environment, relatively speaking.\u003C/p\u003E\n"},{"CreatedByName":"Kegereneku","CreatedById":66154,"CreatedDateTime":"2015-02-02T14:28:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022vexx32\u0022 data-cite=\u0022vexx32\u0022\u003E\u003Cdiv\u003EIn addition, although I am not intimately familiar with Unreal, to the best of my knowledge it\u0027s not an engine designed to simulate gravity and other aspects of physics in the way KSP needs them to be simulated to reflect reality to a useful extent.\u003Cp\u003EI could be wrong, of course, but AFAIK Unreal is not really suited to the kind of game KSP is.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EQuestion that come to me : How many engine are designed to simulate gravity \u0022right\u0022 ?\u003C/p\u003E\u003Cp\u003EI know for example that many engine have the same problem than Unity/KSP had to simulate things with precision when dealing with \u0022many-digit\u0022 distance.\u003C/p\u003E\u003Cp\u003EFor example : Stars Citizen running on CryEngine 3. (I would have thought all the money sent to them through crowdfunding would have agglomerated into a black-hole)\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-02-02T14:37:01Z","Content":"\n\u003Cp\u003EThe cost of Unreal is well... unreal. They take 5% of your gross profit.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kegereneku\u0022 data-cite=\u0022Kegereneku\u0022\u003E\u003Cdiv\u003EQuestion that come to me : How many engine are designed to simulate gravity \u0022right\u0022 ?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMost of them actually. You can\u0027t do physics without some baseline for gravity. Otherwise things would just float. I remember when they first put Half-Life source out, the difference was phenomenal in some aspects (disappointing in others). In the original HL you would kill an enemy and their dead body would just sort of \u0022float\u0022. Then Source came along with real physics and bodies \u0022fell\u0022 the way they were supposed to.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-02T14:43:17Z\u0022 title=\u002202/02/2015 02:43  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 2, 2015\u003C/time\u003E by Alshain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Sean Mirrsen","CreatedById":3873,"CreatedDateTime":"2015-02-02T15:03:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kegereneku\u0022 data-cite=\u0022Kegereneku\u0022\u003E\u003Cdiv\u003EQuestion that come to me : How many engine are designed to simulate gravity \u0022right\u0022 ?\u003Cp\u003EI know for example that many engine have the same problem than Unity/KSP had to simulate things with precision when dealing with \u0022many-digit\u0022 distance.\u003C/p\u003E\u003Cp\u003EFor example : Stars Citizen running on CryEngine 3. (I would have thought all the money sent to them through crowdfunding would have agglomerated into a black-hole)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think it was less that, and more the same reason why, I, for example, consider MyPaint to be an ultimate sketching tool, regardless of how little other functionality it offers that some other programs like Krita do. It\u0027s got an infinite canvas. I think I remember it being said that Unity was the only available (and good) engine that did not limit the size of any given \u0022scene\u0022, any single \u0022map\u0022 it can load, which is kinda important for a space-exploration game. Of course it\u0027s possible to find ways around it, kinda like you can just keep resizing a canvas in any conventional graphics application, but why have to deal with that if a good solution is already available?\u003C/p\u003E\n"},{"CreatedByName":"cantab","CreatedById":104935,"CreatedDateTime":"2015-02-02T17:18:22Z","Content":"\n\u003Cp\u003EMy understanding is that when Squad started working on KSP, Unity was the \u003Cem\u003Eonly\u003C/em\u003E affordable choice. Tim Sweeney, founder of Unreal Engine\u0027s developer Epic Games, said himself in 2014.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EWith UE3, pro developers could license the engine -- \u0022it\u0027s typically cost millions of dollars... negotiating has involved teams of lawyers,\u0022 Sweeney said. That is changing. \u003Cp\u003E\u0022Looking at the shape of the industry now we realize it\u0027s an outdated model,\u0022 he said. \u0022looking at the possibilities for the engine, we started out from scratch. We came up with an entirely new business model for the Unreal Engine which we are announcing today.\u0022\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESource: \u003Ca href=\u0022http://www.gamasutra.com/view/news/213517/Epic_radically_changes_licensing_model_for_Unreal_Engine.php\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.gamasutra.com/view/news/213517/Epic_radically_changes_licensing_model_for_Unreal_Engine.php\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EWhen he was talking about this and when UE4 was released on said new business model, Kerbal Space Program had been out for \u003Cstrong\u003Eover two years\u003C/strong\u003E.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2015-02-02T18:03:27Z","Content":"\n\u003Cp\u003EBecause Unity is a pay-once engine that was affordable, accessible, easy to use, and within the range of the devs. Remember that KSP was never meant to blow up this way, they didn\u0027t even think they would get half the audience they now have. There\u0027s no way they could\u0027ve afforded Unreal Engine back then.\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2015-02-02T18:23:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EBecause Unity is a pay-once engine that was affordable, accessible, easy to use, and within the range of the devs. Remember that KSP was never meant to blow up this way, they didn\u0027t even think they would get half the audience they now have. There\u0027s no way they could\u0027ve afforded Unreal Engine back then.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo much this. There was never any guarantee that the game would get out of the physics/engineering major market, let alone reach the much broader success the game has enjoyed since. \u003C/p\u003E\u003Cp\u003EThere is also the fact that Unreal\u0027s engine at the start of KSP development was seven or eight years old.\u003C/p\u003E\n"},{"CreatedByName":"comham","CreatedById":43245,"CreatedDateTime":"2015-02-02T19:33:31Z","Content":"\n\u003Cp\u003EWikipedia says KSP version 0.7.3 was released in June 2011. It was only in March 2014 that Unreal and Cryengine and everyone else started up their \u0022free\u0022 license program, till then Unity was the only guy in town.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sean Mirrsen\u0022 data-cite=\u0022Sean Mirrsen\u0022\u003E\u003Cdiv\u003EI think it was less that, and more the same reason why, I, for example, consider MyPaint to be an ultimate sketching tool, regardless of how little other functionality it offers that some other programs like Krita do. It\u0027s got an infinite canvas. I think I remember it being said that Unity was the only available (and good) engine that did not limit the size of any given \u0022scene\u0022, any single \u0022map\u0022 it can load, which is kinda important for a space-exploration game. Of course it\u0027s possible to find ways around it, kinda like you can just keep resizing a canvas in any conventional graphics application, but why have to deal with that if a good solution is already available?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy understanding was Unity still has a scene size limitation, KSP just fudges a solution by resizing everything in steps, using the ship as the origin etc. No reason you couldn\u0027t do that in another engine.\u003C/p\u003E\n"},{"CreatedByName":"OscarWilde","CreatedById":136185,"CreatedDateTime":"2015-02-02T20:00:20Z","Content":"\n\u003Cp\u003EI will admit I don\u0027t know much about the subject. But what would be involved with porting it now to a better engine? Would it involve a complete rework (ie. starting from day one..) or would models, textures, logic, etc. all pan over pretty easily and it would just be a matter of reworking certain bits of code to make it work?\u003C/p\u003E\u003Cp\u003EIn other words do other engines offer similar coding (C# I believe) but offer more features?\u003C/p\u003E\n"},{"CreatedByName":"cpast","CreatedById":112846,"CreatedDateTime":"2015-02-02T20:16:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022OscarWilde\u0022 data-cite=\u0022OscarWilde\u0022\u003E\u003Cdiv\u003EI will admit I don\u0027t know much about the subject. But what would be involved with porting it now to a better engine? Would it involve a complete rework (ie. starting from day one..) or would models, textures, logic, etc. all pan over pretty easily and it would just be a matter of reworking certain bits of code to make it work?\u003Cp\u003EIn other words do other engines offer similar coding (C# I believe) but offer more features?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027d basically have to almost totally rewrite your code, unless you had specifically planned your project to make it easy to change engines (even then, there\u0027d be a fair amount of rewriting). It has nothing to do with the programming language; it\u0027s that KSP uses Unity for core parts of the game, and \u003Cem\u003Eeverything\u003C/em\u003E interfacing with Unity would have to be rewritten. Even parts that don\u0027t directly call Unity functions have design logic driven by Unity\u0027s behavior. If you want to make it easy to swap engines, you could make your own intermediate layer to sit on top of the engine and only talk to the intermediate layer, so changing engines only makes you change the intermediate layer (though how you do things at a higher level might have to change for performance reasons, because something efficient in Unity might be slow in Unreal or vice versa). Unity itself abstracts away a lot of OS-specific stuff, as does .NET/Mono, which is part of the reason why it\u0027s easy to make one game for Mac, Windows, and Linux; however, to make it easy to change engines, you\u0027d have to add a second layer of your own, which I doubt Squad has done.\u003C/p\u003E\n"},{"CreatedByName":"Nemrav","CreatedById":91029,"CreatedDateTime":"2015-02-02T20:41:23Z","Content":"\n\u003Cp\u003E-unity costs $0 to start making stuff, as opposed to ~$500 a month\u003C/p\u003E\u003Cp\u003E-unity does not limit your scene, it simply gives you a warning \u0022well, ur going outside kraken making boundaries, go further at ur own risk....\u0022\u003C/p\u003E\u003Cp\u003E-unity is pre-made, it takes years and years and (more years) to make a game engine by yourself or with a small team (Harvestr was at first the only KSP dev, not \u0022specialized\u0022 in coding, so imagine him making it all by himself in say ~6 months)\u003C/p\u003E\u003Cp\u003E-unity already supports Windows, Mac and Linux\u003C/p\u003E\u003Cp\u003E-unity has reasonable api documentation (as opposed to most free engines)\u003C/p\u003E\u003Cp\u003E-unity has a large community (to answer your questions \u002B to make tutorials \u002B hiring is theoretically easier)\u003C/p\u003E\u003Cp\u003Eetc.\u003C/p\u003E\n"},{"CreatedByName":"Sean Mirrsen","CreatedById":3873,"CreatedDateTime":"2015-02-03T03:54:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022comham\u0022 data-cite=\u0022comham\u0022\u003E\u003Cdiv\u003EMy understanding was Unity still has a scene size limitation, KSP just fudges a solution by resizing everything in steps, using the ship as the origin etc. No reason you couldn\u0027t do that in another engine.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot really. KSP just re-centers the coordinate system on your ship every once in a while (it \u0022moves the universe\u0022), to keep the numbers from getting too high to cause Krakens in the physics engine. Without the unlimited scene it wouldn\u0027t have been able to keep the entire solar system loaded and displayed as a map without even more code trickery.\u003C/p\u003E\n"},{"CreatedByName":"rynak","CreatedById":115092,"CreatedDateTime":"2015-02-03T04:34:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nemrav\u0022 data-cite=\u0022Nemrav\u0022\u003E\u003Cdiv\u003E-unity costs $0 to start making stuff, as opposed to ~$500 a month\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis indeed was true back when KSP was started, but now unreal for all practically purposes costs 20$ ONCE, and then NOTHING, while unity will constantly cost revenue. Again, this is the difference between \u0022back then\u0022 and \u0022now\u0022. At the time KSP dev started, unity indeed was the cheapest option, and other engines like unreal were unaffordable. Now however, the roles have reversed - the competitors are so desperate for marketshare, that they will do everything but stop short of outrightly giving their tools away FOR FREE.\u003C/p\u003E\u003Cp\u003EBasically, unity started out as financially viable but technically inferior (if you ignore ease of cross-platform releases). Then as the need for a cheap entry dev IDE gained speed (pioneered by unity), the market momentum REVERSED: Unity relatively became more expensive and less fit, while the desperate and panicking competition outdeveloped unity in terms of tech and conditions. The reason unity still is capable of holding its current marketshare is MOMENTUM, not actual meat on the table!\u003C/p\u003E\u003Cp\u003ETo any unity fan, this should be alarming! It means the competion is desperate to level the field (even going as far, as giving game devs *directly debugging access the the engine devs, for 20 bucks a month! Something unity has never ever done... google around for the reports. The competition is giving devs direct chat contact to the engine devs, while unity devs get no more than the equivalent of a run-of-the-mill hotline)... yet, given unity5 press announcements, the vendor behind unity apparently sees no need yet to up the game - instead deciding to milk it\u0027s cashcow, instead of investing into future competition.\u003C/p\u003E\u003Cp\u003EThe people behind unity feel save and secure in their market position, even while the competition is practically selling below cost. The only reason for a vendor to ignore such an obvious market situation, is to either sell-off it\u0027s \u0022asset\u0022, or to consider its own benefits way beyond the competiotion - if the later is the case, i think part of the complains behind KSP, and plenty of other unity-based games, tell you the reality of unity\u0027s marklet position: Up til now it rose to it\u0027s position by simply being the \u0022least evil\u0022 if a low-entry-barrier and multiplatform releases are a requirement.\u003C/p\u003E\u003Cp\u003E\u0022Least evil\u0022 is not a \u0022comfortable\u0022 market leader position, unless you have means to via unethical but legal ways simply eliminate opposition (think microsoft, EA, etc).\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2015-02-03T09:55:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022OscarWilde\u0022 data-cite=\u0022OscarWilde\u0022\u003E\u003Cdiv\u003EI will admit I don\u0027t know much about the subject. But what would be involved with porting it now to a better engine? Would it involve a complete rework (ie. starting from day one..) or would models, textures, logic, etc. all pan over pretty easily and it would just be a matter of reworking certain bits of code to make it work?\u003Cp\u003EIn other words do other engines offer similar coding (C# I believe) but offer more features?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt would involve rewriting the code bottoms up, and likely in another language. Not only that, but for example on Unreal Engine, it would imply people need to pay to be able to create mods for the game.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rynak\u0022 data-cite=\u0022rynak\u0022\u003E\u003Cdiv\u003EThis indeed was true back when KSP was started, but now unreal for all practically purposes costs 20$ ONCE, and then NOTHING, while unity will constantly cost revenue.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E...No? Unity is \u003Cem\u003Estill\u003C/em\u003E a pay once option, and Unreal Engine costs $20USD a month, as well as taking 5% the total revenues of your game.\u003C/p\u003E\n"},{"CreatedByName":"Sean Mirrsen","CreatedById":3873,"CreatedDateTime":"2015-02-03T10:32:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003E...No? Unity is \u003Cem\u003Estill\u003C/em\u003E a pay once option, and Unreal Engine costs $20USD a month, as well as taking 5% the total revenues of your game.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt has both options, actually. You can either pay $1500 all at once for Unity Pro (plus extra for various add-ons), \u003Cstrong\u003Eor\u003C/strong\u003E you can get the free Unity version, and use a $75-per-month subscription to the Pro version, with a minimum of 12 months duration. If you can crank out a game in less than a year\u0027s time in Unity, you can save money by using the subscription, but for a long-term project you can grab a permanent (or as they call it, \u0022perpetual\u0022) license and just keep using that.\u003C/p\u003E\u003Cp\u003EAnd yeah, it doesn\u0027t cost revenue or anything.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Unity FAQ\u0022 data-cite=\u0022Unity FAQ\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EGeneral\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAre there any annual or maintenance fees?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ENo, Unity does not charge an annual fee or maintenance fee.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAre there royalties or a per-title fee?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ENo, Unity does not charge on a per title basis and you do not pay royalties or pay revenue share, even for games and applications made with the free version.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ECan I sell my commercial game using Unity free?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EYes you can create and sell a game with the free version of Unity, without paying royalties or any revenue share. However, Unity Free, which includes the free platform add-on products, may not be licensed or used by a commercial entity with annual gross revenues (based on prior fiscal year) in excess of US$100,000, or by an educational, academic, non-profit or government entity with a total annual budget for the entire entity (based on prior fiscal year) in excess of US$100,000.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Whirligig Girl","CreatedById":36077,"CreatedDateTime":"2015-02-03T13:45:53Z","Content":"\n\u003Cp\u003EThere\u0027s now a game engine made explicitly for space games: Space Engine. It\u0027s going to be its own game as well after the engine is complete, but IIRC, the developer is putting it out as a game engine for developers as well. Now, I\u0027m not saying KSP should be on Space Engine, just pointing out something relevant. EDIT: TO be clear, Not Space Engineers. Space Engine.\u003C/p\u003E\n"},{"CreatedByName":"Sean Mirrsen","CreatedById":3873,"CreatedDateTime":"2015-02-03T13:50:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022GregroxMun\u0022 data-cite=\u0022GregroxMun\u0022\u003E\u003Cdiv\u003EThere\u0027s now a game engine made explicitly for space games: Space Engine. It\u0027s going to be its own game as well after the engine is complete, but IIRC, the developer is putting it out as a game engine for developers as well. Now, I\u0027m not saying KSP should be on Space Engine, just pointing out something relevant. EDIT: TO be clear, Not Space Engineers. Space Engine.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESpace Engine is more an engine for \u0022space games\u0022 a-la Noctis, or space combat and trading sims like Elite et al. It\u0027s a good engine, but it\u0027s not built for the sort of rigid-body physics simulation KSP routinely requires. I\u0027d definitely like to see some games made on it though. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_happy.png\u0022 alt=\u0022^_^\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"RobotsAndSpaceships","CreatedById":122975,"CreatedDateTime":"2015-02-03T14:55:50Z","Content":"\n\u003Cp\u003EIf I could redo KSP development, I would have picked Outerra as the engine.\u003C/p\u003E\n"},{"CreatedByName":"asmi","CreatedById":59068,"CreatedDateTime":"2015-02-03T16:33:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EBecause Unity is a pay-once engine that was affordable, accessible, easy to use, and within the range of the devs. Remember that KSP was never meant to blow up this way, they didn\u0027t even think they would get half the audience they now have. There\u0027s no way they could\u0027ve afforded Unreal Engine back then.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell since upgrade to Unity 5 costs money, it\u0027s more of \u0022pay-twice\u0022 now \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"asmi","CreatedById":59068,"CreatedDateTime":"2015-02-03T16:36:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rynak\u0022 data-cite=\u0022rynak\u0022\u003E\u003Cdiv\u003EThis indeed was true back when KSP was started, but now unreal for all practically purposes costs 20$ ONCE, and then NOTHING.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIncorrect. You still owe 5% of revenue, even if you cancel your subscription after you release a product using UE4 (though it\u0027s only 5% from revenue exceeding 3k$ per quarter, so you can make $1k/month for free using UE4). There are few more catches with their license (like counting a revenue-before-store-deductions for games sold in Steam/*Stores, which negatively impacts a bottom line), but this is mostly it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-03T16:39:00Z\u0022 title=\u002202/03/2015 04:39  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 3, 2015\u003C/time\u003E by asmi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"rkman","CreatedById":15721,"CreatedDateTime":"2015-02-03T16:54:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sean Mirrsen\u0022 data-cite=\u0022Sean Mirrsen\u0022\u003E\u003Cdiv\u003EWithout the unlimited scene it wouldn\u0027t have been able to keep the entire solar system loaded and displayed as a map without even more code trickery.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are practical limits to Unitiy\u0027s scene size, dictated by rounding errors and render quality. (and it does not need to be unlimited in order to fit a solar system of finite size)\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://forum.unity3d.com/threads/scene-size-limit.183992/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.unity3d.com/threads/scene-size-limit.183992/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThat is why Squad uses no only a form of floating origin (\u0027Kraken bane\u0027), but also uses two differently scaled versions of the KSP universe, mixing and transitioning between those as the situation requires.\u003C/p\u003E\u003Cp\u003EThere are several engines where the only thing that scales as the player moves through the universe is the LOD of objects in the game space (Celestia, Space Engine, Outtera). But those are either not game engines (Celestia), or are not even close to being ready to be licensed. About Celestia i know it uses floating origin (without any jumping as KSP does), the other two probably also use floating origin to get around rounding errors. \u003C/p\u003E\u003Cp\u003EAt the time Unity was the logical choice for Squad, and a rewrite in a different engine would probably take years.\u003C/p\u003E\u003Cp\u003EHarvester at Unite 2013 \u003C/p\u003E\u003Cp\u003EThe Setup of the Universe \u003C/p\u003E\u003Cp\u003ESpaces in Subscenes\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://youtu.be/mXTxQko-JH0?t=10m50s\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://youtu.be/mXTxQko-JH0?t=10m50s\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-03T16:56:44Z\u0022 title=\u002202/03/2015 04:56  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 3, 2015\u003C/time\u003E by rkman\u003C/strong\u003E\n\u003C/span\u003E\n"}]}