{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":58,"Articles":[{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-05T22:01:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI would argue semantics around the word \u0022expectation\u0022. If there is useful data about craft and parts that isnt exposed no one is more serious than Steven and I about exposing it to you guys. From skips last few posts I cannot tell what he wants let alone what data is missing for him to accomplish his goal. I am seriously asking him for more information so we can resolve his issues.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom all I\u0027ve seen, I agree with you. It just seems to me (a neophyte at best) that a lot of what skips is asking for is theoretically available either via the existing implementation, or via the KSP API. The rest is a mass of suppositions and unknowns that will take some experimentation to determine, such as do engines always thrust opposite of their facing? For VTOL engines that rotate, does the part facing rotate as well? Is it possible to calculate the expected thrust from a given throttle setting if you know the ISP, max thrust and altitude of the engine, and the atmospheric information for the body?\u003C/p\u003E\u003Cp\u003EThen you get into the questions of what do you surface, and what do you let the end user calculate? It would be possible to have kOS calculate a large number of data points, but at what point does that end? Hyperbole says there would lead to :\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset SHIP:TRAVELDEST to Duna. \u003Cbr\u003Eset SHIP:TRAVELSTART to 1.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd then wait for kOS to perform the ascent, transit burns, and orbital insertion at the destination... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"undercoveryankee","CreatedById":103505,"CreatedDateTime":"2014-09-05T22:08:26Z","Content":"\n\u003Cp\u003EThe typical VTOL that I see has two banks of engines: one for \u0022forward\u0022 thrust and one for lift when the forward axis is horizontal, with at least one \u0022control from\u0022 part aligned with each bank of engines.\u003C/p\u003E\u003Cp\u003EThings you might want to do with kOS:\u003C/p\u003E\u003Cp\u003EProgrammatically switch control parts. Don\u0027t know if we have that yet, but it will be possible at the same time as any other command that\u0027s in a part\u0027s context menu.\u003C/p\u003E\u003Cp\u003EProgrammatically activate one bank of engines while deactivating the other. Do it with action groups now; do it without action groups once we can fire context menu events directly.\u003C/p\u003E\u003Cp\u003EProgrammatically detect which engines are aligned with which control parts so a family of VTOLs can share a script. Try looping over the parts and comparing orientations in your code. If you find that you need something specific that\u0027s not in kOS to support a particular ship, you\u0027ll be close enough to offer a targeted proposal.\u003C/p\u003E\u003Cp\u003EHave several banks of engines running at the same time at different throttle settings. While MAINTHROTTLE is always going to control all active engines at once like the stock throttle does, throttling of individual engines might be possible through exposing their thrust limiters or whatever Davon Throttle Control uses.\u003C/p\u003E\u003Cp\u003ECarry out maneuvers using engines that don\u0027t have a corresponding control part. Takes one or two extra lines of code to calculate an orientation for the control part that points another group of engines the way you want. Commanding a pitch of 0 and firing lift engines is no harder than commanding a pitch of 90 and firing forward engines.\u003C/p\u003E\u003Cp\u003ETemporarily make kOS use a control axis that doesn\u0027t correspond to the physical control part, e.g. so you can call a script that assumes that all engines fire along the control axis. I can see where that might be useful if you\u0027re a big code reuser, but it also seems like enough of a pain in the neck to implement that I won\u0027t be surprised or disappointed not to get it.\u003C/p\u003E\u003Cp\u003ECalculate the net thrust vector of a list of engines. You should be able to do in kerboscript everything that RCS Build Aid does in C#. We have the vector types and operations; if you find that a variable that kOS doesn\u0027t expose affects your result, let us know what variable you wish you had.\u003C/p\u003E\n"},{"CreatedByName":"skips","CreatedById":89142,"CreatedDateTime":"2014-09-06T01:06:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI would argue semantics around the word \u0022expectation\u0022. If there is useful data about craft and parts that isnt exposed no one is more serious than Steven and I about exposing it to you guys. From skips last few posts I cannot tell what he wants let alone what data is missing for him to accomplish his goal. I am seriously asking him for more information so we can resolve his issues.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAll right already. You have \u0022shamed\u0022 me into discussing this topic of \u0022expectations.\u0022 \u003C/p\u003E\u003Cp\u003EBut first, you should understand a bit from whence I am coming. My job is maintaining software that is flying on an active NASA spacecraft. Further, I wrote my first operating system as an undergraduate and, as a graduate student, wrote the software that automated the control of the instrumentation, with which I collected the data for my thesis.\u003C/p\u003E\u003Cp\u003EAs I see kOS, it is primarily a programming language and secondarily a mechanism for controlling vehicles in KSP. As such, it should meet the expectations of a programming language and hopefully provide an abstract model for vehicle control that is compatible with the model that is provided by KSP. Meeting these goals allows the users of kOS to concentrate on building the vehicle and providing \u0022software\u0022 that makes the vehicle do \u0022useful\u0022 things. \u003C/p\u003E\u003Cp\u003ESo what does all of this \u0022vision\u0022 mean? Well I have written three scripts that I use.\u003C/p\u003E\u003Cp\u003Emission() - describes a mission. Currently it supports missions of the type, \u0022activate this part between altitude s0 and s1 and speeds v0 and v1.\u0022 To use it for different missions of this type, the user must edit the script (i.e., \u0022wire the rocket\u0027s controller\u0022). This script uses two other scripts.\u003C/p\u003E\u003Cp\u003Eascent( min_altitude, min_speed, action, max_altitude, max_speed, ascent_policy ) - controls the rocket from liftoff to completion of the upward and downward goals. The goals relate to the vertical speed\u0027s sign and being within the max_ and min_ limits.\u003C/p\u003E\u003Cp\u003Elanding( landing_height, landing_speed ) - attempts to land the rocket by arriving at the landing_height with a vertical speed no more negative than minus the value of the landing_speed. The script then maintains the vertical speed as minus the landing_speed value until the rocket is in the LANDED state. To achieve this goal the script must calculate the latest time at which it can burn and still arrive at the landing_height and meeting the landing_speed constraint.\u003C/p\u003E\u003Cp\u003EWhich brings me back to my original comment about the information about engine thrust. To implement the landing() script it is necessary to answer the question \u0022what thrust (both direction and magnitude) does the vehicle provide if the throttle is set at 1?\u0022 With this fundamental information, the script can make decisions about how to achieve its goal of arriving at the landing_height with the desired landing_speed. In the \u0022real world\u0022 the software controller is given this information about the thrust magnitude and direction by the designer of the vehicle. The software does not iterate over the parts of the \u0022real hardware\u0022 and assemble the information. I guess that I an expecting the abstract vehicle model within kOS to provide the same level of abstraction.\u003C/p\u003E\u003Cp\u003EAs relates to the programming aspect, I believe that the kOS team should take a hard look at what the language currently provides and determine whether it meets all of the implied requirements of its current implementation. I, for one, believe that it does not. The discussion of \u0022null type\u0022 is a primary example of a missing requirement. The language currently automatically assigns dynamic types (i.e., the type of a variable can change during the execution of the program). This characteristic generates an implicit requirement that the language provide a mechanism for testing the type of a variable. If such a capability is provided, the whole discussion of \u0022null type\u0022 is mute.\u003C/p\u003E\u003Cp\u003EWell I have rambled more than I should have. If you wish to discuss these issues further, lets move the discussion to your developer thread.\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\n"},{"CreatedByName":"undercoveryankee","CreatedById":103505,"CreatedDateTime":"2014-09-06T01:33:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWhich brings me back to my original comment about the information about engine thrust. To implement the landing() script it is necessary to answer the question \u0022what thrust (both direction and magnitude) does the vehicle provide if the throttle is set at 1?\u0022 With this fundamental information, the script can make decisions about how to achieve its goal of arriving at the landing_height with the desired landing_speed. In the \u0022real world\u0022 the software controller is given this information about the thrust magnitude and direction by the designer of the vehicle. The software does not iterate over the parts of the \u0022real hardware\u0022 and assemble the information. I guess that I an expecting the abstract vehicle model within kOS to provide the same level of abstraction.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESince in KSP, the player is the designer of the vehicle, I think it would be more fun to make sure the player has access to exact coordinates and all of the necessary performance figures for the engines and let the player calculate the vehicle parameters that need to go into the script than for kOS to automagically give everyone a generic useful set of data. I don\u0027t think anyone who\u0027s using kOS at this level is going to be scared away by the prospect of doing some math in a spreadsheet or in a separate \u0022vessel analyzer\u0022 kOS script that\u0027s run from the archive.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-06T01:49:59Z","Content":"\n\u003Cp\u003EOK, now I\u0027m confused. First, it\u0027s a problem that kOS doesn\u0027t automatically provide certain information, but then the basic design philosophy is that the information in question is provided by the programmer...\u003C/p\u003E\u003Cp\u003EI see where the language design might be a little... suboptimal for modeling the ship\u0027s controls. But I also see where kOS is not only an indirect language construct, but also a rescued project, for a game, no less. I have high hopes that kerbscript will continue to develop to a more fully realized programming platform, but I also enjoy it as a simple automation tool.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-09-08T01:22:28Z","Content":"\n\u003Cp\u003ESince the kOS repository thing never took off, I just released my latest script \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/92945-kOS-13-1-Script-RCS-Thrust-Controller-automated-time-delayed-maneuver-executions\u0022 rel=\u0022external nofollow\u0022\u003Ehere in the forums\u003C/a\u003E. Just FYI in case you guys want to link to it in the OP or anything.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-09-08T17:33:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003EAll right already. You have \u0022shamed\u0022 me into discussing this topic of \u0022expectations.\u0022\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe are not about shaming here. Steven and I were honestly confused about what you wanted to do that you couldn\u0027t.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003EWhich brings me back to my original comment about the information about engine thrust. To implement the landing() script it is necessary to answer the question \u0022what thrust (both direction and magnitude) does the vehicle provide if the throttle is set at 1?\u0022 With this fundamental information, the script can make decisions about how to achieve its goal of arriving at the landing_height with the desired landing_speed. In the \u0022real world\u0022 the software controller is given this information about the thrust magnitude and direction by the designer of the vehicle. The software does not iterate over the parts of the \u0022real hardware\u0022 and assemble the information. I guess that I an expecting the abstract vehicle model within kOS to provide the same level of abstraction.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt sounds like the real world abstracts this calculation behind a person doing the calculation rather than the flight operating system giving it to you. There is no requirement in kOS that the user iterate over the engines, you as the designer could input these variables the same way they do in the real world.\u003C/p\u003E\u003Cp\u003EThat being said i do think that because the stock game provides some of these aggregate values for mass, thrust and lift it makes sense for kOS to expose them too. Ill look to see if the KSP API has public state were i can fetch these \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. If not it shouldn\u0027t be that hard to add.\u003C/p\u003E\u003Cp\u003Ethank you for your feedback and I welcome you to send us pull requests if the mood strikes you to help out.\u003C/p\u003E\n"},{"CreatedByName":"Lexx Thai","CreatedById":102954,"CreatedDateTime":"2014-09-09T17:46:25Z","Content":"\n\u003Cp\u003E@erendrake: Dude, may be you could slight change of kOS programming \u0022concept\u0022 and make it a little \u0022visually\u0022. I mean an ability of ID assignation to vehicle parts in editor scene and use them in code like variables. For example, at vehicle design process, I\u0027ll can assign name for \u0027landing engines\u0027 and control them in script like MYLANDINGENGINES:\u0026lt;useful fields\u0026gt;\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-09T18:09:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Lexx Thai\u0022 data-cite=\u0022Lexx Thai\u0022\u003E\u003Cdiv\u003E@erendrake: Dude, may be you could slight change of kOS programming \u0022concept\u0022 and make it a little \u0022visually\u0022. I mean an ability of ID assignation to vehicle parts in editor scene and use them in code like variables. For example, at vehicle design process, I\u0027ll can assign name for \u0027landing engines\u0027 and control them in script like MYLANDINGENGINES:\u0026lt;useful fields\u0026gt;\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis makes for a good user interface, but has one technical difficulty: It requires adding a module to each and every part in the game (to make the tweakable menu allow you to name it), and that means using something like the ModuleManager mod, which is a PITA to work with and not break things.\u003C/p\u003E\n"},{"CreatedByName":"Lexx Thai","CreatedById":102954,"CreatedDateTime":"2014-09-09T18:41:57Z","Content":"\n\u003Cp\u003EI think, MM config to all things (Engines, RCS, Tanks, may be something else) is a \u0022lesser evil\u0022 in comparison with current monstrous methods.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-09-09T21:03:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThis makes for a good user interface, but has one technical difficulty: It requires adding a module to each and every part in the game (to make the tweakable menu allow you to name it), and that means using something like the ModuleManager mod, which is a PITA to work with and not break things.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am also not excited about adding a module to every part \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Lexx Thai\u0022 data-cite=\u0022Lexx Thai\u0022\u003E\u003Cdiv\u003EI think, MM config to all things (Engines, RCS, Tanks, may be something else) is a \u0022lesser evil\u0022 in comparison with current monstrous methods.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are also assignment issues. We could auto assign each part an incrementing integer or even a Guid but i honestly dont know much about the editor and how it deals with copying and re-snapping parts. If it behaves like I think it does we would end up with either\u003C/p\u003E\u003Cp\u003E* Parts getting the same Id\u003C/p\u003E\u003Cp\u003E* A ton of constant Id changes whenever you touch the craft \u003C/p\u003E\u003Cp\u003EI am sure that both of these would also be \u0022monstrous\u0022.\u003C/p\u003E\u003Cp\u003EI think it would make the most sense for it to be a textbox that the scripter would control. You can type in whatever you like, it gets copied on part clone or whatever you do and you can keep it up to date and reference it in code. That would solve a lot of problems (other than the every part needs a new kOS module, which sucks). That would of course require a tweakable textbox that the stock game doesnt have \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_angry.gif\u0022 alt=\u0022:mad:\u0022\u003E . I think we can get it with the KSPAPIExtensions but i honestly havent confirmed that. It would also be pretty useless if we didnt also have more string manipulation tools in the language (starts with, contains, ends with, trim , ........) which is non-trivial.\u003C/p\u003E\u003Cp\u003EThe solution that Steven and I have been tossing around for some kind of part query language is the one I like the best. It requires the most design as i dont think anyone would be happy if we are redoing the syntax every release and breaking everyone\u0027s scripts.\u003C/p\u003E\u003Cp\u003EThis is a complicated problem and it will require a lot of design and thought. I thank you for your input \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-09T21:07:26Z","Content":"\n\u003Cp\u003EXPath for KSP? The vessel is sort of a hierarchy...\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-09T22:56:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EXPath for KSP? The vessel is sort of a hierarchy...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe\u0027ve been tossing around the idea of some generic where-clause to trim sublists down: Get a sublist of a list where the sublist consists of all the elements in which (condition you write about an element) is true.\u003C/p\u003E\u003Cp\u003Esomething vaguely like:\u003C/p\u003E\u003Cp\u003ELIST PARTS IN mylist WHERE (some boolean condition you can make up as you wish).\u003C/p\u003E\u003Cp\u003EThus you could get all engines where engine type is blarg, or get all parts where their type is WideAngleLight (or whatever the type name for that is called - I can\u0027t really look it up at the moment, but you get the idea.)\u003C/p\u003E\u003Cp\u003EI\u0027d like this to be something not limited to just getting parts. I\u0027d like it to work on *anything* of type LIST().\u003C/p\u003E\u003Cp\u003EIt may be possible to also write some code that activates inside the VAB/SPH editor to let you name parts yourself, but it definitely shouldn\u0027t work with the tweakables menus, as that requires adding a module to every part and that\u0027s an ugly messy bug-likely approach. When more than one mod tries doing that at the same time they can end up stepping on each others\u0027 toes.\u003C/p\u003E\u003Cp\u003EIt may be possible to have the SCS part\u0027s kOS Module add a general UI button to the editor screen (so you can\u0027t access it until after you\u0027ve added an SCS part to the craft, and therefore it\u0027s not something we have to do to every part in the game). Clicking the general UI button would then let you subsequently click on a part of your craft somewhere, and it would pop up a name to give the part. Thus the module code we write isn\u0027t attached to all the parts. It\u0027s module code attached to just the SCS part saying \u0022point at another part and tell me what you want me to call it\u0022. This, given the way KSP modding works, should be doable without having to use modulemanager to add our code to every part. KSP allows parts that exist on the craft being built in the editor to run code right away while still in the editor screen. (Thus why kerbal engineer can show you the dV readouts during building), and that code can do things like read the mouse to see what part of the craft is currently highlighted under the cursor.\u003C/p\u003E\u003Cp\u003EI\u0027m not saying I want to rush off and do it right now, as it\u0027s a nontrivial bit of work, but from what I\u0027ve seen, that approach is possible.\u003C/p\u003E\u003Cp\u003EIdeally both could exist eventually - WHERE clauses for lists, and also being able to give parts kOS identifier names in the VAB (and save those names in the craft definition file).\u003C/p\u003E\u003Cp\u003ENot promising anything - just saying these things seem, in principle, to be possible.\u003C/p\u003E\u003Cp\u003EIt\u0027s all just a matter of what is it worth spending the limited amout of free time on, since there\u0027s not enough time to implement every idea that\u0027s possible to implement. \u003C/p\u003E\u003Cp\u003EIt\u0027s a matter of doing triage of programmer time.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-09T23:00:14Z\u0022 title=\u002209/09/2014 11:00  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 9, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Lexx Thai","CreatedById":102954,"CreatedDateTime":"2014-09-10T17:26:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIt may be possible to also write some code that activates inside the VAB/SPH editor to let you name parts yourself, but it definitely shouldn\u0027t work with the tweakables menus, as that requires adding a module to every part and that\u0027s an ugly messy bug-likely approach.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EModuleless part name editor is good idea, I forgot about that. BUT even simple part module (added to every part) with simple function: showing small dialog with edit field and two buttons - I think, it can\u0027t cause mod interaction bugs. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIt may be possible to have the SCS part\u0027s kOS Module add a general UI button to the editor screen (so you can\u0027t access it until after you\u0027ve added an SCS part to the craft, and therefore it\u0027s not something we have to do to every part in the game). Clicking the general UI button would then let you subsequently click on a part of your craft somewhere, and it would pop up a name to give the part. Thus the module code we write isn\u0027t attached to all the parts. It\u0027s module code attached to just the SCS part saying \u0022point at another part and tell me what you want me to call it\u0022. This, given the way KSP modding works, should be doable without having to use modulemanager to add our code to every part. KSP allows parts that exist on the craft being built in the editor to run code right away while still in the editor screen.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1. Editor must be independent from the SCS part on the craft. Imagine a dock of the automated vehicle to a passive engine compartment in orbit, or vice versa.\u003C/p\u003E\u003Cp\u003E2. Name can be assigned directly to part. I tried using the Part.partName - it works. In addition, you can assign unique names for every parts in symmetry (thrust control of multiple engines, hehe).\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-10T18:20:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Lexx Thai\u0022 data-cite=\u0022Lexx Thai\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E1. Editor must be independent from the SCS part on the craft. Imagine a dock of the automated vehicle to a passive engine compartment in orbit, or vice versa.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe craft file would store the name, not the SCS part. The part just has to be there because there\u0027s no code running at all from the mod if the part containing the PartModule isn\u0027t present yet. You could add the SCS part, name bits of the craft, and then throw the SCS part away again and the craft should still have the names on it that get saved.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-09-11T20:31:15Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003ENEW RELEASE\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EWARNING: Because of a change that had to be done for this patch, \u003C/span\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003Eit is \u003C/span\u003E\u003C/strong\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003E\u003Cem\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EHighly\u003C/span\u003E\u003C/strong\u003E\u003C/em\u003E\u003C/span\u003E\u003Cstrong\u003E recommended that you increase your \u003C/strong\u003E\u003Cem\u003E\u003Cstrong\u003EInstructionsPerUpdate\u003C/strong\u003E\u003C/em\u003E\u003Cstrong\u003E setting in config.xml to 150% as much\u003C/strong\u003E as it was before (i.e. from 100 to 150, or if it was 200, make it 300.).\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENew Hotness\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E* Updated fonts, Thanks @MrOnak\u003Cbr\u003E* Now runtime errors show source location and call stack trace (Github issues #186 and #210).  Example:\u003Cbr\u003E~~~\u003Cbr\u003E    Tried To push Infinity into the stack.\u003Cbr\u003E    At MyProgramFile2 on Archive, line 12\u003Cbr\u003E        PRINT var1/var2.\u003Cbr\u003E                  ^\u003Cbr\u003E    Called from MyProgramFile1 on Archive, line 213\u003Cbr\u003E    RUN MyProgramFIle2(\u0022hello\u0022).\u003Cbr\u003E    ^\u003Cbr\u003E    Called from StartMission on Archive, line 2.\u003Cbr\u003E    RUN MyProgramFile1.\u003Cbr\u003E    ^\u003Cbr\u003E    _\u003Cbr\u003E~~~\u003Cbr\u003E* (WHEN and ON) Triggers that are taking longer than an Update is meant to take, and thus can freeze KSP are caught and reported (Github issue #104).  Gives the user an explanatory message about the problem.\u003Cbr\u003E  * WARNING: Because of a change that had to be done for this, it is **_Highly_ recommended that you increase your *InstructionsPerUpdate* setting in config.xml to 150% as much** as it was before (i.e. from 100 to 150, or if it was 200, make it 300.).\u003Cbr\u003E* Multiple Terminal Windows - possible to have one open per CPU part.  (Github issue #158) \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://raw.githubusercontent.com/KSP-KOS/KOS/master/Docs/Images/MultiEdit.png\u0022 alt=\u0022MultiEdit.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOld and Busted ( now fixed )\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E* \u0022rename\u0022 was deleting files instead of moving them. (Github issue #220).\u003Cbr\u003E* Was parsing array index brakets \u0022[..]\u0022 incorrectly when they were on the lefthand side of an assignment.  (Github issue #219)\u003Cbr\u003E* SHIP:SENSORS were reading the wrong ship\u0027s sensors sometimes in multi-ship scenarios.  (GIthub issue #218 )\u003Cbr\u003E* Integer and Floating point numbers were not quite properly interchangable like they were meant to be. (Github issue #209) \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-11T22:10:29Z\u0022 title=\u002209/11/2014 10:10  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 11, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003Cbr\u003Efixed the big warning about IPU\n\u003C/span\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-09-11T20:38:23Z","Content":"\n\u003Cp\u003Ehurray for more informative error messages!\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-11T20:50:43Z","Content":"\n\u003Cp\u003EYay!\u003C/p\u003E\u003Cp\u003EIs there a Github issue for the \u0022kOS module in the root part is a Bad Thing\u0022 bug? I had heard it mentioned in furtive whispers and in dark alleys, but it wasn\u0027t until I decided to MM a kOSProcessor module into each command module that I was formally introduced to the damned thing... Thankfully, I\u0027m still in my \u0022Stranded a kerbal in space because I brain spazzed the dV calculations? Just start a new career!\u0022 mode. So it only set me back a couple of sub-orbital launches.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-09-11T20:54:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EYay!\u003Cp\u003EIs there a Github issue for the \u0022kOS module in the root part is a Bad Thing\u0022 bug? I had heard it mentioned in furtive whispers and in dark alleys, but it wasn\u0027t until I decided to MM a kOSProcessor module into each command module that I was formally introduced to the damned thing... Thankfully, I\u0027m still in my \u0022Stranded a kerbal in space because I brain spazzed the dV calculations? Just start a new career!\u0022 mode. So it only set me back a couple of sub-orbital launches.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ewas this in the new release?\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-11T21:00:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003Ewas this in the new release?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDon\u0027t know yet. I know it was in the last release. I MM\u0027d a kOSProcessor into all the command pods, and when I tried to return to a vessel in orbit, there was nothing else there. No parachute, no US science layer, no propulsion... Just a lonesome Mk-1 pod spinning slowly in orbit. It was supposed to be a \u0022rescue\u0022 mission to get Jeb, who I had stranded in a polar orbit around Minmus by not properly managing my dV.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-11T21:13:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EDon\u0027t know yet. I know it was in the last release. I MM\u0027d a kOSProcessor into all the command pods, and when I tried to return to a vessel in orbit, there was nothing else there. No parachute, no US science layer, no propulsion... Just a lonesome Mk-1 pod spinning slowly in orbit. It was supposed to be a \u0022rescue\u0022 mission to get Jeb, who I had stranded in a polar orbit around Minmus by not properly managing my dV.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI get the same effect sometimes and I never use MM to put kOS into a main pod. Something is crashing during the reloading of the vessel from on-rails to full-physics and the code SQUAD uses to reload the vessel is very VERY fragile. If *any* part\u0027s module code throws *any* exception during the reloading process, then KSP aborts the loading of the *entire* remainder of the vessel from that point onward and you end up with a vessel with only some of its parts having been brought into existence. This is why truncated craft is a very common effect of a large number of different bugs from different mods. I don\u0027t suppose you happen to have the KSP logfile from that event? (Probably not because it overwrites each time you run, but I can hope).\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-11T21:25:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI get the same effect sometimes and I never use MM to put kOS into a main pod. Something is crashing during the reloading of the vessel from on-rails to full-physics and the code SQUAD uses to reload the vessel is very VERY fragile. If *any* part\u0027s module code throws *any* exception during the reloading process, then KSP aborts the loading of the *entire* remainder of the vessel from that point onward and you end up with a vessel with only some of its parts having been brought into existence. This is why truncated craft is a very common effect of a large number of different bugs from different mods. I don\u0027t suppose you happen to have the KSP logfile from that event? (Probably not because it overwrites each time you run, but I can hope).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENope...But if it happens again, I\u0027ll be sure to get a log posted. At the least, I\u0027ll give you my MM config. I may have horribly borked something up in that...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Add a beefed-up kOS system to all manned command modules.\u003Cbr\u003E// Any Part that has a ModuleCommand Module, no kOSProcessor already, and doesn\u0027t have a CrewCapacity of 0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E@PART\u003Cbr\u003E[*]:HAS[@MODULE[ModuleCommand],!@MODULE[kOSProcessor]]:FINAL\u003Cbr\u003E{\u003Cbr\u003E  MODULE\u003Cbr\u003E  {\u003Cbr\u003E    name = kOSProcessor\u003Cbr\u003E    diskSpace = 20000\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI had tried using \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#0000ff;\u0022\u003E...,!#CrewCapacity[0]\u003C/span\u003E\u003C/strong\u003E\u003C/span\u003E as part of the \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#0000ff;\u0022\u003E:HAS[]\u003C/span\u003E\u003C/strong\u003E\u003C/span\u003E block, in an attempt to bypass probe cores, but it wasn\u0027t working. And for a brief time I even tried to add a nominal EC drain as a price for having the kOSProc onboard.\u003C/p\u003E\n"},{"CreatedByName":"Horus","CreatedById":99705,"CreatedDateTime":"2014-09-11T21:34:44Z","Content":"\n\u003Cp\u003EYay! kOS update! Thanks for your efforts! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-11T21:49:03Z","Content":"\n\u003Cp\u003EI want to highlight an important aspect of the update that was boldfaced, but the boldfacing got lost in how it was pasted into the forums.\u003C/p\u003E\u003Cp\u003EIt\u0027s quite important:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E Because of a change that had to be done for this, it is \u003Cstrong\u003E_Highly_ recommended that you increase your *InstructionsPerUpdate* setting in config.xml to 150% as much\u003C/strong\u003E as it was before (i.e. from 100 to 150, or if it was 200, make it 300.).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe usual setting in the past was 100. But that was 100 when counting ONLY the mainline code and never counting any work done by WHEN,ON, and LOCK. Now that these are being counted, you need a slightly higher setting to get roughly the same performance as you had before, under the assumption that in a typical program about half the execution work is done in WHEN and ON and thus wasn\u0027t being counted before.\u003C/p\u003E\u003Cp\u003EThe reason we couldn\u0027t just automatically increase the number in the mod\u0027s update code is that whenever you run the mod, the config file is written, and once the config file is written, its values are taken as gospel and override whatever the mod\u0027s defaults are. So even though we changed the default from 100 to 150, that change won\u0027t take effect for anyone who had already run the mod in the past and thus already had a config file.\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2014-09-11T21:57:55Z","Content":"\n\u003Cp\u003EMultiple windows is going to be fun:).\u003C/p\u003E\u003Cp\u003EOn the subject of identifying parts without writing a MM module to every part could this work;\u003C/p\u003E\u003Cp\u003ECreate a surface attachable part (preferably small and discreet) call it a KOM port:rolleyes:,\u003C/p\u003E\u003Cp\u003EIt can then identify the part it is attached to and right clicking on it brings up a text box that lets you input a variable name for that part?\u003C/p\u003E\u003Cp\u003EWould also have the added \u0022advantage\u0022 of making the player think in advance about what they wanted kos to have right-click access to.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-11T22:00:17Z\u0022 title=\u002209/11/2014 10:00  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 11, 2014\u003C/time\u003E by TDW\u003C/strong\u003E\n\u003C/span\u003E\n"}]}