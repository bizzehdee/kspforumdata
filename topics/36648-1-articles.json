{"TopicId":36648,"ForumId":50,"TopicTitle":"Landing and Takeoff Delta-V vs TWR and specific impulse","CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-11T01:20:56Z","PageNum":1,"Articles":[{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-11T01:20:56Z","Content":"\n\u003Cp\u003EI just did some calculations in Mathematica that are worth sharing. Especially at low thrust-to-weight-ratio (TWR), it turns out to be more efficient to land along a completely horizontal trajectory (pitching up to prevent gravity from reducing your altitude) than the common wisdom of doing a pure-retrograde suicide burn. The following numbers are best-case, assuming you\u0027re able to start from a circular prograde equatorial orbit at zero altitude before landing. I\u0027m only considering the bodies without atmospheres here, since drag changes the story completely.\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/M3aYM\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003EThe reason it takes less delta-V to land with a lower specific impulse (Isp) is that your mass decreases faster. There\u0027s no consideration here for engine or fuel mass, just overall TWR at the start of the landing burn. Higher Isp or better mass fraction will naturally give your craft a larger delta-V capacity to work from. The weight is relative to the body in question, at 0 altitude. I am considering the rotation speed of each planet/moon as the final condition, so the infinite-TWR asymptote is the orbital speed at zero altitude minus the sidereal rotation velocity at the equator and zero altitude.\u003C/p\u003E\u003Cp\u003EHere are similar plots for takeoff, assuming the same type of constant-altitude trajectory:\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/U0ULU\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003EHope people find this useful and/or interesting. Let me know if you have any questions, or if anything looks off.\u003C/p\u003E\u003Cp\u003EEdit: I\u0027m getting my celestial body data from \u003Ca href=\u0022https://docs.google.com/spreadsheet/ccc?key=0AuySrGPsDeq2dFdaS19xc2lobGc2aWNXUkJsZlVtWFE#gid=0\u0022 rel=\u0022external nofollow\u0022\u003Ethis spreadsheet\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EEdit again: Sorry for the delay, I finished up the mathematical derivation document, you can find it \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Landing%20and%20Takeoff%20Derivation.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E. I\u0027ve also posted the code for \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Landing.pdf\u0022 rel=\u0022external nofollow\u0022\u003Elanding\u003C/a\u003E and \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Takeoff.pdf\u0022 rel=\u0022external nofollow\u0022\u003Etakeoff\u003C/a\u003E.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-21T19:08:37Z\u0022 title=\u002207/21/2013 07:08  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 21, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003Cbr\u003EAdding mathematical derivation link\n\u003C/span\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-11T07:49:06Z","Content":"\n\u003Cp\u003EHere is an excellent video by Kosmo-not demonstrating this type of landing trajectory, to show you what I mean:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/zBa4c-YA3g8?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EI should also note that I\u0027m assuming a single stage is used throughout the entire landing, with a constant maximum thrust and the only change in mass being due to expending propellant. If you happen to stage in such a way that your TWR and Isp are exactly the same immediately before and immediately after the staging event, then the original numbers will still work.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-11T08:11:44Z\u0022 title=\u002207/11/2013 08:11  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 11, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SchroedingersHat","CreatedById":60782,"CreatedDateTime":"2013-07-18T12:23:43Z","Content":"\n\u003Cp\u003EFirstly is that TWR standard gravity or gravity on the relevant body?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EI just did some calculations in Mathematica that are worth sharing. Especially at low thrust-to-weight-ratio (TWR), it turns out to be more efficient to land along a completely horizontal trajectory (pitching up to prevent gravity from reducing your altitude) than the common wisdom of doing a pure-retrograde suicide burn.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIsn\u0027t a zero lift turn still going to be more efficient? I usually go for a zero lift almost-suicide burn. Set my periapsis at a bit past my landing spot then wait a bit until almost 0.5at^2= distance to landing spot and burn pure retrograde.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-18T12:35:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SchroedingersHat\u0022 data-cite=\u0022SchroedingersHat\u0022\u003E\u003Cdiv\u003EFirstly is that TWR standard gravity or gravity on the relevant body?\u003Cp\u003EIsn\u0027t a zero lift turn still going to be more efficient? I usually go for a zero lift almost-suicide burn. Set my periapsis at a bit past my landing spot then wait a bit until almost 0.5at^2= distance to landing spot and burn pure retrograde.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGravity on the relevant body. Counterintuitively, zero-lift (pointing retrograde the whole time... no lift for any trajectory in a vacuum) is actually worse. If you allow your altitude to drop, then gravity speeds you up and that ends up more important than if you accepted the steering loss and pitched up to fight gravity. This is more noticeable at low TWR. There are several threads from the past few months that came to this conclusion, both from numerical simulation and in-game tests. Let me dig those up and link to them...\u003C/p\u003E\u003Cp\u003EEdit: a few recent (some more relevant than others) discussions to flip through if you\u0027re bored\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/34354-Land-on-Tylo-with-low-Thrust-to-Weight-Ratio\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/34354-Land-on-Tylo-with-low-Thrust-to-Weight-Ratio\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/40139-How-to-calculate-optimal-descent-profiles\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/40139-How-to-calculate-optimal-descent-profiles\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/39721-Tylo-%28Tylo-Lander-Certification%29\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/39721-Tylo-%28Tylo-Lander-Certification%29\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/39390-How-to-calculate-DeltaV-to-get-to-orbit-or-to-get-from-orbit-to-land\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/39390-How-to-calculate-DeltaV-to-get-to-orbit-or-to-get-from-orbit-to-land\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-18T12:46:07Z\u0022 title=\u002207/18/2013 12:46  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 18, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SchroedingersHat","CreatedById":60782,"CreatedDateTime":"2013-07-18T12:42:31Z","Content":"\n\u003Cp\u003EOh, I get it now. By burning pure horizontal you can accelerate \u003Cem\u003Edown\u003C/em\u003E quicker than you would otherwise (even after steering losses) and spend less \u003Cem\u003Etime\u003C/em\u003E (as gravity loss is a pure function of time and horizontal speed) accumulating gravity loss.\u003C/p\u003E\u003Cp\u003EI\u0027m guessing then that the ideal is going to be somewhere in between and would depend on the altitude which you decircularized from.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-18T12:55:40Z","Content":"\n\u003Cp\u003EYou don\u0027t burn horizontal, you burn at the angle necessary to keep your velocity vector horizontal. But yes the time you spend at full throttle is lower, hence less fuel burnt. There\u0027s some in-between trajectory that is the best you can achieve in practice that avoids crashing into the terrain.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-18T13:07:43Z\u0022 title=\u002207/18/2013 01:07  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 18, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"HoY","CreatedById":57294,"CreatedDateTime":"2013-07-18T13:12:05Z","Content":"\n\u003Cp\u003EWhat I\u0027m taking away from this is after 2 the return is very minimal for the ammount of extra engine or lighter payload, so 2.0 is the magic number for me.\u003C/p\u003E\u003Cp\u003EAnd the conversation your having,, that makes sense, and mechjeb\u0027s auto land function has been updated to land this way instead of doing suicide burns. I don\u0027t know when it changed (sometime after 2.0.2) but the suicide option is gone and it burns for quite a while keeping your vertical and horizontal speed as balanced as it can.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-18T13:27:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HoY\u0022 data-cite=\u0022HoY\u0022\u003E\u003Cdiv\u003EWhat I\u0027m taking away from this is after 2 the return is very minimal for the ammount of extra engine or lighter payload, so 2.0 is the magic number for me.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou can combine these results with the TWR stats of the different engines and compare payload mass fraction for landing, there will be an optimal TWR and it\u0027s fairly low (especially for the LV-N). The slightly lower delta-V cost of landing with a higher TWR is not worth the extra dry weight of the additional engines beyond a point.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HoY\u0022 data-cite=\u0022HoY\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAnd the conversation your having,, that makes sense, and mechjeb\u0027s auto land function has been updated to land this way instead of doing suicide burns. I don\u0027t know when it changed (sometime after 2.0.2) but the suicide option is gone and it burns for quite a while keeping your vertical and horizontal speed as balanced as it can.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t think this is correct. I most often use the \u0022land anywhere\u0022 button, which does a pure-retrograde near suicide burn (it\u0027s around 80-90% throttle for most of the landing in my experience). IIRC the \u0022land at target\u0022 still tracks a velocity setpoint when landing without atmosphere, and points retrograde the whole time. It would be great to see this kind of constant-altitude landing implemented in MechJeb, but it\u0027s not there right now. A first step in this direction would be a Translatron-like feature that would control to a desired vertical speed setpoint using pitch instead of throttle.\u003C/p\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2013-07-18T17:27:33Z","Content":"\n\u003Cp\u003EI am looking forward to your mathematical derivation. Since I did try it myself, however I get a first-order nonlinear ordinary differential equation. But I am not that great at solving them XD:\u003C/p\u003E\u003Cp\u003Edv / dt = sqrt((F * Isp / (m0 * Isp - t * F * g0))^2 - (mu / r^2 - v^2 / r)^2)\u003C/p\u003E\u003Cp\u003EI might try to solve it numerically, since I tried using Wolframalpha and Matlab to solve it, but they weren\u0027t able to solve it.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-18T22:13:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fibonatic\u0022 data-cite=\u0022fibonatic\u0022\u003E\u003Cdiv\u003EI am looking forward to your mathematical derivation. Since I did try it myself, however I get a first-order nonlinear ordinary differential equation. But I am not that great at solving them XD:\u003Cp\u003Edv / dt = sqrt((F * Isp / (m0 * Isp - t * F * g0))^2 - (mu / r^2 - v^2 / r)^2)\u003C/p\u003E\u003Cp\u003EI might try to solve it numerically, since I tried using Wolframalpha and Matlab to solve it, but they weren\u0027t able to solve it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s the gist of it, yes (though you should be dividing F by g0, not multiplying). Rearranged a bit to be in terms of\u003C/p\u003E\u003Cp\u003ETWR0 = F * r^2 / (m0 * mu), then solved numerically using NDSolve in Mathematica. In Matlab you\u0027d use ode45 or similar, and it would be a few more lines of code overall.\u003C/p\u003E\u003Cp\u003EI\u0027ve got a nice LaTeX writeup in progress.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-19T00:20:34Z\u0022 title=\u002207/19/2013 12:20  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 19, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2013-07-20T13:21:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EThat\u0027s the gist of it, yes (though you should be dividing F by g0, not multiplying). Rearranged a bit to be in terms of\u003Cp\u003ETWR0 = F * r^2 / (m0 * mu), then solved numerically using NDSolve in Mathematica. In Matlab you\u0027d use ode45 or similar, and it would be a few more lines of code overall.\u003C/p\u003E\u003Cp\u003EI\u0027ve got a nice LaTeX writeup in progress.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI also realized this while making a Matlab script (I also used a wrong formula for the final delta-v calcualtion, also got another g0 wrong there).\u003C/p\u003E\u003Cp\u003EBut because the Matlab implementation of ode45 only has the option to choose a time span and not a stop criteria for when the velocity reaches orbital velocity (not 100% sure if events can be used for this) so I wrote my own solver. However I do not know the algorithm used by ode45, so I first used a RK2 method. Also tried a RK4 method, however this seemed to be less accurate than the RK2 compared to the ode45 solver. And also also made them more memory efficient, since you do not need to know the entire curve, but only the final value for time:\u003C/p\u003E\u003Cp\u003Efunction dv = burnBudget(mu, r, v0, Isp, TWR, N)\u003C/p\u003E\u003Cp\u003E g = 9.81;\u003C/p\u003E\u003Cp\u003E vc = sqrt(mu / r);\u003C/p\u003E\u003Cp\u003E f = @(t, u) sqrt((g * TWR * Isp / (Isp - t * TWR))^2 - (mu / r^2 - u^2 / r)^2);\u003C/p\u003E\u003Cp\u003E h = Isp * (1 - exp(-vc / (g * Isp))) / (TWR * N);\u003C/p\u003E\u003Cp\u003E v = v0;\u003C/p\u003E\u003Cp\u003E k = 1;\u003C/p\u003E\u003Cp\u003E while v \u0026lt; vc\u003C/p\u003E\u003Cp\u003E fi = f(h * (k - 1), v);\u003C/p\u003E\u003Cp\u003E vp = v;\u003C/p\u003E\u003Cp\u003E v = v \u002B h / 2 *(fi \u002B f(h * k, v \u002B h * fi));\u003C/p\u003E\u003Cp\u003E k = k \u002B 1;\u003C/p\u003E\u003Cp\u003E end\u003C/p\u003E\u003Cp\u003E dh = h * (vc - vp) / (v - vp);\u003C/p\u003E\u003Cp\u003E for l = 1 : 5\u003C/p\u003E\u003Cp\u003E dh = 2 * (vc - vp) / (f(h * k, vp) \u002B f(h * k \u002B dh, vc));\u003C/p\u003E\u003Cp\u003E end\u003C/p\u003E\u003Cp\u003E tf = h * (k - 1) \u002B dh;\u003C/p\u003E\u003Cp\u003E dv = g * Isp * log(Isp / (Isp - tf * TWR));\u003C/p\u003E\u003Cp\u003Eend\u003C/p\u003E\u003Cp\u003EBy the way I used another definition for: TWR = F / (m * g0).\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-21T19:16:11Z","Content":"\n\u003Cp\u003EFYI, I finished up the mathematical derivation document, you can find it \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Landing%20and%20Takeoff%20Derivation.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E. I\u0027ve also posted the code for \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Landing.pdf\u0022 rel=\u0022external nofollow\u0022\u003Elanding\u003C/a\u003E and \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Takeoff.pdf\u0022 rel=\u0022external nofollow\u0022\u003Etakeoff\u003C/a\u003E. These links are also at the end of the original post.\u003C/p\u003E\u003Cp\u003EFinding the time for a final condition is exactly the kind of thing events are designed to do. You can also easily calculate the time at which mass goes to zero and use that (or some large fraction of it) as a worst-case maximum time, then interpolate on the result to find the final-condition crossing time. That\u0027s what I was doing at first, before I found that Mathematica 9 added events to NDSolve, and using them was less prone to convergence warnings than FindRoot on the InterpolatingFunction output of NDSolve.\u003C/p\u003E\u003Cp\u003EYour TWR convention is only particularly useful for Kerbin, but I guess you can just do the scaling for different bodies at a higher level if you want. RK2\u0027s not very accurate, I prefer using a variable-step integrator for simple stuff like this. It will be a different story when I start incorporating dynamics into an optimization algorithm (it\u0027s nice to have a known finite dimension of your problem before you start), but this is just run-of-the-mill ODE integration here.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-21T19:18:26Z\u0022 title=\u002207/21/2013 07:18  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 21, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2013-07-22T12:59:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EFYI, I finished up the mathematical derivation document, you can find it \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Landing%20and%20Takeoff%20Derivation.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E. I\u0027ve also posted the code for \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Landing.pdf\u0022 rel=\u0022external nofollow\u0022\u003Elanding\u003C/a\u003E and \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/8244638/Constant%20Altitude%20Takeoff.pdf\u0022 rel=\u0022external nofollow\u0022\u003Etakeoff\u003C/a\u003E. These links are also at the end of the original post.\u003Cp\u003EFinding the time for a final condition is exactly the kind of thing events are designed to do. You can also easily calculate the time at which mass goes to zero and use that (or some large fraction of it) as a worst-case maximum time, then interpolate on the result to find the final-condition crossing time. That\u0027s what I was doing at first, before I found that Mathematica 9 added events to NDSolve, and using them was less prone to convergence warnings than FindRoot on the InterpolatingFunction output of NDSolve.\u003C/p\u003E\u003Cp\u003EYour TWR convention is only particularly useful for Kerbin, but I guess you can just do the scaling for different bodies at a higher level if you want. RK2\u0027s not very accurate, I prefer using a variable-step integrator for simple stuff like this. It will be a different story when I start incorporating dynamics into an optimization algorithm (it\u0027s nice to have a known finite dimension of your problem before you start), but this is just run-of-the-mill ODE integration here.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENice documents (however I find the mathematica code hard to read, partially because I have hardly any experience with it). My derivation was a bit shorter since I started in cylindrical coordinates, and just made one balancing equation in the radial direction, which yields an expression for the angle in which to burn and using sin(arccos(x))=sqrt(1-x^2) I was able to find the final equation for dv/dt.\u003C/p\u003E\u003Cp\u003EI think I have found a better alternative for the numerical solution, since I noticed that both for take-off and landing the solution seems to be an exponential growth in the region of interest, which causes the solution to be unstable. Note that this is only true for landing when the Isp is not extremely high. Therefore it will always be hard to get good accuracy, since the error also experiences an exponential growth. But by changing the unknown from velocity to time you will be able to turn it into a stable numerical simulation, which needs significant less steps, and also has the advantage that you can end exactly at your desired velocity:\u003C/p\u003E\u003Cp\u003Efunction dv = burnBudgetTakeoff(mu, r, v, Isp, TWR, N)\u003C/p\u003E\u003Cp\u003E g = 9.81;\u003C/p\u003E\u003Cp\u003E vc = sqrt(mu / r);\u003C/p\u003E\u003Cp\u003E h = (vc - v) / N;\u003C/p\u003E\u003Cp\u003E f = @(t, u) h / sqrt((g * TWR * Isp / (Isp - t * TWR))^2 - (mu / r^2 - u^2 / r)^2);\u003C/p\u003E\u003Cp\u003E t = 0;\u003C/p\u003E\u003Cp\u003E for k = 1 : N\u003C/p\u003E\u003Cp\u003E fi = f(t, v);\u003C/p\u003E\u003Cp\u003E v = v \u002B h;\u003C/p\u003E\u003Cp\u003E t = t \u002B (fi \u002B f(t \u002B fi, v)) / 2;\u003C/p\u003E\u003Cp\u003E end\u003C/p\u003E\u003Cp\u003E dv = g * Isp * log(Isp / (Isp - t * TWR));\u003C/p\u003E\u003Cp\u003Eend\u003C/p\u003E\u003Cp\u003EBy the way I used F / (m * g0) for TWR, since I thought this would be easier to calculate for a user, since you are able to find the mass and thrust of your ship quite easily in the vanilla game.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-24T06:04:50Z","Content":"\n\u003Cp\u003EPlease ask if there are any specific things I could clarify about the Mathematica code, other than just unfamiliar syntax. In case it isn\u0027t clear, note that f[a_, b_] := a \u002B b is the Mathematica syntax (or one of several, anyway) for defining f as a function of a and b. NDSolve is the numerical differential equation solver, which gets called as NDSolve[{x\u0027[t] == ..., x[0] == xi, WhenEvent[x[t] == xf, \u0022StopIntegration\u0022]}, x, {t, 0, tmax}]. The rest of the code is derived values and plotting, pretty much.\u003C/p\u003E\u003Cp\u003EThere\u0027s no instability for any of typical cases, since none of the bodies in KSP are large enough to require extreme mass ratios to land on or takeoff from. There is a singularity as mass goes to zero, but that\u0027s way up at crazy delta-V\u0027s that we never need here (and can\u0027t reach with the mass ratio of KSP\u0027s fuel tanks anyway). Landing on Gilly with initial TWR \u0026lt; 1 leads to numerical trouble, since it\u0027s only feasible by slowing down until thrust counters the net difference between gravity and centripetal acceleration, and burning nearly vertically until you shed enough mass to have TWR \u0026gt;= 1.\u003C/p\u003E\u003Cp\u003EYour approach of taking the reciprocal of the differential equation and integrating dt/dv instead of dv/dt does work, and you don\u0027t have to worry about events since you have fixed start and end velocities. I tried changing my code to do this in Mathematica, and integrating time as a function of velocity wound up over 2x slower in the end for takeoff, though it was a little bit faster for landing... odd. The results are close enough to be indistinguishable between the two methods (with default settings for NDSolve, anyway), and there\u0027s still no closed-form solution, as best I can tell.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-24T06:21:58Z\u0022 title=\u002207/24/2013 06:21  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 24, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2013-07-24T13:26:37Z","Content":"\n\u003Cp\u003EWhen using the dt/dv method instead dv/dt, did you also compare to accuracy, for instance by comparing both results to a calculation using one of the methods in which you force the step sizes to be much smaller. \u003C/p\u003E\u003Cp\u003EBecause when I tested this with my RK2 solver, there was a significant difference. Because for the dt/dv method 1E2 steps would already yield a relative error of 1E-10, while for the dv/dt method I still only got a relative error of 1E-7 when using 1E7 steps.\u003C/p\u003E\u003Cp\u003EThis can be explained by the fact that the solution is either convergent or divergent, as can be seen in the image below, for which the explicit Euler method is used (so not very accurate solver).\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/TUtZhVol.png\u0022 alt=\u0022TUtZhVol.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EFor a convergent analytical solution the local error of the numerical solution does not get amplified by the following numerical steps, since the analytical solution of the same ODE, but with a small disturbance in the initial value will still convert to the same end value. However for a divergent analytical solution the local error of the numerical solution does get amplified by the following numerical steps, since a small disturbance in the initial value will eventually result in a totally different value.\u003C/p\u003E\u003Cp\u003EPS: Your Mathematica code with be a little bit more readable if you would add some blank lines and maybe use some extra variable, for instance for the orbital and ground velocity. Because especially the first part is a very big block of code, which can be hard to read.\u003C/p\u003E\u003Cp\u003EEdit: I just did a quick test for dy/dt = a * y (which is y(t) = y0 * exp(a * t)) in MATLAB and the reason I stated does not seems to hold very well, so I do not know why dt/dv seems to solve much more accurate for me than dv/dt.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-24T16:36:20Z\u0022 title=\u002207/24/2013 04:36  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 24, 2013\u003C/time\u003E by fibonatic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-24T16:59:58Z","Content":"\n\u003Cp\u003ENDSolve is using a quite advanced variable-step solver with error control and (IIRC) very tight default tolerances. It refines the step size wherever it needs to, whether that\u0027s at the start for a decaying solution or at the end for a growing solution. In your example above, remember that if the y-axis on the right is important, then it\u0027s the x-axis on the left that\u0027s important, and you\u0027ll be quite far off there too even though the y-axis on the left still converges to where it should eventually - it just takes a much different amount of time to do so, and that\u0027s what you actually cared about in this situation.\u003C/p\u003E\u003Cp\u003EThe differential equation residual from the default NDSolve solution is on the order 1e-6 m/s^2 for the v\u0027(t) method, or 1e-7 s^2/m for the t\u0027(v) method. Really only an issue for fixed-step methods if you use a step size that\u0027s already too large. And Mathematica has a whole set of solution methods that it automatically chooses from, I didn\u0027t ask which it used - it may have gone for an implicit method or something collocation-based, or something else entirely if it thought the problem was stiff or otherwise troublesome.\u003C/p\u003E\u003Cp\u003EIt does look nicer when viewed in Mathematica than it came out in the pdf, the line breaks were usually in better places and it does some syntax coloring. I couldn\u0027t get it to save to pdf both preserving screen appearance and in landscape, which I needed to avoid cutting off the figure legends, and I didn\u0027t want people to have to download Wolfram\u0027s notebook viewer program just to look at a few lines of code. I can have a go at formatting the Mathematica code to look even closer to LaTeX-style pretty-printing, just didn\u0027t do that to start with since it makes porting the code to and from other languages much more painful. And seeing code that uses equation-formatted fractions and Greek characters may confuse some people more than the equations themselves.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-24T17:06:22Z\u0022 title=\u002207/24/2013 05:06  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 24, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Kerolyov","CreatedById":62002,"CreatedDateTime":"2013-09-09T12:31:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EHere is an excellent video by Kosmo-not demonstrating this type of landing trajectory, to show you what I mean:\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/zBa4c-YA3g8?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EI should also note that I\u0027m assuming a single stage is used throughout the entire landing, with a constant maximum thrust and the only change in mass being due to expending propellant. If you happen to stage in such a way that your TWR and Isp are exactly the same immediately before and immediately after the staging event, then the original numbers will still work.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile this works a treat for low TWR landing on flat terrain I\u0027m wondering how to apply this landing method to low gravity mountainous moons like Minmus especially landing on the plains, as impossible to get in low due to mountains in the way. Also the low gravity means its very likely that a lander will have high TWR unless you have Apollo style separate lander with tiny engines, which seems overkill as in this game separate lander/command modules usually together weigh more than an all in one.\u003C/p\u003E\u003Cp\u003ESo my latest Minmus lander has 3 man command pod and LV909 and has TWR of 6, so is there any benefit to doing anything other than a pure retro landing? If there is a better way than retro how do I assess what point to start landing burn and how do I estimate the angle to retro to start burning at?\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-09-09T15:19:55Z","Content":"\n\u003Cp\u003ECome in as horizontal as you can, don\u0027t put your apoapsis any higher than it needs to be to avoid terrain and don\u0027t put your periapsis too far below the surface.\u003C/p\u003E\u003Cp\u003EWell you could save mass by using fewer/smaller engines - using a Rockomax 48-7S would give you a TWR of somewhere around 2.4-2.5, with only slightly worse vacuum Isp but saving 0.4 tons of dry mass. Your transfer injection burn may take a little longer though.\u003C/p\u003E\u003Cp\u003EFor higher TWR, the landing burn is so short that the difference between a pure-retrograde landing and a constant-altitude landing gets smaller and smaller. They\u0027re in fact identical in the limit of infinite TWR.\u003C/p\u003E\n"},{"CreatedByName":"Kerolyov","CreatedById":62002,"CreatedDateTime":"2013-09-12T19:48:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003ECome in as horizontal as you can, don\u0027t put your apoapsis any higher than it needs to be to avoid terrain and don\u0027t put your periapsis too far below the surface.\u003Cp\u003EWell you could save mass by using fewer/smaller engines - using a Rockomax 48-7S would give you a TWR of somewhere around 2.4-2.5, with only slightly worse vacuum Isp but saving 0.4 tons of dry mass. Your transfer injection burn may take a little longer though.\u003C/p\u003E\u003Cp\u003EFor higher TWR, the landing burn is so short that the difference between a pure-retrograde landing and a constant-altitude landing gets smaller and smaller. They\u0027re in fact identical in the limit of infinite TWR.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks. \u003C/p\u003E\u003Cp\u003EProblem is the plains have high mountains each end around the equator so you find yourself at 5km above the plains with only a short distance of maybe 30km on the plains before the next mountain so I think the best that can be done is to descend steeper and maintain a constant descent rate bleeding off horizontal speed as you descend with aim to reach zero altitude at a controlled rate just as horizontal velocity goes to zero. \u003C/p\u003E\u003Cp\u003EUsing Rockomax 48-7S does help but does lose some efficinecy with the TMI and plane change burns as your have to burn longer each side of the burn point.\u003C/p\u003E\n"},{"CreatedByName":"Kulebron","CreatedById":80231,"CreatedDateTime":"2013-11-01T16:42:32Z","Content":"\n\u003Cp\u003ESo this graph practically means that higher Isp leads to spending more delta-v than with a lower Isp. (Of course it may still weigh less than with a low-isp engine.) Correct?\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://imgur.com/download/rI259bE\u0022 alt=\u0022rI259bE\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-11-01T17:15:37Z","Content":"\n\u003Cp\u003EYes. If you\u0027re landing on Tylo with a single stage, here\u0027s what you can expect the payload fraction to be,\u003C/p\u003E\u003Cp\u003Emeaning ((final mass) - (engine mass) - (propellant mass used in landing) * 9/8) / (initial mass):\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/mQcUYjE.png\u0022 alt=\u0022mQcUYjE.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EIf you want to land and take back off with the same stage, your payload fraction will be quite a bit lower (this is hard to do), and the best engine to use is LV-N at an under-1 starting TWR (it will go higher than 1 as you burn fuel):\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/PnaeRLt.png\u0022 alt=\u0022PnaeRLt.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThings change a bit as you stage, your TWR changes when you stage, and it can change either up or down depending how many engines and fuel tanks you drop.\u003C/p\u003E\n"},{"CreatedByName":"Superluminaut","CreatedById":58963,"CreatedDateTime":"2013-11-01T19:56:42Z","Content":"\n\u003Cp\u003EHi nice data!\u003C/p\u003E\u003Cp\u003EBut, you clearly show a high twr is cheaper, but then show a video of a low twr landing? What?\u003C/p\u003E\u003Cp\u003EAlso whats the final mass of your model? It may be interesting to apply your data to various payloads, like landing fuel is x% of total mass.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-11-01T21:34:57Z","Content":"\n\u003Cp\u003EThat video is an extremely low TWR, yes. But it demonstrates the type of trajectory that I\u0027m calculating for. The lower the TWR, the more difference the type of trajectory makes.\u003C/p\u003E\u003Cp\u003EThe ratio of final mass to initial mass can easily be calculated from delta-V and Isp using the rocket equation. The payload fraction data for Tylo I\u0027m showing here is quite simple to derive from the initial delta-V numbers, you just need to plug in the engine thrust-to-weight data and the fuel tank mass fraction (9 units wet per 1 unit dry, for all but the smallest stock fuel tanks).\u003C/p\u003E\u003Cp\u003EYou need to consider not just fuel mass (and dry tank mass), but also engine mass. Higher TWR means you need less delta-V to land, but you need to carry more mass in engines.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-01T21:37:30Z\u0022 title=\u002211/01/2013 09:37  PM\u0022 data-short=\u002210 yr\u0022\u003ENovember 1, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Superluminaut","CreatedById":58963,"CreatedDateTime":"2013-11-02T08:44:38Z","Content":"\n\u003Cp\u003ESo essentially the perfect landing is producing a large directional explosion the instance you make contact with the ground, arresting all you surface relative velocity. Its a very Kerbal approach. \u003C/p\u003E\u003Cp\u003EIf I can figure out a good way of piloting such a landing, the mark 55 may actually have a legitimate purpose in my space program.\u003C/p\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-02-05T00:17:56Z","Content":"\n\u003Cp\u003ESo, how did your LaTeX writeup go?\u003C/p\u003E\u003Cp\u003EAlso, an other interesting graph would be payload/fuel mass fraction, for multiple-use ferrys.\u003C/p\u003E\n"}]}