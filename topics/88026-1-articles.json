{"TopicId":88026,"ForumId":29,"TopicTitle":"KSP vessel lifecycle and related stuff","CreatedByName":"S1gmoid","CreatedById":124382,"CreatedDateTime":"2014-10-20T19:06:45Z","PageNum":1,"Articles":[{"CreatedByName":"S1gmoid","CreatedById":124382,"CreatedDateTime":"2014-10-20T19:06:45Z","Content":"\n\u003Cp\u003EHey. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I\u0027ve tried to understand KSP modding by reading mod code, but I feel I\u0027ve reached a local ditch and I definitely need some background knowledge to proceed further.\u003C/p\u003E\u003Cp\u003EMainly, what I\u0027m looking for is an explanation of the main state machines of KSP, how a vessel gets loaded, put on rails, taken off rails, unloaded. What is preserved and what is deleted. How rails are stored and when and how can they be affected.\u003C/p\u003E\u003Cp\u003EThe tutorials I\u0027ve found so far seem to be very basic... and for example right now, for the life of me I cannot make heads or tails from this (from RemoteTech2):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        private void OnVesselOnRails(Vessel v)        {\u003Cbr\u003E            if (v.parts.Count == 0)\u003Cbr\u003E            {\u003Cbr\u003E                RegisterProto(v);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWHAT?! I mean, \u003Cem\u003EWHAT? \u003C/em\u003EWhy am I cheking if there are any parts? Why am I only doing something if there aren\u0027t? What does it mean if parts.Count is 0, and what if it isn\u0027t?\u003C/p\u003E\u003Cp\u003EI\u0027m looking for answers to this and a lot of similar questions. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-20T22:24:30Z","Content":"\n\u003Cp\u003EWhenever a Vessel (which is a collection of Parts, each of which may have any number of PartModules) is put on rails (i.e. is no longer in the 2.5km active zone, or you go into timewarp) it\u0027s serialized to confignode and to a ProtoVessel, ProtoParts and ProtoModules. (This is similar to when it\u0027s saved to .sfs, or when the editor saves a craft to .craft, although in those cases it\u0027s just serialized, no proto-whatever hang around).\u003C/p\u003E\u003Cp\u003EWhen the vessel goes off rails (or is read from disk), OnLoad is called for every module to update its status to what was saved in the confignode.\u003C/p\u003E\u003Cp\u003EWhat that code is doing is checking to make sure that the serialization is complete (i.e. not just that the event fired, but that the vessel was serialized, and thus no longer has [unserialized] Parts in its Parts list, but instead has protoparts with confignodes for data storage), and if so, to register it with Remotetech as a ProtoVessel (the class used instead of Vessel when a craft goes on rails, just as Parts have ProtoPart etc).\u003C/p\u003E\n"},{"CreatedByName":"S1gmoid","CreatedById":124382,"CreatedDateTime":"2014-10-20T23:07:32Z","Content":"\n\u003Cp\u003EWow thanks. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E That really explains it. So data for a vessel needs to be stored into the protovessel when it is unloaded.\u003C/p\u003E\u003Cp\u003EDo protovessels have some kind of regular update function that is called on them, or are they just passive structures moved around until they are reloaded?\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-10-21T02:32:29Z","Content":"\n\u003Cp\u003ENote that there seems to be 3 levels of ship existence.\u003C/p\u003E\u003Cp\u003EUnloaded\u003C/p\u003E\u003Cp\u003ELoaded-OnRails\u003C/p\u003E\u003Cp\u003ELoaded-OffRails\u003C/p\u003E\u003Cp\u003EUnloaded: This is the state ships exist in while not in the flight scene and if they are outside the 2.5km physics sphere around your active vessel while in the flight scene. While in this state vessels exist as protoVessels in the save file and do not exist as a Vessel object. (Serialized to a configNode as per NathanKell\u0027s post.)\u003C/p\u003E\u003Cp\u003ELoaded-OnRails: While timewarp is engaged, all vessels (including the active vessel) exist in this state. While timewarp is disengaged, vessels from about 300m away to 2.5km away from the currently loaded vessel exist in this state. I believe that in this state vessels are loaded, in that the parts and partModules of a vessel exist, but physics is applied to the vessel as a single object, not each individual part. Test this however before relying on it as I\u0027m am not 100% sure. If you tie into the GameEvent.VesselOnRails and GameEvent.VesselOffRails, you can see vessels go on and off rails, notably the debris left behind on the launchpad goes on rails when the active vessel is only about 350-400meters altitude.\u003C/p\u003E\u003Cp\u003ELoaded-OffRails: With timewarp disengaged, the currently active vessel and all other vessels within about 300m exist in this state. Vessels in this state get full physics applied to each part and all the other bells and whistles.\u003C/p\u003E\u003Cp\u003EAs for protoVessels, I am not aware of any update function called on them. They are editable but it has to be triggered by you somehow, there is no Update() method to tie into.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-10-21T02:34:10Z","Content":"\n\u003Cp\u003EAll of the orbit information (including the OrbitDriver) in the Vessel class is still available when a vessel is not loaded. I\u0027m pretty sure it\u0027s all loaded through the ProtoVessel instance, not the Vessel load method, but you can grab the instance of the vessel you\u0027re looking for (FlightGlobals.Vessels returns all of them) and get most of the non-part-relevant information. All of that info updates regularly, just as it would if the vessel were in physics range.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EUnloaded: This is the state ships exist in while not in the flight scene and if they are outside the 2.5km physics sphere around your active vessel while in the flight scene. While in this state vessels exist as protoVessels in the save file and do not exist as a Vessel object. (Serialized to a configNode as per NathanKell\u0027s post.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe vessel object does exist outside of physics range. ProtoVessel has a Vessel field (vesselRef) that handles everything I described above.\u003C/p\u003E\u003Cp\u003EI track orbital parameters for unloaded vessels in my contracts, and SCANsat tracks them for updating scanning coverage; I\u0027ve never used ProtoVessel for any of those functions. I do use it when I need to get at Science Data stored in ProtoPartModules though.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-21T02:37:53Z\u0022 title=\u002210/21/2014 02:37  AM\u0022 data-short=\u00229 yr\u0022\u003EOctober 21, 2014\u003C/time\u003E by DMagic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-21T02:48:11Z","Content":"\n\u003Cp\u003EAsmi\u0027s ECLSS mod is based on a (multithreaded) unloaded-vessel-update framework, so while there isn\u0027t ingame support for doing stuff to unloaded vessels, there is available a strong library to expand upon for handling tick-based unloaded vessel updates.\u003C/p\u003E\n"},{"CreatedByName":"S1gmoid","CreatedById":124382,"CreatedDateTime":"2014-10-21T14:22:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EAsmi\u0027s ECLSS mod is based on a (multithreaded) unloaded-vessel-update framework, so while there isn\u0027t ingame support for doing stuff to unloaded vessels, there is available a strong library to expand upon for handling tick-based unloaded vessel updates.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, that should be helpful! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThere are two things I\u0027m thinking of trying my hand at in relation to unloaded vessels. One is persisting the flight computer data from RT2 when the vessel is unloaded, and potentially create a warning when there is an upcoming event... Currently RT2 calls Dispose() on the flight computer class upon unload...\u003C/p\u003E\u003Cp\u003EThe bigger one is a \u0022better de-orbiting\u0022 functionality that would simulate atmospheric braking on unloaded orbiting vessels.\u003C/p\u003E\u003Cp\u003EI wanted to get rid of this piece of debris, went to great length to push it into a crash trajectory (verified with the Trajectories mod), only to watch it come straight back up from a periapsis of 40000 meters. So I decided this definitely needs some doing. I\u0027m looking into possible codesharing with Trajectories, as I guess the logic is similar.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-21T20:32:40Z","Content":"\n\u003Cp\u003ESounds neat!\u003C/p\u003E\u003Cp\u003EYou might want to look into HoneyFox\u0027s \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/70881\u0022 rel=\u0022external nofollow\u0022\u003EOrbit Manipulator\u003C/a\u003E for the latter case.\u003C/p\u003E\n"}]}