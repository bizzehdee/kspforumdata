{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":15,"Articles":[{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-07-30T17:46:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022dlrk\u0022 data-cite=\u0022dlrk\u0022\u003E\u003Cdiv\u003EIs there an IDE available for the newer version of KOS?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt doesnt look like it for now, the Saturn IDE development is on hold for a bit.\u003C/p\u003E\n"},{"CreatedByName":"dlrk","CreatedById":60033,"CreatedDateTime":"2014-07-30T17:56:28Z","Content":"\n\u003Cp\u003EWhat\u0027s recommended to be used for now? Just the internal IDE, or Notepad\u002B\u002B?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-07-30T17:59:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022dlrk\u0022 data-cite=\u0022dlrk\u0022\u003E\u003Cdiv\u003EWhat\u0027s recommended to be used for now? Just the internal IDE, or Notepad\u002B\u002B?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would use vim with the syntax highlighting from Steven, but notepad\u002B\u002B works very well\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-30T23:52:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI would use vim with the syntax highlighting from Steven, but notepad\u002B\u002B works very well\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy VIM syntax highlighting is a bit out of date because I have to manually update it every time the main kOS mod adds new keywords, new syntax, or new bound variable names or new suffixes. So it\u0027s a pain to keep it up to date. It would be nice to be able to query that sort of data from the mod directly so it\u0027s possible to update it automatically, but right now that\u0027s not the case.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-08-04T06:30:17Z","Content":"\n\u003Cp\u003Ewhat is the syntax for using the new WARP feature of setting it on RAILS or PHYSICS? I haven\u0027t been able to figure this out.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-08-04T17:14:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003Ewhat is the syntax for using the new WARP feature of setting it on RAILS or PHYSICS? I haven\u0027t been able to figure this out.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPRINT WARPMODE.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET WARPMODE TO \u0022PHYSICS\u0022.\u003Cbr\u003ESET WARPMODE TO \u0022RAILS\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EPlease post if that doesnt work.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-08-05T12:49:18Z","Content":"\n\u003Cp\u003Ethanks, that works. Although you may want to specify in the docs that \u0022PHYSICS\u0022 and \u0022RAILS\u0022 must actually be in caps\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-08-05T16:54:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003Ethanks, that works. Although you may want to specify in the docs that \u0022PHYSICS\u0022 and \u0022RAILS\u0022 must actually be in caps\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOr i can file a bug \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E that is a mistake\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-08-06T01:47:15Z","Content":"\n\u003Cp\u003EI\u0027ve been trying to wrap my head around all this crazy, fun stuff (orbital mechanics, ballistics, Kerbals, etc...), and I have a couple of questions.\u003C/p\u003E\u003Cp\u003EBeing the neuro-atypical I am, I\u0027m diving in over my head. I think I\u0027ve launched two \u0022stock\u0022 vessels, everything else has been with at least Ferram\u0027s and Deadly Reentry. What I\u0027d like to do is automate/optimize my ascents and insertions with kOS, but I know that FAR twiddles with things like terminal velocity. I\u0027d be willing to try my hand at setting up a dev environment if anyone can point me in the general direction of how to build out a module/addon that would get kOS to pull terminal velocity (and probably max drag) from FAR rather than the KSP \u0022model\u0022... I just did some quick dipping into the FARAPI code and the VesselUtils code, and I think I might be able to cobble something together.\u003C/p\u003E\u003Cp\u003EOf course, if I\u0027m missing out on something critical, like FAR integration already in kOS, or FAR hooking into the core system and transparently integrating, I\u0027ll crawl back under my rock in shame... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-06T01:59:32Z\u0022 title=\u002208/06/2014 01:59  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 6, 2014\u003C/time\u003E by madlemur\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-06T15:43:28Z","Content":"\n\u003Cp\u003EThere\u0027s a current bug report for kOS about getting terminal velocity wrong when FAR is installed. kOS still tries using the stock game\u0027s terminal velocity, and the way FAR was implemented it doesn\u0027t alter the built-in stock values the API returns to all the other mods, but rather it creates a whole new API on the side that other mods have to call instead of the stock API calls. I strongly dislike this approach, since if more mods adopted that approach, it would render the task of making mods compatible with other mods into an enormous task with something on the order of O(n!) special cases in mod code (n being the number of mods that exist that use this type of design that renders the existing stock API incorrect). It seems quite anti-object-oriented design to expose a different API depending on what\u0027s present, instead of masking your special exception case behind the same universal API that everyone uses.\u003C/p\u003E\u003Cp\u003EIf you want to work on FAR integration in kOS, I don\u0027t think it\u0027s already there. I think it\u0027s an area that\u0027s open to being fixed.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-08-06T16:45:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EOf course, if I\u0027m missing out on something critical, like FAR integration already in kOS, or FAR hooking into the core system and transparently integrating, I\u0027ll crawl back under my rock in shame... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo shame required \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E please feel free to contribute to our little project in any way you like! We always have room for another.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-08-06T16:49:22Z","Content":"\n\u003Cp\u003EI agree that it\u0027s not the best solution. I\u0027m not sure why ferram implemented it that way, but it\u0027s what\u0027s there. Maybe he was afraid of breaking something internal to KSP? Anyway, I\u0027ll clone the repository and set up a dev environment, and see if I can patch in some FAR support...\u003C/p\u003E\u003Cp\u003EIs there a standardized dev environment for kOS? i.e., What compiler, IDE, Unity ver, etc should I be installing for greatest compatibility with the existing code?\u003C/p\u003E\u003Cp\u003EAlso, I\u0027m going to need a fair amount of handholding as I get started. For example, should I add support via AddOns/FerramAerospaceResearch? How does one check for the existence of another mod? (I think I can guess at how to do it, but the details may be dim now. Something about walking the parts, looking for one of Ferram\u0027s modules...)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-06T17:05:01Z\u0022 title=\u002208/06/2014 05:05  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 6, 2014\u003C/time\u003E by madlemur\u003C/strong\u003E\n\u003Cbr\u003EMore questions...\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-08-06T18:09:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EI agree that it\u0027s not the best solution. I\u0027m not sure why ferram implemented it that way, but it\u0027s what\u0027s there. Maybe he was afraid of breaking something internal to KSP? Anyway, I\u0027ll clone the repository and set up a dev environment, and see if I can patch in some FAR support...\u003Cp\u003EIs there a standardized dev environment for kOS? i.e., What compiler, IDE, Unity ver, etc should I be installing for greatest compatibility with the existing code?\u003C/p\u003E\u003Cp\u003EAlso, I\u0027m going to need a fair amount of handholding as I get started. For example, should I add support via AddOns/FerramAerospaceResearch? How does one check for the existence of another mod? (I think I can guess at how to do it, but the details may be dim now. Something about walking the parts, looking for one of Ferram\u0027s modules...)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ewe have a mixed bag for development, i use visual studio as the IDE and i use whatever unityengine DLL that is packed with KSP. I know that Steven uses SharpDevelop. \u003C/p\u003E\u003Cp\u003EI am happy to help out, i am most responsive on google talk/hangouts but you can get me by email as well. \u003Ca href=\u0022/cdn-cgi/l/email-protection#9fbaa8ddf0efebf6f0f1baa8db\u0022\u003E\u003Cspan class=\u0022__cf_email__\u0022 data-cfemail=\u002283e6f1e6ede7f1e2e8e6c3e4eee2eaefade0ecee\u0022\u003E[email\u0026#160;protected]\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-08-06T20:13:13Z","Content":"\n\u003Cp\u003EWhich version of Unity should I get for use with KSP 0.24.2?\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-08-06T21:02:31Z","Content":"\n\u003Cp\u003EI was going to use Ximian, but I think I\u0027ll grab VS Express since I\u0027m on Windows. I take it you just compile the gzip code into kOS.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-08-06T21:35:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003Ebut I know that FAR twiddles with things like terminal velocity.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI just finished a conversation with ferram about this, turns out that chasing TermVel with FAR will likely get your craft torn apart. He posited that other variables like AoA and Current Q would be a better abet more complicated method.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-07T18:04:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EWhich version of Unity should I get for use with KSP 0.24.2?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is a UnityEngine.DLL that comes packaged with KSP itself that you\u0027re supposed to use. It\u0027s under (I think - this is from memory because I\u0027m not on my Windows machine at the moment) KSP_Data/Managed/ (or KSP_Data_x64).\u003C/p\u003E\u003Cp\u003EThe only time you care about the version of unity beyond just \u0022use the one KSP ships with\u0022 is when you want to run Unity yourself in order to do things like make meshes and parts. For that information, look at the start of the ouput_log.txt that KSP spits out whenever it runs. It begins with a dump of the Unity Version number.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-08-07T18:17:10Z","Content":"\n\u003Cp\u003EGiven my (dis)ability when it comes to 3-D modelling and/or texturing, I\u0027ll just leave Unity alone for now. erendrake\u0027s helped me get things compiling on my system, so now I just need to figure out how to test for FAR, and hook into it for some of the flight variables.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-02T15:48:54Z","Content":"\n\u003Cp\u003EOK, I\u0027ve come to the painful conclusion that I don\u0027t have the time and knowledge to directly help or develop anything. It\u0027s a matter of time (mis)management, expectations (mis)management, and an overly exuberant and optimistic desire to fiddle with things (hence the interest in KSP to begin with).\u003C/p\u003E\u003Cp\u003EBesides, I\u0027ve found that there\u0027s no need for direct FAR/NEAR integration, and my thoughts on adding a kOS module to the Box Satellite were pre-empted by the addition of a kOS core to the probe core...\u003C/p\u003E\u003Cp\u003ESo instead, I\u0027m going to pontificate and (with tongue firmly in cheek) grace you with my thoughts of how to improve kOS! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E\u003C/p\u003E\u003Cp\u003EThere are several topics I want to touch on, and I may have missed or jumbled up discussions of these topics in this and other threads. So bear with me...\u003C/p\u003E\u003Cp\u003E1: Storage as a resource - I don\u0027t worry about it now. I never use the local volume, since I can always use the archive. This will be important later...\u003C/p\u003E\u003Cp\u003E2: \u0022Compiled\u0022 code - There\u0027s been talk of exposing a compiler for kOSript, and there is some monster potential there. If the current modules could only run compiled code, and code could only be compiled at the KSC or with a new compiler-grade module (perhaps a manned module that converts electricity into compiled code), then you\u0027d have to plan a little bit more. Maybe even have differing grades of compilers that could handle different sized sources. (Balance issues that could be worked out later.)\u003C/p\u003E\u003Cp\u003E3: Volume accessibility - I use RT2. I like the difficulty of trying to maintain contact with other objects. One of the reasons I like kOS is that I can set up maneuver nodes in blackout zones, but if I fire off exenode (from the toolkit), kOS will correctly run the script even in the absence of a connection to KSC. Sadly, I can always access the archive. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E Even if I enter a number of run XXX. commands while I\u0027m in contact with KSC, my probe will gleefully load and run the scripts from the archive even if it\u0027s from the far side of the planet (or any other blackout zone). This begs the question \u0022Why have storage be a resource?\u0022 See above... \u003C/p\u003E\u003Cp\u003E4: RPM support - Along with compiled code, I\u0027d love to see an integration with RPM\u0027s MFD. I was thinking an API to build menus to fire off specific scripts. It doesn\u0027t need to be a full terminal (maybe if there\u0027s a full keyboard prop), and input might be limited (although I could see some good applications of various selectors for targets, numeric entry, etc.), but something so the IVA can interact with the kOS module. Probably not the easiest thing in the world to do (the MFD itself isn\u0027t that hard, it\u0027s the new construct within kOS to create, display, and interact with the menus. Come to think of it, that could be useful even in the default terminal...\u003C/p\u003E\u003Cp\u003E5: Science module - Not an extension of the current modules, but a separate module that is designed specifically to run experiments and gather/transmit data. Perhaps it reduces the penalty for transmitting experimental data, or can compress the data into fewer Mits. Or is integrated with the Science Alarm... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E\u003C/p\u003E\u003Cp\u003E6: HDD/SAN - Modules that have no native processing ability, but can provide more local storage. Perhaps integrated directly with one or more modules on the vessel to extend the modules\u0027 internal storage (or a command suite available to do so).\u003C/p\u003E\u003Cp\u003E7: Skynet Protocol - On second thought...\u003C/p\u003E\u003Cp\u003EJust my mental regurgitation of things I was thinking about re: kOS. I was afraid if I didn\u0027t post them, I\u0027d forget them. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-02T15:51:18Z\u0022 title=\u002209/02/2014 03:51  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 2, 2014\u003C/time\u003E by madlemur\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"skips","CreatedById":89142,"CreatedDateTime":"2014-09-04T20:50:18Z","Content":"\n\u003Cp\u003E@Steven Mading\u003C/p\u003E\u003Cp\u003Er.e.: Major sweeping changes like would be required to implement such things throughout the C# code require buy-in from everyone ...\u003C/p\u003E\u003Cp\u003EHere is my view of what the change would be:\u003C/p\u003E\u003Cp\u003EIn public abstract class SpecialValue change GetSuffix() to\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        \u003Cbr\u003E    public virtual object GetSuffix(String suffixName)\u003Cbr\u003E        {\u003Cbr\u003E            switch (suffixName)\u003Cbr\u003E            {\u003Cbr\u003E                case \u0022INFO\u0022:\u003Cbr\u003E                    return \u0022Suffix INFO not implemented on this structure\u0022;\u003Cbr\u003E            }\u003Cbr\u003E            return null;\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFor each class that is a subclass of SpecialValue and contains a GetSuffix() method add a case \u0022INFO\u0022: clause. (I am using public class GeoCoordinates : SpecialValue as an example because it appears to be reasonably well documented and not overly long.)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        public override object GetSuffix(string suffixName)\u003Cbr\u003E        {\u003Cbr\u003E            switch (suffixName)\u003Cbr\u003E            {\u003Cbr\u003E                case \u0022LAT\u0022:\u003Cbr\u003E                    return Lat;\u003Cbr\u003E                case \u0022LNG\u0022:\u003Cbr\u003E                    return Lng;\u003Cbr\u003E                case \u0022BODY\u0022:\u003Cbr\u003E                    return new BodyTarget( Body, Shared );\u003Cbr\u003E                case \u0022TERRAINHEIGHT\u0022:\u003Cbr\u003E                    return GetTerrainAltitude();\u003Cbr\u003E                case \u0022DISTANCE\u0022:\u003Cbr\u003E                    return DistanceFrom();\u003Cbr\u003E                case \u0022HEADING\u0022:\u003Cbr\u003E                    return GetHeadingFrom();\u003Cbr\u003E                case \u0022BEARING\u0022:\u003Cbr\u003E                    return GetBearing();\u003Cbr\u003E                case \u0022INFO\u0022:\u003Cbr\u003E                    return \u0022GeoPosition.LAT - the latitude\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .LNG - the longitude\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .BODY - the body\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .TERRAINHEIGHT - altitude above sea level\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .DISTANCE - straight line distance from CPU vessel\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .HEADING - compass heading from CPU vessel\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .BEARING - angle between vessel\u0027s heading and .HEADING\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .INFO - this information\u0022\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            return base.GetSuffix(suffixName);\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EImplementing in this manner allows the code to continue to function while the changes are being made. In addition I believe that the changes are localized to the one method. Note that the returned string is only useful for the same purposes as the ToString() method (i.e., as the body of a PRINT, SET or LOG... TO statement).\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-09-05T17:58:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EImplementing in this manner allows the code to continue to function while the changes are being made. In addition I believe that the changes are localized to the one method. Note that the returned string is only useful for the same purposes as the ToString() method (i.e., as the body of a PRINT, SET or LOG... TO statement).\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI dont dislike the idea of a structure having a \u0022manifest\u0022 or \u0022info\u0022 choice that lets you see what is available. The biggest problem I have is that it shouldn\u0027t be something that has to be hand edited each time there is a change.\u003C/p\u003E\u003Cp\u003EI agree with Steven when he talks about having a much broader change to the way we handle structures so they are queryable and something like this can be generalized.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-05T19:52:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003E@Steven Mading\u003Cp\u003Er.e.: Major sweeping changes like would be required to implement such things throughout the C# code require buy-in from everyone \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYour original post described many things. The ones I referred to with the phrase \u0022major sweeping changes\u0022 wasn\u0027t this one.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        public override object GetSuffix(string suffixName)\u003Cbr\u003E        {\u003Cbr\u003E            switch (suffixName)\u003Cbr\u003E            {\u003Cbr\u003E                case \u0022LAT\u0022:\u003Cbr\u003E                    return Lat;\u003Cbr\u003E                case \u0022LNG\u0022:\u003Cbr\u003E                    return Lng;\u003Cbr\u003E                case \u0022BODY\u0022:\u003Cbr\u003E                    return new BodyTarget( Body, Shared );\u003Cbr\u003E                case \u0022TERRAINHEIGHT\u0022:\u003Cbr\u003E                    return GetTerrainAltitude();\u003Cbr\u003E                case \u0022DISTANCE\u0022:\u003Cbr\u003E                    return DistanceFrom();\u003Cbr\u003E                case \u0022HEADING\u0022:\u003Cbr\u003E                    return GetHeadingFrom();\u003Cbr\u003E                case \u0022BEARING\u0022:\u003Cbr\u003E                    return GetBearing();\u003Cbr\u003E                case \u0022INFO\u0022:\u003Cbr\u003E                    return \u0022GeoPosition.LAT - the latitude\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .LNG - the longitude\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .BODY - the body\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .TERRAINHEIGHT - altitude above sea level\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .DISTANCE - straight line distance from CPU vessel\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .HEADING - compass heading from CPU vessel\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .BEARING - angle between vessel\u0027s heading and .HEADING\\n\u0022 \u002B\u003Cbr\u003E                           \u0022           .INFO - this information\u0022\u003Cbr\u003E            }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are at least 3 different places where such information would be useful that I can think of:\u003C/p\u003E\u003Cp\u003E- Autogenerated documentation online.\u003C/p\u003E\u003Cp\u003E- Printing strings in the terminal as you describe.\u003C/p\u003E\u003Cp\u003E- Making information available to IDE and text editor highlighters.\u003C/p\u003E\u003Cp\u003EThat requires a bit more sophistication than just this string, and could be done by one single system if it was carefully thought out. Basically, I\u0027d like to see this inventing of hardcoded off-the-cuff suffixes in source code in an ad-hoc way to be replaced with having suffixed terms register their suffix names in some common registry of names, and then put the implementation of INFO there, globally. That\u0027s better than hardcoding it differently for each type, and helps to minimize the chance of new suffixes being added that fail to get documented.\u003C/p\u003E\u003Cp\u003EThe only difficulty is how to deal with cases where the suffix names aren\u0027t actually known at compile time because they truly are dynamically created, like the resource names LIQUIDFUEL, SOLIDFUEL, ELECTRICCHARGE, and so on.\u003C/p\u003E\n"},{"CreatedByName":"skips","CreatedById":89142,"CreatedDateTime":"2014-09-05T22:05:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe only difficulty is how to deal with cases where the suffix names aren\u0027t actually known at compile time because they truly are dynamically created, like the resource names LIQUIDFUEL, SOLIDFUEL, ELECTRICCHARGE, and so on.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf C# supports \u0022closures,\u0022 there are a couple of elegant approaches to handling dynamically created resource names that are consistent with my original proposal.\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-09-08T23:07:51Z","Content":"\n\u003Cp\u003EAre there still plans for making the frame of reference coherent and, if so, what should I expect?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-09T02:51:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EAre there still plans for making the frame of reference coherent and, if so, what should I expect?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve slowed down on pushing for adopting that because of the recent change that now allows any of the things kOS previously only gave out as Rotations to now be retrieved as Vectors. This has opened up a number of workarounds that were previously impossible. If you can convert rotations to vectors, then you can turn the cardinal directions of most interesting frames of direction into basis vectors of a reference frame. Once you have the 3 basis vectors of a reference frame, then you can see how any vector would be represented in that reference frame using those 3 basis vectors and dot products.\u003C/p\u003E\u003Cp\u003EIt\u0027s not an ideal solution. It\u0027s still just a workaround. But the existence of the workaround made it less of an immediate need. I\u0027ve been putting my spare time into working out a way to store the compiled program as a \u0022machine language file\u0022, so you don\u0027t have to send source code on remote probes. It\u0027s one of those things that looked a lot easier at first before all the ugly details were dived into so it\u0027s been sucking up all my kOS programming time.\u003C/p\u003E\u003Cp\u003EReference Frame - aware vectors is still a thing on the back of my mind, but of late, erendrake and I have had our minds more concentrated on the basic language features like better help, more organized OOP style features, and so on. We ran into a roadblock where many of the new end-user features we wanted to make all required things the language just couldn\u0027t do under the hood, so it was time to overhaul a bit of what\u0027s going on under the hood.\u003C/p\u003E\n"}]}