{"TopicId":36461,"ForumId":55,"TopicTitle":"Barycenters and non-spherical Volumes of Influence (an idea for binary planets/stars)","CreatedByName":"chaos_forge","CreatedById":64960,"CreatedDateTime":"2013-07-09T18:38:46Z","PageNum":6,"Articles":[{"CreatedByName":"tntristan12","CreatedById":7005,"CreatedDateTime":"2013-07-23T18:09:08Z","Content":"\n\u003Cp\u003EJust out of curiosity, how does the horn brain model work under general (i.e. non-circular) binary orbits?\u003C/p\u003E\n"},{"CreatedByName":"chaos_forge","CreatedById":64960,"CreatedDateTime":"2013-07-23T18:38:20Z","Content":"\n\u003Cp\u003EWait . . . we completely forgot about elliptical orbits!\u003C/p\u003E\u003Cp\u003ELet the brainstorming commence!\u003C/p\u003E\u003Cp\u003EHaving the VOI\u0027s change sizes would probably be a bad idea, so I\u0027d say you could use the average size of the VOI or something like that. I wonder how KSP handles SOI\u0027s and highly elliptical orbits . . .\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2013-07-24T09:17:06Z","Content":"\n\u003Cp\u003EI don\u0027t think we need to worry about eccentric orbits of stars since those probably wouldn\u0027t allow for very stable heliocentric planetary orbits (barycentric orbits would still be fine though if high enough). I mean planets are less likely to develop around stars like that. The devs wouldn\u0027t even need to create stellar systems with elliptical star orbits.\u003C/p\u003E\u003Cp\u003EMore interesting is planetary and moon eccentricity since those aren\u0027t of the question. I think the barycenter should remain exactly the same but the VOIs inside should scale dynamically. This seems the most realistic to me. It wont be much of a problem since:\u003C/p\u003E\u003Cp\u003Ea) Regular SOIs should be used for planets and maybe someday things like highly eccentric comets.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E Currently the most eccentric orbit is that of Gilly at 0.55, the next is Eeloo at 0.26. Both of those orbit bodies far more massive then they are so regular SOIs should still be used right?\u003C/p\u003E\u003Cp\u003EThis is just off the top of my head. I\u0027m in a bit of a hurry right now. I\u0027ll think about it later.\u003C/p\u003E\n"},{"CreatedByName":"InfinityArch","CreatedById":66832,"CreatedDateTime":"2013-07-24T14:54:13Z","Content":"\n\u003Cp\u003EHmmm, any data on whether Eeloo\u0027s SOI changes as it approaches the apo/periapsis of its orbit? I would think not if SOI is a fixed constant, but if it\u0027s calculated dynamically...\u003C/p\u003E\n"},{"CreatedByName":"chaos_forge","CreatedById":64960,"CreatedDateTime":"2013-07-24T15:10:09Z","Content":"\n\u003Cp\u003EThe KSP wiki only has one number for SOI radius, which makes me think that the SOI\u0027s don\u0027t change sizes dynamically. Dynamically changing VOI\u0027s would probably be too complicated to program; I don\u0027t really like the idea. And anyways, \u003Ca href=\u0022https://en.wikipedia.org/wiki/Sphere_of_influence_%28astrodynamics%29\u0022 rel=\u0022external nofollow\u0022\u003EWikipedia\u0027s\u003C/a\u003E page on SOI\u0027s gives a formula for SOI radius that depends on the semimajor axis, which is already a sort of average distance. The planets around a binary star should just have the current/normal SOI\u0027s: that\u0027s easiest, makes sense, and also matches what KSP currently does.\u003C/p\u003E\u003Cp\u003EWhat\u0027s really bugging me are the VOI\u0027s of the two stars . . . I don\u0027t know how you could have eccentric orbits without making the VOI\u0027s change size. I mean, we could limit the system to binary pairs with low/zero eccentricity, but the physicist in me is screaming \u0022that\u0027s not the most general case!\u0022 . . .\u003C/p\u003E\n"},{"CreatedByName":"NeilC","CreatedById":57575,"CreatedDateTime":"2013-07-24T16:37:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022chaos_forge\u0022 data-cite=\u0022chaos_forge\u0022\u003E\u003Cdiv\u003EWhat\u0027s really bugging me are the VOI\u0027s of the two stars . . . I don\u0027t know how you could have eccentric orbits without making the VOI\u0027s change size. I mean, we could limit the system to binary pairs with low/zero eccentricity, but the physicist in me is screaming \u0022that\u0027s not the most general case!\u0022 . . .\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd the programmer in me is screaming \u0022there\u0027s no easy way to enforce circular orbits without adding another subsystem to check for that! Mods that add arbitrary binary systems will break this system if it doesn\u0027t deal with the general case!\u0022\u003C/p\u003E\u003Cp\u003EGood work guys, keep thinking it through! I\u0027m enjoying reading this thread, and I hope most here don\u0027t find my input annoying. I\u0027m just coming at it from the implementation side more than the idea side, so I tend to highlight potential problems more than math-based solutions. It\u0027s intended as constructive criticism, sorry if it doesn\u0027t come through that way.\u003C/p\u003E\n"},{"CreatedByName":"Captain Sierra","CreatedById":74666,"CreatedDateTime":"2013-07-24T16:53:29Z","Content":"\n\u003Cp\u003EImplementation: an absolute f***ing nightmare.\u003C/p\u003E\u003Cp\u003EIf it does get implemented: Insanely cool.\u003C/p\u003E\u003Cp\u003EFrom what I know, some of what Squad does is already limited by Unity and this would be tricky because you\u0027d have to have basically a nonexistent mass creating an SoI rather than the actual comic objects themselves. I don\u0027t know much about how they are doing the kerbol system in unity but I highly doubt that would be easy. It will be awesome though when I can do gravitational slingshots through the barycenter off to the edge of the solar system.\u003C/p\u003E\n"},{"CreatedByName":"Horn Brain","CreatedById":49626,"CreatedDateTime":"2013-07-24T20:41:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NeilC\u0022 data-cite=\u0022NeilC\u0022\u003E\u003Cdiv\u003EAnd the programmer in me is screaming \u0022there\u0027s no easy way to enforce circular orbits without adding another subsystem to check for that! Mods that add arbitrary binary systems will break this system if it doesn\u0027t deal with the general case!\u0022\u003Cp\u003EGood work guys, keep thinking it through! I\u0027m enjoying reading this thread, and I hope most here don\u0027t find my input annoying. I\u0027m just coming at it from the implementation side more than the idea side, so I tend to highlight potential problems more than math-based solutions. It\u0027s intended as constructive criticism, sorry if it doesn\u0027t come through that way.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe easy way to enforce circular/low-eccentricity orbits is to just not make binary pairs with high eccentricity. From a programming perspective, it\u0027s as simple as limiting the range of the random number that gives the eccentricity to less than 0.2 (or something like that) when the mass ratio is lower than a certain amount (say 20), which is when you would be using my system instead of the current system. Since KSP uses orbital elements to calculate on-rails bodies\u0027 trajectories, presumably the procedural generation process would be selecting random numbers for the mass ratio, primary mass, eccentricity, SMA, etc. This makes it trivial.\u003C/p\u003E\n"},{"CreatedByName":"Horn Brain","CreatedById":49626,"CreatedDateTime":"2013-07-24T21:03:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022chaos_forge\u0022 data-cite=\u0022chaos_forge\u0022\u003E\u003Cdiv\u003EThe KSP wiki only has one number for SOI radius, which makes me think that the SOI\u0027s don\u0027t change sizes dynamically. Dynamically changing VOI\u0027s would probably be too complicated to program; I don\u0027t really like the idea. And anyways, \u003Ca href=\u0022https://en.wikipedia.org/wiki/Sphere_of_influence_%28astrodynamics%29\u0022 rel=\u0022external nofollow\u0022\u003EWikipedia\u0027s\u003C/a\u003E page on SOI\u0027s gives a formula for SOI radius that depends on the semimajor axis, which is already a sort of average distance. The planets around a binary star should just have the current/normal SOI\u0027s: that\u0027s easiest, makes sense, and also matches what KSP currently does.\u003Cp\u003EWhat\u0027s really bugging me are the VOI\u0027s of the two stars . . . I don\u0027t know how you could have eccentric orbits without making the VOI\u0027s change size. I mean, we could limit the system to binary pairs with low/zero eccentricity, but the physicist in me is screaming \u0022that\u0027s not the most general case!\u0022 . . .\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou can\u0027t do highly elliptic binaries with this method without dynamic VoI calculations. The inner/outer region boundary would pulsate in radius, with the VoI\u0027s inside scaling with that radius (they won\u0027t change shape, just size). That would be just using the distance from each body and my rule to determine which VoI you\u0027re in, and using the current distance between the bodies (times some potentially mass-ratio dependent factor) to set the inner/outer boundary radius.\u003C/p\u003E\u003Cp\u003EThis would be highly confusing if you didn\u0027t know what you were doing, obviously.\u003C/p\u003E\u003Cp\u003EAs far as having a dynamic VoI, I don\u0027t think that it would be much of a pain to code up, honestly. The current system already has to check the distance between your craft and any bodies in the same SoI at each point (or many points, rather) along your orbit to determine if you get an encounter with that body, using this system would just mean taking those distances and plugging them into my rule to see if there is a transition. One measly extra calculation. \u003C/p\u003E\u003Cp\u003EThere would be weird behavior if you were going very slowly across the VoI boundary when the inner/outer radius was changing rapidly (when the bodies were closest together), but it would only be if you were going very slow and isn\u0027t any different than what happens if you\u0027re moving very slowly across SoI\u0027s in the current system.\u003C/p\u003E\n"},{"CreatedByName":"NeilC","CreatedById":57575,"CreatedDateTime":"2013-07-25T03:06:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Horn Brain\u0022 data-cite=\u0022Horn Brain\u0022\u003E\u003Cdiv\u003EThe easy way to enforce circular/low-eccentricity orbits is to just not make binary pairs with high eccentricity.\u0026lt;...\u0026gt; procedural generation process would be selecting random numbers for the mass ratio, primary mass, eccentricity, SMA, etc. This makes it trivial.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat procedural generation are you talking about? There is no system like that in KSP, and to my knowledge none is planned. Instead there is a static universe with predefined orbital parameters - everyone sees the same Kerbol. I think we\u0027re discussing this binary VOI system with the intent of opening it up to modders, who would then be able to create their own systems and set their parameters to whatever they please - BSG, here we come. I don\u0027t believe there is any system in place that could be leveraged to check whether eccentricities are valid; it would have to be written from scratch. This in itself would be fairly trivial, I agree, since all you would have to do is check any binary bodies in the universe once on loading the mod and refuse to load any binary systems that have high eccentricities or large mass ratios. This is simple, but pretty limiting. Modders don\u0027t like limits and the next logical step from \u0022better binary bodies\u0022 is \u0022even better binary bodies\u0022. KSP devs like to write robust and extensible code that can be leveraged by modders in unexpected ways - like airships and cranes. If it\u0027s possible to deal with the general case of elliptical orbits, that would be more likely to be implemented than a system restricted to two bodies with a certain acceptable range of mass ratios and orbital parameters.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Horn Brain\u0022 data-cite=\u0022Horn Brain\u0022\u003E\u003Cdiv\u003EYou can\u0027t do highly elliptic binaries with this method without dynamic VoI calculations. \u0026lt;...\u0026gt;\u003Cp\u003EAs far as having a dynamic VoI, I don\u0027t think that it would be much of a pain to code up, honestly. \u0026lt;...\u0026gt; One measly extra calculation. \u0026lt;...\u0026gt;\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s pretty hand-wavey.... We\u0027re not sure how deeply the constant-radius-sphere assumption is embedded in the orbital mechanics solver. Moving from spherical SOIs to rule-based VOIs is a significant change, and having to recalculate them every timestep is a bigger one. One measley calculation can affect performance if you have to do it often enough - though I agree it doesn\u0027t look too bad in terms of crunch required. There\u0027s just a lot more to it than that.\u003C/p\u003E\u003Cp\u003EWhat about using the suggestion above: take the semi-major axis as an average and use a constant VOI system? How bad does the error get as eccentricity increases? At what point do the VOIs start to overlap (which would break things)? You guys love plots, let\u0027s see some pretty pictures! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Horn Brain","CreatedById":49626,"CreatedDateTime":"2013-07-25T04:35:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NeilC\u0022 data-cite=\u0022NeilC\u0022\u003E\u003Cdiv\u003EWhat procedural generation are you talking about? There is no system like that in KSP, and to my knowledge none is planned.\u003Cp\u003E--etc.--\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou were saying arbitrary binaries can\u0027t be implemented without checking eccentricity, and I assumed he meant procedural generation, didn\u0027t notice you were talking about mods. That\u0027s interesting, but the modders will have to obey some rules. Even in the current system, you can already imagine a planet that has a moon that crashes into it over and over just by setting the eccentricity high enough. Certainly the current model doesn\u0027t handle THAT scenario, and yet that isn\u0027t \u0022checked for\u0022. What you\u0027re asking of my model is to enforce common sense in everyone that uses it. I wish I had that power.\u003C/p\u003E\u003Cp\u003EAs for the hand wavey-ness of my implementation, how exactly do you think the spherical SoI assumption could be hard-coded into the program? The simplest way to do it would be to just check the distance between a craft and any body that it could potentially be in the SoI of at several future times and see if it comes closer than r_SoI. In my model, you do the same thing, except there are a few extra if statements if you are within r_SoI of a barycenter object. Done. The cost of getting the distance from one point to another in 3d space (square three differences, add, and take square root) is far more than the cost of checking my rule (multiply pre-calculated mass ratio^(2/5) by one distance), so it would be a trivial performance drain. I don\u0027t think we should even worry about this, because neither of us knows what the code is actually doing. That\u0027s for any of the devs that read this to decide whether implementing this would be a nightmare or an if statement.\u003C/p\u003E\u003Cp\u003EI don\u0027t think dynamic VoIs are necessary; you can just choose to have circular orbits for the handful of bodies that use this logic, anyway. My point is only that they are simpler to implement than fixing the VoI sizes by using the average position of each body (based on the SMA), which would require calculating distances to new, special points in space, rather than just to the bodies themselves.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-25T04:39:13Z\u0022 title=\u002207/25/2013 04:39  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 25, 2013\u003C/time\u003E by Horn Brain\u003C/strong\u003E\n\u003Cbr\u003Echanged \u0026quot;him\u0026quot; to \u0026quot;you\u0026quot; when I noticed you were the one I was replying to before. :-)\n\u003C/span\u003E\n"},{"CreatedByName":"NeilC","CreatedById":57575,"CreatedDateTime":"2013-07-25T12:29:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Horn Brain\u0022 data-cite=\u0022Horn Brain\u0022\u003E\u003Cdiv\u003E\u0026lt;...\u0026gt;What you\u0027re asking of my model is to enforce common sense in everyone that uses it. I wish I had that power.\u0026lt;...\u0026gt;\u003Cp\u003EAs for the hand wavey-ness of my implementation, how exactly do you think the spherical SoI assumption could be hard-coded into the program? \u0026lt;...\u0026gt;I don\u0027t think we should even worry about this, because neither of us knows what the code is actually doing. That\u0027s for any of the devs that read this to decide whether implementing this would be a nightmare or an if statement.\u0026lt;...\u0026gt;My point is only that they are simpler to implement than fixing the VoI sizes by using the average position of each body (based on the SMA), which would require calculating distances to new, special points in space, rather than just to the bodies themselves.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPoint taken about common sense. I think it\u0027s a little less intuitive to know you shouldn\u0027t put e\u0026gt;0.2 on a binary compared to knowing you shouldn\u0027t put peri\u0026lt;=r1\u002Br2 on an orbiting planet... but you\u0027re right it would be trivial to \u0022train\u0022 modders with documentation and by disallowing high-eccentricity binaries.\u003C/p\u003E\u003Cp\u003EI wrote out some pseudocode earlier in this thread describing how I think it\u0027s hard-coded. Basically it would use a single value for r_SOI that never changes. the only shape that fits this 3D-\u0026gt;1D reduction is a sphere - they haven\u0027t implemented the concept of shapes and decided to use a sphere, the sphere is hard-coded by using a 1D parameterization of SOI. I know I don\u0027t have source access and can\u0027t confirm this 100%, but it\u0027s a fairly simple operation and I think it\u0027s a very reasonable assumption. Programmers are lazy, and good programmers even lazier - the simplest implementation is usually the best. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI agree that your rule with constant r_SOI for your bodies is just a more-complicated if statement. That\u0027s why I liked your suggestion so much! It doesn\u0027t require implementing the concept of a shape, just more distance checks (with the order of checks now being important, since the larger mass has a non-spherical VOI and must be the default rather than having a checkable VOI).\u003C/p\u003E\u003Cp\u003EMy hand-waveyness reference was specifically for dynamic VOIs being \u0022not that hard to code up\u0022 - here, I agree with you about not knowing enough about the codebase to make that assumption. What I do know from my own experience is that if you\u0027ve architected a program based on the assumption that some things are constant, it can be a real pain to tear up that assumption. Things break in ways you wouldn\u0027t expect.\u003C/p\u003E\u003Cp\u003EI think we agree that dynamic VOIs are probably too complicated to implement to be worthwhile.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-25T12:33:54Z\u0022 title=\u002207/25/2013 12:33  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 25, 2013\u003C/time\u003E by NeilC\u003C/strong\u003E\n\u003Cbr\u003Erealized an example didn\u0026#039;t make sense.\n\u003C/span\u003E\n"},{"CreatedByName":"chaos_forge","CreatedById":64960,"CreatedDateTime":"2013-07-26T15:55:01Z","Content":"\n\u003Cp\u003EI just realized that dynamic VOI\u0027s are already encoded into the boundary condition we\u0027re using: r1/r2 = (m1/m2)^(2/5)\u003C/p\u003E\u003Cp\u003EAs the distance between objects 1 and 2 changes, so do r1 and r2.\u003C/p\u003E\u003Cp\u003EThat said, I still don\u0027t like the idea of dynamic VOI\u0027s because I feel like it would wreak havoc on the patched conics system. And any spherical VOI (the inner/outer barycenter boundary, the SOI\u0027s of moons/planets orbiting the objects) should \u003Cstrong\u003Edefinitely\u003C/strong\u003E remain fixed in size.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-26T15:57:32Z\u0022 title=\u002207/26/2013 03:57  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 26, 2013\u003C/time\u003E by chaos_forge\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Horn Brain","CreatedById":49626,"CreatedDateTime":"2013-08-02T16:08:49Z","Content":"\n\u003Cp\u003EAnd as luck would have it, we finish discussing our grand idea just before 0.21 and subsequent vacations by the dev that would be implementing this. No way Harv saw this. Sad face.\u003C/p\u003E\u003Cp\u003EAnyway, I think we\u0027ve got it worked out pretty well if we can get two bodies to orbit their barycenter properly. The one thing that remains is how do we implement \u003Cem\u003Ethis\u003C/em\u003E in the game? I think you would have to include a barycenter object with the mass of both bodies, then set each of the two bodies to orbit the barycenter with the ratio of their SMAs determined by the mass ratio (I think it goes a1/a2= m2/m1) with the same eccentricity. However, if that\u0027s all it was, then their periods wouldn\u0027t match up and they would be out of phase immediately (except for the case of m1=m2). This is unfortunately the pain in implementation that would make this modification so hard to do. You would have to rewrite the whole orbit determination code to handle a proper two-body problem, where objects orbit on the ends of a vector pinned at the barycenter, with the vector determined by the mechanics of the full, mutually gravitating two-body problem (the vector is the position of a satellite orbiting the barycenter which has mass m1\u002Bm2). That would be the issue. Once that was worked out, my system would be trivial to implement.\u003C/p\u003E\n"},{"CreatedByName":"chaos_forge","CreatedById":64960,"CreatedDateTime":"2013-08-06T23:07:49Z","Content":"\n\u003Cp\u003EHmm, that\u0027s something we hadn\u0027t thought of . . . well, it really depends on how the on-rails system works. If physically impossible orbits are allowed, then it\u0027s just a case of putting in the right numbers. Otherwise, the barycenter would have to have different pulls on each body, which would be a pain to implement. Each body could still have a elliptical one-body orbit, but the parameters would have to be set up right.\u003C/p\u003E\n"},{"CreatedByName":"NeilC","CreatedById":57575,"CreatedDateTime":"2013-08-07T01:01:38Z","Content":"\n\u003Cp\u003EFor a very informative tutorial about how orbits are parameterized in KSP, see this\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/0wXVm3M2I2w?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E.\u003Cp\u003EI\u0027m not sure what you mean by \u0022physically impossible\u0022 - all orbits are modelled as perfect ellipses, which is not physically possible if you want to get really technical, but is plenty close enough for most purposes. You can edit anything\u0027s orbital parameters and put it in whatever elliptical (or hyperbolic) orbit you\u0027d like.\u003C/p\u003E\u003Cp\u003EAll planets and all craft beyond a certain range of the active craft have orbits that are \u0022on rails.\u0022 There is no concept of \u0022pull\u0022 from the parent body, things just follow their ellipses perfectly. I highly doubt that will be changed, it\u0027s a major feature of how KSP works and changing it would have large performance implications. It would be best to work within that constraint and stick to elliptical orbits for this idea.\u003C/p\u003E\u003Cp\u003EAs for performing additional checks to enforce eccentricity = 0 on binary objects, I don\u0027t think that would be too tough. Or to enforce whatever parameter-matching you\u0027d like, working with the parameters described in that video.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-07T01:03:53Z\u0022 title=\u002208/07/2013 01:03  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 7, 2013\u003C/time\u003E by NeilC\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Taquarinha","CreatedById":47685,"CreatedDateTime":"2013-08-07T01:08:06Z","Content":"\n\u003Cp\u003EIt\u0027s impossible because Unity engine can\u0027t workout n-Body calculations.\u003C/p\u003E\n"},{"CreatedByName":"Horn Brain","CreatedById":49626,"CreatedDateTime":"2013-08-07T01:09:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NeilC\u0022 data-cite=\u0022NeilC\u0022\u003E\u003Cdiv\u003EI\u0027m not sure what you mean by \u0022physically impossible\u0022\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think he means can you have two bodies orbit the barycenter with different SMAs and the same period (which is impossible if the barycenter was an actual gravitating object). Methinks the game is hard-coded to use the mass of the body the planet is orbiting to setup the orbit, which would make it impossible. The only solutions I can think of would be to have two barycenter objects with different masses (one for each body to orbit) or to rework the way the code handles orbits so that you can set both the period and the SMA independently.\u003C/p\u003E\n"},{"CreatedByName":"Horn Brain","CreatedById":49626,"CreatedDateTime":"2013-08-07T01:10:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Taquarinha\u0022 data-cite=\u0022Taquarinha\u0022\u003E\u003Cdiv\u003EIt\u0027s impossible because Unity engine can\u0027t workout n-Body calculations.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are no n-Body calculations involved in anything being discussed here.\u003C/p\u003E\n"},{"CreatedByName":"chaos_forge","CreatedById":64960,"CreatedDateTime":"2013-08-07T01:37:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Horn Brain\u0022 data-cite=\u0022Horn Brain\u0022\u003E\u003Cdiv\u003EI think he means can you have two bodies orbit the barycenter with different SMAs and the same period (which is impossible if the barycenter was an actual gravitating object). Methinks the game is hard-coded to use the mass of the body the planet is orbiting to setup the orbit, which would make it impossible. The only solutions I can think of would be to have two barycenter objects with different masses (one for each body to orbit) or to rework the way the code handles orbits so that you can set both the period and the SMA independently.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, I don\u0027t know what would be worse: to implement barycenters as an object with two different masses, or make orbital periods for planets independent of the mass of the object it\u0027s orbiting.\u003C/p\u003E\n"},{"CreatedByName":"NeilC","CreatedById":57575,"CreatedDateTime":"2013-08-07T02:57:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Horn Brain\u0022 data-cite=\u0022Horn Brain\u0022\u003E\u003Cdiv\u003EI think he means can you have two bodies orbit the barycenter with different SMAs and the same period (which is impossible if the barycenter was an actual gravitating object). Methinks the game is hard-coded to use the mass of the body the planet is orbiting to setup the orbit, which would make it impossible. The only solutions I can think of would be to have two barycenter objects with different masses (one for each body to orbit) or to rework the way the code handles orbits so that you can set both the period and the SMA independently.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, because orbital period is defined by SMA and parent mass in the elliptical (Keplerian) model this is impossible. It\u0027s also non-physical: real-world orbits don\u0027t work like that in the typical case where distances are large and/or one mass is substantially larger than the other. In that case SMA and period are directly related, and that\u0027s the case KSP models.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022chaos_forge\u0022 data-cite=\u0022chaos_forge\u0022\u003E\u003Cdiv\u003EYeah, I don\u0027t know what would be worse: to implement barycenters as an object with two different masses, or make orbital periods for planets independent of the mass of the object it\u0027s orbiting.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe game \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eonly\u003C/span\u003E takes the mass of the parent body into account when a craft is in focus. Then it\u0027s solving physics for every part, including thrust and grav force.\u003C/p\u003E\u003Cp\u003EWhile anything is \u0022on rails\u0022, the game \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Edoes not use the mass of either\u003C/span\u003E \u003Cem\u003Euses the mass of the parent\u003C/em\u003E object to calculate orbital period, but does not have any concept of forces. It uses only the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Orbital_elements#Keplerian_elements\u0022 rel=\u0022external nofollow\u0022\u003EKeplerian orbital elements\u003C/a\u003E to define the orbital path and the craft/planet/moon/star\u0027s position on it at any given time. That\u0027s why it\u0027s called \u0022on rails\u0022 - no complicated physics is used. Just trace the ellipse.\u003C/p\u003E\u003Cp\u003EThis is going to be a problem for general binary systems. For example, I can imagine a stable 2-body system with M1 = 3*M2, where both bodies orbit the center of gravity 3/4 of the way between them (closest to M1). They would both be in circular orbits about the barycenter. They would both have the same period. But M1 would have an SMA 3/4 that of M2. KSP\u0027s \u0022on rails\u0022 system would not deal with this case properly, since it cannot be approximated by a Keplerian orbit. Simulating this requires N-body calcs in the special case of n=2. Which is a non-starter and (again) \u003Cem\u003Eis not being discussed here.\u003C/em\u003E I\u0027m just pointing out the point at which the discussion would cross that line: let\u0027s not go there.\u003C/p\u003E\u003Cp\u003EMore I think about it, the more I think you\u0027d have to limit binary systems to the special case of circular orbits with both objects at the same radius. And therefore physically they would need to have the same mass - not sure about in-game, though. Because planets are never in focus their masses might not be checked as they orbit one another, only when a craft orbits one of them. The engine might do a \u0022consistency pass\u0022 though, and reject non-physical system definitions. Not sure, since this is still a closed system. If I know software developers, though, they\u0027re beautifully lazy (read: efficient! no offense) and have just calculated correct parameters for the Kerbol system offline and have input those without implementing a checking system. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EEdit:\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EInteresting.... I think KSP would deal just fine with the top picture \u003Ca href=\u0022https://en.wikipedia.org/wiki/Two-body_problem\u0022 rel=\u0022external nofollow\u0022\u003Eshown here\u003C/a\u003E for an elliptical binary system where the SMAs are the same but the orbits are 180deg out of phase. So there\u0027s at least one interesting special case! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E But I\u0027m still pretty sure it wouldn\u0027t handle the second case, a Pluto/charon type orbit like I described above.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-07T03:32:54Z\u0022 title=\u002208/07/2013 03:32  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 7, 2013\u003C/time\u003E by NeilC\u003C/strong\u003E\n\u003Cbr\u003EI\u0026#039;m an idiot. Of course KSP uses mass to calculate orbital period.\n\u003C/span\u003E\n"},{"CreatedByName":"loknar","CreatedById":77750,"CreatedDateTime":"2013-08-07T03:15:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NeilC\u0022 data-cite=\u0022NeilC\u0022\u003E\u003Cdiv\u003E If I know software developers, though, they\u0027re beautifully lazy (read: efficient! no offense) and have just calculated correct parameters for the Kerbol system offline and have input those without implementing a checking system. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs a developer I can confirm that suspicion. I\u0027m almost sure KSP is no exception - and I hope that they don\u0027t recalculate the orbits constantly for performance reasons.\u003C/p\u003E\u003Cp\u003EI\u0027m all for adding more content and planets and stars in the future - but don\u0027t forget about performance - transitions between SOI are already causing a small pause in the game. My 2 cents: If you want to add 0.1% realistic physics but my FPS will drop to 3 I\u0027m against it. /Iamoversimplifying\u003C/p\u003E\n"},{"CreatedByName":"chaos_forge","CreatedById":64960,"CreatedDateTime":"2013-08-07T04:29:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NeilC\u0022 data-cite=\u0022NeilC\u0022\u003E\u003Cdiv\u003E-snip-\u003Cp\u003EWhile anything is \u0022on rails\u0022, the game does not use the mass of either uses the mass of the parent object to calculate orbital period, but does not have any concept of forces.\u003C/p\u003E\u003Cp\u003E-snip-\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERight. A way to fix this would be to make planetary orbits not use the mass of the parent object and have instead be a value that you can set.\u003C/p\u003E\u003Cp\u003EOr, since the barycenter object would already treat its children in different ways (because of wonky VOI\u0027s), it might be possible for it to \u0022show\u0022 different mass values to the different planets in orbit around it.\u003C/p\u003E\n"},{"CreatedByName":"NeilC","CreatedById":57575,"CreatedDateTime":"2013-08-07T16:50:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022chaos_forge\u0022 data-cite=\u0022chaos_forge\u0022\u003E\u003Cdiv\u003ERight. A way to fix this would be to make planetary orbits not use the mass of the parent object and have instead be a value that you can set.\u003Cp\u003EOr, since the barycenter object would already treat its children in different ways (because of wonky VOI\u0027s), it might be possible for it to \u0022show\u0022 different mass values to the different planets in orbit around it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, I finally understood your \u0022two masses\u0022 point as I was falling asleep last night - sorry, I posted before thinking it through.\u003C/p\u003E\u003Cp\u003EIMHO, a change that makes orbital period a stored parameter just like SMA and eccentricity would be cleaner than any two-masses solution. It would be easy to make it backwards-compatible, too: just fill the parameter with the mass-based autocalc if it doesn\u0027t exist, use the specified one if it does.\u003C/p\u003E\n"},{"CreatedByName":"chaos_forge","CreatedById":64960,"CreatedDateTime":"2013-08-07T19:39:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NeilC\u0022 data-cite=\u0022NeilC\u0022\u003E\u003Cdiv\u003EIMHO, a change that makes orbital period a stored parameter just like SMA and eccentricity would be cleaner than any two-masses solution. It would be easy to make it backwards-compatible, too: just fill the parameter with the mass-based autocalc if it doesn\u0027t exist, use the specified one if it does.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould this also affect crafts on rails?\u003C/p\u003E\n"}]}