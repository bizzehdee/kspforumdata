{"TopicId":67827,"ForumId":29,"TopicTitle":"Change to RCS and Xenon flow rules","CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-04-03T10:17:04Z","PageNum":1,"Articles":[{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-04-03T10:17:04Z","Content":"\n\u003Cp\u003EDoes anyone know for definite what this line from the release notes means?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E* RCS and XenonGas containers on earlier stages are now drained before containers on later stages.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom the ResourceFlowMode enum I would guess that they now use a different mode. They used to use ResourceFlowMode.ALL_VESSEL but now it looks like they use a new STAGE_PRIORITY_FLOW value.\u003C/p\u003E\u003Cp\u003EI\u0027ll try to work out the exact rules later this evening unless someone has already done so (or someone from Squad could just tell us how it works)...\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-04-03T10:27:11Z","Content":"\n\u003Cp\u003EI think I should be relatively safe to quote HarvesteR here:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027ve added a new resource flow mode called StagePriorityFlow. This new mode is very similar to all-vessel flow, but instead of draining evenly from all parts at once, it will separate the parts into groups based on their staging, and drain the ones on higher stage numbers first, which are more likely to get jettisoned off earlier.\u003C/p\u003E\u003Cp\u003EI\u0027ve changed the flow mode on Monopropellant and XenonGas to this new mode.\u003C/p\u003E\u003Cp\u003ENow, if you build a multistage craft with RCS or Xenon tanks in the bottom stages, those will be used first, keeping the ones nearer stage 0 (and presumably the payload) full until no other sources are found. The recent tweaks to all-vessel flow mode, which prevent tanks from being left with unused \u0027trace\u0027 quantities still inside, should also work in this mode, to ensure tanks are properly emptied of all their resources before moving on to the next set.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-04-03T12:13:39Z","Content":"\n\u003Cp\u003EThanks very much for this, it should be fairly easy to implement in the KER simulation code though the decision of when to stage may also need changing to get more sensible numbers (e.g. it currently won\u0027t simulate staging until all the engines that will be decoupled run out of fuel).\u003C/p\u003E\u003Cp\u003EDo you have a link to where HarvesteR said that? Sounds like something I should be keeping an eye on...\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-04-03T14:00:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Padishar\u0022 data-cite=\u0022Padishar\u0022\u003E\u003Cdiv\u003EDo you have a link to where HarvesteR said that?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt is not public.\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-05-01T17:33:03Z","Content":"\n\u003Cp\u003EKasuha has done an analysis of this flow type in his \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/64362-Fuel-Flow-Rules-%280-23-5%29?p=1130118\u0026amp;viewfull=1#post1130118\u0022 rel=\u0022external nofollow\u0022\u003Efuel flow thread\u003C/a\u003E and it appears to show that Harvester\u0027s description is not correct. Rather than the stage number, it appears to use the count of decouplers between the tank and the root part and this value could have little relation to the stage number.\u003C/p\u003E\u003Cp\u003EIs there any chance one of the core devs could give us an official description of how this mode works?\u003C/p\u003E\n"},{"CreatedByName":"HarvesteR","CreatedById":4,"CreatedDateTime":"2014-05-09T15:35:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Padishar\u0022 data-cite=\u0022Padishar\u0022\u003E\u003Cdiv\u003EKasuha has done an analysis of this flow type in his \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/64362-Fuel-Flow-Rules-%280-23-5%29?p=1130118\u0026amp;viewfull=1#post1130118\u0022 rel=\u0022external nofollow\u0022\u003Efuel flow thread\u003C/a\u003E and it appears to show that Harvester\u0027s description is not correct. Rather than the stage number, it appears to use the count of decouplers between the tank and the root part and this value could have little relation to the stage number.\u003Cp\u003EIs there any chance one of the core devs could give us an official description of how this mode works?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, indeed, there is a bit of a catch there. The new stage drain logic does use the staging indices for the part, but the thing is, tanks and such are usually not the kind of parts you would see in the staging list, since they have very little to \u0027activate\u0027 by engaging a new stage. \u003C/p\u003E\u003Cp\u003EThe thing to keep in mind here is that even though the tanks are not present in the staging list, they are still bound by the rules that control the default assignment of stage numbers to every part. That said, there may be a subtle bug here, which I would rather not poke at without having a better understanding of what\u0027s really going on internally. In that other thread, you can see that while the tanks are clearly on different stages, they appear to not have inherited the proper stage index after the decoupler. It\u0027s hard to tell any more without knowing in which order those tanks were put together, if they were placed before or after the decouplers, or if that happened before or after stages were edited, or even if you copied the other decouplers instead of using fresh ones, all that could be potentially influencing the situation.\u003C/p\u003E\u003Cp\u003EI\u0027ll try some experimenting here in any case, ideally, I would expect any part that has no purpose in staging to just inherit the staging indexing from the parent part, manually modified or not. With staging related issues, however, well... let\u0027s just say if I could pick any part of the game to go back in time and do over... staging would be right there on top on the list.\u003C/p\u003E\u003Cp\u003EAnother one \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/79071-Devnote-Tuesdays-The-0-24-Experimentals-Edition?p=1147117\u0026amp;viewfull=1#post1147117\u0022 rel=\u0022external nofollow\u0022\u003Efor when it\u0027s time to pave the tunnel\u003C/a\u003E, I suppose.\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-05-09T16:34:56Z","Content":"\n\u003Cp\u003EThanks for the response. When you say \u0022the default assignment of stage numbers\u0022 which member of the Part class are you referring to? Does it simply use that member of the mono/xenon tanks to group them? I can (and probably will) run some tests to see if my \u0022count of decouplers between tank and root\u0022 is equal to one of the Part member variables.\u003C/p\u003E\u003Cp\u003EThe trouble with all this is that the game allows you to create a vessel where the decouplers are not in a simple sequence and/or the root is not in the last stage. The simulation code in KER (and MJ uses something virtually identical) uses a strange function that scans up through the parent links looking for decouplers to determine in what stage a part is decoupled because there doesn\u0027t seem to be any member of the Part class that is set correctly. However, this entire approach is flawed because it is possible to create a rocket whose root part is in the initial launch stage and when this gets staged, all the wrong parts get removed from the simulation because it causes the parts above the decoupler to be removed from the vessel rather than the ones below. I\u0027ve done some thinking about how to fix this (see the KER thread) but, to do it properly will probably require the simulation code to actually split the part tree into two separate vessels when a decoupler is fired (just like the game does) and either decide which is the important one or possibly continue simulating both of them.\u003C/p\u003E\u003Cp\u003EI also would like to see the staging mechanism overhauled. It could be very useful if anything that can be added to an action group could be assigned to a stage, effectively making the stages into a list of action groups. I would particularly like to be able to decouple docking ports and extend solar panels using staging. I would also like to be able to remove engines and decouplers from the staging list (there is at least one mod that allows you to do this).\u003C/p\u003E\n"},{"CreatedByName":"HarvesteR","CreatedById":4,"CreatedDateTime":"2014-05-09T17:03:45Z","Content":"\n\u003Cp\u003EThe value in question would be Part.inverseStage.\u003C/p\u003E\u003Cp\u003EAnd yes, staging is a deceivingly complicated piece of logic. You\u0027d think it would be something as simple as recursing through the ship and handling it as a simple tree structure, and then you get to the edge cases, and you feel like you just walked into a room full of zombies.\u003C/p\u003E\u003Cp\u003EHaving the main \u0027pod\u0027 section of the spacecraft not share the same stage as the root of the ship (the first part you placed) causes a number of mind-bending situations... What happens to the vessel when you drop the main bits that were controlling it? \u003C/p\u003E\u003Cp\u003EThat\u0027s something we call \u0027root-dropping\u0027, although it is a bit of a misnomer. You\u0027re dropping the core of your spacecraft, but the root of the vessel was not part of that core, so from the core\u0027s perspecting, you\u0027ve \u0027dropped\u0027 the root of your hierarchy.\u003C/p\u003E\u003Cp\u003EWe work around that by detecting whether the ship you\u0027re now in control of is still more than a piece of debris. If it\u0027s not, then we switch focus to the jettisoned bit. You can see that happen sometimes as the camera tends to jump slightly instead of flowing smoothly towards the new center of mass.\u003C/p\u003E\u003Cp\u003EHierarchy shifts happen all the time as you play. Docking is what got that whole thing started, as as you docked, the \u0027docker\u0027 side of the pair would shift its internal part hierarchy so that the docking port itself was the root of the vessel, and everything from there down became children of it. Then upon undocking (assuming the vessel still contained its original root part... man, 0.18 was a pain to debug), we flip the hierarchy back again so the old root is now the parent for everybody else.\u003C/p\u003E\u003Cp\u003ENow, with the whole \u0027we can now shift hierarchies\u0027 thing added, we saw that there was no need to enforce that a pod be the initial part on a ship. As long as it was something you could attach other parts to, there was no reason why anything couldn\u0027t be the root, but it did create the new problem in which the command pods now were not only optional, they also were possibly placed after decouplers. Hence, root-dropping.\u003C/p\u003E\u003Cp\u003EAnyhow, I should get back to work here. Best of luck with your mod. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"}]}