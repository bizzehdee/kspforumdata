{"TopicId":120951,"ForumId":44,"TopicTitle":"Cheap Personal/Professional Robotics Development System","CreatedByName":"Mazon Del","CreatedById":32991,"CreatedDateTime":"2015-09-15T15:09:36Z","PageNum":1,"Articles":[{"CreatedByName":"Mazon Del","CreatedById":32991,"CreatedDateTime":"2015-09-15T15:09:36Z","Content":"\n\u003Cp\u003EHello everybody!\u003C/p\u003E\u003Cp\u003ESome friends of mine just put up their Kickstarter for a product that some of you might be interested in. \u003Ca href=\u0022https://www.kickstarter.com/projects/neuronrobotics/wifi-dyio-robot-controller-w-24-channels/description\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.kickstarter.com/projects/neuronrobotics/wifi-dyio-robot-controller-w-24-channels/description\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThe device is called a DyIO for Dynamic Input Output. This device ($120-150), when combined with their development software (free), offers quite a lot of power for you to develop projects for yourself. An example is the \u0022Creature Creator\u0022 section of the software.\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/videoseries?list=PLrTh8skra716MUsQDSzVYOw5MoKaOhmMs\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E That link points to a video showing a hexapod taking its first steps. That hexapod was designed in the Bowler Studio software, but not in the way that might sound. No CAD work was done by the user. No kinematics (forward or inverse) were done by the user. Technically for the game controller setup, no programming was even required to get it to move as the DyIO/BS default to attempting that if you never gave it any additional brains.\u003Cp\u003EHowever, actually coming up with a brain for it is not difficult. An example being that lets say you wanted to make the same hexapod drive around autonomously Roomba style (a simple sense-\u0026gt;react loop). You slap a sonic range finder on the hexapod pointing forward. In your robot control file (which I\u0027m going to refer to as the AI code from now on) you specify a link to the hexapod.xml file that was automatically created for you, you grab the import for using a sonic range finder (An asyncronous analog input, unless something else better matches the specific sensor you have) from the canned Bowler Studio code repository, tell it the port you are plugged into on the Dyio, do something akin to \u0022If distance \u0026lt; 8, output to hexapod.xml drive function, turn right 45 degrees, else drive forward\u0022. The total coding done by you, the user, was likely less than 30 lines of code.\u003C/p\u003E\u003Cp\u003EBowler Studio supports quite a few programming languages. Java is the big one that Kevin (the programmer) likes, but it supports any JVM language, so C, Perl 6, Python, etc.\u003C/p\u003E\u003Cp\u003ESome of you might be aware of a system called ROS, or the Robot Operating System. I am not particularly qualified to explain WHY the following statement is valid, for further information I can put you in touch with Kevin if you like, be prepared for an epic spiel though. ROS is fundamentally unable to be used as a real time system without a lot effort going into modifying the code. BS on the other hand is designed from the ground up to be real time compliant.\u003C/p\u003E\u003Cp\u003EThe system is currently in use in experimental medical devices (including being part of an MRI safe medical robot) as well as other industrial uses. Full disclosure: I use it on my NASA Sample Return Robot Challenge rover.\u003C/p\u003E\u003Cp\u003EThe system really wants to use Github for code repository purposes and makes that really easy and streamlined to do. If you lose connection to the internet then BS intelligently stores your data for seamless uploading at a later date.\u003C/p\u003E\u003Cp\u003EAnd so much more! Feel free to ask questions here and I will get info from Kevin and Alex (the electrical guy on the project) when I can.\u003C/p\u003E\u003Cp\u003EMazon\u003C/p\u003E\n"},{"CreatedByName":"Mazon Del","CreatedById":32991,"CreatedDateTime":"2015-09-15T18:34:28Z","Content":"\n\u003Cp\u003ENuts! I forgot to mention one of the cooler parts of the system!\u003C/p\u003E\u003Cp\u003ESo I described that you, the user, designed the hexapod in the Bowler Studio system. There is a very nice menu for doing this in, dragging an axis of movement around and such. Once you are done and like your design within the computer (which can demonstrate itself in software simulation), you can hit an export button. This generates a bunch of .stl files that if you shove into a 3D printer, you can now print out the robot you were trying to build.\u003C/p\u003E\u003Cp\u003ESo the system takes away a lot of the back end coding, and a lot of the front end designing.\u003C/p\u003E\n"}]}