{"TopicId":183396,"ForumId":66,"TopicTitle":"KSP Loading... Preview: Advanced Maneuver Mode","CreatedByName":"SQUAD","CreatedById":66485,"CreatedDateTime":"2019-04-03T19:04:03Z","PageNum":7,"Articles":[{"CreatedByName":"basic.syntax","CreatedById":109920,"CreatedDateTime":"2019-04-10T20:51:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223579240\u0022 data-ipsquote-contentid=\u0022183396\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221554839242\u0022 data-ipsquote-userid=\u0022164179\u0022 data-ipsquote-username=\u0022Tyko\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn \u200E4\u200E/\u200E9\u200E/\u200E2019 at 12:47 PM, Tyko said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027d be all in favor of an in-game graphical scripting system that let me write automation programs though. Something that involved dragging and dropping decision points into a sequence then typing parameters into each of the decision points. finally stringing them all together into a series of programs that would control an entire flight.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat sounds like an expansion of the Making History expansion. (lol) \u00A0 The UI already exists.\u00A0 Some form of this could help a player manage multiple flights with multiple planetary transfers. \u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Tyko","CreatedById":164179,"CreatedDateTime":"2019-04-10T21:17:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223580034\u0022 data-ipsquote-contentid=\u0022183396\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221554929501\u0022 data-ipsquote-userid=\u0022109920\u0022 data-ipsquote-username=\u0022basic.syntax\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 minutes ago, basic.syntax said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat sounds like an expansion of the Making History expansion. (lol) \u00A0 The UI already exists.\u00A0 Some form of this could help a player manage multiple flights with multiple planetary transfers. \u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nLOL...yea, I was wondering if they could leverage some of the MH mission builder code for this. I\u0027ve never used Mission Builder, but I\u0027d definitely use a maneuver programmer if it worked well.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIn some ways this is like KOS, which is very powerful, but to make it more player friendly\u00A0i was envisioning a GUI based programming system instead of a text environment.\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2019-04-10T23:04:23Z","Content":"\n\u003Cp\u003E\nThe Making History system is essentially a finite state machine (FSM) with no memory other than \u0022I am at this node right now\u0022.\u00A0 It would be exceptionally hard to make a script out of that.\u00A0 There\u0027s a reason people use FSM generator tools when they use FSMs in the real world, like when making language parsers, rather than writing the FSM directly from scratch.\u00A0 Being graphical doesn\u0027t always make things easier.\u00A0 Any proper scripting system will need some kind of memory to say \u0022if X then STORE this value in A\u0022, and later on, \u0022If that value we stored beforehand in A was this, then do that.\u0022\u00A0 The Making history expansion was a pure FSM which means it lacks that, and this is the main reason it was painful to use to try to make any sort of real mission out of it.\u00A0 The only \u0022memory\u0022 an FSM can have about an if/else fork you are doing now is in the form of cutting and pasting a duplicate of the entire tree of events that comes after that fork so you have two variants of the rest of the \u0022program\u0022 from there on down that are almost identical except for that one node in the future you want to behave differently based on this if/else you are doing now.\u003Cbr\u003E\u003Cbr\u003E\nI gave up on making missions with Making History once it became clear that there was no capacity to remember a variable and read it later.\u00A0 The massive duplication required to get anything meaningful out of a manually built FSM was too painful at that point, and I think a scripting system based on the same FSM engine would have the same problem.\u003Cbr\u003E\u003Cbr\u003E\nGUI programming *is* a thing, and people have done it, but you have to also have memory and variables.\u00A0 The pure FSM of Making History doesn\u0027t cut it.\n\u003C/p\u003E\n"}]}