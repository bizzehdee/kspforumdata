{"TopicId":112061,"ForumId":29,"TopicTitle":"Is there a hook when switching vessels? I need to close my network sockets... somehow.","CreatedByName":"jarpy","CreatedById":145718,"CreatedDateTime":"2015-06-05T14:18:14Z","PageNum":1,"Articles":[{"CreatedByName":"jarpy","CreatedById":145718,"CreatedDateTime":"2015-06-05T14:18:14Z","Content":"\n\u003Cp\u003EHi,\u003C/p\u003E\u003Cp\u003EI have a working prototype for a part that sends and receives over UDP sockets: \u003Ca href=\u0022https://github.com/jarpy/OpenSpaceKontrol\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jarpy/OpenSpaceKontrol\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EMy current challenge is that it only works for the first vessel/flight of a game session. After that, I\u0027m still holding the UDP sockets, so the next vessel can\u0027t bind to them.\u003C/p\u003E\u003Cp\u003E\u0027Would love to hear any suggestions for closing the sockets when the vehicle is destroyed or switched away. Is there a simple \u0022OnNotFocussed\u0022 kind of method I\u0027m missing? Or do I need to pull back and make my sockets part of a broader (non-part, non-vessel) context.\u003C/p\u003E\u003Cp\u003EThanks very much for any help you can offer.\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-05T21:31:03Z","Content":"\n\u003Ca href=\u0022https://github.com/Crzyrndm/Pilot-Assistant/blob/master/PilotAssistant/PilotAssistantFlightCore.cs#L85\u0022 rel=\u0022external nofollow\u0022\u003EGameEvents.onVesselChange\u003C/a\u003E is the event that fires when switching between vessels.\n"},{"CreatedByName":"jarpy","CreatedById":145718,"CreatedDateTime":"2015-06-06T08:40:33Z","Content":"\n\u003Cp\u003EThanks Crzyrndm.\u003C/p\u003E\u003Cp\u003ELooking at your code, I\u0027m starting to get the feeling that mine would be better implemented as a MonoBehaviour rather than a PartModule. So double-thanks for that.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-06-06T13:33:56Z","Content":"\n\u003Cp\u003ENote that .onVesselChange also fires on undocking, losing parts to an accident (overheating/collision/etc) so you\u0027d have to check for that in your code.\u003C/p\u003E\u003Cp\u003EHowever, looking at your code, I\u0027d consider moving the actual UDP port binding and associated code to a KSPAddon.Flight class. Having it on a partModule like you do means that even just having two OskModule partModules on the same vessel could get interesting.\u003C/p\u003E\u003Cp\u003EA KSPAddon.Flight class only runs once per flight scene load so you don\u0027t have to worry about binding/unbinding sockets and such regardless of what happens during the scene.\u003C/p\u003E\u003Cp\u003EYou would still need the OskModule partmodule class to control the vessel, but I think writing the logic for a single KSPAddon.Flight to recognize a vessel switch would be simpler then having multiple partModules trying to decide it between themselves.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"jarpy","CreatedById":145718,"CreatedDateTime":"2015-06-06T23:17:21Z","Content":"\n\u003Cp\u003ESounds like great advice. I like your split approach, with separation of concerns between \u0022game things\u0022 (commands, telemetry) and \u0022computer things\u0022, (UDP sockets).\u003C/p\u003E\u003Cp\u003EThanks for taking the time to look at my code; this is a nice place.\u003C/p\u003E\n"}]}