{"TopicId":84948,"ForumId":36,"TopicTitle":"Definition of Vessel.GetWorldPos3D() seems to be inconsistent","CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-19T07:41:51Z","PageNum":1,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-19T07:41:51Z","Content":"\n\u003Cp\u003EI was wondering if anyone else can confirm this behavior because it really doesn\u0027t seem right and I\u0027m wondering if I\u0027m misunderstanding it.\u003C/p\u003E\u003Cp\u003EAs far as I can tell, the definition of Vessel.GetWorldPos3D() seems to vary.\u003C/p\u003E\u003Cp\u003ESometimes vessel.GetWorldPos3D() returns the position of the ship\u0027s center of mass. Other times it returns the position of the ship\u0027s root part.\u003C/p\u003E\u003Cp\u003ECan anyone else confirm that I\u0027m not nuts here and this really is the way it seems to work? It makes no sense but it would explain some of the weird behavior I\u0027m getting if it was true.\u003C/p\u003E\u003Cp\u003EBasicaly I\u0027m doing this:\u003C/p\u003E\u003Cp\u003Earrow vector = ( vessel 2\u0027s GetWorldPos3D() - vessel1\u0027s GeWorldPos3D() ).\u003C/p\u003E\u003Cp\u003EDraw this arrow vector with origin transformed to vessel1\u0027s GetWorldPos3D().\u003C/p\u003E\u003Cp\u003EAnd getting a picture of an arrow that is aimed as if it was pointing from vessel1\u0027s cockpit to vessel2\u0027s cockpit, BUT it\u0027s origined at vessel1\u0027s CoM instead of vessel1\u0027s cockpit so it looks wrong.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-19T07:53:05Z\u0022 title=\u002209/19/2014 07:53  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 19, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-09-19T07:51:00Z","Content":"\n\u003Cp\u003EI can confirm, there is cause for confusion..\u003C/p\u003E\u003Cp\u003Ebut I\u0027m not sure it\u0027s allways as you describe..\u003C/p\u003E\u003Cp\u003EWhile working on my tractor beam, I found strangest things happening too..\u003C/p\u003E\u003Cp\u003Efor example the calculated center of mass for an other vessel (parked beside) starts to rotate in weird direction if the active vessel moves..\u003C/p\u003E\u003Cp\u003EI\u0027m sure there is a unity-typical explanation around that needs an own documentation to be understood..\u003C/p\u003E\u003Cp\u003EMy conclusion was \u0022Ohh well\u0022 - and still is btw..\u003C/p\u003E\u003Cp\u003EIf strange things happen with positions and especially rotations, you might not be as nuts as you think and unity might not be as intuitive as it should be..\u003C/p\u003E\u003Cp\u003EI know, not very helpfull but maybe comforting..\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-19T07:55:05Z","Content":"\n\u003Cp\u003EMaybe the only thing I can do to bypass KSP\u0027s undocumented API is to just explicitly get the Unity Transform of the Vessel\u0027s Root part and use that to get its position. Then at least I know I\u0027m getting the same consistent definition all the time.\u003C/p\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-09-19T08:18:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EMaybe the only thing I can do to bypass KSP\u0027s undocumented API is to just explicitly get the Unity Transform of the Vessel\u0027s Root part and use that to get its position. Then at least I know I\u0027m getting the same consistent definition all the time.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E:-D good luck..\u003C/p\u003E\u003Cp\u003Eoptimism is allways good hahah\u003C/p\u003E\u003Cp\u003EUnity (transforms/rotation) isn\u0027t much better if you ask me - after hours of testing I get it to work too usually - but don\u0027t ask me why it works now and didn\u0027t before :-)\u003C/p\u003E\u003Cp\u003Ethere is KSP and unity alike for guys with my knowledge. A big mystery in many things..\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-09-19T09:13:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022philotical\u0022 data-cite=\u0022philotical\u0022\u003E\u003Cdiv\u003EI can confirm, there is cause for confusion..\u003Cp\u003Ebut I\u0027m not sure it\u0027s allways as you describe..\u003C/p\u003E\u003Cp\u003EWhile working on my tractor beam, I found strangest things happening too..\u003C/p\u003E\u003Cp\u003Efor example the calculated center of mass \u003Cstrong\u003Efor an other vessel\u003C/strong\u003E (parked beside) starts to rotate in weird direction if the active vessel moves..\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMaybe because you forgot one important fact: in KSP, universe is centered on the active vessel, so positions of everything else change as the active vessel move/rotate.\u003C/p\u003E\u003Cp\u003E(seen not a long ago in an Harvester explanation on floating point precision limitation).\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-19T09:21:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EMaybe because you forgot one important fact: in KSP, universe is centered on the active vessel, so positions of everything else change as the active vessel move/rotate.\u003Cp\u003E(seen not a long ago in an Harvester explanation on floating point precision limitation).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENope, I knew that. and it\u0027s not entirely correct either. The origin point is only *near* the current ship, not directly ON it. When you first come off rails, the origin is right on the ship. As you fly in normal physics time after that, however, the ship drifts away from the origin.\u003C/p\u003E\u003Cp\u003EBut in any regard, it wouldn\u0027t matter because I\u0027m getting the relative *difference* between the two vessel\u0027s position readouts, and setting the tail of the arrow at the vessel1\u0027s position, so it should work regardless of whether vessel 1\u0027s position is (0,0,0) or something else.\u003C/p\u003E\n"}]}