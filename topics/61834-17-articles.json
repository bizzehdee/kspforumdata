{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":17,"Articles":[{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-11-17T04:03:26Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003ENEW RELEASE v0.15.0\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EWe have a huge new release with fun toys for you all to play with.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/releases/tag/v0.15.0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/releases/tag/v0.15.0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E \u003Cspan style=\u0022font-size:14px;\u0022\u003ENEW FEATURES:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EPlease follow the links to see the full information on the new features.\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/summary_topics/applauncher_panel/index.html\u0022 rel=\u0022external nofollow\u0022\u003EAdded new kOS GUI panel to the KSP Applauncher system\u003C/a\u003E. With this you can alter config values, and open/close terminals from one common panel. Just click the little kOS logo button in either the editors (VAB/SPH) or in flight view.\u003C/p\u003E\u003Cp\u003E \u003Cimg src=\u0022http://ksp-kos.github.io/KOS_DOC/images/applauncher_panel_no_annotation.png\u0022 alt=\u0022applauncher_panel_no_annotation.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/control/index.html#pilot-commands\u0022 rel=\u0022external nofollow\u0022\u003EAdded pilot input to flight controls\u003C/a\u003E which lets you read/write the users control state, you can use this to set the exit behavior for the mainthrottle.\u003C/p\u003E\u003Cp\u003E* Several suffixes are now \u003Ca href=\u0022ksp-kos.github.io/KOS_DOC/#structure_methods\u0022 rel=\u0022external nofollow\u0022\u003Emethods that you can call\u003C/a\u003E with arguments.\u003C/p\u003E\u003Cp\u003E * eg before to add to a list it was SET LIST:ADD TO \u0022FOO\u0022. Now it would be LIST:ADD(\u0022FOO\u0022).\u003C/p\u003E\u003Cp\u003E* Suffix methods that perform an action do not need to be assigned to anything. No more having to say \u003Cem\u003ESET DUMMY TO MYLIST:CLEAR.\u003C/em\u003E You can now just say \u003Cem\u003EMYLIST:CLEAR.\u003C/em\u003E like it was a statement.\u003C/p\u003E\u003Cp\u003E* Added suffixes to OBT for \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/orbit/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ewalking orbit conic patches\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E * ORB:HASNEXTPATCH - A boolean that shows the presence of a future patch\u003C/p\u003E\u003Cp\u003E * ORB:NEXTPATCH - The next OBT patch \u003C/p\u003E\u003Cp\u003E* Added better techniques for selecting the Part you want from a Vessel:\u003C/p\u003E\u003Cp\u003E * Ability to give any part any name you like with the \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/summary_topics/nametag/index.html\u0022 rel=\u0022external nofollow\u0022\u003Enew nametag feature\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003E * \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/summary_topics/ship_parts_and_modules/index.html#parts\u0022 rel=\u0022external nofollow\u0022\u003EDirectly querying a vessel for parts\u003C/a\u003E, searching for \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/summary_topics/nametag/index.html\u0022 rel=\u0022external nofollow\u0022\u003Enametags\u003C/a\u003E, or part names or part titles.\u003C/p\u003E\u003Cp\u003E * SHIP: PARTSDUBBED(string)\u003C/p\u003E\u003Cp\u003E * SHIP: PARTSNAMED(string)\u003C/p\u003E\u003Cp\u003E * SHIP: PARTSTAGGED(string)\u003C/p\u003E\u003Cp\u003E * SHIP: PARTSTITLED(string)\u003C/p\u003E\u003Cp\u003E * SHIP: PARTSINGROUP(string)\u003C/p\u003E\u003Cp\u003E * SHIP: MODULESNAMED(string)\u003C/p\u003E\u003Cp\u003E * \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/part/index.html\u0022 rel=\u0022external nofollow\u0022\u003EWalking the parts Tree\u003C/a\u003E:\u003C/p\u003E\u003Cp\u003E * PART: CHILDREN - A ListValue of parts that are descendant from the current part\u003C/p\u003E\u003Cp\u003E * PART: PARENT - A PART that is the ancestor of the current part\u003C/p\u003E\u003Cp\u003E * PART: HASPARENT - A boolean that shows the presence of a Parent PART\u003C/p\u003E\u003Cp\u003E * SHIP: ROOTPART - The first part of a ship. The start of the tree of parts. identical to SHIP: PARTS[0].\u003C/p\u003E\u003Cp\u003E * \u003Cem\u003ESET MyList TO SHIP: PARTS.\u003C/em\u003E now does the same thing as \u003Cem\u003ELIST PARTS IN MyList.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E* A \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/partmodule/index.html\u0022 rel=\u0022external nofollow\u0022\u003Enew system lets you access the PartModules\u003C/a\u003E that the stock game and modders put on the various parts. Through this, you now have the ability to manipulate a lot of the things that are on the rightclick menus of parts:\u003C/p\u003E\u003Cp\u003E * PART Suffixes:\u003C/p\u003E\u003Cp\u003E * GETMODULE(string)\u003C/p\u003E\u003Cp\u003E * ALLMODULES.\u003C/p\u003E\u003Cp\u003E * PartModule Suffixes:\u003C/p\u003E\u003Cp\u003E * GETFIELD(field_name) - read a value from a rightclick menu\u003C/p\u003E\u003Cp\u003E * SETFIELD(field_name, new value) - change a value on a rightclick menu, if it would normally be adjustable via a tweakable control.\u003C/p\u003E\u003Cp\u003E * DOACTION(name_of_action_) - cause one of the actions that would normally be available to action groups *even if it hasn\u0027t been assigned to an action group*.\u003C/p\u003E\u003Cp\u003E * DOEVENT(event_name) - \u0022presses a button\u0022 on the rightclick part menu.\u003C/p\u003E\u003Cp\u003E * Several others..\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/list/index.html\u0022 rel=\u0022external nofollow\u0022\u003ELists are now saner to work with\u003C/a\u003E with no longer needing to use weird side effects to get things done, now that there\u0027s proper methods available:\u003C/p\u003E\u003Cp\u003E * :ADD has changed:\u003C/p\u003E\u003Cp\u003E * Old Way: \u003Cem\u003ESET MyList:ADD TO NewVal.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E * New Way: \u003Cem\u003EMyList:ADD(NewVal).\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E * :REMOVE has changed:\u003C/p\u003E\u003Cp\u003E * Old Way: \u003Cem\u003ESET MyList:REMOVE TO indexnumber.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E * New Way: \u003Cem\u003EMyList:REMOVE(indexnumber).\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E * :CLEAR has changed:\u003C/p\u003E\u003Cp\u003E * Old Way: \u003Cem\u003ESET Dummy to MyList:CLEAR.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E * New Way: \u003Cem\u003EMyList:CLEAR().\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E* Added ENGINE:AVAILABLETHRUST suffix. A value that respects the thrust limiter\u003C/p\u003E\u003Cp\u003E* Added SHIP:AVAILABLETHRUST suffix. A sum of all of the ship\u0027s thrust that respects thrust limiters\u003C/p\u003E\u003Cp\u003E* Added a \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/command/file/index.html#compile-1-to-2\u0022 rel=\u0022external nofollow\u0022\u003Enew experimental COMPILE command\u003C/a\u003E, for making smaller executable-only programs to put on your probes without punishing you for writing legible code with comments and indenting.\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/command/file/index.html#volume-and-filename-arguments\u0022 rel=\u0022external nofollow\u0022\u003EFilename convention changes\u003C/a\u003E:\u003C/p\u003E\u003Cp\u003E * Commands that deal with filenames will now allow any arbitrary expressions as the filename, except for the RUN command.\u003C/p\u003E\u003Cp\u003E * *Exception*: The above does NOT apply to the \u0060\u0060\u003C/p\u003E\u003Cdiv\u003E[code single]RUN\u003C/div\u003E\u003Cp\u003E\u0060\u0060 command. The run command requires that the filenames are known at compile time, and it cannot allow arbitrary expressions evaluated later at runtime.\u003C/p\u003E\u003Cp\u003E * Program files are now called *.ks instead of *.txt. When you first run the new version, it will give you an option to rename your files to the new name for you as they are moved to the new location.\u003C/p\u003E\u003Cp\u003E * Although the default script filenames use *.ks, you can override this and explicitly mention filename extensions in all the filename commands. What you can\u0027t do is have filenames with no extensions.\u003C/p\u003E\u003Cp\u003E* Added support for CKAN\u003C/p\u003E\u003Cp\u003E* Added config file so kOS will now show up in Automatic Version Checker (AVC)\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003ECHANGES BREAKING OLD SCRIPTS:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E* BREAKING: \u003Cstrong\u003E.txt files are now .ks files\u003C/strong\u003E: The new assumed default file extension for files used by kOS is *.ks rather than *.txt. This may confuse old IDE\u0027s, or your computer\u0027s assumed file associations.\u003C/p\u003E\u003Cp\u003E* BREAKING: \u003Cstrong\u003EVesselName\u003C/strong\u003E: Removed previously deprecated term \u0022VESSELNAME\u0022, use \u0022SHIPNAME\u0022\u003C/p\u003E\u003Cp\u003E* BREAKING: \u003Cstrong\u003ESHIP:ORB: PATCHES\u003C/strong\u003E: Moved SHIP:ORB: PATCHES to SHIP: PATCHES and it now contains all orbit patches\u003C/p\u003E\u003Cp\u003E* BREAKING: \u003Cstrong\u003ELists\u003C/strong\u003E: New syntax for using :ADD, and :REMOVE suffixes for lists requires old code to be altered. See features above for the new way.\u003C/p\u003E\u003Cp\u003E* WARNING: \u003Cstrong\u003EBundled ModuleManager\u003C/strong\u003E: Because kOS now needs ModuleManager, and ModuleMangaer complains about being run on Windows 64bit, you now see a new warning message if you run kOS on Windows 64bit, but the message is ignorable and kOS still runs.\u003C/p\u003E\u003Cp\u003E* BREAKING: \u003Cstrong\u003Eidentifiers as filenames\u003C/strong\u003E: If you use the same name for a filename as the name of a variable, in a file command such as COPY, DELETE, etc, then kOS will no longer use the variable\u0027s name as the filename but will now use the variable\u0027s contents as the filename.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EBUG FIXES:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/277\u0022 rel=\u0022external nofollow\u0022\u003EPartValue: POSITION not using ship-relative coords\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/311\u0022 rel=\u0022external nofollow\u0022\u003EBoot file name is case sensitive\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/331\u0022 rel=\u0022external nofollow\u0022\u003EEngine reports maxthrust on :ISP suffix\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/308\u0022 rel=\u0022external nofollow\u0022\u003ELIST VOLUMES IN \u0026lt;list\u0026gt; makes an empty list.\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/268\u0022 rel=\u0022external nofollow\u0022\u003EParser doesn\u0027t understand THING[num]:THING[NUM] or thing[index]:suffix(arg)\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/252\u0022 rel=\u0022external nofollow\u0022\u003Eship:obt: patches seems to be missing some of the patches\u003C/a\u003E (Note: in addition to fixing it, the patches list was moved to just ship: patches, which makes more sense).\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/254\u0022 rel=\u0022external nofollow\u0022\u003ECompiler should throw exception on trying to put a WAIT in a trigger.\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-17T04:16:38Z\u0022 title=\u002211/17/2014 04:16  AM\u0022 data-short=\u00229 yr\u0022\u003ENovember 17, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-12-16T08:24:30Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003ENew Pre-Release v0.15.4\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Ethis is a shoot from the hip update that we put together in a few hours. it has almost no testing so please let us know if you have any trouble with it.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003Ev0.15.4\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E0.90 took us by surprise so this has had very little testing. if you find an issue please let us know either here in the github issues or on the forums.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EBREAKING CHANGES\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EIssue #431: SHIP:ANGULARMOMENTUM and SHIP:ANGULARVEL have been changed from directions to vectors to me more consistent with their nature\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENew Stuff:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EShould now be compatible with KSP 0.90\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EBug Fixes:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EIssue #421: some local files are corrupt\u003C/p\u003E\u003Cp\u003EIssue #423: its possible to create a file with no extension\u003C/p\u003E\u003Cp\u003EIssue #424: additional bootfile suffix protection\u003C/p\u003E\u003Cp\u003EIssue #429: files sent to persistence file no longer get truncated\u003C/p\u003E\u003Cp\u003EOn Github: \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/releases/tag/v0.15.4\u0022 rel=\u0022external nofollow\u0022\u003EDownload\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-12-23T06:38:56Z","Content":"\n\u003Cp\u003EI have found some behaviour that I think is intentional, but causes some issues:\u003C/p\u003E\u003Cp\u003E- It is impossible to readout the throttle without the global throttle setting actually being modified. This means that reading a throttle setting and modifying it becomes troublesome, since the modified result will be influenced by the unmodified input. A workaround might be to use another axis for throttle input, like a translating axis, but I do not consider that ideal.\u003C/p\u003E\u003Cp\u003E- Inversely, it is impossible to set the throttle through kOS without locking the user out completely.\u003C/p\u003E\u003Cp\u003EIn my mind, there would ideally be some way to disconnect the throttle setting and throttle input completely. That would allow reading the setting, modifying it and sending it on to the global setting. Hacking something together with the thrust limiters and some compensating mechanism to un-input the throttle is possible, but again, probably not ideal. I noticed the thrust limiters themselves can be set beyond a 100%, but that is actually a useful property as the engine does respond accordingly \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I might be overlooking some good reasons not to do this though, so I would love to hear your thoughts.\u003C/p\u003E\u003Cp\u003EThere has been some trouble with I think an old bug too. Whenever I quicksave a running kOS unit, reloading causes parts to fall off. More reloading or going to back and forth to the VAB causes a craft in limbo with flames all over.\u003C/p\u003E\u003Cp\u003EFinally, I reproduced the kOS logo as a vector drawing for my fly-by-wire video, as I could not find any versions in a decent resolution. If you ever need it, you know where to find it.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-23T23:17:19Z","Content":"\n\u003Cp\u003EFirst: a clarification about the \u0022parts fall off\u0022 - what\u0027s actually happening is that ONE part is affected. It\u0027s not fallen off, but in fact is vanished entirely - the SCS part fails to be created at all. Then all the parts that are meant to be attached to the vessel via the SCS part are now attached to nothing, and that\u0027s what makes them \u0022fall off\u0022. I noticed this once and took a mental note of it. It\u0027s really just the SCS part - everything else is a consequence of it being missing. I\u0027ll be willing to bet it\u0027s because of the code that makes an attempt to restore the varaible state. It was written totally wrongly and I\u0027d like to see it entirely removed until a replacement can be found. It\u0027s a thousand times less bad for the program state to be forgotten when you switch scenes than for parts to fall off.\u003C/p\u003E\u003Cp\u003EAs for thrust limiting - I think it\u0027s wrong for it to be used to actually *increase* an engine\u0027s output past its maximum. That seems like a massive bug. It may be useful, but don\u0027t depend on it - it should be fixed.\u003C/p\u003E\u003Cp\u003EAs for locking the pilot out - you can read the pilot\u0027s inputs even while they are being locked out and ineffective (as I understand it), and thus use them as a suggestion your script can decide what to do with - sort of the Airbus style of control where the pilot\u0027s joystick has no hydrolic , mechanical, or electrical connection whatsoever to the control surfaces. It\u0027s just a digital input to the autopilot software and the software decides what it feels like doing with that information. (A method with both good and bad consequences. The good is that the autopilot can prevent the pilot from doing something wrong, but the downside being that the pilot is helpless to prevent the autopilot from doing something wrong.)\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-12-24T01:57:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAs for locking the pilot out - you can read the pilot\u0027s inputs even while they are being locked out and ineffective (as I understand it), and thus use them as a suggestion your script can decide what to do with - sort of the Airbus style of control where the pilot\u0027s joystick has no hydrolic , mechanical, or electrical connection whatsoever to the control surfaces. It\u0027s just a digital input to the autopilot software and the software decides what it feels like doing with that information. (A method with both good and bad consequences. The good is that the autopilot can prevent the pilot from doing something wrong, but the downside being that the pilot is helpless to prevent the autopilot from doing something wrong.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is indeed exactly my intention and in fact one of the real life examples I was thinking of. I took another look at the documentation and realized I completely missed the fact that you can now set and read the ship:control:mainthrottle. As far as I knew you still had to lock the throttle and obviously you are locking yourself out of control by doing that. However, I still seem to have trouble either just intercepting the pilot throttle without influencing the final throttle and vice versa, though at this point am not not too sure it is my lack of understanding kOS or actually a bug.\u003C/p\u003E\u003Cp\u003EWhen I read or set the pilotmainthrottle, I can see the value change and the craft\u0027s engines respond appropriately (so throttle is influenced by player input):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclearscreen.\u003Cbr\u003Eabort off.\u003Cbr\u003E\u003Cbr\u003Eset ship:control:pilotmainthrottle to 0.25.\u003Cbr\u003E\u003Cbr\u003Euntil abort = true {\u003Cbr\u003E\tprint \u0022Pilot throttle: \u0022 \u002B round(ship:control:pilotmainthrottle, 2) \u002B \u0022     \u0022 at (0,5).\u003Cbr\u003E\tprint \u0022Mainthrottle: \u0022 \u002B round(ship:control:mainthrottle, 2) \u002B \u0022     \u0022 at (0,6).\u003Cbr\u003E\u003Cbr\u003E\tprint \u0022Pilot active :\u0022 \u002B ship:control:pilotneutral \u002B \u0022     \u0022 at (0,8).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eset ship:control:neutralize to true.\u003Cbr\u003Eunlock all.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHowever, when I try to set the throttle to anything else via kOS, I get locked out of setting or reading the throttle setting through the interface. Additionally, when I run the first script again, I am still locked out and I need to revert to launch to get it working again.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclearscreen.\u003Cbr\u003Eabort off.\u003Cbr\u003E\u003Cbr\u003E//changed this value from pilotmainthrottle to mainthrottle\u003Cbr\u003Eset ship:control:mainthrottle to 0.25.\u003Cbr\u003E\u003Cbr\u003Euntil abort = true {\u003Cbr\u003E\tprint \u0022Pilot throttle: \u0022 \u002B round(ship:control:pilotmainthrottle, 2) \u002B \u0022     \u0022 at (0,5).\u003Cbr\u003E\tprint \u0022Mainthrottle: \u0022 \u002B round(ship:control:mainthrottle, 2) \u002B \u0022     \u0022 at (0,6).\u003Cbr\u003E\u003Cbr\u003E\tprint \u0022Pilot active :\u0022 \u002B ship:control:pilotneutral \u002B \u0022     \u0022 at (0,8).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eset ship:control:neutralize to true.\u003Cbr\u003Eunlock all.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAm I overlooking or misunderstanding something? How should I intercept the throttle without the pilot setting influencing the actual throttle?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAs for thrust limiting - I think it\u0027s wrong for it to be used to actually *increase* an engine\u0027s output past its maximum. That seems like a massive bug. It may be useful, but don\u0027t depend on it - it should be fixed.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou cannot really increase an engine\u0027s output past its maximum, you can only set the thrust limiter beyond 100%. The engine will only provide its maximum thrust regardless. When you set the throttle to 0.5 and the limiter to 200% you get full thrust (0.5 * 200% = 100%), but when you set the limiter to 300 you still only get a 100% thrust. It just tops out.\u003C/p\u003E\u003Cp\u003EIt is still not something you can normally do in KSP and that would be a fair reason to remove it, but the impact seems to be somewhat limited \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Of course, the impact of removing it is therefore limited too. I felt it was useful to deal with the issue of the locking command, but it appears that was not an issue that actually needed solving \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-24T02:02:54Z\u0022 title=\u002212/24/2014 02:02  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 24, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-12-24T03:17:29Z","Content":"\n\u003Cp\u003ECan I do a small feature request? Can :mass be added to the \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/part/index.html\u0022 rel=\u0022external nofollow\u0022\u003Epart properties\u003C/a\u003E? Or is that something that is not readily available?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-24T07:39:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003ECan I do a small feature request? Can :mass be added to the \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/part/index.html\u0022 rel=\u0022external nofollow\u0022\u003Epart properties\u003C/a\u003E? Or is that something that is not readily available?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat should be doable. In the underlying KSP API, a Part has both a mass value (The dry mass) and a GetResourceMass() method (which returns the sum of the masses of all the resource levels currently contained in the part, i.e. oxidizer\u002Bliquidfuel).\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-12-24T17:37:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003ECan I do a small feature request? Can :mass be added to the \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/part/index.html\u0022 rel=\u0022external nofollow\u0022\u003Epart properties\u003C/a\u003E? Or is that something that is not readily available?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESounds good, mind adding the issue to github?\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-12-24T20:34:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003ESounds good, mind adding the issue to github?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDone \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EIn regards to my earlier post, might \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/425\u0022 rel=\u0022external nofollow\u0022\u003Ethis issue\u003C/a\u003E be partially or fully related to it? I neglected to check GitHub before I posted the issue here, but it sounds like what I am dealing with. I cannot figure out a way of intercepting a control from the player and sending it on to KSP without the two either interfering with each other or having nothing work at all, though at this point I started seriously doubting myself.\u003C/p\u003E\u003Cp\u003EEdit: I gave up for now and used the ship:control:pilottop axis instead of the official throttle. That works like it should.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-24T21:03:18Z\u0022 title=\u002212/24/2014 09:03  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 24, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2014-12-29T18:25:23Z","Content":"\n\u003Cp\u003EOver the holiday weekend I tried to add support for the new built in autopilot features (just prograde and maneuver for the initial proof) and I ran into a weird complication. I added the abilities to the \u0022toggleflybywire\u0022 function, and implemented them in the FlightControlManager. Through my first round of testing I only used the commands directly from the console, and both worked with no issues. Then I tried to run the command from within a script, and it failed. Through a bunch of debugging, I\u0027ve found that it looks like the opcode has an extra pop, which is causing an error with the stack being queried out of range (it appears to be trying to pop at an index of -1, with the stack empty). Digging into the opcode is a little beyond my knowledge of kOS, so I thought I would bring it up here. I didn\u0027t want to make a pull request to bugged code, but you can see/clone my changes here: \u003Ca href=\u0022https://github.com/hvacengi/KOS/tree/Enable-builtin-autopilot\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/hvacengi/KOS/tree/Enable-builtin-autopilot\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThe script I am trying to run afterwards is pretty simple: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Esas on.lock throttle to 1.\u003Cbr\u003Estage.\u003Cbr\u003Ewait 5.\u003Cbr\u003Etoggleflybywire(\u0022prograde\u0022, True).\u003Cbr\u003Ewait 5.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m also attaching the error text:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 12:33:45.430] Code FragmentFile                 Line:Col IP   opcode operand\u003Cbr\u003E----                 ----:--- ---- --------------------- \u003Cbr\u003Earchive/testflybywire.ks    1:5   0152 push True \u003Cbr\u003Earchive/testflybywire.ks    1:5   0153 store \u003Cbr\u003Earchive/testflybywire.ks    2:1   0154 push $throttle* \u003Cbr\u003Earchive/testflybywire.ks    2:1   0155 push 132 \u003Cbr\u003Earchive/testflybywire.ks    2:1   0156 store \u003Cbr\u003Earchive/testflybywire.ks    2:1   0157 push 134 \u003Cbr\u003Earchive/testflybywire.ks    2:1   0158 addtrigger false \u003Cbr\u003Earchive/testflybywire.ks    2:1   0159 push throttle \u003Cbr\u003Earchive/testflybywire.ks    2:1   0160 push True \u003Cbr\u003Earchive/testflybywire.ks    2:1   0161 call toggleflybywire() \u003Cbr\u003Earchive/testflybywire.ks    3:1   0162 call stage() \u003Cbr\u003Earchive/testflybywire.ks    4:6   0163 push 5 \u003Cbr\u003Earchive/testflybywire.ks    4:6   0164 wait \u003Cbr\u003Earchive/testflybywire.ks    5:17  0165 push prograde \u003Cbr\u003Earchive/testflybywire.ks    5:29  0166 push True \u003Cbr\u003Earchive/testflybywire.ks    5:29  0167 call toggleflybywire() \u003Cbr\u003Earchive/testflybywire.ks    5:29  0168 pop \u0026lt;\u0026lt;--INSTRUCTION POINTER--\u003Cbr\u003Earchive/testflybywire.ks    6:6   0169 push 5 \u003Cbr\u003Earchive/testflybywire.ks    6:6   0170 wait \u003Cbr\u003Earchive/testflybywire.ks    7:1   0171 push 138 \u003Cbr\u003Earchive/testflybywire.ks    7:1   0172 addtrigger true \u003Cbr\u003E                        0:0   0173 return \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 12:33:45.420] At testflybywire.ks on archive, line 5\u003Cbr\u003Etoggleflybywire(\u0022prograde\u0022, True).\u003Cbr\u003E                            ^\u003Cbr\u003ECalled from boot.ks on 1, line 23\u003Cbr\u003Erun testflybywire.ks.\u003Cbr\u003E^\u003Cbr\u003ECalled from boot on 1, line 1\u003Cbr\u003Eclearscreen.\u003Cbr\u003E^\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E[LOG 12:33:45.423] System.ArgumentOutOfRangeException: Argument is out of range.\u003Cbr\u003EParameter name: index\u003Cbr\u003E  at System.Collections.Generic.List\u00601[System.Object].get_Item (Int32 index) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at kOS.Execution.Stack.Pop () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at kOS.Execution.CPU.PopStack () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at kOS.Execution.CPU.PopValue (Boolean barewordOkay) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at kOS.Safe.Compilation.OpcodePop.Execute (ICpu cpu) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at kOS.Execution.CPU.ExecuteInstruction (kOS.Execution.ProgramContext context) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at kOS.Execution.CPU.ContinueExecution () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at kOS.Execution.CPU.Update (Double deltaTime) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI think this feature could be a really useful addition to kOS. Any help you can give with implementing it would be awesome!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-30T13:17:58Z","Content":"\n\u003Cp\u003EThe difference between this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Earchive/testflybywire.ks    2:1   0158 addtrigger false \u003Cbr\u003Earchive/testflybywire.ks    2:1   0159 push throttle \u003Cbr\u003Earchive/testflybywire.ks    2:1   0160 push True \u003Cbr\u003Earchive/testflybywire.ks    2:1   0161 call toggleflybywire() \u003Cbr\u003Earchive/testflybywire.ks    3:1   0162 call stage() \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E(no pop)\u003C/p\u003E\u003Cp\u003Eand this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Earchive/testflybywire.ks    5:17  0165 push prograde \u003Cbr\u003Earchive/testflybywire.ks    5:29  0166 push True \u003Cbr\u003Earchive/testflybywire.ks    5:29  0167 call toggleflybywire() \u003Cbr\u003Earchive/testflybywire.ks    5:29  0168 pop \u0026lt;\u0026lt;--INSTRUCTION POINTER--\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E(has a pop).\u003C/p\u003E\u003Cp\u003EMay be how one was called indirectly by the code in kOS (i.e. in the first one the script never said \u0022toggleflybywire\u0022 - the script said \u0022lock throttle to 1\u0022 and the lock command itself chose to call toggleflybywire as a result) while the other was called directly as a function in kOS (the script said \u0022toggleflybywire(...)\u0022). \u003C/p\u003E\u003Cp\u003EIt occurs to me this may be a bug in general with people calling built-in functions with the parenthesis syntax. When I made them interchangeable, not only does it mean you don\u0027t need parentheses to call MYLIST:CLEAR but it also meant you CAN add them to things like PRINT and so on, which never occurred to me. I suspect you\u0027ll get the same exact POP problem if you try to do PRINT(\u0022hello\u0022) as opposed to PRINT \u0022hello\u0022.\u003C/p\u003E\u003Cp\u003EI\u0027ll have a chance to look into this later today. In the meantime you can try that little test. Try these two things:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPRINT \u0022one\u0022.\u003Cbr\u003EPRINT(\u0022two\u0022).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd see if you get the same POP error on the second one as you got with flybywire. It may have nothing to do with your change, and have everything to do with this.\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2014-12-31T22:09:14Z","Content":"\n\u003Cp\u003EThanks Steven. I hadn\u0027t though about that being a potential issue. I\u0027ll give that a try and see what happens. I\u0027ve run into a couple other complications with using the built in autopilot system, so I\u0027m not sure how perfect it will be yet. I\u0027ll give it a shot tonight or some time tomorrow and report back.\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2015-01-02T19:17:09Z","Content":"\n\u003Cp\u003EJust to update, using parenthesis with the print command did not cause any errors. It proceeded to the next line without issue. As a temporary shim, I push the number 0 to the stack before returning toggleflybywire, which prevents the pop error. Without more testing though, that is a stack overflow error waiting to happen. I didn\u0027t try using toggleflybywire without the parenthesis while using a defined string variable (if I just used a string literal it threw a syntax error on compile without running). \u003C/p\u003E\u003Cp\u003EDepending on the rocket design though, these built in maneuver snap seems to be more touchy than the built in stabilization (much less dampening and higher output spikes). I am going to experiment a bit with rocket design to see if it is related to rocket wobble, or to the ratio of torque to the mass and to the overall length. These are an issue when using the built in buttons as well as when using kOS, so I don\u0027t think it should prevent implementing the functionality.\u003C/p\u003E\u003Cp\u003ESo at this point there are two things I need to fix before it could be submitted to be included: find a stable fix to the pop bug; find out how to toggle the ui icons for the different modes as well.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-03T22:17:39Z","Content":"\n\u003Cp\u003EDid someone order a new kOS unit?\u003C/p\u003E\u003Cp\u003EAfter my post in the other topic, I had a bit of fun with an assortment of programs. Obviously, a lot of work still needs to be done, but that is exactly why I post here. Before I sink more time into this, it might be prudent to discuss the how and where and whether there is actually any need for a new unit. I had some doubts whether I could be of use, but I am somewhat pleased with how my experiments turned out.\u003C/p\u003E\u003Cp\u003EI was looking to make a kOS replacement unit, as the current one is rather basic and since kOS has grown, I figured the model could use an update too. My main goal would be to make a pretty kOS unit that is up to current modelling standards, with a believable look, engineering and layout and with a reasonable amount of polygons. I have given myself an budget of 2000 triangles, as people who know what they are talking about say that is a reasonable limit, and the current model uses 1522. I have optimized the model primarily for textures, as polygons are less of a problem than memory. That being said, despite the hours put into this, I do not think this is the final layout. The main components are there - a realistically constructed hull, latticework and a semi-open space, a big computer part, some form of cooling, wiring and cables and a battery. I would like to shuffle them around a bit to make more sense. Suggestions are more than welcome, and additional inspiration too. This version has largely been inspired by a Jupiter ICBM nose cone, the Saturn guidance computer (not the DSKY) and another Russian computer, but I felt I could really use some more material, as it is rather hard to find pictures of computers mounted inside of rockets. If you have of know any, I would love to see it. \u003C/p\u003E\u003Cp\u003EA bigger question mark though, is whether kOS will use pretty much the same basic units it uses now. This is pretty much a pretty reproduction of what is there already, but I do not know whether that makes sense for kOS in the future too. It has been discussed a couple of times in the past, but I do not think it has been recently.\u003C/p\u003E\u003Cp\u003EI am curious to hear what you think \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://tweakers.net/ext/f/MUvOlvP3sOp3gIpGCsbOhUMw/full.png\u0022 alt=\u0022full.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://tweakers.net/ext/f/XWkhR62rc55CPAqkFRpkDJAA/full.png\u0022 alt=\u0022full.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://tweakers.net/ext/f/oUzeSqYANW6dxv4cpxMBPaUh/full.png\u0022 alt=\u0022full.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ESome very crude texturing tests I did earlier:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://tweakers.net/ext/f/psiJTz9BWmd7m1Qvo7wky1g4/full.png\u0022 alt=\u0022full.png\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-04T01:35:16Z\u0022 title=\u002201/04/2015 01:35  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 4, 2015\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2015-01-04T01:55:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EDid someone order a new kOS unit?\u003Cp\u003EAfter my post in the other topic, I had a bit of fun with an assortment of programs. Obviously, a lot of work still needs to be done, but that is exactly why I post here. Before I sink more time into this, it might be prudent to discuss the how and where and whether there is actually any need for a new unit. I had some doubts whether I could be of use, but I am somewhat pleased with how my experiments turned out.\u003C/p\u003E\u003Cp\u003EI was looking to make a kOS replacement unit, as the current one is rather basic and since kOS has grown, I figured the model could use an update too. My main goal would be to make a pretty kOS unit that is up to current modelling standards, with a believable look, engineering and layout and with a reasonable amount of polygons. I have given myself an budget of 2000 triangles, as people who know what they are talking about say that is a reasonable limit, and the current model uses 1522. I have optimized the model primarily for textures, as polygons are less of a problem than memory. That being said, despite the hours put into this, I do not think this is the final layout. The main components are there - a realistically constructed hull, latticework and a semi-open space, a big computer part, some form of cooling, wiring and cables and a battery. I would like to shuffle them around a bit to make more sense. Suggestions are more than welcome, and additional inspiration too. This version has largely been inspired by a Jupiter ICBM nose cone, the Saturn guidance computer (not the DSKY) and another Russian computer, but I felt I could really use some more material, as it is rather hard to find pictures of computers mounted inside of rockets. If you have of know any, I would love to see it. \u003C/p\u003E\u003Cp\u003EA bigger question mark though, is whether kOS will use pretty much the same basic units it uses now. This is pretty much a pretty reproduction of what is there already, but I do not know whether that makes sense for kOS in the future too. It has been discussed a couple of times in the past, but I do not think it has been recently.\u003C/p\u003E\u003Cp\u003EI am curious to hear what you think \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://tweakers.net/ext/f/MUvOlvP3sOp3gIpGCsbOhUMw/full.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://tweakers.net/ext/f/MUvOlvP3sOp3gIpGCsbOhUMw/full.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://tweakers.net/ext/f/XWkhR62rc55CPAqkFRpkDJAA/full.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://tweakers.net/ext/f/XWkhR62rc55CPAqkFRpkDJAA/full.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://tweakers.net/ext/f/oUzeSqYANW6dxv4cpxMBPaUh/full.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://tweakers.net/ext/f/oUzeSqYANW6dxv4cpxMBPaUh/full.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESome very crude texturing tests I did earlier:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://tweakers.net/ext/f/psiJTz9BWmd7m1Qvo7wky1g4/full.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://tweakers.net/ext/f/psiJTz9BWmd7m1Qvo7wky1g4/full.png\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is very cool, when you are ready to add it to the project, do you have any reluctance to having the sourcefiles live in the github repo and be licensed as GPL along with the rest of the code?\u003C/p\u003E\u003Cp\u003EA i have a small feature request. the \u0022new\u0022 small kos part has some lights on it that i would like to eventually be script controlled. So if you think you would like to have something cool like some 9 seqment displays or some simple lights on your part i think that could add something pretty cool to the part.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ENew updated thing on the forums is a bother. ^ that thing ^\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-04T01:39:03Z\u0022 title=\u002201/04/2015 01:39  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 4, 2015\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-04T02:05:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EThat is very cool, when you are ready to add it to the project, do you have any reluctance to having the sourcefiles live in the github repo and be licensed as GPL along with the rest of the code?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI will need to check the exact conditions of the license, but the work was pretty much intended for public distribution alongside the kOS software. If it would become part of the project, that would be great. My main concern is that is remains freely available and that it is properly attributed. I would also prefer that others cannot charge money for the work, but a quick scan of the GPL license seems to cover all those bases.\u003C/p\u003E\u003Cp\u003EWhat would be considered the sourcefiles in this case, the Blender files and textures?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EA i have a small feature request. the \u0022new\u0022 small kos part has some lights on it that i would like to eventually be script controlled. So if you think you would like to have something cool like some 9 seqment displays or some simple lights on your part i think that could add something pretty cool to the part.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf I can get that to work, I do not mind \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E My KSP modelling skills are modest at best and I would need to find out how to make controllable lights, but it sounds like a fun project to look into. However, might it be an idea to create a separate 9 segment display part? That way people can add it whenever and wherever they want.\u003C/p\u003E\u003Cp\u003ESo reproducing the current kOS unit is the way to go?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-04T02:09:25Z\u0022 title=\u002201/04/2015 02:09  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 4, 2015\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2015-01-04T02:11:49Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EThe KSP 0.90 compatibility release.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E(The full thematic following of KSP 0.90\u0027s new way of\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Ethinking will come in a future version. This is just\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Eto make sure everything works.)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/releases/tag/v0.15.5\u0022 rel=\u0022external nofollow\u0022\u003EOn Github\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://kerbalstuff.com/mod/86/kOS:%20Scriptable%20Autopilot%20System\u0022 rel=\u0022external nofollow\u0022\u003EOn KerbalStuff\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kerbal.curseforge.com/ksp-mods/220265-kos-scriptable-autopilot-system\u0022 rel=\u0022external nofollow\u0022\u003EOn Curseforge\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E[h=3]BREAKING CHANGES[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ENow respects the limitations of \u003Ca href=\u0022http://ksp-kos.github.io/KOS/general/career_limits.html\u0022 rel=\u0022external nofollow\u0022\u003E0.90 career mode upgrades\u003C/a\u003E, which may make a few features not work anymore in career mode until you get further progressed along in your building upgrades.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[h=3]New Stuff[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThanks to a new dev team contributer Johann Goetz (\u003Ca href=\u0022https://github.com/theodoregoetz\u0022 rel=\u0022external nofollow\u0022\u003E@theodoregoetz\u003C/a\u003E on github), we have a new, much better and cleaner looking \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/\u0022 rel=\u0022external nofollow\u0022\u003Edocumentation site\u003C/a\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBetter flight input handling to detect the pilot controls and keep them isolated.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u0022plays nice\u0022 with other autopilots a bit better, using KSP 0.90\u0027s new autopiloting hooks.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ENew \u003Ca href=\u0022http://ksp-kos.github.io/KOS/math/direction.html\u0022 rel=\u0022external nofollow\u0022\u003Esuffixes to handle directions better\u003C/a\u003E as mentioned in\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/7byYiZZBBVc?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESeparate Dry Mass, Wet Mass, and Current Mass readings for parts and for the vessel as a whole (TODO: Link here, but the public gh-pages hasn\u0027t be regenned yet so I don\u0027t know the link yet)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAdded new \u003Ca href=\u0022http://ksp-kos.github.io/KOS/structures/waypoint.html\u0022 rel=\u0022external nofollow\u0022\u003EWAYPOINT object\u003C/a\u003E to help with locations of some contracts.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAdded new :POSITION and :ALTITUDEPOSITION suffixes to \u003Ca href=\u0022http://ksp-kos.github.io/KOS/math/geocoordinates.html\u0022 rel=\u0022external nofollow\u0022\u003EGeocoordinates\u003C/a\u003E to obtain 3D vectors of their positions in ship-raw coordinate space.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EADDED muliple new ways to deal with resources.\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003ESTAGE:RESOURCES, SHIP:RESOURCES and TARGET:RESOURCES will let you get a list of the resources for the craft, the difference being that SHIP: and TARGET: includes all resources and STAGE: includes only the resoures that are for \u0022this stage\u0022. All three of these will let you get a list of :PARTS that can contain that resource.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EPart resources now gives you access to the resource\u0027s tweakable :ENABLE and :TOGGLEABLE can let you remove add a resource to the normal resource flow.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[h=3]Bug Fixes[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EBetter handling of range checking and loading the boot file when remotetech is installed (thanks to hvacengi for this contribution)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBoot file overwrite fix (thanks to pakrym)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E(For developers) fixed compile error on UNIX platforms that was due to filename case-sensitivity differences.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELOG command to the Archive now appends to the file properly instead of rewriting the entire contents each time just to tack on one line. It is now possible to read its output from outside KSP using a tool like the UNIX \u0022tail -f\u0022 program.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBetter calculations of stage resource values, using SQUAD\u0027S provided API for it instead of trying to walk the tree ourselves (which broke in 0.90).\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EFixed lonstanding \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/478\u0022 rel=\u0022external nofollow\u0022\u003Ebug with geocoordinates:TERRAINHEIGHT\u003C/a\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[h=3]Small maintenence issues[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EBundling a newer version of ModuleManager\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBetter use of the \u0022skin\u0022 system for the app panel. Should see no obvious effect on the surface.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-04T02:17:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003E[*]Better flight input handling to detect the pilot controls and keep them isolated.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou guys are moving fast \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-04T07:59:53Z","Content":"\n\u003Cp\u003EJust to let people know: Several of the links in the release announcement lead to either 404 not found pages, or to pages that are out of date and fail to mention the new feature being talked about.\u003C/p\u003E\u003Cp\u003EThis will be fixed, probably Sunday. The documentation source file changes are written, but the pages hosted on the site weren\u0027t regenerated from the source yet when the announcement was made.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EI love that new part models are being made, Camacha. That\u0027s great. We should have plenty of variety to work with that way. When we have multiple part models, it means we\u0027ll have to think about what computer features should really scale as you climb the tech tree and buy better versions of the part.\u003C/p\u003E\u003Cp\u003EOne comment on the artwork - putting the kOS identifying decal on the top or bottom of a stack-mounted part means that once it\u0027s part of a stack, you can\u0027t see it anymore. Maybe there should be an identifying decal on the outer cylinder wall of the stack-mounted part too.\u003C/p\u003E\u003Cp\u003EI don\u0027t know if erendrake agrees, but one thing in general I thought might be kind of cool is if kOS parts followed the inverse of the usual part progression. Typically in KSP you start with the small lightweight diameter parts and then get big diameter parts as you get better tech. For engines that makes sense but for computers maybe it should go the other way around - you get the bulky heavy computers FIRST on the tech tree, and then graduate up to smaller, but more capable ones later. If we want to go with that, it might affect the artwork decisions which is why I put it out for discussion now. The way you\u0027d want to make the large diameter vs small diameter parts look might change depending on which ones you\u0027re envisioning as being the 1960\u0027s tech versus the 1980\u0027s tech.\u003C/p\u003E\u003Cp\u003EAnd a lot of people have been asking for a surface mounted computer too - maybe we can start giving those out high up the tech tree.\u003C/p\u003E\u003Cp\u003EAnyway, thanks for the work. This will be cool.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-04T07:45:08Z\u0022 title=\u002201/04/2015 07:45  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 4, 2015\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-05T05:36:05Z","Content":"\n\u003Cp\u003EPart variety is the main reason I posted and what I need your input for. I intend to make high quality parts (without going overboard), so there is a fairly natural limit to how many can be reasonably included. RAM space still is at a premium and, let us be honest, kOS is not played for its plethora of computer models. It is somewhat lucky that the \u003Cem\u003Econtrol\u003C/em\u003E segment in the parts list is not used that much, so cluttering up the parts list is a limited issue, though I do not imagine that is an invitation to go crazy in any case.\u003C/p\u003E\u003Cp\u003EWhat I would like to avoid is making extra parts just for the sake of the Tech Tree, especially if that means that newly unlocked parts supersede old ones in every way. In line with my \u003Cem\u003Etools, not solutions\u003C/em\u003E mantra I would like to come up with a set of parts that allows a user to employ kOS in a variety of situations, posing interesting engineering questions, imposing trade-offs and making sense as a whole in sandbox mode too. As KSP is a building game, I would like to challenge players to think about what unit they are going to use for what reasons. It is fine to take career mode into account while designing them, spreading them neatly across the spectrum, it is just that modelling the line-up after it does not seem like the way to go. I think all situations and types of players are accommodated that way.\u003C/p\u003E\u003Cp\u003EIt would certainly help the design and manufacture of these parts to have at least some idea of how that is going to be achieved. That way parts can reflect the properties they have, while at the same time providing further inspiration for their shape and form. It also allows me to address something that I have been looking at and and that Steven mentions in his post - making things recognizable, especially from the outside. Rocket design is, unfortunately, fairly limited when it comes to exteriors - they tend to be of a rather tubular disposition. I feel it is important parts fit neatly into a stack, so it is a matter of striking a balance between standing out and fitting in. How to do that I am really not too sure yet. I have been toying with the idea of maybe making subtle external (space) radiators a shared feature of all the parts (since the current internal heat sink looks pretty, but does not make a huge amount of sense), or using the current \u003Cem\u003Eblack with some white\u003C/em\u003E design as a basis. I would like to see parts that work well with both stock parts and the higher quality parts you typically see in RSS or other mods.\u003C/p\u003E\u003Cp\u003ECurrent vague plans for parts include three of them: \u003C/p\u003E\u003Cp\u003E- The current big computer.\u003C/p\u003E\u003Cp\u003E- A replacement for the current small part, though bigger than it is now. I am not sure the capabilities should be different.\u003C/p\u003E\u003Cp\u003E- A surface mounted model, about half or a third of a structural intake.\u003C/p\u003E\u003Cp\u003EI could see room for something like a model that is cheap, simple and not too capable that you might use in disposable craft, or maybe that should be combined with the surface mounted model.\u003C/p\u003E\u003Cp\u003EFinally, I think it is important to be clear about my level of commitment. After lining out the parts and identity I will at least make the part that comes closest to the current big kOS unit. What happens after that is dictated by how the process pans out and, more importantly, how much time I will have to work on this kind of stuff. I am starting a business in real life and that has to take precedent, and this project has a learning curve for me as I am new to this kind of modelling. Both are factors that will govern available time and actual production. Ideally I would create a small but useful set of kOS parts, as I am partial to the mod and love the idea of contributing to it myself \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-05T08:00:28Z\u0022 title=\u002201/05/2015 08:00  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 5, 2015\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-05T21:52:19Z","Content":"\n\u003Cp\u003EQuick sketch of the revision. Major change is the addition of space radiators to the outside, along with heatpipes from the computer to make that work. This should make the part more recognizable. I moved the battery from the side to the back, though I am a bit worried the symmetry will make the part a bit boring. The mounting brackets have been reshaped to theoretically allow the computer to slide out for maintenance. I feel everything makes a bit more sense now, though I am not too sure about the radiators yet.\u003C/p\u003E\u003Cp\u003EI played a bit with actually modelling things in Blender today and it is starting to make sense. I also figured out how to pass files back and forth from my CAD program to Blender and vice versa. Even with my limited understanding of Blender, that expands the possibilities exponentially.\u003C/p\u003E\u003Cp\u003ESorry for spamming your thread, I hope you do not mind. Or should I make a separate development thread?\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://tweakers.net/ext/f/RxEmqMxkyzSiXP64kxTj5uN9/full.png\u0022 alt=\u0022full.png\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-05T21:58:13Z\u0022 title=\u002201/05/2015 09:58  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 5, 2015\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"undercoveryankee","CreatedById":103505,"CreatedDateTime":"2015-01-05T23:13:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI will need to check the exact conditions of the license, but the work was pretty much intended for public distribution alongside the kOS software. If it would become part of the project, that would be great. My main concern is that is remains freely available and that it is properly attributed. I would also prefer that others cannot charge money for the work, but a quick scan of the GPL license seems to cover all those bases.\u003Cp\u003EWhat would be considered the sourcefiles in this case, the Blender files and textures?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAcross a couple of different license versions, the GPL has defined \u0022source\u0022 as \u0022the preferred form of the Work for making modifications to it\u0022 or similar language. So geometry in a format that\u0027s easy to open in a modeling tool (Blender format if that\u0027s what you\u0027ve been using is pretty easy; if you\u0027re like bac9 and do geometry in SketchUp before converting to a fancier tool for texturing, it wouldn\u0027t hurt to include the SketchUp files). Textures in whatever is your \u0022master\u0022 format that you would go back to if you wanted to change something, which would be a PSD/XCF if you\u0027re using editor features like layers that are lost when you go to a simpler format.\u003C/p\u003E\n"},{"CreatedByName":"postalbyke","CreatedById":114272,"CreatedDateTime":"2015-01-06T16:02:20Z","Content":"\n\u003Cp\u003EOn the kOS docs page, specifically\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://ksp-kos.github.io/KOS/bindings.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS/bindings.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI see the charts of bound variable names as a paragraph of text rather than as a table of variables. Respectfully request some attention be given to this matter.\u003C/p\u003E\u003Cp\u003EThank you very much for your hard work, and for the amazing update on the docs! You guys are awesome!\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-01-07T07:10:03Z","Content":"\n\u003Cp\u003EShould the kOS unit have a battery? Elsewhere there it a similar discussion on RCS and whether it should be contained within the command pods. I think it should not, as KSP is a building game and parts should be as modular as possible. This logically means that kOS units also should not have batteries. \u003C/p\u003E\u003Cp\u003EFrom a gameplay mechanics point of view there is one reason to add a little power and I suspect this is the reason the original ones do have it: when you launch a rocket you need a minimum of time to boot up the script you want to run, getting the engines running (and providing power). However, as most command modules do have a bit of power I feel this argument is moot, and one could always add a battery if needed.\u003C/p\u003E\u003Cp\u003EAnother question is whether the kOS unit speed is settable in the configuration. I know it can be done globally, but I do not see anything in the .cfg files. Is that right?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-07T08:05:53Z\u0022 title=\u002201/07/2015 08:05  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 7, 2015\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-07T23:43:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAnother question is whether the kOS unit speed is settable in the configuration. I know it can be done globally, but I do not see anything in the .cfg files. Is that right?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe speed is a global setting for all of kOS rather than being different per-part. This was mostly because it was pictured as being a matter of people tweaking kOS for their own gaming machine\u0027s capabilities. We can\u0027t easily settle on a number that works for everyone without having to really nerf it to be unnecessarily slow for the people with faster computers, so it became a config setting. Also it has a direct impact on animation framerate of the game, so there\u0027s also a matter of user preference - would you rather have a fast kOS CPU or a smooth animation experience? This makes it ironically that you might want to set it SLOWER on a faster computer, if your computer\u0027s speed is mostly due to GPU rather than CPU, otherwise it takes your otherwise fast GPU-bound framerate and turns it into a slower CPU-bound framerate as the framerate is held back by running so many kOS instructions per frame.\u003C/p\u003E\u003Cp\u003EMaybe it should be moved to depending on each part... but.... I\u0027m tempted to say that doing that will require a bit of an overhaul on how CONFIG:IPU even works in the first place.\u003C/p\u003E\u003Cp\u003EIt really should be tied to the universe\u0027s physical time more so than the animation framerate, if we want to simulate a slower or faster computer in the gameworld.\u003C/p\u003E\u003Cp\u003EA CONFIG:IPU of 150 on a machine that\u0027s getting a framerate of 30FPS is *literally* running the kOS script half as fast as one with the same CONFIG:IPU of 150 on a machine getting a framerate of 60FPS.\u003C/p\u003E\u003Cp\u003EI\u0027ve been thinking about interesting ways to have lower tech CPUS that run slower, but the above problem would have to be addressed first. As it is already, not everyone is *really* getting the same speeds out of their kOS CPUs.\u003C/p\u003E\n"}]}