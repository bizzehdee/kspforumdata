{"TopicId":76558,"ForumId":29,"TopicTitle":"Accessing KSPFields from other PartModules","CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2014-07-03T02:04:36Z","PageNum":1,"Articles":[{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2014-07-03T02:04:36Z","Content":"\n\u003Cp\u003ETrying to access a value in another partmodule, to do math to it. It\u0027s a public variable, also assigned as a persistent KSPField.\u003C/p\u003E\u003Cp\u003EProbably just my general noobiness in regards to C#, but how can I access it? Have tried:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Emyvariable = part.NameSpace.PartModuleName.variablename;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHowever, it doesn\u0027t seem to recognize any of those fields as being part of the Part object. Any help would be much-appreciated, thanks in advance!\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-07-03T02:29:00Z","Content":"\n\u003Cp\u003EYou need an actual instance of the target PartModule to work on. Say my PartModule is attached to a command pod and I want to know some info about the ModuleReactionWheel attached to it. Here are two ways to find a ModuleReactionWheel on the same part:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evar rw = part.Modules.OfType\u0026lt;ModuleReactionWheel\u0026gt;().Single();\u003Cbr\u003Erw = part.FindModulesImplementing\u0026lt;ModuleReactionWheel\u0026gt;().First();\u003Cbr\u003E\u003Cbr\u003EDebug.Log(string.Format(\u0022ypr torque: {0}, {1}, {2}\u0022, rw.YawTorque, rw.PitchTorque, rw.RollTorque));\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd since it\u0027s somewhat related, if I wanted to know about every ModuleReactionWheel on the vessel my part is attached to, you can easily find out with:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evessel.FindPartModulesImplementing\u0026lt;ModuleReactionWheel\u0026gt;()\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf it\u0027s possible that your target PartModule doesn\u0027t exist on your part, use [single/First]OrDefault() instead of Single/First() and check for null before trying to work on it.\u003C/p\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2014-07-03T02:48:43Z","Content":"\n\u003Cp\u003EI\u0027m not sure I follow all your steps...\u003C/p\u003E\u003Cp\u003ELet\u0027s say I want to access the magnetic field magnitude in the Interstellar mod (\u003Ca href=\u0022https://github.com/FractalUK/KSPInterstellar/blob/master/FNPlugin/DTMagnetometer.cs#L13-L14\u0022 rel=\u0022external nofollow\u0022\u003Esource\u003C/a\u003E):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[KSPField(isPersistant = false, guiActive = true, guiName = \u0022|B|\u0022)]\u003Cbr\u003E        public string Bmag;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd then add a field in my own PartModule, say, multiplying Bmag by 2 and placing it back on the part, the line in my code would look like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUsing FNPlugin;\u003Cbr\u003E//other stuff goes here\u003Cbr\u003Evar rw = part.Modules.OfType\u0026lt;DTMagnetometer\u0026gt;().Single();\u003Cbr\u003Erw = part.FindModulesImplementing\u0026lt;DTMagnetometer\u0026gt;().First();\u003Cbr\u003E\u003Cbr\u003E[KSPField(isPersistant = false, guiActive = true, guiName = \u0022|B|\u0022)]\u003Cbr\u003E        public string Bmag_times2;\u003Cbr\u003E\u003Cbr\u003E//inside an OnUpdate function:\u003Cbr\u003EBmag_times2 = rw.Bmag*2;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI must be missing something with this, since it\u0027s still throwing errors at me.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-03T02:52:26Z\u0022 title=\u002207/03/2014 02:52  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 3, 2014\u003C/time\u003E by Felger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-07-03T03:00:27Z","Content":"\n\u003Cp\u003EIs your PartModule attached to the magnetometer? If not then it won\u0027t be able to find the module. \u003C/p\u003E\u003Cp\u003EYou\u0027ll need to use \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Evessel.FindModulesImplementing\u0026lt;DTMagnetometer\u0026gt;().First();\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnother problem is that the field is a string, not a double/float. You\u0027ll need to convert the Bmag value back into a float before you can modify it.\u003C/p\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2014-07-03T03:40:48Z","Content":"\n\u003Cp\u003EYes, I\u0027m attaching the PartModule to the part with a ModuleManager config file.\u003C/p\u003E\u003Cp\u003EIn reality, the magnetometer was just an arbitrary example that was easy to find. I\u0027m trying to interface with Infernal Robotics and get some data on the robotics components themselves, which are available as public variables in the MuMechToggle PartModule.\u003C/p\u003E\u003Cp\u003EI\u0027m still confused, then. Is there a way to tell what the output of all of this stuff will be? IE, what kind of variable do I need to declare to correctly receive all this stuff on the right hand side of the equals sign? Will the output be a Part object? Maybe I need to start over and try to understand what the code is actually doing.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evar rw = part.Modules.OfType\u0026lt;ModuleReactionWheel\u0026gt;().Single();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Evar rw doesn\u0027t seem to be a valid variable declaration, what kind of variable do I need to set?\u003C/p\u003E\u003Cp\u003EI understand that \u0027part\u0027 needs to be the part object associated with the part we\u0027re attaching this PartModule to, but how do I get that?\u003C/p\u003E\u003Cp\u003EModules I\u0027ve found in the API, seems to return a list of modules installed on the part.\u003C/p\u003E\u003Cp\u003EOfType doesn\u0027t seem to be associated with Part.Modules, however System.Linq seems to have something on it, perhaps searching through the PartModule list for some a particular class.\u003C/p\u003E\u003Cp\u003EAnd I\u0027m not really sure what Single() does, besides its association with single-precision floats.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Erw = part.FindModulesImplementing\u0026lt;DTMagnetometer\u0026gt;().First();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOn the next line of code, it just seems to be implementing one method, FindModulesImplementing\u0026lt;\u0026gt;(), perhaps finding the first instance of that PartModule in the previously returned list?\u003C/p\u003E\u003Cp\u003ESorry for all the questions, I\u0027m very new to C#, and only middling at object oriented programming, still trying to wrap my head around everything.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-07-03T04:03:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evar rw = part.Modules.OfType\u0026lt;ModuleReactionWheel\u0026gt;().Single();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Evar rw doesn\u0027t seem to be a valid variable declaration, what kind of variable do I need to set?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Evar just infers the type based on the right-hand side. That line is equivalent to ModuleReactionWheel rw = part.Modules.OfType\u0026lt;ModuleReactionWheel\u0026gt;().Single();\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003EI understand that \u0027part\u0027 needs to be the part object associated with the part we\u0027re attaching this PartModule to, but how do I get that?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou inherit that from PartModule, along with a bunch of other stuff\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003EOfType doesn\u0027t seem to be associated with Part.Modules, however System.Linq seems to have something on it, perhaps searching through the PartModule list for some a particular class.\u003Cp\u003EAnd I\u0027m not really sure what Single() does, besides its association with single-precision floats.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s exactly what it does. part.Modules.OfType\u0026lt;ModuleReactionWheel\u0026gt;() returns an IEnumerable containing all ModuleReactionWheel instances found in part.Modules. Single() takes the first one, should there be more than one found\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Erw = part.FindModulesImplementing\u0026lt;DTMagnetometer\u0026gt;().First();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOn the next line of code, it just seems to be implementing one method, FindModulesImplementing\u0026lt;\u0026gt;(), perhaps finding the first instance of that PartModule in the previously returned list?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, that\u0027s just an alternative method. This line returns a List\u0026lt;DTMagnetometer\u0026gt; rather than IEnumerable. First() takes the first item in the list.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-07-03T04:04:19Z","Content":"\n\u003Cp\u003ENo it returns a list of all the partmodules of that type on the ship. The big problem here is that you will need to have a direct dependancy to the KSPI code and will need to refer the files as you build, you\u0027d mostly want to have soft dependencies in KSP unless really needed, and you\u0027ll have to learn to use reflection for that.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-07-03T04:19:01Z","Content":"\n\u003Cp\u003EActually, if you get lucky and want to get the value of a KSPField, KSP offers a work-around.\u003C/p\u003E\u003Cp\u003EI use the following method from my mod to check Davon\u0027s Thrust control for which throttle (0 though 5) an engine is assigned to.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif(part.Modules.Contains(\u0022DifferentialThrustEngineModule\u0022)) //Devon Throttle Control Installed?\u003Cbr\u003E                    {\u003Cbr\u003E                        foreach(PartModule pm in part.Modules) //should be a shorter way to do this, but a foreach cycle works\u003Cbr\u003E                        {\u003Cbr\u003E                            if (pm.moduleName==\u0022DifferentialThrustEngineModule\u0022) //find the desired partmodule, note we stay as type PartModule, we do not cast to DifferentialThrustEngineModule\u003Cbr\u003E                            {\u003Cbr\u003E                                DavonThrottleID = (float)pm.Fields.GetValue(\u0022throttleFloatSelect\u0022); //which throttle is engine assigned to? \u003Cbr\u003E                            }\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMake sure you design your code so that if the module is not found, your code does not break. \u003C/p\u003E\u003Cp\u003EAgain, this \u003Cem\u003Eonly\u003C/em\u003E works on KSPField values that are set to public, otherwise your options are a dependency or reflection as noted.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-07-03T04:27:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EAgain, this \u003Cem\u003Eonly\u003C/em\u003E works on KSPField values that are set to public, otherwise your options are a dependency or reflection as noted.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat thing works on reflection \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E Also, it might be important to note that your KSPFields /need/ to be public. Just as well as KSPEvents and KSPActions\u003C/p\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2014-07-04T03:22:05Z","Content":"\n\u003Cp\u003ETrying Diazo\u0027s code, that worked for me, changing thusly:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E            if (part.Modules.Contains(\u0022MuMechToggle\u0022)) //Devon Throttle Control Installed?\u003Cbr\u003E            {\u003Cbr\u003E                foreach (PartModule pm in part.Modules) //should be a shorter way to do this, but a foreach cycle works\u003Cbr\u003E                {\u003Cbr\u003E                    if (pm.moduleName == \u0022MuMechToggle\u0022) //find the desired partmodule, note we stay as type PartModule, we do not cast to DifferentialThrustEngineModule\u003Cbr\u003E                    {\u003Cbr\u003E                        rotation = (float)pm.Fields.GetValue(\u0022rotation\u0022); //which throttle is engine assigned to? \u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETinkering with xEvilReeperx\u0027s method, I finally got it happy-ish (not really sure what I was doing wrong, but came home from work today tried again and it\u0027s more or less happy).\u003C/p\u003E\u003Cp\u003ERunning in the same scope as Diazo\u0027s code, \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E            var rw = part.FindModulesImplementing\u0026lt;MuMechToggle\u0026gt;().First();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EGives an error on MuMechToggle (Infernal Robotic\u0027s module that does the robotics-ing), saying it can\u0027t find the module even though I\u0027m using InfernalRobotics; and MuMechToggle is a public class.\u003C/p\u003E\u003Cp\u003EIs there some way around this? As I\u0027m also going to be looking to grab other things from MuMechToggle, like the functions to move the gimbals, and EvilReeper\u0027s solution seems much simpler / more elegant.\u003C/p\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2014-07-04T03:23:44Z","Content":"\n\u003Cp\u003EOn that note, Stupid_Chris, is there a reference you can point me at where I can teach myself how to use reflection? What I\u0027ve found with basic googling doesn\u0027t seem all that related to what I\u0027m trying to do, but I\u0027ll keep looking.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-07-04T04:18:42Z","Content":"\n\u003Cp\u003EIs that your exact code? Assuming you added a reference to IR in your project (and it sounds like you have), you\u0027ll find MuMechToggle in MuMech, not InfernalRobotics. So, something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing MuMech;\u003Cbr\u003E\u003Cbr\u003E[...inside some object]\u003Cbr\u003Evar mmt = part.FindModulesImplementing\u0026lt;MuMechToggle\u0026gt;().First();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr you can skip the using and specify it directly:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evar mmt = part.FindModulesImplementing\u0026lt;MuMech.MuMechToggle\u0026gt;().First();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2014-07-04T04:29:25Z","Content":"\n\u003Cp\u003EI love the \u0022I\u0027m a dummy\u0022 parts of coding, it means I\u0027m learning!\u003C/p\u003E\u003Cp\u003ECan\u0027t believe I didn\u0027t try to add a \u0027using MuMech;\u0027, but that\u0027s solved it, thanks!\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-07-04T21:24:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003EOn that note, Stupid_Chris, is there a reference you can point me at where I can teach myself how to use reflection? What I\u0027ve found with basic googling doesn\u0027t seem all that related to what I\u0027m trying to do, but I\u0027ll keep looking.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI learned using the windows documents, I prefer self-teaching. Else if google didn\u0027t reveal anything else useful I wouldn\u0027t know where to look. Reflection is /hard/.\u003C/p\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2014-07-04T21:25:27Z","Content":"\n\u003Cp\u003EFair enough, I\u0027m way back at the start of the self-teaching part for C#.\u003C/p\u003E\n"}]}