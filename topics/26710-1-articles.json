{"TopicId":26710,"ForumId":34,"TopicTitle":"[0.20.2] Resource Generation Module (0.28)","CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2013-05-13T19:30:59Z","PageNum":1,"Articles":[{"CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2013-05-13T19:30:59Z","Content":"\n\u003Cp\u003ESimply put, adds a \u0022ResGen\u0022 module to the game that can be attached to any Part to turn it into Resource Generator / Consumer / Converter which can be fully configured in the Part.cfg file.\u003C/p\u003E\u003Cp\u003EIt \u0022looks ahead\u0022 before trying to consume anything and adjusts consumption / generation accordingly.\u003C/p\u003E\u003Cp\u003EDon\u0027t really know where I\u0027m going with this, have a few ideas (such as adding \u0022Sunlight\u0022 as a \u0022Hidden Resource,\u0022) but... I think it\u0027ll mostly end up being \u0022Theme and Variation\u0022 (i.e. ResGenCrewMult, ResGenExponential)\u003C/p\u003E\u003Cp\u003EVersion 0.1,\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EInitial Release, Proof of Concept.\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.11\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EJust a few final source cleanups (and a small memory leak).\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.2\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded \u0022Hidden Resources (extreme alpha)\u0022; made ResGen.Module polymorphic for simplified editing\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EThe \u0022ResGen.Sunlight\u0022 does NOT PROPERLY WORK. (The RayCast never returns false) but the interaction between resource / ResGen.Module is what I am documenting.\u003C/span\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.21\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003ESource Cleanup and fixed a really dumb bug\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.22\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EI now have \u0022ResGen.Sunlight\u0022 operating without a large performance hit and somewhat accurately\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EHidden Resource system is still fairly weak and it is only using an \u0022on / off\u0022 system (or hacking in local variables)\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.23\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EFinished up most of the Hidden Resource system for now;\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Resources will now use the ConfigNode system to store / pass information\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Did some theme / variations while I was at it:\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Added in \u0022ResGen.PartCrew\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cdiv\u003E INPUT: returns \u0022PartCrew Count\u0022\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cdiv\u003E OUTPUT: returns \u0022PartCrew Capacity - Count\u0022\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGen.VesselCrew\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E INPUT: returns \u0022VesselCrew Count\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E OUTPUT: returns \u0022VesselCrew Capacity - Count\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGen.AtmosphereHasOxygen\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E INPUT: returns \u00225\u0022 if oxygen is in the atmosphere\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGen.AtmosphericOxygen\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E INPUT: returns \u0022Atmospheric Density\u0022 if oxygen is in the atmosphere\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGen.Sunlight\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E INPUT: returns \u00225\u0022 if the part is visible to the sun.\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGen.PlanetWater\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E INPUT: returns \u00225\u0022 if the vessel is \u0022Spashed\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGen.GeeForce\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E INPUT: returns the geeForce\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGen.Explode\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E OUTPUT: well, will explode the part unless the inputs prohibit it\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGen.OnPlanet\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E requires a field \u0022planet = name\u0022 in the resource listing.\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E INPUT: Returns 5 if the code works and you are on said planet.\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGenMultVesselCrew\u0022:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Resource Generation Module: the rate is multiplied by the total crew\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGenDivVesselCrew\u0022:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Resource Generation Module: the rate is divided by the total crew\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGenMultPartCrew\u0022:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Resource Generation Module: the rate is multiplied by the part crew\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Added in \u0022ResGenDivPartCrew\u0022:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Resource Generation Module: the rate is divided by the total crew\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.24\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E 0.20.2 Compatibility\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Merged \u0022ResGen_Example\u0022 with \u0022ResGen\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Added in \u0022BADINPUT\u0022 and \u0022BADOUTPUT\u0022 they replace the \u0022INPUT / OUTPUT\u0022 resources when there is not enough \u0022INPUT\u0022 resources.\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Added in \u0022ResGen.KillVesselCrew\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Added in \u0022ResGen.KillPartCrew\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Added in \u0022ResGen.KillKerbalInVessel\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E Added in \u0022ResGen.KillKerbalInPart\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVerison 0.25\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in \u0022ResGen.Timer\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003Euse \u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EINPUT {\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003Ename = ResGen.Timer\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003Erate = 1\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EsetTime = 5\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E}\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003Etimer is in seconds\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EModified \u0022ResGen.KillKerbalInVessel\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003ENow has a \u0022setTime\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EModified \u0022ResGen.KillKerbalInPart\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003ENow has a \u0022setTime\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.26\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EBug fix for timewarp on hidden resources (Previously, the slower you went, the more you got). Hidden Resources with flat rates (sunlight, hasAtmosphere) now return \u0022TimeWarp.CurrentRate (i.e. 50x)\u0022\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.27\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in \u0022ELSE\u0022 node, offering a one way conditional switch if inputs are not met.\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EVersion 0.28\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in ResGen.Temperature (For what it is worth... which is very little)\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in GlobalVar\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in GlobalSet\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in GlobalIsGreater\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in GlobalIsLess\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in LocalVar\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in LocalSet\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in LocalIsGreater\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003EAdded in LocalIsLess\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIncludes DLL / Source / Documentation\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/s/bv0icue80hj4t71/ResGen.zip\u0022 rel=\u0022external nofollow\u0022\u003EDownload\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-13T22:24:31Z\u0022 title=\u002206/13/2013 10:24  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 13, 2013\u003C/time\u003E by Fel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"White Owl","CreatedById":10849,"CreatedDateTime":"2013-05-13T20:00:52Z","Content":"\n\u003Cp\u003EOkay, I can imagine several potential uses for this. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Scotius","CreatedById":57622,"CreatedDateTime":"2013-05-14T03:28:06Z","Content":"\n\u003Cp\u003EMe too. Parts to actively gather oxidiser from the air on Kerbin and Laythe. Use tanks of oxidiser (from KSPX mod for example) in life support system. Conversion of water into liquid fuel and oxidiser on Kerbin, Laythe, maybe Eve. If ice can be added as a resource we could mine it on Minmus and Eeloo for lf/oxy combo etc.\u003C/p\u003E\n"},{"CreatedByName":"GreenWolf","CreatedById":65798,"CreatedDateTime":"2013-05-14T04:55:03Z","Content":"\n\u003Cp\u003EWould it be possible for me to use this plugin in my mod? It would save me a lot of time creating the electrolysis unit I have in mind.\u003C/p\u003E\n"},{"CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2013-05-15T16:49:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022GreenWolf\u0022 data-cite=\u0022GreenWolf\u0022\u003E\u003Cdiv\u003EWould it be possible for me to use this plugin in my mod? It would save me a lot of time creating the electrolysis unit I have in mind.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESure, right now (for 0.2) I\u0027ve turned ResGen into a polymorphic structure allowing me (or others) to very easily add additional modules.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic class ResGenWithButton : ResGen.Module {\u003Cbr\u003E\tprivate bool toggle = false;\u003Cbr\u003E\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Toggle\u0022)]\u003Cbr\u003E\tpublic void Toggle() {\u003Cbr\u003E\t\ttoggle = !toggle;\u003Cbr\u003E\t}\u003Cbr\u003E\tprotected override void initRate(ref double delta) {\u003Cbr\u003E\t\tif (toggle)\tdelta = 0;\u003Cbr\u003E\t\telse\t\tdelta *= rate;\u003Cbr\u003E\t}\u003Cbr\u003E\tprotected override void getFRate(ref double delta, ResDat resi) {\u003Cbr\u003E\t\tdelta *= resi.rate;\u003Cbr\u003E\t}\u003Cbr\u003E\tprotected override void getRRate(ref double delta, ResDat resi) {\u003Cbr\u003E\t\tdelta /= resi.rate;\u003Cbr\u003E\t}\u003Cbr\u003E\tprotected override void stoFRate(ref double delta, ResDat resi) {\u003Cbr\u003E\t\tdelta *= resi.rate;\u003Cbr\u003E\t}\u003Cbr\u003E\tprotected override void stoRRate(ref double delta, ResDat resi) {\u003Cbr\u003E\t\tdelta /= resi.rate;\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EDocumentation:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EStoForwardRate\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EStoReverseRate\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EI decided that, by thinking 30 steps ahead, there is no reason that you should NEED to \u0022Recharge\u0022 at the same rate that you \u0022Drain.\u0022 The expensive part is the function call, so I figured I might as well add in the additional two.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EAdditionally, if delta=0 most routines will quit. This can occur naturally (such as having a full tank (OUTPUT) or having an empty tank (INPUT)) so it is exploiting \u0022good programming\u0022 to add in an additional feature.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe biggest focus has been getting \u0022Hidden Resources\u0022 to work the way I want them to...\u003C/p\u003E\u003Cp\u003EI am mirroring KSP\u0027s own resource system a bit; and if I get the thing working I\u0027ll probably rewrite more of it to more precisely mirror it. (Right now I merged PartResource with PartResourceDefinition and have PartResourceLibrary doing silly things)\u003C/p\u003E\u003Cp\u003EI also went and looked up a fair bit on Reflection... I don\u0027t exactly understand how KSP manages to ignore namespaces; but Type.GetType() works well enough (and avoids the awful bugs of \u0022Whose Class do I Pick\u0022)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Enamespace ResGen_Example {\u003Cbr\u003Epublic class Sunlight : ResGen.Resource {\u003Cbr\u003E\tpublic override double amount\t\t{ get {\u003Cbr\u003E\t\tbool temp = Physics.Raycast(part.orgPos, Planetarium.fetch.Sun.position);\u003Cbr\u003E\t\tif (temp) \t\tMonoBehaviour.print(\u0022ResGen: Sun Hit\u0022);\u003Cbr\u003E\t\telse\t\t\tMonoBehaviour.print(\u0022ResGen: Sun Missed\u0022);\u003Cbr\u003E\t\treturn (temp) ? 50 : 0; } }\u003Cbr\u003E\tprotected override double RequestResource_Out(double demand) {\u003Cbr\u003E\t\treturn 0;\u003Cbr\u003E\t}\u003Cbr\u003E\tprotected override double RequestResource_In(double demand) {\u003Cbr\u003E\t\treturn 0;\u003Cbr\u003E\t}\u003Cbr\u003E\tpublic Sunlight() {}\u003Cbr\u003E}}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EDocumentation:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EEverything that PartResourceDefinition has is included, can be \u0022get\u0022 publicly, and \u0022set\u0022 is protected (so you can do it). They\u0027re all over-ridable so (again, 30 steps ahead) things can get really complicated as to how resources are handled.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003ERequestResource is defined in the base class, and is also over-ridable; but it effectively is just \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E public virtual double RequestResource(double demand) {\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E return (demand \u0026gt; 0) ? RequestResource_Out(demand)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E : RequestResource_In (demand);\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E }\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E*** Although, I might abandon that due to simplicity... I just wanted people to understand that you NEED to account for both ends \u0022OUTPUT and INPUT\u0022\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAdds a hidden resource of \u0022ResGen_Example.Sunlight.\u0022\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EI also have this include a monobehaviour and each part has their own ResGen.Resource (Mirror of PartResource) which allows the writer to do Part / Vessel specific calculations... or use \u0022OnUpdate\u0022 to do fun stuff....\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EBut the code... is refusing... to call RequestResource \u003C/span\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_angry.gif\u0022 alt=\u0022:mad:\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E*Let alone that I have no idea about the Unity API and am probably going to abandon the monobehaviour until I get the core finished... just thinking 30 steps ahead.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E*Final Note To Self:\u003C/p\u003E\u003Cp\u003EStop thinking 30 steps ahead... then MISSING what you created at step 1. \u003C/p\u003E\u003Cp\u003EHidden Resources are currently gimped (but operate); what I was doing ignored other potential problems anyways and needs a rewrite.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-05-15T22:15:01Z\u0022 title=\u002205/15/2013 10:15  PM\u0022 data-short=\u002211 yr\u0022\u003EMay 15, 2013\u003C/time\u003E by Fel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"rosenkranz","CreatedById":57152,"CreatedDateTime":"2013-05-16T18:11:44Z","Content":"\n\u003Cp\u003Ehow does this differ from the stock generator module? I believe you can have inputs and outputs.\u003C/p\u003E\n"},{"CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2013-05-16T23:30:47Z","Content":"\n\u003Cp\u003EExtensibility.\u003C/p\u003E\u003Cp\u003EThe polymorphic structure allows for light task specific Modules. (So technically, I\u0027m not as heavy as ModuleGenerator because I only do what I need to... but I can add in much more.)\u003C/p\u003E\u003Cp\u003EFurthermore, the main focus is about \u0022Hidden Resources\u0022 which are also designed to be an extremely extensible way of introducing any game variable as a resource. (And it isn\u0027t even tied to the DLL which allows anyone to add their own \u0022Hidden Resource\u0022, or remove it later on.)\u003C/p\u003E\n"},{"CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2013-05-18T05:28:22Z","Content":"\n\u003Cp\u003EAnd... I have no clue what I should do with this now.\u003C/p\u003E\n"},{"CreatedByName":"mbrx","CreatedById":66821,"CreatedDateTime":"2013-05-19T22:31:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fel\u0022 data-cite=\u0022Fel\u0022\u003E\u003Cdiv\u003EAnd... I have no clue what I should do with this now.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHi, this seems like an \u003Cstrong\u003Eawesome\u003C/strong\u003E mod that I think can have very many potentials for building up an economy in KSP for resources. Ie. producing raw materials, processing them to materials needed for flight (fuel) and materials needed by the various life support mods (eg. mining for materials needed to fill up a hydroponics plant needing the hidden variable sunlight, carbon dioxide and heating/electricity before producing food \u0026amp; oxygen). \u003C/p\u003E\u003Cp\u003EWhat would be missing to make such an economy slightly more complex would be more of your hidden variables, most notably I would like to see hidden variables that can represent useful inputs for mining purposes. Three examples of variables that would be useful for that would be:\u003C/p\u003E\u003Cp\u003E1. A noise function that can be used to determine the precense of a given raw material (eg. like for the kethane mod). It should map the crafts current latitude and longitude to an input using perlin noise (or even better, simplex noise - which already is implemented in KSP in the class SimplexNoise, with octaves, persistance and frequency as parameters. I would suggest making these parameters available to the part-making user in order to tweak the frequency and size of the areas that have resources. \u003C/p\u003E\u003Cp\u003E2. Hidden variables for ground altitude (eg. altitude below or close to sea level can be used for mining water on water based planets). \u003C/p\u003E\u003Cp\u003E3. Hidden variables for closenes to specific parts of a planet. (eg. ice can be mined on Duna when close to the poles). \u003C/p\u003E\u003Cp\u003EIf you would like to implement something like this for your mod it would be awesome. If not, i wonder if you would mind if I pick apart your code and try to do something similar otherwise? (What license do you give to the code - GPL?)\u003C/p\u003E\n"},{"CreatedByName":"devanmedrow","CreatedById":15850,"CreatedDateTime":"2013-05-27T15:48:41Z","Content":"\n\u003Cp\u003EDo you have in your plugin or do you know how to kill the Kerbals one by one. or also make the craft uncontrollable? So when they run out of air... Dead.\u003C/p\u003E\u003Cp\u003EI\u0027m setting up life support now with this plugin. this would make this plugin so much better.\u003C/p\u003E\n"},{"CreatedByName":"Taverius","CreatedById":11815,"CreatedDateTime":"2013-05-29T21:41:52Z","Content":"\n\u003Cp\u003EThis looks awesome! I tried using it for v3.0 of the B9 pack, as I had a use for a smart generator, but even when compiled with the 0.20 references I couldn\u0027t get it work.\u003C/p\u003E\u003Cp\u003EIt would be awesome if you post an updated version that works in 0.20.1 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2013-05-31T21:12:09Z","Content":"\n\u003Cp\u003EOkay, I\u0027ll see where the problems lie.\u003C/p\u003E\u003Cp\u003E/Add in kerbal killing\u003C/p\u003E\u003Cp\u003ESuccessful test on regular resources... so not much was broken.\u003C/p\u003E\u003Cp\u003EAdded in \u0022BADINPUT\u0022 and \u0022BADOUTPUT\u0022, triggered when the \u0022INPUT\u0022 list cannot supply said inputs (i.e. Oxygen for Lifesupport)\u003C/p\u003E\u003Cp\u003EDid a few tests to see if I could do some code improvements.\u003C/p\u003E\u003Cp\u003EFixed a long existing but that I never really noticed because I never tested for it.\u003C/p\u003E\u003Cp\u003EI think I need some form of timer to \u0022kill kerbals 1 by 1\u0022\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-01T00:37:42Z\u0022 title=\u002206/01/2013 12:37  AM\u0022 data-short=\u002211 yr\u0022\u003EJune 1, 2013\u003C/time\u003E by Fel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-05-31T21:45:56Z","Content":"\n\u003Cp\u003ECould this be used to make a compressor for RCS fuel? I know true RCS is not compressed atmospheric gas, but for a VTOL it does not make a lot of sense to carry a finite amount of RCS fuel around when you can quite easily compress it on the spot.\u003C/p\u003E\n"},{"CreatedByName":"Taverius","CreatedById":11815,"CreatedDateTime":"2013-05-31T22:04:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003ECould this be used to make a compressor for RCS fuel? I know true RCS is not compressed atmospheric gas, but for a VTOL it does not make a lot of sense to carry a finite amount of RCS fuel around when you can quite easily compress it on the spot.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s kind of why I\u0027d like to use it.\u003C/p\u003E\u003Cp\u003ECurrently the B9 3.0 VTOL-RCS uses air and electricity to make B9CompressedAir, and that works fine, but the generator must be manually turned on (most convenient is to attach it to the RCS special action group) and its always drawing IntakeAir and ElectricCharge even when its tank is full.\u003C/p\u003E\u003Cp\u003EFel, the resource is flowMode = NO_FLOW and transfer = NONE, density 0.01, and there\u0027s a small (0.1) size tank in each RCS port along with the generator.\u003C/p\u003E\n"},{"CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2013-06-01T01:14:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Taverius\u0022 data-cite=\u0022Taverius\u0022\u003E\u003Cdiv\u003EFel, the resource is flowMode = NO_FLOW and transfer = NONE, density 0.01, and there\u0027s a small (0.1) size tank in each RCS port along with the generator.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh, I see... I thought you were talking about force transferring resources; which brings up an interesting discussion\u003C/p\u003E\u003Cp\u003E*** Was Writing This ***\u003C/p\u003E\u003Cp\u003EOkay, so I can walk the vessel at load and verify that the Part Count has not changed (It is fairly simple to check if a part is still on the vessel; so just need to know if you docked or something.)\u003C/p\u003E\u003Cp\u003EBut actually, this can get complicated.\u003C/p\u003E\u003Cp\u003EA) Do I drain from first available or all at once (Probably want a flag for that)\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E If draining all at once, do I drain by percentage, or by value? (Another flag, I guess XD)\u003C/p\u003E\u003Cp\u003EC) If draining by value, what do I do about imbalances? (Say that x tank goes empty, should I keep draining or stop)\u003C/p\u003E\u003Cp\u003E*** End Writing ***\u003C/p\u003E\u003Cp\u003EThe more I think about it, you could do some \u0022interesting things\u0022 by changing how things get transfered; Let\u0027s say you attach the generator to an engine and say \u0022INPUT (Fuel) OUTPUT (Fuel)\u0022; hence overriding the default \u0022RequestResource\u0022 and allowing you to change how the fuel is distributed.\u003C/p\u003E\u003Cp\u003EOf course, I am making my own grave by suggesting this... the problem isn\u0027t finding the resources, it is the algorithms dictating their flow.\u003C/p\u003E\n"},{"CreatedByName":"devanmedrow","CreatedById":15850,"CreatedDateTime":"2013-06-01T02:58:31Z","Content":"\n\u003Cp\u003Eyes a timer code would be good\u003C/p\u003E\u003Cp\u003ETimer(Name, 0, 2, 50, 30, 00) \u003C/p\u003E\u003Cp\u003E 0= first number left to right (H,M,S) 2=number of units to show ((1=50H)(3=50H:30M:00S)(1, 2=30M:00S)) 50=hours 30=minutes 00=seconds\u003C/p\u003E\u003Cp\u003EStarttimer(Name) start timer count down\u003C/p\u003E\u003Cp\u003EPausetimer(Name) stop and hold count down\u003C/p\u003E\u003Cp\u003EResettimer(Name) reset count down back to fist settings\u003C/p\u003E\u003Cp\u003EDisplaytimer(Name, Text) display a small pop-up window or a line in the right click menu (Text= what title you see on the counter)\u003C/p\u003E\u003Cp\u003EAlerttimer(Name, 00, 10, 00) Maybe add an alert timer setting to slow down warp speed and flash the color of the displayed timer when time hits 00H:10M:00S\u003C/p\u003E\u003Cp\u003EYou could set several timers and when the time hits 0 {} the code in the brackets is run. Some timers would not show, they would just run in the back ground and some would be displayed. You could also add one more setting to the timer up/down count. Start count at zero or count down to zero.\u003C/p\u003E\u003Cp\u003EWhen your O2 tanks are empty timer1, timer2, \u0026amp; timer3 starts. When time1 stops kill 1 kerbal when timer2 stops kill 1 kerbal when timer3 stops kill the last kerbal. Only timer3 was displayed.\u003C/p\u003E\n"},{"CreatedByName":"Taverius","CreatedById":11815,"CreatedDateTime":"2013-06-01T16:33:29Z","Content":"\n\u003Cp\u003EWorking nice Fel, though I did notice that the global rate = does nothing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"KhaosCorp","CreatedById":61149,"CreatedDateTime":"2013-06-01T19:41:41Z","Content":"\n\u003Cp\u003Ehahaha, this is not what i thought it was\u003C/p\u003E\n"},{"CreatedByName":"Curs0r","CreatedById":60051,"CreatedDateTime":"2013-06-01T21:51:19Z","Content":"\n\u003Cp\u003EA stylistic note on the readme file; I had to dig into the actual .cs file to find the isActive setting.\u003C/p\u003E\u003Cp\u003EI was very intrigued by the ResGen.Explode resource. I immediately tried to make a self-destruct device out of it. I see in the code though that the explosion is limited to the individual part. Could this be changed to allow for some calculated blast power? It might be more fun to vaporize my obsolete stations and ships rather than crash them or end their flight. If so I will have a modeler friend collaborate on a new set of \u0022Kerbam! Self Destruct Devices\u0022 as an addon part for the spaceport. That is, with your permission to use this nifty plugin for that purpose.\u003C/p\u003E\n"},{"CreatedByName":"sephirotic","CreatedById":53469,"CreatedDateTime":"2013-06-02T01:05:36Z","Content":"\n\u003Cp\u003EI used to play with a similar modified part i created back in 18.4 that created Oxidizer and Fuel with Eletrical Energy. I used it in DUNA\u0027s ice cape, Vall surface and Close to oceans in Eve and Laythe (yes i know Eve\u0027s ocean isn\u00C3\u201A\u00C2\u00B4t water), so it wouldn\u00C3\u201A\u00C2\u00B4t feel as \u0022cheating\u0022. It would be nice if the game added a \u0022zone\u0022 in planets with explorabe resources like water and methane witch could be converted to H2 and O2 with parts similar as this mod.\u003C/p\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2013-06-05T02:50:06Z","Content":"\n\u003Cp\u003ETried the following (for use with Ioncross), but no resources get transformed. Any ideas?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPART\u003Cbr\u003E{\u003Cbr\u003E// --- general parameters ---\u003Cbr\u003Ename = crewSupportHydroponics\u003Cbr\u003Emodule = Part\u003Cbr\u003E\u003Cbr\u003EMODEL\u003Cbr\u003E{\u003Cbr\u003E   model = Squad/Parts/Command/cupola/model\u003Cbr\u003E   texture = Squad/Parts/Command/cupola/model000\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E// --- node definitions ---\u003Cbr\u003E// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z\u003Cbr\u003Enode_stack_bottom = 0.0, -0.4, 0.0, 0.0, 1.0, 0.0, 2\u003Cbr\u003Enode_stack_top = 0.0, 0.83, 0.0, 0.0, 1.0, 0.0, 1\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- editor parameters ---\u003Cbr\u003Ecost = 2000\u003Cbr\u003Ecategory = Utility\u003Cbr\u003Esubcategory = 0\u003Cbr\u003Etitle = Green Thumb Hydroponics Pod\u003Cbr\u003Emanufacturer = Jebediah Kerman\u0027s Junkyard and Spaceship Parts Co.\u003Cbr\u003Edescription = todo\u003Cbr\u003E// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003Cbr\u003EattachRules = 1,0,1,1,0\u003Cbr\u003E\u003Cbr\u003E// --- standard part parameters ---\u003Cbr\u003Emass = 4.5\u003Cbr\u003EdragModelType = default\u003Cbr\u003Emaximum_drag = 0.40\u003Cbr\u003Eminimum_drag = 0.40\u003Cbr\u003EangularDrag = 4\u003Cbr\u003EcrashTolerance = 8\u003Cbr\u003EmaxTemp = 800\u003Cbr\u003E\u003Cbr\u003EvesselType = Base\u003Cbr\u003E\u003Cbr\u003ERESOURCE\u003Cbr\u003E{\u003Cbr\u003E\tname = Oxygen\u003Cbr\u003E\tamount = 50\u003Cbr\u003E\tmaxAmount = 100\t\u003Cbr\u003E}\u003Cbr\u003ERESOURCE\u003Cbr\u003E{\u003Cbr\u003E\tname = CarbonDioxide\u003Cbr\u003E\tamount = 50\u003Cbr\u003E\tmaxAmount = 100\u003Cbr\u003E}\u003Cbr\u003ERESOURCE\u003Cbr\u003E{\u003Cbr\u003E\tname = Snacks\u003Cbr\u003E\tamount = 0\u003Cbr\u003E\tmaxAmount = 30\u003Cbr\u003E}\u003Cbr\u003ERESOURCE\u003Cbr\u003E{\u003Cbr\u003E\tname = ElectricCharge\u003Cbr\u003E\tamount = 10\u003Cbr\u003E\tmaxAmount = 10\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ResGen\u003Cbr\u003E\tupdate = 1\u003Cbr\u003E\u003Cbr\u003E\tINPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ResGen.Sunlight\u003Cbr\u003E\t\trate = 1\u003Cbr\u003E\t}\u003Cbr\u003E\tINPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = CarbonDioxide\u003Cbr\u003E\t\trate = .001\u003Cbr\u003E\tOUTPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Oxygen\u003Cbr\u003E\t\trate = .001\u003Cbr\u003E\t}\u003Cbr\u003E\tOUTPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Snacks\u003Cbr\u003E\t\trate = .0001\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tBADINPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ElectricCharge\u003Cbr\u003E\t\trate = .12\u003Cbr\u003E\t}\u003Cbr\u003E\tBADINPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = CarbonDioxide\u003Cbr\u003E\t\trate = .0001\u003Cbr\u003E\tBADOUTPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Oxygen\u003Cbr\u003E\t\trate = .0001\u003Cbr\u003E\t}\u003Cbr\u003E\tBADOUTPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Snacks\u003Cbr\u003E\t\trate = .00001\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2013-06-05T04:08:16Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ResGen\u003Cbr\u003E\tupdate = 1\u003Cbr\u003E\u003Cbr\u003E\tINPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ResGen.Sunlight\u003Cbr\u003E\t\trate = 1\u003Cbr\u003E\t}\u003Cbr\u003E\tINPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = CarbonDioxide\u003Cbr\u003E\t\trate = .001\u003Cbr\u003E[B]\t}[/B]\u003Cbr\u003E\tOUTPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Oxygen\u003Cbr\u003E\t\trate = .001\u003Cbr\u003E\t}\u003Cbr\u003E\tOUTPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Snacks\u003Cbr\u003E\t\trate = .0001\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tBADINPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ElectricCharge\u003Cbr\u003E\t\trate = .12\u003Cbr\u003E\t}\u003Cbr\u003E\tBADINPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = CarbonDioxide\u003Cbr\u003E\t\trate = .0001\u003Cbr\u003E[B]\t}[/B]\u003Cbr\u003E\tBADOUTPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Oxygen\u003Cbr\u003E\t\trate = .0001\u003Cbr\u003E\t}\u003Cbr\u003E\tBADOUTPUT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Snacks\u003Cbr\u003E\t\trate = .00001\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI will say... I am absolutely horrible at keeping documentation, so if I did that, I\u0027m sorry \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003EAlso, I\u0027ll spend some love here; tomorrow (Well, I have some things I should do then...) so if this does turn out to be a bug I\u0027ll fix it / try and take care of remaining requests.\u003C/p\u003E\u003Cp\u003EJust got caught up in the KerbalEVA Lifesupport that... no one wants \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003E*I fixed the only bug I could find here... everything else is just those missing brackets.\u003C/p\u003E\u003Cp\u003E***Also, having a bit of trouble spawning a larger explosion, other likely candidate are the \u0022Detonator Classes\u0022... not exactly certain how that will turn out.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-05T21:33:12Z\u0022 title=\u002206/05/2013 09:33  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 5, 2013\u003C/time\u003E by Fel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"devanmedrow","CreatedById":15850,"CreatedDateTime":"2013-06-07T05:28:50Z","Content":"\n\u003Cp\u003EI thank you for adding in the kill commands.\u003C/p\u003E\u003Cp\u003EOne more request. (Unless you can do this already)\u003C/p\u003E\u003Cp\u003Eif then MODULE.\u003C/p\u003E\u003Cp\u003EIF resource \u0022Heat\u0022 in this part is \u0026lt; \u0022number\u0022 then (you could also have it look for the first crew module, fuel tank, solar panle, or any name = \u0022\u0022)\u003C/p\u003E\u003Cp\u003EMODULE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = ResGen\u003C/p\u003E\u003Cp\u003E update = 1\u003C/p\u003E\u003Cp\u003E INPUT\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = ElectricCharge\u003C/p\u003E\u003Cp\u003E rate = .001\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E OUTPUT\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = Heat\u003C/p\u003E\u003Cp\u003E rate = .001\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E OUTPUT\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = Heat\u003C/p\u003E\u003Cp\u003E rate = .0001\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E BADOUTPUT\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = Heat\u003C/p\u003E\u003Cp\u003E inmodule = CommandPod\u003C/p\u003E\u003Cp\u003E Value \u0026gt;= 75.000\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003Ethe badoutput looks for resource Heat in the first CommandPod (or any other module type) up the part chain. if it finds one it looks at the value there. if its 75 or grater it stops the ResGen from making any more. I would also like to be able to set a slow drop in that resource. If the commandPod drops temp to low you can\u0027t control it anymore, if it stays that low to long Kerbals die, and if it gets to hot it kills Kerbals or blows up the part. \u003C/p\u003E\u003Cp\u003EThis would be used for making heat generators (or coolant unit) that i could connect inline or on the side and have it feed one resource from its self to another part.\u003C/p\u003E\u003Cp\u003EA heater would keep the crew worm \u003C/p\u003E\u003Cp\u003EA coolant unit would pull heat out of a generator so the generator doesn\u0027t get to hot.\u003C/p\u003E\u003Cp\u003EI could set both of the parts to have a heat image just like the rockets. That would be a kool site. Your space station on the dark side of the plaint with this glowing fines on the side of it.\u003C/p\u003E\n"},{"CreatedByName":"ahd1601","CreatedById":60223,"CreatedDateTime":"2013-06-10T03:21:08Z","Content":"\n\u003Cp\u003Ewhy is this not more popular?\u003C/p\u003E\u003Cp\u003Ei love this plugin, thank you!\u003C/p\u003E\n"},{"CreatedByName":"SciMan","CreatedById":12748,"CreatedDateTime":"2013-06-10T17:21:33Z","Content":"\n\u003Cp\u003EI\u0027ve been trying to use this plugin to make a config edited version of a RCS quad that uses ElectricCharge and XenonGas, but I\u0027m having issues getting ResGen to do what I want.\u003C/p\u003E\u003Cp\u003EI have a custom resource called \u0022XenonIons\u0022 for the RCS quad to use as fuel. Same density as XenonGas, but it\u0027s non-transferable like SolidFuel is.\u003C/p\u003E\u003Cp\u003EHere\u0027s the resource definition code for it:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ERESOURCE_DEFINITION\u003Cbr\u003E{\u003Cbr\u003E  name = XenonIons\u003Cbr\u003E  density = 0.0005\u003Cbr\u003E  flowMode = NO_FLOW\u003Cbr\u003E  transfer = NONE\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe RCS thruster itself works fine, however the ResGen module doesn\u0027t refill the thruster\u0027s fuel supply.\u003C/p\u003E\u003Cp\u003EI can\u0027t figure out what\u0027s wrong with it, but any help getting it to work is appreciated.\u003C/p\u003E\u003Cp\u003EHere\u0027s the important section of the edited RCS quad\u0027s part.cfg:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = ModuleRCS\u003Cbr\u003E    thrusterTransformName = RCSthruster\u003Cbr\u003E    thrusterPower = 0.125\u003Cbr\u003E    resourceName = XenonIons\u003Cbr\u003E    atmosphereCurve\u003Cbr\u003E    {\u003Cbr\u003E        key = 0 3200\u003Cbr\u003E        key = 1 0\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003ERESOURCE\u003Cbr\u003E{\u003Cbr\u003E    name = XenonIons\u003Cbr\u003E    amount = 0.15\u003Cbr\u003E    maxAmount = 0.15\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = ResGen\u003Cbr\u003E    INPUT\u003Cbr\u003E    {\u003Cbr\u003E        name = ElectricCharge\u003Cbr\u003E        rate = 7.0\u003Cbr\u003E    }\u003Cbr\u003E    INPUT\u003Cbr\u003E    {\u003Cbr\u003E        name = XenonGas\u003Cbr\u003E        rate = 0.032\u003Cbr\u003E    }\u003Cbr\u003E    OUTPUT\u003Cbr\u003E    {\u003Cbr\u003E        name = XenonIons\u003Cbr\u003E        rate = 0.032\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAlso, just in case someone is wondering, I know that any ship using these will need at least one Xenon tank, battery, and a way to re-charge the battery.\u003C/p\u003E\u003Cp\u003EAs a matter of fact, I made a little probe specifically to test out these thrusters.\u003C/p\u003E\u003Cp\u003EBecause it\u0027s such a simple craft, I think describing how to build it might have better data compression than posting a .craft file for it, so I\u0027ll do that.\u003C/p\u003E\u003Cp\u003EMy \u0022RCS tester satellite\u0022 has an Okto2 probe core with a RTG on the top stack node and a Xenon tank on the lower one, and the Xenon tank has 2 of the small radial batteries and 2 of the RCS quads I\u0027m working on attached to it\u0027s sides. The rocket it rides to orbit doesn\u0027t make much difference as long as it can get to a 125km circular equatorial orbit, and because the probe should be less than a ton including fuel, it won\u0027t take a lot to get it there. I\u0027m using a booster about the same size as the one for the \u0022Z-MAP Satellite\u0022 stock craft.\u003C/p\u003E\n"}]}