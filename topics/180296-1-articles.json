{"TopicId":180296,"ForumId":18,"TopicTitle":"Arduinos, signal transmission and Morse codes","CreatedByName":"Delay","CreatedById":173586,"CreatedDateTime":"2018-12-01T00:58:55Z","PageNum":1,"Articles":[{"CreatedByName":"Delay","CreatedById":173586,"CreatedDateTime":"2018-12-01T00:58:55Z","Content":"\n\u003Cp\u003E\nOur CS is strange.\u003Cbr\u003E\nRemember how I complained that 11th grade no longer includes object-oriented programming languages?\n\u003C/p\u003E\n\u003Cp\u003E\nWell, now we\u0027re working with Arduinos (which run on basically C), but we\u0027re not taught about C at all. Basically \u0022Here\u0027s a microcontroller. Now do things with it!\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nWe\u0027re given examples of what you can do and the exact code that does what is required, but that\u0027s not how you learn. That\u0027s how you copy. Thus I reject those.\u003Cbr\u003E\nSo instead I\u0027ve forced myself to learn basic C syntax as quickly as possible so that I can do these things myself. And I suck at learning fast - it took a relatively long time just to get somewhat comfortable with Python, and now I \u003Cem\u003Ehave\u003C/em\u003E to learn C?\u003Cbr\u003E\nAt least Python was voluntary!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u003Cstrong\u003EBY THE WAY: I don\u0027t even know if anything I wrote here is even possible with the language/hardware in any way. I\u0027m not responsible for any headaches/violent outbursts that reading this text may cause.\u003C/strong\u003E\u003C/em\u003E\u003Cbr\u003E\n(The task is to - via LED and photosensor - transmit a text (=string?) from one controller to another, where it is interpreted.\u003Cbr\u003E\nFor sending the text I thought of converting all characters in the string to Morse code (store that in another string) and then turn on the LED based on the characters in this new string.\u003Cbr\u003E\nThat way I wouldn\u0027t have to repeatedly type instructions to turn the lamp on/off, instead I could just assign one letter to represent the action of a long/short/\u0022space\u0022 signal (simplifying the transmission from 26 unique patterns to just 3 options), go through that sequence element-by-element and turn on/off the LED accordingly.\u003Cbr\u003E\nThat would be the sender... \u003Cspan style=\u0022font-size:8px;\u0022\u003EAnd please don\u0027t be harsh about this idea not working because of reasons I don\u0027t know, or that there are so many more efficient/safer ways to transmit information tham Morse code. A)I\u0027m dumb, B)I need to get acquainted with the language first in order to see how much nonsense I actually wrote here.\u003C/span\u003E\u003Cbr\u003E\nThe receiver? Well, I haven\u0027t thought about that as much yet. I don\u0027t even have any clue as to how that could even work.)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-01T01:04:38Z\u0022 title=\u002212/01/2018 01:04  AM\u0022 data-short=\u00225 yr\u0022\u003EDecember 1, 2018\u003C/time\u003E by Delay\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2018-12-01T01:47:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223496728\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543625935\u0022 data-ipsquote-userid=\u0022173586\u0022 data-ipsquote-username=\u0022Delay\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Delay said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nwe\u0027re going to build a text wall and make the readers pay for it\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think you can program Arduino with Python, but I\u0027m not really sure. C isn\u0027t hard to work with.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyways, you\u0027re basically doing a Visible Light Communication project, it\u0027s pretty cool stuff.\n\u003C/p\u003E\n\u003Cp\u003E\nI can give you a rough sketch on how I\u0027d do the receiving part of the system, it would go like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E/** This code is a rough skeleton and has not been tested. EXPECT THE NEED TO CHANGE IT. **/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Setting up our variables. RESISTOR is the analog pin you\u0027ve connected the photoresistor to,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// DOT_TIME and DASH_TIME are how long you\u0027ve set the dot and dash signals to in your transmitter,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// TOLERANCE is there so that you can adjust it for the photoresistor\u0027s delay (it takes a while for\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// its resistance to actually change, about 10ms).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#define\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E RESISTOR A0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E DOT_TIME \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E200\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E DASH_TIME \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E600\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TOLERANCE \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E20\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// These are our time variables for keeping track of the signal.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eunsigned\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Elong\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME_0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME_1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E DELTA_TIME\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Self explanatory.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E VOLTS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E THRESHOLD\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E setup\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\t\n\tpinMode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERESISTOR\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E INPUT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Setting up the photoresitor\u0027s analog pin as input.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tTIME_0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME_1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E millis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Setting up the time variables to current time.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\tTHRESHOLD\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E VOLTS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E analogRead\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERESISTOR\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Let\u0027s calibrate the sensor to ambient lighting.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E loop\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\tVOLTS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E analogRead\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERESISTOR\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Update the variable with current readings.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\tTIME_0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME_1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E millis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Set the time variables to current time.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EVOLTS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E THRESHOLD\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Assuming the resistance increases when it\u0027s being lit. If it drops, just change it to VOLTS \u0026gt; THRESHOLD.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\tTIME_1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E millis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// While the pin voltage is below the threshold, set TIME_1 to current time so that we can know how long it was lit later.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tVOLTS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E analogRead\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERESISTOR\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Update the variable with current readings.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// You could do an if statement so that if the signal\u0027s been going on for too long, discard it by setting TIME_0 and TIME_1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// to millis() and breaking out of the while() loop.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\tDELTA_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME_1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME_0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Calculate how long the LED stayed on for.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    THRESHOLD \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E VOLTS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Assuming the LED\u0027s off by now, updating the threshold for current lighting.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EDELTA_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E DOT_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TOLERANCE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EDELTA_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E DOT_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TOLERANCE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Checking if it was a dot. If it isn\u0027t, it must be a dash, or nothing.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//do your dot things\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EDELTA_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E DASH_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TOLERANCE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EDELTA_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E DASH_TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TOLERANCE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//do your dash things\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAll time units are in milliseconds, by the way.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-01T02:19:24Z\u0022 title=\u002212/01/2018 02:19  AM\u0022 data-short=\u00225 yr\u0022\u003EDecember 1, 2018\u003C/time\u003E by Guest\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-01T02:00:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223496728\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543625935\u0022 data-ipsquote-userid=\u0022173586\u0022 data-ipsquote-username=\u0022Delay\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n45 minutes ago, Delay said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe receiver? Well, I haven\u0027t thought about that as much yet. I don\u0027t even have any clue as to how that could even work.)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nDoes it have to work with variable speeds, or can it receive at a set speed?\u00A0 The second is much simpler.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nStart with an empty string.\n\u003C/p\u003E\n\u003Cp\u003E\nWait for the light to turn on.\u00A0 Mark the time[0].\n\u003C/p\u003E\n\u003Cp\u003E\nWait for the light to turn off.\u00A0 Mark the time[1].\n\u003C/p\u003E\n\u003Cp\u003E\nSubtract time[0] from time[1].\u00A0 If time_difference \u0026lt; certain_length, add a \u0027.\u0027 to the string.\u00A0 If it\u0027s longer, add a \u0027-\u0027.\n\u003C/p\u003E\n\u003Cp\u003E\nWait for the light to turn on again.\u00A0 Periodically check the time difference, and if it exceeds a different certain length, you have a complete character.\u00A0 Check it against a list, and output the decoded character.\u00A0 Empty the decode string.\u00A0 Continue checking the time, and if it exceeds another length, output a space.\u00A0 If you have output a number of repeated spaces, break out of the loop (otherwise it will run forever).\n\u003C/p\u003E\n\u003Cp\u003E\nContinue to loop through this until you hit the break condition.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nThat\u0027s more or less how I\u0027ve done it, but it\u0027s been a long time since I wrote the code (modified from someone\u0027s morse reader I found online somewhere).\n\u003C/p\u003E\n"},{"CreatedByName":"Delay","CreatedById":173586,"CreatedDateTime":"2018-12-01T17:22:17Z","Content":"\n\u003Cp\u003E\nConcept!\u003Cspan style=\u0022font-size:8px;\u0022\u003E (look at that font! Ugh!)\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cimg class=\u0022ipsImage\u0022 height=\u0022700\u0022 src=\u0022https://i.imgur.com/900i46A.png\u0022 style=\u0022width:700px;height:auto;\u0022 width=\u00221000\u0022 alt=\u0022900i46A.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"kerbiloid","CreatedById":129408,"CreatedDateTime":"2018-12-01T18:57:54Z","Content":"\n\u003Cp\u003E\nWhen subtracting the times you can also wish to use a gray zone between the dot and dash durations.\n\u003C/p\u003E\n\u003Cp\u003E\nif\u00A0 tmin \u0026lt; t \u0026lt; tmax then this is...\n\u003C/p\u003E\n\u003Ctable border=\u00221\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:500px;\u0022\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\ntmin, s\n\u003C/td\u003E\n\u003Ctd\u003E\ntmax, s\n\u003C/td\u003E\n\u003Ctd\u003E\nDescription\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0\n\u003C/td\u003E\n\u003Ctd\u003E\n0.25\n\u003C/td\u003E\n\u003Ctd\u003E\nerror\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.25\n\u003C/td\u003E\n\u003Ctd\u003E\n0.5\n\u003C/td\u003E\n\u003Ctd\u003E\ndot\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.5\n\u003C/td\u003E\n\u003Ctd\u003E\n1.0\n\u003C/td\u003E\n\u003Ctd\u003E\nerror\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n1.0\n\u003C/td\u003E\n\u003Ctd\u003E\n1.5\n\u003C/td\u003E\n\u003Ctd\u003E\ndash\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n1.5\n\u003C/td\u003E\n\u003Ctd\u003E\ninf\n\u003C/td\u003E\n\u003Ctd\u003E\nerror (add timeout at, say, 2.0 s, to avoid an endless waiting for the end of dash)\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003Cp\u003E\n\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-01T19:00:13Z\u0022 title=\u002212/01/2018 07:00  PM\u0022 data-short=\u00225 yr\u0022\u003EDecember 1, 2018\u003C/time\u003E by kerbiloid\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-01T19:14:26Z","Content":"\n\u003Cp\u003E\nProperly, a dash should be three times as long as a dot, the spacing between dots and dashes within a character should be the same as a dot, the space between characters should be as long as a dash, and spacing between words should be seven times the dot.\n\u003C/p\u003E\n\u003Cp\u003E\nDot: 1 unit\u003Cbr\u003E\nDash: 3 units\u003Cbr\u003E\nIntracharacter: 1 unit\u003Cbr\u003E\nIntercharacter: 3 units\u003Cbr\u003E\nWord break: 7 units\n\u003C/p\u003E\n\u003Cp\u003E\nFor 5 words per minute, a dot is 0.24 seconds and a dash is 0.72 seconds.\n\u003C/p\u003E\n"},{"CreatedByName":"Delay","CreatedById":173586,"CreatedDateTime":"2018-12-03T06:17:36Z","Content":"\n\u003Cp\u003E\nI am aware of the fact that I\u0027m basically using this thread as a dump for C questions now, but I can guarantee you that with a non-0% chance, this is the last \u003Cem\u003Equestion\u003C/em\u003E. Tomorrow I have CS, so it\u0027s my last day of asking and this question is kinda important.\n\u003C/p\u003E\n\u003Cp\u003E\nI looked around a bit on (guess what) the internet and found out that what I thought of as a simple task may not be so simple after all: Add a sequence of letters to a string based on the character of another. If other people are to be trusted, then a simple return-statement doesn\u0027t do what I intend it to do.\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s the idea I had:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E//please ignore my strange indentation of brackets and code. Don\u0027t know how C code is usually indented.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Echar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMorseCode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eindex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E     \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//this is effectively a big table with all Morse codes and their letters, Imagine this going from A to Z\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eindex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EA \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E a\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E     \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//is the letter in question A or a?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022KL \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eindex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EB \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E b\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E     \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//is the letter B or b?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022LKKK \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eindex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EC \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E|\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E c\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E     \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//is the letter C or c?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022LKLK \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis would be called by either a for or while loop (probably while, though) during every iteration.\u003Cbr\u003E\nProbably with a line like \u0022MString = MString \u002B MorseCode(number_of_index)\u0022, where number_of_index in incremented by 1 at the end of each loop and as long as this new index is still valid.\n\u003C/p\u003E\n\u003Cp\u003E\nThe expected result is that I end up with the same list as in the beginning, but with one new encoded letter added to the end of the list.\n\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-03T07:09:35Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498011\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543817856\u0022 data-ipsquote-userid=\u0022173586\u0022 data-ipsquote-username=\u0022Delay\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n52 minutes ago, Delay said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe expected result is that I end up with the same list as in the beginning, but with one new encoded letter added to the end of the list. \u003Cspan\u003E\uFEFF\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cs\u003EDon\u0027t forget you need to add spaces between the characters, or \u0022Hello world\u0022 comes out as \u0022.....-...-..--- .-----.-..-..-..\u0022, which is not readable.\u003C/s\u003E\u003Cbr\u003E\nNevermind, I notice you do have a space.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498011\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543817856\u0022 data-ipsquote-userid=\u0022173586\u0022 data-ipsquote-username=\u0022Delay\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n52 minutes ago, Delay said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Echar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMorseCode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eindex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003Cbr\u003E\n...\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYour program expects the function to return a single character.\u00A0 What you are returning, however, is a string.\u00A0 If I am recalling correctly, returning a string from a function is not a trivial exercise in C.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can pass the encoded string in by reference, and append to it in the function.\u00A0 Or declare it a global variable and append it in the function.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nYou could also use a switch, instead of the ifs.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eint Encode(char in_char, char *buffer)\n{\n  in_char = toupper(inchar);\n  int flag = 0;\n\n  switch (in_char)\n  {\n    case \u0027A\u0027:\n      \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;append\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0027.- \u0027\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eto\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ebuffer\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      flag = 1;\n      break;\n        \n    case \u0027B\u0027:\n      \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;append\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0027-... \u0027\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eto\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ebuffer\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      flag = 1;\n      break;\n        \n    case \u0027C\u0027:\n      \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;append\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0027-.-. \u0027\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eto\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ebuffer\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      flag = 1;\n      break;\n...        \n    case \u0027Z\u0027:\n      \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;append\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0027--.. \u0027\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eto\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ebuffer\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      flag = 1;\n  }\n\n  return flag;\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nBut I don\u0027t remember the C syntax for doing the append, and my books are in a box somewhere.\n\u003C/p\u003E\n\u003Cp\u003E\nThe flag allows you to check outside the function if it was able to get a valid match.\u00A0 If it did, it will return 1 (true), else 0 (false).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-03T07:10:23Z\u0022 title=\u002212/03/2018 07:10  AM\u0022 data-short=\u00225 yr\u0022\u003EDecember 3, 2018\u003C/time\u003E by razark\u003C/strong\u003E\n\u003Cbr\u003ECause some idiot forgot to add spaces after characters...\n\u003C/span\u003E\n"},{"CreatedByName":"Green Baron","CreatedById":107381,"CreatedDateTime":"2018-12-03T08:55:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498025\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543820975\u0022 data-ipsquote-userid=\u002232993\u0022 data-ipsquote-username=\u0022razark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, razark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBut I don\u0027t remember the C syntax for doing the append, and my books are in a box somewhere.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nstrcat() or strncat(), live in string.h. strcat_s() or strncat_s() as the safer new-age variant.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you don\u0027t want to walk on foot and write your own string concatenation, i mean :-)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSauce: \u003Ca href=\u0022https://en.cppreference.com/w/c/string/byte/strcat\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://en.cppreference.com/w/c/string/byte/strcat\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-03T09:00:36Z\u0022 title=\u002212/03/2018 09:00  AM\u0022 data-short=\u00225 yr\u0022\u003EDecember 3, 2018\u003C/time\u003E by Green Baron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-03T12:49:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498046\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543827308\u0022 data-ipsquote-userid=\u0022107381\u0022 data-ipsquote-username=\u0022Green Baron\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Green Baron said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf you don\u0027t want to walk on foot and write your own string concatenation, i mean\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhen I took the class, we didn\u0027t use strings.\u00A0 They were just treated as an array of characters.\u00A0 That\u0027s stuck with me, and I keep forgetting string handling in C.\n\u003C/p\u003E\n"},{"CreatedByName":"Delay","CreatedById":173586,"CreatedDateTime":"2018-12-03T15:59:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498025\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543820975\u0022 data-ipsquote-userid=\u002232993\u0022 data-ipsquote-username=\u0022razark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, razark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou could also use a switch, instead of the ifs.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027d say ifs and else ifs are better here. After all it\u0027s not supposed to be a highly complex and convoluted script (relative to the fact that it\u0027s the first major exposure to a \u0022real\u0022 programming language).\u003Cbr\u003E\nIt should be very easy to read and understand, and ifs seem to be the best way to accomplish that.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-03T16:00:07Z\u0022 title=\u002212/03/2018 04:00  PM\u0022 data-short=\u00225 yr\u0022\u003EDecember 3, 2018\u003C/time\u003E by Delay\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2018-12-03T16:23:04Z","Content":"\n\u003Cp\u003E\nYou don\u0027t really need to encode it first though, you can just make a for loop iterating over the char array (input text) and transmitting each letter appropriately at a time, way simpler\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-03T16:30:47Z\u0022 title=\u002212/03/2018 04:30  PM\u0022 data-short=\u00225 yr\u0022\u003EDecember 3, 2018\u003C/time\u003E by Guest\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-03T16:50:28Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498186\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543854184\u0022 data-ipsquote-userid=\u0022152223\u0022 data-ipsquote-username=\u0022Aperture Science\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n26 minutes ago, Aperture Science said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou don\u0027t really need to encode it first though, you can just make a for loop iterating over the char array (input text) and transmitting each letter appropriately at a time, way simpler\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThinking back, this is how I did it.\u00A0 Much simpler indeed.\n\u003C/p\u003E\n"},{"CreatedByName":"Delay","CreatedById":173586,"CreatedDateTime":"2018-12-03T16:55:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498202\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543855828\u0022 data-ipsquote-userid=\u002232993\u0022 data-ipsquote-username=\u0022razark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, razark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThinking back, this is how I did it.\u00A0 Much simpler indeed.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t think so. You\u0027d have to write the same thing over and over again for every letter. Mine transmits based on just 3 possible signals (long, short, space) being reused all the time.\u003Cbr\u003E\nAdditionally it\u0027s so much easier to edit. If you want to add the digits 0-9 all you have to do is add 10 more combinations.\n\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-03T17:06:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498207\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543856117\u0022 data-ipsquote-userid=\u0022173586\u0022 data-ipsquote-username=\u0022Delay\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, Delay said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t think so. You\u0027d have to write the same thing over and over again for every letter. Mine transmits based on just 3 possible signals (long, short, space) being reused all the time.\u003Cbr\u003E\nAdditionally it\u0027s so much easier to edit. If you want to add the digits 0-9 all you have to do is add 10 more combinations.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInstead of translating the whole string, appending it, and then sending it, you\u0027re translating\u00A0one character and sending it.\u00A0 You\u0027re still only dealing with dit, dah, or space.\u00A0 You can avoid\u00A0messy string operations.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Delay","CreatedById":173586,"CreatedDateTime":"2018-12-03T17:12:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498212\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543856804\u0022 data-ipsquote-userid=\u002232993\u0022 data-ipsquote-username=\u0022razark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, razark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can avoid\u00A0messy string operations.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSure, but can add a new character with just 2 lines; the if-condition and what the character equals.\u003Cbr\u003E\nRather than writing the individual instructions for turning the lamp on and off every single time.\n\u003C/p\u003E\n\u003Cp\u003E\nUnless of course there is another way to implement \u0022reusable\u0022 that gets called when needed, but is operating independently from the actual letter and I didn\u0027t think of it. That way it would still just be three functions.\n\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-03T17:25:49Z","Content":"\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eswitch (in_char)\n  {\n    case \u0027A\u0027:\n      send_dit();\n      send_dah();\n      send_space();\n      break;\n        \n    case \u0027B\u0027:\n      send_dah();\n      send_dit();\n      send_dit();\n      send_dit();\n      send_space();\n      break;\n        \n\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;and\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eso\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eon\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n}\n\n\n\n\n\n\nvoid send_dit()\n{\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;lamp\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eon\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;delay\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;lamp\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eoff\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;delay\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n}\n\nvoid send_dah()\n{\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;lamp\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eon\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;delay\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E * 3\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;lamp\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eoff\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;delay\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n}\n\nvoid send_space()\n{\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;delay\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E * 2\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nFunctional\u003Cbr\u003E\nReadable\u003Cbr\u003E\nElegant\n\u003C/p\u003E\n\u003Cp\u003E\nPick two out of three.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n(I should really go look up the code I used to do this.\u00A0 I\u0027m going by rough memory and making it up as I go.)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-03T17:27:22Z\u0022 title=\u002212/03/2018 05:27  PM\u0022 data-short=\u00225 yr\u0022\u003EDecember 3, 2018\u003C/time\u003E by razark\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2018-12-03T17:49:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498214\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543857123\u0022 data-ipsquote-userid=\u0022173586\u0022 data-ipsquote-username=\u0022Delay\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n36 minutes ago, Delay said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSure, but can add a new character with just 2 lines; the if-condition and what the character equals.\u003Cbr\u003E\nRather than writing the individual instructions for turning the lamp on and off every single time.\n\u003C/p\u003E\n\u003Cp\u003E\nUnless of course there is another way to implement \u0022reusable\u0022 that gets called when needed, but is operating independently from the actual letter and I didn\u0027t think of it. That way it would still just be three functions.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou\u0027re going to have to iterate over the encoded string anyways if you decide to make a Morse string. Might as well just avoid it and only iterate over the input string. You\u0027ll achieve the same effect with less effort.\n\u003C/p\u003E\n"},{"CreatedByName":"Delay","CreatedById":173586,"CreatedDateTime":"2018-12-03T17:54:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498233\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543859362\u0022 data-ipsquote-userid=\u0022152223\u0022 data-ipsquote-username=\u0022Aperture Science\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Aperture Science said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou\u0027ll achieve the same effect with less effort.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat may be true. I suspect I was too stubborn to see this option.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/32993-razark/\u0026amp;do=hovercard\u0022 data-mentionid=\u002232993\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/32993-razark/\u0022 rel=\u0022\u0022\u003E@razark\u003C/a\u003E Are switch statements also called or must they be part of the loop I use them in?\u003Cbr\u003E\n(Human) Accessibility is the main reason I\u0027m asking: Being able to put it out front - or so I think - would make things easier to understand as you didn\u0027t have to search for it in the loop.\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-03T18:06:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498238\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543859654\u0022 data-ipsquote-userid=\u0022173586\u0022 data-ipsquote-username=\u0022Delay\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, Delay said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAre switch statements also called or must they be part of the loop I use them in?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eswitch \u003C/span\u003Estatement would be used in exactly the same place as the repeated \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eif\u003C/span\u003E statements you had.\u00A0 They\u0027re pretty much identical in flow control in most uses.\u00A0 I just tend to find \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eswitch\u003C/span\u003E a bit easier for my reading.\n\u003C/p\u003E\n\u003Cp\u003E\nThe string of \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eif \u003C/span\u003Estatements does have a downside if you do not have a \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ereturn\u003C/span\u003E inside the if.\u00A0 If your character is \u0027A\u0027, you\u0027d end up doing 26 comparisons with the \u0027\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eif\u003C/span\u003E\u0027 method (without \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ereturn\u003C/span\u003Es).\u00A0 With the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eswitch\u003C/span\u003E, it\u0027ll hit the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ebreak\u003C/span\u003E and stop running the comparisons.\u00A0 Because you\u0027re not always going to have a \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ereturn\u003C/span\u003E inside the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eif\u003C/span\u003E, I find it better to use the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Eswitch\u003C/span\u003E\u00A0as general practice.\n\u003C/p\u003E\n"},{"CreatedByName":"IncongruousGoat","CreatedById":157062,"CreatedDateTime":"2018-12-03T18:52:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498101\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543841383\u0022 data-ipsquote-userid=\u002232993\u0022 data-ipsquote-username=\u0022razark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, razark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhen I took the class, we didn\u0027t use strings.\u00A0 They were just treated as an array of characters.\u00A0 That\u0027s stuck with me, and I keep forgetting string handling in C.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nC strings are literally (null-terminated) character arrays, so of course they\u0027d be treated that way. There are a few special string-handling functions in libc (strcat(), strlen(), etc.) but they\u0027re all just operations over character arrays.\n\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-03T19:03:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498328\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543863143\u0022 data-ipsquote-userid=\u0022157062\u0022 data-ipsquote-username=\u0022IncongruousGoat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, IncongruousGoat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nC strings are literally (null-terminated) character arrays, so of course they\u0027d be treated that way. There are a few special string-handling functions in libc (strcat(), strlen(), etc.) but they\u0027re all just operations over character arrays.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah.\u00A0 The professor went so far as to say something like \u0022Strings do not exist in C.\u00A0 Do not even bother asking about string functions.\u0022\n\u003C/p\u003E\n"},{"CreatedByName":"IncongruousGoat","CreatedById":157062,"CreatedDateTime":"2018-12-03T19:06:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498333\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543863825\u0022 data-ipsquote-userid=\u002232993\u0022 data-ipsquote-username=\u0022razark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, razark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYeah.\u00A0 The professor went so far as to say something like \u0022Strings do not exist in C.\u00A0 Do not even bother asking about string functions.\u0022\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nShame on your professor then. Strings do exist in C, and there are plenty of functions to handle them. It just so happens that they\u0027re also null-terminated character arrays.\n\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2018-12-03T19:11:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223498337\u0022 data-ipsquote-contentid=\u0022154503\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221543864002\u0022 data-ipsquote-userid=\u0022157062\u0022 data-ipsquote-username=\u0022IncongruousGoat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, IncongruousGoat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nShame on your professor then. Strings do exist in C, and there are plenty of functions to handle them. It just so happens that they\u0027re also null-terminated character arrays.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIndeed.\u00A0 It\u0027s still stuck in my head to avoid strings after... 23 years.\n\u003C/p\u003E\n"},{"CreatedByName":"Green Baron","CreatedById":107381,"CreatedDateTime":"2018-12-03T19:40:00Z","Content":"\n\u003Cp\u003E\nYour professor probably meant that there is no specific datatype \u0022string\u0022 in C, which is correct. As \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/157062-incongruousgoat/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022157062\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/157062-incongruousgoat/\u0022 rel=\u0022\u0022\u003E@IncongruousGoat\u003C/a\u003E said, a string is a char array, hopefully with \\0 at the end (an ASCII/UTF 0 (nul) character, not NULL which in many C implementations is a (void *)0 or just 0(*) !). There are a lot of useful functions in string.h to manipulate char arrays, aka strings. But these will produce epic failures if the programmer forgot for example to add the terminating \\0, or hasn\u0027t taken care of grabbing and releasing memory in the correct order :-).\n\u003C/p\u003E\n\u003Cp\u003E\nThe strcat() function can be implemented as two consecutive loops to get to the end of a and then copy b at the end of a, ideally using pointer arithmetic, or if the lengths are known and stored somewhere, as a call to memcpy(), which is pretty fast. The latter being the \u0022on foot\u0022 way i meant.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n(*) g\u002B\u002B actually expands to 0, gcc to (void *)0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-12-03T19:55:53Z\u0022 title=\u002212/03/2018 07:55  PM\u0022 data-short=\u00225 yr\u0022\u003EDecember 3, 2018\u003C/time\u003E by Green Baron\u003C/strong\u003E\n\u003C/span\u003E\n"}]}