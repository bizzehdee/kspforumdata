{"TopicId":215060,"ForumId":196,"TopicTitle":"Blocky Coastline Textures from LKO 4k Medium Settings w/ 4x AA","CreatedByName":"JoeSchmuckatelli","CreatedById":154477,"CreatedDateTime":"2023-03-15T02:00:36Z","PageNum":1,"Articles":[{"CreatedByName":"JoeSchmuckatelli","CreatedById":154477,"CreatedDateTime":"2023-03-15T02:00:36Z","Content":"\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 frameborder=\u00220\u0022 height=\u0022113\u0022 src=\u0022https://www.youtube-nocookie.com/embed/WqCIL63dV48?feature=oembed\u0022 title=\u0022Blocky Textured Coastlines from LKO\u0022 width=\u0022200\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Cytauri","CreatedById":223905,"CreatedDateTime":"2023-03-15T02:12:49Z","Content":"\n\u003Cp\u003E\nYeah, this needs to be fixed. It was in KSP 1 also so I really hope its not going to forever be in KSP 2.\n\u003C/p\u003E\n"},{"CreatedByName":"MehJeb","CreatedById":227441,"CreatedDateTime":"2023-03-15T16:00:53Z","Content":"\n\u003Cp\u003E\nnot just coastlines, make note of how clouds shader simplifies them based on distance, what we see here is most probably a multiplication - the topmost shader drew a blocky block for clouds layer (above) and the render pipeline considers that terrain shader has no use for rendering with higher resolution since the upper level shader already premul the block of pixels at that spot. That\u0027s exactly the same problem with render queue that I mentioned in these posts:\u00A0\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022227441\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed1082616121\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214785-shadow-artefacts-render-queue-bug/\u0026amp;do=embed\u0022 style=\u0022height:170px;max-width:500px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\nand\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022227441\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed9298895130\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214788-render-queue-bug-causing-beautiful-rainbow-effect-no-key-to-switch-to-kerbals-first-perspective-view-yet/\u0026amp;do=embed\u0022 style=\u0022height:192px;max-width:500px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n...also\u00A0 rendering Sun and other distant light emmiters _THROUGH_ solid objects, mentioned\u00A0 in this post:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u002270807\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed6104802541\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/213320-sun-does-not-respect-terrain/\u0026amp;do=embed\u0022 style=\u0022height:195px;max-width:500px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nthose are all render queue bugs, the have to do with initial default setup of render pipeline (and shaders for that matter) in Unity; the programmer who does graphics should clearly hand-manage render\n\u003C/p\u003E\n\u003Cp\u003E\nqueue, like:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\tSubShader {\n\t\tTags {\t\u0022RenderType\u0022=\u0022Opaque\u0022 \n\t\t\t\t\u0022Queue\u0022 = \u0022Background\u002B100\u0022\n\t//\t\t\t\u0022ForceNoShadowCasting\u0022 = \u0022true\u0022\n\t\t}\n\t\tLOD 500\u003C/pre\u003E\n\u003Cp\u003E\nfor layered ground polys that have no z-fighting ;-)\n\u003C/p\u003E\n\u003Cp\u003E\nor:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003ESubShader {\n    Tags {\n    \u0022Queue\u0022=\u0022Background\u002B85\u0022 \n    \u0022IgnoreProjector\u0022=\u0022False\u0022 \n    \u0022RenderType\u0022=\u0022Transparent\u0022\n    }\n    LOD 200\u003C/pre\u003E\n\u003Cp\u003E\nfor transparent vertical bilboard-style polys that are vertex-lit (btw, if you keep this setting and for seome reason would ever need to get to \u0022Fallback \u0022Transparent/VertexLit\u0022, the resulting compiled shader will also not have z-fighting problems even thou it is vertex-lit and objects whose materials it is supposed to be used on are typicaly perpendicular to the plane where distant projectors (Sun) have their kinky light stuff going on\n\u003C/p\u003E\n\u003Cp\u003E\nThis is just an example of hand-managed render queue which solves all kinds of problems reported in this and cited posts. Good luck!\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"coyotesfrontier","CreatedById":181596,"CreatedDateTime":"2023-03-15T17:50:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224259482\u0022 data-ipsquote-contentid=\u0022215060\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221678896053\u0022 data-ipsquote-userid=\u0022227441\u0022 data-ipsquote-username=\u0022MehJeb\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, MehJeb said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nnot just coastlines, make note of how clouds shader simplifies them based on distance, what we see here is most probably a multiplication - the topmost shader drew a blocky block for clouds layer (above) and the render pipeline considers that terrain shader has no use for rendering with higher resolution since the upper level shader already premul the block of pixels at that spot. That\u0027s exactly the same problem with render queue that I mentioned in these posts:\u00A0\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022227441\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed4796421419\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214785-shadow-artefacts-render-queue-bug/\u0026amp;do=embed\u0022 style=\u0022height:171px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\nand\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022227441\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed2549588041\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214788-render-queue-bug-causing-beautiful-rainbow-effect-no-key-to-switch-to-kerbals-first-perspective-view-yet/\u0026amp;do=embed\u0022 style=\u0022height:194px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n...also\u00A0 rendering Sun and other distant light emmiters _THROUGH_ solid objects, mentioned\u00A0 in this post:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u002270807\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed2352322376\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/213320-sun-does-not-respect-terrain/\u0026amp;do=embed\u0022 style=\u0022height:197px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nthose are all render queue bugs, the have to do with initial default setup of render pipeline (and shaders for that matter) in Unity; the programmer who does graphics should clearly hand-manage render\n\u003C/p\u003E\n\u003Cp\u003E\nqueue, like:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\tSubShader {\n\t\tTags {\t\u0022RenderType\u0022=\u0022Opaque\u0022 \n\t\t\t\t\u0022Queue\u0022 = \u0022Background\u002B100\u0022\n\t//\t\t\t\u0022ForceNoShadowCasting\u0022 = \u0022true\u0022\n\t\t}\n\t\tLOD 500\u003C/pre\u003E\n\u003Cp\u003E\nfor layered ground polys that have no z-fighting ;-)\n\u003C/p\u003E\n\u003Cp\u003E\nor:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003ESubShader {\n    Tags {\n    \u0022Queue\u0022=\u0022Background\u002B85\u0022 \n    \u0022IgnoreProjector\u0022=\u0022False\u0022 \n    \u0022RenderType\u0022=\u0022Transparent\u0022\n    }\n    LOD 200\u003C/pre\u003E\n\u003Cp\u003E\nfor transparent vertical bilboard-style polys that are vertex-lit (btw, if you keep this setting and for seome reason would ever need to get to \u0022Fallback \u0022Transparent/VertexLit\u0022, the resulting compiled shader will also not have z-fighting problems even thou it is vertex-lit and objects whose materials it is supposed to be used on are typicaly perpendicular to the plane where distant projectors (Sun) have their kinky light stuff going on\n\u003C/p\u003E\n\u003Cp\u003E\nThis is just an example of hand-managed render queue which solves all kinds of problems reported in this and cited posts. Good luck!\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSorry, but I\u0027m fairly certain this actually has nothing to do with the render queue. It\u0027s actually a direct consequence of how the PQS terrain engine works. Terrain in KSP is composed of a planetwide sphere made out of individual squares called quads. The quads subdivide into more quads the closer the vessel is to the ground, with them being at their maximum subdivision amount when the vessel is landed on the surface. Likewise, the further a vessel is from the ground, the quads desubdivide (combine?) into larger squares. When a vessel is very far from the surface, like in orbit, the quads are at the lowest subdivision count, which means each individual quad is huge, on the order of a kilometer or so. Viewed from orbit, the coastline appears pixilated because it actually is pixelated, a fact that isn\u0027t noticeable when at a lower altitude because of the higher subdivision count.\n\u003C/p\u003E\n"},{"CreatedByName":"MehJeb","CreatedById":227441,"CreatedDateTime":"2023-03-16T09:45:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\u003Cspan\u003E\u00A0\u003C/span\u003EI\u0027m fairly certain this actually has nothing to do with the render queue\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nthen, you are wrong \u003Cimg alt=\u0022;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003ETerrain in KSP is composed of a planetwide sphere made out of individual squares called quads.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nthose at most are logical units, what I\u0027m talking about is what directly happens on BitBlt calls (drawcalls) on your hardware (GPU);\n\u003C/p\u003E\n\u003Cp\u003E\nnow think of this: your max usable texture resolution is 4096x4096 pixels - so you split your spherical map into how many quads to achieve say 1 pix == 1m resolution? From 10,000 ASL - 19m per pixel looks kinda ok - how many quads do you need at that resolution? ;-) Do you draw quads that ar partially in view? Do you retexture your \u0022sphere\u0022 on the fly consecutively or in one pass before rendering next frame that occures after LOD change? ;-))\n\u003C/p\u003E\n\u003Cp\u003E\nGo on, answer all these to yourself and your picture of how things work will change to more accurate.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003EViewed from orbit, the coastline appears\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAnd the clouds? ))) What happens to them?\n\u003C/p\u003E\n"}]}