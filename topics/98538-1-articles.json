{"TopicId":98538,"ForumId":29,"TopicTitle":"Any way to detect model loading?","CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-02-02T07:11:10Z","PageNum":1,"Articles":[{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-02-02T07:11:10Z","Content":"\n\u003Cp\u003EI have a model that I\u0027m scaling to several different sizes via MODEL { scale }. The problem is, the emitters for models are not scaled by KSP, which has me doing so in the PartModule for my plugin. While this works as I\u0027m currently doing it in OnStart(), it presents a problem in that the emitters are not re-scaled if the parts are reloaded via the debug menu. So, is there a way to detect that the model is being reloaded, and scale my emitters appropriately again?\u003C/p\u003E\u003Cp\u003EEdit: Actually I realized that they way I\u0027m doing it now doesn\u0027t work correct either, even without reloading parts, as when you copy a part the scaling is reapplied. So, where is the correct place to apply such a scaling factor?\u003C/p\u003E\u003Cp\u003EEdit2: I managed to work around the scaling bug while copying with a public flag to check if it has already been scaled, but it doesn\u0027t help with the scaling issues associated with reloading the parts library.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-02T11:07:28Z\u0022 title=\u002202/02/2015 11:07  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 2, 2015\u003C/time\u003E by Orum\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-02-03T11:50:50Z","Content":"\n\u003Cp\u003EAlright, apologies for the double-post but I think I might have figured out what\u0027s going on. My assembly is actually being unloaded due to a \u0022System.IO.IOException: Sharing violation\u0022 (not sure why that\u0027s happening, but I have theories), so it can\u0027t perform its internal scaling code when the parts are reloaded.\u003C/p\u003E\u003Cp\u003EAdditionally I bugged Mu on IRC about MODEL{ scale } working for emitters, and he seemed optimistic about fixing it, so hopefully that will happen too.\u003C/p\u003E\n"},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-02-13T16:02:16Z","Content":"\n\u003Cp\u003EOkay, apologies for triple-posting, but I found a new problem. Though what I had works when grabbing new parts from the catalog, and when alt-clicking, it doesn\u0027t work when loading the parts from a save.\u003C/p\u003E\u003Cp\u003ECurrently what I have is something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic class foo : PartModule {\u003Cbr\u003E\tpublic bool b = true;\u003Cbr\u003E\tfloat sf = 2.0; // This is actually loaded from the cfg file, it\u0027s just defined here for brevity\u003Cbr\u003E\u003Cbr\u003E\tpublic override void OnStart(StartState ss) {\u003Cbr\u003E\t\tif( {\u003Cbr\u003E\t\t\tb = false;\u003Cbr\u003E\u003Cbr\u003E\t\t\tforeach(KSPParticleEmitter kpe in part.GetComponentsInChildren\u0026lt;KSPParticleEmitter\u0026gt;() ?? new KSPParticleEmitter[0]) {\u003Cbr\u003E\t\t\t\tkpe.shape3D\t\t*= sf;\u003Cbr\u003E\t\t\t\tkpe.shape2D\t\t*= sf;\u003Cbr\u003E\t\t\t\tkpe.shape1D\t\t*= sf;\u003Cbr\u003E\t\t\t\tkpe.minSize\t\t*= sf;\u003Cbr\u003E\t\t\t\tkpe.maxSize\t\t*= sf;\u003Cbr\u003E\t\t\t\tkpe.rndVelocity\t\t*= sf;\u003Cbr\u003E\t\t\t\tkpe.localVelocity\t*= sf;\u003Cbr\u003E\t\t\t\tkpe.force\t\t*= sf;\u003Cbr\u003E\t\t\t\tkpe.rndForce\t\t*= sf;\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\tforeach(Light l in part.GetComponentsInChildren\u0026lt;Light\u0026gt;() ?? new Light[0])\u003Cbr\u003E\t\t\t\tl.range *= sf;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EExample image of \u003Ca href=\u0022http://a.pomf.se/qzwthd.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ebefore and after loading\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003ESo, is there \u003Cem\u003Eany\u003C/em\u003E way to do this correctly so both loading and editing of parts work correctly? It\u0027s a showstopper for the release of my parts/plugin right now. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_angry.gif\u0022 alt=\u0022:mad:\u0022\u003E\u003C/p\u003E\u003Cp\u003EEdit: Okay, after more hours of debugging than I care to admit to, I finally figured out what\u0027s going on. GetComponentsInChildren is \u003Cstrong\u003ENOT\u003C/strong\u003E restricted to GOs in the current part instance, as I thought--it\u0027s searching \u003Cstrong\u003Ethe entire vessel tree\u003C/strong\u003E and looking for all GOs in all \u0022Child\u0022 part instances--not just the current part. I\u0027m trying to find a way to just search child GOs \u003Cstrong\u003Ewithin the current part instance\u003C/strong\u003E.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-13T20:23:43Z\u0022 title=\u002202/13/2015 08:23  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 13, 2015\u003C/time\u003E by Orum\u003C/strong\u003E\n\u003C/span\u003E\n"}]}