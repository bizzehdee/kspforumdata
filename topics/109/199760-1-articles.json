{"TopicId":199760,"ForumId":109,"TopicTitle":"Terrain Deformation and Explosion Visuals","CreatedByName":"Kernel Kraken","CreatedById":181383,"CreatedDateTime":"2021-01-22T17:40:25Z","PageNum":1,"Articles":[{"CreatedByName":"Kernel Kraken","CreatedById":181383,"CreatedDateTime":"2021-01-22T17:40:25Z","Content":"\n\u003Cp\u003E\nI feel like I\u0027m not alone when I say KSP1\u0027s explosions and destruction mechanics were lackluster at best, and just absolutely disappointing on average. I\u0027ve built my giant lifter capable of moving enough material to create several new solar systems, but when it inevitably crashes due to my own incompetence all I get for it is scattered components and a few poofs of smoke from my fuel tanks.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis is where I think KSP2 could improve on the most. Sure, the graphics are going to be prettier, and there will be cool colonies and prettier planets, but will the destruction be improved at all? You\u0027re telling me that after I \u0022accidentally\u0022 diverted a D class asteroid, it leaves not a single dent or divot on the surface? My multi-megaton masterpieces don\u0027t strip trees off the ground when they detonate? No epic waves washing away my hard work when I crash into the water off of the runway? Not even a ripple on the surface other than a generic looking splash.jpg?\n\u003C/p\u003E\n\u003Cp\u003E\nDestruction has (unfortunately) been a constant threat in our own history of spaceflight, and I hope KSP2 Is more accurately able to represent the consequences of my engineering oopsies with new tech available to today\u0027s developers.\n\u003C/p\u003E\n"},{"CreatedByName":"RealKerbal3x","CreatedById":183830,"CreatedDateTime":"2021-01-22T18:01:08Z","Content":"\n\u003Cp\u003E\nIn\u00A0\u003Ca href=\u0022https://www.kerbalspaceprogram.com/dev-diaries/developer-insights-2/\u0022 rel=\u0022external nofollow\u0022\u003Ethis dev diary post\u003C/a\u003E\u00A0they did talk about how they were making explosions better (as well as other VFX), but nothing about terrain deformation or anything like that. I agree though, deformable terrain would be pretty cool, even if it wasn\u0027t persistent. If it\u00A0\u003Cem\u003Ewas\u00A0\u003C/em\u003Epersistent though, the system could lend itself to other applications such as more immersive mining or surface levelling for base/colony building.\n\u003C/p\u003E\n"},{"CreatedByName":"SpaceFace545","CreatedById":196943,"CreatedDateTime":"2021-01-22T18:01:23Z","Content":"\n\u003Cp\u003E\nthere making explosions better but voxel and terrain deformation won\u0027t be a thing, that a bit too complex and gets very glitchy\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2021-01-22T20:45:40Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223913256\u0022 data-ipsquote-contentid=\u0022199760\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221611338483\u0022 data-ipsquote-userid=\u0022196943\u0022 data-ipsquote-username=\u0022SpaceFace545\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, SpaceFace545 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nthere making explosions better but voxel and terrain deformation won\u0027t be a thing, that a bit too complex and gets very glitchy\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nVoxels for sure, but terrain is height-mapped already. An efficient\u00A0and, in my professional opinion, correct way of handling it is having displacement map in your terrain virtual texture, taking it into consideration during tessellation to produce correct visual representation, and generating terrain collisions via a compute pass early in the frame. The terrain collisions are then added as additional contact points when you do physics sim, and that should work identical to current collision system, except now you can have procedural craters. There are a few other advantages of moving terrain collision to GPU, but that\u0027s a bit beyond the scope.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is a lot easier to do on a custom engine, or at least, one that you have better access to internals of than with Unity. It also assumes you are using virtual textures, but if you\u0027re making an open world game in 2021 and your terrain textures aren\u0027t virtual, you are objectively doing it wrong. And while awkward, there\u0027s a way to do all of this in Unity.\u00A0What I\u0027m unsure about is the performance hit, which could be critical for consoles.\n\u003C/p\u003E\n\u003Cp\u003E\nOn a bespoke engine, this can work as flawlessly as regular terrain collision. Better in a lot of ways, as it allows for higher resolution of terrain collision near the player. Due to how virtual texturing works, resolution will be lower far from player, so you have to address that. But the only real danger is if you land a second craft on parachutes within physics range of your main craft, and it \u0022lands\u0022 at slightly the wrong elevation.\u00A0Which is something you can fix with a few lines of code. In every other way it\u0027s better than stock collision in terms of performance, quality, and stability. Finally, because of how virtual texturing is handled, you\u0027ll be able to process hundreds of thousands of craters in an area before it starts becoming a problem, so long as not too many overlap at once in any given place. And you can fix that without much visual change by removing older, smaller craters from the list of deformations first.\n\u003C/p\u003E\n\u003Cp\u003E\nOn Unity, it\u0027s a different story. Last time I checked, there was no native support for virtual textures, so you might have to get creative with materials and shaders to get it working with tessellation. That could mean that you\u0027d be stealing significant amount of GPU time. It shouldn\u0027t be a huge deal for a game like KSP2, though, as it\u0027s not graphics-heavy.\u00A0The other aspect is that you need to make sure the compute for collision detection runs before actual collision detection, and you can add the additional contact points, which might have to be managed as joints you are adding and removing on every frame, and that\u0027s just not good for physics performance or stability. And that might be the breaking point for a Unity implementation of this, especially if Intercept intends to run KSP2\u00A0on PS4 and XB1.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s also most definitely a non-trivial amount of work, and you want at least the collision detection written by somebody who knows what they\u0027re doing. So I\u0027m not going to insist that Intercept should have done this, just that there\u0027s definitely a way to get good looking craters without having to deal with voxel terrain or create any stability problems or bugs in physics.\n\u003C/p\u003E\n"},{"CreatedByName":"LittleBitMore","CreatedById":201924,"CreatedDateTime":"2021-01-25T02:16:41Z","Content":"\n\u003Cp\u003E\nThey\u0027ve announced and demonstrated WAY better explosion graphics. Check out the dev logs, they\u0027re EPIC!\n\u003C/p\u003E\n\u003Cp\u003E\nas for terrain deformation, perhaps temporary smoldering ejecta type particles, but I don\u0027t personally think permanent terrain damage or deformation is the way to go\n\u003C/p\u003E\n"},{"CreatedByName":"Kernel Kraken","CreatedById":181383,"CreatedDateTime":"2021-01-25T19:07:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223914291\u0022 data-ipsquote-contentid=\u0022199760\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221611541001\u0022 data-ipsquote-userid=\u0022201924\u0022 data-ipsquote-username=\u0022LittleBitMore\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, LittleBitMore said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThey\u0027ve announced and demonstrated WAY better explosion graphics. Check out the dev logs, they\u0027re EPIC!\n\u003C/p\u003E\n\u003Cp\u003E\nas for terrain deformation, perhaps temporary smoldering ejecta type particles, but I don\u0027t personally think permanent terrain damage or deformation is the way to go\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMaybe just spawning a crummy crater model? Having a preset list of areas a crater can spawn in the event of a sufficiently heavy impact? Wait, no, that would take remodelling an entire planet or ay least taking a few hours to pepper it in preset impact points. I guess it\u0027s probably too late in development to get voxel deformation too.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2021-01-25T21:38:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223914618\u0022 data-ipsquote-contentid=\u0022199760\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221611601679\u0022 data-ipsquote-userid=\u0022181383\u0022 data-ipsquote-username=\u0022Kernel Kraken\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Kernel Kraken said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMaybe just spawning a crummy crater model?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nVisually, very easy to do, but the hard part is updating collision model. Whenever you are playing a game, you can picture it as two worlds co-existing at the same time on the screen. One is what gets rendered, which is purely visual and doesn\u0027t affect any gameplay or physics, and the other is the collision world, which defines all the boundaries, but remains entirely invisible. And they are handled completely differently. Rendering is done on the GPU fairly haphazardly, because it\u0027s more efficient to throw more shader cores at the problem than do any sort of complicated logic\u003Csup\u003E*\u003C/sup\u003E. Collisions are handled by CPU, so all the collision geometry is neatly organized into hierarchies for quick access. If you want to render a crater, it\u0027s easier to just render terrain with a chunk of it set to transparent and then draw the crater model over transparent bits, and it will look to you like there is a crater in the terrain. You can\u0027t do that with collisions, because there is no way to just make a portion of collision geometry \u0022transparent\u0022. So if you want to place a rock on the terrain, well, that\u0027s still going to require you to update the hierarchy, but otherwise, you just add more collision geometry. But if you need to make the hole in something? That\u0027s an adventure.\n\u003C/p\u003E\n\u003Cp\u003E\nThe engine I\u0027m responsible for, we have a way to disable some of the collision triangles on a mesh during build time. It\u0027s convenient specifically for cases where you want to make a crater or a tunnel through geometry that\u0027s already been designed. In principle, you could add some code to enable/disable individual triangles in the mesh at run-time. But it\u0027s not free - the collisions will take longer to compute if you do this, and it really has to be built into the physics engine. As far as I\u0027m aware, that\u0027s not an option in Unity/PhysX. So if you want to be able to have craters in terrain, you have to go custom with your terrain collision system. I\u0027ve described in a post above a good way to offload it to GPU, which isn\u0027t something you can do for general collisions\u003Csup\u003E*\u003C/sup\u003E, but you can for terrain. It is a lot of extra work, however, and I don\u0027t think Intercept has resources to throw at this right now.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Csup\u003E*\u00A0\u003C/sup\u003EWorth nothing, I\u0027m describing conventional GPUs with conventional rendering. Ray tracing uses \u0022accelerators\u0022\u00A0which are very similar to how collision hierarchy is handled, so in theory, at least, RTX/RDNA2 graphics cards should be pretty good at running collision detection. But it\u0027s unlikely we\u0027ll see a lot of games utilizing that at least for a while.\n\u003C/p\u003E\n"},{"CreatedByName":"runner78","CreatedById":168980,"CreatedDateTime":"2021-02-03T10:23:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223913327\u0022 data-ipsquote-contentid=\u0022199760\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221611348340\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/22/2021 at 9:45 PM, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOn Unity, it\u0027s a different story. Last time I checked, there was no native support for virtual textures\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUnity is working on it\u00A0\u003Ca href=\u0022https://forum.unity.com/threads/feedback-wanted-streaming-virtual-texturing.849133/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://forum.unity.com/threads/feedback-wanted-streaming-virtual-texturing.849133/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nA simple way would be to simply add a crater to the heightmap.\n\u003C/p\u003E\n"},{"CreatedByName":"Bej Kerman","CreatedById":182413,"CreatedDateTime":"2021-02-03T13:01:54Z","Content":"\n\u003Cp\u003E\nI think a simple thing to do would be to merge different explosions into one giant massive explosion rather than having each part get its own dinky little poof of fire. Besides that, parts shouldn\u0027t magically disappear, they should either explode into fragments or take a massive dent as a result of the collision force. Rockets don\u0027t just abra kadabra IRL.\n\u003C/p\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2021-02-03T15:08:56Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223919391\u0022 data-ipsquote-contentid=\u0022199760\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221612357314\u0022 data-ipsquote-userid=\u0022182413\u0022 data-ipsquote-username=\u0022Bej Kerman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Bej Kerman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI think a simple thing to do would be to merge different explosions into one giant massive explosion rather than having each part get its own dinky little poof of fire. Besides that, parts shouldn\u0027t magically disappear, \u003Cstrong\u003Ethey should either explode into fragments \u003C/strong\u003Eor take a massive dent as a result of the collision force. Rockets don\u0027t just abra kadabra IRL.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s mostly just a compromise for performance purposes, you\u0027d have to swap in a different model while also rendering the explosion. This causes lag even with small amounts of destruction, and quickly runs away into slideshow territory.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd that\u0027s assuming we\u0027re only talking about fragments for cosmetic purposes, if you wanted them to persist....then you can take that and double it.\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s ways around this, but i have absolutely no idea if Unity has them natively.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2021-02-03T18:20:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223919348\u0022 data-ipsquote-contentid=\u0022199760\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221612347824\u0022 data-ipsquote-userid=\u0022168980\u0022 data-ipsquote-username=\u0022runner78\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, runner78 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA simple way would be to simply add a crater to the heightmap.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSure, but that requires a collision scene rebuild and makes streaming terrain more awkward and expnsive. I can see it becoming prohibitive on consoles. And you are still limited to height map resolution, which isn\u0027t terribly high.\n\u003C/p\u003E\n\u003Cp\u003E\nWith VTs, you unload work to GPU and can have resolution down to centimeters.\n\u003C/p\u003E\n"},{"CreatedByName":"Kernel Kraken","CreatedById":181383,"CreatedDateTime":"2021-02-03T18:40:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223919442\u0022 data-ipsquote-contentid=\u0022199760\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221612364936\u0022 data-ipsquote-userid=\u0022197414\u0022 data-ipsquote-username=\u0022Incarnation of Chaos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Incarnation of Chaos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s mostly just a compromise for performance purposes, you\u0027d have to swap in a different model while also rendering the explosion.\u00A0\u003Cspan\u003E\u00A0\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI mean, real rockets don\u0027t split into a bunch of different parts then explode. It\u0027s one cohesive fireball and shockwave. I feel taking the mass of the rocket to decide the size of the explosion, then just starting it at the impacted part would make sense and be easier to render than a hundred separate particle emitters.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2021-02-04T01:31:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223919577\u0022 data-ipsquote-contentid=\u0022199760\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221612377602\u0022 data-ipsquote-userid=\u0022181383\u0022 data-ipsquote-username=\u0022Kernel Kraken\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, Kernel Kraken said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI mean, real rockets don\u0027t split into a bunch of different parts then explode. It\u0027s one cohesive fireball and shockwave. I feel taking the mass of the rocket to decide the size of the explosion, then just starting it at the impacted part would make sense and be easier to render than a hundred separate particle emitters.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFrom what I\u0027ve seen, that seems like what intercept is doing. They said before that explosions would be based on the fuel types and the mass.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}