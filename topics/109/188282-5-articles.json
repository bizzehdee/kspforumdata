{"TopicId":188282,"ForumId":109,"TopicTitle":"Visual design disasters I hope KSP 2 will steer away from","CreatedByName":"lajoswinkler","CreatedById":79159,"CreatedDateTime":"2019-09-16T12:48:37Z","PageNum":5,"Articles":[{"CreatedByName":"paul23","CreatedById":120544,"CreatedDateTime":"2019-10-14T11:23:03Z","Content":"\n\u003Cp\u003E\nIt\u0027s what I\u0027m saying: you *can* simulate for a whole craft if you optimize/precalculate during launch/ship geometry changes. Of course if you program it inefficiently you can\u0027t gain efficiency.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf we use thin walled approximation (or some other) you can also do this for stresses etc.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-10-14T11:23:50Z\u0022 title=\u002210/14/2019 11:23  AM\u0022 data-short=\u00224 yr\u0022\u003EOctober 14, 2019\u003C/time\u003E by paul23\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2019-10-14T13:30:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223686948\u0022 data-ipsquote-contentid=\u0022188282\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221571052183\u0022 data-ipsquote-userid=\u0022120544\u0022 data-ipsquote-username=\u0022paul23\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, paul23 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s what I\u0027m saying: you *can* simulate for a whole craft if you optimize/precalculate during launch/ship geometry changes. Of course if you program it inefficiently you can\u0027t gain efficiency.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCertainly you can, but if you treat the entire craft as a single physics object, the behaviour of the game will change noticeably.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223686948\u0022 data-ipsquote-contentid=\u0022188282\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221571052183\u0022 data-ipsquote-userid=\u0022120544\u0022 data-ipsquote-username=\u0022paul23\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, paul23 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf we use thin walled approximation (or some other) you can also do this for stresses etc.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027d be quite curious to hear more about this. Simulating stresses, flex with \u0022springiness,\u0022 etc still sounds like a qualitatively different problem to me than aero simulation on a single physics object.\n\u003C/p\u003E\n\u003Cp\u003E\nConsider the following use cases:\n\u003C/p\u003E\n\u003Cp\u003E\n(1) A heavy plane with large wings consisting of many wing components each -- say, 12 components each wing, for a total of 24 components. When you fly it, you will see the wing flex as you manoeuvre, and if you pull enough gees, it\u0027ll come apart. How would you simulate the flex, springiness, stresses, and eventual \u003Cabbr title=\u0022Rapid unplanned disassembly\u0022\u003ERUD\u003C/abbr\u003E in a multithreaded simulation?\n\u003C/p\u003E\n\u003Cp\u003E\n(2) Two moderately complex spacecraft, say about 100 parts each. They collide at 20 m/s. How do you simulate the effects of the shock of the collision passing through the structures in a multithreaded simulation?\n\u003C/p\u003E\n\u003Cp\u003E\nTo my understanding, the bottleneck with KSP\u0027s physics simulation is precisely here: it\u0027s either impossible or very difficult to parallelise the required computations, because -- like is most obvious in the collision scenario -- the forces experienced by each part depend on the forces experienced by every other part. I do not know of any technique that could solve this without materially changing the behaviour of the system.\n\u003C/p\u003E\n\u003Cp\u003E\n(Star Theory has hinted at a \u0022physics LOD\u0022 system which would weld parts into groups that are treated as a single part for physics calculations, keeping the total part count always below the maximum the engine can reasonably handle. I think this would be a very good solution, but it would change the way the game behaves.)\n\u003C/p\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2019-10-14T14:14:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223686946\u0022 data-ipsquote-contentid=\u0022188282\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221571052121\u0022 data-ipsquote-userid=\u0022167629\u0022 data-ipsquote-username=\u0022Brikoleur\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Brikoleur said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E simulates aerodynamics for the entire craft. KSP has to simulate interactions between parts, with flex and stresses that may lead to failures. You\u2019re not describing the same problem.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAnd mind you most of this requires you to know how previous interactions affected them; all of this runs away into exponentially increasing numbers of calculations even when assuming we can get around this. Which makes me really wonder even if you were running matrix multiplication on the GPU if it wouldn\u0027t quickly saturate it to the point where we\u0027re right back into stutter and lag.\n\u003C/p\u003E\n"},{"CreatedByName":"paul23","CreatedById":120544,"CreatedDateTime":"2019-10-14T23:11:41Z","Content":"\n\u003Cp\u003E\nHonestly I\u0027m going to sound quite \u0022up there\u0022 now, but this isn\u0027t the topic to discuss this.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI can however just start copying all text books in material engineering and flight dynamics I used during my studies if you wish. However it\u0027s not something I can just \u0022show\u0022 in a 2 paragraph post. It\u0027s easy once you \u0022get\u0022 it (it\u0027s *made* easy for computers), however \u0022getting it\u0022 requires a bit of fundamental understanding of how stress work, and linearization techniques for differential equations.\n\u003C/p\u003E\n\u003Cp\u003E\nSolved problems, however still taking multiple years before I understood it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut the whole idea of \u0022parts\u0022 does not in any way make it more difficult at all. Fluid dynamics as well as stress calculations you use \u0022parts\u0022 anyways (finite element method).\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2019-10-15T01:17:42Z","Content":"\n\u003Cp\u003E\nYou will understand if we won\u2019t take you on faith on that I hope. The physics bottleneck is one of the more talked-about issues here and what you\u2019re saying goes against the received wisdom \u2014 and you\u2019re not the only aerospace engineer on the board. So at least I\u2019m going to file that under \u201Cinteresting but most likely\u00A0wrong\u201D unless you can do better.\n\u003C/p\u003E\n"},{"CreatedByName":"paul23","CreatedById":120544,"CreatedDateTime":"2019-10-15T02:28:01Z","Content":"\n\u003Cp\u003E\nWell it ultimately doesn\u0027t matter, since game developers aren\u0027t engineers anyways. I\u0027ve yet to find a *programmer* let alone a game dev who has a fundamental understanding of mathematics, most act like mathematics are some kind of wizardry that sometimes works, something people fear. So I\u0027m doubtful anything I can say has any relevance.\u003Cbr\u003E\u003Cbr\u003E\nBut in engineering when we simulate things it\u0027s all about solving matrix equations. And the *thinking* happens in how we can linearize stuff, how *can* real world be abstracted so that everything is linear. Typically if you have a differential equation of n orders, you make it n-1 by introducing another equation, and another state variable. (IE take another derivative to time). If you do this enough times any n-order differential equation becomes a first order equation, which can be linearized trivially and solved numerically.\u00A0 (Actually I would write down everything if forums just allowed for latex).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nJust checking my old textbooks: T. H. G. Megson (2013):\u003Cem\u003E Aircraft structures for engineering students, (5th ed)\u003C/em\u003E: chapter 6, 7 and 23 are describing the problem and how to linearize it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut the main idea I put forward is to \u0022ignore\u0022 the different parts: first do a proto analysis of the parts and combine them into a \u0022wireframe\u0022/\u0022skeletal\u0022 of how the object would look like in reality. This obviously can\u0027t be linearized and is mainly a CPU task (it is transforming parts into \u0022plates, beams, hinges and other connections\u0022). However this part only has to be calculated when geometry changes. Then use some of the many tools available to calculate shear flow, stress lines and torsion. Good thing is: you can just say \u0022it breaks\u0022 instead of having to include the non linear part where material doesn\u0027t behave nice anymore.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI know I *wish* I could use the GPU for these calculations during tests. It would allow me to use my own pc instead of having to hire one. The biggest problem is that the floating point calculations on GPU\u0027s are often badly implemented/not well defined. Where the calculations are sometime actually incorrect (comparing to IEEE standards), for the sake of speed and in games it won\u0027t matter, in simulations it does.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-10-15T02:30:36Z\u0022 title=\u002210/15/2019 02:30  AM\u0022 data-short=\u00224 yr\u0022\u003EOctober 15, 2019\u003C/time\u003E by paul23\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2019-10-15T03:31:12Z","Content":"\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223687303\u0022 data-ipsquote-contentid=\u0022188282\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221571106481\u0022 data-ipsquote-userid=\u0022120544\u0022 data-ipsquote-username=\u0022paul23\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n54 minutes ago, paul23 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EWell it ultimately doesn\u0027t matter, since game developers aren\u0027t engineers anyways. I\u0027ve yet to find a *programmer* let alone a game dev who has a fundamental understanding of mathematics, most act like mathematics are some kind of wizardry that sometimes works, something people fear. So I\u0027m doubtful anything I can say has any relevance.\u003C/strong\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cstrong\u003EBut in engineering when we simulate things it\u0027s all about solving matrix equations. And the *thinking* happens in how we can linearize stuff, how *can* real world be abstracted so that everything is linear. Typically if you have a differential equation of n orders, you make it n-1 by introducing another equation, and another state variable. (IE take another derivative to time). If you do this enough times any n-order differential equation becomes a first order equation, which can be linearized trivially and solved numerically.\u00A0 (Actually I would write down everything if forums just allowed for latex).\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nJust checking my old textbooks: T. H. G. Megson (2013):\u003Cem\u003E Aircraft structures for engineering students, (5th ed)\u003C/em\u003E: chapter 6, 7 and 23 are describing the problem and how to linearize it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut the main idea I put forward is to \u0022ignore\u0022 the different parts: first do a proto analysis of the parts and combine them into a \u0022wireframe\u0022/\u0022skeletal\u0022 of how the object would look like in reality. This obviously can\u0027t be linearized and is mainly a CPU task (it is transforming parts into \u0022plates, beams, hinges and other connections\u0022). However this part only has to be calculated when geometry changes. Then use some of the many tools available to calculate shear flow, stress lines and torsion. Good thing is: you can just say \u0022it breaks\u0022 instead of having to include the non linear part where material doesn\u0027t behave nice anymore.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EI know I *wish* I could use the GPU for these calculations during tests. It would allow me to use my own pc instead of having to hire one. The biggest problem is that the floating point calculations on GPU\u0027s are often badly implemented/not well defined. Where the calculations are sometime actually incorrect (comparing to IEEE standards), for the sake of speed and in games it won\u0027t matter, in simulations it does.\u003C/strong\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n....And i think iv\u0027e realized where the disconnect is here; basically you\u0027re talking about something you learned in a Engineering/Aeronautical pathway. While we\u0027re only focusing on the application; which won\u0027t work because at least from my end i don\u0027t really understand the concepts and i fully admit that. I have a programming background, and i have a hobby/enthusiast understanding of physics and aeronautics.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo to do what you\u0027re saying you would basically need Aeronautical Engineers to work with the programmers, so the correct implementation could be derived. I WANT to understand, but it\u0027s pretty clear this is something you\u0027ve studied in depth and can\u0027t be imparted in a simple fourm post.\n\u003C/p\u003E\n\u003Cp\u003E\nI suppose you could spin up a thread in one of the Science/Spaceflight sections if you really felt determined to outline this stuff.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2019-10-15T06:45:40Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/120544-paul23/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022120544\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/120544-paul23/\u0022 rel=\u0022\u0022\u003E@paul23\u003C/a\u003E\u00A0touch\u00E9, I\u2019m a programmer with no fundamental understanding of maths - but I work with mathematicians (we do industrial AI stuff) and we do communicate. I am generally able to understand\u00A0\u003Cem\u003Ewhat\u00A0\u003C/em\u003Ethe mathematics do (and don\u2019t!) even if I don\u2019t understand\u00A0\u003Cem\u003Ehow\u00A0\u003C/em\u003Ethey do it. We can communicate meaningfully.\n\u003C/p\u003E\n\u003Cp\u003E\nThing is, the converse is true too. The mathematicians don\u2019t understand software, and sometimes a solved mathematical problem is an unsolved software problem.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat you\u2019re describing now sounds pretty complicated. Correct me if I misunderstood, but you\u2019re proposing to turn the craft model assembled in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E into a precomputed model, which includes material strengths and characteristics like tensile strength, rigidity, frangibility, heat tolerance, stress lines, torsion, and so on?\n\u003C/p\u003E\n\u003Cp\u003E\nThis would be very cool but as a programmer I\u2019ll have to point out that it\u2019s an order of magnitude more complex\u00A0\u003Cem\u003Ealready at the part level\u00A0\u003C/em\u003Ethan what we have now. We don\u2019t know any material characteristics: we just know the failure points for individual parts for a small number of stressors. \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E is already remarkable and it\u00A0\u003Cem\u003Eonly\u003C/em\u003E\u00A0models the aerodynamic shape of the craft as the basis for the simulation, not failure modes.\n\u003C/p\u003E\n\u003Cp\u003E\nSo while I\u2019m still not entirely convinced it could not be done at all, I\u2019m even less convinced it could be done within the time, budget, and platform constraints used for KSP2: namely, craft physics simulated using Unity\u2019s rigid-body physics API. If it requires turning KSP into something resembling the software Airbus used to design airframes... well, that\u2019s a tall order.\n\u003C/p\u003E\n\u003Cp\u003E\nAgain, I\u2019d be delighted to be proven wrong as this would be an improvement on so many levels, but... well, not buying it yet.\n\u003C/p\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2019-10-15T08:11:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223687303\u0022 data-ipsquote-contentid=\u0022188282\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221571106481\u0022 data-ipsquote-userid=\u0022120544\u0022 data-ipsquote-username=\u0022paul23\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, paul23 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ve yet to find a *programmer* let alone a game dev who has a fundamental understanding of mathematics\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTo be fair most engineers couldn\u0027t code their way out of wet paper bag.\n\u003C/p\u003E\n\u003Cp\u003E\nMost professionals in both fields though are able to discuss with professionals in other fields and come to understandings about what can and can\u0027t be done. I have to believe either they are all wrong and you\u0027re right, or you\u0027re right and they are all wrong.\n\u003C/p\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2019-10-15T08:31:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223687199\u0022 data-ipsquote-contentid=\u0022188282\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221571094701\u0022 data-ipsquote-userid=\u0022120544\u0022 data-ipsquote-username=\u0022paul23\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, paul23 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHonestly I\u0027m going to sound quite \u0022up there\u0022 now, but this isn\u0027t the topic to discuss this.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI can however just start copying all text books in material engineering and flight dynamics I used during my studies if you wish. However it\u0027s not something I can just \u0022show\u0022 in a 2 paragraph post. It\u0027s easy once you \u0022get\u0022 it (it\u0027s *made* easy for computers), however \u0022getting it\u0022 requires a bit of fundamental understanding of how stress work, and linearization techniques for differential equations.\n\u003C/p\u003E\n\u003Cp\u003E\nSolved problems, however still taking multiple years before I understood it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut the whole idea of \u0022parts\u0022 does not in any way make it more difficult at all. Fluid dynamics as well as stress calculations you use \u0022parts\u0022 anyways (finite element method).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMesh simulations, at least in multiphysics simulators, such as NX or COMSOL take a long time to converge their simulations. Even if you were to only use 200 vertices (locations for each part in a 200 part craft represented by its center in x,y,z coordinates and orientation in u,v,w as 1200 vector components) theres no way you could get a simulation to converge in real time @ 60fps. Though I\u0027ll admit I\u0027m not an engineer.\n\u003C/p\u003E\n"},{"CreatedByName":"Xd the great","CreatedById":188222,"CreatedDateTime":"2019-10-15T10:00:30Z","Content":"\n\u003Cp\u003E\nIf KSP2 can run simulations with high realism and speed on a \u003Ci\u003Ehome computer\u003C/i\u003E, all the devs will be recruited by NASA and KSP2 will be a standard tool for aeronautics and aerospace engineering.\n\u003C/p\u003E\n"}]}