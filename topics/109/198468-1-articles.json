{"TopicId":198468,"ForumId":109,"TopicTitle":"A KSP 2 question: I do not know if it\u0027s been answered","CreatedByName":"JoeSchmuckatelli","CreatedById":154477,"CreatedDateTime":"2020-12-02T00:47:13Z","PageNum":1,"Articles":[{"CreatedByName":"JoeSchmuckatelli","CreatedById":154477,"CreatedDateTime":"2020-12-02T00:47:13Z","Content":"\n\u003Cp\u003E\nFeel free to chunk this into the appropriate thread - but I have question about something that bugged me early on in KSP: the inability to attach a something to another something if both are radially attached to the main something.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMost notably, this applies to wing segments - like, when I try to make a big wing from a bunch of different parts, or say I wanted to build an OV-10 or P-38 lightning - with the tails being able to be connected to each other by a central wing.\u00A0 Or to make pontoons that connect with the fuselage via two girders at the ends of the pontoon\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWith rockets and other parts, we use struts to keep stuff from flexing - but that could be fixed by allowing parts to connect in non linear / non branching ways\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHas this been addressed in KSP 2?\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-12-02T04:49:57Z","Content":"\n\u003Cp\u003E\nThere isn\u0027t a reason why this can\u0027t be allowed; after all, there are struts. But there are some reasons for why it\u0027s not done in KSP and why they might not change that in KSP2.\n\u003C/p\u003E\n\u003Cp\u003E\nWith exception of struts and fuel lines, all parts in a craft are arranged into a tree. That is, every part has a unique parent, which has its own parent, and so on until you get to the root part. This creates a unique path from any part to the root. In turn, this allows for a number of simplifications.\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nResource logic likely started out entirely using this tree structure. Even with fuel lines, the way the tank vs fuel line priority system worked, it effectively worked back along the tree. Modern implementation of fuel consumption is more balanced, so it might not strictly depend on the tree, but I bet it still uses it for optimization. Technically speaking, not a requirement for KSP2, depending on how they chose to manage fuel.\n\u003C/li\u003E\n\u003Cli\u003E\nStresses distributed around loops are generally bad for numerical stability. That\u0027s at least partially solved, because, again, struts, so might not be a factor for KSP2, but it certainly used to be a big part of the problem.\n\u003C/li\u003E\n\u003Cli\u003E\nIt\u0027s very easy to edit the craft. If you pick up a part, everything attached to that part moves. If you have 3 parts attached to each other in a circle and you selected one to move, it\u0027s not clear what your intention is - to move one part or all three.\u00A0Though, that can be worked around with a different UI for assembling parts.\n\u003C/li\u003E\n\u003Cli\u003E\nPerhaps, most relevant, logic for keeping track of what still constitutes a single craft. This is relevant if a part breaks or if there is staging. In general, if you allow parts to connect any which way, process of figuring out if two parts are still part of the same craft is a bit complicated. So you\u0027d have to do a lot of expensive checks any time there\u0027s destruction or stage separation. For reasonable sized craft and with single separation events it\u0027s not so bad, but if you think framerates get bad for big rockets during a crash now... Having parts connect in a tree solves this problem. Two parts are on the same craft if they share an ancestor. It\u0027s a very quick check. And when staging happens, part to one side of the stage separator becomes a root of a new craft, and everything down that branch is removed from original craft. Simple, clean, easy to maintain.\u003Csup\u003E*\u003C/sup\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nThat last point is the reason I would expect KSP2 to keep this design. In light of that, I propose an alternative solution. Allow us to hide struts. If you simply arrange parts into the shape you want and hold them with struts, then make struts invisible, it gives you the same visuals that you wanted with all the structural strength you wanted, while the game gets to keep the simple logic of tree traversal.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Csup\u003E*\u003C/sup\u003E\u00A0A caveat worth mentioning is docking. When you dock to a station, the docking port of one craft or the other has to become a new root for that craft, so that after the attachment, it makes up a branch of the new, combined tree. Fortunately, trees can always be re-rooted. And you might have noticed that we even have a widget for it in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E that does the same thing. I don\u0027t actually know what\u0027s the logic on picking which craft gets re-routed during docking, and whether the new root persists after you undock, but either way, even here\u00A0we see trees being cleverly utilized to simplify game logic.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2020-12-02T05:05:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223888655\u0022 data-ipsquote-contentid=\u0022198468\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221606884597\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat last point is the reason I would expect KSP2 to keep this design. In light of that, I propose an alternative solution. Allow us to hide struts. If you simply arrange parts into the shape you want and hold them with struts, then make struts invisible, it gives you the same visuals that you wanted with all the structural strength you wanted, while the game gets to keep the simple logic of tree traversal\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can hide struts now by clipping them into the part\n\u003C/p\u003E\n"},{"CreatedByName":"magnemoe","CreatedById":57801,"CreatedDateTime":"2020-12-02T08:43:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223888658\u0022 data-ipsquote-contentid=\u0022198468\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221606885545\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can hide struts now by clipping them into the part\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou also have the virtual struts in KSP 1.0 replacing lots of the old struts, I say the places there I use struts I would want them visible like tip of bosters to core or with grinders.\u00A0\n\u003C/p\u003E\n"}]}