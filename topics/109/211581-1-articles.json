{"TopicId":211581,"ForumId":109,"TopicTitle":"Where\u0027s the scattering?","CreatedByName":"coyotesfrontier","CreatedById":181596,"CreatedDateTime":"2023-01-19T04:40:25Z","PageNum":1,"Articles":[{"CreatedByName":"coyotesfrontier","CreatedById":181596,"CreatedDateTime":"2023-01-19T04:40:25Z","Content":"\n\u003Cp\u003E\nIn previous developer previews of KSP2, we were shown beautiful atmospheric scattering on Kerbin and other planets:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022ItoHdBd.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002290.00\u0022 height=\u0022675\u0022 width=\u00221200\u0022 src=\u0022https://i.imgur.com/ItoHdBd.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022TSLNhJo.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002290.00\u0022 height=\u0022675\u0022 width=\u00221200\u0022 src=\u0022https://i.imgur.com/TSLNhJo.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBut in recent gameplay footage, the scattering appears to be gone:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022beta-ksc-timelapse-3.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u0022120.00\u0022 height=\u0022675\u0022 width=\u00221200\u0022 src=\u0022https://i.ibb.co/6B7sYbd/beta-ksc-timelapse-3.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022beta-ksc-timelapse-4.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u0022120.00\u0022 height=\u0022675\u0022 width=\u00221200\u0022 src=\u0022https://i.ibb.co/RhV0MFW/beta-ksc-timelapse-4.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nCould someone like \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/205123-nate-simpson/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022205123\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/205123-nate-simpson/\u0022 rel=\u0022\u0022\u003E@Nate Simpson\u003C/a\u003E\u00A0confirm that it remains in the game?\n\u003C/p\u003E\n"},{"CreatedByName":"Gargamel","CreatedById":64714,"CreatedDateTime":"2023-01-19T05:06:59Z","Content":"\n\u003Cp\u003E\nWhile that is a completely valid question, what difference does it make? \u00A0 \u00A0\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe game will be the game they produce. \u00A0 What comes out of the studio on the 24th may only have a loose correlation to what has been previewed in past years. \u00A0 Projects change over time. \u00A0 \u00A0Sacrifices and compromises have to be made. \u00A0 What gets released is what get released. \u00A0\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe video gaming industry has been doing this for 40 years. \u00A0 \u00A0Showing promotional stuff \u00A0that builds hype, and then releasing a completely different product. \u00A0 \u00A0This is not a new thing. \u00A0 \u00A0If these types of differences would affect you purchasing the game or not, then it\u2019s on the consumer to wait a couple days after release to confirm the features you desire are actually in the product you want. \u00A0\u00A0 \u00A0There are professional gamers out there who will do the initial purchase and review for you if this is the case. \u00A0\u00A0Otherwise, it\u2019s buyer beware.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI have no inside info on what or isn\u2019t in the game. \u00A0 I\u2019m just a fellow kerbinaut who is happily awaiting the release of a sequel of a favored game, without any expectations or prejudices.\u00A0\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: Not speaking as a moderator or with any association with PD/TTi/etc, just a fellow gamer.\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-01-19T05:18:16Z\u0022 title=\u002201/19/2023 05:18  AM\u0022 data-short=\u00221 yr\u0022\u003EJanuary 19, 2023\u003C/time\u003E by Gargamel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2023-01-19T07:06:50Z","Content":"\n\u003Cp\u003E\nThe scatter shown has never been on Kerbin. I\u0027m guessing its an effect reserved for planets with denser atmospheres. It\u0027s a pretty effect, but it doesn\u0027t belong at the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E imo\n\u003C/p\u003E\n"},{"CreatedByName":"Vl3d","CreatedById":219348,"CreatedDateTime":"2023-01-19T09:04:02Z","Content":"\n\u003Cp\u003E\nIt\u0027s just beta guys, they\u0027re optimizing and adding features gradually. Be patient, it\u0027s just one more month to go and then we can start giving feedback through official channels.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2023-01-19T11:44:50Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221401\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674112010\u0022 data-ipsquote-userid=\u0022180102\u0022 data-ipsquote-username=\u0022mcwaffles2003\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, mcwaffles2003 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe scatter shown has never been on Kerbin. I\u0027m guessing its an effect reserved for planets with denser atmospheres. It\u0027s a pretty effect, but it doesn\u0027t belong at the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003E\u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E\u003C/abbr\u003E imo\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPretty sure it\u0027s this. The \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E likely uses materials that got implemented before the scattering was added, and the artists simply haven\u0027t gotten around to updating the materials. It\u0027ll get fixed some time either before or during the early access.\n\u003C/p\u003E\n"},{"CreatedByName":"tstein","CreatedById":223854,"CreatedDateTime":"2023-01-19T14:52:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221441\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674128690\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPretty sure it\u0027s this. The \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003E\u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E\u003C/abbr\u003E likely uses materials that got implemented before the scattering was added, and the artists simply haven\u0027t gotten around to updating the materials. It\u0027ll get fixed some time either before or during the early access.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt makes sense\u00A0 because the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E itself looks inferior material/shader wise than the rest of the stuff about the game we have seen up to now.\u00A0 PRobably it was the first models and materials they added in the development as well.\n\u003C/p\u003E\n"},{"CreatedByName":"AtomicTech","CreatedById":210823,"CreatedDateTime":"2023-01-19T15:04:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221415\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674119042\u0022 data-ipsquote-userid=\u0022219348\u0022 data-ipsquote-username=\u0022Vl3d\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Vl3d said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s just beta guys, they\u0027re optimizing and adding features gradually. Be patient, it\u0027s just one more month to go and then we can start giving feedback through official channels.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThey have mentioned multiple times that the beta footage that they show us is can and often likely is created with various beta features/functions and that, in the end, all of it will be recombined.\n\u003C/p\u003E\n\u003Cp\u003E\nI do think we\u0027ll see scattering on Kerbin and at the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E.\n\u003C/p\u003E\n"},{"CreatedByName":"t_v","CreatedById":213541,"CreatedDateTime":"2023-01-19T15:28:46Z","Content":"\n\u003Cp\u003E\nIf there isn\u2019t any scattering at all on Kerbin but there is on other planets, that you\u2019ll look pretty visually inconsistent. Even if the scattering effects we have seen are for denser atmospheres, there should still be a lesser degree of scattering for Kerbin. I\u2019m hoping it is just a matter of making the materials compatible with scattering (and lighting, that top photo looks amazing) but even if it isn\u2019t present at launch, it\u2019ll probably be put in before 1.0, potentially due to asking why different planets look split between high and low graphics settings.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Alexoff","CreatedById":145774,"CreatedDateTime":"2023-01-19T19:48:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221415\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674119042\u0022 data-ipsquote-userid=\u0022219348\u0022 data-ipsquote-username=\u0022Vl3d\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 hours ago, Vl3d said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s just beta guys, they\u0027re optimizing and adding features gradually. Be patient, it\u0027s just one more month to go and then we can start giving feedback through official channels.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, in general, we will play the beta version, the date of the full release is unknown\n\u003C/p\u003E\n"},{"CreatedByName":"treesniper12","CreatedById":71673,"CreatedDateTime":"2023-01-19T20:26:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221401\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674112010\u0022 data-ipsquote-userid=\u0022180102\u0022 data-ipsquote-username=\u0022mcwaffles2003\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, mcwaffles2003 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe scatter shown has never been on Kerbin. I\u0027m guessing its an effect reserved for planets with denser atmospheres. It\u0027s a pretty effect, but it doesn\u0027t belong at the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003E\u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E\u003C/abbr\u003E imo\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAtmospheric scattering happens to an extent on any body with an atmosphere. It\u0027s definitely noticeable at medium to long distances on Earth. Kerbin has always been an Earth analogue, and I don\u0027t see how not giving it realistic scattering would make sense at all.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Brofessional","CreatedById":2080,"CreatedDateTime":"2023-01-19T22:23:26Z","Content":"\n\u003Cp\u003E\nThe beta screenshots don\u0027t even have anti-aliasing turned on so I wouldn\u0027t worry about them missing graphical features.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2023-01-19T22:32:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221623\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674159996\u0022 data-ipsquote-userid=\u002271673\u0022 data-ipsquote-username=\u0022treesniper12\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, treesniper12 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAtmospheric scattering happens to an extent on any body with an atmosphere. It\u0027s definitely noticeable at medium to long distances on Earth. Kerbin has always been an Earth analogue, and I don\u0027t see how not giving it realistic scattering would make sense at all.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot to mention that it\u0027s just a simpler way to implement sky light in general, once you have everything else set up.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know if there\u0027s an\u00A0\u003Cem\u003Eeasy\u003C/em\u003E\u00A0way to hook it up in Unity (the slightly harder way is with a custom shader node), but a standard approach in custom engines is that you generally already have a system to light a surface from a light probe, and you use that. A light probe encodes the directional information about light at a point, and it\u0027s usually stored as spherical harmonics. The advantage is that you can usually get light quality almost as good as from a full cube map, but only storing a dozen or so \u0022pixels\u0022 (a bit more for specular probes) instead of a full cube map, which allows you to place the probes in a grid around your map. That\u0027s the standard way of doing global illumination (GI). The materials then have a pre-computed response for each spherical harmonic, which means that the shader just has to take the light harmonics from the nearest probe, rotate these to local coordinates, taking normals and binormals into account, multiply them by response function, use a lookup table to get the value for that response pointed towards the camera, and return that value. It\u0027s a hell\u0027a lot of math, but because it\u0027s all pre-computed and pre-tabulated, the actual runtime is blazing fast, and you get indirect illumination of your surfaces in most realistic conditions.\n\u003C/p\u003E\n\u003Cp\u003E\nSo what you do for scattered sky light is you do a single pass, computing spherical harmonics from the sky cube map. Then you pass\u00A0\u003Cem\u003Ethese\u003C/em\u003E\u00A0to the material shader, as if it was one of the light probes, and you let the material do its thing. It\u0027s basically zero overhead, since the update of the spherical harmonics for the sky can be spread between multiple frames. If you have a unified system, that has clouds baked into it, you\u0027ll even get occlusion from these. And the best part is that spherical harmonics preserve directionality of light. So if you have a sunset/sunrise situation, the side of a building facing the sun will be washed in auburn orange, while the side away from the sun will be bluish gray, exactly as you expect in that sort of a scene, and it takes almost zero work once you have the skybox computed.\n\u003C/p\u003E\n\u003Cp\u003E\nUnity has a light probe system, and it has material nodes designed to work with these. What I don\u0027t know is if you can create a fake light node data that you can pass to the shader so that you can just recycle these material nodes and make it work with your custom skybox. If not, you\u0027ll have to do the work of building that shader node by hand. That said, from footage from other planets, it\u0027s clear that the work has already be done, whichever way they ended up doing it. So now it\u0027s literally just a matter of updating the materials used on Kerbin and in structures, including \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nThe point here is that if you don\u0027t do the above, you still have to account for sunlight, and if you just do direct illumination from the Sun, it looks like crap. Well, by modern standards - that\u0027s what people used to do back in 2000, and it was fine then. Since\u00A0\u003Cem\u003Eat least\u003C/em\u003E\u00A0the mid 2000\u0027s, people started adding an environmental map to the scene. You usually would bake two of these. One would be just a cube map of the light sources typical to the scene. For the indoors, it might have some fake lights on it, and for outdoors it\u0027d typically be just your skybox. You\u0027d use it as is for your specular light. Then for diffuse, you literally pre-compute the convolution with a cosine function, to get that dot-product factored in from every possible angle. Now instead of doing anything fancy, your entire environment light is just two texture lookups. Finally, if you wanted a day-night cycle, you\u0027d have three of these, day, night, and dusk/dawn maps, that you you rotate them with the movement of the Sun and blend together as time moves from morning to day, to evening, to night. Cheap, reasonably believable, and easy to implement. I think KSP did something similar. Problem is, the moment you have clouds, rain, or any other weather effects, guess what, you have to add a new map variation for each of these. And it never looks\u00A0\u003Cem\u003Equite\u003C/em\u003E\u00A0right with fancy materials. Especially, once you start adding shinier looking surfaces. And if you already have GI working, it\u0027s not easier at all to implement! So you might as well go for proper scatter light on everything and have a single set of materials that accounts for it all.\n\u003C/p\u003E\n\u003Cp\u003E\ntl;dr: You have to do work to do skylight illumination either way, and if you already set up scatter illumination for other worlds, you get it for free for other bodies, even these without an atmosphere at all! So there is zero reason not to.\n\u003C/p\u003E\n"},{"CreatedByName":"KalleHeHa","CreatedById":224548,"CreatedDateTime":"2023-01-19T22:33:23Z","Content":"\n\u003Cp\u003E\nAlso in a official screenshot from the steam page on the surface of laythe you can see scattering, I don\u0027t think they wouldn\u0027t have it also on kerbin.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-01-19T22:34:05Z\u0022 title=\u002201/19/2023 10:34  PM\u0022 data-short=\u00221 yr\u0022\u003EJanuary 19, 2023\u003C/time\u003E by KalleHeHa\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Stephensan","CreatedById":222320,"CreatedDateTime":"2023-01-19T23:44:35Z","Content":"\n\u003Cp\u003E\nthere is even scatter on the photos,(for kerbin) so im more and more thinking its two things still\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEditor Mode\n\u003C/p\u003E\n\u003Cp\u003E\nPotato Mode\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-01-19T23:45:26Z\u0022 title=\u002201/19/2023 11:45  PM\u0022 data-short=\u00221 yr\u0022\u003EJanuary 19, 2023\u003C/time\u003E by Stephensan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Bej Kerman","CreatedById":182413,"CreatedDateTime":"2023-01-20T00:02:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221378\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674104819\u0022 data-ipsquote-userid=\u002264714\u0022 data-ipsquote-username=\u0022Gargamel\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, Gargamel said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhile that is a completely valid question, what difference does it make? \u00A0 \u00A0\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe game will be the game they produce. \u00A0 What comes out of the studio on the 24th may only have a loose correlation to what has been previewed in past years. \u00A0 Projects change over time. \u00A0 \u00A0Sacrifices and compromises have to be made. \u00A0 What gets released is what get released. \u00A0\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe video gaming industry has been doing this for 40 years. \u00A0 \u00A0Showing promotional stuff \u00A0that builds hype, and then releasing a completely different product. \u00A0 \u00A0This is not a new thing. \u00A0 \u00A0If these types of differences would affect you purchasing the game or not, then it\u2019s on the consumer to wait a couple days after release to confirm the features you desire are actually in the product you want. \u00A0\u00A0 \u00A0There are professional gamers out there who will do the initial purchase and review for you if this is the case. \u00A0\u00A0Otherwise, it\u2019s buyer beware.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI have no inside info on what or isn\u2019t in the game. \u00A0 I\u2019m just a fellow kerbinaut who is happily awaiting the release of a sequel of a favored game, without any expectations or prejudices.\u00A0\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: Not speaking as a moderator or with any association with PD/TTi/etc, just a fellow gamer.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOr they\u0027re just using test builds, as previously stated \u003Cspan\u003E\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"TLTay","CreatedById":184633,"CreatedDateTime":"2023-01-20T00:37:10Z","Content":"\n\u003Cp\u003E\nThe sky has scattering. It looks like there is VERY clear air on Kerbin, but it does appear it can be somewhat seen in the distant mountain range behind the water.\n\u003C/p\u003E\n"},{"CreatedByName":"Luriss","CreatedById":202934,"CreatedDateTime":"2023-01-20T00:55:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221660\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674167536\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo if you have a sunset/sunrise situation, the side of a building facing the sun will be washed in auburn orange, while the side away from the sun will be bluish gray, exactly as you expect in that sort of a scene, and it takes almost zero work once you have the skybox computed.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf I\u0027m reading this right, this means scatter and sunrise/sunset lighting are interlinked.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is consistent with the stream; there was no coloured lighting at sunrise/sunset.\n\u003C/p\u003E\n"},{"CreatedByName":"whatsEJstandfor","CreatedById":220814,"CreatedDateTime":"2023-01-20T00:55:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221660\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674167536\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot to mention that it\u0027s just a simpler way to implement sky light in general, once you have everything else set up.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know if there\u0027s an\u00A0\u003Cem\u003Eeasy\u003C/em\u003E\u00A0way to hook it up in Unity (the slightly harder way is with a custom shader node), but a standard approach in custom engines is that you generally already have a system to light a surface from a light probe, and you use that. A light probe encodes the directional information about light at a point, and it\u0027s usually stored as spherical harmonics. The advantage is that you can usually get light quality almost as good as from a full cube map, but only storing a dozen or so \u0022pixels\u0022 (a bit more for specular probes) instead of a full cube map, which allows you to place the probes in a grid around your map. That\u0027s the standard way of doing global illumination (GI). The materials then have a pre-computed response for each spherical harmonic, which means that the shader just has to take the light harmonics from the nearest probe, rotate these to local coordinates, taking normals and binormals into account, multiply them by response function, use a lookup table to get the value for that response pointed towards the camera, and return that value. It\u0027s a hell\u0027a lot of math, but because it\u0027s all pre-computed and pre-tabulated, the actual runtime is blazing fast, and you get indirect illumination of your surfaces in most realistic conditions.\n\u003C/p\u003E\n\u003Cp\u003E\nSo what you do for scattered sky light is you do a single pass, computing spherical harmonics from the sky cube map. Then you pass\u00A0\u003Cem\u003Ethese\u003C/em\u003E\u00A0to the material shader, as if it was one of the light probes, and you let the material do its thing. It\u0027s basically zero overhead, since the update of the spherical harmonics for the sky can be spread between multiple frames. If you have a unified system, that has clouds baked into it, you\u0027ll even get occlusion from these. And the best part is that spherical harmonics preserve directionality of light. So if you have a sunset/sunrise situation, the side of a building facing the sun will be washed in auburn orange, while the side away from the sun will be bluish gray, exactly as you expect in that sort of a scene, and it takes almost zero work once you have the skybox computed.\n\u003C/p\u003E\n\u003Cp\u003E\nUnity has a light probe system, and it has material nodes designed to work with these. What I don\u0027t know is if you can create a fake light node data that you can pass to the shader so that you can just recycle these material nodes and make it work with your custom skybox. If not, you\u0027ll have to do the work of building that shader node by hand. That said, from footage from other planets, it\u0027s clear that the work has already be done, whichever way they ended up doing it. So now it\u0027s literally just a matter of updating the materials used on Kerbin and in structures, including \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003E\u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nThe point here is that if you don\u0027t do the above, you still have to account for sunlight, and if you just do direct illumination from the Sun, it looks like crap. Well, by modern standards - that\u0027s what people used to do back in 2000, and it was fine then. Since\u00A0\u003Cem\u003Eat least\u003C/em\u003E\u00A0the mid 2000\u0027s, people started adding an environmental map to the scene. You usually would bake two of these. One would be just a cube map of the light sources typical to the scene. For the indoors, it might have some fake lights on it, and for outdoors it\u0027d typically be just your skybox. You\u0027d use it as is for your specular light. Then for diffuse, you literally pre-compute the convolution with a cosine function, to get that dot-product factored in from every possible angle. Now instead of doing anything fancy, your entire environment light is just two texture lookups. Finally, if you wanted a day-night cycle, you\u0027d have three of these, day, night, and dusk/dawn maps, that you you rotate them with the movement of the Sun and blend together as time moves from morning to day, to evening, to night. Cheap, reasonably believable, and easy to implement. I think KSP did something similar. Problem is, the moment you have clouds, rain, or any other weather effects, guess what, you have to add a new map variation for each of these. And it never looks\u00A0\u003Cem\u003Equite\u003C/em\u003E\u00A0right with fancy materials. Especially, once you start adding shinier looking surfaces. And if you already have GI working, it\u0027s not easier at all to implement! So you might as well go for proper scatter light on everything and have a single set of materials that accounts for it all.\n\u003C/p\u003E\n\u003Cp\u003E\ntl;dr: You have to do work to do skylight illumination either way, and if you already set up scatter illumination for other worlds, you get it for free for other bodies, even these without an atmosphere at all! So there is zero reason not to.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022giphy.gif?cid=ecf05e47xowogqp4pt7xxfpf56\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002256.25\u0022 height=\u0022270\u0022 width=\u0022480\u0022 src=\u0022https://media0.giphy.com/media/KxhIhXaAmjOVy/giphy.gif?cid=ecf05e47xowogqp4pt7xxfpf568kxw66dw01rrd7pe0wuj95\u0026amp;rid=giphy.gif\u0026amp;ct=g\u0022\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2023-01-20T01:52:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221701\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674176107\u0022 data-ipsquote-userid=\u0022202934\u0022 data-ipsquote-username=\u0022Luriss\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n47 minutes ago, Luriss said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf I\u0027m reading this right, this means scatter and sunrise/sunset lighting are interlinked.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI mean, it can heavily depend on implementation, but as far as modern techniques that give a good, realistic look, yes. And that\u0027s what I\u0027m seeing on all of the other examples we have from other planets, so I expect this to be hooked up for Kerbin and structures.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221702\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674176134\u0022 data-ipsquote-userid=\u0022220814\u0022 data-ipsquote-username=\u0022whatsEJstandfor\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n52 minutes ago, whatsEJstandfor said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022giphy.gif?cid=ecf05e47xowogqp4pt7xxfpf56\u0022 class=\u0022ipsImage ipsImage_thumbnailed\u0022 data-ratio=\u002256.25\u0022 height=\u0022270\u0022 width=\u0022480\u0022 src=\u0022https://media0.giphy.com/media/KxhIhXaAmjOVy/giphy.gif?cid=ecf05e47xowogqp4pt7xxfpf568kxw66dw01rrd7pe0wuj95\u0026amp;rid=giphy.gif\u0026amp;ct=g\u0022\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSorry, hazard of talking about something that you work on professionally. I try to correct for it, \u003Ca href=\u0022https://xkcd.com/2501/\u0022 rel=\u0022external nofollow\u0022\u003Ebut as XKCD points out, it\u0027s hard to do effectively.\u003C/a\u003E Always happy to clarify anything specific if you\u0027re interested, though.\n\u003C/p\u003E\n"},{"CreatedByName":"Xelo","CreatedById":218744,"CreatedDateTime":"2023-01-20T04:23:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221660\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674167536\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t know if there\u0027s an\u00A0\u003Cem\u003Eeasy\u003C/em\u003E\u00A0way to hook it up in Unity (the slightly harder way is with a custom shader node), but a standard approach in custom engines is that you generally already have a system to light a surface from a light probe, and you use that.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAs a person whos dabbled alot in graphics programming (and unity), light probes are only for static lights! :O. Wouldn\u0027t you have to recalculate and re-position (quite expensive bc of fourier decompositions) the light probes many times every second or so if you intend to use it with the sun? I also dont see light probes also used in scales such as kerbin either. They seem very much more suited for indoor or semi-open spaces with alot of indirect lighting and many (or complex) GI light sources, in order to maintain lighting consistency with moving objects.\u00A0 The L2 spherical harmonics resolution unity uses also makes the the probe\u0027s lighting very diffuse, making it ill suited to \u0027sharper\u0027 lighting like the sun i think.\u00A0 If they were using such an approach I think they would just forgo probes altogether, skip the expensive Fourier part and use a cubemap directly for lighting in a custom pbr shader.\u003Cbr\u003E\n\u003Cbr\u003E\nHowever the light probe (and similar) format is very\u00A0\u003Cem\u003Every\u00A0\u003C/em\u003Every ill suited for say: being in space over a sunset, the ship doesn\u0027t have orange lighting, but specific portions of the ground below do because its inside the atmosphere being scattered, you would\u00A0 have to recalculate all light probes in view many times and lag your device to death computing fourier transforms... (not to mention it would look bad, the lighting would be seen as very patchy with each patch corresponding to a light probe)\u00A0 therefore a different approach is typically used:\u003Cbr\u003E\n\u003Cbr\u003E\nI\u0027m speculating the reason behind the sunlight not being scattered is a minor disconnect between the implementations of the scatterer and the pbr shading, which doesnt natively accept the results of the atmospheric scatter. The pbr stuff expects standard types of direct illumination and/or light probes, light maps. The scatterer is a post processing effect. Thus in order to have the scatter influence lighting everywhere you would have to use \u003Cstrong\u003Edeferred rendering\u003C/strong\u003E, and use the scatter on everything at once: that is rendering everything as encoded information concerning normals, depth, base color, etc baked into multiple textures, which afterwards running all the lighting passes, in which the sun itself is part of the scatterer pass as opposed to a separate light source.\u00A0 This means the scattering shader would also have to compute the pbr material effect as only it knows the specific color of sunlight as it strikes geometry. Quite a challenge!\u003Cbr\u003E\n\u003Cbr\u003E\nCurrently to me it seems the scatterer is \u003Cstrong\u003Erendered first\u003C/strong\u003E, and there is a \u0027placeholder\u0027 direct lighting sun applied on the materials and placeholder area light for the blue sky light. This then leads to all the weird effects like the water not reflecting the daytime sky (it turns black at sunsets rather then say, reflect the sky\u0027s orange color) and the incorrectly white sunset lighting.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-01-20T04:26:11Z\u0022 title=\u002201/20/2023 04:26  AM\u0022 data-short=\u00221 yr\u0022\u003EJanuary 20, 2023\u003C/time\u003E by Xelo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2023-01-20T05:55:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221749\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674188583\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs a person whos dabbled alot in graphics programming (and unity), light probes are only for static lights! :O. Wouldn\u0027t you have to recalculate and re-position (quite expensive bc of fourier decompositions) the light probes many times every second or so if you intend to use it with the sun?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNah, I\u0027m not talking about indirect lighting from the terrain. There are, actually tricks for recalculating that dynamically for outdoors environments too, but that\u0027s getting into\u00A0\u003Cem\u003Eway\u003C/em\u003E\u00A0more complex interactions. That would take us way off topic, so if you want to chat about that, feel free to DM me.\n\u003C/p\u003E\n\u003Cp\u003E\nThe idea is that the info the light probe gives you is how much light you\u0027re getting from every direction. To get goo skybox illumination, you want the light to be coming from every direction as well. So if you take the skybox and convert the illumination information from it into spherical harmonics, you can use it as one special light probe that\u0027s common to all of your scene geometry. In fact, you don\u0027t have to use actual GI with this - you can literally just have this one \u0022light probe\u0022 generated from the skybox, and use that to get soft lighting that\u0027s dynamic with the time of day. And while computing all of the light probes for a scene is very, very expensive, computing just one from a given cube map over multiple frames is almost free.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221749\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674188583\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe pbr stuff expects standard types of direct illumination and/or light probes, light maps. The scatterer is a post processing effect.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s precisely the gap we\u0027re trying to close here. You can do the sky as just a screen space post-effect, of course, but then you don\u0027t get any of the other benefits. You can, instead, compute that scattering process as a cube map, ignoring screen space entirely, which, again, you only need to do once every so often, since the sun and the clouds aren\u0027t moving all that fast. On average, you end up spending about the same amount of time doing either, because you\u0027re doing ray casts on more pixels but over more frames, so this doesn\u0027t increase rendering costs. You can then use it directly with your PBR as a cube map, of course, but then you have to\u00A0\u003Cem\u003Eat least\u003C/em\u003E\u00A0bake a diffuse environment map from it, which is pretty expensive. (O(n\u003Csup\u003E2\u003C/sup\u003E\u00A0ln(n)) if you use FFT and convolution theorem.) Alternatively, you can compute spherical harmonics from that cube map (O(kn\u003Csup\u003E2\u003C/sup\u003E), where k is number of harmonics) and feed that to PBR as if it was a light probe. It\u0027s basically the same computational cost, but now you have better specular highlights on metallic surfaces, support for anisotropic materials if you want it, etc.\n\u003C/p\u003E\n\u003Cp\u003E\nThere are extra steps you\u0027d have to do if you wanted sky occlusion to work well, which involve actual light probes and, again, a lot more math. But then you actually do have to compute light probes which, as you point out, is a problem for a planet sized world. The conservative approach is to simply ignore occlusion for scattered light. You take horizon at exactly 0\u00B0 elevation (so you only really have half of a scatter cube map for the sky) and only do occlusion for direct light from the sun using cascade shadows as normal.\n\u003C/p\u003E\n"},{"CreatedByName":"Xelo","CreatedById":218744,"CreatedDateTime":"2023-01-20T07:39:50Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221770\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674194158\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNah, I\u0027m not talking about indirect lighting from the terrain.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI wasn\u0027t either, sorry if my words aren\u0027t clear. I also understand how light probes work, I have made my own implementations before and read the papers.\u00A0 This is specially for the sky scatter only (which gives the sky its color and makes the sun orange). The failure case i describe is this:\u003Cbr\u003E\n\u003Cimg alt=\u0022image.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002253.29\u0022 height=\u0022446\u0022 width=\u0022837\u0022 src=\u0022https://media.discordapp.net/attachments/468345978160807948/1065875330646151189/image.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nA single light probe cannot handle all these cases at once. Thus multiple probes will need to be updated constantly on the ground, in the sky, local space, and etc. You don\u0027t even have to be particularly high to see this effect. This is somewhat impractical. And as you know each lightprobe needs to sample an entire separate cube-map all over for \u003Cstrong\u003Eeach \u003C/strong\u003E\u0027value\u0027 in the light probe to generate the polynomials for the spherical harmonics (FFT doesnt help much in lower n like in light probes i think). This is why dynamic lightprobes arent discussed much, its a alot of work.\u003Cbr\u003E\nUsing Deferred rendering will do all these cases at once, in one pass without the need to construct and recalculate probes constantly. Only the scatterer shader knows the color of the sun lighting at any texel in the scene and thus such an approach is what I would use.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221770\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674194158\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n23 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can, instead, compute that scattering process as a cube map, ignoring screen space entirely, which, again, you only need to do once every so often, since the sun and the clouds aren\u0027t moving all that fast\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI originally thought that, but I then I realized time warp exists. Such a luxury doesn\u0027t exist with that mechanic. Things have to be dynamically computed more often then not if you can make a day last fractions of a second.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221770\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674194158\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n27 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can do the sky as just a screen space post-effect, of course, but then you don\u0027t get any of the other benefits.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s what sets deferred rendering apart, unlike forward rendering, every piece of geometry visible on the screen is known by the scatterer through a texture and the shader shades them accordingly (and with perfect specular).\u00A0 The water is simply included in the texture as normals \u0026amp; depth, the base texture and finally its material properties, and nothing extra is needed for the water to have orange reflections. (as the scatterer is a form of raymarcher in implementation you just march along the water\u0027s reflection vector from the camera and grab the color)\u00A0\u003Cbr\u003E\n\u003Cbr\u003E\nAnd while yes sky occlusion still remains a problem, i don\u0027t think\u00A0\u003Cstrong\u003Edynamic \u003C/strong\u003Esky occlusion can be solved with light probes on these scales[0]. And kerbin, duna or eve are very dynamic environments. Most implementations I see go straight to raycasting approaches.\u003Cbr\u003E\nYou can try have a much cheaper version of dynamic sky occlusion\u00A0by combining screenspace\u003Cspan style=\u0022font-size:10px;\u0022\u003E(for craft)\u003C/span\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003E\u003Cstrong\u003E\u00A0\u003Csup\u003E[1]\u003C/sup\u003E\u003C/strong\u003E\u003C/span\u003E/baked\u003Cspan style=\u0022font-size:10px;\u0022\u003E(for buildings)\u003C/span\u003E ambient occlusion and a simple \u0027special ambient light\u0027 on the terrain that dims near the sunset area (would actually be part of planetshine optimally). Since this ambient lighting is generally radially symmetric across the planet, you can store it as a 2d texture, making it extremely cheap to calculate.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022image.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002299.11\u0022 height=\u0022446\u0022 width=\u0022450\u0022 src=\u0022https://media.discordapp.net/attachments/468345978160807948/1065888206668709989/image.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n[0] you may have one locally at your vessel only, but at that point I would just use a blurred cubemap instead o-o. Since with a light probe youd need to render the scene to a cubemap, have each texel do a \u0027unoptimal\u0027 gpu convolution or a slow cpu one, then pass it along to the material shader again. You may sample the sample number of pixels as with a blur, but the important thing is that each texel doesnt do alot of work individually, making it much much faster to calculate compared to the lightprobe in which each texel needs to sample the entire texture for the convolution. Unity also doesnt let you edit an existing light probe, so much as needing to replace the entire array over every time, which implies this is meant to be done rather rarely and only between existing scenes, possibly because its stored in the gpu?\n\u003C/p\u003E\n\u003Cp\u003E\n[1] Screenspace AO also happens to be very suited and very common to deferred rendering.\u003Cbr\u003E\n\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2023-01-20T08:19:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221786\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674200390\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA single light probe cannot handle all these cases at once.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOh, I\u0027m talking strictly surface rendering, not an orbital ship in flight passing through penumbra. I don\u0027t think there\u0027s a general approach that solves all situations without RT. But if we separate this into three cases: surface when camera is below clouds, surface \u002B clouds when camera is above, and anything above the cloud layer, we can attack this gracefully.\n\u003C/p\u003E\n\u003Cp\u003E\nWhen the camera is above the cloud layer, I would honestly just skip the scatter from clouds to ground. Most of the areas that would be affected aren\u0027t going to be particularly visible because of the clouds in the way. So the sky light for the planet when the camera is above clouds can be pre-computed. Scale intensity by distance from the star, to account for elliptical orbits, and otherwise, the light distribution is perfectly consistent when taken relative to the star\u0027s position. (This does break down with multiple stars, but I assume all relevant planets will have only one star we can take as dominant effect, and do only direct contribution from the other.)\n\u003C/p\u003E\n\u003Cp\u003E\nFor camera below the clouds, the cloud effect is significant, and you\u0027ll want to do the actual honest computation by factoring clouds into your scatter. Transition can be tricky, but I think blending is fine. Likewise, aircraft can use surface lights. It\u0027s not exactly right, but I think it\u0027s close enough that nobody will notice the difference. You just have to be careful about aircraft actually flying through a cloud.\n\u003C/p\u003E\n\u003Cp\u003E\nFinally, for anything located very high in atmosphere or outside of it, you have some options. You can still do pre-computed approach by utilizing the cylindrical symmetry, meaning you can still get away with a 2D texture that takes an angle and altitude. (Beyond certain altitude this light stops changing and depends on the angle only, so you can clamp the texture.)\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221786\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674200390\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n23 minutes ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI originally thought that, but I then I realized time warp exists.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPoint, but if you\u0027re viewing things from the surface at high enough warp, you can start cutting a lot of corners. It does need to be handled to avoid very weird artifacts, though. And per above, I never considered this for other situations.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221786\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674200390\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n26 minutes ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s what sets deferred rendering apart, unlike forward rendering, every piece of geometry visible on the screen is known by the scatterer through a texture and the shader shades them accordingly (and with perfect specular).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, but that doesn\u0027t help you with rendering surface illumination. If I\u0027m standing on the surface and looking at the terrain, every point in front of me has the sky above. Even without having a single pixel of the sky, each pixel of the terrain now needs to know how much light it receives, and even ignoring the occlusion, that means casting a scatter ray in every possible direction towards the sky, because the clouds can be in any direction, and that way lies madness.\n\u003C/p\u003E\n\u003Cp\u003E\nYes, you can cast just a\u00A0\u003Cem\u003Efew\u003C/em\u003E\u00A0rays from every\u00A0 point, and then denoise the picture. But that still means doing 5-6 samples of the scatterer for every pixel on the screen to get decent results. And you absolutely\u00A0\u003Cem\u003Emust\u003C/em\u003E\u00A0do this every frame. This is not cheaper than building a low resolution skybox\u00A0\u003Cem\u003Eonce\u003C/em\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nSo yeah, if you always had a perfectly crystal clear sky, you just have a lookup map for each planet, and do deferred. But the moment you have weather you basically have to start thinking about it as a dynamic cube map. I don\u0027t see a way to step around that.\n\u003C/p\u003E\n"},{"CreatedByName":"Xelo","CreatedById":218744,"CreatedDateTime":"2023-01-20T10:33:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221790\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674202754\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n28 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOh, I\u0027m talking strictly surface rendering, not an orbital ship in flight passing through penumbra.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI wasn\u0027t talking only about the ship\u00A0passing through penumbra in that diagram. I was talking about you viewing a sunset\u00A0\u003Cstrong\u003Eon the ground\u003C/strong\u003E\u00A0from like 30km above, parts of the terrain is sunlit (1) , part of the terrain in orange sunset in a narrow band (2) , part of the terrain shrouded in darkness (3) . The cloud\u0027s sunset is delayed from being higher up in the atmopshere (4) .\u00A0 Something above the atmosphere (5). A single cubemap or probe or what-have-you cannot account for (1) (2) (3) (4) (5) viewed \u003Cstrong\u003Eat the same time,\u00A0\u003C/strong\u003Eor even\u00A0 just (1,2,3), especially as it moves across the surface. very fast. \u003Cspan\u003E\u003Cspan\u003E:c\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nHaving the scatterer shade surfaces would solve the issue of sun-lighting no worries, but the ambient sky light is not practically dealt with a single lightprobe across all the surfaces you can see typically (unless you simply never left the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003Eksc\u003C/abbr\u003E or something. Like in most games with limited kilometer-wide maps in which this technique is viable.)\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221790\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674202754\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n35 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMost of the areas that would be affected aren\u0027t going to be particularly visible because of the clouds in the way.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t think you can just dismiss it because of cloud cover unless kerbin is permanently overcast like eve.\u00A0 You can still very much see the ground above the cloud layer. This would also not apply to Duna. Clouds are usually generated from a b\u0026amp;w texture heightmap[1] , you can sample that once to get vague blurry shadows and etc, there is little performance hit from it.\u00A0 This is also I figure how they have cloud shadows right now.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221790\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674202754\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n46 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPoint, but if you\u0027re viewing things from the surface at high enough warp, you can start cutting a lot of corners. It does need to be handled to avoid very weird artifacts, though. And per above, I never considered this for other situations.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe warp isnt like normal speed or maximum overdrive with no in-between though. \u003Cem\u003ESimply having an absurdly fast velocity\u003C/em\u003E\u00A0is also a thing you do regularly in this game and few others. KSP by nature doesn\u0027t leave alot of room for shortcuts that don\u0027t feel obvious.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221790\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674202754\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYeah, but that doesn\u0027t help you with rendering surface illumination. If I\u0027m standing on the surface and looking at the terrain, every point in front of me has the sky above. Even without having a single pixel of the sky, each pixel of the terrain now needs to know how much light it receives, and even ignoring the occlusion, that means casting a scatter ray in every possible direction towards the sky, because the clouds can be in any direction, and that way lies madness.\n\u003C/p\u003E\n\u003Cp\u003E\nYes, you can cast just a\u00A0\u003Cem\u003Efew\u003C/em\u003E\u00A0rays from every\u00A0 point, and then denoise the picture. But that still means doing 5-6 samples of the scatterer for every pixel on the screen to get decent results. And you absolutely\u00A0\u003Cem\u003Emust\u003C/em\u003E\u00A0do this every frame. This is not cheaper than building a low resolution skybox\u00A0\u003Cem\u003Eonce\u003C/em\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nSo yeah, if you always had a perfectly crystal clear sky, you just have a lookup map for each planet, and do deferred. But the moment you have weather you basically have to start thinking about it as a dynamic cube map. I don\u0027t see a way to step around that.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAs per the previous comment, you aren\u0027t building a single low res sky box once, you are building it every frame in which its only valid for rendering the immediate area on the surface.\u00A0\u00A0\u003Cbr\u003E\nThis is ok if its just literally \u003Cstrong\u003Ejust your vessel\u003C/strong\u003E \u003Cem\u003E(see footnote [0] in previous comment)\u003C/em\u003E and/or you are just computing blurry reflections. This \u0027skybox\u0027 isnt valid 10km,20km,50km away, a distance you can very much see. esp as you rise higher.\u003Cbr\u003E\nI also did not suggest raycasting for diffuse surfaces\u00A0 (which would require multiple rays), either, only reflective ones, which would just continue the existing ray in a different direction.\u003Cbr\u003E\nThus assuming the \u0027sky is clear\u0027 seems the most practical to me, and considering your case of clouds, just using a cheap sample of the cloud texture for checking overcast areas which can be integrated into the cheap ambient light.\u00A0 if the terrain/ship underneath is under a brighter area of a pre-blurred cloud texture,\u00A0 the light renders this area greyer to compensate.\u003Cbr\u003E\n\u003Cbr\u003E\n[1]\u00A0\u003Cbr\u003E\n\u003Cimg alt=\u0022image.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002247.69\u0022 height=\u0022134\u0022 width=\u0022281\u0022 src=\u0022https://cdn.discordapp.com/attachments/468345978160807948/1065920983271219250/image.png\u0022\u003E\u00A0\u003Cbr\u003E\nthe blocky shapes of the ksp2 clouds heavily imply texture sampling with bilinear blending. Here, upscaled noise as comparison.\u003Cbr\u003E\n\u003Cimg alt=\u0022image.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002294.47\u0022 height=\u0022444\u0022 width=\u0022470\u0022 src=\u0022https://cdn.discordapp.com/attachments/468345978160807948/1065921802305548308/image.png\u0022\u003E\u003Cbr\u003E\nEve redux also uses pre-made 2d textures. Was asking about using sdfs for the clouds.\u003Cbr\u003E\n\u003Cimg data-ratio=\u00226.06\u0022 width=\u0022809\u0022 alt=\u0022image.png\u0022 src=\u0022https://cdn.discordapp.com/attachments/468345978160807948/1065933169146220574/image.png\u0022\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2023-01-20T10:50:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221804\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674210805\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI was talking about you viewing a sunset\u00A0\u003Cstrong\u003Eon the ground\u003C/strong\u003E\u00A0from like 30km above, parts of the terrain is sunlit (1) , part of the terrain in orange sunset in a narrow band (2) , part of the terrain shrouded in darkness (3) . The cloud\u0027s sunset is delayed from being higher up in the atmopshere (4) .\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSo long as we get to ignore the clouds, we can just precompute all of this, including the difference between (1, 2, 3) and (4).\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221804\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674210805\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t think you can just dismiss it because of cloud cover unless kerbin is permanently overcast like eve.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf your camera is on the ground, you absolutely can\u0027t. And that\u0027s the problem. If you\u0027re above the clouds, though, I would submit that nobody\u0027s going to notice the difference. So long as you still do cloud shadows for direct light, the lighting difference due to weather is going to be too subtle when viewed from above the cloud layers. There might be edge cases where you\u0027re not high above clouds and looking at the terrain below through a cloud break, but I don\u0027t think these are common enough and obvious enough to go for a far more expensive technique just to get these right.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221804\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674210805\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs per the previous comment, you aren\u0027t building a single low res sky box once, you are building it every frame in which its only valid for rendering the immediate area on the surface.\u00A0\u00A0\u003Cbr\u003E\nThis is ok if its just literally \u003Cstrong\u003Ejust your vessel\u003C/strong\u003E \u003Cem\u003E(see footnote [0] in previous comment)\u003C/em\u003E and/or you are just computing blurry reflections. This \u0027skybox\u0027 isnt valid 10km,20km,50km away, a distance you can very much see. esp as you rise higher.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWe only need the dynamic skybox for the first 10km. From there up, we no longer need to recompute it. It\u0027s literally always the same, and depends only on one angle, because there are no clouds anymore. We can bake all of the light info it into a 2D texture.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224221804\u0022 data-ipsquote-contentid=\u0022211581\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221674210805\u0022 data-ipsquote-userid=\u0022218744\u0022 data-ipsquote-username=\u0022Xelo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 minutes ago, Xelo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI also did not suggest raycasting for diffuse surfaces\u00A0 (which would require multiple rays), either, only reflective ones, which would just continue the existing ray in a different direction.\u003Cbr\u003E\nThus assuming the \u0027sky is clear\u0027 seems the most practical to me, and considering your case of clouds, just using a cheap sample of the cloud texture for checking overcast areas which can be integrated into the cheap ambient light.\u00A0 if the terrain/ship underneath is under a brighter area of a pre-blurred cloud texture,\u00A0 the light renders this area greyer to compensate.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSo how do you pick up the orange hue on one side of a mountain and gray on the other during sunset/sunrise? And how is it better than getting all of that\u00A0\u003Cem\u003Eand\u003C/em\u003E\u00A0the correct cloud illumination when viewed from the ground? As far as I can tell, our approach above the clouds is identical, except I want to use look-up textures instead of doing ray casts. (Because I\u0027m not sure why we\u0027re doing ray casts if we\u0027re ignoring clouds.)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI have a feeling we\u0027re about to go to the Shadertoy round.\n\u003C/p\u003E\n"}]}