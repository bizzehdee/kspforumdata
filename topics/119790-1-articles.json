{"TopicId":119790,"ForumId":32,"TopicTitle":"Programming Q: Is it possible to count multiple parts of the same type as 1 part?","CreatedByName":"justmeman117","CreatedById":84618,"CreatedDateTime":"2015-08-31T02:02:46Z","PageNum":1,"Articles":[{"CreatedByName":"justmeman117","CreatedById":84618,"CreatedDateTime":"2015-08-31T02:02:46Z","Content":"\n\u003Cp\u003EFirst thing\u0027s first, I am NOT a programmer. This is why I am asking a stupid question.\u003C/p\u003E\u003Cp\u003ESo I was checking out the space station sharing thread, when I read one guy built a torus that needed an over 400 part launcher. Anyway, that got me thinking about possible ways to better optimise the game.\u003C/p\u003E\u003Cp\u003EWould it possible to count multiple parts of the same kind on one ship as only one part? For example, let\u0027s say your ship has 50 struts. Would it be possible to count all 50 struts as just ONE strut, thereby reducing the part count?\u003C/p\u003E\u003Cp\u003ECorrect me if I\u0027m wrong, but isn\u0027t it mostly rendering the part that requires the most processing power? So, would it be possible to put one strut on your ship, then have all further struts simply copy its rendering? It would look sorta like \u0022strut # 36 rendering: see strut # 1\u0022.\u003C/p\u003E\u003Cp\u003EThe idea would be that the game is TECHNICALLY only rendering one part, but you can get dozens of parts out of that.\u003C/p\u003E\u003Cp\u003EIf location is the problem, then perhaps you could just add some translation and rotation values, kinda like \u0022strut # 36 = strut # 1 \u002B xyz \u002B x\u00C3\u201A\u00C2\u00B0y\u00C3\u201A\u00C2\u00B0z\u00C3\u201A\u00C2\u00B0\u0022\u003C/p\u003E\u003Cp\u003EFinally, if this IS possible, is it still possible to simulate the physics of each individual part in spite of the copied rendering? Or is it physics and not rendering that requires the most processing power in the first place?\u003C/p\u003E\n"},{"CreatedByName":"cantab","CreatedById":104935,"CreatedDateTime":"2015-08-31T02:06:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022justmeman117\u0022 data-cite=\u0022justmeman117\u0022\u003E\u003Cdiv\u003EOr is it physics and not rendering that requires the most processing power in the first place?\u003C/div\u003E\u003C/blockquote\u003EYes, by a long margin.\n"},{"CreatedByName":"justmeman117","CreatedById":84618,"CreatedDateTime":"2015-08-31T02:09:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022cantab\u0022 data-cite=\u0022cantab\u0022\u003E\u003Cdiv\u003EYes, by a long margin.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOK, but if it\u0027d help at all, wouldn\u0027t it still be worth trying?\u003C/p\u003E\n"},{"CreatedByName":"clivman","CreatedById":139191,"CreatedDateTime":"2015-08-31T02:13:21Z","Content":"\n\u003Cp\u003ESQUAD refuses to give us a rigid body physics model, which is one of the main problems. Even KJR doesn\u0027t fix it sadly. Rep for the first person that does.\u003C/p\u003E\n"},{"CreatedByName":"justmeman117","CreatedById":84618,"CreatedDateTime":"2015-08-31T02:20:15Z","Content":"\n\u003Cp\u003Ewhen you say rigid body physics, you basically mean the entire craft as one single part, right?\u003C/p\u003E\n"},{"CreatedByName":"magico13","CreatedById":73338,"CreatedDateTime":"2015-08-31T02:20:49Z","Content":"\n\u003Cp\u003EWhat you\u0027re suggesting is actually kind of accomplished by the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/107273\u0022 rel=\u0022external nofollow\u0022\u003Epart welding mod\u003C/a\u003E, which \u0022welds\u0022 multiple parts together so that there are \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eless\u003C/span\u003E fewer (thanks Javster \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E) physics calculations done overall (since physics is where part limitations come in, not rendering).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-31T23:59:25Z\u0022 title=\u002208/31/2015 11:59  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 31, 2015\u003C/time\u003E by magico13\u003C/strong\u003E\n\u003Cbr\u003Eless to fewer\n\u003C/span\u003E\n"},{"CreatedByName":"justmeman117","CreatedById":84618,"CreatedDateTime":"2015-08-31T02:27:19Z","Content":"\n\u003Cp\u003Ethat\u0027s kinda cheaty though. If the craft wouldnt support itself without the mod, then you could use it to get around that.\u003C/p\u003E\u003Cp\u003EWhat I\u0027d like to see is a compromise between the 2. In which the entire craft is \u0022welded\u0022, but becomes unwelded when the craft goes past a certain physics threshold, at which point, the craft starts to break apart or disintegrate.\u003C/p\u003E\u003Cp\u003EFor example, a plane is welded until it turns too hard, then the physics kicks in for individual parts.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Ealthough, what i do like about the welding mod is that it allows you to better make hollow structures.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-31T02:29:53Z\u0022 title=\u002208/31/2015 02:29  AM\u0022 data-short=\u00228 yr\u0022\u003EAugust 31, 2015\u003C/time\u003E by justmeman117\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"_stilgar_","CreatedById":147818,"CreatedDateTime":"2015-08-31T05:21:16Z","Content":"\n\u003Cp\u003EAbout that rendering question: that\u0027s exactly how it\u0027s done. Copies of the same parts don\u0027t duplicate all the resources, they just reference them. You still have to render them all, you can\u0027t just copy finished render, as you see those parts from different angles. \u003C/p\u003E\u003Cp\u003EBut, as others have said, rendering isn\u0027t the biggest problem in KSP, physics is.\u003C/p\u003E\n"},{"CreatedByName":"Renegrade","CreatedById":96629,"CreatedDateTime":"2015-08-31T12:27:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022justmeman117\u0022 data-cite=\u0022justmeman117\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWhat I\u0027d like to see is a compromise between the 2. In which the entire craft is \u0022welded\u0022, but becomes unwelded when the craft goes past a certain physics threshold, at which point, the craft starts to break apart or disintegrate.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf I had designed KSP, it would have basically done something \u003Cem\u003Elike\u003C/em\u003E that. One difference would be that \u003Cem\u003Estages\u003C/em\u003E would generally be one part, with their overall strength determined by a weighted (by mass of course, heh) average of all parts in that stage.\u003C/p\u003E\u003Cp\u003E(There\u0027d also be a lot more focus on configuring the internals of a given part, like pods and service modules and such. No gluing a stupid probe core on the outside etc)\u003C/p\u003E\n"},{"CreatedByName":"EladDv","CreatedById":118368,"CreatedDateTime":"2015-08-31T12:39:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022justmeman117\u0022 data-cite=\u0022justmeman117\u0022\u003E\u003Cdiv\u003Ethat\u0027s kinda cheaty though. If the craft wouldnt support itself without the mod, then you could use it to get around that.\u003Cp\u003EWhat I\u0027d like to see is a compromise between the 2. In which the entire craft is \u0022welded\u0022, but becomes unwelded when the craft goes past a certain physics threshold, at which point, the craft starts to break apart or disintegrate.\u003C/p\u003E\u003Cp\u003EFor example, a plane is welded until it turns too hard, then the physics kicks in for individual parts.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Ealthough, what i do like about the welding mod is that it allows you to better make hollow structures.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou inspired me to try something like that now. I am now designing in my head how it will work: Stage by Stage(separated by decouplers or docking ports) it will divide the ship and take the individual stages and compress them to 1 parts-engines will be separate to not get any weird bugs. this will happen once you load a craft and will return the craft to it\u0027s original way after you unload it so it will be possible to work with outside of the mod (also better on disk management) this is the base idea but it would probably deal with some weird stuff like animations and pods\u003C/p\u003E\n"},{"CreatedByName":"Pecan","CreatedById":96332,"CreatedDateTime":"2015-08-31T16:36:49Z","Content":"\n\u003Cp\u003EPhysics - all the parts act on all the other parts, or do they? Welding certainly helps but exactly \u003Cem\u003Ehow\u003C/em\u003E the welding works can give \u0027odd\u0027 results itself.\u003C/p\u003E\u003Cp\u003ERendering - is based on the number of polygons making-up the object or objects; how complex it is. Welding really doesn\u0027t do anything for that although there is some scope for hidden-face removel (eg; where fuel tanks connect end-to-end you can just forget the faces that can\u0027t be seen).\u003C/p\u003E\n"},{"CreatedByName":"Halo_003","CreatedById":76050,"CreatedDateTime":"2015-08-31T23:11:48Z","Content":"\n\u003Cp\u003EAt the risk of being a dumb question...\u003C/p\u003E\u003Cp\u003EWhy doesn\u0027t Squad just offload the physics thread to the GPU instead?\u003C/p\u003E\n"},{"CreatedByName":"EladDv","CreatedById":118368,"CreatedDateTime":"2015-08-31T23:22:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Halo_003\u0022 data-cite=\u0022Halo_003\u0022\u003E\u003Cdiv\u003EAt the risk of being a dumb question...\u003Cp\u003EWhy doesn\u0027t Squad just offload the physics thread to the GPU instead?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ethey cant control the physics itself only optimise it in very limited ways by welding\u003C/p\u003E\n"},{"CreatedByName":"Halo_003","CreatedById":76050,"CreatedDateTime":"2015-08-31T23:32:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022EladDv\u0022 data-cite=\u0022EladDv\u0022\u003E\u003Cdiv\u003Ethey cant control the physics itself only optimise it in very limited ways by welding\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy not? We see this in other games that use Nvidia PhysX or AMD\u0027s version that I can\u0027t recall.\u003C/p\u003E\n"},{"CreatedByName":"godefroi","CreatedById":101728,"CreatedDateTime":"2015-09-01T03:59:55Z","Content":"\n\u003Cp\u003EUnity handles it. Squad doesn\u0027t get a say in it.\u003C/p\u003E\n"},{"CreatedByName":"RyanRising","CreatedById":79932,"CreatedDateTime":"2015-09-01T06:11:26Z","Content":"\n\u003Cp\u003EI don\u0027t mean to sound disrespectful or anything of the sort, but I think you just invented part models. \u003Ca href=\u0022https://xkcd.com/1367/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://xkcd.com/1367/\u003C/a\u003E \u003C/p\u003E\u003Cp\u003EIt really is physics that takes up the bulk of your processing power, though. Multithreaded physics would help, but it seems a difficult problem.\u003C/p\u003E\n"}]}