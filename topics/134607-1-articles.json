{"TopicId":134607,"ForumId":32,"TopicTitle":"Mathematically calculating launch window into inclined orbit from Kerbin","CreatedByName":"Dib","CreatedById":157433,"CreatedDateTime":"2016-03-20T18:13:53Z","PageNum":1,"Articles":[{"CreatedByName":"Dib","CreatedById":157433,"CreatedDateTime":"2016-03-20T18:13:53Z","Content":"\n\u003Cp\u003E\nRecently\u00A0I\u0027ve taken to trying to be a little more intelligent about launching into inclined orbits so as not to waste precious delta v in orbit doing a plane change burn, but I didn\u0027t want to just eyeball it. After some searching around the internet I wasn\u0027t able to find any mathematical solutions to the problem posted publicly, so I spent a few hours taking some basic measurements using Minmus and worked out the algorithm needed to figure out at what time you need to launch to align with the ascending node of an arbitrary positioned inclined orbit on any given day in a year from Kerbin, and I thought I\u0027d share it. I haven\u0027t gotten around to testing if the \u0022orbital parameters\u0022 given in rescue missions and satellite launch contracts\u00A0are actually accurate or just arbitrary, but I suspect they may be real and this algorithm can help you time your launches for those missions.\u00A0If you just want a very basic calculator to do the job, copy the spreadsheet linked into your own spreadsheet processor program and modify the target\u0027s longitude of ascending node through Kerbin\u0027s equatorial plane, as well as the day and year of launch.\u00A0Do\u00A0note the accuracy might fall off the further in years you go (I don\u0027t have very good yearly correction\u00A0yet, so I need to simulate a test universe and get some 100\u002B year Minmus measurements first), so it\u0027s only useful for the first few decades until I or someone else increase the measurement accuracy of one particular value. Remember to launch a couple minutes early to account for Kerbin rotation during launch, unless you use hyperedit you won\u0027t reach your target orbit instantly and you\u0027re still rotating with Kerbin during the launch).\u00A0For some math stuff, read on, though note that I am not outright assuming the reader knows all the relevant orbital mechanics along the way and do a bit of explaining where I feel necessary, which may or may not be enough.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nDisclaimers: Although I think the current values will remain accurate for the long term, there\u0027s a simulation error I have to account for and I don\u0027t yet know if the error per year is constant (which I\u0027m assuming it is for now), or if it varies year by year in random directions (forward in time or backward). I\u0027ll update the spreadsheet once I\u0027ve collected more measurement data later, but years 1 and 2 should be pretty spot on at least :P. Also, don\u0027t try to calculate something for day 426, it\u0027s a \u0022day\u0022 that only lasts 30 minutes or so, so I didn\u0027t feel like adding more complexity for that one corner case. Also, using this document or any knowledge gained from this post does not make me liable for any rockets you blow up \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://docs.google.com/spreadsheets/d/1jBTy8BPa9WdoNE20Un85TGO5uIlvXiM05Rlz0nE4BM4/edit?usp=sharing\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://docs.google.com/spreadsheets/d/1jBTy8BPa9WdoNE20Un85TGO5uIlvXiM05Rlz0nE4BM4/edit?usp=sharing\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nTo solve the problem of when to time the launch, we need some basic information about Kerbin\u0027s coordinate systems that isn\u0027t apparent at first glance. If we load up a spacecraft on the launchpad and use Kerbal Engineer to view our surface information, we can see that the launchpad has a Kerbin longitude of approximately 74.5753 degrees. We need a reference body orbiting Kerbin to compare this with, and the only default body to work with is Minmus (the Mun has no inclination, and is therefore USELESS!). We as a proper space institution have gone to the astronomers and asked them for Minmus\u0027s orbital parameters (read \u0022data miners posting the information on the wiki\u0022), and they told us that Minmus has a longitude of ascending node of 78 degrees, or in Kerbalspeak if Minmus was a ship it would have a Kerbin ascending node cutting through Kerbin\u0027s equatorial plane\u00A0located at 78 degrees longitude. But what\u0027s important to understand here is that even though it\u0027s specified as a longitude, it is a \u0022Stellar Longitude\u0022, not a \u0022Kerbin Longitude\u0022. If you think about it, the point through which Minmus ascends through the crossing of Kerbin\u0027s equatorial plane is fixed at\u00A0a point of space relative to Kerbin, while Kerbin itself is rotating. Therefore we need a relatively stationary reference point outside of the solar system in order to accurately record the position of the ascending node, which we call the \u0022Vernal Equinox\u0022. In the real world we typically use a relatively stationary star\u00A0a long distance from the Earth to indicate the direction of the vernal equinox, but in KSP this is simply the X-axis direction in the simulation\u0027s universal coordinate system. From the closest point on the surface at any given time, the\u00A0Kerbin longitude of Minmus\u0027s longitude of ascending node\u00A0is constantly decreasing because Kerbin rotates counter clockwise as viewed from the Northern hemisphere, making one full sweep through all longitudes at a rate of approximately once per day.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo if we know that the Kerbin longitude of Minmus\u0027s longitude of ascending node\u00A0is constantly decreasing in a fixed and predictable way, then all we have to do is wait for\u00A0it\u00A0to match the launchpad\u0027s Kerbin longitude, and then we\u0027ll be perfectly aligned for a launch. But we need an initial condition\u00A0where we know with certainty\u00A0exactly where Minmus\u0027s longitude of ascending node is in terms of Kerbin longitude a known time in order to run the clock forward and calculate\u00A0the launch window. So for this bit, I played astronomer and used Kerbal Engineer to find a few reference values. The \u0022real\u0022 Kerbin astronomers (wiki) have told us that Minmus has an inclination of exactly 6 degrees, so to find the time Minmus\u0027s ascending node passes over the launchpad, we have to wait for our vehicle on the launchpad to have a relative inclination to Minmus of exactly 6 degrees, while the craft moves through it\u0027s decending node through Minmus\u0027s plane of orbit. A few times at which these conditions\u00A0hold true are approximately year 1 day 1 01:01:29, year 1 day 8 00:55:35, year 2 day 8 00:55:40, and year 2 day 301 02:47:51.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo now we need to know the rate at which Minmus\u0027s longitude of ascending node decreases in terms of Kerbin longitude over time. There are a few factors involved here: First, Kerbin\u0027s rotation. A single Kerbin day takes a total of 21600 seconds. So 21600 seconds divided by 360 degrees, or 1 degree per 60 seconds. Second: Orbital motion correction. A single Kerbin day measures how long it takes for Kerbin\u0027s sun (Kerbol)\u00A0to reach the same position in the sky, but because Kerbin is orbiting Kerbol, if Kerbin had no actual stellar rotation then we would observe one day per year with Kerbol moving backwards through the sky. Therefore we have to subtract one day per year\u0027s worth of rotation from Kerbin\u0027s rotation. Third, yearly procession. I assume that mathematically if exactly one Kerbin year passes we should get the exact same rocket launch windows as the previous year, but due to limitations in simulation precision, when we take data from year 1 day 8 00:55:35 and year 1 day 8 00:55:40\u00A0there\u0027s a drift of approximately 5 seconds per year that needs to be corrected for. This is the roughest measurement I\u0027ve collected so far at the time of this writing, because I need to extend the simulation time much further to get a more accurate procession value or if it\u0027s even a constant per year, so for now the linked calculator\u0027s accuracy is limited to a few decades at most. Finally, if you account for all those factors, there\u0027s still an error on the order of 0.0128 planet rotations per year. I haven\u0027t pinned down what\u0027s causing that yet, I\u0027m sure it\u0027s something simple and stupid I missed, but I\u0027m blindly adjusting for it at the moment. I first thought it had something to do with the Kerbin year not aligning exactly on the boundary of a Kerbin day, but the amount of error I\u0027m seeing doesn\u0027t match the error from cutting out the extra 32m 24.6s. Something for me to think about later.\u00A0Combining all four factors yields the rotation speed of Kerbin from the stellar reference frame.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo if we take the now known rotation of the planet in the stellar reference and run time backwards from our first Minmus measurement, we can compute that Kerbin had rotated by 61.4847 degrees from the time of the Kerbin epoch Year 1 Day 1 00:00:00. We also know that the launchpad was at stellar longitude 78 degrees at the time of that measurement, and the launchpad always has a Kerbin longitude of 74.5753 degrees. Putting the\u00A0pieces of data together, the Kerbin longitude of the Vernal Equinox at Kerbin\u0027s Epoch is therefore 58.0600 degrees, and the launchpad\u0027s position in terms of stellar longitude at the time of the epoch was 16.5153 degrees. Now we have all the pieces we need to compute our launch windows, because we have the stellar longitude of the launchpad\u00A0at the epoch, and we have the rotation speed of the planet.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI won\u0027t go into too much detail about how the algorithm itself was constructed because it\u0027s pretty basic and I don\u0027t hide the calculations in the document, so if you generally followed the explanation above then it shouldn\u0027t be too hard to follow what it\u0027s doing.\u00A0One thing to note is the document\u00A0bases its calculations by the percentage of how far the planet has rotates per unit time of day and applies orbital corrections after the fact, rather than just multiplying time by the true stellar rotation speed directly. If you want to let the user specify any particular day in the year to perform the calculation on, this method is a bit easier to design around. The\u00A0algorithm will first figure out what the launch window time should have been for the first day of the year using the difference between the launchpad\u0027s longitude and the target\u0027s longitude at epoch, and then will apply the corrections for Kerbin\u0027s orbit around Kerbol based on the year/day given.\u00A0\n\u003C/p\u003E\n"}]}