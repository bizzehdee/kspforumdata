{"TopicId":182142,"ForumId":34,"TopicTitle":"[1.8.1] [Linux] [WIP] Advanced Input 0.2.0","CreatedByName":"taniwha","CreatedById":57176,"CreatedDateTime":"2019-02-13T10:41:49Z","PageNum":1,"Articles":[{"CreatedByName":"taniwha","CreatedById":57176,"CreatedDateTime":"2019-02-13T10:41:49Z","Content":"\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:28px;\u0022\u003E\u003Cstrong\u003ENOTE: This mod is currently Linux-only, but only because I do not how to do low-level input programming for Windows or Mac. PRs welcome.\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:28px;\u0022\u003E\u003Cstrong\u003EDownload: \u003Ca href=\u0022http://taniwha.org/~bill/AdvancedInput_v0.2.0.zip\u0022 rel=\u0022external nofollow\u0022\u003EAdvanced Input 0.2.0\u003C/a\u003E\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:28px;\u0022\u003E\u003Cstrong\u003ESource (LGPL): \u003Ca href=\u0022https://github.com/taniwha/AdvancedInput\u0022 rel=\u0022external nofollow\u0022\u003Egithub\u003C/a\u003E\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAdvanced Input (AI)\u00A0 is a mod to provide finer control over bindings for joysticks and potentially other devices (eg, 3d moused (basic support is there, but untestested)).\n\u003C/p\u003E\n\u003Cp\u003E\nWARNING: Unity joystick input on Linux is highly fickle:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nOn KSP 1.3.1, Unity will crash (sometimes) when pressing certain buttons (ie, numbered 20\u002B) on devices with many buttons (eg, Saitek X52 (this took me months to figure out)). Status unknown for later versions.\n\u003C/li\u003E\n\u003Cli\u003E\nOn KSP 1.5.1, Unity crashed at startup just reading the name of my Thrustmaster t16000m (or maybe my Thrustmaster TWCS Throttle, they are separate devices). sStatus unknown for other versions.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nIt is strongly recommended that Unity be denied access to /dev/input/js*. Advanced Input uses /dev/input/event* so just making the js devices unreadable is sufficient.\n\u003C/p\u003E\n\u003Cp\u003E\nNon-features:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nBindings are loaded when KSP loads, meaning changes require a restart (this is a bug and pretty much at the top of my list).\n\u003C/li\u003E\n\u003Cli\u003E\nThe user interface currently only shows status of inputs and cooked outputs.\n\u003C/li\u003E\n\u003Cli\u003E\nNo support for Windows or Mac.\n\u003C/li\u003E\n\u003Cli\u003E\nWhile bindings can be grouped in sets, the lack of a usable user interface has stalled the development.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nFeatures:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nModular bindings: both axis and button bindings use simple modules to do the work. AI searches all loaded assemblies for classes that implement the appropriate interface (axis or button) meaning other mods can provide bindings for their functionality.\n\u003C/li\u003E\n\u003Cli\u003E\nBindings are loaded from config files in the standard KSP config format (same as part.cfg, persistent.sfs etc) living in AI\u0027s PluginData directory.\n\u003C/li\u003E\n\u003Cli\u003E\nInput devices are recognized by their device name (this can cause problems if two of the same device are connected).\n\u003C/li\u003E\n\u003Cli\u003E\nInput device axes and buttons can be named via config files (this is for the user interface).\n\u003C/li\u003E\n\u003Cli\u003E\nAxes have recipes stating whether they are balanced or unbalanced (-1..1 or 0..1), inverted, their deadzone and \u0022maxzone\u0022 (a deadzone near \u002B/- 1 instead of 0).\n\u003C/li\u003E\n\u003Cli\u003E\nAxis bindings have their own inverted flag (good for when an axis is multiply bound and sometimes needs to go one way and other times needs to go the other), as well as a power curve setting (ie, produce non-linear control).\n\u003C/li\u003E\n\u003Cli\u003E\nButton bindings for action groups (custom or standard (Brake etc)) support mutiple modes:\n\u003Cul\u003E\u003Cli\u003E\nhold: action group is active while the button is pressed (eg B for the default brake binding)\n\u003C/li\u003E\n\u003Cli\u003E\ntoggle: action group turns on if off or off in one when the button is pressed (eg, T, U, G R for \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E, Lights, Gear and \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nedgetoggle: action group inverts its status while the button is held (eg F for inverting \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\noff: pressing the button always deactivates the action group\n\u003C/li\u003E\n\u003Cli\u003E\non: pressing the button always activates the action group\n\u003C/li\u003E\n\u003Cli\u003E\ntrigger: pulses the action group on then off in a single frame\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nRespects input locks\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EDevice hotplug\u003C/strong\u003E. No need to restart KSP just because you forgot to plug your joystick in.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nCurrently supported axis bindings:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nLinearBrake\n\u003Cul\u003E\u003Cli\u003E\nof course, no longer linear with a power curve\n\u003C/li\u003E\n\u003Cli\u003E\ncurrent control reference is used for determining which wheels are left, right or center, with \u002B/- 5cm leeway for center.\n\u003C/li\u003E\n\u003Cli\u003E\nsupports differential braking\n\u003Cul\u003E\u003Cli\u003E\nleft: wheels to the left of center get full braking, center gets average of left and right\n\u003C/li\u003E\n\u003Cli\u003E\nright: wheels to the right of center get full braking, center gets average of left and right\n\u003C/li\u003E\n\u003Cli\u003E\ncenter: all wheels get full braking\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nactivates brake line on wheels that have one when braking input is is non-zero\n\u003C/li\u003E\n\u003Cli\u003E\nsupports the brake tweakable\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nMainThrottle\n\u003C/li\u003E\n\u003Cli\u003E\nPitch, PitchTrim\n\u003C/li\u003E\n\u003Cli\u003E\nRoll, RollTrim\n\u003C/li\u003E\n\u003Cli\u003E\nThrottleIncrement\n\u003C/li\u003E\n\u003Cli\u003E\nWheelSteer, WheelSteerTrim\n\u003C/li\u003E\n\u003Cli\u003E\nWheelThrottle, WheelThrottleTrim\n\u003C/li\u003E\n\u003Cli\u003E\nX, Y, Z\n\u003C/li\u003E\n\u003Cli\u003E\nYaw, YawTrim\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nCurrently supported button bindings:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nAbort\n\u003C/li\u003E\n\u003Cli\u003E\nBrake\n\u003C/li\u003E\n\u003Cli\u003E\nCustomAction\n\u003Cul\u003E\u003Cli\u003E\nwhich group (1-10 (10 is 0 on the kb) specified by 64 \u0026lt;\u0026lt; N (1 = 128, 2=256, 3=512...)\n\u003C/li\u003E\n\u003Cli\u003E\nshould work with action group mods\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nGear\n\u003C/li\u003E\n\u003Cli\u003E\nLights\n\u003C/li\u003E\n\u003Cli\u003E\nMainThrottleLock\n\u003Cul\u003E\u003Cli\u003E\nallows moving an analog throttle without affecting the game\u0027s throttle setting.\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\n\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nStage\n\u003C/li\u003E\n\u003Cli\u003E\nTranslateBack\n\u003C/li\u003E\n\u003Cli\u003E\nTranslateDown\n\u003C/li\u003E\n\u003Cli\u003E\nTranslateForward\n\u003C/li\u003E\n\u003Cli\u003E\nTranslateLeft\n\u003C/li\u003E\n\u003Cli\u003E\nTranslateRight\n\u003C/li\u003E\n\u003Cli\u003E\nTranslateUp\n\u003C/li\u003E\n\u003Cli\u003E\nWheelThrottleLock\n\u003Cul\u003E\u003Cli\u003E\nallows moving an analog throttle without affecting the game\u0027s throttle setting.\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-12-22T08:21:31Z\u0022 title=\u002212/22/2019 08:21  AM\u0022 data-short=\u00224 yr\u0022\u003EDecember 22, 2019\u003C/time\u003E by taniwha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"taniwha","CreatedById":57176,"CreatedDateTime":"2019-12-22T08:25:15Z","Content":"\n\u003Cp\u003E\nI have released version 0.2.0 of Advanced Input, updated for KSP 1.8 (built and tested against 1.8.1).\n\u003C/p\u003E\n\u003Cp\u003E\nChanges from 0.1.0:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nUpdated build etc for KSP 1.8\n\u003C/li\u003E\n\u003Cli\u003E\nSupport for axis groups (feeds directly to the system).\n\u003C/li\u003E\n\u003Cli\u003E\nRange check axis recipe axis number\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}