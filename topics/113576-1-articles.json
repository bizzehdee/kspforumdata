{"TopicId":113576,"ForumId":29,"TopicTitle":"AddForce and OnUpdate vs OnFixedUpdate","CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-06-21T06:21:59Z","PageNum":1,"Articles":[{"CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-06-21T06:21:59Z","Content":"\n\u003Cp\u003ETrying to understand how to properly apply forces. \u003C/p\u003E\u003Cp\u003E1) If I want to apply a constant force, do I need to call AddForce in every update? \u003C/p\u003E\u003Cp\u003E2) Conceptually forces are applied over time. So if I call AddForce, how long is the force applied, until the next update? ( ~1/30th of a second)\u003C/p\u003E\u003Cp\u003E3) I see lots of Unity discussions saying physics should be done in FixedUpdate, but I am not seeing an option to overload such a function, only OnUpdate. Am I just seeing old documentation, or has KSP exposed FixedUpdate as OnUpdate?\u003C/p\u003E\u003Cp\u003EFor example, the below code attracts vessels to each other.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u002B\u002BupdateNth;\u003Cbr\u003E\u003Cbr\u003Eif ( updateNth % updateResolution == 0) \u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E  var centerTransform = this.part.FindModelTransform(\u0022MagneticDockingRing\u0022);\u003Cbr\u003E\u003Cbr\u003E  foreach (Vessel vessel in FlightGlobals.Vessels.Where(v =\u0026gt; v.loaded))\u003Cbr\u003E  {\u003Cbr\u003E     Vector3d vesselPosition = vessel.GetWorldPos3D();\u003Cbr\u003E\u003Cbr\u003E     if (Vector3.Distance(centerTransform.position, vesselPosition) \u0026lt; 800f)\u003Cbr\u003E     {\u003Cbr\u003E          Vector3d forceVector = (centerTransform.position - vesselPosition) * (float)updateResolution ;\u003Cbr\u003E\u003Cbr\u003E          vessel.rigidbody.AddForce(forceVector);\u003Cbr\u003E      }\u003Cbr\u003E\u003Cbr\u003E   }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-21T06:34:40Z","Content":"\n\u003Cp\u003E1) Yes\u003C/p\u003E\u003Cp\u003E2) Timewarp.(fixed)DeltaTime is the timestep for (fixed) update which will be the time any force application will happen over\u003C/p\u003E\u003Cp\u003E3) all partModules can override OnFixedUpdate (and anything physics related should definitely be done in the fixed update cycle)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-21T06:36:59Z\u0022 title=\u002206/21/2015 06:36  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 21, 2015\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-06-21T06:39:57Z","Content":"\n\u003Cp\u003EThanks! I must have had a syntax error somewhere cause now OnFixedUpdate is showing up.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EIs there a reference to help with scaling measurements ingame versus code?\u003C/p\u003E\u003Cp\u003EI.e. a force vector magnitude of 100f equates to what? 100N? \u003C/p\u003E\u003Cp\u003EIn-code distance of 50f == 50 meters ingame?\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-21T06:54:23Z","Content":"\n\u003Cp\u003Edistance is meters, mass is (metric) tons, and force is kN\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-06-21T07:27:48Z","Content":"\n\u003Cp\u003EAlways, always, \u003Cem\u003Ealways\u003C/em\u003E do physics in FixedUpdate. Update() runs once per frame, which means your physics will be dependent on your framerate if you do stuff there (along iwth other bad things happening).\u003C/p\u003E\u003Cp\u003EIf you need to do physics when a part is not staged (as well as only after it\u0027s staged) use public void FixedUpdate() rather than OnFixedUpdate. FixedUpdate() is called by Unity every physics tick. OnFixedUpdate is only called by KSP when the part is activated.\u003C/p\u003E\u003Cp\u003EForces are timeless. You\u0027re not passing an impulse (in kN-seconds), you\u0027re passing a force. AddForce means \u0022at the next intergration, act as if the object has this force applied.\u0022 (integration runs after all FixedUpdates are run). Let PhysX handle time, as it should. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}