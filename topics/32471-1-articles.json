{"TopicId":32471,"ForumId":34,"TopicTitle":"[0.20] Trimmable ASAS","CreatedByName":"MajorNr01","CreatedById":43823,"CreatedDateTime":"2013-06-11T19:26:18Z","PageNum":1,"Articles":[{"CreatedByName":"MajorNr01","CreatedById":43823,"CreatedDateTime":"2013-06-11T19:26:18Z","Content":"\n\u003Cp\u003EThis Plugin allows the player to change the parameters of the PID-Controler, namely the values of Kp, Ki and Kd. Additionally it seperates the algorithm so that there are different Kp, Ki and Kd for pitch, yaw and roll respectively.\u003C/p\u003E\u003Cp\u003EI originally made this plugin for myself and it has become invaluable as it enables using ASAS on any ship. Any ship whatsoever. With correctly trimmed values and a proper Damping value you can even have the ASAS control a vessel on RCS without wobbling or wasting any RCS fuel.\u003C/p\u003E\u003Cp\u003EGet it from the Space Port: \u003Ca href=\u0022http://kerbalspaceprogram.com/trimmable-asas/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/trimmable-asas/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"s20dan","CreatedById":1080,"CreatedDateTime":"2013-06-11T19:33:40Z","Content":"\n\u003Cp\u003EThis sounds very useful indeed! I might actually manage to use the ASAS systems now.\u003C/p\u003E\u003Cp\u003ECheers.\u003C/p\u003E\n"},{"CreatedByName":"Moon Goddess","CreatedById":57446,"CreatedDateTime":"2013-06-11T19:57:22Z","Content":"\n\u003Cp\u003ECould you explain what Kp, Ki and Kd are? \u003C/p\u003E\u003Cp\u003EIn terms that someone with no knowledge of planes would get, I\u0027ve tried looking up PID controller and it\u0027s over my head.\u003C/p\u003E\n"},{"CreatedByName":"ChronicSilence","CreatedById":19852,"CreatedDateTime":"2013-06-11T20:12:24Z","Content":"\n\u003Cp\u003EThey are just variables that determine the weights of the present error (P), accumulated error (I), and prediction of future error (D) in determining how to respond with the controls. E.g. do you want to respond to what it\u0027s doing now, what has happened so far, or what you think is about to happen.\u003C/p\u003E\u003Cp\u003EFollow the directions here for manual tuning: \u003Ca href=\u0022https://en.wikipedia.org/wiki/PID_controller#Manual_tuning\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/PID_controller#Manual_tuning\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIf the system must remain online, one tuning method is to:\u003C/p\u003E\u003Cp\u003E- first set \u003Cstrong\u003E\u003Cem\u003EKi\u003C/em\u003E\u003C/strong\u003E and \u003Cstrong\u003E\u003Cem\u003EKd\u003C/em\u003E\u003C/strong\u003E values to zero. \u003C/p\u003E\u003Cp\u003E- Increase the \u003Cstrong\u003E\u003Cem\u003EKp\u003C/em\u003E\u003C/strong\u003E until the output of the loop oscillates, then the \u003Cstrong\u003E\u003Cem\u003EKp\u003C/em\u003E\u003C/strong\u003E should be set to approximately half of that value for a \u0022quarter amplitude decay\u0022 type response. \u003C/p\u003E\u003Cp\u003E- Then increase \u003Cstrong\u003E\u003Cem\u003EKi\u003C/em\u003E\u003C/strong\u003E until any offset is corrected in sufficient time for the process. However, too much \u003Cstrong\u003E\u003Cem\u003EKi\u003C/em\u003E\u003C/strong\u003E will cause instability.\u003C/p\u003E\u003Cp\u003E- Finally, increase \u003Cstrong\u003E\u003Cem\u003EKd\u003C/em\u003E\u003C/strong\u003E, if required, until the loop is acceptably quick to reach its reference after a load disturbance. However, too much \u003Cstrong\u003E\u003Cem\u003EKd\u003C/em\u003E\u003C/strong\u003E will cause excessive response and overshoot.\u003C/p\u003E\u003Cp\u003E- A fast PID loop tuning usually overshoots slightly to reach the setpoint more quickly; however, some systems cannot accept overshoot, in which case an over-damped closed-loop system is required, which will require a \u003Cstrong\u003E\u003Cem\u003EKp\u003C/em\u003E\u003C/strong\u003E setting significantly less than half that of the \u003Cstrong\u003E\u003Cem\u003EKp\u003C/em\u003E\u003C/strong\u003E setting that was causing oscillation.\u003C/p\u003E\n"},{"CreatedByName":"m4ti140","CreatedById":67296,"CreatedDateTime":"2013-06-11T20:55:50Z","Content":"\n\u003Cp\u003EDoesn\u0027t Mechjeb 2 allow exactly the same functionality (Attitude Adjustment pad)?\u003C/p\u003E\u003Cp\u003Eomg, almost every equation on that page contains an integral...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-11T21:01:34Z\u0022 title=\u002206/11/2013 09:01  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 11, 2013\u003C/time\u003E by m4ti140\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"White Owl","CreatedById":10849,"CreatedDateTime":"2013-06-12T02:38:47Z","Content":"\n\u003Cp\u003EThis mod and this thread seriously need some attention from a smart person who both understands PID controllers and knows how to communicate that understanding to the rest of us. Explain it to me like you\u0027re teaching a fresh KSP rookie how to rendezvous and dock.\u003C/p\u003E\n"},{"CreatedByName":"MajorNr01","CreatedById":43823,"CreatedDateTime":"2013-06-12T08:17:42Z","Content":"\n\u003Cp\u003EOk, so a PID-Controler is a concept for controling a process or a value.\u003C/p\u003E\u003Cp\u003EThe value controled by the ASAS is the ship\u0027s angular momentum (basically the rotational speed). The values of Kp, Ki and Kd determine, how strongly it should respond to this value (Kp), the integral of this value (Ki) and the derivative (Kd).\u003C/p\u003E\u003Cp\u003EPractically speaking:\u003C/p\u003E\u003Cp\u003EKp determines, how strong the ASAS responds to the ship actually spinning fast. The larger Kp, the stronger the control input of the ASAS as the ship is spinning.\u003C/p\u003E\u003Cp\u003EKi is about the integral: The integral of angular momentum is actually your orientation (!). Change Ki to 0 and you will notice that the ASAS will actually no longer hold your orientation, but just kill rotation (the normal, old SAS works exactly the same way as the ASAS, but it has a Ki of 0). So the larger Ki, the stronger the ASAS will respond to your ships orientation wandering off the orientation that it had, when ASAS was turned on.\u003C/p\u003E\u003Cp\u003EKd is about the derivative: The derivative of angular momentum is, well angular acceleration, or the change of your angular momentum over time. So the larger Kd the more the ASAS responds to your angular velocity changing.\u003C/p\u003E\u003Cp\u003ESome examples:\u003C/p\u003E\u003Cp\u003EKi = 1, Kp = 0, Kd = 0 will try to hold your ship\u0027s orientation, without attempting to actually kill velocity. This will cause oscillations around the target orientation (the ship will turn back and forth (up and down, whatever) continuously).\u003C/p\u003E\u003Cp\u003EKi = 0, Kp = 1, Kd = 0 will try to kill your ship\u0027s rotation. This might work, as long as the actual input is not too strong. However it does not respond to accelerations. Might work in empty space, but e.g. for atmospheric flight, this won\u0027t hold long.\u003C/p\u003E\u003Cp\u003EKi = 0, Kp = 0, Kd = 1 will try to hold your ship\u0027s angular momentum (rotation speed) constant. This produces no input in empty space, because the rotational rate of your ship usually does not change in space.\u003C/p\u003E\u003Cp\u003ECombinations of these values will eventually produce something that will properly hold your orientation, without oscillations. However, one thing I experienced is, that a too large value for Ki will cause unstable oscillations, which means that it will turn up and down further everytime. If you have a large Ki, you usually need to compensate for it with a sufficiently large Kp.\u003C/p\u003E\u003Cp\u003EFinally, the setup that I use the most is the following:\u003C/p\u003E\u003Cp\u003EKp = 0.3\u003C/p\u003E\u003Cp\u003EKi = 0.2\u003C/p\u003E\u003Cp\u003EKd = 1.5\u003C/p\u003E\u003Cp\u003EI found out, that a large Kd helps to kill rotation quickly, without the ship oscillating up and down too much, before it stops.\u003C/p\u003E\u003Cp\u003EAlso, you can adjust a Damping value, which simply determines, how strong the control input of the ASAS is. With certain larger ships, you might want to turn it down to 0.5 or 0.1. Low Damping values help make a controler that produces less wobbling and will actually hold your orientation.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-06-12T11:09:55Z","Content":"\n\u003Cp\u003EAll seems very interesting. I wanted a way to maintain orientation without using RCS, this seems like the ticket. Does manual input change the orientation ASAS is trying to maintain? i.e. can I have ASAS on, change orientation manually and have the ASAS keep the new orientation or will it revert?\u003C/p\u003E\n"},{"CreatedByName":"MajorNr01","CreatedById":43823,"CreatedDateTime":"2013-06-12T13:12:06Z","Content":"\n\u003Cp\u003E@John FX You will have to turn SAS off and back on again, otherwise it will revert to the original orientation. The reason for this is, that the part internally stores an integral value, which determines the orientation that ASAS is trying to maintain, and this value only resets, when SAS is turned off and on again.\u003C/p\u003E\u003Cp\u003EAlso keep in mind, that all which ASAS does is use the control inputs to steer the craft for you. I am not sure, what you were trying to say, but you still need a means of actually controlling your space craft, such as a torque providing part or RCS thrusters.\u003C/p\u003E\u003Cp\u003EYou can, however, trim the ASAS appropriately to basically (almost) stop using RCS fuel, once your ship is pointing in the target direction.\u003C/p\u003E\n"},{"CreatedByName":"Senshi","CreatedById":57692,"CreatedDateTime":"2013-06-13T06:17:27Z","Content":"\n\u003Cp\u003EThis sounds very interesting, even if it will take a bit of work to figure out good values, I assume. I really hate the \u0022jitter\u0022 that RCS and ASAS introduce on light space probes, continuously trying to (over)correct orientation/velocity even without any input by me (so it should just keep still...). Especially annoying during docking maneuvers...\u003C/p\u003E\n"},{"CreatedByName":"HoneyFox","CreatedById":19237,"CreatedDateTime":"2013-06-14T05:50:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MajorNr01\u0022 data-cite=\u0022MajorNr01\u0022\u003E\u003Cdiv\u003EOk, so a PID-Controler is a concept for controling a process or a value.\u003Cp\u003EThe value controled by the ASAS is the ship\u0027s angular momentum (basically the rotational speed). The values of Kp, Ki and Kd determine, how strongly it should respond to this value (Kp), the integral of this value (Ki) and the derivative (Kd).\u003C/p\u003E\u003Cp\u003EPractically speaking:\u003C/p\u003E\u003Cp\u003EKp determines, how strong the ASAS responds to the ship actually spinning fast. The larger Kp, the stronger the control input of the ASAS as the ship is spinning.\u003C/p\u003E\u003Cp\u003EKi is about the integral: The integral of angular momentum is actually your orientation (!). Change Ki to 0 and you will notice that the ASAS will actually no longer hold your orientation, but just kill rotation (the normal, old SAS works exactly the same way as the ASAS, but it has a Ki of 0). So the larger Ki, the stronger the ASAS will respond to your ships orientation wandering off the orientation that it had, when ASAS was turned on.\u003C/p\u003E\u003Cp\u003EKd is about the derivative: The derivative of angular momentum is, well angular acceleration, or the change of your angular momentum over time. So the larger Kd the more the ASAS responds to your angular velocity changing.\u003C/p\u003E\u003Cp\u003ESome examples:\u003C/p\u003E\u003Cp\u003EKi = 1, Kp = 0, Kd = 0 will try to hold your ship\u0027s orientation, without attempting to actually kill velocity. This will cause oscillations around the target orientation (the ship will turn back and forth (up and down, whatever) continuously).\u003C/p\u003E\u003Cp\u003EKi = 0, Kp = 1, Kd = 0 will try to kill your ship\u0027s rotation. This might work, as long as the actual input is not too strong. However it does not respond to accelerations. Might work in empty space, but e.g. for atmospheric flight, this won\u0027t hold long.\u003C/p\u003E\u003Cp\u003EKi = 0, Kp = 0, Kd = 1 will try to hold your ship\u0027s angular momentum (rotation speed) constant. This produces no input in empty space, because the rotational rate of your ship usually does not change in space.\u003C/p\u003E\u003Cp\u003ECombinations of these values will eventually produce something that will properly hold your orientation, without oscillations. However, one thing I experienced is, that a too large value for Ki will cause unstable oscillations, which means that it will turn up and down further everytime. If you have a large Ki, you usually need to compensate for it with a sufficiently large Kp.\u003C/p\u003E\u003Cp\u003EFinally, the setup that I use the most is the following:\u003C/p\u003E\u003Cp\u003EKp = 0.3\u003C/p\u003E\u003Cp\u003EKi = 0.2\u003C/p\u003E\u003Cp\u003EKd = 1.5\u003C/p\u003E\u003Cp\u003EI found out, that a large Kd helps to kill rotation quickly, without the ship oscillating up and down too much, before it stops.\u003C/p\u003E\u003Cp\u003EAlso, you can adjust a Damping value, which simply determines, how strong the control input of the ASAS is. With certain larger ships, you might want to turn it down to 0.5 or 0.1. Low Damping values help make a controler that produces less wobbling and will actually hold your orientation.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI actually wonder if the PID controller is controlling the angular velocity.\u003C/p\u003E\u003Cp\u003EI thought it should be controlling the orientation instead of angular velocity.\u003C/p\u003E\u003Cp\u003EAnd thus,\u003C/p\u003E\u003Cp\u003E P: describe how strong the control system is trying to rotate the ship into a fixed orientation (the orientation is set when you activate the SAS by pressing T).\u003C/p\u003E\u003Cp\u003E I: describe how strong the control system is trying to apply extra control input to overcome some other counter-rotation momentum which causes the vessel not being able to turn to the fixed orientation in a period of time. The integral part will grow with time until it reach some limit (usually there will be a limit for that).\u003C/p\u003E\u003Cp\u003E D: describe how strong the control system is trying to kill the derivative of the orientation (which is angular velocity actually).\u003C/p\u003E\u003Cp\u003E the Damping value may be for the control output, which can avoid too rapid changes of control so that it wont says \u0022RIGHT! LEFT! RIGHT! LEFT! ...\u0022, but will be more like \u0022RIGHT! SLIGHTLY LEFT! SLIGHTLY RIGHT!\u0022. However, if the damping is set too high, the control output will be lagging too much and this itself will result to oscillation.\u003C/p\u003E\u003Cp\u003ESo a pure D controller will be more like a simple rotation killer which won\u0027t try to point to a fixed orientation, but just kill your angular velocity. Adding the P component will allow it to try pointing to the fixed orientation. Adding the I component will enhance its adaptability to external rotation momentum. (usually due to aero-forces or inbalanced CoM, etc. )\u003C/p\u003E\u003Cp\u003EFor anyone who has played the game \u0022Orbiter\u0022, the KillRot option in that game is just like a pure D controller, (may or may not have the I component) which only kills rotation but won\u0027t help you to point to a certain direction.\u003C/p\u003E\u003Cp\u003EA more simple example:\u003C/p\u003E\u003Cp\u003ESuppose you are trying to maintain the position of a ball on a flat sheet of iron.\u003C/p\u003E\u003Cp\u003Eif you want to keep it at the mid of the sheet, you usually will try to tilt the sheet towards the direction, that is the P component. \u003C/p\u003E\u003Cp\u003Ebut you will tilt the sheet into the opposite direction when the ball is getting closer to the destination (to avoid overshooting), that is the D component.\u003C/p\u003E\u003Cp\u003Eand suppose there is a electric fan nearby, pushing the ball to aside, you will start to tilt the sheet gradually to counter it, and finally you can balance out the fan\u0027s influence. This is the I component.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-14T05:54:18Z\u0022 title=\u002206/14/2013 05:54  AM\u0022 data-short=\u002211 yr\u0022\u003EJune 14, 2013\u003C/time\u003E by HoneyFox\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"7rex","CreatedById":46996,"CreatedDateTime":"2013-06-23T06:38:15Z","Content":"\n\u003Cp\u003EWould it be possible to have the option to change all three settings at once or even have it remember what the settings were on the last launch?\u003C/p\u003E\u003Cp\u003ELoving the part, it\u0027s made my ships so much more controllable but it is annoying setting it up for each launch.\u003C/p\u003E\n"},{"CreatedByName":"kaldak","CreatedById":71466,"CreatedDateTime":"2013-06-23T09:29:39Z","Content":"\n\u003Cp\u003EOh! This is perfect. Neither mechjeb nor the default ASAS modules seem to work well with vtol craft. What I really need is a roll, pitch controller that ignores yaw, and this does just that!\u003C/p\u003E\u003Cp\u003EHmm... would it be possible to add a z controller?\u003C/p\u003E\n"},{"CreatedByName":"Absolute Human","CreatedById":73157,"CreatedDateTime":"2013-07-03T10:22:50Z","Content":"\n\u003Cp\u003EOh... I just had to register and say.\u003C/p\u003E\u003Cp\u003EFortunately, I have an explanation to all of this misunderstanding with PID and ASAS!\u003C/p\u003E\u003Cp\u003EBoth MajorNr01 and HoneyFox are right!\u003C/p\u003E\u003Cp\u003EHoneyFox, I see, you understand the work of a PID controller well.\u003C/p\u003E\u003Cp\u003EMajorNr01, you\u0027ve definitely tested the ASAS in game.\u003C/p\u003E\u003Cp\u003EThe thing is, I think, that the PID parameters are MESSED UP in the game!\u003C/p\u003E\u003Cp\u003EI\u0027ve thought about making some kind of ability to adjust ASAS, but since I don\u0027t know anything about plugins, I\u0027ve made 3 parts with redacted parameters of the .cfg file, just stacked them together to get different combinations and forces and tested them with a balancing on one end stick with mounted RCS...\u003C/p\u003E\u003Cp\u003EI\u0027ve read the wiki page and other stuff. I think, I\u0027ve understood it quite well.\u003C/p\u003E\u003Cp\u003EKp defines on what \u003Cem\u003Eangle\u003C/em\u003E the counteracting thrust will become 100%\u003C/p\u003E\u003Cp\u003E(ie proportional component = the actual deviation value * kp)\u003C/p\u003E\u003Cp\u003EKd defines at what angular \u003Cem\u003Evelocity\u003C/em\u003E (speed of rotation, like rpm or degres per second) the counteracting thrust will become 100%\u003C/p\u003E\u003Cp\u003E(ie differential component = inclination of the graph of the deviation value (= speed of rotating) * kd)\u003C/p\u003E\u003Cp\u003EKi adjust the thrust proportionaly a number, that rises or decreases correspodning to how long and strongly the deviation \u003Cem\u003Elasts\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E(ie integral component = the area under the graph (shows, which way the ship is tending to tilt) * ki)\u003C/p\u003E\u003Cp\u003Eso...\u003C/p\u003E\u003Cp\u003EKp returns the ship to the initial position, but it will overshoot a lot in space, where no drag can slow the spinning, cause your ship to oscillate badly.\u003C/p\u003E\u003Cp\u003EKd will try to stop any rotation, it is the way how turned on SAS works without the actual ASAS module.\u003C/p\u003E\u003Cp\u003EKi helps to keep slighly unbalanced ship pointig in one direction while firing the engines, but there is a limit, based on the maximum gimballing or power of all RCS\u003C/p\u003E\u003Cp\u003Ebut... what we have in game\u0027s .cfg is:\u003C/p\u003E\u003Cp\u003EKi behaves as Kp\u003C/p\u003E\u003Cp\u003EKp behaves as Kd\u003C/p\u003E\u003Cp\u003EKd behaves as Ki\u003C/p\u003E\u003Cp\u003EI think they were just missconected with actual equations in the game\u0027s phisics engine!\u003C/p\u003E\u003Cp\u003EI\u0027ve tried my best to figure that out, and it makes sense for me, so if you don\u0027t agree, give me your arguments.\u003C/p\u003E\u003Cp\u003EIf you agree, we must definitely tell it to the developers!\u003C/p\u003E\u003Cp\u003E(please, excuse me for any stupid grammar or spelling mistakes, I haven\u0027t had enough practice in english yet)\u003C/p\u003E\u003Cp\u003E*edit*\u003C/p\u003E\u003Cp\u003EI\u0027ve said almost the same thing as HoneyFox about a PID controller in common,\u003C/p\u003E\u003Cp\u003Ebut my statement about ASAS in particular I still consider true.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-04T19:40:31Z\u0022 title=\u002207/04/2013 07:40  PM\u0022 data-short=\u002211 yr\u0022\u003EJuly 4, 2013\u003C/time\u003E by Absolute Human\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hellion13","CreatedById":66719,"CreatedDateTime":"2013-07-03T14:23:03Z","Content":"\n\u003Cp\u003Enifty little addon, never liked having to pack an entire planets worth of RCS to get anywhere, but if i understand the explanations, its something to tide us over until the reaction wheels get here in KSP 0.21.0 if anybody has seen that video\u003C/p\u003E\n"},{"CreatedByName":"HoneyFox","CreatedById":19237,"CreatedDateTime":"2013-07-04T02:21:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Absolute Human\u0022 data-cite=\u0022Absolute Human\u0022\u003E\u003Cdiv\u003EOh... I just had to register and say.\u003Cp\u003EFortunately, I have an explanation to all of this misunderstanding with PID and ASAS!\u003C/p\u003E\u003Cp\u003EBoth MajorNr01 and HoneyFox are right!\u003C/p\u003E\u003Cp\u003EHoneyFox, I see, you understand the work of a PID controller well.\u003C/p\u003E\u003Cp\u003EMajorNr01, you\u0027ve definitely tested the ASAS in game.\u003C/p\u003E\u003Cp\u003EThe thing is, I think, that the PID parameters are MESSED UP in the game!\u003C/p\u003E\u003Cp\u003EI\u0027ve thought about making some kind of ability to adjust ASAS, but since I don\u0027t know anything about plugins, I\u0027ve made 3 parts with redacted parameters of the .cfg file, just stacked them together to get different combinations and forces and tested them with a balancing on one end stick with mounted RCS...\u003C/p\u003E\u003Cp\u003EI\u0027ve read the wiki page and other stuff. I think, I understood it quite well.\u003C/p\u003E\u003Cp\u003EKp defines on what \u003Cem\u003Eangle\u003C/em\u003E the counteracting thrust will become 100%\u003C/p\u003E\u003Cp\u003E(ie proportional component = the actual deviation value * kp)\u003C/p\u003E\u003Cp\u003EKd defines at what angular \u003Cem\u003Evelocity\u003C/em\u003E (speed of rotation, like rpm or degres per second) the counteracting thrust will become 100%\u003C/p\u003E\u003Cp\u003E(ie differential component = inclination of the graph of the deviation value (= speed of rotating) * kd)\u003C/p\u003E\u003Cp\u003EKi adjust the thrust proportionaly a number, that rises or decreases correspodning to how long and strongly the deviation \u003Cem\u003Elasts\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E(ie integral component = the area under the graph (shows, which way the ship is tending to tilt) * ki)\u003C/p\u003E\u003Cp\u003Eso...\u003C/p\u003E\u003Cp\u003EKp returns the ship to the initial position, but it will overshoot a lot in space, where no drag can slow the spinning, cause your ship to oscillate badly.\u003C/p\u003E\u003Cp\u003EKd will try to stop any rotation, it is the way how turned on SAS works without the actual ASAS module.\u003C/p\u003E\u003Cp\u003EKi helps to keep slighly unbalanced ship pointig in one direction while firing the engines, but there is a limit, based on the maximum gimballing or power of all RCS\u003C/p\u003E\u003Cp\u003Ebut... what we have in game\u0027s .cfg is:\u003C/p\u003E\u003Cp\u003EKi behaves as Kp\u003C/p\u003E\u003Cp\u003EKp behaves as Kd\u003C/p\u003E\u003Cp\u003EKd behaves as Ki\u003C/p\u003E\u003Cp\u003EI think they were just missconected with actual equations in the game\u0027s phisics engine!\u003C/p\u003E\u003Cp\u003EI\u0027ve tried my best to figure that out, and it makes sense for me, so if you don\u0027t agree, give me your arguments.\u003C/p\u003E\u003Cp\u003EIf you agree, we must definitely tell it to the developers!\u003C/p\u003E\u003Cp\u003E(please, excuse me for any stupid grammar or spelling mistakes, I haven\u0027t had enough practice in english yet)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eo_o Oh... Ki behaves as Kp? Kp behaves as Kd? Kd behave as Ki? ... Well maybe it\u0027s Squad\u0027s decision. Or is it a PID controller of angular velocity? no i don\u0027t think so... because it won\u0027t be able to keep pointing to a certain direction if it\u0027s a controller of angular velocity.\u003C/p\u003E\u003Cp\u003EIf your statement is true, a pure D controller (read as rotation killer) should only need Kp (which actually behaves as Kd) without Ki/Kd. have you tested that?\u003C/p\u003E\u003Cp\u003EBTW, mechjeb\u0027s autopilot system (and some other flight control plugins) is using the original way (Ki behaves as Ki, Kp behaves as Kp, Kd behaves as Kd)... I think i\u0027ve read some codes of that project sometimes ago...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-04T02:31:55Z\u0022 title=\u002207/04/2013 02:31  AM\u0022 data-short=\u002211 yr\u0022\u003EJuly 4, 2013\u003C/time\u003E by HoneyFox\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Absolute Human","CreatedById":73157,"CreatedDateTime":"2013-07-04T12:17:12Z","Content":"\n\u003Cp\u003EI\u0027m not \u003Cem\u003Equite\u003C/em\u003E sure...\u003C/p\u003E\u003Cp\u003EA PID controller of angular velocity is possible, but it is maybe useful in some kind of motors/wheels/propellers, not in directing a cpacecraft.\u003C/p\u003E\u003Cp\u003EIt \u003Cem\u003Emust\u003C/em\u003E be the angle of rotation, that is being messured and adjusted, otherwise it doesn\u0027t make any sense.\u003C/p\u003E\u003Cp\u003EYes, i tested it like you said. For a differential asas i wrote\u003C/p\u003E\u003Cp\u003EKi = 0\u003C/p\u003E\u003Cp\u003EKp = 1\u003C/p\u003E\u003Cp\u003EKd = 0\u003C/p\u003E\u003Cp\u003Efor proportional\u003C/p\u003E\u003Cp\u003EKi = 1\u003C/p\u003E\u003Cp\u003EKp = 0\u003C/p\u003E\u003Cp\u003EKd = 0\u003C/p\u003E\u003Cp\u003Efor integral\u003C/p\u003E\u003Cp\u003EKi = 0\u003C/p\u003E\u003Cp\u003EKp = 0\u003C/p\u003E\u003Cp\u003EKd = 1\u003C/p\u003E\u003Cp\u003Eand then it began to work like i think it should:\u003C/p\u003E\u003Cp\u003EKd asas was killing rotation\u003C/p\u003E\u003Cp\u003EKp asas was trying to point the ship in a specific direction. (but realy was making it a kind of pendulum)\u003C/p\u003E\u003Cp\u003EKd \u002B Kp combo worked like an ordinary asas without gravity,\u003C/p\u003E\u003Cp\u003Ebut slighly failed to return exactly in the initial position, when my \u0027stick\u0027 like craft was balancing standing on the ground, aimed about 30 degrees from vertical. It was always missing few degrees up to the intended position.\u003C/p\u003E\u003Cp\u003EKi asas did almost nothing without others, but Kd \u002B Kp \u002B Ki worked nice, and, i think, it cleared those few degrees properly.\u003C/p\u003E\u003Cp\u003EI\u0027ve tested different values too, it was responding properly, like if I decreased the values, then\u003C/p\u003E\u003Cp\u003EKp was firing less furiosly on the same degrees, and came to 100% on greater angles,\u003C/p\u003E\u003Cp\u003EKd was firing less on the same speed,\u003C/p\u003E\u003Cp\u003EKi changed less noticeably, but I assume it lengthened the time to correct those errors in positioning caused by constant unbalanced force.\u003C/p\u003E\u003Cp\u003Ewhat i\u0027m saying, is when you want to create an ajustable asas, you should match those coefficients with:\u003C/p\u003E\u003Cp\u003EP- degrees (of the angle when the correcting thrust becomes 100%)\u003C/p\u003E\u003Cp\u003ED- degrees / second (of the speed of rotation on which the correcting thrust becomes 100%)\u003C/p\u003E\u003Cp\u003EI- degrees * seconds (equals the time of lasting 1 degree error \u003Cem\u003Eor\u003C/em\u003E the number of degrees of error that lasts 1 second to make the correcting thrust 100%)\u003C/p\u003E\u003Cp\u003E(Yes, the Ki is tricky, but it is how the integral works- calculates the \u003Cem\u003Earea\u003C/em\u003E of the graph, which is equal to the sum of multiple values of a function)\u003C/p\u003E\u003Cp\u003EOf course if I remember the math right \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\u003Cp\u003ESo the numbers, that MajorNr01 chose, mean\u003C/p\u003E\u003Cp\u003EKi = 0.2 - soft active correcting to avoid oscillation\u003C/p\u003E\u003Cp\u003EKp = 0.3 - a bit tougher killrot to kill oscillation\u003C/p\u003E\u003Cp\u003EKd = 1.5 - higher value to not very sensitive constant correcting.\u003C/p\u003E\u003Cp\u003EI find the tuning correct, but I think my way to explain it makes more sense,\u003C/p\u003E\u003Cp\u003Eand he has just done it by trial and error, not to offend his skills, he might done the plugin well, i don\u0027t know about them anything \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EI realy think it is just an occasional mistake of the devs!\u003C/p\u003E\u003Cp\u003EOh, and yes, that isn\u0027t likely their intention, it is just the cfg file value, that is hardly ever changed, being set once (probably just by trial and error by the devs themselves)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-04T17:53:02Z\u0022 title=\u002207/04/2013 05:53  PM\u0022 data-short=\u002211 yr\u0022\u003EJuly 4, 2013\u003C/time\u003E by Absolute Human\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Absolute Human","CreatedById":73157,"CreatedDateTime":"2013-07-04T19:19:05Z","Content":"\n\u003Cp\u003EOk,ok, some edit!\u003C/p\u003E\u003Cp\u003EI reread what MajorNr01 has posted...\u003C/p\u003E\u003Cp\u003EIt makes some sense, because if the input value is agular velosity,\u003C/p\u003E\u003Cp\u003Ethen Kd of it will actually work like Kp of angle, because the differential of angle is agular velosity,\u003C/p\u003E\u003Cp\u003Eand Ki of it will work like Kp, because the integral of agular velosity is angle.\u003C/p\u003E\u003Cp\u003EBut Kd doesn\u0027t make any sense... why the hell do you need your angular acceleration? It is totally useless... I can\u0027t imagine a situation, where it is needed.\u003C/p\u003E\u003Cp\u003EYou more likely need Kii- integral of integral of your rotation = integral of your angle, which, as I stated, will help you to counteract a constant side force ie wind, more weight on one side, not exactly simmetrical engine thrust, etc. And it actually has this ability. I don\u0027t think it is somehow related to the angular acceleration of your ship, it can\u0027t realy have any angular acceleration caused by any noticeable external forces at all.\u003C/p\u003E\u003Cp\u003EIt is only caused by the torque of command pods and rcs, which you don\u0027t use while your asas is turned on. So, yeh, it is useless.\u003C/p\u003E\u003Cp\u003EIt could be at some point intentionaly made by the devs, but, really, they should fix it anyway!\u003C/p\u003E\u003Cp\u003EI know, they are doing something with asas due to the next update, but i won\u0027t be surprised, if they just stick with what they have and make some unnecesary complex systems of auto adjusting, and not even notice the issue at all.\u003C/p\u003E\u003Cp\u003EThey\u0027ve made that crazy system of adjusting fuel consumption with Isp instead of changing thrust, so I\u0027m prepared for everything.\u003C/p\u003E\u003Cp\u003EAnother update...\u003C/p\u003E\u003Cp\u003EI repeated the testing to finally check those things.\u003C/p\u003E\u003Cp\u003EI again approve that Kp is killrot and Ki is hold orientation. But Kd is very unclear. I\u0027m not sure if it realy behaves as Ki...\u003C/p\u003E\u003Cp\u003EMaybe I was too fast about it, maybe it is realy an angular acceleration controller. I mean, It is very difficult to definitely guess what it is doing just by wathing it, it makes almost none difference in behavior. If Squad really did it as a PID controller of angular velocity, it might be a really strange decision, but they must have some reasons (I hope). And if we wait till the next update, they will hopefully fix everything by themselves. Untill then, I\u0027m done with it. \u003C/p\u003E\u003Cp\u003EBut,still it would be great to actually replace the coefficients of the Trimmable-ASAS with some precise units of measurement,\u003C/p\u003E\u003Cp\u003EI think it is possible, yet not very clear how to figure the numbers out.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-05T16:00:42Z\u0022 title=\u002207/05/2013 04:00  PM\u0022 data-short=\u002211 yr\u0022\u003EJuly 5, 2013\u003C/time\u003E by Absolute Human\u003C/strong\u003E\n\u003C/span\u003E\n"}]}