{"TopicId":7542,"ForumId":29,"TopicTitle":"The official unoffical \u0026quot;help a fellow plugin developer\u0026quot; thread","CreatedByName":"Cephei","CreatedById":2555,"CreatedDateTime":"2012-03-04T10:02:40Z","PageNum":5,"Articles":[{"CreatedByName":"Quinton","CreatedById":18391,"CreatedDateTime":"2012-03-16T13:21:47Z","Content":"\n\u003Cp\u003EIn onPartLoad() I\\\u0027m walking the Transform tree and any node name starting with \u0027node_collider\u0027 I create a MeshCollider for and delete the MeshRenderer from. The game seems to do this automatically for the one node named (exactly) \u0027node_collider\u0027 and it renames it to \u0027collider\u0027 at the same time (at least that\\\u0027s the state everything\\\u0027s in when my onPartLoad() is called).\u003C/p\u003E\u003Cp\u003EThe good news is this seems to work -- my unfolded solar panels will happily collide with objects.\u003C/p\u003E\u003Cp\u003ENext step, I want to figure out how to adjust the drag so unfolding them while in flight becomes a really bad idea (ideally they should not survive the event, being torn off the craft). When folded up against the side of the ship, they should add some, but not a catastrophic amount of drag.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cimg src=\u0022http://frotz.net/misc/spaaace.jpg\u0022 alt=\u0022spaaace.jpg\u0022\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"C7Studios","CreatedById":3895,"CreatedDateTime":"2012-03-16T13:45:39Z","Content":"\n\u003Cp\u003EDo you mind sharing your implementation of the folding? It would be nice to see how you implemented it, as I\\\u0027m planning on making some more dynamic parts in the near future.\u003C/p\u003E\n"},{"CreatedByName":"Quinton","CreatedById":18391,"CreatedDateTime":"2012-03-16T14:30:07Z","Content":"\n\u003Cp\u003EIt\\\u0027s still *really* rough -- not sure it warrants an announcement on the plugin release subforum yet, but if you want to take a look at the source or try it out, it\\\u0027s here: \u003Ca href=\u0022https://f13aerospace.googlecode.com/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://f13aerospace.googlecode.com/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-03-17T00:20:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Quinton\u0022 data-cite=\u0022Quinton\u0022\u003E\u003Cdiv\u003ETodo:\u003Cp\u003E- figure out why the model draws incorrectly in the VAB parts bay\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003EIt seems that KSP does not instantiate part\\\u0027s class when drawing its VAB icon, it uses the mesh as it is. Paint additional colliders\\\u0027 texture fully transparent (with alpha channel exactly zero) to make them invisible; and set \u003Cem\u003EalphaCutoff \u003C/em\u003Eparameter in Part.cfg to some positive value (0.1 would be OK).\u003Cp\u003EP.S. Excellent work with MeshColliders! \u003C/p\u003E\u003Cp\u003EIt\\\u0027s a shame I can\\\u0027t do the same with my WheelColliders; they wanna have a rigidbody at the moment of their creation \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Lanfiex","CreatedById":14254,"CreatedDateTime":"2012-03-18T18:51:42Z","Content":"\n\u003Cp\u003Ehow do you make a part apply a force in a certain direction?\u003C/p\u003E\u003Cp\u003EAlso how do you find the current gravitational acceleration?\u003C/p\u003E\n"},{"CreatedByName":"Zool","CreatedById":3152,"CreatedDateTime":"2012-03-18T19:20:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Lanfiex\u0022 data-cite=\u0022Lanfiex\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Ehow do you make a part apply a force in a certain direction?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//the direction is the part\\\u0027s up vector\u003Cbr\u003EforceDirection = this.transform.up.normalized;\u003Cbr\u003EforceMagnitude= 10;\u003Cbr\u003E\u003Cbr\u003E//apply the force\u003Cbr\u003Ethis.rigidbody.AddForceAtPosition(forceDirection*forceMagnitude, this.transform.position,UnityEngine.ForceMode.Force);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAlso how do you find the current gravitational acceleration?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Egvector = -FlightGlobals.getUpAxis(this.vessel.transform.position);\u003Cbr\u003Egmagnitude = FlightGlobals.getGeeForceAtPosition(this.transform.position);\u003Cbr\u003Egravity = gvector.normalized * gmagnitude;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere\\\u0027s also this value, but I\\\u0027m not sure what it does if you have more than one active ship.\u003C/p\u003E\u003Cp\u003EFlightGlobals.ship_geeForce\u003C/p\u003E\n"},{"CreatedByName":"Lanfiex","CreatedById":14254,"CreatedDateTime":"2012-03-18T19:34:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zool\u0022 data-cite=\u0022Zool\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThere\\\u0027s also this value, but I\\\u0027m not sure what it does if you have more than one active ship.\u003C/p\u003E\u003Cp\u003EFlightGlobals.ship_geeForce\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003EI am trying that out of gravity code and I am getting the error \u003C/p\u003E\u003Cp\u003EError 1 Operator \\\u0027*\\\u0027 cannot be applied to operands of type \\\u0027Vector3d\\\u0027 \u003C/p\u003E\u003Cp\u003Eabout this line\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Egravity = gvector.normalized * gmagnitude;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Egmagnitude is a 3d vector how do i get the scaler out of it?\u003C/p\u003E\n"},{"CreatedByName":"N3X15","CreatedById":12073,"CreatedDateTime":"2012-03-18T20:07:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Lanfiex\u0022 data-cite=\u0022Lanfiex\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Ehow do you make a part apply a force in a certain direction?\u003C/p\u003E\u003Cp\u003EAlso how do you find the current gravitational acceleration?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1. base.Rigidbody.AddForceAtPosition(Vector3);\u003C/p\u003E\u003Cp\u003E2. I\\\u0027m not sure, but I think it\\\u0027s in this.orbit somewhere.\u003C/p\u003E\n"},{"CreatedByName":"Zool","CreatedById":3152,"CreatedDateTime":"2012-03-18T21:20:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Lanfiex\u0022 data-cite=\u0022Lanfiex\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003EI am trying that out of gravity code and I am getting the error \u003C/p\u003E\u003Cp\u003EError 1 Operator \\\u0027*\\\u0027 cannot be applied to operands of type \\\u0027Vector3d\\\u0027 \u003C/p\u003E\u003Cp\u003Eabout this line\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Egravity = gvector.normalized * gmagnitude;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Egmagnitude is a 3d vector how do i get the scaler out of it?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt is? Then that\\\u0027s all you need.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Egravity = FlightGlobals.getGeeForceAtPosition(this.transform.position);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"sarkun","CreatedById":10559,"CreatedDateTime":"2012-03-21T12:59:31Z","Content":"\n\u003Cp\u003EHey guys, a newbies question:\u003C/p\u003E\u003Cp\u003EDo we know the order of function calls on part loading, using different paths (VAB, LaunchPad, Resume via TrackingStation)?\u003C/p\u003E\u003Cp\u003EI\\\u0027m asking, cause I get different behavior for my plugin enabled parts when I create a ship in VAB than if I jump straight to one already constructed on the pad.\u003C/p\u003E\u003Cp\u003EI\\\u0027m mostly interested in:\u003C/p\u003E\u003Cp\u003EOnPartStart\u003C/p\u003E\u003Cp\u003EOnPartLoad\u003C/p\u003E\u003Cp\u003EOnPartAwake\u003C/p\u003E\u003Cp\u003EOnFlightStateLoad\u003C/p\u003E\u003Cp\u003EI\\\u0027ve put some of my initialization code in OnPartAwake and I think that may be a bit too late...\u003C/p\u003E\n"},{"CreatedByName":"Quinton","CreatedById":18391,"CreatedDateTime":"2012-03-22T07:01:11Z","Content":"\n\u003Cp\u003EThat\\\u0027d be handy to document. Quickest way to find out would be to put some print()s in each method, try different paths (launch game, go straight to launch pad, etc), and check the logfile for what order things happen in. I\\\u0027ve noticed some of the methods seem to get called multiple times, etc, as well, but haven\\\u0027t checked to see if that was for multiple instances of the same part, or what.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-03-22T12:47:14Z","Content":"\n\u003Cp\u003EIs it possible to process values during \u003Cem\u003Epart.cfg\u003C/em\u003E reading. I tried to make them fields with custom set procedure, but it doesn\\\u0027t work - I get \u003Cem\u003Evariable not found\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EHowever this parser somehow processes multiple particle effects and even custom named \u003Cem\u003Enode_stack_xxxx\u003C/em\u003E. Can the same mechanisms be accessed with our plugins?\u003C/p\u003E\n"},{"CreatedByName":"sarkun","CreatedById":10559,"CreatedDateTime":"2012-03-22T12:56:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIs it possible to process values during \u003Cem\u003Epart.cfg\u003C/em\u003E reading. I tried to make them fields with custom set procedure, but it doesn\\\u0027t work - I get \u003Cem\u003Evariable not found\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EHowever this parser somehow processes multiple particle effects and even custom named \u003Cem\u003Enode_stack_xxxx\u003C/em\u003E. Can the same mechanisms be accessed with our plugins?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn my plugin, I create public String variables that can be set in the cfg. Then I do my own parsing in onPartStart. This approach gives you unspecified amount of variables, as long as they are entered in a single line in the cfg.\u003C/p\u003E\n"},{"CreatedByName":"esd","CreatedById":705,"CreatedDateTime":"2012-03-23T12:48:46Z","Content":"\n\u003Cp\u003EWhat I could REALLY use is a couple of code examples of applied maths: eg, deriving compass heading/yaw, pitch and roll, and velocity vectors in m/s (handy for landing) from available vectors/quads - a \u0027paste this in and you\\\u0027ll find it in the double \\\u0027YourHeading1\\\u0027\u0027 job.\u003C/p\u003E\u003Cp\u003EI know that MechJeb, for example, has such stuff in it\\\u0027s source, but separating it from the mechanics of MechJeb isn\\\u0027t easy for a c# novice (and I don\\\u0027t like to butcher others\\\u0027 code without express permission!) - plus having such references in one labelled spot would also make it easier for us novices. I know I\\\u0027d appreciate it, anyway.\u003C/p\u003E\u003Cp\u003EY\\\u0027know, if there\\\u0027s enough maths to do on the various parameters the game creates to make them \u0027player useful\u0027, there could even be a call for a maths library plugin...\u003C/p\u003E\n"},{"CreatedByName":"The_Duck","CreatedById":1156,"CreatedDateTime":"2012-03-23T20:22:13Z","Content":"\n\u003Cp\u003EYou can find some example vector math here: \u003Ca href=\u0022http://kspwiki.nexisonline.net/wiki/Module_code_examples\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kspwiki.nexisonline.net/wiki/Module_code_examples\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"esd","CreatedById":705,"CreatedDateTime":"2012-03-23T23:18:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022The_Duck\u0022 data-cite=\u0022The_Duck\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EYou can find some example vector math here: \u003Ca href=\u0022http://kspwiki.nexisonline.net/wiki/Module_code_examples\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kspwiki.nexisonline.net/wiki/Module_code_examples\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think I love you.\u003C/p\u003E\u003Cp\u003E*edit*\u003C/p\u003E\u003Cp\u003ERight, so....\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//unit vectors in the up (normal to planet surface), east, and north (parallel to planet surface) directions\u003Cbr\u003EVector3d eastUnit = vessel.mainBody.getRFrmVel(position).normalized; //uses the rotation of the body\\\u0027s frame to determine \u0027east\u0027\u003Cbr\u003EVector3d upUnit = (position - vessel.mainBody.position).normalized;\u003Cbr\u003EVector3d northUnit = Vector3d.Cross(upUnit, eastUnit); //north = up cross east\u003Cbr\u003E\u003Cbr\u003E...\u003Cbr\u003E\u003Cbr\u003E//direction in which the ship currently points:\u003Cbr\u003EVector3d heading = (Vector3d)vessel.transform.up;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHow would I turn that into a heading (just like the text at the bottom of the Navball, but with a tad more precision)? I figure it\\\u0027s the likely the bottom one? And in KSP, which plane is up? y or z? (Used to C4D, where y is up, but others use z)\u003C/p\u003E\n"},{"CreatedByName":"The_Duck","CreatedById":1156,"CreatedDateTime":"2012-03-24T00:49:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022esd\u0022 data-cite=\u0022esd\u0022\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//unit vectors in the up (normal to planet surface), east, and north (parallel to planet surface) directions\u003Cbr\u003EVector3d eastUnit = vessel.mainBody.getRFrmVel(position).normalized; //uses the rotation of the body\\\u0027s frame to determine \u0027east\u0027\u003Cbr\u003EVector3d upUnit = (position - vessel.mainBody.position).normalized;\u003Cbr\u003EVector3d northUnit = Vector3d.Cross(upUnit, eastUnit); //north = up cross east\u003Cbr\u003E\u003Cbr\u003E...\u003Cbr\u003E\u003Cbr\u003E//direction in which the ship currently points:\u003Cbr\u003EVector3d heading = (Vector3d)vessel.transform.up;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHow would I turn that into a heading (just like the text at the bottom of the Navball, but with a tad more precision)? I figure it\\\u0027s the likely the bottom one? And in KSP, which plane is up? y or z? (Used to C4D, where y is up, but others use z)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETo get a heading in degrees you\\\u0027d probably do some trigonometry like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Edouble eastComponent = Vector3d.Dot(heading, eastUnit);\u003Cbr\u003Edouble northComponent = Vector3d.Dot(heading, northUnit);\u003Cbr\u003Edouble headingRadians = Math.Atan2(eastComponent, northComponent);\u003Cbr\u003Edouble headingDegrees = headingRadians * Math.PI / 180.0;\u003Cbr\u003Eif(headingDegrees \u0026lt; 0) headingDegrees \u002B= 360.0;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI haven\\\u0027t tried that code, so it might have mistakes.\u003C/p\u003E\u003Cp\u003EI believe that in KSP\\\u0027s world coordinates, the y axis (i.e., second component of Vector3d objects) points along the rotational axis of Kerbin (also the rotational axis of the moon, and the normal vector to plane of the Kerbin system). Personally, in my code I don\\\u0027t use this fact and instead base everything off the unit vectors constructed in that example code. I basically never access, say, the x component of a vector. Instead I take dot products with appropriate unit vectors. This way I don\\\u0027t have to worry about the way KSP\\\u0027s coordinate axes are actually oriented.\u003C/p\u003E\n"},{"CreatedByName":"esd","CreatedById":705,"CreatedDateTime":"2012-03-24T02:22:30Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EOk, that *almost* works... the code compiled fine, but the results of HeadingDegrees are a tad odd:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EFrom actual bearings 0 - 180, HeadingDegrees goes from approx 0.055 to 0. When it crosses the 180 line on the navball, HeadingDegrees jumps to 360. Actual heading 180 - 359 makes HeadingDegrees go from 360 to 359.945.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003ESo it\\\u0027s going down when the actual heading goes up (easy enough to correct, just deduct from 360),\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EOk, got it working! Rad to Deg is *180/pi, but you were close enough to point me the right way!\u003C/p\u003E\u003Cp\u003E Bit of a chunk of text (though I imagine some of the other values used to derive this will be of use)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E Vector3d upUnit = (position - vessel.mainBody.position).normalized;\u003Cbr\u003E Vector3d northUnit = Vector3d.Cross(upUnit, eastUnit); //north = up cross east\u003Cbr\u003E Vector3d heading2 = (Vector3d)vessel.transform.up;\u003Cbr\u003E\u003Cbr\u003E double eastComponent = Vector3d.Dot(heading2, eastUnit);\u003Cbr\u003E double northComponent = Vector3d.Dot(heading2, northUnit);\u003Cbr\u003E double headingRadians = Math.Atan2(eastComponent, northComponent);\u003Cbr\u003E double headingDegrees = headingRadians * 180.0 / Math.PI;\u003Cbr\u003E headingDegrees = 180 - headingDegrees;\u003Cbr\u003E if (headingDegrees \u0026gt; 360) headingDegrees -= 360;\u003Cbr\u003E if (headingDegrees \u0026lt; 0) headingDegrees \u002B= 360.0;\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E      Vector3d eastUnit = vessel.mainBody.getRFrmVel(position).normalized; //uses the rotation of the body\\\u0027s frame to determine \u0027east\u0027\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ELooking to see what I can do to reduce it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E*edit*\u003C/p\u003E\u003Cp\u003EOk, the other method I found was in the MechJeb source (so clearly credit to r4m0n). No idea what MoI is though...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E Vector3d CoM;\u003Cbr\u003E Vector3d MoI;\u003Cbr\u003E Vector3d up;\u003Cbr\u003E Quaternion rotationSurface;\u003Cbr\u003E Quaternion rotationVesselSurface;\u003Cbr\u003E\u003Cbr\u003E CoM = vessel.findWorldCenterOfMass();\u003Cbr\u003E MoI = vessel.findLocalMOI(CoM);\u003Cbr\u003E up = (CoM - vessel.mainBody.position).normalized;\u003Cbr\u003E\u003Cbr\u003E Vector3d north = Vector3.Exclude(up, (vessel.mainBody.position \u002B vessel.mainBody.transform.up * (float)vessel.mainBody.Radius) - CoM).normalized;\u003Cbr\u003E rotationSurface = Quaternion.LookRotation(north, up);\u003Cbr\u003E rotationVesselSurface = Quaternion.Inverse(Quaternion.Euler(90, 0, 0) * Quaternion.Inverse(vessel.transform.rotation) * rotationSurface);\u003Cbr\u003E\u003Cbr\u003E vesselHeading1 = rotationVesselSurface.eulerAngles.y;\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E      double vesselHeading1;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMany thanks for your help -= you never know, I may be back!\u003C/p\u003E\n"},{"CreatedByName":"The_Duck","CreatedById":1156,"CreatedDateTime":"2012-03-24T02:39:01Z","Content":"\n\u003Cp\u003EAh, oops!\u003C/p\u003E\u003Cp\u003EMOI is moment of inertia.\u003C/p\u003E\n"},{"CreatedByName":"Emilio","CreatedById":12359,"CreatedDateTime":"2012-03-25T21:09:15Z","Content":"\n\u003Cp\u003ETo do a LineRenderer, you must attach the line to a part like this :\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[name].transform.parent = transform\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo can we do a part that attaches to another upon collision, like this ?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eoverride onCollide (collide Collide)\u003Cbr\u003E{\u003Cbr\u003E[name].transform.child = transform\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"oasiac","CreatedById":20199,"CreatedDateTime":"2012-03-26T19:05:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ForumHelper\u0022 data-cite=\u0022ForumHelper\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOnPartActivate - happens when you press Spacebar and the stage with your part is activated.\u003C/p\u003E\u003Cp\u003EOnPartAwake - I believe this is available when unpausing the game.\u003C/p\u003E\u003Cp\u003EOnFlightStart - this happens when you click \u0027Launch\u0027 in the VAB and the ship is placed on the launch pad.\u003C/p\u003E\u003Cp\u003EI\\\u0027m doing the initialization in onPartStart();\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAwake according to Unity documentation.\u003C/p\u003E\u003Cp\u003EAwake is used to initialize any variables or game state before the game starts. Awake is called only once during the lifetime of the script instance. Awake is called after all objects are initialized so you can safely speak to other objects or query them using eg. GameObject.FindWithTag. Each GameObject\\\u0027s Awake is called in a random order between objects. Because of this, you should use Awake to set up references between scripts, and use Start to pass any information back and forth. Awake is always called before any Start functions. This allows you to order initialization of scripts. Awake can not act as a coroutine.\u003C/p\u003E\n"},{"CreatedByName":"Causeless","CreatedById":5366,"CreatedDateTime":"2012-03-27T19:28:02Z","Content":"\n\u003Cp\u003EThe onPartAwake isn\\\u0027t a standard Unity thing - it\\\u0027s exclusive to this game, so that documentation is probably wrong in this instance.\u003C/p\u003E\u003Cp\u003EFor anyone wondering, onPartLoad happens when a part is loaded at the start of the game, and this is before the part.cfg is loaded.\u003C/p\u003E\n"},{"CreatedByName":"Victor Ludorum","CreatedById":17681,"CreatedDateTime":"2012-03-27T20:40:16Z","Content":"\n\u003Cp\u003EThis is what I\\\u0027ve discovered/been using in lieu of any real documentation for the Part class. If you compile this and set is as the module for a part, you\\\u0027ll get a debug print (show using Alt-F2) as each member function runs. Note that the commented-out ones will spam the debug console if re-enabled.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E[tt]\u003C/p\u003E\u003Cp\u003Eusing System;\u003C/p\u003E\u003Cp\u003Eusing System.Collections.Generic;\u003C/p\u003E\u003Cp\u003Eusing System.Linq;\u003C/p\u003E\u003Cp\u003Eusing System.Text;\u003C/p\u003E\u003Cp\u003Eusing UnityEngine;\u003C/p\u003E\u003Cp\u003Epublic class DebugPart: Part\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E // Called when part disconnects from vessel due to crash etc. - seems to be called first\u003C/p\u003E\u003Cp\u003E // Also called when part is lowest part of a stack above a decoupler\u003C/p\u003E\u003Cp\u003E protected override void onDisconnect()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onDisconnect\u0027);\u003C/p\u003E\u003Cp\u003E base.onDisconnect();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called in VAB after onPartAttach() or any update of vessel in VAB\u003C/p\u003E\u003Cp\u003E // Also called after onPack()\u003C/p\u003E\u003Cp\u003E public override void onBackup()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onBackup\u0027);\u003C/p\u003E\u003Cp\u003E base.onBackup();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called in VAB when copying a part for symmetric placement\u003C/p\u003E\u003Cp\u003E protected override void onCopy()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onCopy\u0027);\u003C/p\u003E\u003Cp\u003E base.onCopy();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called continually when part is active anywhere in VAB, after onPartStart()\u003C/p\u003E\u003Cp\u003E protected override void onEditorUpdate()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //print(\u0027DBG: onEditorUpdate\u0027);\u003C/p\u003E\u003Cp\u003E base.onEditorUpdate();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called in VAB when removing a part after onPartDelete()\u003C/p\u003E\u003Cp\u003E // or in flight scene when destroying a part after onPartExplode()\u003C/p\u003E\u003Cp\u003E // also after part goes out of range (\u0026gt;2.5km) of focussed ship\u003C/p\u003E\u003Cp\u003E protected override void onPartDestroy()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartDestroy\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartDestroy();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Does not seem to be reliably called - mostly when decoupler explodes\u003C/p\u003E\u003Cp\u003E protected override void onDecouple(float breakForce)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onDecouple(\u0027 \u002B breakForce \u002B \u0027)\u0027);\u003C/p\u003E\u003Cp\u003E base.onDecouple(breakForce);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called at beginning of flight scene after onPartStart()\u003C/p\u003E\u003Cp\u003E // also when part comes in range of focussed ship (\u0026lt;2.5km) after onPartStart()\u003C/p\u003E\u003Cp\u003E protected override void onFlightStart()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onFlightStart\u0027);\u003C/p\u003E\u003Cp\u003E base.onFlightStart();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called for launchpad start after onFlightStart()\u003C/p\u003E\u003Cp\u003E protected override void onFlightStartAtLaunchPad()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onFlightStartAtLaunchPad\u0027);\u003C/p\u003E\u003Cp\u003E base.onFlightStartAtLaunchPad();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when loading the flight state, such as when part goes off-rails\u003C/p\u003E\u003Cp\u003E public override void onFlightStateLoad(Dictionary\u0026lt;string, KSPParseable\u0026gt; parsedData)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onFlightStateLoad\u0027);\u003C/p\u003E\u003Cp\u003E base.onFlightStateLoad(parsedData);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when saving from VAB and during flight state save, such as when part goes on-rails\u003C/p\u003E\u003Cp\u003E public override void onFlightStateSave(Dictionary\u0026lt;string, KSPParseable\u0026gt; partDataCollection)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onFlightStateSave\u0027);\u003C/p\u003E\u003Cp\u003E base.onFlightStateSave(partDataCollection);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when any vessel control input occurs, even automatic\u003C/p\u003E\u003Cp\u003E // may be called during part placement before flight scene is properly setup\u003C/p\u003E\u003Cp\u003E protected override void onCtrlUpd(FlightCtrlState s)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //print(\u0027DBG: onCtrlUpd(\u0027 \u002B s \u002B \u0027)\u0027);\u003C/p\u003E\u003Cp\u003E base.onCtrlUpd(s);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when game is paused (ESC)\u003C/p\u003E\u003Cp\u003E protected override void onGamePause()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onGamePause\u0027);\u003C/p\u003E\u003Cp\u003E base.onGamePause();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when game in unpaused\u003C/p\u003E\u003Cp\u003E protected override void onGameResume()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onGameResume\u0027);\u003C/p\u003E\u003Cp\u003E base.onGameResume();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when part soft-lands on water\u003C/p\u003E\u003Cp\u003E protected override void onPartSplashdown()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartSplashdown\u0027);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when part goes on rails (\u0026gt;500m from focussed ship)\u003C/p\u003E\u003Cp\u003E protected override void onPack()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPack\u0027);\u003C/p\u003E\u003Cp\u003E base.onPack();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when part goes off-rails\u003C/p\u003E\u003Cp\u003E protected override void onUnpack()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onUnpack\u0027);\u003C/p\u003E\u003Cp\u003E base.onUnpack();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Does not seem to be called\u003C/p\u003E\u003Cp\u003E protected override void onPartTouchdown()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartTouchdown\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartTouchdown();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called in VAB when deleting a part, just before onPartDestroy()\u003C/p\u003E\u003Cp\u003E protected override void onPartDelete()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartDelete\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartDelete();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called in VAB when attaching to another part - \u0027parent\u0027 gives attached part\u003C/p\u003E\u003Cp\u003E protected override void onPartAttach(Part parent)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartAttach(\u0027 \u002B parent \u002B \u0027)\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartAttach(parent);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // called in VAB when detaching part from vessel\u003C/p\u003E\u003Cp\u003E protected override void onPartDetach()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartDetach\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartDetach();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Initial call in VAB when picking up part\u003C/p\u003E\u003Cp\u003E // Also called when part comes into range of focussed ship (\u0026lt;2.5km)\u003C/p\u003E\u003Cp\u003E // And at initial part loading at program start\u003C/p\u003E\u003Cp\u003E protected override void onPartAwake()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartAwake\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartAwake();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called when part is deactivated after onDisconnect()\u003C/p\u003E\u003Cp\u003E protected override void onPartDeactivate()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartDeactivate\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartDeactivate();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called after explosion of part due to crash etc.\u003C/p\u003E\u003Cp\u003E // Seems to be after explosion effects are applied\u003C/p\u003E\u003Cp\u003E protected override void onPartExplode()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartExplode\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartExplode();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called in VAB after onPartAwake()\u003C/p\u003E\u003Cp\u003E // Also in flight scene on vessel placement just before onFlightStart()\u003C/p\u003E\u003Cp\u003E // and when part comes into range of focussed ship (\u0026lt;2.5km)\u003C/p\u003E\u003Cp\u003E protected override void onPartStart()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartStart\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartStart();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Called during initial part load at start of game\u003C/p\u003E\u003Cp\u003E protected override void onPartLoad()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartLoad\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartLoad();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Does not seem to be called\u003C/p\u003E\u003Cp\u003E protected override void onPartLiftOff()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartLiftOff\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartLiftOff();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // called regularly during flight scene if on focussed vessel - after each frame render?\u003C/p\u003E\u003Cp\u003E protected override void onPartUpdate()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //print(\u0027DBG: onPartUpdate\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartUpdate();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // called continuously during flight scene if on focussed vessel\u003C/p\u003E\u003Cp\u003E protected override void onPartFixedUpdate()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //print(\u0027DBG: onPartFixedUpdate\u0027);\u003C/p\u003E\u003Cp\u003E base.onPartFixedUpdate();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // called regularly during flight scene if in active stage - after each frame render?\u003C/p\u003E\u003Cp\u003E protected override void onActiveUpdate()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //print(\u0027DBG: onActiveUpdate\u0027);\u003C/p\u003E\u003Cp\u003E base.onActiveUpdate();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // called continously during flight scene if in active stage\u003C/p\u003E\u003Cp\u003E protected override void onActiveFixedUpdate()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //print(\u0027DBG: onActiveFixedUpdate\u0027);\u003C/p\u003E\u003Cp\u003E base.onActiveFixedUpdate();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // called for parts connected to something else after onPack()\u003C/p\u003E\u003Cp\u003E protected override void onJointDisable()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onJointDisable\u0027);\u003C/p\u003E\u003Cp\u003E base.onJointDisable();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // called for parts connected to something else after onUnpack()\u003C/p\u003E\u003Cp\u003E protected override void onJointReset()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onJointReset\u0027);\u003C/p\u003E\u003Cp\u003E base.onJointReset();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // called when stage part is on becomes active\u003C/p\u003E\u003Cp\u003E protected override bool onPartActivate()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E print(\u0027DBG: onPartActivate\u0027);\u003C/p\u003E\u003Cp\u003E return base.onPartActivate();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E[/tt]\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Emilio","CreatedById":12359,"CreatedDateTime":"2012-03-28T15:22:26Z","Content":"\n\u003Cp\u003EHaving some problems compiling...\u003C/p\u003E\u003Cp\u003ENo errors in my code, but this is what it says :\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eerror CS5001: Program \u0060/Users/barabarabouley/Projects/Harpoon/Harpoon/bin/Debug/Harpoon.exe\\\u0027 does not contain a static \u0060Main\\\u0027 method suitable for an entry point\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI don\\\u0027t want to compile it to an EXE, and what is that error ?? ?\u003C/p\u003E\u003Cp\u003EI\\\u0027m using MonoDevelop on Mac OSX\u003C/p\u003E\n"},{"CreatedByName":"sarkun","CreatedById":10559,"CreatedDateTime":"2012-03-28T15:29:47Z","Content":"\n\u003Cp\u003EDisclaimer: I\\\u0027m not a c# expert, been coding in it for a week or so \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EBut:\u003C/p\u003E\u003Cp\u003Eif it complaing about a lack of \u003Cstrong\u003Emain\u003C/strong\u003E method, it means it wants to treat your project as a standalone program - the main method is a standard entry point into such. I believe you have chosen wrong project type when you began coding - it should be c# library.\u003C/p\u003E\n"}]}