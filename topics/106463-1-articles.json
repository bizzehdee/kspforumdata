{"TopicId":106463,"ForumId":36,"TopicTitle":"[1.0] Cooldown: A Community Discussion of Heat Management","CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-01T02:32:19Z","PageNum":1,"Articles":[{"CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-01T02:32:19Z","Content":"\n\u003Cp\u003EHi folks, \u003C/p\u003E\u003Cp\u003EI just released \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/87070-WIP-1-0-Deep-Space-Exploration-Vessels-0-3-17-Active-Heat-Radiators!?p=1887239\u0026amp;viewfull=1#post1887239\u0022 rel=\u0022external nofollow\u0022\u003EDSEV 0.3.17\u003C/a\u003E, and I\u0027ve been getting some inquiries about how I did the heat radiators. Since radiators are a hot topic, I thought I\u0027d start a thread where we can share what we\u0027ve learned about heat management. At the very least, this information exchange will help people create their own heat management system. Ideally though, we\u0027d create a community-driven heat management mod.\u003C/p\u003E\u003Cp\u003ETo start off, I\u0027ll share all the notes I took over the past week. Many many thanks to Red Iron Crown and NathanKell for their insights!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EFrom KSP 1.0 Readme:\u003C/p\u003E\u003Cp\u003EHeat Simulation:\u003C/p\u003E\u003Cp\u003E- Completely revised part heating model, energy flux is considered, not merely temperature.\u003C/p\u003E\u003Cp\u003E- All game temperatures changed from \u00C3\u00A2\u00E2\u201A\u00AC\u00CB\u0153Kervin\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2 to proper Kelvin.\u003C/p\u003E\u003Cp\u003E- Radiative, conductive, and convective heating and cooling are simulated.\u003C/p\u003E\u003Cp\u003E- Parts can have individual radiative, conductive, and convective properties.\u003C/p\u003E\u003Cp\u003E- All parts now emit a blackbody radiation glow if they get hot enough.\u003C/p\u003E\u003Cp\u003E- Conduction between attached parts is more accurately modelled.\u003C/p\u003E\u003Cp\u003E- Parts can occlude other parts from being exposed to sunlight, celestial body albedo/radiation and supersonic flow.\u003C/p\u003E\u003Cp\u003E- Reentry/hypersonic flight heating is now simulated.\u003C/p\u003E\u003Cp\u003E- Added difficulty Setting to scale aerodynamic heating.\u003C/p\u003E\u003Cp\u003E- Atmospheric temperature, and thus density, takes latitude and sun position into account.\u003C/p\u003E\u003Cp\u003E- Celestial bodies accurately emit thermal radiation making nearby craft warmer.\u003C/p\u003E\u003Cp\u003E- Service modules, fairings and cargo bays can be used to protect parts inside from heat.\u003C/p\u003E\u003Cp\u003E- Heat shields provide (finite) ablation-based protection for parts behind them.\u003C/p\u003E\u003Cp\u003EFrom Part object:\u003C/p\u003E\u003Cp\u003E//This is how you add or remove heat from the part. \u002B value adds heat, - value removes heat.\u003C/p\u003E\u003Cp\u003Epublic void AddThermalFlux(double kilowatts);\u003C/p\u003E\u003Cp\u003EThese are in kJ/sec\u003C/p\u003E\u003Cp\u003E//negative values indicate heat is going out of the part and into the environment. Positive values mean heat is coming into the part.\u003C/p\u003E\u003Cp\u003Epublic double thermalConductionFlux;\u003C/p\u003E\u003Cp\u003Epublic double thermalConvectionFlux;\u003C/p\u003E\u003Cp\u003Epublic double thermalRadiationFlux;\u003C/p\u003E\u003Cp\u003Epublic double thermalInternalFlux;\u003C/p\u003E\u003Cp\u003Epublic double thermalInternalFluxPrevious;\u003C/p\u003E\u003Cp\u003Epublic double thermalMass; //Kj/K\u003C/p\u003E\u003Cp\u003Epublic double thermalMassModifier;\u003C/p\u003E\u003Cp\u003Epublic double thermalMassReciprocal;\u003C/p\u003E\u003Cp\u003EFrom Red Iron Crown:\u003C/p\u003E\u003Cp\u003ERed Iron Crown\u003C/p\u003E\u003Cp\u003EThermal mass is the capacity of the part to absorb heat, i.e. the specific heat of the material times the mass of the part. It takes more heat to raise the temperature of a part by a given amount if it has a higher thermal mass. So parts with higher thermal mass change temperature more slowly than those with a lower thermal mass, both upwards and downwards.\u003C/p\u003E\u003Cp\u003ERadiative area is the theoretical area that emits or absorbs radiated heat. Parts emit heat when in shadow and absorb it when in sunlight (at least I think this is modelled). Parts with a larger radiative area gain or lose heat faster than those with smaller radiative areas. \u003C/p\u003E\u003Cp\u003EAs I understand it:\u003C/p\u003E\u003Cp\u003E- All parts has a default specific heat of 800 kJ/tonne-Kelvin defined in Physics.cfg in the root folder (standardSpecificHeatCapacity)\u003C/p\u003E\u003Cp\u003E- Parts can have that modified in their cfgs by a multiplier (thermalMassModifier, setting this to 2 would double specific heat)\u003C/p\u003E\u003Cp\u003E- Resources also have their own specific heats defined in ResourcesGeneric.cfg in Gamedata/Squad/Resources (hsp)\u003C/p\u003E\u003Cp\u003E- Part thermal mass thus should be (dryMass * standardSpecificHeatCapacity *thermalMassModifier) \u002B (resourceMass * hsp) \u0026lt;- Repeat last section for each resource within the part. Units are kJ/K.\u003C/p\u003E\u003Cp\u003E****\u003C/p\u003E\u003Cp\u003ESome math I did:\u003C/p\u003E\u003Cp\u003Ethermal energy = thermalMass (KJ/K) * temperature (K)\u003C/p\u003E\u003Cp\u003EIf my radiator is at 1000 K, then my thermal energy = 1790 * 1000 = 1,790,000 KJ\u003C/p\u003E\u003Cp\u003EIf my radiator\u0027s maximum temperature is 2400K, and we have a \u0022working temperature\u0022 of 0.85 of that, then the maximum thermal energy that the radiator can take on is:\u003C/p\u003E\u003Cp\u003E2400 * 0.85 * 1790 = 3,651,600 KJ\u003C/p\u003E\u003Cp\u003ERemember that you need to conserve heat. If you add it from one part, remove it from another.\u003C/p\u003E\u003Cp\u003ETransferring heat: Heat goes from hot part to cool part until equilibrium is reached.\u003C/p\u003E\u003Cp\u003EKSP game itself handles heat radiation and will calculate its radiative area automatically.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll break the heat management out of DSEV later this evening to serve as a reference.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-01T06:36:56Z\u0022 title=\u002205/01/2015 06:36  AM\u0022 data-short=\u00229 yr\u0022\u003EMay 1, 2015\u003C/time\u003E by Angel-125\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nansuchao","CreatedById":135151,"CreatedDateTime":"2015-05-01T04:56:50Z","Content":"\n\u003Cp\u003EOne thing that\u0027s completely wrong with KSP 1.0 is the atmosferic drag during re entry. The atmosfere doesn\u0027t slot you down as it should and that\u0027s will add a great difficulty in heat management, cause actually is totally unrealistic. Now can you simulate a real heat effect while you accellerate falling from 15 km to a speed of more than 500 m/s?\u003C/p\u003E\u003Cp\u003EAlso parachutes are unrealistic, but that\u0027s the only way to make it work, unless you can just make rocket powered re entry.\u003C/p\u003E\u003Cp\u003EIs it possible to change this situation?\u003C/p\u003E\n"},{"CreatedByName":"Errol","CreatedById":118622,"CreatedDateTime":"2015-05-01T06:12:18Z","Content":"\n\u003Cp\u003ESo something I\u0027ve been wondering (haven\u0027t really bothered getting into space much yet, still waiting for all my mods before starting a career, so I\u0027ve been having fun in atmospheric flight) will there be heating from being inside the atmosphere of another planetary body? Like if I drop a probe on the surface of eve with no radiators or anything, will it get cooked and start exploding?\u003C/p\u003E\n"},{"CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-01T06:15:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nansuchao\u0022 data-cite=\u0022Nansuchao\u0022\u003E\u003Cdiv\u003EOne thing that\u0027s completely wrong with KSP 1.0 is the atmosferic drag during re entry. The atmosfere doesn\u0027t slot you down as it should and that\u0027s will add a great difficulty in heat management, cause actually is totally unrealistic. Now can you simulate a real heat effect while you accellerate falling from 15 km to a speed of more than 500 m/s?\u003Cp\u003EAlso parachutes are unrealistic, but that\u0027s the only way to make it work, unless you can just make rocket powered re entry.\u003C/p\u003E\u003Cp\u003EIs it possible to change this situation?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot sure, but one solution is open-cycle cooling. With radiators you have closed-cycle and open-cycle cooling. closed-cycle keeps the coolant within the craft and it takes awhile to cool off. Open-cycle dumps coolant overboard, and in return you get rapid cooling. The radiator code is designed to support both types and it\u0027s been proven to work nicely. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Here is a sample config file. It\u0027s a WIP but it gives you an idea where I\u0027m going with the radiator code in DSEV/Cooldown heat reference mod. I\u0027m using this in 0.3.17\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EMODULE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = ModuleRadiator\u003C/p\u003E\u003Cp\u003E animationName = Deploy\u003C/p\u003E\u003Cp\u003E pivotName = sunPivot\u003C/p\u003E\u003Cp\u003E IsBreakable = true\u003C/p\u003E\u003Cp\u003E raycastTransformName = suncatcher\u003C/p\u003E\u003Cp\u003E chargeRate = 0\u003C/p\u003E\u003Cp\u003E //A value between 0 and 1, specifies how much of the part\u0027s\u003C/p\u003E\u003Cp\u003E //maximum temperature may be used by the radiator.\u003C/p\u003E\u003Cp\u003E //Radiator max temp should be below the resource\u0027s critical point.\u003C/p\u003E\u003Cp\u003E //Assuming the radiator itself is pretty sturdy and won\u0027t melt.\u003C/p\u003E\u003Cp\u003E workingTempFactor = 0.85\u003C/p\u003E\u003Cp\u003E //INPUT_RESOURCE specifies the coolant needed for heat transfer. It is required for active cooling.\u003C/p\u003E\u003Cp\u003E //Active cooling circulates coolant to other parts in the vessel to cool them down.\u003C/p\u003E\u003Cp\u003E //Without active cooling, parts must rely on the parts they\u0027re attached to,\u003C/p\u003E\u003Cp\u003E //their own mass, and the environment to cool down.\u003C/p\u003E\u003Cp\u003E //You can use whatever resource you want for coolant. Some resources are better than others.\u003C/p\u003E\u003Cp\u003E //If you specify multipult INPUT_RESOURCE nodes, be sure that their combined ratios add up to 1.\u003C/p\u003E\u003Cp\u003E INPUT_RESOURCE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = Coolant\u003C/p\u003E\u003Cp\u003E flowMode = FLOW_NONE\u003C/p\u003E\u003Cp\u003E ratio = 1.0\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E //TODO: Get rid of this and use INPUT_RESOURCE nodes instead.\u003C/p\u003E\u003Cp\u003E coolantResource = Coolant\u003C/p\u003E\u003Cp\u003E //Radiators support two types of cooling: closed-cycle, and open-cycle.\u003C/p\u003E\u003Cp\u003E //Closed-cycle keeps circulating coolant within the vessel, and it may take awhile\u003C/p\u003E\u003Cp\u003E //for the vessel to cool down. Open-cycle cooling sheds heat more quickly,\u003C/p\u003E\u003Cp\u003E //but at the expense of coolant (the resources specified by INPUT_RESOURCE).\u003C/p\u003E\u003Cp\u003E //This value specifies the number of units per second to dump overboard.\u003C/p\u003E\u003Cp\u003E //Each INPUT_RESOURCE above will be dumped according to their ratio.\u003C/p\u003E\u003Cp\u003E //If you don\u0027t want open-cycle cooling, then don\u0027t include this field or set it to 0.\u003C/p\u003E\u003Cp\u003E coolantDumpRate = 66.67\u003C/p\u003E\u003Cp\u003E //Specifies the coolant loss rate.\u003C/p\u003E\u003Cp\u003E //The first number represents the number of units per second that is lost\u003C/p\u003E\u003Cp\u003E //in general. The second number is the number of units lost per g of acceleration.\u003C/p\u003E\u003Cp\u003E //That second number is particularly useful for liquid droplet radiators.\u003C/p\u003E\u003Cp\u003E //Uncomment this line if you want coolant loss.\u003C/p\u003E\u003Cp\u003E //coolantLossRate = 0,1.0\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Nertea","CreatedById":83952,"CreatedDateTime":"2015-05-01T06:26:04Z","Content":"\n\u003Cp\u003EI am very much in favor of a kind of heat management mod. I think the primary challenge is data driven - how, as a player, do you know whether you have enough cooling capacity to cool your heat generating parts, given a variety of cooling parts available and a variety of cooling parameters in various situations.\u003C/p\u003E\n"},{"CreatedByName":"sharpspoonful","CreatedById":83734,"CreatedDateTime":"2015-05-01T06:38:07Z","Content":"\n\u003Cp\u003EI would be in favor of two types of cooling, based on atmospheric and non atmospheric conditions. Things like heats sinks and open/closed cycle radiators. Smaller parts sinks for drills and large heat output type parts and larger panel style radiators for converters, habitations, and powerplants. I\u0027m also curious how the game handles heat transfer to the radiator. Is there an internal piping system to draw heatfrom a further away part? Or will the sinks and radiators have to be placed in the immediate vicinity of the heat products in part?\u003C/p\u003E\n"},{"CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-01T06:45:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sharpspoonful\u0022 data-cite=\u0022sharpspoonful\u0022\u003E\u003Cdiv\u003EI would be in favor of two types of cooling, based on atmospheric and non atmospheric conditions. Things like heats sinks and open/closed cycle radiators. Smaller parts sinks for drills and large heat output type parts and larger panel style radiators for converters, habitations, and powerplants. I\u0027m also curious how the game handles heat transfer to the radiator. Is there an internal piping system to draw heatfrom a further away part? Or will the sinks and radiators have to be placed in the immediate vicinity of the heat products in part?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECurrently from what I\u0027ve seen, KSP uses thermodynamics to transfer heat around a vessel: a hotter part transfers heat to the cooler part until the two reach thermal equilibrium. For DSEV, I actively pull heat out of a part and put it into the radiator. I made the assumption that a vessel has a circulatory system built-in, and the radiator circulates coolant through the vessel. That way you don\u0027t need dedicated heat pipes and you keep your part count low.\u003C/p\u003E\u003Cp\u003ESome of the feedback I got tonight was that radiators might benefit from a heat transfer rate. Right now I assume that the coolant heats up quickly, gets circulated to the radiator where it \u0022drops off\u0022 the heat, cools down, and is ready for the next part. I could account for heat difference between a part and the coolant but I decided that would take a lot of calculations and slow the game down. So that\u0027s something to think about too: reality vs gameplay.\u003C/p\u003E\n"},{"CreatedByName":"sharpspoonful","CreatedById":83734,"CreatedDateTime":"2015-05-01T09:14:46Z","Content":"\n\u003Cp\u003EI\u0027m on my phone, so sorry for the poor grammar. Does KSP\u0027s code have an integrated pipe system, like crossfeeding for heat? This is something the Star Citizen has, where all resources have paths in the shop to their respective targets. For example, heat from weapons engines and shields all get dumped into a cooling system. If the heat output is higher than the cooling system can handle, the parts start failing or being destroyed. Now as system like that maybe out of the scope of complexity for a mod, bit I\u0027d rather see something similar to it than spamming radiators everywhere.\u003C/p\u003E\n"},{"CreatedByName":"basic.syntax","CreatedById":109920,"CreatedDateTime":"2015-05-01T09:26:27Z","Content":"\n\u003Cp\u003EYou may already be aware, or if not... perhaps wish to follow - these other threads I\u0027ve seen about heat management:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/117930-Guide-New-temperature-rules-for-parts-in-1-0\u0022 rel=\u0022external nofollow\u0022\u003E[Guide] New temperature rules for parts in 1.0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/118057-1-0-heat-dissipation\u0022 rel=\u0022external nofollow\u0022\u003E1.0 heat dissipation?\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/117205-PSA-Nuclear-engine-overheating\u0022 rel=\u0022external nofollow\u0022\u003EPSA: Nuclear engine overheating\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/116773-1-0-HeatWarning\u0022 rel=\u0022external nofollow\u0022\u003E[1.0] HeatWarning\u003C/a\u003E - technicalfool mod work-in-progress to give audio \u0026amp; visual warning of overheat condition\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-01T09:42:37Z\u0022 title=\u002205/01/2015 09:42  AM\u0022 data-short=\u00229 yr\u0022\u003EMay 1, 2015\u003C/time\u003E by basic.syntax\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lajoswinkler","CreatedById":79159,"CreatedDateTime":"2015-05-01T13:34:52Z","Content":"\n\u003Cp\u003EI\u0027m all in favor of closed cycle radiator heat management. Especially with the LV-N engine. If you can make a decent nice radiator that would allow nuclear thermal propulsion, that would be great.\u003C/p\u003E\u003Cp\u003EOpen cycle is great for rapid heating, but it\u0027s kind of an overkill in complexity, IMHO.\u003C/p\u003E\n"},{"CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-01T14:40:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022basic.syntax\u0022 data-cite=\u0022basic.syntax\u0022\u003E\u003Cdiv\u003EYou may already be aware, or if not... perhaps wish to follow - these other threads I\u0027ve seen about heat management:\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/117930-Guide-New-temperature-rules-for-parts-in-1-0\u0022 rel=\u0022external nofollow\u0022\u003E[Guide] New temperature rules for parts in 1.0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/118057-1-0-heat-dissipation\u0022 rel=\u0022external nofollow\u0022\u003E1.0 heat dissipation?\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/117205-PSA-Nuclear-engine-overheating\u0022 rel=\u0022external nofollow\u0022\u003EPSA: Nuclear engine overheating\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/116773-1-0-HeatWarning\u0022 rel=\u0022external nofollow\u0022\u003E[1.0] HeatWarning\u003C/a\u003E - technicalfool mod work-in-progress to give audio \u0026amp; visual warning of overheat condition\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, didn\u0027t see those. Looks like several people are talking about it, heh.\u003C/p\u003E\n"},{"CreatedByName":"Nertea","CreatedById":83952,"CreatedDateTime":"2015-05-01T15:29:17Z","Content":"\n\u003Cp\u003EIndeed, but I think this thread serves more of a different purpose: the development of a unified framework.\u003C/p\u003E\n"},{"CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-01T17:20:18Z","Content":"\n\u003Cp\u003EWell, I am continuing regardless. I just uploaded the latest WildBlueTools, where ModuleRadiator and HeatManager currently reside. When I get home I\u0027ll break them out and put them into Cooldown.\u003C/p\u003E\u003Cp\u003EChanges from last night:\u003C/p\u003E\u003Cp\u003E- INPUT_RESOURCE is now supported. You can specify multiple coolants.\u003C/p\u003E\u003Cp\u003E- coolantResource removed\u003C/p\u003E\u003Cp\u003E- radiator manager will not cool a part below room temperature (293K). It was cooling to ambient, which in space is 4K.\u003C/p\u003E\u003Cp\u003E- performance enhancements\u003C/p\u003E\u003Cp\u003E- radiator parts are excluded from the HeatManager\u0027s parts list that it cycles through\u003C/p\u003E\u003Cp\u003E- if a radiator isn\u0027t extended then it only accepts 1/100th the requested input heat. This is an initial pass at tuning radiators that are stowed.\u003C/p\u003E\u003Cp\u003ETodo:\u003C/p\u003E\u003Cp\u003E- find ways to improve the heat management code- do I have to re-calculate a radiator \u0027s current thermal energy for each part, or can I do it once per time-tick, and all parts work against that once per tick calculation?\u003C/p\u003E\u003Cp\u003E- fix a bug where if a radiator explodes it causes nullRefs. Just need to tell the HeatManager that the radiator is about to explode.\u003C/p\u003E\u003Cp\u003E- find out if physics-less parts take on heat. If not then exclude them from the parts list.\u003C/p\u003E\u003Cp\u003E- account for radiators that don\u0027t extend in the heat transfer calculations.\u003C/p\u003E\u003Cp\u003E- implement optional coolant loss over time, probably per INPUT_RESOURCE\u003C/p\u003E\u003Cp\u003E- implement optional ElectricCharge requirement.\u003C/p\u003E\u003Cp\u003E- implement optional module to specify the lowest temperature that the part may be cooled to. Without the module, default is 293K, settable in a config file for the mod.\u003C/p\u003E\u003Cp\u003EOther:\u003C/p\u003E\u003Cp\u003EWhat benefits, if any, do Engineers give?\u003C/p\u003E\u003Cp\u003EHow can I use the built-in shader that makes parts glow as they get hot? When I increase the part temperature, I don\u0027t see any texture changes unless I do the change myself.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-01T17:40:50Z\u0022 title=\u002205/01/2015 05:40  PM\u0022 data-short=\u00229 yr\u0022\u003EMay 1, 2015\u003C/time\u003E by Angel-125\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nertea","CreatedById":83952,"CreatedDateTime":"2015-05-01T17:23:06Z","Content":"\n\u003Cp\u003ESounds great! I might suggest that there be a way to configure the target temperature on a per-part basis (maybe an optional module you could tuck in), so that it could be customized to allow certain parts to \u0022run hot\u0022\u003C/p\u003E\u003Cp\u003ENot sure about the shader - I might just suggest doing it via animation, not too hard.\u003C/p\u003E\n"},{"CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-01T17:38:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nertea\u0022 data-cite=\u0022Nertea\u0022\u003E\u003Cdiv\u003ESounds great! I might suggest that there be a way to configure the target temperature on a per-part basis (maybe an optional module you could tuck in), so that it could be customized to allow certain parts to \u0022run hot\u0022\u003Cp\u003ENot sure about the shader - I might just suggest doing it via animation, not too hard.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGreat idea Nert, I\u0027ve updated my Todo list. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Nertea","CreatedById":83952,"CreatedDateTime":"2015-05-01T17:50:52Z","Content":"\n\u003Cp\u003ERe: Engineers - I suppose IRL their related abilities would be to optimize the transfer systems (clean the pumps etc) and potentially to plan radiator orientations. Here\u0027s some possibilities, with justifications:\u003C/p\u003E\u003Cp\u003E- Slightly increase radiative capacities of radiators (optimization of radiator orientation and stuff)\u003C/p\u003E\u003Cp\u003E- Improve the ability of radiators to accept heat (optimization of coolant transfer systems)\u003C/p\u003E\u003Cp\u003E- Reduce losses in open cycle cooling (optimization and maintenance of dump valves and systems)\u003C/p\u003E\n"},{"CreatedByName":"lajoswinkler","CreatedById":79159,"CreatedDateTime":"2015-05-01T18:05:40Z","Content":"\n\u003Cp\u003EBe sure to make your radiators behave the opposite of solar panels, i.e. to avoid exposing their flat side to Kerbol.\u003C/p\u003E\n"},{"CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-01T18:17:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lajoswinkler\u0022 data-cite=\u0022lajoswinkler\u0022\u003E\u003Cdiv\u003EBe sure to make your radiators behave the opposite of solar panels, i.e. to avoid exposing their flat side to Kerbol.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYup, the ones in DSEV already do that. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I will include them in the Cooldown reference mod.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-05-01T20:50:23Z","Content":"\n\u003Cp\u003EA few corrections to the info in the OP.\u003C/p\u003E\u003Cp\u003ERadiative area is used for three things:\u003C/p\u003E\u003Cp\u003E1. black body radiative emission and reception\u003C/p\u003E\u003Cp\u003E2. solar flux\u003C/p\u003E\u003Cp\u003E3. body flux (if your current SoI is not the sun, you get reflected solar flux based on body albedo, and emissive flux based on body temperature).\u003C/p\u003E\u003Cp\u003EAll three occur all the time. 1 is proportional to part temperature^4 - background temp^4. 2 is proportional to distance to the sun and to unoccluded part area facing the sun. 3 is proportional to distance to the body and to unoccluded part area facing the body. The density of the atmosphere (if you\u0027re in an atmosphere) will also lower the solar and body flux incoming, but raise the background radiation temperature above 4 K. Background temperature is interpolated by density, though not at all linearly, between 4 K and the current external temperature, i.e. shockwave heating is included.\u003C/p\u003E\n"},{"CreatedByName":"johnsonwax","CreatedById":79077,"CreatedDateTime":"2015-05-03T03:27:09Z","Content":"\n\u003Cp\u003EI just did a little experiment with ModuleAblator for sumghai. \u003C/p\u003E\u003Cp\u003ElossConst seems to dictate the temperature at which the ablator begins to boil off. Increasing the value lowers the temperature (stock 20 boils around 850, 50 boils closer to 770). That has the effect of removing heat faster from the part, keeping the parts max temperature lower, but slightly increasing the amount of ablator consumed. \u003C/p\u003E\u003Cp\u003EpyrolysisLossFactor seems to dictate the amount of heat energy that a given amount of ablator uses. It boils off at the same temperature, but higher values remove heat more efficiently. Doubling the value from stock 10000 to 20000 cut the ablator consumption nearly in half and lowered the max heat value the part was exposed to. Cutting the value in half to 5000 increased consumption by 80% and increased the max heat value the part was exposed to.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-05-03T09:06:32Z","Content":"\n\u003Cp\u003EUh, not really, no. Works like this:\u003C/p\u003E\u003Cp\u003Eif part.temperature \u0026gt;= ablationTempThresh then\u003C/p\u003E\u003Cp\u003Eloss = lossConst * e^(lossExp / part.temperature)\u003C/p\u003E\u003Cp\u003Ethe calculated loss is then multiplied by the remaining units of Ablator to find out how much to remove. Then, the dissipation energy = units_lost * resource.density * resource.hsp * pyrolysisLossFactor\u003C/p\u003E\n"},{"CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2015-05-05T14:19:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EUh, not really, no. Works like this:\u003Cp\u003Eif part.temperature \u0026gt;= ablationTempThresh then\u003C/p\u003E\u003Cp\u003Eloss = lossConst * e^(lossExp / part.temperature)\u003C/p\u003E\u003Cp\u003Ethe calculated loss is then multiplied by the remaining units of Ablator to find out how much to remove. Then, the dissipation energy = units_lost * resource.density * resource.hsp * pyrolysisLossFactor\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003E@NathanKell, \u003C/strong\u003EI\u0027ve got some questions bugging my mind. What is the boiling point and the critical temperature of Ablator in KSP? Why heating of the shield never stops at a certain temperature until Ablator runs out?\u003C/p\u003E\u003Cp\u003EAlso I don\u0027t understand why Squad gave to heatshields 3400 maxTemp. I\u0027ve not been able to burn them off under any dire circumstances (like 10km/s Jool reentry). And even if we don\u0027t burn them off, the ModuleAblator gotta increase conductivity of heat shields when they run out of the resource. There\u0027s currently no punishment for having a shield with zero Ablator.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-05-05T14:49:31Z\u0022 title=\u002205/05/2015 02:49  PM\u0022 data-short=\u00229 yr\u0022\u003EMay 5, 2015\u003C/time\u003E by Enceos\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Angelo Kerman","CreatedById":106975,"CreatedDateTime":"2015-05-06T18:49:51Z","Content":"\n\u003Cp\u003EI updated WildBlueTools this morning in preparation to my next release of DSEV, and made some changes to the heat management. You can \u003Ca href=\u0022https://github.com/Angel-125/WildBlueTools\u0022 rel=\u0022external nofollow\u0022\u003Efind the GitHub repro here\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003E- Radiators can now use multiple coolants, specified by INPUT_RESOURCE nodes.\u003C/p\u003E\u003Cp\u003E- Radiators can now suffer coolant loss over time if desired.\u003C/p\u003E\u003Cp\u003E- Radiators can now suffer coolant loss while the vessel is under acceleration if desired.\u003C/p\u003E\u003Cp\u003E- Radiators can consume ElectricCharge if desired.\u003C/p\u003E\u003Cp\u003E- Physics-less parts are now ignored.\u003C/p\u003E\u003Cp\u003E- Parts with crew capacity have a target temperature of 293K (room temperature).\u003C/p\u003E\u003Cp\u003E- Default target temperature is 49% of the part\u0027s maximum temperature (configurable through the config file), which is just under the stock heat warning indicator\u0027s threshold.\u003C/p\u003E\u003Cp\u003E- Radiators now correctly cap their heat transfer once they reach their maximum working temperature.\u003C/p\u003E\u003Cp\u003E- Game performance improvements and bug fixes.\u003C/p\u003E\u003Cp\u003ETODO:\u003C/p\u003E\u003Cp\u003E- Add ModuleTargetTemp to specify a part\u0027s target temperature. This will override the default target of 49% of the part\u0027s max temp.\u003C/p\u003E\u003Cp\u003EOnce I get the next updates done I\u0027ll break out the code into a separate dll.\u003C/p\u003E\n"}]}