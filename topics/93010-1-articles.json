{"TopicId":93010,"ForumId":29,"TopicTitle":"What\u0026#039;s new in 0.90","CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-12-16T01:19:53Z","PageNum":1,"Articles":[{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-12-16T01:19:53Z","Content":"\n\u003Cp\u003E0.90 is out and the mod update frenzy is starting. \u003C/p\u003E\u003Cp\u003EThis time I\u0027ll share some of the changes modders in the Experimental group have found. I won\u0027t share their name since they may not want to get harassed by PM to get some info once the next version in in Exp. Thank to them for those.\u003C/p\u003E\u003Cp\u003EShare your findings.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe IPartCostModifier IPartMassModifier IPartSizeModifier interface allow a PartModule to change the Cost, Mass and Size(the last don\u0027t seem to work) of a part. \u003Cbr\u003EAny mod that need to change a part Cost runtime should implement those. \u003Cbr\u003EFor example add the interface to your PartModule class declaration\u003Cbr\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic class MyPartModule : PartModule, [B]IPartCostModifier[/B]\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003Cbr\u003EAnd add the call required by the interface :\u003Cbr\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efloat GetModuleCost(float defaultCost)\u003Cbr\u003E{\u003Cbr\u003E   return defaultCost * 0.01;  // defaultCost is the Part default cost. So this would make this module add 1% to the part cost.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003Cbr\u003EIPartSizeModifier is an unknown factor. Stuff sure did not get bigger when I tried:)\u003Cbr\u003EIPartMassModifier does not change the part mass, but only change the reported mass in the Editor...\u003Cbr\u003E\u003C/p\u003E\u003C/li\u003E\u003Cli\u003EGameScenes.SPH is gone. Both the VAB and the editor have HighLogic.LoadedScene == GameScenes.EDITOR\u003Cbr\u003EYou know where the ship point to with : EditorLogic.VesselRotation * Vector3d.up\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EObviously most of the Editor related code need to change. Anything using EditorLogic or the part list will need a serious overhaul\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E New ConfigNode.values.GetValues() and ConfigNodevalue.nodes.GetNodes() return all the values and child nodes as an array. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E New events in GameEvents : \u003Cbr\u003EMisc : OnAppFocus onGUILock onGUIUnlock onGUIEditorToolbarReady OnExperimentDeployed \u003Cbr\u003EEditor onEditorScreenChange onEditorScreenChange onEditorSymmetryMethodChange onEditorSymmetryCoordsChange onEditorSymmetryModeChange onEditorSnapModeChange onEditorConstructionModeChange onEditorPartEvent onEditorShowPartList onEditorUndo onEditorRedo \u003Cbr\u003EUpgrade : OnKSCFacilityUpgrading OnKSCFacilityUpgraded OnUpgradeableObjLevelChange\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Building upgrade related stuff\u003Cbr\u003EFirst get a building current level : ScenarioUpgradeableFacilities.GetFacilityLevel(SpaceCenterFacility.VehicleAssemblyBuilding)\u003Cbr\u003EThen get use those to get the various active restriction. Finding which SpaceCenterFacility level each of those use is left as an exercise to the reader.\u003Cbr\u003E public int GetPartCountLimit(float editorNormLevel)\u003Cbr\u003E public bool UnlockedFuelTransfer(float editorNormLevel)\u003Cbr\u003E public bool UnlockedActionGroupsStock(float editorNormLevel)\u003Cbr\u003E public bool UnlockedActionGroupsCustom(float editorNormLevel)\u003Cbr\u003E public float GetCraftMassLimit(float editorNormLevel)\u003Cbr\u003E public Vector3 GetCraftSizeLimit(float editorNormLevel)\u003Cbr\u003E public int GetActiveStrategyLimit(float adminNormLevel)\u003Cbr\u003E public float GetStrategyCommitRange(float adminNormLevel)\u003Cbr\u003E public float GetStrategyLevelLimit(float adminNormLevel)\u003Cbr\u003E public int GetActiveContractsLimit(float mCtrlNormLevel)\u003Cbr\u003E public float GetContractLevelLimit(float mCtrlNormLevel)\u003Cbr\u003E public bool UnlockedFlightPlanning(float mCtrlNormLevel)\u003Cbr\u003E public int GetActiveCrewLimit(float astroComplexNormLevel)\u003Cbr\u003E public float GetCrewLevelLimit(float astroComplexNormLevel)\u003Cbr\u003E public bool UnlockedEVA(float astroComplexNormLevel)\u003Cbr\u003E public bool UnlockedEVAFlags(float astroComplexNormLevel)\u003Cbr\u003E public bool UnlockedEVAClamber(float astroComplexNormLevel)\u003Cbr\u003E public bool EVAIsPossible(bool evaUnlocked, Vessel v)\u003Cbr\u003E public string GetEVALockedReason(Vessel v)\u003Cbr\u003E public GameVariables.OrbitDisplayMode GetOrbitDisplayMode(float tsNormLevel)\u003Cbr\u003E public int GetTrackedObjectLimit(float tsNormLevel)\u003Cbr\u003E public int GetPatchesAheadLimit(float tsNormLevel)\u003Cbr\u003E public bool UnlockedSpaceObjectDiscovery(float tsNormLevel)\u003Cbr\u003E public UntrackedObjectClass MinTrackedObjectSize(float tsNormLevel)\u003Cbr\u003E public float GetScienceCostLimit(float RnDnormLevel)\u003Cbr\u003E public float GetDataToScienceRatio(float RnDnormLevel)\u003Cbr\u003E public float GetExperimentLevel(float RnDnormLevel)\u003Cbr\u003EA warning : none of those limits are configurable.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Kerbal can now be Pilot, Engineer or Scientist. So ProtoCrewMember now have an experience, experienceLevel and experienceTrait field.\u003Cbr\u003EThe experience trait effect seem to be defined in the Experience.Effects namespace but we don\u0027t how they work yet.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Vessel have\u003Cbr\u003E- 3 new control callbacks. OnPreAutopilotUpdate OnAutopilotUpdate OnPostAutopilotUpdate. Those 3 are called before OnFlyByWire and in the order I wrote them. I suggest any mod that control a vessel to use them instead of OnFlyByWire. The new SAS/Pilot seems to use OnAutopilotUpdate. I\u0027ll have MJ use one of those soon\u003Cbr\u003E- VesselValues.RepairSkill/ScienceSkill/ScienceReturn/AutopilotSkill and other give you info on the skill level of your crew. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E ModuleCommand now has a State to know why it\u0027s not working : NotEnoughCrew / NotEnoughResources / Good\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-16T02:41:45Z","Content":"\n\u003Cp\u003ESo far I have also found that the new pilot abilities seem to be underpinned by a new VesselAutopilot class. \u003C/p\u003E\u003Cp\u003EFor my specific situation, this means that Vessel.VesselSAS is gone and replaced by VesselAutopilot.VesselSAS instead. \u003C/p\u003E\u003Cp\u003ESo I had to change:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EFlightGlobals.ActiveVessel.VesselSAS\u003Cbr\u003E\u003Cbr\u003Eis now\u003Cbr\u003E\u003Cbr\u003EFlightGlobals.ActiveVessel.AutoPilot.SAS\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-16T02:45:32Z\u0022 title=\u002212/16/2014 02:45  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 16, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-16T04:27:08Z","Content":"\n\u003Cp\u003EAny ideas where the new forms of SAS (lock to pre-defined vectors) are doing their control logic? The PID tuning for stability assistance still works fine after updating as Diazo has already specified, but the new forms are not responding to the PID tuner at all indicating they are working on a different mechanism.\u003C/p\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-12-16T05:51:23Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPart.SetHighlight(bool active)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eis gone..\u003C/p\u003E\u003Cp\u003Ethere is now:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic void SetHighlight(bool active, bool recursive)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI also found these, but have not figured out how to use them.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPart.HighlightType highlightType\u003Cbr\u003E\u003Cbr\u003E//can hold these:\u003Cbr\u003EPart.HighlightType.AlwaysOn\u003Cbr\u003EPart.HighlightType.Disabled\u003Cbr\u003EPart.HighlightType.OnMouseOver\u003Cbr\u003E\u003Cbr\u003E//also\u003Cbr\u003E UnityEngine.Color Part.highlightColor\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-16T05:55:40Z\u0022 title=\u002212/16/2014 05:55  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 16, 2014\u003C/time\u003E by philotical\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-12-16T07:24:48Z","Content":"\n\u003Cp\u003EI\u0027m guessing that the new Skills must work like Modules now?\u003C/p\u003E\u003Cp\u003EThe new Experience Folder has a file called Traits and Traits are written like Modules and have a effect hook that seems to be the reference to the actual Trait Effect.\u003C/p\u003E\u003Cp\u003EHave not broken it down that much more, can\u0027t seem to find out much more. You can check out \u003C/p\u003E\u003Cp\u003EExperience and Experience.Effect to see a list of things. But as for how to write a new trait... Not sure yet.\u003C/p\u003E\u003Cp\u003EActually seems to be a lot more traits then are used, unless they use each other. But so far looks like some of the options inside a trait are including the old engine trait that they dropped earlier I believe.\u003C/p\u003E\u003Cp\u003EGetDefaultValue()\u003C/p\u003E\u003Cp\u003EGetDescription()\u003C/p\u003E\u003Cp\u003EOnRegister(Part)\u003C/p\u003E\u003Cp\u003EOnUnregister(Part)\u003C/p\u003E\u003Cp\u003EThe its own actual Code and experience use. Experience like most other values is a float.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-16T07:30:49Z\u0022 title=\u002212/16/2014 07:30  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 16, 2014\u003C/time\u003E by malkuth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-12-16T12:13:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EFor my specific situation, this means that Vessel.VesselSAS is gone and replaced by VesselAutopilot.VesselSAS instead. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EErr, I fixed it in MJ and forgot to mention it in the post \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2014-12-16T13:53:40Z","Content":"\n\u003Cp\u003EPart.uid was removed.\u003C/p\u003E\n"},{"CreatedByName":"allista","CreatedById":99885,"CreatedDateTime":"2014-12-16T15:24:52Z","Content":"\n\u003Cp\u003ETo distinguish Editor type (SPH/VAB) the EditorFacility enum may be used.\u003C/p\u003E\u003Cp\u003EE.g:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif(EditorLogic.fetch.ship.shipFacility == EditorFacility.SPH) { ...; }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-16T17:06:16Z","Content":"\n\u003Cp\u003ECan anyone describe how the new autopilot hooks work and how they differ from OnFlyByWire, conceptually? Specifically, how they interact with a human pilot also trying to control the same vessel at the same time - who \u0022wins\u0022. With OnFlyByWire it was generally whomever added the lastmost hook.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-12-16T17:10:46Z","Content":"\n\u003Cp\u003EThey work the same way but change the state before OnFlyByWire.\u003C/p\u003E\u003Cp\u003ESo if a mod A uses OnAutopilotUpdate but a mod B overwrite the state in OnFlyByWire then the copntrol are those used by B.\u003C/p\u003E\u003Cp\u003EI think a clean way to use this would be to stay out of OnFlyByWire so the user can override any mod control, and use OnAutopilotUpdate for mods. More complex mod like RT2 could use that to intercept and delay control by using OnPostAutopilotUpdate that run later, and clean OnFlyByWire of human are unusable.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-16T23:53:26Z","Content":"\n\u003Cp\u003ESo they are meant to be used by autopilots that are supposed to allow pilot overrides, but not ones that aren\u0027t? That\u0027s what I\u0027m getting from the description.\u003C/p\u003E\n"},{"CreatedByName":"Robotengineer","CreatedById":104525,"CreatedDateTime":"2014-12-17T20:19:21Z","Content":"\n\u003Cp\u003EFigured out how to add an experience trait.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/9iRI7Kx.png?1\u0022 alt=\u00229iRI7Kx.png?1\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing KSP;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003Eusing Experience;\u003Cbr\u003Eusing System.Collections;\u003Cbr\u003E\u003Cbr\u003Enamespace GeoSciencist\u003Cbr\u003E{\u003Cbr\u003E\t[KSPAddon(KSPAddon.Startup.Instantly, false)]\u003Cbr\u003E\tpublic class SurfaceScientist : MonoBehaviour\u003Cbr\u003E\t{\u003Cbr\u003E\t\tType tp = typeof(ExperienceTrait);\u003Cbr\u003E\t\tProtoCrewMember kerbal;\u003Cbr\u003E\t\tpublic ExperienceTraitConfig GeoConf = ExperienceTraitConfig.Create(ConfigNode.Load(KSPUtil.ApplicationRootPath \u002B \u0022GameData/MoreTraits/Traits.cfg\u0022));\u003Cbr\u003E\t\tpublic void Awake()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tExperience.ExperienceTrait.Create(tp, GeoConf, kerbal);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI have not been able to make a new effect for the Geologist yet, but that is what I will work on next. I am not actually sure whether this works, After deleting the .dll in the folder it still shows up because I left the cfg in there. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_embarrassed.gif\u0022 alt=\u0022:blush:\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-18T03:23:36Z\u0022 title=\u002212/18/2014 03:23  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 18, 2014\u003C/time\u003E by Robotengineer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-12-17T22:29:39Z","Content":"\n\u003Cp\u003EWhich trait is assigned to a kerbal (ProtoCrewMember) is purely based on a hash of their name, done whenever the PCM object is created, there is no saving or loading mechanism for saying which PCM has which trait.\u003C/p\u003E\n"},{"CreatedByName":"Robotengineer","CreatedById":104525,"CreatedDateTime":"2014-12-17T22:41:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EWhich trait is assigned to a kerbal (ProtoCrewMember) is purely based on a hash of their name, done whenever the PCM object is created, there is no saving or loading mechanism for saying which PCM has which trait.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould it be possible to make it based on a Kerbals courage and stupidity?\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2014-12-18T16:02:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022 data-cite=\u0022Crzyrndm\u0022\u003E\u003Cdiv\u003EAny ideas where the new forms of SAS (lock to pre-defined vectors) are doing their control logic? The PID tuning for stability assistance still works fine after updating as Diazo has already specified, but the new forms are not responding to the PID tuner at all indicating they are working on a different mechanism.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EVesselAutopilot.VesselSAS has methods to set pitch, roll, and yaw PIDs. (eg VesselAutopilot.VesselSAS.SetLockPitchPID(float, float, float, float))\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-18T16:38:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022 data-cite=\u0022Crzyrndm\u0022\u003E\u003Cdiv\u003EAny ideas where the new forms of SAS (lock to pre-defined vectors) are doing their control logic? The PID tuning for stability assistance still works fine after updating as Diazo has already specified, but the new forms are not responding to the PID tuner at all indicating they are working on a different mechanism.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan you use the API to lock the new SAS to any arbitrary direction you pick for it instead of just to the six cardinal ones? (i.e. \u0022Please try to SAS your way toward the goal direction that I\u0027m going to give you, oh and by the way I\u0027ll be slightly updating this goal direction each update because it\u0027s not fixed in space - its a dynamic direction (i.e. 5 degreees above the target, or in the same facing direction as my target is facing, etc - any sort of direction that will need to be moved a little bit each update.\u0022)\u003C/p\u003E\u003Cp\u003EBecause I\u0027m fearful that if there\u0027s an API method to give it just whatever direction you feel like, that constantly passing in a slightly moved direction each time will end up constantly resetting the PID controller making it not able to do its work properly. It seems like you have to leave the direction unchanged for a few ticks for the PID controller to do anything. (And this immediately begs the question why on earth it can lock the SAS to aim toward the target as it moves relative to its target - it clearly *is* able to deal with a seek direction that keeps getting re-updated again and again continually, but it seems as if it can\u0027t deal with such a seek direction if it\u0027s one you pass into it.\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2014-12-18T16:45:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003ECan you use the API to lock the new SAS to any arbitrary direction you pick for it instead of just to the six cardinal ones? (i.e. \u0022Please try to SAS your way toward the goal direction that I\u0027m going to give you, oh and by the way I\u0027ll be slightly updating this goal direction each update because it\u0027s not fixed in space - its a dynamic direction (i.e. 5 degreees above the target, or in the same facing direction as my target is facing, etc - any sort of direction that will need to be moved a little bit each update.\u0022)\u003Cp\u003EBecause I\u0027m fearful that if there\u0027s an API method to give it just whatever direction you feel like, that constantly passing in a slightly moved direction each time will end up constantly resetting the PID controller making it not able to do its work properly. It seems like you have to leave the direction unchanged for a few ticks for the PID controller to do anything. (And this immediately begs the question why on earth it can lock the SAS to aim toward the target as it moves relative to its target - it clearly *is* able to deal with a seek direction that keeps getting re-updated again and again continually, but it seems as if it can\u0027t deal with such a seek direction if it\u0027s one you pass into it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt uses an enumeration for the mode (stability, prograde, retrograde, etc). However, from what I\u0027ve seen tinkering with it, the prograde, etc, depend on the mode the speed display is in - prograde will be orbit-relative if the speed display shows Orbit, and surface-relative if it\u0027s Surface. I assume it does target mode as well, but I haven\u0027t had enough time to test that out.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-18T17:11:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EBecause I\u0027m fearful that if there\u0027s an API method to give it just whatever direction you feel like, that constantly passing in a slightly moved direction each time will end up constantly resetting the PID controller making it not able to do its work properly. It seems like you have to leave the direction unchanged for a few ticks for the PID controller to do anything. (And this immediately begs the question why on earth it can lock the SAS to aim toward the target as it moves relative to its target - it clearly *is* able to deal with a seek direction that keeps getting re-updated again and again continually, but it seems as if it can\u0027t deal with such a seek direction if it\u0027s one you pass into it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECorrect, you can not set the SAS direction every frame, it results in the SAS doing nothing.\u003C/p\u003E\u003Cp\u003EFor my Landing Aid mod in which I use the SAS to control the vessel tip in order to slow down, I had to add a timer so I was only calling SAS.LockDirection every 10 or so frames. (I experimented with every 5 to 15 frames and did not see much difference in the number as long as SAS had frames to control the vessel before I set a new SAS.LockDirection)\u003C/p\u003E\u003Cp\u003EIt looks like SAS does nothing in the update frame the direction lock is set, only in the update frames afterwards.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-18T21:44:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MOARdV\u0022 data-cite=\u0022MOARdV\u0022\u003E\u003Cdiv\u003EVesselAutopilot.VesselSAS has methods to set pitch, roll, and yaw PIDs. (eg VesselAutopilot.VesselSAS.SetLockPitchPID(float, float, float, float))\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, and those work for stability assistance (I\u0027ve been using them for a while), but have absolutely zero effect on the various target locks introduced by 0.90 (which is extremely frustrating because I\u0027ve found them almost unusable due to vibration)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003ECan you use the API to lock the new SAS to any arbitrary direction you pick for it instead of just to the six cardinal ones? (i.e. \u0022Please try to SAS your way toward the goal direction that I\u0027m going to give you, oh and by the way I\u0027ll be slightly updating this goal direction each update because it\u0027s not fixed in space - its a dynamic direction (i.e. 5 degreees above the target, or in the same facing direction as my target is facing, etc - any sort of direction that will need to be moved a little bit each update.\u0022)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI haven\u0027t tried this myself, but under the autopilot there is the old SAS and a new RSAS which has the method \u003Cem\u003EsetTargetOrientation(Vector3 target, bool reset)\u003C/em\u003E. I\u0027m fairly certain this is what is being called to operate the new vector locks, but as I said earlier, there is nothing showing how the control is being actuated unlike VesselSAS.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-18T21:57:08Z\u0022 title=\u002212/18/2014 09:57  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 18, 2014\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-19T01:38:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003E(I experimented with every 5 to 15 frames and did not see much difference in the number as long as SAS had frames to control the vessel before I set a new SAS.LockDirection)\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGiven how PID controllers work, I suspect the magic minimum number is 3. 2 is enough to learn the diff between current value and previous value, derive a change rate from that, derive a future predicted position from that, and then you need one more iteration after that to actually see an effect happen from the input settings that it changed in iteration 2.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022 data-cite=\u0022Crzyrndm\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Ea new RSAS which has the method setTargetOrientation(Vector3 target, bool reset).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EJust on pure guesswork from the method signature that sounds like what we might need. I\u0027ll pass that on to erendake (although, if it\u0027s a Vector and not a Quaternion, then that means it has no roll information, which is going to annoy our users quite a bit. It\u0027s fine for rockets to ignore roll, but not for spaceplanes).\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-19T01:52:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EJust on pure guesswork from the method signature that sounds like what we might need. I\u0027ll pass that on to erendake (although, if it\u0027s a Vector and not a Quaternion, then that means it has no roll information, which is going to annoy our users quite a bit. It\u0027s fine for rockets to ignore roll, but not for spaceplanes).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom my observations the heading locks only seem to be doing some form of damping on the roll axis which fits with that observation. That damping works terribly with planes, and I have not yet found a tuning method\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-19T01:55:31Z\u0022 title=\u002212/19/2014 01:55  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 19, 2014\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-19T02:10:40Z","Content":"\n\u003Cp\u003EHere\u0027s another question: If you\u0027re writing some changes to a mod to make it take into account the new space center building tech levels, and you need to test what happens to career games at different points of progression, is there a quick cheaty way to set the building tech levels where you want without having to actually play out the entire career to that point? I also have the same question for pilot skills.\u003C/p\u003E\u003Cp\u003EBasically, I\u0027m contemplating making kOS obey the Tracking Center limits. For example, kOS allows scripts to access a nearest pass orbit solver (a function that lets you pass in two Orbit objects and it returns the next timestamp at which it guesses they\u0027ll have the closest rendezvous). I\u0027m contemplating making it not work until after your Tracking Center can do it, under the thematic idea that your space agency isn\u0027t very good at that yet. (And to keep kOS from being a mechanism by which you can cheat your way past the limitations of career mode).\u003C/p\u003E\u003Cp\u003EBut to test a thing like that, I\u0027ll need savegames in which the tracking center has different tech levels. Being able to quickly fake that for mod testing would be useful.\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-19T02:18:15Z","Content":"\n\u003Cp\u003EEdit the persistence file under \u003Cem\u003E\u0022name = ScenarioUpgradeableFacilitiies\u0022\u003C/em\u003E and make a few copies with different levels?\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-12-19T12:22:23Z","Content":"\n\u003Cp\u003EOr in the save search for \u0022fund\u0022 and edit the value. You ll be instantly rich and can buy all the buildings you want.\u003C/p\u003E\n"},{"CreatedByName":"Robotengineer","CreatedById":104525,"CreatedDateTime":"2014-12-19T21:08:04Z","Content":"\n\u003Cp\u003EDoes anybody know why ExperienceEffect requires an ExperienceTrait parent?\u003C/p\u003E\n"}]}