{"TopicId":55424,"ForumId":16,"TopicTitle":"KSP on a Linux cluster ?","CreatedByName":"Roxette","CreatedById":84963,"CreatedDateTime":"2013-12-07T01:53:29Z","PageNum":1,"Articles":[{"CreatedByName":"Roxette","CreatedById":84963,"CreatedDateTime":"2013-12-07T01:53:29Z","Content":"\n\u003Cp\u003EI was looking at a currently idle rackload of quad Xeon servers the other day and wondering if anyone has tried running KSP on a high performance cluster? The physics calculations should fly, but I suspect the bottleneck of the graphics interface would be such a limitation that it may not be worthwhile.\u003C/p\u003E\n"},{"CreatedByName":"SSSPutnik","CreatedById":91745,"CreatedDateTime":"2013-12-07T02:28:24Z","Content":"\n\u003Cp\u003ECurious as to this as well.\u003C/p\u003E\n"},{"CreatedByName":"J.Random","CreatedById":63332,"CreatedDateTime":"2013-12-07T03:04:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Roxette\u0022 data-cite=\u0022Roxette\u0022\u003E\u003Cdiv\u003EKSP on a high performance cluster? The physics calculations should fly\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWho said that? You can\u0027t just throw an app into clustered environment and say \u0022now I have a clustered app which is running on 100 CPU cores\u0022, that\u0027s simply stupid and, when executed in production environment, usually leads to foobars. Application should support multithreaded calculations even to benefit from multiple cores on a single chassis. To even start to work within a cluster, it has to support some sort of MapReduce algorythm. In its current state, KSP won\u0027t benefit even from multiple cores of a single chassis. It surely won\u0027t benefit from being launched in the cluster. Please don\u0027t touch expensive equipment which you have somehow got access to.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-07T03:08:58Z\u0022 title=\u002212/07/2013 03:08  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 7, 2013\u003C/time\u003E by J.Random\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Murph","CreatedById":90837,"CreatedDateTime":"2013-12-07T03:38:00Z","Content":"\n\u003Cp\u003EI agree with what\u0027s been said already, in general. Cluster computing is not something you just slide into place under any old software and get any benefit. Applications have to be specifically designed and implemented with a specific style of clustering in mind. Some applications are even more or less impossible to spread over a HPC cluster in a useful manner, if their data set and calculations can not be suitably sliced into convenient subsets. Nearly any application can run on an HA cluster in active/standby mode, and only some a suitable for a HA cluster in active/active mode, but HA clustering is for 24x365 uptime, not for performance. You were looking at a HPC cluster, from the description you gave.\u003C/p\u003E\u003Cp\u003EKSP is not designed to, and can\u0027t use any more than the hardware of a single system. You do get some benefit from having more than a single core, however, despite KSP not yet being multi-threaded, in that the other core(s) can process background system stuff, any other applications that are still running, etc \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC ensuring that KSP gets as close to max CPU time as possible.\u003C/p\u003E\n"},{"CreatedByName":"SSSPutnik","CreatedById":91745,"CreatedDateTime":"2013-12-07T04:07:37Z","Content":"\n\u003Cp\u003EI agree, was more wishful thinking, you may get somewhere with a hypervisor.\u003C/p\u003E\n"},{"CreatedByName":"J.Random","CreatedById":63332,"CreatedDateTime":"2013-12-07T04:40:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Murph\u0022 data-cite=\u0022Murph\u0022\u003E\u003Cdiv\u003EYou do get some benefit from having more than a single core, however, despite KSP not yet being multi-threaded, in that the other core(s) can process background system stuff, any other applications that are still running, etc \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC ensuring that KSP gets as close to max CPU time as possible.\u003C/div\u003E\u003C/blockquote\u003E While it\u0027s generally agreed that binding KSP to one core and everything else to another one will give you some benefit, I\u0027m not sure said benefit will be better than, say, using HT-enabled single core CPU (which may be clocked way higher than multicore system).\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SSSPutnik\u0022 data-cite=\u0022SSSPutnik\u0022\u003E\u003Cdiv\u003EI agree, was more wishful thinking, you may get somewhere with a hypervisor.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not sure what you\u0027re going to do with hypervisor, or even what you\u0027re calling \u0022hypervisor\u0022 in this context - if you\u0027re talking about HW virtualization then no, you won\u0027t benefit from using it. It can split CPU resources, not combine multiple cores into single \u0022supercore\u0022, afaik.\u003C/p\u003E\n"},{"CreatedByName":"SSSPutnik","CreatedById":91745,"CreatedDateTime":"2013-12-07T05:54:24Z","Content":"\n\u003Cp\u003EVMware will present the CPUs as a single core processor.\u003C/p\u003E\u003Cp\u003EPerformance wise, I have not tested. I doubt you with get more flops than running on bare metal.\u003C/p\u003E\n"},{"CreatedByName":"J.Random","CreatedById":63332,"CreatedDateTime":"2013-12-07T06:20:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SSSPutnik\u0022 data-cite=\u0022SSSPutnik\u0022\u003E\u003Cdiv\u003EVMware will present the CPUs as a single core processor.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EErm, no. 1 single-core vCPU will map into one physical core. Unless I don\u0027t know something, which is quite possible, but even then I\u0027m not sure how this technology is supposed to work. Common sense tells me that if guest OS is seeing a single CPU then it will use single instruction queue, and I can\u0027t see how you could forcibly split it and feed it into multiple physical cores simultaneously.\u003C/p\u003E\n"},{"CreatedByName":"SSSPutnik","CreatedById":91745,"CreatedDateTime":"2013-12-07T07:01:36Z","Content":"\n\u003Cp\u003EYeah agreed.\u003C/p\u003E\n"}]}