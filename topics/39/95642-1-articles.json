{"TopicId":95642,"ForumId":39,"TopicTitle":"ZDOF RCS controller (new update 7/1/15)","CreatedByName":"ZodiaK","CreatedById":80590,"CreatedDateTime":"2015-01-04T17:49:09Z","PageNum":1,"Articles":[{"CreatedByName":"ZodiaK","CreatedById":80590,"CreatedDateTime":"2015-01-04T17:49:09Z","Content":"\n\u003Cp\u003ESo I decided to do the thingy. \u003Cspan style=\u0022font-size:8px;\u0022\u003Eyaaaay\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Epresenting:\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EThe ZodiaK 6DOF RCS translation controller!\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EGOALS:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E1. To produce a 6DOF RCS controller that can connect to my computer and control a craft in KSP\u003C/p\u003E\u003Cp\u003E2. To execute my original design to an accurate degree\u003C/p\u003E\u003Cp\u003E3. for the overall design to be reminiscent of 1960s era NASA hardware\u003C/p\u003E\u003Cp\u003Eand thus without further ado-\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPart 1: planning things and such and so-on. (4/1/15)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/2Ejljjg.png\u0022 alt=\u00222Ejljjg.png\u0022\u003E\u003C/p\u003E\u003Cp\u003Eso this is my design. It will be controlled by a twinning of \u003C/p\u003E\u003Cp\u003E1.) A MaKey MaKey board\u003C/p\u003E\u003Cp\u003E2.) An Arduino UNO board\u003C/p\u003E\u003Cp\u003Erespectively, they look like this:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://farm8.staticflickr.com/7231/7167036798_9e490c776f.jpg\u0022 alt=\u00227167036798_9e490c776f.jpg\u0022\u003E\u003Cimg src=\u0022http://arduino.cc/en/uploads/Main/ArduinoUno_r2_front450px.jpg\u0022 alt=\u0022ArduinoUno_r2_front450px.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EUsing the Audino to edit the makey makey\u0027s \u003Cstrong\u003E(Henceforth referred to as \u0027MM\u0027)\u003C/strong\u003E makey_makey_1_4_1.ino file downloaded from GitHub to switch the \u0027WASDFG\u0027 pins to the translation keys \u0027IJKLHN\u0027. the code for that file looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003E\u003Cbr\u003E/*\u003Cbr\u003E/////////////////////////////////////////////////////////////////////////\u003Cbr\u003E// KEY MAPPINGS: WHICH KEY MAPS TO WHICH PIN ON THE MAKEY MAKEY BOARD? //\u003Cbr\u003E/////////////////////////////////////////////////////////////////////////\u003Cbr\u003E\u003Cbr\u003E - edit the keyCodes array below to change the keys sent by the MaKey MaKey for each input\u003Cbr\u003E - the comments tell you which input sends that key (for example, by default \u0027w\u0027 is sent by pin D5)\u003Cbr\u003E - change the keys by replacing them. for example, you can replace \u0027w\u0027 with any other individual letter,\u003Cbr\u003E number, or symbol on your keyboard\u003Cbr\u003E - you can also use codes for other keys such as modifier and function keys (see the\u003Cbr\u003E the list of additional key codes at the bottom of this file)\u003Cbr\u003E\u003Cbr\u003E*/\u003Cbr\u003E\u003Cbr\u003Eint keyCodes[NUM_INPUTS] = {\u003Cbr\u003E // top side of the makey makey board\u003Cbr\u003E\u003Cbr\u003E KEY_UP_ARROW, // up arrow pad\u003Cbr\u003E KEY_DOWN_ARROW, // down arrow pad\u003Cbr\u003E KEY_LEFT_ARROW, // left arrow pad\u003Cbr\u003E KEY_RIGHT_ARROW, // right arrow pad\u003Cbr\u003E \u0027 \u0027, // space button pad\u003Cbr\u003E MOUSE_LEFT, // click button pad\u003Cbr\u003E\u003Cbr\u003E // female header on the back left side\u003Cbr\u003E\u003Cbr\u003E \u0027w\u0027, // pin D5\u003Cbr\u003E \u0027a\u0027, // pin D4\u003Cbr\u003E \u0027s\u0027, // pin D3\u003Cbr\u003E \u0027d\u0027, // pin D2\u003Cbr\u003E \u0027f\u0027, // pin D1\u003Cbr\u003E \u0027g\u0027, // pin D0\u003Cbr\u003E\u003Cbr\u003E // female header on the back right side\u003Cbr\u003E\u003Cbr\u003E MOUSE_MOVE_UP, // pin A5\u003Cbr\u003E MOUSE_MOVE_DOWN, // pin A4\u003Cbr\u003E MOUSE_MOVE_LEFT, // pin A3\u003Cbr\u003E MOUSE_MOVE_RIGHT, // pin A2\u003Cbr\u003E MOUSE_LEFT, // pin A1\u003Cbr\u003E MOUSE_RIGHT // pin A0\u003Cbr\u003E};\u003Cbr\u003E\u003Cbr\u003E///////////////////////////\u003Cbr\u003E// NOISE CANCELLATION /////\u003Cbr\u003E///////////////////////////\u003Cbr\u003E#define SWITCH_THRESHOLD_OFFSET_PERC 5 // number between 1 and 49\u003Cbr\u003E // larger value protects better against noise oscillations, but makes it harder to press and release\u003Cbr\u003E // recommended values are between 2 and 20\u003Cbr\u003E // default value is 5\u003Cbr\u003E\u003Cbr\u003E#define SWITCH_THRESHOLD_CENTER_BIAS 55 // number between 1 and 99\u003Cbr\u003E // larger value makes it easier to \u0022release\u0022 keys, but harder to \u0022press\u0022\u003Cbr\u003E // smaller value makes it easier to \u0022press\u0022 keys, but harder to \u0022release\u0022\u003Cbr\u003E // recommended values are between 30 and 70\u003Cbr\u003E // 50 is \u0022middle\u0022 2.5 volt center\u003Cbr\u003E // default value is 55\u003Cbr\u003E // 100 = 5V (never use this high)\u003Cbr\u003E // 0 = 0 V (never use this low\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E/////////////////////////\u003Cbr\u003E// MOUSE MOTION /////////\u003Cbr\u003E/////////////////////////\u003Cbr\u003E#define MOUSE_MOTION_UPDATE_INTERVAL 35 // how many loops to wait between \u003Cbr\u003E // sending mouse motion updates\u003Cbr\u003E\u003Cbr\u003E#define PIXELS_PER_MOUSE_STEP 4 // a larger number will make the mouse\u003Cbr\u003E // move faster\u003Cbr\u003E\u003Cbr\u003E#define MOUSE_RAMP_SCALE 150 // Scaling factor for mouse movement ramping\u003Cbr\u003E // Lower = more sensitive mouse movement\u003Cbr\u003E // Higher = slower ramping of speed\u003Cbr\u003E // 0 = Ramping off\u003Cbr\u003E\u003Cbr\u003E#define MOUSE_MAX_PIXELS 10 // Max pixels per step for mouse movement\u003Cbr\u003E\u003Cbr\u003E/*\u003Cbr\u003E\u003Cbr\u003E///////////////////////////\u003Cbr\u003E// ADDITIONAL KEY CODES ///\u003Cbr\u003E///////////////////////////\u003Cbr\u003E\u003Cbr\u003E- you can use these codes in the keyCodes array above\u003Cbr\u003E- to get modifier keys, function keys, etc \u003Cbr\u003E\u003Cbr\u003EKEY_LEFT_CTRL\u003Cbr\u003EKEY_LEFT_SHIFT \u003Cbr\u003EKEY_LEFT_ALT \u003Cbr\u003EKEY_LEFT_GUI \u003Cbr\u003EKEY_RIGHT_CTRL \u003Cbr\u003EKEY_RIGHT_SHIFT \u003Cbr\u003EKEY_RIGHT_ALT \u003Cbr\u003EKEY_RIGHT_GUI \u003Cbr\u003E\u003Cbr\u003EKEY_BACKSPACE \u003Cbr\u003EKEY_TAB \u003Cbr\u003EKEY_RETURN \u003Cbr\u003EKEY_ESC \u003Cbr\u003EKEY_INSERT \u003Cbr\u003EKEY_DELETE \u003Cbr\u003EKEY_PAGE_UP \u003Cbr\u003EKEY_PAGE_DOWN \u003Cbr\u003EKEY_HOME\u003Cbr\u003EKEY_END \u003Cbr\u003EKEY_CAPS_LOCK \u003Cbr\u003E\u003Cbr\u003EKEY_F1 \u003Cbr\u003EKEY_F2 \u003Cbr\u003EKEY_F3 \u003Cbr\u003EKEY_F4 \u003Cbr\u003EKEY_F5 \u003Cbr\u003EKEY_F6 \u003Cbr\u003EKEY_F7 \u003Cbr\u003EKEY_F8 \u003Cbr\u003EKEY_F9 \u003Cbr\u003EKEY_F10\u003Cbr\u003EKEY_F11 \u003Cbr\u003EKEY_F12 \u003Cbr\u003E\u003Cbr\u003E*/\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E#include \u0022Arduino.h\u0022\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EThe pins for the keys IJKL will surround the central column of the stick so that when the stick is moved, the earth metal connects to a pin, registering in the MM as a keyboard button press. this will act as the linear translation control\u003C/p\u003E\u003Cp\u003Efor the forwards and backwards movements, those are controlled from small metal inserts within the column, towards the bottom. another ground piece of ground metal rests between the two pieces of metal so that when the stick is pushed of pulled, it connects, registering as either H or N.\u003C/p\u003E\u003Cp\u003Efinally, a semi-taught spring is connected at the very bottom of the rod, returning it to its original position after any movements made.\u003C/p\u003E\u003Cp\u003Ethus, any movement of the stick will be transferred into key-presses of either IJKLH or N. //end log\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPart 2: The Trials and tribble-ations of the makey makey (7/1/15)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Eso yeah.\u003C/p\u003E\u003Cp\u003Eturns out the reprogramming process wasn\u0027t a quick jaunt into the IDE as I had anticipated.\u003C/p\u003E\u003Cp\u003Eafter faffing with drivers and \u0027Run\u0027 and such, we ran in to problems at almost EVERY corner. \u003C/p\u003E\u003Cp\u003Eand finally, when it \u003Cem\u003Eseemed\u003C/em\u003E to be all peachy, it turns out that I was using the wrong computer for the gob entirely, seeing as our MM was a joylabz production, a now outdated version of the MM and recognized by windows as an Arduino Leonardo.\u003C/p\u003E\u003Cp\u003Eso we are currently retrying the whole process with my mum\u0027s mac computer and are not currently having much luck.\u003C/p\u003E\u003Cp\u003EI guess the moral of this encounter with the land of arduino is:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Enever think it\u0027ll be easy, because it won\u0027t\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m sure it\u0027ll sort out \u003Cem\u003Eeventually\u003C/em\u003E, but for now no such luck.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EIT WORKS! \u003C/p\u003E\u003Cp\u003Eafter 10 gruelling minutes of uploading, we have finally gotten the cod e to compile and sent to the MM. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIt may not be easy, but it might just work after all.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/O1EscXH.png\u0022 alt=\u0022O1EscXH.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E// end log\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-07T21:31:26Z\u0022 title=\u002201/07/2015 09:31  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 7, 2015\u003C/time\u003E by ZodiaK\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"longbyte1","CreatedById":17521,"CreatedDateTime":"2015-01-04T22:20:35Z","Content":"\n\u003Cp\u003EHow are you going to fit that long mechanic into a box?\u003C/p\u003E\n"},{"CreatedByName":"ZodiaK","CreatedById":80590,"CreatedDateTime":"2015-01-05T08:59:58Z","Content":"\n\u003Cp\u003Eit will be angled at 45 degrees, so it will take um less space in height. also, the model you see is not optimized, I have an optimized sketch on paper witch uses a lot less space.\u003C/p\u003E\u003Cp\u003Eedit: MM aqquired\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-05T18:07:03Z\u0022 title=\u002201/05/2015 06:07  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 5, 2015\u003C/time\u003E by ZodiaK\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Frank_G","CreatedById":100000,"CreatedDateTime":"2015-01-05T17:42:47Z","Content":"\n\u003Cp\u003EVery nice. I look with awe at people building all those cool controller thingies. I am not new to building electronics from scratch, but i havent done that for 25 years... Maybe its a good and easy project to get back into stuff like this... Thank you for sharing.\u003C/p\u003E\n"},{"CreatedByName":"ZodiaK","CreatedById":80590,"CreatedDateTime":"2015-01-05T18:01:41Z","Content":"\n\u003Cp\u003EI\u0027m actually a complete beginner when it comes to these things, so we\u0027re at the same skill level\u003C/p\u003E\n"},{"CreatedByName":"Daid","CreatedById":32171,"CreatedDateTime":"2015-01-06T20:45:04Z","Content":"\n\u003Cp\u003ENote, as 3D design software, you might want to switch to designspark mechanical:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.rs-online.com/designspark/electronics/eng/page/mechanical\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.rs-online.com/designspark/electronics/eng/page/mechanical\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s a lot better for mechanical design then sketchup. A lot less buggy as well.\u003C/p\u003E\n"},{"CreatedByName":"ZodiaK","CreatedById":80590,"CreatedDateTime":"2015-01-06T20:48:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Daid\u0022 data-cite=\u0022Daid\u0022\u003E\u003Cdiv\u003ENote, as 3D design software, you might want to switch to designspark mechanical:\u003Cp\u003E\u003Ca href=\u0022http://www.rs-online.com/designspark/electronics/eng/page/mechanical\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.rs-online.com/designspark/electronics/eng/page/mechanical\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s a lot better for mechanical design then sketchup. A lot less buggy as well.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ethat def. looks better than sketchup. I\u0027ll take a look at that after this project\u003C/p\u003E\n"},{"CreatedByName":"ZodiaK","CreatedById":80590,"CreatedDateTime":"2015-01-07T21:18:55Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EPart 2: The Trials and tribble-ations of the makey makey (7/1/15)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E(\u002Brep to whoever names the reference)\u003C/p\u003E\u003Cp\u003Eso yeah.\u003C/p\u003E\u003Cp\u003Eturns out the reprogramming process wasn\u0027t a quick jaunt into the IDE as I had anticipated.\u003C/p\u003E\u003Cp\u003Eafter faffing with drivers and \u0027Run\u0027 and such, we ran in to problems at almost EVERY corner. \u003C/p\u003E\u003Cp\u003Eand finally, when it \u003Cem\u003Eseemed\u003C/em\u003E to be all peachy, it turns out that I was using the wrong computer for the gob entirely, seeing as our MM was a joylabz production, a now outdated version of the MM and recognized by windows as an Arduino Leonardo.\u003C/p\u003E\u003Cp\u003Eso we are currently retrying the whole process with my mum\u0027s mac computer and are not currently having much luck.\u003C/p\u003E\u003Cp\u003EI guess the moral of this encounter with the land of arduino is:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Enever think it\u0027ll be easy, because it won\u0027t\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m sure it\u0027ll sort out \u003Cem\u003Eeventually\u003C/em\u003E, but for now no such luck.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EIT WORKS! \u003C/p\u003E\u003Cp\u003Eafter 10 gruelling minutes of uploading, we have finally gotten the cod e to compile and sent to the MM. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIt may not be easy, but it might just work after all.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/O1EscXH.png\u0022 alt=\u0022O1EscXH.png\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-07T21:31:15Z\u0022 title=\u002201/07/2015 09:31  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 7, 2015\u003C/time\u003E by ZodiaK\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZodiaK","CreatedById":80590,"CreatedDateTime":"2015-01-08T12:23:55Z","Content":"\n\u003Cp\u003EI hath a video demonstrating the ZDOF hardware in-game. I will upload it soon.\u003C/p\u003E\n"}]}