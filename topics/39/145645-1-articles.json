{"TopicId":145645,"ForumId":39,"TopicTitle":"Multi processor space probes with kOS","CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-09T07:09:18Z","PageNum":1,"Articles":[{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-09T07:09:18Z","Content":"\n\u003Cp\u003E\nComputers and space have fascinated me for as long as i can remember. The combination, in the form of automated probes, even more so.\n\u003C/p\u003E\n\u003Cp\u003E\nIn the real world it is not uncommon that a probe develops one or more problems. My goal is to develop a system consisting of software and processors with kOS which is as fault tolerant as possible in KSP.\n\u003C/p\u003E\n\u003Cp\u003E\nYou might ask yourself: Why a multiprocessor system, Isn\u0027t one processor enough? Well, frankly one processor is definitely not enough. First of all, errors (in code and hardware) WILL happen. Error can\u0027t be caught by kOS. Any error will stop the processor executing the program. With just one processor, your probe is essentially dead and a total loss. kOS does allow the user to control the craft after such a fault occurs. That means that there must be at least one other processor on board which takes care of communication and such. In the system i want to (will!) develop, there will be no hidden processor(s) like that. If a processor halts, it must be reset bij another processor on the probe and not by typing commands in the terminal window.\n\u003C/p\u003E\n\u003Cp\u003E\nAnother reason why using multiple processors are required has to do with computerarchitecture. Any computer, from large mainframecomputers to even mere PC\u0027s, has controllers which take care of specific tasks. In theory, the CPU could do all those tasks but it would make the computer very slow. Most probably, it would render the computer impractical. With controllers, the CPU can delegate certain tasks and continue with it\u0027s own workload. It makes the computer faster and more fault tolerant. After a controllerfailure one function becomes unusable but not the entire computer.\n\u003C/p\u003E\n\u003Cp\u003E\nThe third reason is that the complete system can be less complex and more modular.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI will be using several mods, some are really required, some are not.\n\u003C/p\u003E\n\u003Cp\u003E\nThe most important are:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nRemote tech\n\u003C/li\u003E\n\u003Cli\u003E\nUniversal Storage - Provides an easy way of placing multiple processors on a craft (i don\u0027t like to use multiple HAL9000\u0027s for several reasons)\n\u003C/li\u003E\n\u003Cli\u003E\nkOS (1.0.0)\u003Cs\u003E - Will be upgraded to release 1 as soon as some bugs in that relase are solved.\u003C/s\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nMechJeb 2/MechJeb 2 embedded - Will only be used to display flightdata and will be removed when a kOS processor does that.\n\u003C/li\u003E\n\u003Cli\u003E\nScansat - For science subsystem and testing.\n\u003C/li\u003E\n\u003Cli\u003E\nKaboom - Used as selfdestructmechanism.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cs\u003EProcedural parts - Will only be used if it is unavoidable.\u003C/s\u003E (\u003Cspan style=\u0022color:#ff0000;\u0022\u003Ehas been removed\u003C/span\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nKSP 1.1.3 64 bits - The 64 bits 1.0.0 kOS version works correctly (the 0.21.1 version did not).\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nMods which are not essential (but can provide eye candy or might be usefull):\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nAviationlights - lighting the probe and possibly also as \u0022indicatorlights\u0022.\n\u003C/li\u003E\n\u003Cli\u003E\nAgext / Modactions - For easy programming specific tasks like opening/closing solarpanels\n\u003C/li\u003E\n\u003Cli\u003E\nHullCamVDS\n\u003C/li\u003E\n\u003Cli\u003E\nBD Armory - FLIR and IR camera\n\u003C/li\u003E\n\u003Cli\u003E\nLaunchnumbering\n\u003C/li\u003E\n\u003Cli\u003E\nKerbalAlarmClock\n\u003C/li\u003E\n\u003Cli\u003E\nKerbalJointRe\u00CFnforcement\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nI probably will remove (parts of those) mods when they\u0027re not used to save memory space. I will be adding some modified parts as well (a universal container as kOS processor f.e.).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-07T15:32:24Z\u0022 title=\u002209/07/2016 03:32  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 7, 2016\u003C/time\u003E by TheCardinal\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MedwedianPresident","CreatedById":12212,"CreatedDateTime":"2016-08-09T07:31:47Z","Content":"\n\u003Cp\u003E\nYou mean a system that adapts to problems? Like \u0022If left engine fails lock gimbal of right engine and set thrust limiter to 80%\u0022? Or \u0022Override landing program if not enough fuel for return\u0022?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nProbes with kOS are interesting, but IRL manned spaceships are often automated too, by the way.\n\u003C/p\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-09T10:00:50Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222710492\u0022 data-ipsquote-contentid=\u0022145645\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470727907\u0022 data-ipsquote-userid=\u002212212\u0022 data-ipsquote-username=\u0022MedwedianPresident\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, MedwedianPresident said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou mean a system that adapts to problems? Like \u0022If left engine fails lock gimbal of right engine and set thrust limiter to 80%\u0022? Or \u0022Override landing program if not enough fuel for return\u0022?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nProbes with kOS are interesting, but IRL manned spaceships are often automated too, by the way.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPrimarily i\u0027m focussing on a system which will react to processing problems. F.e. A specific processor halts/fails and then the system must perform such and such action. Decisions like \u0022If left engine fails ...\u0022 and \u0022Override ..\u0022 usually are not decided by the probe itself but left to the technicians at mission control.\n\u003C/p\u003E\n\u003Cp\u003E\nIn the system to be developed each processor will be assigned a specific task, including what to do if the task cannot be performed due to processorfailure and/or some other causes.\n\u003C/p\u003E\n"},{"CreatedByName":"MedwedianPresident","CreatedById":12212,"CreatedDateTime":"2016-08-09T10:11:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222710551\u0022 data-ipsquote-contentid=\u0022145645\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470736850\u0022 data-ipsquote-userid=\u002222874\u0022 data-ipsquote-username=\u0022TheCardinal\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 minutes ago, TheCardinal said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPrimarily i\u0027m focussing on a system which will react to processing problems. F.e. A specific processor halts/fails and then the system must perform such and such action. Decisions like \u0022If left engine fails ...\u0022 and \u0022Override ..\u0022 usually are not decided by the probe itself but left to the technicians at mission control.\n\u003C/p\u003E\n\u003Cp\u003E\nIn the system to be developed each processor will be assigned a specific task, including what to do if the task cannot be performed due to processorfailure and/or some other causes.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou mean that processors that are used for unimportant tasks (e.g. minor inclination correction, landing leg damper control, light control) will be used to perform important tasks (e.g. throttling engines and orienting, life support systems, takeoff and return from Mun, etc...) if the processors that were originally supposed to perform them were destroyed or their program was faulty?\n\u003C/p\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-09T11:55:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222710554\u0022 data-ipsquote-contentid=\u0022145645\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470737507\u0022 data-ipsquote-userid=\u002212212\u0022 data-ipsquote-username=\u0022MedwedianPresident\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, MedwedianPresident said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou mean that processors that are used for unimportant tasks (e.g. minor inclination correction, landing leg damper control, light control) will be used to perform important tasks (e.g. throttling engines and orienting, life support systems, takeoff and return from Mun, etc...) if the processors that were originally supposed to perform them were destroyed or their program was faulty?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIn case of a hardware failure, yes. But such a decision would still be taken at mission control. In case of a faulty program, assigning that same program to another processor would only result in another processor failure.\n\u003C/p\u003E\n\u003Cp\u003E\nLet me try to give an example. A probe with multiple processors. One processor ceases to function. The first question is: How do you detect that a processor has failed? Next question will be: Hardware/Software? Does a reboot of that processor solve the problem and how do you detect if it functions again? How many times should the probe attempt that approach? What other actions can/should the probe take? What kind of messages should the probe send so mission control can determine the problem and possible solution? What if there\u0027s no connection with mission control?\u00A0 Should the probe attempt to run the program(s) of the failed processor in another (or a spare?) processor? What information can/should be extracted for a proper fault determination?\n\u003C/p\u003E\n\u003Cp\u003E\nSince weight is always very important, you cant \u00E1dd a processor for every small task. In other words, \u00EDt is impractical to assign one processor to manage the oxygen, one for the liquid fuel, one for the monopropellent etc.. Instead you group tasks and use one processor to manage and control every resource.\n\u003C/p\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-12T12:14:51Z","Content":"\n\u003Cp\u003E\nI\u0027ve started with a first, simple, experiment. In careermode i\u0027ve launched comsats with each five processors. Three of them are deactivated at the launch and one is busy with the ascent and circularisation. The fifth checks continueously if the altitude is above 60000. When that altitude is reached, this processor will jettison the fairings and deploy the solarpanels. Of course the fairings normally will be jettisoned when the apropriate stage is activated. To make sure the fifth pprocessor takes care of the fairings, the fairing symbol has been moved to a stage which only be activated when the altitude is way beyond 60000.\n\u003C/p\u003E\n\u003Cp\u003E\nIt proves the advantages of having multiple processor on a probe.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: I\u0027ve added the Kaboom! mod in order to have the option to have the craft selfdestruct if it deviates too much from it\u0027s flightpath during ascend. (The program will run in one of the processor\u0027s during ascend).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-13T09:31:09Z\u0022 title=\u002208/13/2016 09:31  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 13, 2016\u003C/time\u003E by TheCardinal\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-15T06:58:47Z","Content":"\n\u003Cp\u003E\nkOS 1.0 has just been released and i\u0027m switching to that version of kOS. Having interprocessor communication is too advantageous for the development of a multiprocessor system.\n\u003C/p\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-23T07:05:44Z","Content":"\n\u003Cp\u003E\n\u003Cimg alt=\u0022processor_ring.jpg\u0022 class=\u0022ipsImage\u0022 src=\u0022https://dl.dropboxusercontent.com/u/14923883/processor_ring.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIn the picture above an image of a five processor complex, consisting of a (small) central core and four radially attached side processors. Each processor has a specific nametag to ensure that the correct program is run in the appropriate processor. The central core and the sidemounted parts stem from the Universal Storage mod by @Paul Kingtiger and @Daishi. I\u0027m using the models and textures of the US_1C10_Wedge_Quadcore and the US_1P140_Wedge_WRS. For each a new cfg has been written for their new function(s).\n\u003C/p\u003E\n\u003Cp\u003E\nThe processor-ring consists of\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nthe central core tagged GUI; memory 10000 bytes; ElectricCharge 5; is a command pod. It controls the other cores, staging, selfdestruct, program distribution.\n\u003C/li\u003E\n\u003Cli\u003E\na side core tagged \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E; memory 20000 bytes; ElectricCharge 50. Takes care of communication including writing a mission log to the archive.\n\u003C/li\u003E\n\u003Cli\u003E\na side core tagged TLM; memory 20000 bytes; ElectricCharge 50. Takes care of telemetry data such as altitude, thrust etc.\n\u003C/li\u003E\n\u003Cli\u003E\na side core tagged RES; memory 20000 bytes; ElectricCharge 50. Takes care of resource management, especially ElectricCharge.\n\u003C/li\u003E\n\u003Cli\u003E\na side core tagged NAV; memory 20000 bytes; ElectricCharge 50. Takes care of the ascent, heading, direction, rotation etc.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nBefore launching, GUI runs a bootprogram which initializes the other processors and re-initializes GUI.\n\u003C/p\u003E\n\u003Cp\u003E\nEach processor sends \u0022I\u0027m alive\u0022 messages every second to the messagequeue of GUI after initialisation. GUI constantly checkes it\u0027s messagequeue and updates the (last) message time of each processor. If that time exceeds 2 seconds, the GUI prints of a warning and sets the message time to a negative value. If a negative value is detected at the next check, GUI reboots the failing processor. If it\u0027s just a fluke, this will solve the problem, but when at the next check again a negative value is detected, it didn\u0027t solve the problem and GUI will set the bootfilename of the failing processor to a special bootprogram and reboot it again. This should solve the problem (for now) if there\u0027s a problem with the processorprogram. In case of a hardwarefailure, it will not solve the problem and at the next check a negative value will still be detected. In such a case, GUI deactivates the failing processor and removes it from the checksequence.\n\u003C/p\u003E\n\u003Cp\u003E\nNext step will be to determine what additional steps should be taken in case of a soft/hardware failure of each processor, what to do if TLM fails (or \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E or ...).\n\u003C/p\u003E\n\u003Cp\u003E\nPaul KingTiger has been so kind to help me modify the cfg files in such a way that module manager takes care of model and textures files for both, so no additional files are needed. Installation of Modulemanager, kOS (v1.0.0) and UniversalStorage are required though.\n\u003C/p\u003E\n\u003Cp\u003E\nThe CFG files have now been updated:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/14923883/US_1C3PO_Wedge_Quadcoreprocessor.cfg\u0022 rel=\u0022external nofollow\u0022\u003EUS_1C3PO_Wedge_Quadcoreprocessor.cfg \u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/14923883/US_1R2D2_Wedge_kOS_Processor.cfg\u0022 rel=\u0022external nofollow\u0022\u003EUS_1R2D2_Wedge_kOS_Processor.cfg \u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-29T09:14:06Z\u0022 title=\u002208/29/2016 09:14  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 29, 2016\u003C/time\u003E by TheCardinal\u003C/strong\u003E\n\u003Cbr\u003Eadded cfg files\n\u003C/span\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-27T07:41:03Z","Content":"\n\u003Cp\u003E\nThe GUI is the only processor which has a bootfile set in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E (GUI_INIT.KS). At launch, this is the (first) program to be executed. It assigns several parameters to all processors and initialises them. This approach is somewhat more flexible than assigning a bootfile for each processor in the processor complex in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E. Whenever a mission requires a different bootfile for one (or more) processor(s), altering the GUI_INIT.KS is enough. No need to edit the processors in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E//GUI_INIT.KS\n//\n//     FYI is a function in LIB_GENERAL.KS\n//\nFUNCTION HAS_FILE {PARAMETER n. PARAMETER v. SWITCH TO v. LIST FILES IN f. FOR file IN f {IF file:NAME = n {SWITCH TO 1. RETURN TRUE.}}SWITCH TO 1. RETURN FALSE.}\n\ncopypath(\u00220:/libraries/Lib_general.ks\u0022,\u0022\u0022). \ncopypath(\u00220:/boot/Safemode.ks\u0022,\u0022\u0022). \nrun \u0022Lib_general.ks\u0022. \nset terminal:width to 40. \nset terminal:height to 12. \nFYI(\u0022 \u0022).\nFYI(\u0022--------   S T A R T   O F   M I S S I O N    L O G   --------\u0022).\nFYI(\u0022 \u0022).\nFYI(\u0022Guidance is internal.\u0022).\nWAIT 0.1.\nFYI(\u0022Deactivating other processors.\u0022).\nprocessor(\u0022NAV\u0022):deactivate.\nprocessor(\u0022RES\u0022):deactivate.\nprocessor(\u0022TLM\u0022):deactivate.\nprocessor(\u0022\u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E\u0022):deactivate.\nFYI(\u0022Copying general files to other processors.\u0022).\ncopypath(\u0022Lib_general.ks\u0022,\u0022TLM:/Lib_general.ks\u0022).\ncopypath(\u0022Lib_general.ks\u0022,\u0022NAV:/Lib_general.ks\u0022).\ncopypath(\u0022Lib_general.ks\u0022,\u0022\u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E:/Lib_general.ks\u0022).\ncopypath(\u0022Lib_general.ks\u0022,\u0022RES:/Lib_general.ks\u0022).\nWAIT 0.2.\nFYI(\u0022Initializing processor TLM\u0022).\ncopypath(\u00220:/boot/TLM.ks\u0022,\u0022TLM:/TLM.ks\u0022).\nset processor(\u0022TLM\u0022):bootfilename to \u0022TLM.ks\u0022.\nprocessor(\u0022TLM\u0022):activate.\nwait 0.3.\nFYI(\u0022Initializing processor \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E\u0022).\ncopypath(\u00220:/boot/\u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E.ks\u0022,\u0022\u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E:/\u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E.ks\u0022).\nset processor(\u0022\u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E\u0022):bootfilename to \u0022\u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E.ks\u0022.\nprocessor(\u0022\u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E\u0022):activate.\nwait 0.3.\nFYI(\u0022Initializing processor NAV\u0022).\ncopypath(\u00220:/boot/NAV.ks\u0022,\u0022NAV:/NAV.ks\u0022).\ncopypath(\u00220:/libraries/Lib_NAV.ks\u0022,\u0022NAV:/Lib_NAV.ks\u0022).\nset processor(\u0022NAV\u0022):bootfilename to \u0022NAV.ks\u0022.\nprocessor(\u0022NAV\u0022):activate.\nwait 0.3.\nFYI(\u0022Initializing processor RES\u0022).\ncopypath(\u00220:/boot/RES.ks\u0022,\u0022RES:/RES.ks\u0022).\nset processor(\u0022RES\u0022):bootfilename to \u0022RES.ks\u0022.\nprocessor(\u0022RES\u0022):activate.\nwait 0.3.\nFYI(\u0022Initializing self\u0022).\ncopypath(\u00220:/boot/GUI.ks\u0022,\u0022\u0022).\nset processor(\u0022GUI\u0022):bootfilename to \u0022GUI.ks\u0022.\nwait 0.3.\nFYI(\u0022Rebooting\u0022).\nwait 2.\nReboot.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe file LIB_GENERAL.KS is copied and executed by each processor. The code ensures that each processor sends an I\u0027m alive (IMA) message every second with function FIU. Messages are sent to the mission log with function FYI. The file also opens a terminal for each processor.\n\u003C/p\u003E\n\u003Cp\u003E\nThe file contains the following code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E//LIB_GENERAL.KS\n\nFUNCTION FORMATMET {LOCAL ts IS TIME\u002BMISSIONTIME-TIME:SECONDS. RETURN \u0022[T\u002B\u0022\u002BpadZ(ts:YEAR-1)\u002B\u0022-\u0022\u002BpadZ(ts:DAY-1,3)\u002B\u0022 \u0022\u002BpadZ(ts:HOUR)\u002B\u0022:\u0022\u002BpadZ(ts:MINUTE)\u002B\u0022:\u0022\u002BpadZ(ROUND(ts:SECOND))\u002B\u0022]\u0022.}\nFUNCTION PADZ {PARAMETER t, l is 2. RETURN (\u0022\u0022\u002Bt):PADLEFT(l):REPLACE(\u0022 \u0022,\u00220\u0022).}\nFUNCTION FYI {PARAMETER n. SET a1 TO PROCESSOR(\u0022gui\u0022). SET a2 TO a1:CONNECTION. a2:SENDMESSAGE(core:tag\u002B\u0022;\u0022\u002Bn). SET a1 TO PROCESSOR(\u0022com\u0022). SET a2 TO a1:CONNECTION. a2:SENDMESSAGE(core:tag\u002B\u0022;\u0022\u002Bn).}\nFUNCTION FIU {PARAMETER n. SET a1 TO PROCESSOR(\u0022gui\u0022). SET a2 TO a1:CONNECTION. a2:SENDMESSAGE(core:tag\u002B\u0022;\u0022\u002Bn).}\n\nset klok to time:seconds.\nwhen time:seconds \u0026gt; klok \u002B 1 then {set klok to time:seconds. FIU(\u0022IMA\u0022). return true.}\nCORE:PART:GETMODULE(\u0022kOSProcessor\u0022):DOEVENT(\u0022Open Terminal\u0022). \nCLEARSCREEN.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-27T07:51:05Z\u0022 title=\u002208/27/2016 07:51  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 27, 2016\u003C/time\u003E by TheCardinal\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-28T12:49:27Z","Content":"\n\u003Cp\u003E\nDuring testing, i noticed that the coreparts didn\u0027t work together with RemoteTech (RT). No connection with mission control was established, no matter what i tried. After Google-ing i found out that the parts needed a signalprocessor (??!).\u00A0 RT has several configuration files in it\u0027s directory to enable other mods with probecores to work with it. So i created a configuration file for the modified/new parts and added that to RemoteTech. That solved the connection problem.\n\u003C/p\u003E\n\u003Cp\u003E\nOne other thing that i noticed in KSP is that if the US_1C3PO_Wedge_Quadcoreprocessor gets deactivated (the command pod), the craft no longer is classified by KSP as a craft but becomes debris. Even if the core is activated again, the craft remains debris. It means that the craft type then has to be altered manually in KSP.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/14923883/RemoteTech_US_KOS_probes.cfg\u0022 rel=\u0022external nofollow\u0022\u003ERemoteTech_US_KOS_probes.cfg\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-29T10:00:10Z\u0022 title=\u002208/29/2016 10:00  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 29, 2016\u003C/time\u003E by TheCardinal\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2016-08-31T20:43:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222710478\u0022 data-ipsquote-contentid=\u0022145645\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470726558\u0022 data-ipsquote-userid=\u002222874\u0022 data-ipsquote-username=\u0022TheCardinal\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn August 9, 2016 at 3:09 AM, TheCardinal said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKSP 1.1.3 32 bits - The 64 bits version unfortunately doesn\u0027t play nice with kOS otherwise it would have been the 64 bits version.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat\u0027s this now? First I\u0027ve heard of such a thing\n\u003C/p\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-09-01T05:45:02Z","Content":"\n\u003Cp\u003E\nI had problems with kOS 0.20.1 and it\u0027s prerelease candidate combined with KSP 1.1.3 64b even without mods. The combination gave me problems i could only solve by using K.S.P. 1.1.3 32b. I haven\u0027t tried KSP 64b with kOS 1.0.0 (yet).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.reddit.com/r/Kos/comments/4snkub/what_mods_are_incompatible_with_kos/\u0022 rel=\u0022external nofollow\u0022\u003EReddit thread\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-09-07T15:34:18Z","Content":"\n\u003Cp\u003E\nI\u0027ve tried KSP 64b with kOS 1.0.0 and the problems i had, didn\u0027t occur, so i\u0027ve switched to KSP 64 bits.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-07T15:34:42Z\u0022 title=\u002209/07/2016 03:34  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 7, 2016\u003C/time\u003E by TheCardinal\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-10-10T06:00:43Z","Content":"\n\u003Cp\u003E\nWaiting for kOS for KSP 1.2.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-10T09:59:25Z\u0022 title=\u002210/10/2016 09:59  AM\u0022 data-short=\u00227 yr\u0022\u003EOctober 10, 2016\u003C/time\u003E by TheCardinal\u003C/strong\u003E\n\u003C/span\u003E\n"}]}