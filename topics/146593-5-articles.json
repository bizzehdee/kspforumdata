{"TopicId":146593,"ForumId":51,"TopicTitle":"[It\u0026#039;s Back!] Another Voyage Ares Mission, and A KSP\u0026#039;ers Crash Course in Realism Overhaul.","CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2016-08-26T15:21:23Z","PageNum":5,"Articles":[{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-02-23T23:37:21Z","Content":"\n\u003Cp\u003E\nLooks like the problem with the kOS cooked steering was having \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E on while commanding the roll, so I guess I need to redo the tuning without \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E now.\n\u003C/p\u003E\n\u003Cp\u003E\nTwo days of fighting a bad setting in kOS and never knowing it. \u003Cimg alt=\u0022:/\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon1.png\u0022 title=\u0022:/\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-02-24T05:00:10Z\u0022 title=\u002202/24/2017 05:00  AM\u0022 data-short=\u00227 yr\u0022\u003EFebruary 24, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-02T07:51:24Z","Content":"\n\u003Cp\u003E\nUpdate time.\n\u003C/p\u003E\n\u003Cp\u003E\nAutopilot code is coming along, and after some trial and error, I have a gravity turn programmed in. \u00A0I found that an initial pitchover of 10 degrees seems to give me the best gravity turn. \u00A0I thought of finding the perfect pitch angle analytically, but it would mean solving this differential equation (provided I set it up properly):\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/Xb7P65y.png\u0022 alt=\u0022Xb7P65y.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThis is the equation for the accelerations on the rocket on ascent. \u00A0I could probably solve in numerically, but I think it\u0027s a bit much for this project. \u00A0Maybe another day.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, the code so far. \u00A0There is a lot of junk commenting and temporary code commented out, but I\u0027ll clean that up in the final version:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//Saturn VB Autopilot program\n//Ctrl \u002B C to kill?\n\nRUNPATH(\u0022AresLaunchDisplay.ks\u0022).\n\nSET ddyn to 0.\nSET dynzero to 0.\n\n//If variables are lists, can I accees each element in loops below and make code more efficient?\nSET Inboard to SHIP:PARTSTAGGED(\u0022F1AInboard\u0022)[0].\nSET Outboard to SHIP:PARTSTAGGED(\u0022F1AOutboard1\u0022)[0].\nSET \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E to SHIP:PARTSTAGGED(\u0022SRB1\u0022)[0].\nSET MSIC to SHIP:PARTSTAGGED(\u0022MS-IC\u0022)[0].\n\nCLEARSCREEN. //in case we need this\n\n//Display event, throttle setting, F-1A thrust %, and \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust %.\n//Lock steering to a variable to make it less intensive to run?\nLOCK STEERING to Autopilot.\nLOCK Autopilot to \u0022Kill\u0022.\nLOCK THROTTLE to 1.0.\n\n//Temp - steering debug - delete after use\n//SET STEERINGMANAGER:SHOWSTEERINGSTATS to TRUE.\n//SET STEERINGMANAGER:SHOWFACINGVECTORS to TRUE.\n//SET STEERINGMANAGER:SHOWANGULARVECTORS to TRUE.\nSTAGE. //F-1A ignition\n\n//Ultimate goal of steering program is to set rocket into pre-programmed circular orbit of 200 km - 250 km.\n//Pitch by x degrees, then follow prograde until rocket reaches certain altitude.\n//Finally, manage pitch to put Ares in circular orbit.\n//In launches using manual steering, Ares ends gravity turn between \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep and MS-IC burnout.\n\n//Adjust heading to meet propulsion stack inclination (or desired inclination).  Could have this able to be set as input prior to launch.\n\n//At v(sfc) = 50 m/s, pitch over a bit to initiate gravity turn.\n//then hold prograde for gravity turn. (angle between v and a zero.)\n\n//Pitch and roll manuever.  Correct initial pitch is trial and error right now.\n//Could the gravity turn be better programmed as a diff eq (predictive equation)?\n\n//Print that gravity turn is in progress - Integrate with LaunchDisplay function?\n\nWHEN SHIP:VELOCITY:SURFACE:MAG \u0026gt;= 50 THEN {\n  //Pitch then roll for inclination (90 degrees for now). - smooth out move to pitch?\n  LOCK Autopilot to HEADING(90,80). //175 km AP at \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep.  \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep at 70 km. -  Last setting, 78 degrees pitch, then 83\n  //Follow prograde next.\n  WHEN SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z \u0026lt;= 0 THEN {\n   LOCK Autopilot to SHIP:VELOCITY:SURFACE. //SHIP:VELOCITY:SURFACE or SHIP:SRFPROGRADE?\n   PRINT \u0022Begin Gravity Turn\u0022 at (0,10).   \n   //Start PID loop for hitting set apoapsis - lasts until SECO.\n   //Output pitch (or yaw) based on set final apoapsis.\n   WHEN SHIP:ALTITUDE \u0026gt; 75000 THEN {\n     //Lock Autopilot to HEADING(90,0). //turns way too sharply, also readjusts heading\n   }  \n  }\n}\n\n//Countdown here?\n\nUNTIL (Outboard:THRUST/Outboard:MAXTHRUST) \u0026gt; 0.88 {\n  IF(Outboard:MAXTHRUST \u0026gt; 0) {  //Prevent NAN\n    LaunchDisplay(0,2,Outboard:THRUST/Outboard:MAXTHRUST,0).\n  }\n  \n  //WAIT 0.01.\n}\n\nSTAGE.  //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E ignition and liftoff\nCLEARSCREEN.\n\n//Maybe countdown and abort mode display.\n\n//WAIT 0.01.\n\n//Display loop could continue on with a PRESERVE command after throttleback?\nUNTIL MISSIONTIME \u0026gt; 25 {\n  IF(\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026gt; 0 AND \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST \u0026gt; 0) { //Prevent NAN\n    //PRINT \u0022Facing-vel srf Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, SHIP:VELOCITY:SURFACE) \u002B \u0022  \u0022 at (0,4).\n\t//PRINT \u0022Facing Z - Vel Srf Z (Normalized): \u0022 \u002B (SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z) at (0,5).\n\t//PRINT \u0022Facing-target Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, STEERINGMANAGER:TARGET:VECTOR) \u002B \u0022  \u0022 at (0,6).\n    //PRINT \u0022Facing - Target: \u0022 \u002B (SHIP:FACING:VECTOR:Z - STEERINGMANAGER:TARGET:VECTOR:Z) \u002B \u0022  \u0022 at (0,7).\n    //PRINT \u0022Facing Z: \u0022 \u002B SHIP:FACING:VECTOR:Z \u002B \u0022  \u0022at (0,8).\n    //PRINT \u0022Vel Srf Z: \u0022 \u002B SHIP:VELOCITY:SURFACE:Z \u002B \u0022  \u0022at (0,9).\n    LaunchDisplay(1,2,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  }\n  //WAIT 0.01.\n}\n\nCLEARSCREEN.\n\nLOCK THROTTLE to 0.01. //F-1A throttle to 60% for max Q\n\n//check dyn pressure change\n//if ddyn \u0026lt; -0.004kPa/0.01s or so, throttle to 85% (was -0.04kPa/0.1s)\n\nUNTIL ddyn \u0026lt;= -0.004 {\n  LaunchDisplay(2,0,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  SET ddyn TO (SHIP:Q*constant:ATMtokPa) - dynzero. //units are kPa \u0026lt;- can be lock statement\n  SET dynzero TO (SHIP:Q*constant:ATMtokPa). //\u0026lt;- these can be LOCK statements\n  WAIT 0.01. //change to 0.1? \u0026lt;- can remove this when using lock and dividing by time.\n}\n\nLOCK THROTTLE to 0.63. //F-1A throttle to 85%\n\nCLEARSCREEN.\n\n//4\u002BGs before \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E tail-off.\n\n//Stage SRBs and throttle to 100% when \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust \u0026lt; 10%\nUNTIL \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026lt; .1 {\n  LaunchDisplay(3,1,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  //WAIT 0.01.\n}\n\nSTAGE. //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E jettison\n\nLOCK THROTTLE to 1.0. //F-1A throttle to 100%\n\n//Center engine shutdown at 26s before MS-IC burnout (G \u0026gt;= 3.8g)\n\nCLEARSCREEN.\n\nUNTIL (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 26 {\n  LaunchDisplay(4,2,Outboard:THRUST/Outboard:MAXTHRUST).\n  //WAIT 0.01.\n}\n\nInboard:SHUTDOWN. //Inboard cut-off.\n\nCLEARSCREEN.\n\n//Manage g-forces here?\n\n//Stage MS-IC\nUNTIL Outboard:FLAMEOUT = TRUE {\n  IF Outboard:MAXTHRUST \u0026gt; 0 {//Prevent NAN\n    LaunchDisplay(5,2,Outboard:Thrust/Outboard:MAXTHRUST).\n  }\n  //WAIT 0.01.\n}\n\nPRINT \u0022Main Engine Cut-off   \u0022.\nWAIT 1.\n\nSTAGE. //MS-IC staging.\n\n//Ignite MS-II\n\nCLEARSCREEN.\n\nWAIT 3.\nSTAGE. //MS-II ignition.\nPRINT \u0022Second stage ignition.\u0022.\n\n//Skirt seperation\nWAIT 30.\nSTAGE.\nPRINT \u0022Skirt separation.\u0022.\n\n//\u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E Tower jettison\nWAIT 6.\nAG27 on.\nPRINT \u0022Launch escape tower jettison.\u0022.\n\n//Ignite MS-II and develop guidance to achieve circular orbit at ~200 km - 250 km\n//Code should monitor vert vel and time to AP, but code should find optimal pitch profile for MS-II flight and orbital insertion (lowest possible \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E usage)\n//Set throttle to zero when code terminates.\nSET SHIP:CONTROL:PILOTMAINTHROTTLE to 1. //This will be changed to \u0022set to 0\u0022 when the program is fully written.\u003C/pre\u003E\n\u003Cp\u003E\nSo now the next step in the steering code is to tell the rocket to make a circular orbit after getting mostly out of the atmosphere. \u00A0I feel about 75km is the best time to start this part of the program because with the current gravity turn program, the apoapsis is already at 175 km when \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep happens at about 70km altitude.\n\u003C/p\u003E\n\u003Cp\u003E\nWARNING: MATH AHEAD!!!\n\u003C/p\u003E\n\u003Cp\u003E\nThe first problem is deciding how to tell the rocket to steer itself to match a pre-set apoapsis. \u00A0After some though and looking at equations for orbital velocity, velocity at apoapsis, orbital radius at apoapsis, and more, I decided to try to get the rocket to seek to hit a target apoapsis at secondary engine cut-off (SECO) through a PID loop. \u00A0Using the equations for orbital velocity and apoapsis velocity, I assumed that I\u00A0could represent orbital velocity as a function f(z) times apoapsis velocity:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/NfWzB67.png\u0022 alt=\u0022NfWzB67.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nSubstituting for v_orb and v_ap and solving for f(z), I get:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/JvYRLX2.png\u0022 alt=\u0022JvYRLX2.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nSubstituting that back in and letting v_orb = v_vert*sin(theta), where theta is the rocket pitch angle, and solving for r_ap, or the apoapsis (\u002B radius of the earth),\u00A0I eventually get:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/0ZKzEJE.png\u0022 alt=\u00220ZKzEJE.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nWhere mu = G*M. \u00A0I think I\u0027ll have to solve this for theta since I\u0027ll be measuring errors between the final and current apoapsis to get a pitch for the rocket. \u00A0I\u0027ll also need to limit the outputs so I don\u0027t get hard steering.\n\u003C/p\u003E\n\u003Cp\u003E\nIf anyone wants to check my math, I can post the derivations, but I hope these equations will work for me.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I promise that I\u0027ll actually fly the mission. \u00A0The autopilot is the last huge project I want to work on before I fly it.\n\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-07T06:15:46Z","Content":"\n\u003Cp\u003E\nSo it\u0027s apparently possible for Notepad\u002B\u002B to crash and delete an entire script.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m glad I posted updates, but I just lost a couple of days work because Notepad\u002B\u002B totally deleted my launch script during a crash. \u003Cimg alt=\u0022:/\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon1.png\u0022 title=\u0022:/\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: I found the back-ups. \u00A0My latest code for the launch script is a mess because I\u0027m still constructing the PID controller for orbital insertion.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//Saturn VB Autopilot program\n//Ctrl \u002B C to kill?\n\nRUNPATH(\u0022AresLaunchDisplay.ks\u0022).\n\nSET ddyn to 0.\nSET dynzero to 0.\n\n//If variables are lists, can I accees each element in loops below and make code more efficient?\nSET Inboard to SHIP:PARTSTAGGED(\u0022F1AInboard\u0022)[0].\nSET Outboard to SHIP:PARTSTAGGED(\u0022F1AOutboard1\u0022)[0].\nSET \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E to SHIP:PARTSTAGGED(\u0022SRB1\u0022)[0].\nSET MSIC to SHIP:PARTSTAGGED(\u0022MS-IC\u0022)[0].\n\nCLEARSCREEN. //in case we need this\n\n//Display event, throttle setting, F-1A thrust %, and \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust %.\n//Lock steering to a variable to make it less intensive to run?\nLOCK STEERING to Autopilot.\nLOCK Autopilot to \u0022Kill\u0022.\nLOCK THROTTLE to 1.0.\n\n//Temp - steering debug - delete after use\n//SET STEERINGMANAGER:SHOWSTEERINGSTATS to TRUE.\nSET STEERINGMANAGER:SHOWFACINGVECTORS to TRUE.\nSET STEERINGMANAGER:SHOWANGULARVECTORS to TRUE.\nSTAGE. //F-1A ignition\n\n//Ultimate goal of steering program is to set rocket into pre-programmed circular orbit of 200 km - 250 km.\n//Pitch by x degrees, then follow prograde until rocket reaches certain altitude.\n//Finally, manage pitch to put Ares in circular orbit.\n//In launches using manual steering, Ares ends gravity turn between \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep and MS-IC burnout.\n\n//Adjust heading to meet propulsion stack inclination (or desired inclination).  Could have this able to be set as input prior to launch.\n\n//At v(sfc) = 50 m/s, pitch over a bit to initiate gravity turn.\n//then hold prograde for gravity turn. (angle between v and a zero.)\n\n//Pitch and roll manuever.  Correct initial pitch is trial and error right now.\n//Could the gravity turn be better programmed as a diff eq (predictive equation)?\n\n//Print that gravity turn is in progress - Integrate with LaunchDisplay function?\n\nWHEN SHIP:VELOCITY:SURFACE:MAG \u0026gt;= 50 THEN {\n  //Pitch then roll for inclination (90 degrees for now). - smooth out move to pitch?\n  LOCK Autopilot to HEADING(90,80). //175 km AP at \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep.  \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep at 70 km. -  Last setting, 78 degrees pitch, then 83\n  IF ROUND(VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR))) = 90 {\n    Return true.\n  }\n  //ELSE {\n    //Return false.\n  //}\n  //Follow prograde next.\n  WHEN SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z \u0026lt;= 0 THEN { //might need to change this condition\n   LOCK Autopilot to SHIP:VELOCITY:SURFACE. //SHIP:VELOCITY:SURFACE or SHIP:SRFPROGRADE?\n   PRINT \u0022Begin Gravity Turn\u0022 at (0,10).   \n   //Start PID loop for hitting set apoapsis - lasts until SECO.\n   //Output pitch (or yaw) based on set final apoapsis.\n   WHEN SHIP:ALTITUDE \u0026gt; 75000 THEN { //75000\n     PRINT \u0022Initiate Closed-Loop Steering\u0022 at (0,10).\n     SET PID TO PIDLOOP(). // do once (Kp, Ki, Kd, Minoutput, Maxoutput) - Max and min output probaby needs to be updated\n\t SET PID:SETPOINT to 250000. //do once\n\t //SET Distance to PID:UPDATE(TIME:SECONDS, SHIP:ORBIT:APOAPSIS).  //PID Initialization (possibly incorrect).\n\t //LOCK Autopilot to HEADING(90,PID:OUTPUT).  //do once \u0026lt;= this PID:OUTPUT needs to update somewhere.  Then condition engine shutdown in staging part.\n     LOCK Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)). //initialize PID?\n\t UNLOCK Autopilot. //temp\n\t WHEN SHIP:APOAPSIS \u0026lt;\u0026gt; SHIP:PERIAPSIS THEN\t { //\u0026lt;= might be dubious SECO condition if AP shoots past PE between physics ticks.\n\t   //SET Pitch1 TO SHIP:DIRECTION:YAW.\n\t   PRINT \u0022Pitch correction: \u0022 \u002B Pitch1 at (0,4).\n\t   PRINT \u0022PID Input:\u0022 \u002B PID:INPUT at (0,5).  //Apoapsis\n\t   PRINT \u0022PID Output :\u0022 \u002B PID:OUTPUT at (0,6). // Error\n\t   PRINT \u0022Error: \u0022 \u002B PID:ERROR at (0,7).\n\t   PRINT PID:SETPOINT - SHIP:ORBIT:APOAPSIS at (0,8).\n\t   SET Distance to PID:UPDATE(TIME:SECONDS, SHIP:ORBIT:APOAPSIS).\n\t   //If Distance \u0026lt; 0 { //is Pitch \u0026lt; 0 ever?\n\t     //SET Pitch1 to ARCSIN(-SQRT(((ABS(Distance)\u002BEARTH:RADIUS)*(SHIP:VERTICALSPEED)^2)/(((2*SHIP:ORBIT:SEMIMAJORAXIS/SHIP:ALTITUDE\u002BEARTH:RADIUS)-1)*(1\u002BORBIT:ECCENTRICITY)*EARTH:MU))).\n\t   //}\n\t   //ELSE {\n\t     SET Pitch1 to ARCSIN(SQRT(((Distance\u002BEARTH:RADIUS)*(SHIP:VERTICALSPEED)^2)/(((2*SHIP:ORBIT:SEMIMAJORAXIS/(SHIP:ALTITUDE\u002BEARTH:RADIUS))-1)*(1\u002BORBIT:ECCENTRICITY)*EARTH:MU))).\n\t   //}\n       //SET Autopilot TO HEADING(90,30). //Set this to current pitch \u002B pitch correction.\n       RETURN true.\t   \n\t }\n   }  \n  }\n}\n\n//Countdown here?\n\nUNTIL (Outboard:THRUST/Outboard:MAXTHRUST) \u0026gt; 0.88 {\n  IF(Outboard:MAXTHRUST \u0026gt; 0) {  //Prevent NAN\n    LaunchDisplay(0,2,Outboard:THRUST/Outboard:MAXTHRUST,0).\n  }\n  \n  //WAIT 0.01.\n}\n\nSTAGE.  //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E ignition and liftoff\nCLEARSCREEN.\n\n//Maybe countdown and abort mode display.\n\n//WAIT 0.01.\n\n//Display loop could continue on with a PRESERVE command after throttleback?\nUNTIL MISSIONTIME \u0026gt; 25 {\n  IF(\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026gt; 0 AND \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST \u0026gt; 0) { //Prevent NAN\n    //PRINT VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)) at (0,4).\n    //PRINT \u0022Facing-vel srf Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, SHIP:VELOCITY:SURFACE) \u002B \u0022  \u0022 at (0,4).\n\t//PRINT \u0022Facing Z - Vel Srf Z (Normalized): \u0022 \u002B (SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z) at (0,5).\n\t//PRINT \u0022Facing-target Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, STEERINGMANAGER:TARGET:VECTOR) \u002B \u0022  \u0022 at (0,6).\n    //PRINT \u0022Facing - Target: \u0022 \u002B (SHIP:FACING:VECTOR:Z - STEERINGMANAGER:TARGET:VECTOR:Z) \u002B \u0022  \u0022 at (0,7).\n    //PRINT \u0022Facing Z: \u0022 \u002B SHIP:FACING:VECTOR:Z \u002B \u0022  \u0022at (0,8).\n    //PRINT \u0022Vel Srf Z: \u0022 \u002B SHIP:VELOCITY:SURFACE:Z \u002B \u0022  \u0022at (0,9).\n    LaunchDisplay(1,2,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  }\n  //WAIT 0.01.\n}\n\nCLEARSCREEN.\n\nLOCK THROTTLE to 0.01. //F-1A throttle to 60% for max Q\n\n//check dyn pressure change\n//if ddyn \u0026lt; -0.004kPa/0.01s or so, throttle to 85% (was -0.04kPa/0.1s)\n\nUNTIL ddyn \u0026lt;= -0.004 {\n  LaunchDisplay(2,0,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  SET ddyn TO (SHIP:Q*constant:ATMtokPa) - dynzero. //units are kPa \u0026lt;- can be lock statement\n  SET dynzero TO (SHIP:Q*constant:ATMtokPa). //\u0026lt;- these can be LOCK statements\n  WAIT 0.01. //change to 0.1? \u0026lt;- can remove this when using lock and dividing by time.\n}\n\nLOCK THROTTLE to 0.63. //F-1A throttle to 85%\n\nCLEARSCREEN.\n\n//4\u002BGs before \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E tail-off.\n\n//Stage SRBs and throttle to 100% when \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust \u0026lt; 10%\nUNTIL \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026lt; .1 {\n  LaunchDisplay(3,1,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  //WAIT 0.01.\n}\n\nSTAGE. //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E jettison\n\nLOCK THROTTLE to 1.0. //F-1A throttle to 100%\n\n//Center engine shutdown at 26s before MS-IC burnout (G \u0026gt;= 3.8g)\n\nCLEARSCREEN.\n\nUNTIL (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 26 {\n  LaunchDisplay(4,2,Outboard:THRUST/Outboard:MAXTHRUST).\n  //WAIT 0.01.\n}\n\nInboard:SHUTDOWN. //Inboard cut-off.\n\nCLEARSCREEN.\n\n//Manage g-forces here?\n\n//Stage MS-IC\nUNTIL Outboard:FLAMEOUT = TRUE {\n  IF Outboard:MAXTHRUST \u0026gt; 0 {//Prevent NAN\n    LaunchDisplay(5,2,Outboard:Thrust/Outboard:MAXTHRUST).\n  }\n  //WAIT 0.01.\n}\n\nPRINT \u0022Main Engine Cut-off   \u0022.\nWAIT 1.\n\nSTAGE. //MS-IC staging.\n\n//Ignite MS-II\n\nCLEARSCREEN.\n\nWAIT 3.\nSTAGE. //MS-II ignition.\nPRINT \u0022Second stage ignition.\u0022.\n\n//Skirt seperation\nWAIT 30.\nSTAGE.\nPRINT \u0022Skirt separation.\u0022.\n\n//\u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E Tower jettison\nWAIT 6.\nAG27 on.\nPRINT \u0022Launch escape tower jettison.\u0022.\n\n//Ignite MS-II and develop guidance to achieve circular orbit at ~200 km - 250 km\n//Code should monitor vert vel and time to AP, but code should find optimal pitch profile for MS-II flight and orbital insertion (lowest possible \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E usage)\n//Set throttle to zero when code terminates.\nSET SHIP:CONTROL:PILOTMAINTHROTTLE to 1. //This will be changed to \u0022set to 0\u0022 when the program is fully written.\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-07T06:28:50Z\u0022 title=\u002203/07/2017 06:28  AM\u0022 data-short=\u00227 yr\u0022\u003EMarch 7, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"stratochief66","CreatedById":59541,"CreatedDateTime":"2017-03-09T04:00:32Z","Content":"\n\u003Cp\u003E\nAmazing to see you carry through this Journey for so many months! I remember seeing the MEM while \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/136290-tiktaalikdreaming/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022136290\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/136290-tiktaalikdreaming/\u0022 rel=\u0022\u0022\u003E@TiktaalikDreaming\u003C/a\u003E\u00A0was initially creating it. I wanted to make the \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E configs for it, but then got busy, and I\u0027m really happy to see that someone else did a pretty good job of it. I wasn\u0027t able to find an \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E craft file of it, but I assembled it today and landed it a few times in Hellas, because I like easy mode. \u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI tried making the triple S-II TMI Journey type craft a few times in the past, but I always get heavy boiloff and abandoned the task. Now I\u0027m mostly working on adding and configuring enough components to carry out a late 70s or 80s Mars Direct style mission.\n\u003C/p\u003E\n\u003Cp\u003E\nKeep it up, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/123570-nittany-tiger/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022123570\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/123570-nittany-tiger/\u0022 rel=\u0022\u0022\u003E@Nittany Tiger\u003C/a\u003E, your journey is an inspiration for us Mars lovers. \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-09T07:19:48Z","Content":"\n\u003Cp\u003E\nThanks. \u00A0If I can nail this autopilot program, I\u0027ll be almost ready to go. \u00A0Of course, I could just skip making it entirely because I\u0027ve flown the Saturn VB into orbit manually many times, and in fact how I get it to make orbit is how I\u0027m trying to tell kOS to put it in orbit. \u00A0Just not sure if I\u0027ll have to resort to using huge derivatives or use preset pitches. \u00A0I had to ditch guiding by apoapsis difference because the guidance failed after the rocket passed apoapsis.\n\u003C/p\u003E\n\u003Cp\u003E\nDid you set your tanks to the cryogenic type? \u00A0I had to do that, and my tests show that if you use cryogenic tanks, the boil-off is reduced drastically. \u00A0You won\u0027t lose all of your LH2 in days or weeks. \u00A0Of course, I have yet to fly the mission, but it\u0027s only supposed to be 500\u002B days total, which cryo tanks can handle. \u00A0FASA does default to default type tanks, but there\u0027s a setting in one of the config files to change FASA tanks to cryogenic, and it\u0027s what I did and it works.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, I don\u0027t know when I\u0027ll fly the mission soon, but hopefully within the month if I can get this autopilot functioning. \u00A0Pretty much only want to do texture swap after that along with some minor final tests, and I\u0027ll be GO for Mars.\n\u003C/p\u003E\n"},{"CreatedByName":"stratochief66","CreatedById":59541,"CreatedDateTime":"2017-03-09T17:28:28Z","Content":"\n\u003Cp\u003E\nI\u0027ll have to check the tank type, try that again. I thought I changed it, but I may have gone to BalloonCryo, which perhaps isn\u0027t as good. If you find and share the setting you changed that you know worked, i\u0027d appreciate it. \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nWe could/should start (or find a pre-existing) threat for complex \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E/RF automation like kOS or KRPC. IIIRC, I used \u0022time to apo\u0022 as an input for my final orbital insertion program, but I had to do something clever so that it turned into a negative number when I was past AP, rather than a very large number. I think I used the orbital period, like: usefulAP =\u00A0timeToAP - \u00A0orbitalPeriod when timeToAP was greater than 1000 seconds or something. I know \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/99662-agathorn/\u0026amp;do=hovercard\u0022 data-mentionid=\u002299662\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/99662-agathorn/\u0022 rel=\u0022\u0022\u003E@Agathorn\u003C/a\u003E\u00A0and \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/77242-bevolj/\u0026amp;do=hovercard\u0022 data-mentionid=\u002277242\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/77242-bevolj/\u0022 rel=\u0022\u0022\u003E@BevoLJ\u003C/a\u003E\u00A0have strong kOS/KRPC automation skills.\n\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-10T01:48:49Z","Content":"\n\u003Cp\u003E\nIf you\u0027re using TOA, then you\u0027d just flip the sign or flip a difference in the calculation. \u00A0The calculation for TOA is somewhere.\n\u003C/p\u003E\n\u003Cp\u003E\nI actually changed to monitoring vertical velocity and having the code aim for zero vertical acceleration. \u00A0It works, but it\u0027s still a bit inaccurate. \u00A0When I launch manually, I always check apoapsis and vertical velocity and aim to get my vertical velocity at zero right at SECO to get a circular orbit. \u00A0As for a preset apoapsis, that might depend on initial pitch deflection.\n\u003C/p\u003E\n\u003Cp\u003E\nThe most straightforward thing I could do is to use this equation:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/Xb7P65y.png\u0022 alt=\u0022Xb7P65y.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI feel that\u0027s too much for a simple autopilot though. \u00A0I have thought about using a relation between pitch angle and other variables like apoapsis, but I get this:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/0ZKzEJE.png\u0022 alt=\u00220ZKzEJE.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAnd if I solve for theta, I get:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/naHSyhO.png\u0022 alt=\u0022naHSyhO.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI assume that I can treat PID outputs as changes, so I think I could take the time derivative of this equation to get a formula that might give me a way to get an accurate pitch difference for a change in apoapsis and vertical velocity. \u00A0Here\u0027s the problem, though. \u00A0All of the variables except mu are dependent on time. \u00A0In other words:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/CQgZ4OQ.png\u0022 alt=\u0022CQgZ4OQ.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nSo gotta break out that chain rule for d(theta)/dt. \u00A0I get\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/7JqZG41.png\u0022 alt=\u00227JqZG41.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nSo a lot of derivatives to do, and I have to track the time rate of change of any variable that\u0027s not part of a PID loop. \u00A0I\u0027m still working the partials out, so I can do the calculus, but I don\u0027t know if using this equation and treating some or even all of the total derivatives as PID outputs will give me a good way to steer my rocket near and above the Karman line (where drag is negligible). \u00A0All I can do is test it later.\n\u003C/p\u003E\n\u003Cp\u003E\nRight now, I think I can make a rough guidance controller measuring vertical velocity. \u00A0This is the steering portion of my code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nWHEN SHIP:VELOCITY:SURFACE:MAG \u0026gt;= 50 THEN {\n  //Pitch then roll for inclination (90 degrees for now). - smooth out move to pitch?\n  LOCK Autopilot to HEADING(90,80). //175 km AP at \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep.  \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep at 70 km. -  Last setting, 78 degrees pitch, then 83\n  IF ROUND(VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR))) = 90 {\n    Return true.\n  }\n  //ELSE {\n    //Return false.\n  //}\n  //Follow prograde next.\n  WHEN SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z \u0026lt;= 0 THEN { //might need to change this condition\n   LOCK Autopilot to SHIP:VELOCITY:SURFACE. //SHIP:VELOCITY:SURFACE or SHIP:SRFPROGRADE?\n   PRINT \u0022Begin Gravity Turn\u0022 at (0,10).   \n   //Start PID loop for hitting set apoapsis - lasts until SECO.\n   //Output pitch (or yaw) based on set final apoapsis. - kill steering at \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep?\n   WHEN SHIP:ALTITUDE \u0026gt; 75000 THEN { //75000 //PID loop assuming no conversion equation between pitch and apoapsis needed.\n     PRINT \u0022Initiate Closed-Loop Steering\u0022 at (0,10).\n     SET PID TO PIDLOOP(Kp,Ki,Kd). // do once (Kp, Ki, Kd, Minoutput, Maxoutput) - Bounces horribly between min and max - pitch corrections too extreme - needs tuning and lower response time (responds too fast) - pitch bouncy between set AP?  Needs deadzone?\n\t SET PID:SETPOINT to 0. //do once\n\t //SET Distance to PID:UPDATE(TIME:SECONDS, SHIP:ORBIT:APOAPSIS).  //PID Initialization (possibly incorrect). \u0026lt;- might want to set this to monitor vertical velocity instead of Apoapsis.\n\t //LOCK Autopilot to HEADING(90,PID:OUTPUT).  //do once \u0026lt;= this PID:OUTPUT needs to update somewhere.  Then condition engine shutdown in staging part.\n     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)). //initialize PID?\n\t //UNLOCK STEERING. //temp\n\t WHEN SHIP:ORBIT:PERIAPSIS \u0026lt; 0 THEN { //\u0026lt;= might be dubious SECO condition if AP shoots past PE between physics ticks.\n\t   //SET Pitch1 TO SHIP:DIRECTION:YAW.\n\t   PRINT \u0022Pitch: \u0022 \u002B Pitch1 at (0,4). //This is quite large.  Might be a bad derivation.\n\t   PRINT \u0022PID Input:\u0022 \u002B PID:INPUT at (0,5).  //Apoapsis\n\t   PRINT \u0022PID Output/Pitch Correction:\u0022 \u002B PID:OUTPUT at (0,6). // Error\n\t   PRINT \u0022Error: \u0022 \u002B PID:ERROR at (0,7).\n\t   PRINT PID:SETPOINT - SHIP:VERTICALSPEED at (0,8).\n\t   SET dPitch to PID:UPDATE(TIME:SECONDS, SHIP:VERTICALSPEED).\n\t   //Could use preset pitch profile from \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep or low atmosphere up until MS-IC sep, then guide towards apoapsis. - Gravity turn -\u0026gt; slow pitch to zero at ~60km -\u0026gt; terminal guidance.\n\t   IF Outboard:FUELFLOW \u0026gt; 0 AND (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 2 AND J2S:FUELFLOW = 0 AND Count = 1 {\n\t     SET Autopilot TO HEADING(90,Pitch1). //Hold pitch for staging. - may set to zero.\n\t   }\n\t   ELSE IF Pitch1 \u0026gt; 15.1 { //Transition from gravity turn.\n\t     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)).\n\t\t PRINT \u0022Pitching Over\u0022 at (0,3).\n\t\t SET Autopilot to HEADING(90,15).\n\t   }\n\t   ELSE IF Pitch1 \u0026lt; 15 AND Pitch1 \u0026gt; -2 { //min and max pitch\n\t     PRINT \u0022Guidance Converging       \u0022 at (0,3).\n\t     SET Pitch1 to Pitch1 \u002B dPitch.\n\t\t SET Autopilot TO HEADING(90,Pitch1). //Set this to current pitch \u002B pitch correction.\n\t   }\n       ELSE {\n\t     PRINT \u0022test\u0022 at (0,3).\n\t     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)).\n\t     SET Autopilot to HEADING(90,Pitch1). //how to pitch gradually from initial pitch to 10?\n\t   }\n\t   LOG MISSIONTIME \u002B \u0022,\u0022 \u002B (PID:SETPOINT - SHIP:VERTICALSPEED) \u002B \u0022,\u0022 \u002B dPitch TO Pitch_VVert_Log.txt.\n       RETURN true.   \n\t }\n    SET Autopilot to HEADING(90,0). //Terminal guidance for PE \u0026gt; 0.\n   }  \n  }\n}\u003C/pre\u003E\n\u003Cp\u003E\nI have Kp set to 0.0002 and no Kd or Ki term. \u00A0I also have Max Stopping Time set to 0.5 for the Steering Manager. \u00A0It causes the rolls to be slow though. \u00A0This is not the final code, so it\u0027s full of comments and commented junk code, and I still think I need to increase Kd in the end.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:rgb(39,42,52);font-family:\u0027Helvetica Neue\u0027, Helvetica, Arial, sans-serif;font-size:14px;font-style:normal;font-weight:normal;letter-spacing:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;background-color:rgb(255,255,255);float:none;\u0022\u003EI\u0027ll have to check the tank type, try that again. I thought I changed it, but I may have gone to BalloonCryo, which perhaps isn\u0027t as good. If you find and share the setting you changed that you know worked, i\u0027d appreciate it.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nLook for the file RO_FASA_Saturn.cfg in GameData\\RealismOverhaul\\RO_SuggestedMods\\FASA\\RO_FASA_Saturn.cfg and find the line that says @PART[FASAApalloLFTJ25XPlate]:FOR[RealismOverhaul]. \u00A0This is the part module for the S-II stage tank and engine mounts.\u00A0 Scroll down until you see\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nMODULE\n\t{\n\t\tname = ModuleFuelTanks\n\t\tvolume = 332353.8\n\t\ttype = Default\n\t\tbasemass = -1\n\t}\u003C/pre\u003E\n\u003Cp\u003E\nChange the Default to Cryogenic and you\u0027re good to go. \u00A0For the S-IVB, just find the\u00A0@PART[FASAApalloLFTJ2Plate]:FOR[RealismOverhaul] line and do the same thing.\n\u003C/p\u003E\n\u003Cp\u003E\nI would think Balloon cryo would work as well, but I\u0027m not sure. \u00A0To be honest, I haven\u0027t flown the Ares Propulsion Stack on a mission yet, so it could encounter boil-off issues that I\u0027m not aware of yet especially near the Venus Fly-By when it\u0027s the closest to the sun.\n\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-11T23:11:42Z","Content":"\n\u003Cp\u003E\nUpdate time.\n\u003C/p\u003E\n\u003Cp\u003E\nCleaned-up code steering code. \u00A0Think the count variable is unnecessary now.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//Saturn VB Autopilot program\n//Ctrl \u002B C to kill?\n\nRUNPATH(\u0022AresLaunchDisplay.ks\u0022).\n\nSET ddyn to 0.\nSET dynzero to 0.\n\nSET Count to 0. //\u0026lt;- local define later\n\n//If variables are lists, can I accees each element in loops below and make code more efficient?\nSET Inboard to SHIP:PARTSTAGGED(\u0022F1AInboard\u0022)[0].\nSET Outboard to SHIP:PARTSTAGGED(\u0022F1AOutboard1\u0022)[0].\nSET J2S to SHIP:PARTSTAGGED(\u0022J2S\u0022)[0].\nSET \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E to SHIP:PARTSTAGGED(\u0022SRB1\u0022)[0].\nSET MSIC to SHIP:PARTSTAGGED(\u0022MS-IC\u0022)[0].\n\nCLEARSCREEN. //in case we need this\n\n//Display event, throttle setting, F-1A thrust %, and \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust %.\n//Lock steering to a variable to make it less intensive to run?\nLOCK STEERING to Autopilot.\nLOCK Autopilot to \u0022Kill\u0022.\nLOCK THROTTLE to 1.0.\n\n//Temp - steering debug - delete after use\n//SET STEERINGMANAGER:SHOWSTEERINGSTATS to TRUE.\nSET STEERINGMANAGER:SHOWFACINGVECTORS to TRUE.\nSET STEERINGMANAGER:SHOWANGULARVECTORS to TRUE.\n\nSET STEERINGMANAGER:MAXSTOPPINGTIME to 0.7. //default value 2\nSTAGE. //F-1A ignition\n\nSet Kp to 0.0045. //last value 0.0015.  0.0025 gets 225km x 201 km. v_vert final 11.92 m/s.  0.0015 gets 234 km x 201 km. 0.0035 gets 220 km x 201 km with v_vert of 9.671 m/s. 0.0045 gets 218 km x 201 km with v_vert of 10.32 m/s.\nSet Ki to 0.\nSet Kd to 0.\n\n//Tuning Pitch PID for terminal guidance.\nLOG \u0022Pitch PID Tuning\u0022 TO Pitch_VVert_Log.txt.\nLOG \u0022Kp:\u0022 \u002B Kp \u002B \u0022,Ki:\u0022 \u002B Ki \u002B \u0022,Kd:\u0022 \u002B Kd TO Pitch_VVert_Log.txt.\nLOG \u0022t,Verical Velocity Deviation:,Pitch Correction:\u0022 TO Pitch_VVert_Log.txt.\n\n//Ultimate goal of steering program is to set rocket into pre-programmed circular orbit of 200 km - 250 km.\n//Pitch by x degrees, then follow prograde until rocket reaches certain altitude.\n//Finally, manage pitch to put Ares in circular orbit.\n//In launches using manual steering, Ares ends gravity turn between \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep and MS-IC burnout.\n\n//Adjust heading to meet propulsion stack inclination (or desired inclination).  Could have this able to be set as input prior to launch.\n\n//At v(sfc) = 50 m/s, pitch over a bit to initiate gravity turn.\n//then hold prograde for gravity turn. (angle between v and a zero.)\n\n//Pitch and roll manuever.  Correct initial pitch is trial and error right now.\n//Could the gravity turn be better programmed as a diff eq (predictive equation)?\n\n//Print that gravity turn is in progress - Integrate with LaunchDisplay function?\n\n//Guidance control.\nWHEN SHIP:VELOCITY:SURFACE:MAG \u0026gt;= 50 THEN {\n  //Pitch then roll for inclination (90 degrees for now). - smooth out move to pitch?\n  LOCK Autopilot to HEADING(90,80). //175 km AP at \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep.  \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep at 70 km. -  Last setting, 78 degrees pitch, then 83\n  IF ROUND(VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR))) = 90 { //Sometimes, the rocket pointing straight up causes next when trigger to be true, so this line prevents a vertical launch from triggering the gravity turn code.\n    Return true.\n  }\n  //Gravity turn - Follow prograde next.\n  WHEN SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z \u0026lt;= 0 THEN { //might need to change this condition\n   LOCK Autopilot to SHIP:VELOCITY:SURFACE. //SHIP:VELOCITY:SURFACE or SHIP:SRFPROGRADE?\n   PRINT \u0022Begin Gravity Turn\u0022 at (0,10).   \n   WHEN SHIP:ALTITUDE \u0026gt; 75000 THEN { //At 75km, start program to control pitch based on current rocket path - currently monitors vertical velocity.\n     PRINT \u0022Initiate Closed-Loop Steering\u0022 at (0,10).\n     SET PID TO PIDLOOP(Kp,Ki,Kd). // do once (Kp, Ki, Kd, Minoutput, Maxoutput) - Bounces horribly between min and max - pitch corrections too extreme - needs tuning and lower response time (responds too fast) - pitch bouncy between set AP?  Needs deadzone?\n\t SET PID:SETPOINT to 0. //do once\n     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)). //initialize PID?\n\t WHEN true THEN { //\u0026lt;= loops until PE \u0026gt; 0.\n\t   PRINT \u0022Pitch: \u0022 \u002B Pitch1 at (0,4). //This is quite large.  Might be a bad derivation.\n\t   PRINT \u0022PID Input:\u0022 \u002B PID:INPUT at (0,5).  //Apoapsis\n\t   PRINT \u0022PID Output/Pitch Correction:\u0022 \u002B PID:OUTPUT at (0,6). // Error\n\t   PRINT \u0022Error: \u0022 \u002B PID:ERROR at (0,7).\n\t   PRINT PID:SETPOINT - SHIP:VERTICALSPEED at (0,8).\n\t   SET dPitch to PID:UPDATE(TIME:SECONDS, SHIP:VERTICALSPEED).\n\t   IF Outboard:FUELFLOW \u0026gt; 0 AND (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 2 AND J2S:FUELFLOW = 0 AND Count = 1 { //Hold pitch for MS-IC/MS-II staging.\n\t     SET Autopilot TO HEADING(90,Pitch1).\n\t   }\n\t   ELSE IF Pitch1 \u0026gt; 15 { //Transition from gravity turn or oversteer past maximum.\n\t     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)).\n\t\t PRINT \u0022Pitching Over      \u0022 at (0,3). //change this text?\n\t\t SET Autopilot to HEADING(90,14.9).\n\t   }\n\t   ELSE IF Pitch1 \u0026lt; 15 AND Pitch1 \u0026gt; 0 { //min and max pitch\n\t     PRINT \u0022Guidance Converging       \u0022 at (0,3).\n\t     SET Pitch1 to Pitch1 \u002B dPitch.\n\t\t SET Autopilot TO HEADING(90,Pitch1).\n\t   }\n       ELSE IF SHIP:ORBIT:PERIAPSIS \u0026gt; 0 { //This sets pitch to zero for final orbital insertion to make orbit as circular as possible.\n\t     PRINT \u0022Terminal Guidance      \u0022 at (0,3).\n         LOCK Autopilot to HEADING(90,0). //Terminal guidance for PE \u0026gt; 0.\n\t\t RETURN false. //Kill steering loop.\n\t   }\n\t   ELSE { //oversteer past minimum\n\t     PRINT \u0022test\u0022 at (0,3).\n\t     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)).\n\t     SET Autopilot to HEADING(90,0). //how to pitch gradually from initial pitch to 15 - how is this getting triggered after PE \u0026gt; 0?\n\t   }\n\t   IF SHIP:VERTICALSPEED \u0026lt; 150{\n\t     PRINT \u0022Logging\u0022 at (0,11).\n\t     LOG MISSIONTIME \u002B \u0022,\u0022 \u002B (PID:SETPOINT - SHIP:VERTICALSPEED) \u002B \u0022,\u0022 \u002B dPitch TO Pitch_VVert_Log.txt.\n       }\n       RETURN true.\t   \n\t }  \n   }  \n  }\n}\n\n//Staging control.\n//Countdown here?\n\n//F-1A Ignition\nUNTIL (Outboard:THRUST/Outboard:MAXTHRUST) \u0026gt; 0.88 {\n  IF(Outboard:MAXTHRUST \u0026gt; 0) {  //Prevent NAN\n    //PRINT STEERINGMANAGER:MAXSTOPPINGTIME at (0,4).\n    LaunchDisplay(0,2,Outboard:THRUST/Outboard:MAXTHRUST,0).\n  }\n  \n  //WAIT 0.01.\n}\n\nSTAGE.  //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E Ignition and Liftoff\nCLEARSCREEN.\n\n//Maybe countdown and abort mode display.\n\n//WAIT 0.01.\n\n//Display loop could continue on with a PRESERVE command after throttleback?\nUNTIL MISSIONTIME \u0026gt; 25 {\n  IF(\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026gt; 0 AND \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST \u0026gt; 0) { //Prevent NAN\n    //PRINT VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)) at (0,4).\n    //PRINT \u0022Facing-vel srf Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, SHIP:VELOCITY:SURFACE) \u002B \u0022  \u0022 at (0,4).\n\t//PRINT \u0022Facing Z - Vel Srf Z (Normalized): \u0022 \u002B (SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z) at (0,5).\n\t//PRINT \u0022Facing-target Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, STEERINGMANAGER:TARGET:VECTOR) \u002B \u0022  \u0022 at (0,6).\n    //PRINT \u0022Facing - Target: \u0022 \u002B (SHIP:FACING:VECTOR:Z - STEERINGMANAGER:TARGET:VECTOR:Z) \u002B \u0022  \u0022 at (0,7).\n    //PRINT \u0022Facing Z: \u0022 \u002B SHIP:FACING:VECTOR:Z \u002B \u0022  \u0022at (0,8).\n    //PRINT \u0022Vel Srf Z: \u0022 \u002B SHIP:VELOCITY:SURFACE:Z \u002B \u0022  \u0022at (0,9).\n    LaunchDisplay(1,2,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  }\n  //WAIT 0.01.\n}\n\nCLEARSCREEN.\n\nLOCK THROTTLE to 0.01. //F-1A throttle to 60% for max Q\n\n//check dyn pressure change\n//if ddyn \u0026lt; -0.004kPa/0.01s or so, throttle to 85% (was -0.04kPa/0.1s)\n\nUNTIL ddyn \u0026lt;= -0.01 { //originally 0.004\n  LaunchDisplay(2,0,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  SET ddyn TO (SHIP:Q*constant:ATMtokPa) - dynzero. //units are kPa \u0026lt;- can be lock statement\n  SET dynzero TO (SHIP:Q*constant:ATMtokPa). //\u0026lt;- these can be LOCK statements\n  WAIT 0.01. //change to 0.1? \u0026lt;- can remove this when using lock and dividing by time.\n}\n\nLOCK THROTTLE to 0.63. //F-1A throttle to 85%\n\nCLEARSCREEN.\n\n//4\u002BGs before \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E tail-off.\n\n//Stage SRBs and throttle to 100% when \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust \u0026lt; 10%\nUNTIL \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026lt; .1 {\n  LaunchDisplay(3,1,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  //WAIT 0.01.\n}\n\nSTAGE. //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E jettison\n\nLOCK THROTTLE to 1.0. //F-1A throttle to 100%\n\n//Center engine shutdown at 26s before MS-IC burnout (G \u0026gt;= 3.8g)\n\nCLEARSCREEN.\n\nUNTIL (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 26 {\n  LaunchDisplay(4,2,Outboard:THRUST/Outboard:MAXTHRUST).\n  //WAIT 0.01.\n}\n\nInboard:SHUTDOWN. //Inboard cut-off.\n\nCLEARSCREEN.\n\n//Manage g-forces here?\n\n//Remainder of MS-IC Flight\nUNTIL Outboard:FLAMEOUT = TRUE {\n  IF Outboard:MAXTHRUST \u0026gt; 0 {//Prevent NAN\n    LaunchDisplay(5,2,Outboard:Thrust/Outboard:MAXTHRUST).\n  }\n  //WAIT 0.01.\n}\n\n//Main Engine Cut-Off\nCLEARSCREEN.\nLaunchDisplay(6,3,0).\nWAIT 1.\n\n\nCLEARSCREEN.\nSTAGE. //MS-IC Staging.\nLaunchDisplay(7,3,0).\nWAIT 3.\n\nCLEARSCREEN.\n\n\nSTAGE. //MS-II Ignition.\nSET t0 to TIME:SECONDS.\n\nUNTIL TIME:SECONDS - t0 \u0026gt; 30 {\n  LaunchDisplay(8,2,J2S:THRUST/J2S:MAXTHRUST).\n} \n\nCLEARSCREEN.\n\n\nSTAGE. //Skirt seperation\nSet t0 to TIME:SECONDS.\n\nUNTIL TIME:SECONDS - t0 \u0026gt; 6 {\n  LaunchDisplay(9,2,J2S:THRUST/J2S:MAXTHRUST).\n}\n\nCLEARSCREEN.\n\nAG27 on. //\u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E Tower jettison \u0026lt;- this event will be moved in final code.\nUNTIL SHIP:ORBIT:PERIAPSIS \u0026gt;= 200000 { //set to be higher than set apoapsis \u0026lt;- could set this to AP when PE = 0 to attempt circularization.\n  LaunchDisplay(10,2,J2S:THRUST/J2S:MAXTHRUST).\n}\n\n//SECO - Orbit insertion.\nCLEARSCREEN.\nLOCK THROTTLE to 0.\n\nPRINT \u0022Secondary Engine Cut-Off\u0022 at (0,2).\nPRINT \u0022Go for Orbit\u0022 at (0,3).\n\n//Keep code running until SECO (Periapsis \u0026gt; 200 km or 250 km?)\n\nSET SHIP:CONTROL:PILOTMAINTHROTTLE to 0. //Current final orbit 234 km x 201 km\u003C/pre\u003E\n\u003Cp\u003E\nBeen tweaking Kp to see how it affects the steering, mainly focusing on the final orbit and final vertical velocity.\n\u003C/p\u003E\n\u003Ctable border=\u00223\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:550px;\u0022\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\nKp\n\u003C/td\u003E\n\u003Ctd\u003E\nApoapsis (km)\n\u003C/td\u003E\n\u003Ctd\u003E\nPeriapsis (km)\n\u003C/td\u003E\n\u003Ctd\u003E\nFinal Vertical Velocity (m/s)\n\u003C/td\u003E\n\u003Ctd\u003E\ndelta Q (kPa/0.01s)\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0015\n\u003C/td\u003E\n\u003Ctd\u003E\n234\n\u003C/td\u003E\n\u003Ctd\u003E\n201\n\u003C/td\u003E\n\u003Ctd\u003E\nN/A\n\u003C/td\u003E\n\u003Ctd\u003E\n-0.004\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0025\n\u003C/td\u003E\n\u003Ctd\u003E\n225\n\u003C/td\u003E\n\u003Ctd\u003E\n201\n\u003C/td\u003E\n\u003Ctd\u003E\n11.92\n\u003C/td\u003E\n\u003Ctd\u003E\n-0.004\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0035\n\u003C/td\u003E\n\u003Ctd\u003E\n220\n\u003C/td\u003E\n\u003Ctd\u003E\n201\n\u003C/td\u003E\n\u003Ctd\u003E\n9.671\n\u003C/td\u003E\n\u003Ctd\u003E\n-0.006\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0045\n\u003C/td\u003E\n\u003Ctd\u003E\n218\n\u003C/td\u003E\n\u003Ctd\u003E\n201\n\u003C/td\u003E\n\u003Ctd\u003E\n10.32\n\u003C/td\u003E\n\u003Ctd\u003E\n-0.01\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003Cp\u003E\nI\u0027m hoping to get the final vertical velocity as low as possible so I can set the code to have the periapsis match the apoapsis.\n\u003C/p\u003E\n\u003Cp\u003E\nDelta Q is the setting in the code that triggers F-1A throttle-up after the max Q throttleback. \u00A0Higher settings mean a later throttle-up, and I changed this setting to lower the max Q below 40 kPa. \u00A0Given that I need to throttle the F-1As back after max Q due to high G loading (\u0026lt; 4 Gs and sometimes \u0026lt; 4.5 Gs at times), I think I\u0027ll work on the final throttle guidance before I tune the PID loop any more.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, finished the time derivative of \u003Cimg src=\u0022http://i.imgur.com/naHSyhO.png\u0022 alt=\u0022naHSyhO.png\u0022\u003E . \u00A0I\u0027ll save this equation for a more robust autopilot program in the future.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg src=\u0022http://i.imgur.com/w3XKpPD.png\u0022 alt=\u0022w3XKpPD.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"BevoLJ","CreatedById":77242,"CreatedDateTime":"2017-03-12T03:06:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222980840\u0022 data-ipsquote-contentid=\u0022146593\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221489080508\u0022 data-ipsquote-userid=\u002259541\u0022 data-ipsquote-username=\u0022stratochief66\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 3/9/2017 at 11:28 AM, stratochief66 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ll have to check the tank type, try that again. I thought I changed it, but I may have gone to BalloonCryo, which perhaps isn\u0027t as good. If you find and share the setting you changed that you know worked, i\u0027d appreciate it. \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nWe could/should start (or find a pre-existing) threat for complex \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E/RF automation like kOS or KRPC. IIIRC, I used \u0022time to apo\u0022 as an input for my final orbital insertion program, but I had to do something clever so that it turned into a negative number when I was past AP, rather than a very large number. I think I used the orbital period, like: usefulAP =\u00A0timeToAP - \u00A0orbitalPeriod when timeToAP was greater than 1000 seconds or something. I know \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/99662-agathorn/\u0026amp;do=hovercard\u0022 data-mentionid=\u002299662\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/99662-agathorn/\u0022 rel=\u0022\u0022\u003E@Agathorn\u003C/a\u003E\u00A0and \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/77242-bevolj/\u0026amp;do=hovercard\u0022 data-mentionid=\u002277242\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/77242-bevolj/\u0022 rel=\u0022\u0022\u003E@BevoLJ\u003C/a\u003E\u00A0have strong kOS/KRPC automation skills.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\no/ Chief! \u00A0=)\n\u003C/p\u003E\n\u003Cp\u003E\nIf we are talking about pitch adjustments for circularising orbits at ap or pe, I use mean anomaly.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n_ap_deltaDeg = np.rad2deg(self.mean_anomaly()) - 180  # launch circ and hohmann xfers\u003C/pre\u003E\n\u003Cp\u003E\nfor hohmann xfer burns at pe, I just use the mean anomaly straight for pitch adjustments. \u00A0=)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-12T03:09:30Z\u0022 title=\u002203/12/2017 03:09  AM\u0022 data-short=\u00227 yr\u0022\u003EMarch 12, 2017\u003C/time\u003E by BevoLJ\u003C/strong\u003E\n\u003Cbr\u003Eapparently can\u0026#039;t spell \u0026quot;hohmann\u0026quot;\n\u003C/span\u003E\n"},{"CreatedByName":"BevoLJ","CreatedById":77242,"CreatedDateTime":"2017-03-12T03:58:53Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222981330\u0022 data-ipsquote-contentid=\u0022146593\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221489110529\u0022 data-ipsquote-userid=\u0022123570\u0022 data-ipsquote-username=\u0022Nittany Tiger\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 3/9/2017 at 7:48 PM, Nittany Tiger said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf you\u0027re using TOA, then you\u0027d just flip the sign or flip a difference in the calculation. \u00A0The calculation for TOA is somewhere.\n\u003C/p\u003E\n\u003Cp\u003E\nI actually changed to monitoring vertical velocity and having the code aim for zero vertical acceleration. \u00A0It works, but it\u0027s still a bit inaccurate. \u00A0When I launch manually, I always check apoapsis and vertical velocity and aim to get my vertical velocity at zero right at SECO to get a circular orbit. \u00A0As for a preset apoapsis, that might depend on initial pitch deflection.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is a fun thread! \u00A0Will need to set aside time this weekend to read it. \u00A0=)\n\u003C/p\u003E\n\u003Cp\u003E\nI do something somewhat similar but rather than vertical speed I use orbital velocities. \u00A0set desired parking orbit and then get the required orbital velocity I will need to achieve that desired parking orbit.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E_mu = gravitational_parameter\n_radius = parkingOrbit_radius             # (parking orbit altitude \u002B parent body radius)\n\ndesiredVelocity = sqrt(_mu / _radius)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI can then use the semi-major axis during launch to predict what my current velocity is at my apoapsis (if I were to cut engines during launch and just go there). \u00A0That way during launch I can see how much I need to change the velocity (deltaV)\u00A0of my apoapsis to achieve the desired parking orbit I want.\n\u003C/p\u003E\n\u003Cp\u003E\nHere is my predictive apoapsis speed using semi-major axis:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E_mu = gravitational_parameter\n_r_pe = periapsis_radius                  # (current periapsis altitude \u002B parent body radius)\n_r_ap = apoapsis_radius                   # (current apoapsis altitude \u002B parent body radius)\n\npredicted_apoapsis_Velocity = sqrt((2 * _mu * _r_pe) / (_r_ap * (_r_ap \u002B _r_pe)))\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nusing the known needed deltaV for the desired parking orbit I can now easily adjust my pitch during launch to achieve that altitude.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EparkingOrbit_required_deltaV = desiredVelocity - predicted_apoapsis_Velocity\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n(Note: previous reply to \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/59541-stratochief66/\u0026amp;do=hovercard\u0022 data-mentionid=\u002259541\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/59541-stratochief66/\u0022 rel=\u0022\u0022\u003E@stratochief66\u003C/a\u003E\u00A0where I also use (mean anomaly - 180)\u00A0to keep in mind where the ap is and include pitch adjustments for that aswell)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAll of the above is ideal for doing Hohmann Xfers but a launch is basicly just a fancy Hohmann Xfer that (from Earth) include atmospheric flight. \u00A0\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-12T04:00:25Z\u0022 title=\u002203/12/2017 04:00  AM\u0022 data-short=\u00227 yr\u0022\u003EMarch 12, 2017\u003C/time\u003E by BevoLJ\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-12T17:19:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222983131\u0022 data-ipsquote-contentid=\u0022146593\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221489287974\u0022 data-ipsquote-userid=\u002277242\u0022 data-ipsquote-username=\u0022BevoLJ\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, BevoLJ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nout pitch adjustments for circularising orbits at ap or pe, I use mean anomaly.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\n_ap_deltaDeg = np.rad2deg(self.mean_anomaly()) - 180  # launch circ and hohmann xfers\u003C/pre\u003E\n\u003Cp\u003E\nfor hohmann xfer burns at pe, I just use the mean anomaly straight for pitch adjustments. \u00A0=)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI didn\u0027t think of using mean anomaly. \u00A0Chalk that to not knowing much about orbital mechanics despite a bachelors in physics and over 2000 hours in stock KSP (and probably a few hundred in \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E/\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E). \u00A0I looked more at vertical velocity and apoapsis, and then I looked at the physics of the problem and came up with some formulas based on free-body diagrams I drew in GIMP. \u00A0That\u0027s how I got my diff eq, and then that\u0027s how I got my pitch relation that I took the time derivative of to get that huge formula. \u00A0I\u0027m not sure if that formula is even necessary or accurate, but it looks accurate if you neglect air drag, and you could theoretically tie a PID loop for many variables to pitch control and potentially get a very nice steering program...or something crazy. \u00A0I do want to try it out after I fly this mission. \u00A0Of course, I also want to do other \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E missions like Apollo to Titan, where I might include the N1 and NERVA (because Soviet/Russian co-operation I guess).\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222983153\u0022 data-ipsquote-contentid=\u0022146593\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221489291133\u0022 data-ipsquote-userid=\u002277242\u0022 data-ipsquote-username=\u0022BevoLJ\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, BevoLJ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis is a fun thread! \u00A0Will need to set aside time this weekend to read it. \u00A0=)\n\u003C/p\u003E\n\u003Cp\u003E\nI do something somewhat similar but rather than vertical speed I use orbital velocities. \u00A0set desired parking orbit and then get the required orbital velocity I will need to achieve that desired parking orbit.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E_mu \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E gravitational_parameter\n_radius \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parkingOrbit_radius             \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E# (parking orbit altitude \u002B parent body radius)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\ndesiredVelocity \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sqrt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_mu \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _radius\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI can then use the semi-major axis during launch to predict what my current velocity is at my apoapsis (if I were to cut engines during launch and just go there). \u00A0That way during launch I can see how much I need to change the velocity (deltaV)\u00A0of my apoapsis to achieve the desired parking orbit I want.\n\u003C/p\u003E\n\u003Cp\u003E\nHere is my predictive apoapsis speed using semi-major axis:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E_mu \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E gravitational_parameter\n_r_pe \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E periapsis_radius                  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E# (current periapsis altitude \u002B parent body radius)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n_r_ap \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E apoapsis_radius                   \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E# (current apoapsis altitude \u002B parent body radius)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\npredicted_apoapsis_Velocity \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sqrt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _mu \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _r_pe\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_r_ap \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_r_ap \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _r_pe\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)))\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nusing the known needed deltaV for the desired parking orbit I can now easily adjust my pitch during launch to achieve that altitude.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003EparkingOrbit_required_deltaV \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E desiredVelocity \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E predicted_apoapsis_Velocity\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n(Note: previous reply to \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/59541-stratochief66/\u0026amp;do=hovercard\u0022 data-mentionid=\u002259541\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/59541-stratochief66/\u0022 rel=\u0022\u0022\u003E@stratochief66\u003C/a\u003E\u00A0where I also use (mean anomaly - 180)\u00A0to keep in mind where the ap is and include pitch adjustments for that aswell)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAll of the above is ideal for doing Hohmann Xfers but a launch is basicly just a fancy Hohmann Xfer that (from Earth) include atmospheric flight. \u00A0\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI thought of using final orbital velocity initially, but I didn\u0027t think I would need to use it when I first went with an apoapsis PID loop, and I also thought that a final orbital velocity might not be unique to an orbit unless you aimed for a specific apoapsis first, because then every orbit with a common AP or PE will have unique orbital velocity profiles. \u00A0Plus, for circular orbits, the orbital velocity will be constant like you noted above.\n\u003C/p\u003E\n\u003Cp\u003E\nAs far as treating launches as Hohmann transfers, I didn\u0027t think of that because you\u0027re not burning prograde from one orbit and coasting to another, but you\u0027re burning radial out from one orbit, and burning constantly to your target orbit. \u00A0Of course, the math for each kind of orbit change might be the same. \u00A0If your approximation works for you, then there must be a way that both kinds of orbit transfers are approximately equal or even equivalent.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT:\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve made changes to the throttling profile during the MS-IC burn so the Gs don\u0027t go above 4, but it\u0027s changed my launch profile. \u00A0I get a lower AP during the burn, and different final AP and v_vert. \u00A0For instance, with Kp set to 0.0015, my final AP is 231.549 km and my final v_vert is about 31.96 m/s. I set final PEs to be 170 km\u00A0because the old setting of 200 km was resulting in the MS-II never shutting down until fuel exhaustion because the rocket would be below 200 km when it approached orbital insertion, and thus the PE would never go above 200 km.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-12T17:49:04Z\u0022 title=\u002203/12/2017 05:49  PM\u0022 data-short=\u00227 yr\u0022\u003EMarch 12, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-13T23:38:50Z","Content":"\n\u003Cp\u003E\nMore tuning tests with the vertical velocity PID controller.\n\u003C/p\u003E\n\u003Cp\u003E\nCode as of this post:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//Saturn VB Autopilot program\n//Ctrl \u002B C to kill?\n\nRUNPATH(\u0022AresLaunchDisplay.ks\u0022).\n\nSET ddyn to 0.\nSET dynzero to 0.\n\n//If variables are lists, can I accees each element in loops below and make code more efficient?\nSET Inboard to SHIP:PARTSTAGGED(\u0022F1AInboard\u0022)[0].\nSET Outboard to SHIP:PARTSTAGGED(\u0022F1AOutboard1\u0022)[0].\nSET J2S to SHIP:PARTSTAGGED(\u0022J2S\u0022)[0].\nSET \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E to SHIP:PARTSTAGGED(\u0022SRB1\u0022)[0].\nSET MSIC to SHIP:PARTSTAGGED(\u0022MS-IC\u0022)[0].\n\nCLEARSCREEN. //in case we need this\n\n//Display event, throttle setting, F-1A thrust %, and \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust %.\n//Lock steering to a variable to make it less intensive to run?\nLOCK STEERING to Autopilot.\nLOCK Autopilot to \u0022Kill\u0022.\nLOCK THROTTLE to 1.0.\n\n//Temp - steering debug - delete after use\n//SET STEERINGMANAGER:SHOWSTEERINGSTATS to TRUE.\nSET STEERINGMANAGER:SHOWFACINGVECTORS to TRUE.\nSET STEERINGMANAGER:SHOWANGULARVECTORS to TRUE.\n\nSET STEERINGMANAGER:MAXSTOPPINGTIME to 0.7. //default value 2\nSTAGE. //F-1A ignition\n\nSet Kp to 0.00264. //Ku = 0.0033?  \nSet Ki to 0.\nSet Kd to 0.0165. //Last Kd: 0.00132\n\n//Tuning Pitch PID for terminal guidance.\n//LOG \u0022Pitch PID Tuning\u0022 TO Pitch_VVert_Log.txt.\n//LOG \u0022Kp:\u0022 \u002B Kp \u002B \u0022,Ki:\u0022 \u002B Ki \u002B \u0022,Kd:\u0022 \u002B Kd TO Pitch_VVert_Log.txt.\n//LOG \u0022t,Verical Velocity Deviation:,Pitch Correction:\u0022 TO Pitch_VVert_Log.txt.\n\n//Ultimate goal of steering program is to set rocket into pre-programmed circular orbit of 200 km - 250 km.\n//Pitch by x degrees, then follow prograde until rocket reaches certain altitude.\n//Finally, manage pitch to put Ares in circular orbit.\n//In launches using manual steering, Ares ends gravity turn between \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep and MS-IC burnout.\n\n//Adjust heading to meet propulsion stack inclination (or desired inclination).  Could have this able to be set as input prior to launch.\n\n//At v(sfc) = 50 m/s, pitch over a bit to initiate gravity turn.\n//then hold prograde for gravity turn. (angle between v and a zero.)\n\n//Pitch and roll manuever.  Correct initial pitch is trial and error right now.\n//Could the gravity turn be better programmed as a diff eq (predictive equation)?\n\n//Print that gravity turn is in progress - Integrate with LaunchDisplay function?\n\n//Guidance control.\nWHEN SHIP:VELOCITY:SURFACE:MAG \u0026gt;= 50 THEN {\n  //Pitch then roll for inclination (90 degrees for now). - smooth out move to pitch?\n  LOCK Autopilot to HEADING(90,80). //175 km AP at \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep.  \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep at 70 km. -  Last setting,80, then 78 degrees pitch, then 83\n  IF ROUND(VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR))) = 90 { //Sometimes, the rocket pointing straight up causes next when trigger to be true, so this line prevents a vertical launch from triggering the gravity turn code.\n    Return true.\n  }\n  //Gravity turn - Follow prograde next.\n  WHEN SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z \u0026lt;= 0 THEN { //might need to change this condition\n   LOCK Autopilot to SHIP:VELOCITY:SURFACE. //SHIP:VELOCITY:SURFACE or SHIP:SRFPROGRADE?\n   PRINT \u0022Begin Gravity Turn\u0022 at (0,10).   \n   WHEN SHIP:ALTITUDE \u0026gt; 75000 THEN { //At 75km, start program to control pitch based on current rocket path - currently monitors vertical velocity.\n     PRINT \u0022Initiate Closed-Loop Steering\u0022 at (0,10).\n     SET PID TO PIDLOOP(Kp,Ki,Kd). // do once (Kp, Ki, Kd, Minoutput, Maxoutput) - Bounces horribly between min and max - pitch corrections too extreme - needs tuning and lower response time (responds too fast) - pitch bouncy between set AP?  Needs deadzone?\n\t SET PID:SETPOINT to 0. //do once\n     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)). //initialize PID?\n\t WHEN true THEN { //\u0026lt;= loops until PE \u0026gt; 0.\n\t   PRINT \u0022Pitch: \u0022 \u002B Pitch1 at (0,4). //This is quite large.  Might be a bad derivation.\n\t   PRINT \u0022PID Input:\u0022 \u002B PID:INPUT at (0,5).  //Apoapsis\n\t   PRINT \u0022PID Output/Pitch Correction:\u0022 \u002B PID:OUTPUT at (0,6). // Error\n\t   PRINT \u0022Error: \u0022 \u002B PID:ERROR at (0,7).\n\t   PRINT PID:SETPOINT - SHIP:VERTICALSPEED at (0,8).\n\t   SET dPitch to PID:UPDATE(TIME:SECONDS, SHIP:VERTICALSPEED).\n\t   IF Outboard:FUELFLOW \u0026gt; 0 AND (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 2 AND J2S:FUELFLOW = 0 { //Hold pitch for MS-IC/MS-II staging.\n\t     SET Autopilot TO HEADING(90,Pitch1).\n\t   }\n\t   ELSE IF Pitch1 \u0026gt; 15 { //Transition from gravity turn or oversteer past maximum.\n\t     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)).\n\t\t PRINT \u0022Pitching Over      \u0022 at (0,3). //change this text?\n\t\t SET Autopilot to HEADING(90,14.9).\n\t   }\n\t   ELSE IF Pitch1 \u0026lt; 15 AND Pitch1 \u0026gt; 0 { //min and max pitch\n\t     PRINT \u0022Guidance Converging       \u0022 at (0,3).\n\t     SET Pitch1 to Pitch1 \u002B dPitch.\n\t\t SET Autopilot TO HEADING(90,Pitch1).\n\t   }\n       ELSE IF SHIP:ORBIT:PERIAPSIS \u0026gt; 0 { //This sets pitch to zero for final orbital insertion to make orbit as circular as possible.\n\t     PRINT \u0022Terminal Guidance      \u0022 at (0,3).\n         LOCK Autopilot to HEADING(90,0). //Terminal guidance for PE \u0026gt; 0.\n\t\t RETURN false. //Kill steering loop.\n\t   }\n\t   ELSE { //oversteer past minimum\n\t     PRINT \u0022test\u0022 at (0,3).\n\t     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)).\n\t     SET Autopilot to HEADING(90,0). //how to pitch gradually from initial pitch to 15 - how is this getting triggered after PE \u0026gt; 0?\n\t   }\n\t   IF SHIP:VERTICALSPEED \u0026lt; 150{\n\t     PRINT \u0022Logging\u0022 at (0,11).\n\t     //LOG MISSIONTIME \u002B \u0022,\u0022 \u002B (PID:SETPOINT - SHIP:VERTICALSPEED) \u002B \u0022,\u0022 \u002B dPitch TO Pitch_VVert_Log.txt.\n       }\n       RETURN true.\t   \n\t }  \n   }  \n  }\n}\n\n//Staging control.\n//Countdown here?\n\n//F-1A Ignition\nUNTIL (Outboard:THRUST/Outboard:MAXTHRUST) \u0026gt; 0.88 {\n  IF(Outboard:MAXTHRUST \u0026gt; 0) {  //Prevent NAN\n    //PRINT STEERINGMANAGER:MAXSTOPPINGTIME at (0,4).\n    LaunchDisplay(0,2,Outboard:THRUST/Outboard:MAXTHRUST,0).\n  }\n  \n  //WAIT 0.01.\n}\n\nSTAGE.  //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E Ignition and Liftoff\nCLEARSCREEN.\n\n//Maybe countdown and abort mode display.\n\n//WAIT 0.01.\n\n//Display loop could continue on with a PRESERVE command after throttleback?\nUNTIL MISSIONTIME \u0026gt; 24 { //originally 25\n  IF(\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026gt; 0 AND \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST \u0026gt; 0) { //Prevent NAN\n    //PRINT VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)) at (0,4).\n    //PRINT \u0022Facing-vel srf Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, SHIP:VELOCITY:SURFACE) \u002B \u0022  \u0022 at (0,4).\n\t//PRINT \u0022Facing Z - Vel Srf Z (Normalized): \u0022 \u002B (SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z) at (0,5).\n\t//PRINT \u0022Facing-target Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, STEERINGMANAGER:TARGET:VECTOR) \u002B \u0022  \u0022 at (0,6).\n    //PRINT \u0022Facing - Target: \u0022 \u002B (SHIP:FACING:VECTOR:Z - STEERINGMANAGER:TARGET:VECTOR:Z) \u002B \u0022  \u0022 at (0,7).\n    //PRINT \u0022Facing Z: \u0022 \u002B SHIP:FACING:VECTOR:Z \u002B \u0022  \u0022at (0,8).\n    //PRINT \u0022Vel Srf Z: \u0022 \u002B SHIP:VELOCITY:SURFACE:Z \u002B \u0022  \u0022at (0,9).\n    LaunchDisplay(1,2,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  }\n  //WAIT 0.01.\n}\n\nCLEARSCREEN.\n\nLOCK THROTTLE to 0.01. //F-1A throttle to 60% for max Q\n\n//check dyn pressure change\n//if ddyn \u0026lt; -0.004kPa/0.01s or so, throttle to 85% (was -0.04kPa/0.1s)\n\nUNTIL ddyn \u0026lt;= -0.01 { //originally 0.004\n  LaunchDisplay(2,0,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  SET ddyn TO (SHIP:Q*constant:ATMtokPa) - dynzero. //units are kPa \u0026lt;- can be lock statement\n  SET dynzero TO (SHIP:Q*constant:ATMtokPa). //\u0026lt;- these can be LOCK statements\n  WAIT 0.01. //change to 0.1? \u0026lt;- can remove this when using lock and dividing by time.\n}\n\nLOCK THROTTLE to 0.63. //F-1A throttle to 85%\nSET g TO EARTH:MU/EARTH:RADIUS^2.\nLOCK acc TO SHIP:SENSORS:ACC - SHIP:SENSORS:GRAV.\nLOCK Gforce TO acc:MAG/g.\n\nWHEN Gforce \u0026gt; 4 THEN LOCK THROTTLE TO 0.01. //First G force moderation throttleback (60%).\n\nCLEARSCREEN.\n\n//4\u002BGs before \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E tail-off.\n\n//Stage SRBs and throttle to 100% when \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust \u0026lt; 10%\nUNTIL \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026lt; .1 {\n  LaunchDisplay(3,1,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST). //Throttle setting should read \u002260%\u0022 for first throttleback.\n}\n\nSTAGE. //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E jettison\n\nLOCK THROTTLE to 1.0. //F-1A throttle to 100%\n\n//Center engine shutdown at 26s before MS-IC burnout (G \u0026gt;= 3.8g)\n\nCLEARSCREEN.\n\nUNTIL (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 26 {\n  LaunchDisplay(4,2,Outboard:THRUST/Outboard:MAXTHRUST).\n  //WAIT 0.01.\n}\n\nInboard:SHUTDOWN. //Inboard cut-off.\n\nCLEARSCREEN.\n\nWHEN MISSIONTIME \u0026gt; 160 THEN LOCK THROTTLE TO 0.63. //Second G force moderation throttleback (85%).\n\n//Remainder of MS-IC Flight\nUNTIL Outboard:FLAMEOUT = TRUE {\n  IF Outboard:MAXTHRUST \u0026gt; 0 {//Prevent NAN\n    LaunchDisplay(5,2,Outboard:Thrust/Outboard:MAXTHRUST). //Should read \u002285%\u0022 when throttleback occurs.\n  }\n}\n\n//Main Engine Cut-Off\nCLEARSCREEN.\nLaunchDisplay(6,3,0).\nLOCK THROTTLE TO 1.\nWAIT 1.\n\n\nCLEARSCREEN.\nSTAGE. //MS-IC Staging.\nLaunchDisplay(7,3,0).\nWAIT 3.\n\nCLEARSCREEN.\n\n\nSTAGE. //MS-II Ignition.\nSET t0 to TIME:SECONDS.\n\nUNTIL TIME:SECONDS - t0 \u0026gt; 30 {\n  LaunchDisplay(8,2,J2S:THRUST/J2S:MAXTHRUST).\n} \n\nCLEARSCREEN.\n\n\nSTAGE. //Skirt seperation\nSet t0 to TIME:SECONDS.\n\nUNTIL TIME:SECONDS - t0 \u0026gt; 6 {\n  LaunchDisplay(9,2,J2S:THRUST/J2S:MAXTHRUST).\n}\n\nCLEARSCREEN.\n\nAG27 on. //\u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E Tower jettison \u0026lt;- this event will be moved in final code.\nUNTIL SHIP:ORBIT:PERIAPSIS \u0026gt;= 170000 { //set to be higher than set apoapsis \u0026lt;- could set this to AP when PE = 0 to attempt circularization.\n  LaunchDisplay(10,2,J2S:THRUST/J2S:MAXTHRUST).\n}\n\n//SECO - Orbit insertion.\nCLEARSCREEN.\nLOCK THROTTLE to 0.\n\nPRINT \u0022Secondary Engine Cut-Off\u0022 at (0,2).\nPRINT \u0022Go for Orbit\u0022 at (0,3).\n\n//Keep code running until SECO (Periapsis \u0026gt; 200 km or 250 km?)\n\nSET SHIP:CONTROL:PILOTMAINTHROTTLE to 0. //Current final orbit 234 km x 201 km\u003C/pre\u003E\n\u003Cp\u003E\nApoapsis, periapsis, and final vertical velocity for new throttling profile. \u00A0The target periapsis was lowered\u00A0to 170 km from 200 km as stated above.\n\u003C/p\u003E\n\u003Ctable border=\u00223\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:500px;\u0022\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\nKp\n\u003C/td\u003E\n\u003Ctd\u003E\nApoapsis (km)\n\u003C/td\u003E\n\u003Ctd\u003E\nPeriapsis (km)\n\u003C/td\u003E\n\u003Ctd\u003E\nVertical Velocity (m/s)\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0015\n\u003C/td\u003E\n\u003Ctd\u003E\n231.549\n\u003C/td\u003E\n\u003Ctd\u003E\n170.595\n\u003C/td\u003E\n\u003Ctd\u003E\n31.96\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0025\n\u003C/td\u003E\n\u003Ctd\u003E\n218.669\n\u003C/td\u003E\n\u003Ctd\u003E\n170.653\n\u003C/td\u003E\n\u003Ctd\u003E\n25.10\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0035\n\u003C/td\u003E\n\u003Ctd\u003E\n215.675\n\u003C/td\u003E\n\u003Ctd\u003E\n170.498\n\u003C/td\u003E\n\u003Ctd\u003E\n21.93\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0045\n\u003C/td\u003E\n\u003Ctd\u003E\n220.858\n\u003C/td\u003E\n\u003Ctd\u003E\n170.212\n\u003C/td\u003E\n\u003Ctd\u003E\n19.86\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0055\n\u003C/td\u003E\n\u003Ctd\u003E\n242.154\n\u003C/td\u003E\n\u003Ctd\u003E\n170.099\n\u003C/td\u003E\n\u003Ctd\u003E\n18.51\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003Cp\u003E\nI noticed the final apoapsis was still lowest around Kp = 0.0035, so I varied Kp more finely starting at Kp = 0.0035 and lowering it by 0.0001.\n\u003C/p\u003E\n\u003Ctable border=\u00223\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:500px;\u0022\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\nKp\n\u003C/td\u003E\n\u003Ctd\u003E\nApoapsis (km)\n\u003C/td\u003E\n\u003Ctd\u003E\nPeriapsis (km)\n\u003C/td\u003E\n\u003Ctd\u003E\nVertical Velocity (m/s)\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0035\n\u003C/td\u003E\n\u003Ctd\u003E\n215.675\n\u003C/td\u003E\n\u003Ctd\u003E\n170.498\n\u003C/td\u003E\n\u003Ctd\u003E\n21.93\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0034\n\u003C/td\u003E\n\u003Ctd\u003E\n215.158\n\u003C/td\u003E\n\u003Ctd\u003E\n170.443\n\u003C/td\u003E\n\u003Ctd\u003E\n22.09\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0033\n\u003C/td\u003E\n\u003Ctd\u003E\n211.745\n\u003C/td\u003E\n\u003Ctd\u003E\n170.644\n\u003C/td\u003E\n\u003Ctd\u003E\n22.21\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n0.0032\n\u003C/td\u003E\n\u003Ctd\u003E\n215.783\n\u003C/td\u003E\n\u003Ctd\u003E\n170.601\n\u003C/td\u003E\n\u003Ctd\u003E\n22.80\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003Cp\u003E\nSo apoapsis is a minimum around Kp = 0.0033. \u00A0I can treat this as the ultimate gain Ku and use the PD tuning technique given in the kOS manual (Kp = 0.8 Ku, Kd = KpTu/8), I get a Kp of 0.00264. \u00A0I assume different values for Tu since I can\u0027t really get that experimentally for this PID tuner, starting at Tu = 30s and varying it by 10 seconds until I get convergent behavior with v_vert.\n\u003C/p\u003E\n\u003Ctable border=\u00223\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:550px;\u0022\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\nKu = 0.0033\n\u003C/td\u003E\n\u003Ctd\u003E\nKp = 0.00264\n\u003C/td\u003E\n\u003Ctd\u003E\n\u00A0\n\u003C/td\u003E\n\u003Ctd\u003E\n\u00A0\n\u003C/td\u003E\n\u003Ctd\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\nTu (s)\n\u003C/td\u003E\n\u003Ctd\u003E\nKd\n\u003C/td\u003E\n\u003Ctd\u003E\nApopsis (km)\n\u003C/td\u003E\n\u003Ctd\u003E\nPeriapsis (km)\n\u003C/td\u003E\n\u003Ctd\u003E\nVertical Velocity (m/s)\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n20\n\u003C/td\u003E\n\u003Ctd\u003E\n0.0066\n\u003C/td\u003E\n\u003Ctd\u003E\n194.638\n\u003C/td\u003E\n\u003Ctd\u003E\n171.517\n\u003C/td\u003E\n\u003Ctd\u003E\n13.25\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n30\n\u003C/td\u003E\n\u003Ctd\u003E\n0.0099\n\u003C/td\u003E\n\u003Ctd\u003E\n189.381\n\u003C/td\u003E\n\u003Ctd\u003E\n171.911\n\u003C/td\u003E\n\u003Ctd\u003E\n8.479\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n40\n\u003C/td\u003E\n\u003Ctd\u003E\n0.0132\n\u003C/td\u003E\n\u003Ctd\u003E\n187.113\n\u003C/td\u003E\n\u003Ctd\u003E\n172.334\n\u003C/td\u003E\n\u003Ctd\u003E\n4.598\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n50\n\u003C/td\u003E\n\u003Ctd\u003E\n0.0165\n\u003C/td\u003E\n\u003Ctd\u003E\n186.456\n\u003C/td\u003E\n\u003Ctd\u003E\n172.419\n\u003C/td\u003E\n\u003Ctd\u003E\n2.231\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003Cp\u003E\nSo, the higher Kd goes, the closer vertical velocity gets to zero. \u00A0I don\u0027t know if it actually reaches zero or just asymptotes to it, but I can find out later. \u00A0I just feel that higher Kd values might mean that the vertical velocity PID loop is approaching zero faster or sooner in time, and thus there might be a critical Kd where vertical velocity would overshoot or undershoot.\n\u003C/p\u003E\n\u003Cp\u003E\nI feel though that setting Kp to 0.00264 and Kd to 0.0165 will be good enough for this autopilot. \u00A0I might start work on the heading to inclination conversion, which is the final difficult part of this code..\n\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-17T15:51:17Z","Content":"\n\u003Cp\u003E\nThis isn\u0027t good. \u00A0I\u0027m starting to get C\u002B\u002B runtime errors and crashes quite frequently now during vessel loadings, usually after I fly the vessel once. \u00A0This is after putting the propulsion stage in orbit to test rendezvous.\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe I\u0027m running too many mods or should reduce memory the memory usage of other programs? \u00A0This doesn\u0027t seem like a typical memory issue caused by 32-bit KSP (and I run 64-bit for \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E/\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E).\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, been having a hard time getting a relation between initial launch heading and final orbital inclination. \u00A0Dunno if i\u0027m overthinking the problem, but I don\u0027t feel it shouldn\u0027t be that hard to find a relation. \u00A0I\u0027ve tried using differentials and some linear algebra, but I keep getting stuck in the math and making quite a few careless errors.\n\u003C/p\u003E\n\u003Cp\u003E\nFurthermore, starting on the 27th, I won\u0027t have the free time I had before due to some week-long evaluations I\u0027ll be going to for the next four weeks after the 27th. \u00A0I\u0027ll have weekends off, though, and I might have afternoons, but I\u0027m not sure how much work I can get done. \u00A0I\u0027d like to get this code ready before then, but the crashing and other bugs are slowing me down.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-17T15:55:28Z\u0022 title=\u002203/17/2017 03:55  PM\u0022 data-short=\u00227 yr\u0022\u003EMarch 17, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-03-23T02:05:24Z","Content":"\n\u003Cp\u003E\nSo this heading to inclination problem turned out to be much harder than I anticipated. \u00A0I had to start the problem from scratch a few times before finally finding a way to solve it. \u00A0To clarify what problem I\u0027m talking about, I wanted to know what your final orbital inclination would be if you launched at a certain angle from North in the launch site\u0027s frame of reference.\n\u003C/p\u003E\n\u003Cp\u003E\nTo solve it, I did something akin to what \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/77242-bevolj/\u0026amp;do=hovercard\u0022 data-mentionid=\u002277242\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/77242-bevolj/\u0022 rel=\u0022\u0022\u003E@BevoLJ\u003C/a\u003E\u00A0did in thinking of the problem in terms of changing orbits. \u00A0First, though, I had to show that for a 90-degree launch heading, the final orbit would be inclined at the launch site\u0027s latitude. \u00A0I had done this already to solve a special case of the general problem as a way to help me find the general solution to the heading to inclination problem.\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s my work on the special case to prove that the initial inclination = launch site latitude.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://www.texpaste.com/n/m89r69uq\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.texpaste.com/n/m89r69uq\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFor the general case, I thought of what kind of velocity change it would take to change the inclination of an orbit. \u00A0I let the initial orbit be the orbit for the 90 degree heading case, and the final orbit be the orbit I want. \u00A0Then I can use the burn vector, add it to the initial velocity of the rocket at the launch site, which is zero plus the velocity imparted on the rocket by the rotation of the Earth, and then find the angle between this new surface velocity vector and the north direction relative to the launch site.\n\u003C/p\u003E\n\u003Cp\u003E\nTook me a couple of days of work, but I had the general equation. \u00A0I tested it with my autopilot programs and it appears to work. \u00A0My work notes are here:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://www.texpaste.com/n/d6am1mfq\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.texpaste.com/n/d6am1mfq\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAnd the final equation that gives me the heading I want to launch at for a target inclination is:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022djCGumy.png\u0022 src=\u0022http://i.imgur.com/djCGumy.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nBig equation, but it works.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, this means that my autopilot code is almost complete and now performs every task I want it to (with the exception of hitting a target apoapsis). \u00A0At this point, it\u0027s just minor code clean-up and final tweaks, and then I can move on to the mission itself.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//Saturn VB Autopilot program\n//Ctrl \u002B C to kill?\n\nRUNPATH(\u0022AresLaunchDisplay.ks\u0022).\n\n//Pass in target inclination and convert to heading.\n//Need to figure out initial heading to match desired inclination.\n//parameter targetinclination is LATITUDE.\nparameter initialheading is 90.\nIF HASTARGET = TRUE {\n  SET initialheading to ARCCOS((2*7616*sin(LATITUDE)*sin((TARGET:ORBIT:INCLINATION - LATITUDE)/2)*cos((TARGET:ORBIT:INCLINATION \u002B LATITUDE)/2))/SQRT(4*(7616.6)^2*(sin((TARGET:ORBIT:INCLINATION - LATITUDE)/2))^2-(4*7616.6*465.1*cos(LATITUDE)*sin((TARGET:ORBIT:INCLINATION \u002B LATITUDE)/2)*sin((TARGET:ORBIT:INCLINATION - LATITUDE)/2)) \u002B (465.1*cos(LATITUDE)^2))). //Most confident formula for setting initial heading to hit a target inclination - still may not work due to assumptions with velocities and translating normal vector from orbit to ground. \n} \n\n\nSET ddyn to 0.\nSET dynzero to 0.\n\n//If variables are lists, can I accees each element in loops below and make code more efficient?\nSET Inboard to SHIP:PARTSTAGGED(\u0022F1AInboard\u0022)[0].\nSET Outboard to SHIP:PARTSTAGGED(\u0022F1AOutboard1\u0022)[0].\nSET J2S to SHIP:PARTSTAGGED(\u0022J2S\u0022)[0].\nSET \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E to SHIP:PARTSTAGGED(\u0022SRB1\u0022)[0].\nSET MSIC to SHIP:PARTSTAGGED(\u0022MS-IC\u0022)[0].\n\nCLEARSCREEN. //in case we need this\n\n//Display event, throttle setting, F-1A thrust %, and \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust %.\n//Lock steering to a variable to make it less intensive to run?\nLOCK STEERING to Autopilot.\nLOCK Autopilot to \u0022Kill\u0022.\nLOCK THROTTLE to 1.0.\n\n//Temp - steering debug - delete after use\n//SET STEERINGMANAGER:SHOWSTEERINGSTATS to TRUE.\nSET STEERINGMANAGER:SHOWFACINGVECTORS to TRUE.\nSET STEERINGMANAGER:SHOWANGULARVECTORS to TRUE.\n\nSET STEERINGMANAGER:MAXSTOPPINGTIME to 0.7. //default value 2\nSTAGE. //F-1A ignition\n\nSet Kppitch to 0.00264. //Ku = 0.0033?  \nSet Kipitch to 0.\nSet Kdpitch to 0.0198. //Last Kdpitch: 0.00132\n\nSet Kpinc to 0.001.\nSet Kiinc to 0.\nSet Kdinc to 0.\n\n//Tuning Inclination PID.\nLOG \u0022Inclination PID Tuning\u0022 TO Inclination_Log.txt.\nLOG \u0022Kp:\u0022 \u002B Kpinc \u002B \u0022,Ki:\u0022 \u002B Kiinc \u002B \u0022,Kd:\u0022 \u002B Kdinc TO Inclination_Log.txt.\nLOG \u0022t,Inclination Deviation:\u0022 TO Inclination_Log.txt.\n\n//Ultimate goal of steering program is to set rocket into pre-programmed circular orbit of 200 km - 250 km.\n//Pitch by x degrees, then follow prograde until rocket reaches certain altitude.\n//Finally, manage pitch to put Ares in circular orbit.\n//In launches using manual steering, Ares ends gravity turn between \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep and MS-IC burnout.\n\n//Adjust heading to meet propulsion stack inclination (or desired inclination).  Could have this able to be set as input prior to launch.\n\n//At v(sfc) = 50 m/s, pitch over a bit to initiate gravity turn.\n//then hold prograde for gravity turn. (angle between v and a zero.)\n\n//Pitch and roll manuever.  Correct initial pitch is trial and error right now.\n//Could the gravity turn be better programmed as a diff eq (predictive equation)?\n\n//Print that gravity turn is in progress - Integrate with LaunchDisplay function?\n\n//LOCK dHeading TO PID1:UPDATE(TIME:SECONDS,SHIP:ORBIT:INCLINATION).\n//LOCK Heading1 TO Heading1 \u002B PID1:UPDATE(TIME:SECONDS,SHIP:ORBIT:INCLINATION).\nWHEN SHIP:VELOCITY:SURFACE:MAG \u0026gt;= 50 THEN {\n  //Pitch then roll for inclination. - smooth out move to pitch?\n  LOCK Autopilot to HEADING(initialheading,80). //175 km AP at \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep.  \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep at 70 km. -  Last setting,80, then 78 degrees pitch, then 83\n  PRINT initialheading at (0,4).\n  IF ROUND(VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR))) = 90 { //Sometimes, the rocket pointing straight up causes next when trigger to be true, so this line prevents a vertical launch from triggering the gravity turn code.\n    RETURN true.\n  }\n  //Gravity turn - Follow prograde next.\n  WHEN SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z \u0026lt;= 0 AND VANG(UP:VECTOR, SHIP:VELOCITY:SURFACE) \u0026lt; 80 THEN { //triggers too early for some inclinations.\n   LOCK Autopilot to SHIP:VELOCITY:SURFACE.\n   PRINT \u0022Begin Gravity Turn\u0022 at (0,10).\n   WHEN SHIP:ALTITUDE \u0026gt; 75000 THEN { //At 75km, start program to control pitch based on current rocket path - currently monitors vertical velocity.\n     PRINT \u0022Initiate Closed-Loop Steering\u0022 at (0,10).\n\t SET PID1 TO PIDLOOP(Kpinc, Kiinc, Kdinc). //Inclination guidance.\n     SET PID2 TO PIDLOOP(Kppitch,Kipitch,Kdpitch). // do once (Kppitch, Kipitch, Kdpitch, Minoutput, Maxoutput) - Bounces horribly between min and max - pitch corrections too extreme - needs tuning and lower response time (responds too fast) - pitch bouncy between set AP?  Needs deadzone?\n\t IF HASTARGET = TRUE {\n       SET PID1:SETPOINT to TARGET:ORBIT:INCLINATION. \n     }\n     ELSE {\n       SET PID1:SETPOINT to 90. //change this to proper formula for inclination =\u0026gt; heading.\n     }\n\t SET PID2:SETPOINT to 0. //do once\n     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,SHIP:FACING:VECTOR)). //Doesn\u0027t represent pitch - initialize PID?\n\t SET Heading1 TO SHIP:HEADING.\n\t WHEN true THEN { //\u0026lt;= loops until PE \u0026gt; 0.\n\t   //PRINT \u0022Pitch: \u0022 \u002B VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,SHIP:FACING:VECTOR)) at (0,6). //positive even when pitch is below horizon.\n\t   //PRINT \u0022Pitch1 (Commanded Pitch): \u0022 \u002B Pitch1 at (0,7).\n\t   //PRINT \u0022PID Input:\u0022 \u002B PID2:INPUT at (0,5).  //Apoapsis\n\t   //PRINT \u0022PID Output/Pitch Correction:\u0022 \u002B PID2:OUTPUT at (0,6). // Error\n\t   //PRINT \u0022Error: \u0022 \u002B PID2:ERROR at (0,7).\n\t   //PRINT PID2:SETPOINT - SHIP:VERTICALSPEED at (0,8).\n\t   PRINT \u0022INPUT:\u0022 \u002B PID1:INPUT at (0,5).\n\t   PRINT \u0022OUTPUT:\u0022 \u002B PID1:OUTPUT at (0,6).\n\t   PRINT \u0022ERROR:\u0022 \u002B PID1:ERROR at (0,7).\n\t   PRINT \u0022Heading1:\u0022 \u002B Heading1 at (0,8).\n\t   PRINT \u0022Heading:\u0022 \u002B SHIP:HEADING \u002B \u0022   \u0022at (0,9).\n\t   SET dPitch to PID2:UPDATE(TIME:SECONDS, SHIP:VERTICALSPEED).\n\t   SET dHeading to PID1:UPDATE(TIME:SECONDS,SHIP:ORBIT:INCLINATION).\n\t   IF Outboard:FUELFLOW \u0026gt; 0 AND (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 2 AND J2S:FUELFLOW = 0 { //Hold pitch for MS-IC/MS-II staging.\n\t     PRINT \u0022Test.\u0022 at (0,5).\n\t     //SET Autopilot TO \u0022Kill\u0022.\n\t\t SET Pitch1 to 0.\n\t\t SET Heading1 to HEADING.\n\t   }\n\t   //Pitch control.\n\t   ELSE IF Pitch1 \u0026gt;= 15 OR (VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,SHIP:FACING:VECTOR)) \u0026gt;= 15 AND SHIP:FACING:VECTOR:Y \u0026gt;= 0) { //Transition from gravity turn or oversteer past maximum.\n\t     SET Pitch1 to 14.9.\n\t\t PRINT \u0022Pitching Over                \u0022 at (0,3). //change this text?\n\t   }\n\t   ELSE IF (Pitch1 \u0026lt; 15 AND Pitch1 \u0026gt;= 0) AND SHIP:FACING:VECTOR:Y \u0026gt;= 0 { //min and max pitch\n\t     PRINT \u0022Pitch Guidance Converging       \u0022 at (0,3).\n\t\t //If statements needed to limit Pitch1 variable to between 0 and 15 degrees within this if statement.\n\t     SET Pitch1 to Pitch1 \u002B dPitch. \t \n\t   }\n\t   ELSE { //oversteer past minimum //fine after stage 2 ignition?\n\t     PRINT \u0022Oversteer.                 \u0022 at (0,3).\n\t     SET Pitch1 to 0.1.\n\t   }\n\t   //Heading Control.\n\t   //SET Heading1 to 90. //temp.\n\t   IF (HEADING \u0026gt; 10 \u002B initialheading) OR (Heading1 \u0026gt; 10 \u002B initialheading) {\n\t     PRINT \u0022Oversteer - Heading.    \u0022 at (0,4).\n\t     SET Heading1 TO initialheading \u002B 10.\n       }\t\t \n\t   ELSE IF HEADING \u0026lt;= (10 \u002B initialheading) AND HEADING \u0026gt;= (initialheading - 10) { //heading limits if needed.\n\t     PRINT \u0022Heading Guidance Converging.   \u0022 at (0,4).\n\t     SET Heading1 to Heading1 \u002B dHeading.  //Inclination correction\n\t   }\n\t   ELSE IF (HEADING \u0026lt; initialheading - 10) OR (Heading1 \u0026lt; initialheading - 10) { \n\t     PRINT \u0022Understeer - Heading.     \u0022 at (0,4).\n\t     SET Heading1 TO initialheading - 10.\n\t   }\n\t   IF SHIP:VERTICALSPEED \u0026lt; 150 { //temp loop.\n\t     PRINT \u0022Logging\u0022 at (0,11).\n\t     //LOG MISSIONTIME \u002B \u0022,\u0022 \u002B (PID2:SETPOINT - SHIP:VERTICALSPEED) \u002B \u0022,\u0022 \u002B dPitch TO Pitch_VVert_Log.txt.\n       }\n\t   IF SHIP:ORBIT:PERIAPSIS \u0026gt; 0 { //This sets pitch to zero for final orbital insertion to make orbit as circular as possible.\n\t     PRINT \u0022Terminal Guidance               \u0022 at (0,3).\n\t\t SET Pitch1 to 0. //Terminal guidance for PE \u0026gt; 0.\n\t\t RETURN false. //Kill steering loop.\n\t   }\n\t   SET Autopilot TO HEADING(Heading1,Pitch1). //SET, don\u0027t LOCK.\n\t   //PRINT SHIP:FACING:VECTOR at (0,5).\n\t   //LOG MISSIONTIME \u002B \u0022,\u0022 \u002B (PID1:SETPOINT - SHIP:ORBIT:INCLINATION) TO Inclination_Log.txt.\n       RETURN true.\t   \n\t }  \n   }  \n  }\n}\n\n//Staging control.\n//Countdown here?\n\n//F-1A Ignition\nUNTIL (Outboard:THRUST/Outboard:MAXTHRUST) \u0026gt; 0.88 {\n  IF(Outboard:MAXTHRUST \u0026gt; 0) {  //Prevent NAN\n    //PRINT STEERINGMANAGER:MAXSTOPPINGTIME at (0,4).\n    LaunchDisplay(0,2,Outboard:THRUST/Outboard:MAXTHRUST,0).\n  }\n  \n  //WAIT 0.01.\n}\n\nSTAGE.  //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E Ignition and Liftoff\nCLEARSCREEN.\n\n//Maybe countdown and abort mode display.\n\n//WAIT 0.01.\n\n//Display loop could continue on with a PRESERVE command after throttleback?\nUNTIL MISSIONTIME \u0026gt; 24 { //originally 25\n  IF(\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026gt; 0 AND \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST \u0026gt; 0) { //Prevent NAN\n    //PRINT VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR)) at (0,4).\n    //PRINT \u0022Facing-vel srf Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, SHIP:VELOCITY:SURFACE) \u002B \u0022  \u0022 at (0,4).\n\t//PRINT \u0022Facing Z - Vel Srf Z (Normalized): \u0022 \u002B (SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z) at (0,5).\n\t//PRINT \u0022Facing-target Angle: \u0022 \u002B VANG(SHIP:FACING:VECTOR, STEERINGMANAGER:TARGET:VECTOR) \u002B \u0022  \u0022 at (0,6).\n    //PRINT \u0022Facing - Target: \u0022 \u002B (SHIP:FACING:VECTOR:Z - STEERINGMANAGER:TARGET:VECTOR:Z) \u002B \u0022  \u0022 at (0,7).\n    //PRINT \u0022Facing Z: \u0022 \u002B SHIP:FACING:VECTOR:Z \u002B \u0022  \u0022at (0,8).\n    //PRINT \u0022Vel Srf Z: \u0022 \u002B SHIP:VELOCITY:SURFACE:Z \u002B \u0022  \u0022at (0,9).\n    LaunchDisplay(1,2,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  }\n  //WAIT 0.01.\n}\n\nCLEARSCREEN.\n\nLOCK THROTTLE to 0.01. //F-1A throttle to 60% for max Q\n\n//check dyn pressure change\n//if ddyn \u0026lt; -0.004kPa/0.01s or so, throttle to 85% (was -0.04kPa/0.1s)\n\nUNTIL ddyn \u0026lt;= -0.01 { //originally 0.004\n  LaunchDisplay(2,0,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  SET ddyn TO (SHIP:Q*constant:ATMtokPa) - dynzero. //units are kPa \u0026lt;- can be lock statement\n  SET dynzero TO (SHIP:Q*constant:ATMtokPa). //\u0026lt;- these can be LOCK statements\n  WAIT 0.01. //change to 0.1? \u0026lt;- can remove this when using lock and dividing by time.\n}\n\nLOCK THROTTLE to 0.63. //F-1A throttle to 85%\nSET g TO EARTH:MU/EARTH:RADIUS^2.\nLOCAL LOCK acc TO SHIP:SENSORS:ACC - SHIP:SENSORS:GRAV. //if grav code doesn\u0027t work, set these to global.\nLOCAL LOCK Gforce TO acc:MAG/g.\n\nWHEN Gforce \u0026gt; 4 THEN LOCK THROTTLE TO 0.01. //First G force moderation throttleback (60%).\n\nCLEARSCREEN.\n\n//4\u002BGs before \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E tail-off.\n\n//Stage SRBs and throttle to 100% when \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E thrust \u0026lt; 10% (change to 9%)?\nUNTIL \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026lt; .1 {\n  LaunchDisplay(3,1,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST). //Throttle setting should read \u002260%\u0022 for first throttleback.\n}\n\nSTAGE. //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E jettison\n\nLOCK THROTTLE to 1.0. //F-1A throttle to 100%\n\n//Center engine shutdown at 26s before MS-IC burnout (G \u0026gt;= 3.8g)\n\nCLEARSCREEN.\n\nUNTIL (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 26 {\n  LaunchDisplay(4,2,Outboard:THRUST/Outboard:MAXTHRUST).\n  //WAIT 0.01.\n}\n\nInboard:SHUTDOWN. //Inboard cut-off.\n\nCLEARSCREEN.\n\nWHEN MISSIONTIME \u0026gt; 160 THEN LOCK THROTTLE TO 0.63. //Second G force moderation throttleback (85%).\n\n//Remainder of MS-IC Flight\nUNTIL Outboard:FLAMEOUT = TRUE {\n  IF Outboard:MAXTHRUST \u0026gt; 0 {//Prevent NAN\n    LaunchDisplay(5,2,Outboard:Thrust/Outboard:MAXTHRUST). //Should read \u002285%\u0022 when throttleback occurs.\n  }\n}\n\n//Main Engine Cut-Off\nCLEARSCREEN.\nLaunchDisplay(6,3,0).\nLOCK THROTTLE TO 1.\nWAIT 1.\n\n\nCLEARSCREEN.\nSTAGE. //MS-IC Staging.\nLaunchDisplay(7,3,0).\nWAIT 3.\n\nCLEARSCREEN.\n\n\nSTAGE. //MS-II Ignition.\nSET t0 to TIME:SECONDS.\n\nUNTIL TIME:SECONDS - t0 \u0026gt; 30 {\n  LaunchDisplay(8,2,J2S:THRUST/J2S:MAXTHRUST).\n} \n\nCLEARSCREEN.\n\n\nSTAGE. //Skirt seperation\nSet t0 to TIME:SECONDS.\n\nUNTIL TIME:SECONDS - t0 \u0026gt; 6 {\n  LaunchDisplay(9,2,J2S:THRUST/J2S:MAXTHRUST).\n}\n\nCLEARSCREEN.\n\nAG27 on. //\u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E Tower jettison \u0026lt;- this event will be moved in final code.\n\nSET v_orb to 1000000.\nWHEN SHIP:ORBIT:PERIAPSIS \u0026gt;= 0 THEN SET v_orb to SQRT(EARTH:MU/(SHIP:ORBIT:APOAPSIS \u002B EARTH:RADIUS)). //Could set to altitude.\n\nUNTIL SHIP:VELOCITY:ORBIT:MAG \u0026gt;= v_orb { //SECO when v_orb for circular orbit at alt = periapsis reached.\n  LaunchDisplay(10,2,J2S:THRUST/J2S:MAXTHRUST).\n}\n\n//SECO - Orbit insertion.\nCLEARSCREEN.\nLOCK THROTTLE to 0.\n\nPRINT \u0022Secondary Engine Cut-Off\u0022 at (0,3).\nPRINT \u0022Go for Orbit\u0022 at (0,4).\n\n//Keep code running until SECO (Periapsis \u0026gt; 200 km or 250 km?)\n\nSET SHIP:CONTROL:PILOTMAINTHROTTLE to 0. //Current final orbit 234 km x 201 km\n\n\n\u003C/pre\u003E\n\u003Cp\u003E\nEDIT: I do need to mention a strange bug where after 75km, my HEADING variable is somehow floating around zero despite my actual heading being far from zero. \u00A0Have yet to track this bug down.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-23T02:51:50Z\u0022 title=\u002203/23/2017 02:51  AM\u0022 data-short=\u00227 yr\u0022\u003EMarch 23, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-04-09T21:46:46Z","Content":"\n\u003Cp\u003E\nTime for an update.\n\u003C/p\u003E\n\u003Cp\u003E\nSpent some time tuning the inclination PID loop. \u00A0Got it to where it centers itself to the proper inclination with a 0.0002 degree error or less. \u00A0I possibly could tune it somewhat better, but it\u0027s tight enough to where I think it\u0027s good.\n\u003C/p\u003E\n\u003Cp\u003E\nSome graphs used in the tuning. \u00A0Apologies for the sloppy labels, but I Google Sheets is a pain to work with when you upload a lot of data to it. \u00A0It also doesn\u0027t allow for label editing to my knowledge.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022KLNEFC7.png\u0022 src=\u0022http://i.imgur.com/KLNEFC7.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThis is the recorded inclination difference between about 160 seconds and orbital insertion. \u00A0I decided to use the behavior between about 220 seconds and 363 seconds for PID tuning.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022EldHUGy.png\u0022 src=\u0022http://i.imgur.com/EldHUGy.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAmplitude changes are as follows:\n\u003C/p\u003E\n\u003Ctable align=\u0022center\u0022 border=\u00221\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:500px;\u0022\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth scope=\u0022col\u0022\u003E\nKp\n\u003C/th\u003E\n\u003Cth scope=\u0022col\u0022\u003E\nAverage Amplitude Change (deg x 10^-4)\n\u003C/th\u003E\n\u003Cth scope=\u0022col\u0022\u003E\nAverage Period (s)\n\u003C/th\u003E\n\u003C/tr\u003E\u003C/thead\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\n1.5\n\u003C/td\u003E\n\u003Ctd\u003E\n-9.21\n\u003C/td\u003E\n\u003Ctd\u003E\nN/A\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n2.5\n\u003C/td\u003E\n\u003Ctd\u003E\n2.18\n\u003C/td\u003E\n\u003Ctd\u003E\n29 (Tu)\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\n2.5\n\u003C/td\u003E\n\u003Ctd\u003E\n-4.82\n\u003C/td\u003E\n\u003Ctd\u003E\nN/A\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003Cp\u003E\nFrom this and the PD tuning method in the kOS documentation, I use Kp = 1.6 and Kd = 5.8, and those values seem to work fine.\n\u003C/p\u003E\n\u003Cp\u003E\nSo now all of the autopilot functions are programmed in and work in a satisfactory way. \u00A0I do feel that maybe I should wait to engage the heading autopilot after MS-IC sep because the MS-IC has a lot of torque and engaging the heading autopilot seems to make the rocket steer in an odd way (turns left, and then down).\n\u003C/p\u003E\n\u003Cp\u003E\nNow I\u0027m looking at one of the minor details of the Saturn-VB launch sequence: abort modes. \u00A0I\u0027m curious how aborts would work with this rocket. \u00A0I would assume some of the abort modes are similar to the Apollo/Saturn V with the obvious lack of S-IVB to COI capability and mode III (S-IVB to Orbit) due to a lack of an S-IVB or equivalent stage. \u00A0Some browsing on Wikipedia and a document I found gave me an idea of what abort modes trigger when during the Saturn VB launch, so I assumed that the mode 1 aborts for Ares would be the same as Apollo. \u00A0This means that mode II (CSM abort) is actually reached before MS-IC sep but after \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E sep, and I adjusted the code to fire the \u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E tower at around 80 km height. \u00A0The only abort mode I haven\u0027t nailed down is the mode III abort for the Saturn VB, which is the same as mode IV (CSM to orbit) on Apollo.\n\u003C/p\u003E\n\u003Cp\u003E\nThe CSM has 3081 m/s of \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E according to Mechjeb, so I would figure mode III would happen when there is less than 2581 m/s remaining before orbital insertion. \u00A0This gives the CSM 500 m/s of \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E to work with and deorbit with, which I feel is more than enough.\n\u003C/p\u003E\n\u003Ctable border=\u00221\u0022 cellpadding=\u00221\u0022 cellspacing=\u00221\u0022 style=\u0022width:500px;\u0022\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth scope=\u0022col\u0022\u003E\nAbort Mode\n\u003C/th\u003E\n\u003Cth scope=\u0022col\u0022\u003E\nMET (s)\n\u003C/th\u003E\n\u003Cth scope=\u0022col\u0022\u003E\nAltitude (km)\n\u003C/th\u003E\n\u003C/tr\u003E\u003C/thead\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\nIa (\u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E \u002B Pitch Motor)\n\u003C/td\u003E\n\u003Ctd\u003E\n0 - 22\n\u003C/td\u003E\n\u003Ctd\u003E\n0 - 3\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\nIb (\u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E \u002B Canards)\n\u003C/td\u003E\n\u003Ctd\u003E\n22 - 80 (1:20)\n\u003C/td\u003E\n\u003Ctd\u003E\n3 - 30.5\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\nIc (\u003Cabbr title=\u0022Launch Escape System\u0022\u003ELES\u003C/abbr\u003E \u002B \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E)\n\u003C/td\u003E\n\u003Ctd\u003E\n80 - 124 (2:04)\n\u003C/td\u003E\n\u003Ctd\u003E\n30.5 - 80\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\nII (CSM)\n\u003C/td\u003E\n\u003Ctd\u003E\n124 (2:04) - Unk\n\u003C/td\u003E\n\u003Ctd\u003E\n80\u002B\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\nIII (CSM to Orbit)\n\u003C/td\u003E\n\u003Ctd\u003E\nUnk\n\u003C/td\u003E\n\u003Ctd\u003E\nUnk\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003Cp\u003E\nI promise to get this table filled out soon.\n\u003C/p\u003E\n\u003Cp\u003E\nI did consider two possible alternate abort options, one being an early MS-IC sep and the other using the OMM to boost the stack to orbit. \u00A0Both of these would save the mission as it would not discard the AMM and MEM. \u00A0Unfortunately the windows for both possible aborts might be too narrow, especially for the OMM to orbit option since the OMM only has 283 m/s of \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E. \u00A0The MS-II usually has about 400 m/s left after SECO during a nominal launch, so an early MS-IC sep would need enough \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E remaining in the MS-II and OMM to make orbit, also resulting in a narrow window in which the abort is possible, albeit less narrow than an OMM to orbit situation. \u00A0Nonetheless, I don\u0027t feel these alternate aborts have enough of a time window to be useful, though I may investigate the early MS-IC sep option a bit more.\n\u003C/p\u003E\n\u003Cp\u003E\nIn conclusion, some minor tweaks to the code\u00A0and terminal display changes are needed to consider the autopilot code complete. \u00A0I\u0027m not going to code in automatic aborts but I will display the abort mode. \u00A0In fact, I have all but mode III coded in. \u00A0I figure I could do automatic aborts later. \u00A0What\u0027s left after this I would assume be just some minor texture replacements, but those are optional, and then the first full flight of Ares (finally).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-12T21:16:37Z\u0022 title=\u002204/12/2017 09:16  PM\u0022 data-short=\u00227 yr\u0022\u003EApril 12, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003Cbr\u003EAdded values to table.\n\u003C/span\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-04-26T17:44:38Z","Content":"\n\u003Cp\u003E\nSmall update.\n\u003C/p\u003E\n\u003Cp\u003E\nI worked out most of the bugs for the terminal display for the autopilot. Also changed when the heading convergence starts, but I\u0027m still seeing odd behavior in the steering when heading guidance engages. \u00A0My best guess is that the steering program might be trying to prevent gimbal lock since I\u0027ve read up on gimbal lock, and odd rotational behavior can come about in 3D programs if you try to rotate an object in a way that causes gimbal lock. \u00A0I figure a clever workaround is in order.\n\u003C/p\u003E\n\u003Cp\u003E\nPitch/roll program issues will be the absolute last part on this program I work on. \u00A0After that, I\u0027m done with the program and I\u0027ll move onto texture replacement, and then finally fly this mission. \u00A0I know I keep mentioning that I hope to fly this mission soon, but life is unpredictable, and with me trying to get a job, I\u0027m finding myself with less free time to work on this project. \u00A0Nonetheless, I\u0027m dedicated to completing it and producing a few flights of Ares with a hopeful video.\n\u003C/p\u003E\n\u003Cp\u003E\nI actually want to produce some charts showing some launch data along with other data. \u00A0For some really, I\u0027m really invested in detailed analysis of this rocket and mission, so maybe I\u0027ll post a graph similar to the one below for the launch of the Ares, and I may produce a timetable for the whole mission. \u00A0I might also investigate abort modes for other aspects of the mission such as the trans-Cytherian injection (fancy name for burn to Venus), coasts to Venus and Mars, Mars insertion burn, and Martian landing attempt.\n\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-04-28T22:49:43Z","Content":"\n\u003Cp\u003E\nAfter months of work, the autopilot code is more or less complete. \u00A0Still need to debug the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E calculation for Mode III abort, but it\u0027s at a point that the code flies the rocket into orbit at a set inclination.\n\u003C/p\u003E\n\u003Cp\u003E\nDunno if I would have done this if I had known it would have taken me so long to complete, but it was also a very fun challenge.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//Saturn VB Autopilot program - Might have memory leak issues or need memory optimization.\n\nRUNPATH(\u0022AresLaunchDisplay.ks\u0022).\n\n//Pass in target inclination and convert to heading.\nparameter targetinclination is LATITUDE. //- preferred parameter\nparameter targetapoapsis is 200.\nIF HASTARGET = TRUE {\n  SET initialheading to ARCCOS((2*7616*sin(LATITUDE)*sin((TARGET:ORBIT:INCLINATION - LATITUDE)/2)*cos((TARGET:ORBIT:INCLINATION \u002B LATITUDE)/2))/SQRT(4*(7616.6)^2*(sin((TARGET:ORBIT:INCLINATION - LATITUDE)/2))^2-(4*7616.6*465.1*cos(LATITUDE)*sin((TARGET:ORBIT:INCLINATION \u002B LATITUDE)/2)*sin((TARGET:ORBIT:INCLINATION - LATITUDE)/2)) \u002B (465.1*cos(LATITUDE)^2))). //Ares Propulsion Stack is in 500km orbit, so target orbital velocity is set to 500 km.  More accurate to set to expected orbital insertion velocity?\n} \nELSE {\n  SET targetvelocity to SQRT(EARTH:MU/targetapoapsis).\n  SET initialheading to ARCCOS((2*targetvelocity*sin(LATITUDE)*sin((targetinclination - LATITUDE)/2)*cos((targetinclination \u002B LATITUDE)/2))/SQRT(4*(targetvelocity)^2*(sin((targetinclination - LATITUDE)/2))^2-(4*targetvelocity*465.1*cos(LATITUDE)*sin((targetinclination \u002B LATITUDE)/2)*sin((targetinclination - LATITUDE)/2)) \u002B (465.1*cos(LATITUDE)^2))).\n}\n\nSET Inboard to SHIP:PARTSTAGGED(\u0022F1AInboard\u0022)[0].\nSET Outboard to SHIP:PARTSTAGGED(\u0022F1AOutboard1\u0022)[0].\nSET J2S to SHIP:PARTSTAGGED(\u0022J2S\u0022)[0].\nSET \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E to SHIP:PARTSTAGGED(\u0022SRB1\u0022)[0].\nSET MSIC to SHIP:PARTSTAGGED(\u0022MS-IC\u0022)[0].\nSET MSII to SHIP:PARTSTAGGED(\u0022MS-II\u0022)[0].\n\nCLEARSCREEN.\n\nLOCK STEERING to Autopilot.\nLOCK Autopilot to \u0022Kill\u0022.\nLOCK THROTTLE to 1.0.\n\nSET STEERINGMANAGER:MAXSTOPPINGTIME to 0.5. //default value 2\nSTAGE. //F-1A ignition\n\nSet Kppitch to 0.00264. //Ku = 0.0033?  \nSet Kipitch to 0.\nSet Kdpitch to 0.0198.\n\nSet Kpinc to 1.6. //Ku = 2\nSet Kiinc to 0.\nSet Kdinc to 5.8.\n\n//Steering program.\n\nWHEN SHIP:VELOCITY:SURFACE:MAG \u0026gt;= 50 THEN {\n  //Pitch then roll for inclination.\n  LOCK Autopilot to HEADING(initialheading,80).\n  IF ROUND(VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,STEERINGMANAGER:TARGET:VECTOR))) = 90 { //Sometimes, the rocket pointing straight up causes next when trigger to be true, so this line prevents a vertical launch from triggering the gravity turn code.\n    RETURN true.\n  }\n  //Gravity turn\n  WHEN SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z \u0026lt;= 0 AND VANG(UP:VECTOR, SHIP:VELOCITY:SURFACE) \u0026lt; 80 THEN { //triggers too early for some inclinations.\n   LOCK Autopilot to SHIP:VELOCITY:SURFACE.\n   WHEN SHIP:ALTITUDE \u0026gt; 75000 THEN { //At 75km, start program to control pitch based on current rocket path - Want to initiate heading guidance after MS-II ignition.\n     PRINT \u0022Initiate Closed-Loop Steering\u0022 at (0,10).\n\t SET PID1 TO PIDLOOP(Kpinc, Kiinc, Kdinc). //Inclination guidance.\n     SET PID2 TO PIDLOOP(Kppitch,Kipitch,Kdpitch). //Heading guidance - bouncy pitch at lower bound.\n\t IF HASTARGET = TRUE {\n       SET PID1:SETPOINT to TARGET:ORBIT:INCLINATION. \n     }\n     ELSE {\n       SET PID1:SETPOINT to targetinclination.\n     }\n\t SET PID2:SETPOINT to 0.\n     SET Pitch1 to VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,SHIP:FACING:VECTOR)). //Doesn\u0027t represent pitch - initialize PID?\n\t SET Heading1 TO -SHIP:BEARING.\n\t WHEN true THEN { //Iterative guidance.\n\t   SET dPitch to PID2:UPDATE(TIME:SECONDS, SHIP:VERTICALSPEED).\n\t   SET dHeading to -PID1:UPDATE(TIME:SECONDS,SHIP:ORBIT:INCLINATION). //sign of dHeading negative if rocket approaching descending node, positive if rocket approaching ascending node. - Might want to kill heading changes until MS-II ignition.  MS-IC steers too violently.\n\t   IF Outboard:FUELFLOW \u0026gt; 0 AND (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 2 AND J2S:FUELFLOW = 0 { //Hold pitch for MS-IC/MS-II staging.\n\t\t SET Autopilot TO \u0022Kill\u0022.\n\t   }\n\t   //Pitch control.\n\t   ELSE IF Pitch1 \u0026gt;= 15 OR (VANG(SHIP:FACING:VECTOR, VXCL(UP:VECTOR,SHIP:FACING:VECTOR)) \u0026gt;= 15 AND SHIP:FACING:VECTOR:Y \u0026gt;= 0) { //Transition from gravity turn or oversteer past maximum.\n\t     SET Pitch1 to 14.9.\n\t\t PRINT \u0022\u002BLimit - Pitch.            \u0022 at (0,6). //change this text?\n\t   }\n\t   ELSE IF (Pitch1 \u0026lt; 15 AND Pitch1 \u0026gt;= 0) AND SHIP:FACING:VECTOR:Y \u0026gt;= 0 { //min and max pitch\n\t     PRINT \u0022Pitch Guidance Converging.             \u0022 at (0,6).\n\t     SET Pitch1 to Pitch1 \u002B dPitch. \t \n\t   }\n\t   ELSE { //oversteer past minimum //fine after stage 2 ignition?\n\t     PRINT \u0022-Limit - Pitch.                         \u0022 at (0,6).\n\t     SET Pitch1 to 0.1.\n\t   }\n\t   //Heading Control.\n\t   IF STAGE:NUMBER \u0026lt;= 19 { //Heading control starts after skirt sep.\n\t     IF (-SHIP:BEARING \u0026gt; 10 \u002B initialheading) OR (Heading1 \u0026gt; 10 \u002B initialheading) {\n\t       PRINT \u0022\u002BLimit - Heading.         \u0022 at (0,7).\n\t       SET Heading1 TO initialheading \u002B 9.9.\n\t\t   //SET dHeading to -0.1.\n         }\t\t \n\t     ELSE IF (-SHIP:BEARING \u0026lt;= (10 \u002B initialheading) AND -SHIP:BEARING \u0026gt;= (initialheading - 10)) AND (Heading1 \u0026lt;= (10 \u002B initialheading) AND Heading1 \u0026gt;= (initialheading - 10)) { //heading limits if needed.\n\t       PRINT \u0022Heading Guidance Converging.             \u0022 at (0,7).\n\t       SET Heading1 to Heading1 \u002B dHeading.  //Inclination correction - needs to be limited\n\t     }\n\t     ELSE IF (-SHIP:BEARING \u0026lt; initialheading - 10) OR (Heading1 \u0026lt; initialheading - 10) { \n\t       PRINT \u0022-Limit - Heading.                 \u0022 at (0,7).\n\t       SET Heading1 TO initialheading - 9.9.\n\t\t   //SET dHeading to \u002B0.1.\n\t     }\n       }\n\t   ELSE PRINT \u0022Heading Unlocked.\u0022 at (0,7).\n\t   IF SHIP:ORBIT:PERIAPSIS \u0026gt; 0 { //This sets pitch to zero for final orbital insertion to make orbit as circular as possible.\n\t     PRINT \u0022Terminal Guidance                    \u0022 at (0,6).\n\t\t PRINT \u0022                                     \u0022 at (0,7).\n\t\t SET Pitch1 to 0. //Terminal guidance for PE \u0026gt; 0.\n\t\t RETURN false. //Kill steering loop.\n\t   }\n\t   SET Autopilot TO HEADING(Heading1,Pitch1).  \n       RETURN true.\t   \n\t }  \n   }  \n  }\n}\n\n//Staging control.\n\n//F-1A Ignition\nUNTIL (Outboard:THRUST/Outboard:MAXTHRUST) \u0026gt; 0.88 {\n  IF(Outboard:MAXTHRUST \u0026gt; 0.0001) {  //Prevent NAN\n    LaunchDisplay(0,2,Outboard:THRUST/Outboard:MAXTHRUST,0).\n  }\n}\n\nSTAGE.  //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E Ignition and Liftoff\nCLEARSCREEN.\n\n\nUNTIL MISSIONTIME \u0026gt; 24 { //originally 25\n  IF(\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026gt; 0.0001 AND \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST \u0026gt; 0.0001) { //Prevent NAN\n    LaunchDisplay(1,2,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  }\n}\n\nCLEARSCREEN.\n\nLOCK THROTTLE to 0.01. //F-1A throttle to 60% for max Q\n\nDECLARE LOCAL ddyn to 0.\nDECLARE LOCAL dynzero to 0.\nSET t0 to TIME:SECONDS.\n\nUNTIL ddyn \u0026lt;= -1 { //originally 0.4\n  LaunchDisplay(2,0,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST).\n  If TIME:SECONDS \u0026lt;\u0026gt; t0 { //Prevents NAN.\n    SET ddyn TO ((SHIP:Q*constant:ATMtokPa) - dynzero)/(TIME:SECONDS - t0).\n\tSET dynzero TO (SHIP:Q*constant:ATMtokPa).\n    SET t0 to TIME:SECONDS.\n  } \n}\n\nLOCK THROTTLE to 0.63. //F-1A throttle to 85%\nSET g TO EARTH:MU/EARTH:RADIUS^2.\nLOCAL LOCK acc TO SHIP:SENSORS:ACC - SHIP:SENSORS:GRAV. //if grav code doesn\u0027t work, set these to global.\nLOCAL LOCK Gforce TO acc:MAG/g.\n\nWHEN Gforce \u0026gt; 4 THEN LOCK THROTTLE TO 0.01. //First G force moderation throttleback (60%).\n\nCLEARSCREEN.\n\nUNTIL \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:THRUST/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST \u0026lt; .09 {\n  IF Outboard:THRUST/Outboard:MAXTHRUST \u0026lt; .90 AND Outboard:THRUST/Outboard:MAXTHRUST \u0026gt; .65 { //was .8\n    LaunchDisplay(3,1,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST). //85% thrust.\n  }\n  ELSE {\n    LaunchDisplay(4,0,Outboard:THRUST/Outboard:MAXTHRUST,\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:Thrust/\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E:MAXTHRUST). //60% thrust.\n  }\n}\n\nSTAGE. //\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E jettison\n\nLOCK THROTTLE to 1.0. //F-1A throttle to 100%\n\nCLEARSCREEN.\n\nUNTIL (MSIC:MASS - MSIC:DRYMASS)/(Outboard:FUELFLOW * 5) \u0026lt; 26 {\n  LaunchDisplay(5,2,Outboard:THRUST/Outboard:MAXTHRUST).\n}\n\nInboard:SHUTDOWN. //Inboard cut-off (25s before MS-IC burnout).\n\nCLEARSCREEN.\n\nWHEN MISSIONTIME \u0026gt; 160 THEN LOCK THROTTLE TO 0.63. //Second G force moderation throttleback (85%).\n\n//Remainder of MS-IC Flight\nUNTIL Outboard:FLAMEOUT = TRUE {\n  IF Outboard:MAXTHRUST \u0026gt; 0.0001 AND Outboard:FLAMEOUT = FALSE {//Prevent NAN\n    IF Outboard:Thrust/Outboard:MAXTHRUST \u0026gt; .95 AND Outboard:Thrust/Outboard:MAXTHRUST \u0026lt; 1.05 {\n\t  LaunchDisplay(6,2,Outboard:Thrust/Outboard:MAXTHRUST). //100% thrust.\n\t}\n\tELSE {\n      LaunchDisplay(4,1,Outboard:Thrust/Outboard:MAXTHRUST). //85% thrust.\n\t}  \n  }\n}\n\n//Main Engine Cut-Off\nCLEARSCREEN.\nLaunchDisplay(7,3,0).\nLOCK THROTTLE TO 1.\nWAIT 1.\n\n\nCLEARSCREEN.\nSTAGE. //MS-IC Staging.\nLaunchDisplay(8,3,0).\nWAIT 3.\n\nCLEARSCREEN.\n\n\nSTAGE. //MS-II Ignition.\nSET t0 to TIME:SECONDS.\n\nUNTIL TIME:SECONDS - t0 \u0026gt; 30 {\n  LaunchDisplay(9,2,J2S:THRUST/J2S:MAXTHRUST).\n} \n\nCLEARSCREEN.\n\nSTAGE. //Skirt seperation\nSet t0 to TIME:SECONDS.\n\nUNTIL TIME:SECONDS - t0 \u0026gt; 6 {\n  LaunchDisplay(10,2,J2S:THRUST/J2S:MAXTHRUST).\n}\n\nCLEARSCREEN.\n\n//Keep code running until SECO.\nSET v_orb to 10000000.\nWHEN SHIP:ORBIT:PERIAPSIS \u0026gt;= 0 THEN SET v_orb to SQRT(EARTH:MU/(SHIP:ALTITUDE \u002B EARTH:RADIUS)). //Was periapsis.\n\nUNTIL SHIP:VELOCITY:ORBIT:MAG \u0026gt;= v_orb { //SECO when v_orb for circular orbit at alt = periapsis reached.\n  LaunchDisplay(11,2,J2S:THRUST/J2S:MAXTHRUST).\n}\n\n//SECO - Orbit insertion.\nCLEARSCREEN.\nLOCK THROTTLE to 0.\n\nPRINT \u0022Secondary Engine Cut-Off\u0022 at (0,3).\nPRINT \u0022Go for Orbit\u0022 at (0,4).\n\n//Makes sure throttle is set to zero after program terminates.\nSET SHIP:CONTROL:PILOTMAINTHROTTLE to 0.\u003C/pre\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//Display program for Ares Launch program.\n\nSET AbMode to list(\u0022Ia\u0022,\u0022Ib\u0022,\u0022Ic\u0022,\u0022II\u0022,\u0022III\u0022).\nSET GuidMode to list(\u0022Vertical Launch\u0022, \u0022Pitch/Roll Program\u0022, \u0022Gravity Turn       \u0022, \u0022Iterative Guidance\u0022).\nSET State to list(\u0022Ignition Sequence Start\u0022, \u0022Liftoff\u0022, \u0022Max Q\u0022, \u0022Throttle Up     \u0022, \u0022G Throttleback         \u0022, \u0022\u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E Sep\u0022, \u0022Center Engine Shutdown\u0022, \u0022Main Engine Cut-Off\u0022, \u0022Staging\u0022, \u0022Stage Two Ignition\u0022, \u0022Skirt Separation\u0022, \u0022Boosting Into Orbit\u0022).\nSET Level to list(\u002260\u0022, \u002285\u0022, \u0022100\u0022, \u00220\u0022).\n\nfunction LaunchDisplay{\n\n  parameter statevariable.\n  parameter throttlelevel.\n  parameter liquidthrust.\n  parameter SRBthrust is 0.\n  \n  //Abort mode.\n  SET sa to \u0022Abort Mode: \u0022.\n  SET la to sa:LENGTH.\n  PRINT sa at (0,0).\n  IF SHIP:ALTITUDE \u0026lt; 3000 {\n    PRINT AbMode[0] at (la,0).\n  }\n  ELSE IF SHIP:ALTITUDE \u0026lt; 30500 {\n    PRINT AbMode[1] at (la,0).\n  }\n  ELSE IF SHIP:ALTITUDE \u0026lt; 80000 {\n    PRINT AbMode[2] at (la,0).\n  }\n  ELSE IF (J2S:IGNITION = FALSE) OR (9.8 * J2S:\u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E * LN(SHIP:MASS/(SHIP:WETMASS - MSII:WETMASS)) \u0026gt; 2881) OR STAGE:NUMBER \u0026gt; 19 { //\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E calculated here is 400 more than possible stage \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E.\n    PRINT AbMode[3] at (la,0).\n    AG27 on.\n  }\n  ELSE {\n    PRINT AbMode[4] at (la,0).\n  }\n  \n  //Launch situation, throttle, and thrust levels.\n  PRINT \u0022Situation: \u0022 \u002B State[statevariable] at (0,1).\n  \n  PRINT \u0022Throttle Setting: \u0022 \u002B Level[throttlelevel] \u002B \u0022%  \u0022 at (0,2).\n  \n  IF statevariable \u0026lt;= 7 {\n    PRINT \u0022F-1A Thrust: \u0022 \u002B ROUND(liquidthrust * 100,1) \u002B \u0022%  \u0022 at (0,3).\n  } ELSE {\n    PRINT \u0022J-2S Thrust: \u0022 \u002B ROUND(liquidthrust * 100,1) \u002B \u0022%  \u0022 at (0,3).\n  }\n  \n  IF statevariable \u0026lt;= 4 AND statevariable \u0026gt; 0 {\n    PRINT \u0022UA1564 Thrust: \u0022 \u002B ROUND(SRBthrust * 100,1) \u002B \u0022%  \u0022 at (0,4).\n  }\n  \n  //Guidance mode\n  \n  SET sb to \u0022Guidance Mode: \u0022.\n  SET lb to sb:LENGTH.\n  PRINT sb at (0,5).\n  IF SHIP:VELOCITY:SURFACE:MAG \u0026lt; 50 {\n    PRINT GuidMode[0] at (lb,5).\n  }\n  ELSE IF (SHIP:FACING:VECTOR:NORMALIZED:Z - SHIP:VELOCITY:SURFACE:NORMALIZED:Z \u0026gt; 0 OR VANG(UP:VECTOR, SHIP:VELOCITY:SURFACE) \u0026gt;= 80) AND MISSIONTIME \u0026lt;= 24 {\n    PRINT GuidMode[1] at (lb,5).\n  }\n  ELSE IF SHIP:ALTITUDE \u0026lt;= 75000 {\n    PRINT GuidMode[2] at (lb,5).\n  }\n  ELSE {\n    PRINT GuidMode[3] at (lb,5).\n  }\n}\u003C/pre\u003E\n\u003Cp\u003E\nI forgot to post changes to the display subprogram. \u00A0Oh well.\n\u003C/p\u003E\n\u003Cp\u003E\nAll that\u0027s left that I want to do now is texture replacement. \u00A0Finally close to launch.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-28T22:50:29Z\u0022 title=\u002204/28/2017 10:50  PM\u0022 data-short=\u00227 yr\u0022\u003EApril 28, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-05-06T19:40:19Z","Content":"\n\u003Cp\u003E\nTexture replacement is almost done. \u00A0Kudos to \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/144656-theysen/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022144656\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/144656-theysen/\u0022 rel=\u0022\u0022\u003E@Theysen\u003C/a\u003E\u00A0for showing me where the USA textures were for FASA parts, and \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/97711-raidernick/\u0026amp;do=hovercard\u0022 data-mentionid=\u002297711\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/97711-raidernick/\u0022 rel=\u0022\u0022\u003E@raidernick\u003C/a\u003E\u00A0for making them. \u00A0Getting those \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E textures swapped was a bit of pain though.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022E306264319C412BEDB125054B90DB891EAD66DC8 (1280\u00D7720)\u0022 src=\u0022https://steamuserimages-a.akamaihd.net/ugc/818937339234447296/E306264319C412BEDB125054B90DB891EAD66DC8/\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-05-14T17:08:14Z","Content":"\n\u003Cp\u003E\nI got a surprise in the mail today.\n\u003C/p\u003E\n\u003Cp\u003E\nI had a friend look for a copy of Voyage in a book store in Texas. \u00A0They found it, but they never said anything else.\n\u003C/p\u003E\n\u003Cp\u003E\nWell, it arrived today. \u00A0I finally have the book legit, and now I can do this recreation justice by having the actual book this whole mission is based on.\n\u003C/p\u003E\n\u003Cp\u003E\nUnfortunately, I can\u0027t stream the mission due to current technical limitations, but it doesn\u0027t mean I can\u0027t in the future. \u00A0What I might do is just screenshots first, then a video, which I want to do eventually. \u00A0I do want to do a run through of the mission first for practice and to see if I need to make changes to the propulsion stage.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, can\u0027t wait to finish the book and then see if I can\u0027t make this first attempt like an illustrated slideshow of the book.\n\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-05-26T23:10:24Z","Content":"\n\u003Cp\u003E\nMore Venus probe tests.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00226F3385DDC041D558541BED4654860F6FE8A02841 (1280\u00D7720)\u0022 src=\u0022https://steamuserimages-a.akamaihd.net/ugc/767148109978722134/6F3385DDC041D558541BED4654860F6FE8A02841/\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nUsing a probe with a different skin provided by \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/96203-mecripp/\u0026amp;do=hovercard\u0022 data-mentionid=\u002296203\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/96203-mecripp/\u0022 rel=\u0022\u0022\u003E@MeCripp\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022E56A9EBF4C8004412E88ABAF97D6996278C99BC7 (1280\u00D7720)\u0022 src=\u0022https://steamuserimages-a.akamaihd.net/ugc/767148109978725094/E56A9EBF4C8004412E88ABAF97D6996278C99BC7/\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nEDIT: As far as what I have left to do, or at least what I want to do before I start the mission, it\u0027s about three things:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nTest Venus probe entry paths.\n\u003C/li\u003E\n\u003Cli\u003E\nPractice MEM descent from an elliptical orbit. \u00A0This is just in case the Ares cluster can only make an elliptical orbit around Mars without running out of delta V. \u00A0In the book, I believe they make an initial elliptical orbit, and I\u0027ll have to check if they circularize it like with Apollo before detaching or not. \u00A0I plan on trying to make my Martian orbit as circular as possible before landing, but only if necessary. \u00A0I know the MEM can reach the Ares cluster in an elliptical orbit. \u00A0I just don\u0027t know if it can descend from one without additional solid rocket motors.\n\u003C/li\u003E\n\u003Cli\u003E\nFast forward my game time to the appropriate time, and then get the flight plan from Flyby Finder and KSP TOT.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-05-27T04:24:08Z\u0022 title=\u002205/27/2017 04:24  AM\u0022 data-short=\u00227 yr\u0022\u003EMay 27, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-06-22T17:37:34Z","Content":"\n\u003Cp\u003E\nHey everyone. \u00A0Just an update.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve gotten into the game Payday 2, and I\u0027ve been focusing on trying to find work as a tutor, so this project got put on hold. \u00A0I do intend on flying the mission very soon though as I\u0027m pretty much ready to go. \u00A0However, I want to know what you guys would love to see from me as far as content. \u00A0Would you like a video series on the mission, or illustrated pictures? \u00A0If I go for the former, I can figure out how to make a video and put something nice together. \u00A0I\u0027ve had ideas floating in my head for either an extended single\u00A0video like Chris P Bacon\u0027s and rsferino\u0027s video, or a series of videos that go into the mission in more detail. \u00A0For the latter, I can post a new thread here or continue this thread with pictures.\n\u003C/p\u003E\n\u003Cp\u003E\nLet me know so I can focus on one or the other going forward and make plans to do the mission soon. \u00A0I want to complete this project so I can move forward with a couple of planned future missions based in the Voyage universe:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nAres 2: Second mission to Mars. \u00A0Includes unmanned launch of cargo MEM on a single Saturn VB followed by another manned mission with a cosmonaut (since they may need Russian funding for a second mission)\n\u003C/li\u003E\n\u003Cli\u003E\nApollo to Titan: Send a craft in the Voyage-verse to Titan. \u00A0It\u0027s not based on the book Titan, so it\u0027s not a one-way trip. \u00A0This would also be an US-Russia collab. \u00A0Russia might launch nuclear components on their N-1 such as a reactor and NERVA engines. \u00A0This assumes Russia has been developing nuclear technology in secret and didn\u0027t stop after Apollo N. \u00A0NASA would provide the fueling and living quarters based on the Ares launch vehicle. \u00A0The whole craft would probably take Cassini\u0027s route to Saturn, but I\u0027d have to figure out how to get them home after their landing on Titan. \u00A0I also want to use the MEM for a Titan landing, modified for landing on Titan, but this may change.\n\u003C/li\u003E\n\u003C/ul\u003E\n"},{"CreatedByName":"ZaPPPa","CreatedById":94708,"CreatedDateTime":"2017-06-23T22:59:46Z","Content":"\n\u003Cp\u003E\nThis is one impressive project. I have not read through all your updates yet, but will sure be following along.\n\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-06-27T15:11:54Z","Content":"\n\u003Cp\u003E\nI hope to finish it soon.\u00A0 I\u0027ve done more than necessary, but I felt like digging deep into doing things I don\u0027t normally do.\u00A0 It helps to have a passion for physics and space exploration.\n\u003C/p\u003E\n"},{"CreatedByName":"ZaPPPa","CreatedById":94708,"CreatedDateTime":"2017-06-28T04:19:41Z","Content":"\n\u003Cp\u003E\nI completely understand... That\u0027s how my little adventure story got completely out of control and I am currently at\u00A0203 pages and over 72,000 words.. Basically a decent size novel by now.. and I\u0027m not even half done.\n\u003C/p\u003E\n"},{"CreatedByName":"Nittany Tiger","CreatedById":123570,"CreatedDateTime":"2017-07-17T16:56:25Z","Content":"\n\u003Cp\u003E\nSo in the book, the Ares cluster gets in an initial 219.9 mi x 12,611.3 mi orbit, or in metric, 353.9 km x 20,259.5 km.\u00A0 It\u0027s a pretty eccentric orbit in terms of orbits with an eccentricity of 0.727.\u003Cimg alt=\u0022D7CA1AB1B60E968AA4AF940E53CD4EC1586F64DB\u0022 class=\u0022ipsImage\u0022 height=\u0022576\u0022 src=\u0022https://steamuserimages-a.akamaihd.net/ugc/831329083837833555/D7CA1AB1B60E968AA4AF940E53CD4EC1586F64DB/\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI set the orbit using Hyperedit and did some descent tests from this orbit.\u00A0 Landing on Mars is very possible from this orbit, so it might be one aspect of the book that\u0027s valid.\u00A0 I still wonder if the Ares cluster did another burn to circularize, though.\n\u003C/p\u003E\n\u003Cp\u003E\nThe Challenger MEM actually does two solid retroburns in the book.\u00A0 I guess this might be a departure point in this simulation unless I could edit the part config file for the retropack to give it two \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E tanks and allow for two ignitions.\u00A0 Could do it in the future.\u00A0 I think for now, it\u0027s OK to do one burn to the target, especially with the aid of the Trajectories mod.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-17T17:00:59Z\u0022 title=\u002207/17/2017 05:00  PM\u0022 data-short=\u00226 yr\u0022\u003EJuly 17, 2017\u003C/time\u003E by Nittany Tiger\u003C/strong\u003E\n\u003Cbr\u003EResolving issues getting image to embed.\n\u003C/span\u003E\n"}]}