{"TopicId":70665,"ForumId":29,"TopicTitle":"[0.23.5] updated auto load on startup code?","CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-04-26T23:27:18Z","PageNum":1,"Articles":[{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-04-26T23:27:18Z","Content":"\n\u003Cp\u003EHello.\u003C/p\u003E\u003Cp\u003EI am trying to use the popular automatically-load-some-savegame-on-KSP-start code that has been floating around. It looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing KSP;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//This will kick us into the save called default and set the first vessel active\u003Cbr\u003E[KSPAddon(KSPAddon.Startup.MainMenu, false)]\u003Cbr\u003E    public class Debug_AutoLoadPersistentSaveOnStartup : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        //use this variable for first run to avoid the issue with when this is true and multiple addons use it\u003Cbr\u003E        public static bool first = true;\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            //only do it on the first entry to the menu\u003Cbr\u003E            if (first)\u003Cbr\u003E            {\u003Cbr\u003E                first = false;\u003Cbr\u003E                HighLogic.SaveFolder = \u0022default\u0022;\u003Cbr\u003E                var game = GamePersistence.LoadGame(\u0022persistent\u0022, HighLogic.SaveFolder, true, false);\u003Cbr\u003E                if (game != null \u0026amp;\u0026amp; game.flightState != null \u0026amp;\u0026amp; game.compatible) {\u003Cbr\u003E                    FlightDriver.StartAndFocusVessel(game, game.flightState.activeVesselIdx);\u003Cbr\u003E                } // end if\u003Cbr\u003E                //CheatOptions.InfiniteFuel = true;\u003Cbr\u003E                //CheatOptions.InfiniteRCS = true;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe problem with this code after \u003Cstrong\u003E0.23.5\u003C/strong\u003E is that the game is populated with asteroids, and they are \u003Cstrong\u003EVessel\u003C/strong\u003Es, and they are usually in your game before your testing vessel.\u003C/p\u003E\u003Cp\u003ESo, I tried to find the first vessel with SCANsat equipment on it (which presumably would work fine). However, I can only see a way to get a Vessel or a GUID back from the Vessel. I don\u0027t know how to get the right vessel.\u003C/p\u003E\u003Cp\u003EI did find a workaround, however, until someone suggests the correct way:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing KSP;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003Eusing SCANsat;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//This will kick us into the save called default and set the first vessel active\u003Cbr\u003E[KSPAddon(KSPAddon.Startup.MainMenu, false)]\u003Cbr\u003E    public class Debug_AutoLoadPersistentSaveOnStartup : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        //use this variable for first run to avoid the issue with when this is true and multiple addons use it\u003Cbr\u003E        public static bool first = true;\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            //only do it on the first entry to the menu\u003Cbr\u003E            if (first)\u003Cbr\u003E            {\u003Cbr\u003E                first = false;\u003Cbr\u003E                HighLogic.SaveFolder = \u0022SCANsat Testing\u0022;\u003Cbr\u003E                var game = GamePersistence.LoadGame([B]\u0022quicksave\u0022[/B], HighLogic.SaveFolder, true, false);\u003Cbr\u003E                if (game != null \u0026amp;\u0026amp; game.flightState != null \u0026amp;\u0026amp; game.compatible) {\u003Cbr\u003E                    foreach(Vessel v in FlightGlobals.Vessels) {\u003Cbr\u003E                        if (SCANsat.SCANcontroller.controller.isVesselKnown(v)) {\u003Cbr\u003E                            FlightGlobals.ForceSetActiveVessel (v);\u003Cbr\u003E                            /* FIXME: we should set the active vessel here, or convert it into an int somehow */\u003Cbr\u003E                            break;\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                    /* and we should use that int here */\u003Cbr\u003E                    FlightDriver.StartAndFocusVessel(game, game.flightState.activeVesselIdx);\u003Cbr\u003E                } // end if\u003Cbr\u003E                //CheatOptions.InfiniteFuel = true;\u003Cbr\u003E                //CheatOptions.InfiniteRCS = true;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo just make a quicksave while the vessel in question is active, and load it instead of the persistent file.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-26T23:30:46Z\u0022 title=\u002204/26/2014 11:30  PM\u0022 data-short=\u002210 yr\u0022\u003EApril 26, 2014\u003C/time\u003E by technogeeky\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2014-04-27T00:16:38Z","Content":"\n\u003Cp\u003EThis is the update I made in my plugins. Using a for loop and breaking out when you find the vessel you want gives you the index to go to. In this code I am simply looking for the first vessel in the save that is not an unknown or spaceobject - if you want some more logic like your scansat check you could add it where I\u0027ve made the comments\u003C/p\u003E\u003Cp\u003EThe #if DEBUG and #endif mean I never have to rem the code, I just build the release version for publishing and this is not included.\u003C/p\u003E\u003Cp\u003EReminds me I should update my blog post about that too\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E#if DEBUG\u003Cbr\u003E    //This will kick us into the save called default and set the first vessel active\u003Cbr\u003E    [KSPAddon(KSPAddon.Startup.MainMenu, false)]\u003Cbr\u003E    public class Debug_AutoLoadPersistentSaveOnStartup : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        //use this variable for first run to avoid the issue with when this is true and multiple addons use it\u003Cbr\u003E        public static bool first = true;\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            //only do it on the first entry to the menu\u003Cbr\u003E            if (first)\u003Cbr\u003E            {\u003Cbr\u003E                first = false;\u003Cbr\u003E                HighLogic.SaveFolder = \u0022default\u0022;\u003Cbr\u003E                Game game = GamePersistence.LoadGame(\u0022persistent\u0022, HighLogic.SaveFolder, true, false);\u003Cbr\u003E\u003Cbr\u003E                if (game != null \u0026amp;\u0026amp; game.flightState != null \u0026amp;\u0026amp; game.compatible)\u003Cbr\u003E                {\u003Cbr\u003E                    Int32 FirstVessel;\u003Cbr\u003E                    Boolean blnFoundVessel=false;\u003Cbr\u003E                    for (FirstVessel = 0; FirstVessel \u0026lt; game.flightState.protoVessels.Count; FirstVessel\u002B\u002B)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (game.flightState.protoVessels[FirstVessel].vesselType != VesselType.SpaceObject \u0026amp;\u0026amp;\u003Cbr\u003E                            game.flightState.protoVessels[FirstVessel].vesselType != VesselType.Unknown)\u003Cbr\u003E                        {\u003Cbr\u003E                            [COLOR=\u0022#008000\u0022]////////////////////////////////////////////////////\u003Cbr\u003E                            //PUT ANY OTHER LOGIC YOU WANT IN HERE//\u003Cbr\u003E                            ////////////////////////////////////////////////////[/COLOR]\u003Cbr\u003E                            blnFoundVessel = true;\u003Cbr\u003E                            break;\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                    if (!blnFoundVessel)\u003Cbr\u003E                        FirstVessel = 0;\u003Cbr\u003E                    FlightDriver.StartAndFocusVessel(game, FirstVessel);\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E                //CheatOptions.InfiniteFuel = true;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E#endif\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2014-04-27T00:43:41Z","Content":"\n\u003Cp\u003EUpdated my other stuff too, but forgot to say if you want to do your scansat test you keep your if statement and use the game.flightState.protoVessels[FirstVessel].vesselRef property to do the test.\u003C/p\u003E\u003Cp\u003Eeg. this part\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        if (game.flightState.protoVessels[FirstVessel].vesselType != VesselType.SpaceObject \u0026amp;\u0026amp;\u003Cbr\u003E            game.flightState.protoVessels[FirstVessel].vesselType != VesselType.Unknown)\u003Cbr\u003E        {\u003Cbr\u003E            ////////////////////////////////////////////////////\u003Cbr\u003E            //PUT ANY OTHER LOGIC YOU WANT IN HERE//\u003Cbr\u003E            ////////////////////////////////////////////////////\u003Cbr\u003E            blnFoundVessel = true;\u003Cbr\u003E            break;\u003Cbr\u003E        }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E...becomes...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        if (game.flightState.protoVessels[FirstVessel].vesselType != VesselType.SpaceObject \u0026amp;\u0026amp;\u003Cbr\u003E            game.flightState.protoVessels[FirstVessel].vesselType != VesselType.Unknown)\u003Cbr\u003E        {\u003Cbr\u003E            if (SCANsat.SCANcontroller.controller.isVesselKnown(game.flightState.protoVessels[FirstVessel].vesselRef)) \u003Cbr\u003E            {\u003Cbr\u003E                blnFoundVessel = true;\u003Cbr\u003E                break;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI just added an internal if to the first one then you can change this check whenever you need\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-27T00:45:48Z\u0022 title=\u002204/27/2014 12:45  AM\u0022 data-short=\u002210 yr\u0022\u003EApril 27, 2014\u003C/time\u003E by TriggerAu\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-04-27T00:49:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003ESo just make a quicksave while the vessel in question is active, and load it instead of the persistent file.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat was the first change I made to this snippet when I came across it in a forum post months ago. Why would you load the persistent save anyway?\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-04-27T02:11:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trigger Au\u0022 data-cite=\u0022Trigger Au\u0022\u003E\u003Cdiv\u003E \u003Cstrong\u003Eexactly the answer I needed in only minutes \u003C/strong\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks!\u003C/p\u003E\u003Cp\u003EI ran across ProtoVessels (and other Proto*-classes). What are those things for, in general?\u003C/p\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2014-04-27T02:25:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003EThanks!\u003Cp\u003EI ran across ProtoVessels (and other Proto*-classes). What are those things for, in general?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo probs\u003C/p\u003E\u003Cp\u003EFor the proto stuff - TBH I am only guessing, but I think they are like a subset of a full object. So a protovessel contains a list of some vessel properties and a link to the actual vessel so you can dig deeper. It would make code quicker to iterate through a list of smaller objects. But like I said, I\u0027m just guessing, only an actual game dev would know the real reason \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-04-27T03:41:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trigger Au\u0022 data-cite=\u0022Trigger Au\u0022\u003E\u003Cdiv\u003ENo probs\u003Cp\u003EFor the proto stuff - TBH I am only guessing, but I think they are like a subset of a full object. So a protovessel contains a list of some vessel properties and a link to the actual vessel so you can dig deeper. It would make code quicker to iterate through a list of smaller objects. But like I said, I\u0027m just guessing, only an actual game dev would know the real reason \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFYI, in the end I went with this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing KSP;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003Eusing SCANsat;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E[KSPAddon(KSPAddon.Startup.MainMenu, false)]\u003Cbr\u003E    public class Debug_AutoLoadPersistentSaveOnStartup : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E\u003Cbr\u003E        public static bool first = true;\u003Cbr\u003E        public static int  vId = 0;\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E            if (first)\u003Cbr\u003E            {\u003Cbr\u003E                first = false;\u003Cbr\u003E                HighLogic.SaveFolder = \u0022SCANsat Testing\u0022;\u003Cbr\u003E                var game = GamePersistence.LoadGame(\u0022persistent\u0022, HighLogic.SaveFolder, true, false);\u003Cbr\u003E                if (game != null \u0026amp;\u0026amp; game.flightState != null \u0026amp;\u0026amp; game.compatible) {\u003Cbr\u003E\u003Cbr\u003E                    List\u0026lt;ProtoVessel\u0026gt; allVessels = game.flightState.protoVessels;\u003Cbr\u003E                    int suitableVessel = 0;\u003Cbr\u003E\u003Cbr\u003E                    for (vId = 0; vId \u0026lt; allVessels.Count; vId\u002B\u002B) {\u003Cbr\u003E                        switch (allVessels[vId].vesselType) {\u003Cbr\u003E                            case VesselType.SpaceObject:     continue;    // asteroids\u003Cbr\u003E                            case VesselType.Unknown:        continue;    // asteroids in facepaint\u003Cbr\u003E                            default:                         suitableVessel = vId; // this one will do\u003Cbr\u003E                                                            break;\u003Cbr\u003E                        }\u003Cbr\u003E                    /* If you want a more stringent filter than\u003Cbr\u003E                     *     \u0022vessel is not inert ball of space dirt\u0022, then you\u003Cbr\u003E                     *     will want to do it here.\u003Cbr\u003E                     */\u003Cbr\u003E                    }\u003Cbr\u003E                    FlightDriver.StartAndFocusVessel(game, suitableVessel);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2014-04-27T08:08:22Z","Content":"\n\u003Cp\u003EI especially like \u0022vessel is not inert ball of space dirt\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-04-27T09:14:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003EI ran across ProtoVessels (and other Proto*-classes). What are those things for, in general?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EProto* are a conversion layer from \u0026amp; towards config nodes. The game will use them whenever you load or save your game. Thus they can be pretty helpful to find out what some stuff in a savegame means, since they mostly hold the same data with a longer property name or even partially serialize data.\u003C/p\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2014-04-27T10:14:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003EProto* are a conversion layer from \u0026amp; towards config nodes. The game will use them whenever you load or save your game. Thus they can be pretty helpful to find out what some stuff in a savegame means, since they mostly hold the same data with a longer property name or even partially serialize data.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENice Faark.. good to know I was totally wrong \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}