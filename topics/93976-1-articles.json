{"TopicId":93976,"ForumId":29,"TopicTitle":"Applying gravity to a spawned object","CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-12-21T11:02:11Z","PageNum":1,"Articles":[{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-12-21T11:02:11Z","Content":"\n\u003Cp\u003EHello again \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve been messing about with something for one of my project, and thanks to stupid_chris pointing me in the right direction, I can now spawn objects into game in flight. Great, I thought, I\u0027ll just apply rigidybody to it, set to use gravity and bingo! How very naive of me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI gather from \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/95648-Part-Gravity-Code\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E post that gravity is handled by FlightIntegrator and applied to vessels. Sooooo, if I want to spawn an object and have KSP apply gravity to it, do I have to make it a vessel, and if so, how do I do that? Or am I missing something entirely?\u003C/p\u003E\u003Cp\u003EThis works insofar-as the object appears, but then it\u0027s still on rails because rock.GoOffRails(); give a null-ref.:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            Vessel rock = FlightIntegrator.Instantiate(rockproto,_spawnPosition.transform.position, new Quaternion(0,0,0,0)) as Vessel;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            rock.GoOffRails();\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI have a feeling this is entirely the wrong way to go about it :/ I suppose a crude way would be simply to rigidybody.addforce() pointing towards OceanNormal as this will be purely ground based and orbital considerations don\u0027t matter. All musing welcome!\u003C/p\u003E\u003Cp\u003EThanks, as ever.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-12-21T15:22:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EI have a feeling this is entirely the wrong way to go about it :/ I suppose a crude way would be simply to rigidybody.addforce() pointing towards OceanNormal as this will be purely ground based and orbital considerations don\u0027t matter.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre these temporary ground objects like scatter? If so (and so their ultimate position in world space doesn\u0027t matter like, say, a KSC building would) then you\u0027re complicating things \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E KSP seems to adjust gravity properly and in the right direction for the current reference frame so you needn\u0027t do anything special:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://puu.sh/dDGFN/19650802b5.png\u0022 alt=\u002219650802b5.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EYou\u0027ll note in my code that I didn\u0027t do anything to make the coins fall: I just create them, set an initial rotation and then let gravity do its work\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    [KSPAddon(KSPAddon.Startup.Flight, false)]\u003Cbr\u003E    class GoldenShower : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        private Rect _windowRect = new Rect(400, 400, 128f, 1f);\u003Cbr\u003E        private GameObject _coinPrefab;\u003Cbr\u003E        private const int ShowerCoinCount = 800;\u003Cbr\u003E\u003Cbr\u003E        void Start()\u003Cbr\u003E        {\u003Cbr\u003E            _coinPrefab = GameObject.CreatePrimitive(PrimitiveType.Sphere); // note: comes with sphere collider\u003Cbr\u003E            _coinPrefab.transform.localScale = new Vector3(0.04f, 0.01f, 0.04f);\u003Cbr\u003E\u003Cbr\u003E            // KSP/Diffuse apparently needs a texture, can\u0027t just set a color like regular Diffuse shader\u003Cbr\u003E            var goldTexture = new Texture2D(1, 1);\u003Cbr\u003E            goldTexture.SetPixels32(new Color32[] {XKCDColors.GoldenYellow});\u003Cbr\u003E            goldTexture.Apply();\u003Cbr\u003E\u003Cbr\u003E            _coinPrefab.renderer.material = new Material(Shader.Find(\u0022KSP/Diffuse\u0022)) { mainTexture = goldTexture };\u003Cbr\u003E\u003Cbr\u003E            var rb = _coinPrefab.AddComponent\u0026lt;Rigidbody\u0026gt;();\u003Cbr\u003E            rb.mass = 0.01f;\u003Cbr\u003E            rb.angularDrag = 5f;\u003Cbr\u003E\u003Cbr\u003E            _coinPrefab.collider.material = new PhysicMaterial\u003Cbr\u003E            {\u003Cbr\u003E                frictionCombine = PhysicMaterialCombine.Maximum,\u003Cbr\u003E                bounceCombine = PhysicMaterialCombine.Minimum,\u003Cbr\u003E                bounciness = 0.45f,\u003Cbr\u003E                dynamicFriction = 0.05f,\u003Cbr\u003E                staticFriction = 0.25f\u003Cbr\u003E            };\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            _coinPrefab.SetActive(false);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        void OnGUI()\u003Cbr\u003E        {\u003Cbr\u003E            _windowRect = KSPUtil.ClampRectToScreen(GUILayout.Window(123, _windowRect, DrawWindow, \u0022Menu\u0022));\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void DrawWindow(int winid)\u003Cbr\u003E        {\u003Cbr\u003E            GUILayout.BeginVertical();\u003Cbr\u003E            GUILayout.Label(string.Format(\u0022Gravity: {0}\u0022, Physics.gravity.FString()));\u003Cbr\u003E            GUILayout.Label(string.Format(\u0022Accel: {0}\u0022, Physics.gravity.magnitude));\u003Cbr\u003E            if (GUILayout.Button(\u0022Increase monetary wealth?\u0022))\u003Cbr\u003E                StartCoroutine(CoinShower());\u003Cbr\u003E            GUILayout.EndVertical();\u003Cbr\u003E            GUI.DragWindow();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private float Random360()\u003Cbr\u003E        {\u003Cbr\u003E            return UnityEngine.Random.Range(0f, 360f);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        private System.Collections.IEnumerator CoinShower()\u003Cbr\u003E        {\u003Cbr\u003E            print(\u0022Let there be wealth!\u0022);\u003Cbr\u003E\u003Cbr\u003E            var vessel = FlightGlobals.ActiveVessel;\u003Cbr\u003E            float start = Time.realtimeSinceStartup;\u003Cbr\u003E\u003Cbr\u003E            for (int i = 0; i \u0026lt; ShowerCoinCount; \u002B\u002Bi)\u003Cbr\u003E            {\u003Cbr\u003E                var spawn = vessel.GetWorldPos3D() \u002B FlightGlobals.upAxis * 20f;\u003Cbr\u003E                var coin = (GameObject)Instantiate(_coinPrefab, spawn \u002B UnityEngine.Random.insideUnitSphere * 2f,\u003Cbr\u003E                    Quaternion.Euler(new Vector3(Random360(),\u003Cbr\u003E                                                 Random360(),\u003Cbr\u003E                                                 Random360())));\u003Cbr\u003E\u003Cbr\u003E                coin.rigidbody.velocity = vessel.rigidbody.velocity; // else if in orbit, coins will miss\u003Cbr\u003E\u003Cbr\u003E                // impart a bit of force to get it spinning\u003Cbr\u003E                coin.rigidbody.AddTorque(new Vector3(Random360() * 0.1f, Random360() * 0.1f, Random360() * 0.1f), ForceMode.Impulse);\u003Cbr\u003E\u003Cbr\u003E                coin.SetActive(true);\u003Cbr\u003E\u003Cbr\u003E                // we might need to spawn more than [fps] coins per second if we\u0027re to reach ShowerCoinCount in\u003Cbr\u003E                // two seconds\u003Cbr\u003E                // so delay here if we\u0027re ahead of schedule, otherwise continue dumping coins\u003Cbr\u003E                while ((Time.realtimeSinceStartup - start) / 2f \u0026lt;= (float) i / ShowerCoinCount)\u003Cbr\u003E                    yield return 0;\u003Cbr\u003E\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            print(\u0022Wealth complete\u0022);\u003Cbr\u003E        }\u003Cbr\u003E    }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-12-21T16:54:52Z","Content":"\n\u003Cp\u003EI think he might simply have forgotten to give the rigidbody a mass \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E Pretty sure default mass is zero, and therefore no gravity.\u003C/p\u003E\n"},{"CreatedByName":"JDP","CreatedById":30775,"CreatedDateTime":"2014-12-21T20:06:29Z","Content":"\n\u003Cp\u003EYour Gameobject needs both a collider and a Rigidbody in order for physics to do its work. Here\u0027s a look at how I implemented physics way back in the old \u003Ca href=\u0022https://github.com/JDPKSP/RemoteTechLegacy/blob/master/ModuleRTAnimatedTrackAntenna.cs#l764-784\u0022 rel=\u0022external nofollow\u0022\u003ERT1 code\u003C/a\u003E. This snippet has to do with antennae breaking apart under high airflow, just like solar panels do. So the Gameobjects handled are all preexisting objects within a part hierarchy, which all have a collider of some sort.\u003C/p\u003E\u003Cp\u003EIn order for the detached objects to behave properly within the drag of an atmosphere, I wrote a \u003Ca href=\u0022https://github.com/JDPKSP/RemoteTechLegacy/blob/master/ModuleRTAnimatedTrackAntenna.cs#l9-75\u0022 rel=\u0022external nofollow\u0022\u003EDragModel\u003C/a\u003E to handle that. Also to make sure that the objects are deleted once they go beyond the loading range from the active vessel. Looking at my code now, I see that I actually forgot to implement the last part.\u003C/p\u003E\u003Cp\u003EIn any case, you wont have to go overboard with adding a custom drag model. You can simply add the stock physicalObject to your GameObjects to make them behave properly within KSPs fiddly physics.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESomeRockGameObject.AddComponent\u0026lt;physicalObject\u0026gt;()\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd of course make sure that your GameObjects have both a collider and a RigidBody (that has a mass of \u0026gt;0).\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-12-22T11:03:38Z","Content":"\n\u003Cp\u003EYup, I was over-thinking it, and quite possibly did forget the mass or other prerequisite for gravity to work \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E Thanks for that little demo, there\u0027s loads of handy stuff in there, EvilReeper, and thanks for the extra references and tips JDP. I\u0027ll submit this for inclusion in the modding info links, I think, as it may prove useful to someone in the future.\u003C/p\u003E\u003Cp\u003EOne thing I can\u0027t figure out, having messed with a lot of the collider and physics material settings, is how to stop the objects falling through the terrain. Colliders appear to work, as they interact with vessel parts, but no matter what I do I can\u0027t stop them falling through the floor. Any ideas?\u003C/p\u003E\u003Cp\u003EAlso, class name really made me chuckle \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-22T14:41:58Z\u0022 title=\u002212/22/2014 02:41  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 22, 2014\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"JDP","CreatedById":30775,"CreatedDateTime":"2014-12-23T08:00:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EOne thing I can\u0027t figure out, having messed with a lot of the collider and physics material settings, is how to stop the objects falling through the terrain. Colliders appear to work, as they interact with vessel parts, but no matter what I do I can\u0027t stop them falling through the floor. Any ideas?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis was a known issue with concave colliders. Unity doesn\u0027t handle collision detection between two concave colliders that well, and since the terrain collider is concave, concave mesh colliders tend (or at least tended) to have some issues with the terrain. It could also be an issue with the terrain layermask though. Maybe someone has some more in-debth and up to date info on this.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-12-23T11:06:04Z","Content":"\n\u003Cp\u003EInterestingly, I found last night that using an object that\u0027s spawned from a .mu and has a sphere collider applied works fine. Using the potatoroid model, even having forced convex on the collider does not, and would always drop through the floor. Creating objects entirely with code, as in evilreepers example (which creates objects with sphere colliders) also results in objects going through the terrain, so I\u0027m thinking something is being overlooked there. I\u0027ll get back with any insights if I manage to find anything further, though, as I\u0027m still tinkering. Thanks for the physicalobject hint by the way, that\u0027s really handy. FFR, physicalobject.maxdistance units are meters.\u003C/p\u003E\u003Cp\u003EMerry Christmas \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}