{"TopicId":99043,"ForumId":34,"TopicTitle":"[1.2.2] TestFlight - v1.8.0 - 01 May 2017 - Bring Flight Testing to KSP!","CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-02-08T01:14:56Z","PageNum":10,"Articles":[{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2016-03-07T15:05:17Z","Content":"\n\u003Cp\u003E\nSo I\u0060m noticing that when I fly with no physics warp my engines seem much more reliable than when I fly with it.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyone else notice this?\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT :\n\u003C/p\u003E\n\u003Cp\u003E\nI also have noticed that the RD-108_8D75PS engine does not accumulate du and stays on 0 although it does not seem to fail either.\n\u003C/p\u003E\n\u003Cp\u003E\nIs there a particular log or similar I could post? I\u0060m running RO/RSS/RP-0 with one of the recommended engine packs although I\u0060m not sure which, could check if needed.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT 2 : yup multiple launches now and the RD-108_8D75PS is still on 0du with no failures. I\u0060m suspecting a .cfg issue as the other engines accumulate du fine.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT 3 : I will provide the following, seen from another thread.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222444106\u0022 data-ipsquote-contentid=\u002293045\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221457236171\u0022 data-ipsquote-userid=\u002275006\u0022 data-ipsquote-username=\u0022NathanKell\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 06/03/2016 at 3:49 AM, NathanKell said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCan you follow the steps in the How To Get Support sticky in modded support? A \u003Cem\u003Ecomplete\u003C/em\u003E modlist with versions, and your log (output-log.txt)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://www.filedropper.com/outputlog_1\u0022 rel=\u0022external nofollow\u0022\u003EHere\u003C/a\u003E is my output.log\n\u003C/p\u003E\n\u003Cp\u003E\nthis is my modlist\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nKSP: 1.0.5 (Win32) - Unity: 4.6.4f1 - OS: Windows 7 Service Pack 1 (6.1.7601) 64bit\u003Cbr\u003E\nFilter Extensions - 2.4.1.3\u003Cbr\u003E\nAdvanced Jet Engine - 2.6.1\u003Cbr\u003E\nAmbient Light Adjustment - 1.5.4.2\u003Cbr\u003E\nB9 Aerospace Procedural Parts - 0.40.1\u003Cbr\u003E\nCommunity Resource Pack - 0.4.9\u003Cbr\u003E\nConnected Living Space - 1.2.0.1\u003Cbr\u003E\nContract Configurator - 1.9.6\u003Cbr\u003E\nCustomBarnKit - 1.1.4\u003Cbr\u003E\nDeadly Reentry - 7.3.1\u003Cbr\u003E\nDMagic Orbital Science - 1.2\u003Cbr\u003E\nEditorExtensionsRedux - 3.0.2\u003Cbr\u003E\nEngine Lighting - 1.4.1\u003Cbr\u003E\nFerram Aerospace Research - 0.15.5.7\u003Cbr\u003E\nFirespitter - 7.1.5\u003Cbr\u003E\nGCMonitor - 1.3.2\u003Cbr\u003E\nRasterPropMonitor - 0.24.2\u003Cbr\u003E\nKerbal Construction Time - 1.3.1\u003Cbr\u003E\nKerbal Engineer Redux - 1.0.19.4\u003Cbr\u003E\nKerbal Joint Reinforcement - 3.1.4\u003Cbr\u003E\nKSP-AVC Plugin - 1.1.5\u003Cbr\u003E\nModularFlightIntegrator - 1.1.2\u003Cbr\u003E\nDocking Port Alignment Indicator - 6.2\u003Cbr\u003E\nProcedural Parts - 1.1.11\u003Cbr\u003E\nRCS Build Aid - 0.7.7\u003Cbr\u003E\nRealChute - 1.3.2.7\u003Cbr\u003E\nRealismOverhaul - 10.9.2\u003Cbr\u003E\nRealSolarSystem - 10.4.1\u003Cbr\u003E\nRemoteTech - 1.6.9\u003Cbr\u003E\nSaturatable RW - 1.10.2.1\u003Cbr\u003E\nSCANsat - 1.1.4.8\u003Cbr\u003E\nSolverEngines - 1.15\u003Cbr\u003E\nStageRecovery - 1.6.3\u003Cbr\u003E\nTestFlight - 1.5.1\u003Cbr\u003E\nTestFlight - 1.5.1\u003Cbr\u003E\nTextureReplacer - 2.4.12\u003Cbr\u003E\nTAC Life Support - 0.11.2.1\u003Cbr\u003E\nKerbal Alarm Clock - 3.5\u003Cbr\u003E\nVenStockRevamp - 1.9\u003Cbr\u003E\n[x] Science! - 4.14\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-03-07T19:33:16Z\u0022 title=\u002203/07/2016 07:33  PM\u0022 data-short=\u00228 yr\u0022\u003EMarch 7, 2016\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2016-03-07T19:46:10Z","Content":"\n\u003Cp\u003E\nYep, there are some issues here we\u0027re trying to fix as we speak...thanks for the report and log!\n\u003C/p\u003E\n"},{"CreatedByName":"MajorLeaugeRocketScience","CreatedById":148889,"CreatedDateTime":"2016-03-07T20:15:21Z","Content":"\n\u003Cp\u003E\nDoes this work in sandbox mode or just career? I downloaded the RO version and went into a RO sandbox and it didn\u0027t work. Any thoughts on it?\n\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-08T05:15:56Z","Content":"\n\u003Ch1 style=\u0022font-size:2.25em;margin-bottom:16px;line-height:1.2;padding-bottom:.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;margin-top:0px;\u0022\u003E\n1.5.2.0\n\u003C/h1\u003E\n\u003Ch2 style=\u0022margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;\u0022\u003E\n\u003Cstrong\u003EIMPORTANT\u003C/strong\u003E\n\u003C/h2\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:16px;\u0022\u003E\n\u003Cstrong\u003EThis release has some changes and fixes that can affect existing saves and .craft files.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cul style=\u0022padding:0px 0px 0px 2em;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:16px;\u0022\u003E\u003Cli\u003E\nA change to how part names are determined will cause some parts to be registered with a new name that no longer matches what might already be stored in the save file. In this case those parts will reset to 0 data!\n\u003C/li\u003E\n\u003Cli\u003E\nA fix to how data is persisted in the .craft files has been fixed. This bug could cause saved .craft to not initialize properly and thus never gain any data from previous flights. This bug has been fixed however the fix is not retroactive and thus will only affect\u00A0\u003Cstrong\u003Enew\u003C/strong\u003E\u00A0saved craft and not fix old ones.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Ch2 style=\u0022margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;\u0022\u003E\n\u003Cstrong\u003ECHANGES\u003C/strong\u003E\n\u003C/h2\u003E\n\u003Cul style=\u0022padding:0px 0px 0px 2em;margin-top:0px;color:rgb(51,51,51);font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:16px;margin-bottom:0px;\u0022\u003E\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: TestFlightReliability_DynamicPressure - Clamp evaluated dynamic pressure reliability curve to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightUtil.MIN_FAILURE_RATE\u003C/code\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE:\u003C/strong\u003E\u00A0DynamicPressure minimum modifer value now configurable\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: TestFlightContracts linked to latest version (1.9.7) of ContractConfigurator\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E\u00A0Support Passive RT antennas as well.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EAPI CHANGE\u003C/strong\u003E:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightScenario.AddValue\u003C/code\u003E\u00A0methods have been renamed to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ESetValue\u003C/code\u003E\u00A0as that more accurately represents how they function (setting an absolute value).\u00A0\u00A0\u003Cstrong\u003ENew\u003C/strong\u003E\u00A0methods have been added to the Scenario called\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EAddValue\u003C/code\u003E\u00A0that do just that, taking the existing stored value and adding to it. Obviously not available for\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003Estring\u003C/code\u003E\u00A0and\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003Ebool\u003C/code\u003E\u00A0types.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EAPI NEW\u003C/strong\u003E: Added\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightScenario.ToggleValue(string key, booldefaultValue)\u003C/code\u003E. This method will either take the existing stored value and set the opposite (so false to true, true to false) or if there is no existing value it will set the\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EdefaultValue\u003C/code\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E\u00A0Part.name is unreliable. Use a corrected version of the part name (code borrowed from RealFuels) that should be reliable. Spelling ftw\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fixed duplicate TestFlightInterop modules on some parts that could cause errors on the RL10x2 series and LR91-AJ series engines\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW:\u003C/strong\u003E\u00A0Light bulb flickering failure\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW:\u003C/strong\u003E\u00A0MaxQ reliability module to lower reliability at high Q\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX:\u003C/strong\u003E\u00A0Science failures now have experimentID to support multiple experiments\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E\u00A0Start XLR11 at 0 data.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E\u00A0Increase data rates for XLR11, XLR99.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E\u00A0ResourceLeak now supports resource to leak \u0022all\u0022; persistence fixed, refactored to use leak lists.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E\u00A0Update resource leaking to use fixed timesteps rather than realtime.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E\u00A0Engine fixes. Flight Data Recorder (Engines) binds to first engine on the part. The failure modules grab all engines matching passed spec, defaulting to \u0027all\u0027 engines on the part. The wrapper is cleaned up and does not use scriptable objects anymore. Also fixed some KSPFielding and now don\u0027t recalculate dynamic pressure.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: EngineModuleWrapper spam removed by properly treating ScriptableObject as Unity requires. Because reasons.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: XLR11, XLR99 configs to apply to all of them (use different MM pattern). Fix LR91 part matches for other LR91s.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: Remove unneeded persistence flags.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Proper data initialization for saved .craft files.\u00A0\u00A0\u003Cstrong\u003ENOTE\u003C/strong\u003E: Fix is\u00A0\u003Cstrong\u003Enot\u003C/strong\u003E\u00A0retroactive and will only work properly on new saved craft.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Properly accumulate flightData when multiple parts with the same underlying part name are on a vessel. Fixes\u00A0\u003Ca href=\u0022https://github.com/KSP-RO/TestFlight/issues/101\u0022 rel=\u0022external nofollow\u0022 style=\u0022color:rgb(64,120,192);text-decoration:none;\u0022\u003E#101\u003C/a\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-03-08T05:19:12Z\u0022 title=\u002203/08/2016 05:19  AM\u0022 data-short=\u00228 yr\u0022\u003EMarch 8, 2016\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-08T05:34:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222446486\u0022 data-ipsquote-contentid=\u002299043\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221457381721\u0022 data-ipsquote-userid=\u0022148889\u0022 data-ipsquote-username=\u0022MajorLeaugeRocketScience\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, MajorLeaugeRocketScience said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDoes this work in sandbox mode or just career? I downloaded the RO version and went into a RO sandbox and it didn\u0027t work. Any thoughts on it?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt works fine in sandbox mode, but bear in mind that not all parts currently have configs for TestFlight. \u00A0Couple things:\n\u003C/p\u003E\n\u003Cp\u003E\n1. Make sure your RO is up to date. \u00A0Only the most recent versions started adding in more configs for RO parts.\n\u003C/p\u003E\n\u003Cp\u003E\n2. In the flight scene, open the TF Window. \u00A0Are any parts at all listed in there? If so, but they just aren\u0027t getting data then this release hopefully fixes that. \u00A0check the release notes for more information. If there are no parts listed, then can you please reply with what engine parts you have on our rocket? Thanks!\n\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2016-03-08T10:45:49Z","Content":"\n\u003Cp\u003E\nWow, that\u0060s a lot of fixes.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT : Just to let you know, it is not yet live on CKAN.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT 2 : Just installed manually and now a craft which was saved on the launchpad with RD-108_8D75PS engines now accumulates du on them.\n\u003C/p\u003E\n\u003Cp\u003E\nThank you very much for this update.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-03-08T11:11:41Z\u0022 title=\u002203/08/2016 11:11  AM\u0022 data-short=\u00228 yr\u0022\u003EMarch 8, 2016\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-08T17:45:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222447411\u0022 data-ipsquote-contentid=\u002299043\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221457433949\u0022 data-ipsquote-userid=\u002259415\u0022 data-ipsquote-username=\u0022John FX\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, John FX said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWow, that\u0060s a lot of fixes.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT : Just to let you know, it is not yet live on CKAN.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT 2 : Just installed manually and now a craft which was saved on the launchpad with RD-108_8D75PS engines now accumulates du on them.\n\u003C/p\u003E\n\u003Cp\u003E\nThank you very much for this update.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCKAN happens automatically but sadly usually takes a day or two for their bots to pick it up.\n\u003C/p\u003E\n\u003Cp\u003E\nGlad it fixed your issues!\n\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2016-03-08T18:08:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222447823\u0022 data-ipsquote-contentid=\u002299043\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221457459137\u0022 data-ipsquote-userid=\u002299662\u0022 data-ipsquote-username=\u0022Agathorn\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, Agathorn said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCKAN happens automatically but sadly usually takes a day or two for their bots to pick it up.\n\u003C/p\u003E\n\u003Cp\u003E\nGlad it fixed your issues!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTrue. I see a couple of mods that AVC says are updated yet CKAN does not yet. I have yet to see whether physics warp makes engines less reliable but I will post here once I do.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT :\n\u003C/p\u003E\n\u003Cp\u003E\nHaven\u0060t noticed physics warp causing engine failures to happen more often, seems better.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-03-09T15:21:16Z\u0022 title=\u002203/09/2016 03:21  PM\u0022 data-short=\u00228 yr\u0022\u003EMarch 9, 2016\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-11T23:23:34Z","Content":"\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:20px;\u0022\u003E\u003Ca href=\u0022https://github.com/KSP-RO/TestFlight/releases/tag/1.5.3-beta.1\u0022 rel=\u0022external nofollow\u0022\u003ETestFlight 1.5.3 Beta 1\u003C/a\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv style=\u0022font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:16px;line-height:1.6;color:rgb(51,51,51);\u0022\u003E\n\u003Cul style=\u0022padding-left:2em;margin-top:0px;margin-bottom:0px;\u0022\u003E\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: New Failure module\u00A0\u003Cstrong\u003EEnginePerformanceLoss\u003C/strong\u003E\u00A0causes the engine\u0027s Isp to degrade by an amount specified in the config property\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EispMultiplier\u003C/code\u003E. A second property\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EispMultiplierJitter\u003C/code\u003E\u00A0can be used to add some small extra random variance to the degredation Use aliased format for kspPartNames when coerced from blank string as it is cleaner.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: TestFlightInterop now adds an intervop value named\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EkspPartName\u003C/code\u003E\u00A0which is theinternal KSP name of the underlying part. This does not change. Can be used in config queries and should be used instead of blank queries or queries with just part names.\u00A0\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003Econfig = kspPartName = squadFoo\u003C/code\u003E.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: Internally, any empty configuration string is coercedinto\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EkspPartname = squadFoo\u003C/code\u003Eusing the new interop value and theparsed part name.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: If a part has starting flight data from the config, add that to the scenario data store when first initializing it. Should fix issue with needing to record\u00A0\u003Cem\u003Epast\u003C/em\u003E\u00A0the startFlightData before it would stick.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Added\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightPartData.AddValue\u003C/code\u003E\u00A0and overloaded versions for int, float, and double that do what it says on the tin.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Added\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightPartData.ToggleValue\u003C/code\u003E\u00A0for bools\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Added\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightManagerScenario.AddFlightDataForPartName\u003C/code\u003E\u00A0helper function toadd to existing flight data for a part.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE-API\u003C/strong\u003E: Renamed\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightPartData.AddValue\u003C/code\u003E\u00A0to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightPartData.SetValue\u003C/code\u003Efollowing in accordance with the previous similar change to TestFlightManagerScenario which wraps these for convenience.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: Removed persistence from\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightCore.startFlightData\u003C/code\u003Eas it is not dynamic.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: TestFlightFailure_ResourceLeak - Use System.Random from TestFlightCore instead of Unity\u0027s broken random.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: All RealismOverhaul configs have been removed from TestFlight and are now managed and provided by Realism Overhaul directly.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: TestFlight Realism Overhaul Config pack is no longer built or provided by TestFlight.Updated build process to omit RO configsUpdated Netkans (this also needs to be done with CKAN)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: Removed Aerobee engine line from RealismOverhaul configs, as these configs now live in the RO project\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: Reliability modules for SkinTemperature and InternalTemperature\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:20px;\u0022\u003E\u003Cstrong\u003EImportant\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nPlease be aware that this is a \u003Cstrong\u003Ebeta\u003C/strong\u003E\u00A0release and is \u003Cstrong\u003Ereleased for testing purposes only\u003C/strong\u003E. \u00A0It may or may not be stable, but any testing helps us ensure that normal release are more solid. \u00A0Beta release do not show up on CKAN so you will need to install manually.\n\u003C/p\u003E\n\u003Cp\u003E\nPlease report any bugs or issues on Github.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-03-11T23:27:23Z\u0022 title=\u002203/11/2016 11:27  PM\u0022 data-short=\u00228 yr\u0022\u003EMarch 11, 2016\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Deimos Rast","CreatedById":157420,"CreatedDateTime":"2016-03-12T05:41:06Z","Content":"\n\u003Cp\u003E\nSo I figured I would give this another go, since other mods aren\u0027t quite giving me the level of explosions that I require. Initially, I was (and still kind of am) put off by the amount of leg work this requires, but diving into and messing around with the configs for the past hour or two, I have to say you guys have created something really cool here. (I still don\u0027t get why there is a combination of both good documentation and great features, but almost no configs! I feel like I\u0027m missing a download or something, but no \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E). All I\u0027ve really done is read through the wiki, taken notes, read through the Stock and RO configs, taken even \u003Cem\u003Emore\u003C/em\u003E notes, all so I can blow myself up more frequently. How kerbal.\n\u003C/p\u003E\n\u003Cp\u003E\nSo if you\u0027d please, I have a few questions, which if you could answer some or all of, I\u0027d be much obliged (even if it\u0027s just a link to more info). In no particular order:\n\u003C/p\u003E\n\u003Cp\u003E\n---------------------------\u003Cbr\u003E\nWhat would the TestFlightReliability_SkinTemperature (or InternalTemperature) curves look like? It says \u00221.0 is normal, higher fails more\u0022 so for a 10% failure rate at 0 data...?\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\ntemperatureCurve\n        {\n            key = 0 0.9\n            key = 10000 1.0\n        }\u003C/pre\u003E\n\u003Cp\u003E\nI looked through the entire Stock Config and RO config, and nowhere are these curves used, so I don\u0027t have any examples to go by (and up till now, I never knew what these \u0022curves\u0022 even were!).\n\u003C/p\u003E\n\u003Cp\u003E\n--------------\n\u003C/p\u003E\n\u003Cp\u003E\nduRepair = 50\u003Cbr\u003E\nduFail = 100\n\u003C/p\u003E\n\u003Cp\u003E\nWhat does this mean? If I remember correctly, \u0022du\u0022 is the data unit, correct? I thought it might be the minimum data required to repair, which might make sense, but having a minimum required to fail doesn\u0027t really.\n\u003C/p\u003E\n\u003Cp\u003E\n--------------\u003Cbr\u003E\nFailure Rates:\n\u003C/p\u003E\n\u003Cp\u003E\nI feel like I should know this already, but are failure rates solely determined by the curve, and then the type of failure it determined based on the weight assigned to it?\u003Cbr\u003E\n-------------------------\u003Cbr\u003E\nTestFlightReliability_EngineCycle -------\u0026gt; ratedBurnTime\n\u003C/p\u003E\n\u003Cp\u003E\nWhat are the units on this? My guess is seconds?\u003Cbr\u003E\n-------------------------\u003Cbr\u003E\nRepair Module:\u003Cbr\u003E\ncanBeRepairedInFlight\n\u003C/p\u003E\n\u003Cp\u003E\nDoes this mean in the \u0022Flight Scene\u0022 (as in while you have the vessel actively selected) or while the vessel is \u0022In Flight\u0022, as in engines burning, flying. It has to be the former, but it\u0027s late, I\u0027m tired and I need clarity\u003Cimg alt=\u0022:lol:\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_laugh.png\u0022 title=\u0022:lol:\u0022\u003E. I have a great mental picture of the latter, though.\n\u003C/p\u003E\n\u003Cp\u003E\ncanBeRepairedByRemote\n\u003C/p\u003E\n\u003Cp\u003E\nThe opposite of above I\u0027m guessing (assuming the former is correct)?\n\u003C/p\u003E\n\u003Cp\u003E\n---------------------\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nThat\u0027s it for now. If you have any suggestions for further reading, please let me know (I still have to read through this thread). Off to go see if my test engine config works!\u003Cbr\u003E\nThanks.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-12T17:27:52Z","Content":"\n\u003Cp\u003E\num wow I typed up a long response to all your questions and then the forum ate it \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nsigh.. I will reply again I promise but I need to get some breakfast first.\n\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-12T18:19:00Z","Content":"\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nSorry you are finding it a struggle. I\u2019m afraid this is really a consequence of the fact that I don\u2019t play stock, ever. I am a Realism Overhaul player, so that is all I know. The \u201Cmissing download\u201D you mention is the RO configs \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E On the stock side things aren\u2019t so good and I acnkowledge that but sadly there isn\u2019t much I can do about it \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/p\u003E\n\u003Cpre style=\u0022margin-top:0px;color:rgb(51,51,51);border:1px solid rgb(211,218,234);font-size:14px;padding:9.5px 9.5px;\u0022\u003E\n\u003Ccode style=\u0022color:inherit;background-color:transparent;padding:0px;font-size:inherit;white-space:pre-wrap;\u0022\u003EWhat would the TestFlightReliability_SkinTemperature (or InternalTemperature) curves look like? It says \u00221.0 is normal, higher fails more\u0022 so for a 10% failure rate at 0 data...?\n\ntemperatureCurve\n        {\n            key = 0 0.9\n            key = 10000 1.0\n        }\nI looked through the entire Stock Config and RO config, and nowhere are these curves used, so I don\u0027t have any examples to go by (and up till now, I never knew what these \u0022curves\u0022 even were!).\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nOk so first the curves are what is known as a FloatCurve and is a standard KSP thing. You can google them, but essentially it is a list of\u00A0\u003Cspan style=\u0022font-weight:700;\u0022\u003Ekey value\u003C/span\u003E\u00A0pairs that describe a curve if plotted on a 2D plane. There is also a KSP plugin for Unity that will let you see and create them visually in the Unity editor which is great.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nNow when it comes to Reliability modules, first off it is important to understand that there are essentially two different types of Reliability modules. The first is the basic module which provides a\u00A0\u003Ccode style=\u0022color:rgb(199,37,78);background-color:rgb(249,242,244);padding:2px 4px;\u0022\u003EBase Failure Rate\u003C/code\u003E\u00A0to TestFlight. This Base Failure Rate or\u00A0\u003Cspan style=\u0022font-weight:700;\u0022\u003EBFR\u003C/span\u003E\u00A0decreases as more data is accumulated on the part. You must always have one (and only one!) of these modules on a part. The second type is a essentially a modifier. These Reliability modules work on top of the base modules and provide a\u00A0\u003Ccode style=\u0022color:rgb(199,37,78);background-color:rgb(249,242,244);padding:2px 4px;\u0022\u003EMomentary Failure Rate\u003C/code\u003E\u00A0or\u00A0\u003Cspan style=\u0022font-weight:700;\u0022\u003EMFR\u003C/span\u003E\u00A0to the part based on moment to moment conditions. Skin Temperature in the case of this module. This MFR is a multipler applied against the BFR. The MFR does not change based on data but on conditions. Since it is a multiplier, a value of 1.0 essentially means no effect. A value less than 1.0 would actually make the part have a lower than base failure rate and a value greater than 1.0 would make the part have a higher than base failure rate. So essentially in this case you could make the part more likely to fail as its skin temperature increases.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nNow the curve in the config, as mentioned is a FloatCurve. Specifically in this case the\u00A0\u003Cspan style=\u0022font-weight:700;\u0022\u003Ekey\u003C/span\u003E\u00A0(first value) is the temperature and the\u00A0\u003Cspan style=\u0022font-weight:700;\u0022\u003Evalue\u003C/span\u003E\u00A0is the MFR applied for that temperature. The curve you quoted above would make the part slightly less likely than normal to fail when it has a skin temp of 0, and then it would linearly increase until at 10,000 degrees it has a normal failure rate. I\u2019m fairly certain that isn\u2019t what you wanted, but hopefully you now have the information to do what you want.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nIf you haven\u2019t already, you can read more about MFR and BFR in the TestFlight Quick Start guide on the Wiki.\n\u003C/p\u003E\n\u003Cpre style=\u0022margin-top:0px;color:rgb(51,51,51);border:1px solid rgb(211,218,234);font-size:14px;padding:9.5px 9.5px;\u0022\u003E\n\u003Ccode style=\u0022color:inherit;background-color:transparent;padding:0px;font-size:inherit;white-space:pre-wrap;\u0022\u003EduRepair = 50\nduFail = 100\n\nWhat does this mean? If I remember correctly, \u0022du\u0022 is the data unit, correct? I thought it might be the minimum data required to repair, which might make sense, but having a minimum required to fail doesn\u0027t really.\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nThese give the part a specified amount of data units when a part fails or is repaired. Think about it like this; If a part fails during a flight you learn from that, so this gives you a bonus chunk of data when that occurs.\n\u003C/p\u003E\n\u003Cpre style=\u0022margin-top:0px;color:rgb(51,51,51);border:1px solid rgb(211,218,234);font-size:14px;padding:9.5px 9.5px;\u0022\u003E\n\u003Ccode style=\u0022color:inherit;background-color:transparent;padding:0px;font-size:inherit;white-space:pre-wrap;\u0022\u003EFailure Rates:\n\nI feel like I should know this already, but are failure rates solely determined by the curve, and then the type of failure it determined based on the weight assigned to it?\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nThe failure rate of a part at any given moment is Base Failure Rate * Momentary Failure Rate. Additionally there is a slight modifier based on operating time, because all things being equal a part is more likely to fail as its operating time approaches its MTBF.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nWhen a part fails as part of the normal survival checks each tick, then a random failure is picked based on weight. That said some failures can work outside the system and trigger themself based on conditions, and will not be triggered with random failures.\u00A0\u003Ccode style=\u0022color:rgb(199,37,78);background-color:rgb(249,242,244);padding:2px 4px;\u0022\u003ETestFlightFailure_IgnitionFail\u003C/code\u003E\u00A0is an example of this.\n\u003C/p\u003E\n\u003Cpre style=\u0022margin-top:0px;color:rgb(51,51,51);border:1px solid rgb(211,218,234);font-size:14px;padding:9.5px 9.5px;\u0022\u003E\n\u003Ccode style=\u0022color:inherit;background-color:transparent;padding:0px;font-size:inherit;white-space:pre-wrap;\u0022\u003ETestFlightReliability_EngineCycle -------\u0026gt; ratedBurnTime\n\nWhat are the units on this? My guess is seconds?\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\nYes, in seconds.\n\u003C/p\u003E\n\u003Cpre style=\u0022margin-top:0px;color:rgb(51,51,51);border:1px solid rgb(211,218,234);font-size:14px;padding:9.5px 9.5px;\u0022\u003E\n\u003Ccode style=\u0022color:inherit;background-color:transparent;padding:0px;font-size:inherit;white-space:pre-wrap;\u0022\u003ERepair Module:\ncanBeRepairedInFlight\n\nDoes this mean in the \u0022Flight Scene\u0022 (as in while you have the vessel actively selected) or while the vessel is \u0022In Flight\u0022, as in engines burning, flying. It has to be the former, but it\u0027s late, I\u0027m tired and I need clarity:lol:. I have a great mental picture of the latter, though.\n\ncanBeRepairedByRemote\n\nThe opposite of above I\u0027m guessing (assuming the former is correct)?\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(55,61,73);font-family:Georgia, Cambria, serif;font-size:14px;\u0022\u003E\n\u003Ccode style=\u0022color:rgb(199,37,78);background-color:rgb(249,242,244);padding:2px 4px;\u0022\u003EcanBeRepairedInFlight\u003C/code\u003E\u00A0means can the part be repaird while the craft is actually flying, and has nothing to do with the scene.\u00A0\u003Ccode style=\u0022color:rgb(199,37,78);background-color:rgb(249,242,244);padding:2px 4px;\u0022\u003EcanBeRepairedByRemote\u003C/code\u003E\u00A0means can the craft be repaired wthout any crew, like a software update sent over the comm. The repair side of TF really never got fleshed out as much as I wanted, but originally there was the intention of making it so some repairs would require crew to EVA to the part to fix it.\n\u003C/p\u003E\n"},{"CreatedByName":"Deimos Rast","CreatedById":157420,"CreatedDateTime":"2016-03-14T05:25:19Z","Content":"\n\u003Cp\u003E\nThanks for taking the time to reply. Twice.\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E I think \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/99043-105-testflight-v152-07-mar-2016-bring-flight-testing-to-ksp/#comment-1707277\u0022\u003Ethis\u003C/a\u003E is also a good intro, that answers a lot of the questions I had, but I didn\u0027t find it until recently.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I don\u0027t play stock either - perish the thought! I have a lot of mods, just not RO. (The reason I \u003Cem\u003Edon\u0027t\u003C/em\u003E have RO, is because I have too many mods already, heh.)\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027ll take a bit of digesting your response before I can make a proper one myself, I just wanted to say thank you.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, since everyone seems to be focusing so much on Engines for whatever reason (my guess is they\u0027re neato and there is a lot of data available), I decided to head in the opposite direction: Life Support, specifically TACLS. I didn\u0027t care for the one size fits all approach of the Resource/Fuel config (though serviceable enough), and I felt that life support was a bit more of a delicate matter (not \u003Cem\u003Eeverything\u003C/em\u003E should explode in other words\u003Cimg alt=\u0022:lol:\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_laugh.png\u0022 title=\u0022:lol:\u0022\u003E). I also like the idea of almost always being able to have a slight chance to repair the damage and stem some of your losses (when it makes sense) - adds to the drama. Will I be able to repair the leak in my O2 canister or do I have to sit here and watch it slowly leak out into space?\n\u003C/p\u003E\n\u003Cp\u003E\nI also tried to incorporate multiple reliability curves (such as pressure and temperature) for added variety when relevant, (although I don\u0027t know what the pressure curve looks like at the moment).\n\u003C/p\u003E\n\u003Cp\u003E\nUnfortunately, I haven\u0027t had much time to test it yet (I\u0027m actually building a test craft for it on my other monitor as we speak), but I do successfully get data on the parts I\u0027ve tested. No failures yet.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI figure I\u0027ll work on Heatshield and Parachute failures next, which will no doubt be a winning combination (I play with DRE and FAR).\u003Cimg alt=\u0022:mellow:\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_mellow.png\u0022 title=\u0022:mellow:\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nCheers.\n\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-17T00:53:25Z","Content":"\n\u003Cdiv style=\u0022color:rgb(51,51,51);font-family:Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;\u0022\u003E\n\u003Ch1 style=\u0022font-size:30px;margin-top:0px;margin-right:60px;margin-bottom:0px;line-height:1.5;\u0022\u003E\n\u003Ca href=\u0022https://github.com/KSP-RO/TestFlight/releases/tag/1.5.3.0\u0022 style=\u0022color:rgb(64,120,192);text-decoration:none;\u0022 rel=\u0022external nofollow\u0022\u003ETestFlight 1.5.3.0\u003C/a\u003E\n\u003C/h1\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003Cdiv style=\u0022font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:16px;line-height:1.6;color:rgb(51,51,51);\u0022\u003E\n\u003Cul style=\u0022padding-left:2em;margin-top:0px;margin-bottom:0px;\u0022\u003E\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: New Failure module\u00A0\u003Cstrong\u003EEnginePerformanceLoss\u003C/strong\u003E\u00A0causes the engine\u0027s Isp to degrade by an amount specified in the config property\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EispMultiplier\u003C/code\u003E. A second property\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EispMultiplierJitter\u003C/code\u003E\u00A0can be used to add some small extra random variance to the degredation\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: TestFlightInterop now adds an intervop value named\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EkspPartName\u003C/code\u003E\u00A0which is the internal KSP name of the underlying part. This does not change. Can be used in config queries and should be used instead of blank queries or queries with just part names.\u00A0\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003Econfig = kspPartName = squadFoo\u003C/code\u003E.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: Internally, any empty configuration string is coerced into\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EkspPartname = squadFoo\u003C/code\u003Eusing the new interop value and the parsed part name.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: If a part has starting flight data from the config, add that to the scenario data store when first initializing it. Should fix issue with needing to record\u00A0\u003Cem\u003Epast\u003C/em\u003E\u00A0the startFlightData before it would stick.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Added\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightPartData.AddValue\u003C/code\u003E\u00A0and overloaded versions for int, float, and double that do what it says on the tin.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Added\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightPartData.ToggleValue\u003C/code\u003E\u00A0for bools\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Added\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightManagerScenario.AddFlightDataForPartName\u003C/code\u003E\u00A0helper function to add to existing flight data for a part.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE-API\u003C/strong\u003E: Renamed\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightPartData.AddValue\u003C/code\u003E\u00A0to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightPartData.SetValue\u003C/code\u003Efollowing in accordance with the previous similar change to TestFlightManagerScenario which wraps these for convenience.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: Removed persistence from\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightCore.startFlightData\u003C/code\u003Eas it is not dynamic.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: TestFlightFailure_ResourceLeak - Use System.Random from TestFlightCore instead of Unity\u0027s broken random.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: All RealismOverhaul configs have been removed from TestFlight and are now managed and provided by Realism Overhaul directly.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: TestFlight Realism Overhaul Config pack is no longer built or provided by TestFlight.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECHANGE\u003C/strong\u003E: Removed Aerobee engine line from RealismOverhaul configs, as these configs now live in the RO project\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: Reliability modules for SkinTemperature and InternalTemperature\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/div\u003E\n"},{"CreatedByName":"Maxsimal","CreatedById":160254,"CreatedDateTime":"2016-03-23T06:33:49Z","Content":"\n\u003Cp\u003E\nBeen playing with test flight for just a bit now. \u00A0My experience here is very early, but just thought I\u0027d give you a little feedback.\n\u003C/p\u003E\n\u003Cp\u003E\nUsing the aerobee engines, gaining additional data doesn\u0027t really\u00A0their MTBF of 622.12.\n\u003C/p\u003E\n\u003Cp\u003E\nBut, despite this MTBF, I\u0027m guessing that their rated burn time is closer to 40 seconds? \u00A0Around that point in flight, their MTBF starts increasing very rapidly.\n\u003C/p\u003E\n\u003Cp\u003E\nOveral, this makes the MTBF sound much like a lie to a player who doesn\u0027t understand that there\u0027s another factor under the hood - how can a part\u0027s\u00A0\u00A0MTBF be\u00A010 minutes when you can never fly it without a failure past about a minute, after all?\n\u003C/p\u003E\n\u003Cp\u003E\nI would suggest at least one of the\u00A0following:\n\u003C/p\u003E\n\u003Cp\u003E\nA: that the rated burn time for the part needs to be exposed in the UI.\n\u003C/p\u003E\n\u003Cp\u003E\nB: That for the MTBF you have the curve integrated over the lifespan of the part, so that when you see its status in the VAB, the rated burn time is factored in - and that during the flight, you can show an MFR that\u0027s much lower until the part reaches its expected lifespan, but the MTBF remains constant.\n\u003C/p\u003E\n\u003Cp\u003E\nC: (Just a suggestion) That rated duration for a part can be increased with additional testing, so that the MTBF does track upward.\n\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2016-03-23T07:09:56Z","Content":"\n\u003Cp\u003E\nThe rated burn time is exposed, it\u0027s just a bit buried. It\u0027s in the modules list (the scrolling list on the right of the \u0027more info\u0027 part tooltip when in the VAB/SPH and mousing over a part in the part list). The way it works, during the first few seconds of burn, reliability is lower (and so MTBF is lower), then it goes back to normal, then once rated burn time has elapsed it starts climbing, reaching 100x fail chance around 1.5x the rated burn time.\n\u003C/p\u003E\n"},{"CreatedByName":"Maxsimal","CreatedById":160254,"CreatedDateTime":"2016-03-25T07:06:06Z","Content":"\n\u003Cp\u003E\nYeah \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E I feel like an idiot for not seeing that. \u00A0 I like how the RP0 pack\u00A0of mods\u00A0rides the line between really fun and frustratingly hard. \u00A0Keeps me coming back, even when I\u0027m tearing my hair out. \u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-28T18:26:21Z","Content":"\n\u003Cp\u003E\nThe new version, about to be released, makes it easier to see this data.\n\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-03-28T19:01:39Z","Content":"\n\u003Cdiv style=\u0022color:rgb(51,51,51);font-family:Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;\u0022\u003E\n\u003Ch1 style=\u0022font-size:30px;margin-top:0px;margin-right:60px;margin-bottom:0px;line-height:1.5;\u0022\u003E\n\u003Ca href=\u0022https://github.com/KSP-RO/TestFlight/releases/tag/1.5.4.0\u0022 style=\u0022color:rgb(64,120,192);text-decoration:none;\u0022 rel=\u0022external nofollow\u0022\u003ETestFlight 1.5.4.0\u003C/a\u003E\n\u003C/h1\u003E\n\u003C/div\u003E\n\u003Cdiv style=\u0022font-family:\u0027Helvetica Neue\u0027, Helvetica, \u0027Segoe UI\u0027, Arial, freesans, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:16px;line-height:1.6;color:rgb(51,51,51);\u0022\u003E\n\u003Ch2 style=\u0022margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);\u0022\u003E\nHighlights\n\u003C/h2\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;\u0022\u003E\nThe TestFlight R\u0026amp;D System is finally here! It has been teased forever by the nonfunctional R\u0026amp;D tab seen in the TestFlight window in the KSC screen, but now it is finally implemented.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;\u0022\u003E\nThe R\u0026amp;D system is an optional feature that allows you to spend funds and time to increase part reliability without actually flying them and risking\u00A0\u003Cem\u003Ebad things\u003C/em\u003E\u00A0happening.\u00A0\u00A0\u003Cstrong\u003EGaining data through flight will still often be quicker, but not as safe. R\u0026amp;D will be safer but slower and cost funds. The choice is yours.\u003C/strong\u003E\u00A0Parts do have maximum R\u0026amp;D limits however, so while engineers can get you to a better reliability before flight testing, they won\u0027t get you\u00A0\u003Cstrong\u003Eall\u003C/strong\u003E\u00A0the way.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;\u0022\u003E\nR\u0026amp;D can be assigned to any supported part while in the editor constructing your vessel. Simply right click on the part and click the\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ER\u0026amp;D Window\u003C/code\u003E\u00A0button to toggle the R\u0026amp;D window. Here you can assign one of several teams to begin researching that part. Choose the one that works for you, balancing time and cost.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;\u0022\u003E\nEvery research cycle, which defaults to one day but may be changed by other mods, your part will receive flight data assigned to it by the research team, and funds will be subtracted.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;\u0022\u003E\nYou can stop/pause/resume research at any time either in the editor or as a shortcut by using the R\u0026amp;D tab in the main KSC screen. Research will also auto stop if the part reaches its maximum R\u0026amp;D level.\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;\u0022\u003E\nIn addition to the R\u0026amp;D system, I also took this time to redo how TestFlight information is displayed in the editor. The old TF window in the editor is now gone, and is replaced by the new R\u0026amp;D window for assigning research and a new \u0022Info Overlay\u0022 window which can give you detailed TestFlight information on any placed part with a simple Middle Click.\n\u003C/p\u003E\n\u003Ch2 style=\u0022margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);\u0022\u003E\nUpgrade Notes\n\u003C/h2\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;\u0022\u003E\nUpgrading from 1.5.3.0 release to 1.5.4.0 release should not cause any issues. If you are upgrading from a dev or beta version of 1.5.4.0, it is suggested that you first stop all R\u0026amp;D teams before upgrading.\n\u003C/p\u003E\n\u003Ch2 style=\u0022margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);\u0022\u003E\nChanges\n\u003C/h2\u003E\n\u003Cul style=\u0022padding-left:2em;margin-top:0px;margin-bottom:0px;\u0022\u003E\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fix editor info window not hiding properly\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fix editor info window not shrinking in size when changing parts or hiding the window\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: EngineCycle module now displays information on idle decayand thrust modifiers if applicable in the info window\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fixed a possible NRE in TestFlightRNDScenario load, as wellas making that code a bit more robust in the case of unexpected data.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Apply\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ErndRate\u003C/code\u003E\u00A0and\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ErndCost\u003C/code\u003E\u00A0to display in R\u0026amp;D window. Fixes\u00A0\u003Ca href=\u0022https://github.com/KSP-RO/TestFlight/issues/136\u0022 style=\u0022color:rgb(64,120,192);text-decoration:none;\u0022 rel=\u0022external nofollow\u0022\u003E#136\u003C/a\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fixed internal burn time handling on TestFlightReliability_EngineCycle\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fixed major bug that was causing time handling to be truncated, causing part updates to happen less and less frequently the longer your save went on\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Moved TestFlight settings file to PluginData so that it doesn\u0027t cause ModuleManager recaching when settings change.\u00A0\u00A0\u003Cstrong\u003EImportant Note\u003C/strong\u003E: TestFlight will automatically migrate the settings file for you the first time, but it won\u0027t be able to clean up the old file. Once migration happens you can freely delete the old file if desired.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fixed to RND Teams getting reset due to a race condition during RND scenario load.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fixed Editor R\u0026amp;D Window position not being properly read from settings on initial load.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: Parts no longer can gain data while in the\u00A0\u003Cstrong\u003EPRELAUNCH\u003C/strong\u003E\u00A0situation. This means no more static test firing. The new R\u0026amp;D system should be used instead if you don\u0027t want to risk parts on an actual flight.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: Expanded Info window data for Core and Reliability modules\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Major bug fix that was preventing pretty much all modules from properly attaching!\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: Placed parts in Editor now have a quick info overlay window that can be accessed by right clicking on the place part. This info window will display TestFlight information on the part.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: TestFlight modules now all have an interface method for\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EGetTestFlightInfo\u003C/code\u003E\u00A0which is used to return data the module desires to be displayed in the Editor Info window\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Interop changes now fire an event on the active Core module allowing for reactions to the change.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Fix duplicate\u00A0\u003Cem\u003ER\u0026amp;D Window\u003C/em\u003E\u00A0buttons showing up in editor tweakables.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: R\u0026amp;D Window in Editor now displays information on how the system works, how much teams cost and how many points they contribute\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: R\u0026amp;D settings can no be configured by other mods using Confignodes. Place all settings in a node named \u201CTFRNDSETTINGS\u201D.\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EupdateFrequency\u003C/code\u003E\u00A0is a double indicating how often the R\u0026amp;D teams tick. Value is in seconds and the default is 86400 or 1 day.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: R\u0026amp;D Teams can be configured by mods using a Config node. For each desired team add a node named \u201CTEAM\u201D under the main \u201CTFRNDSETTINGS\u201D node with the following properties:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003Epoints\u003C/code\u003E\u00A0indicates the amount of research points (directly mapped to data units) generated by the team per update. Default is 100.\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EcostFactor\u003C/code\u003E\u00A0indicates the cost\u00A0\u003Cstrong\u003Eper point\u003C/strong\u003E\u00A0of the research team. Defaults to 1. Added ConfigNodeExtensions from @stupid_chris with license information.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: TestFlight supported parts in the Editor now have a right click menu button\u00A0\u003Cem\u003ER\u0026amp;D Window\u003C/em\u003Ewhich allows you to quickly open up a window to control research team allocation for the part.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: TestFlight now has a new Research and Development feature. This R\u0026amp;D System is optional, but allows you to trade off time and funds for increased part reliability. Rather than risking failures during a mission with low reliability parts, you can instead assign engineering teams to work on the parts over time, slowly increasing the part reliability without risk.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-CONFIG\u003C/strong\u003E: New property added to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EITestFlightCore\u003C/code\u003E\u00A0to support R\u0026amp;D:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ErndMaxData\u003C/code\u003E\u00A0defines the maximum amount of flight data that can be obtain by using engineering teams. This is defined in absolute units and if not present, R\u0026amp;D ill cap out at 75% of the part\u0027s maximum data\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-CONFIG\u003C/strong\u003E: New property added to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EITestFlightCore\u003C/code\u003E\u00A0to support R\u0026amp;D:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ErndRate\u003C/code\u003E\u00A0defines the speed at which the part is research by engineering teams. This is a multiplier against the number of points generated by a team each cycle and defaults to 1, IE no modification.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-CONFIG\u003C/strong\u003E: New property added to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EITestFlightCore\u003C/code\u003E\u00A0to support R\u0026amp;D:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ErndCost\u003C/code\u003E\u00A0defines the cost at which the part is research by engineering teams. This is a multiplier against the cost of the team each cycle and defaults to 1, IE no modification.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: The following failures will re-apply themselves on loading a game: EnginePerformanceLoss, LockGimbal, ReducedMaxThrust, ResourceLeak\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightReliability_EngineCycle\u003C/code\u003E\u00A0can now optionally modify accumulated burn time based on the actual thrust output of the engine. This is defined as a modifier curve using the FloatCurve\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EthrustModifier\u003C/code\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightReliability_EngineCycle\u003C/code\u003E\u00A0can now optionally decaythe used burn time on an engine when the engine is turned off. Can bedefined by using the property\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EidleDecayRate\u003C/code\u003E. This value is directlysubtracted from the engine\u0027s current burn time each second, so a valueof 1 would be an approximate 1:1 time decay. This can optionally allowengines to have extended usage when shut off during coast periods.Note that this only kicks in if the engine is shut off (not ignited).\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightFailure_IgnitionFail\u003C/code\u003E\u00A0can now apply an additional modifier to the chance of ignition based on the number of previous ignitions used. Use the FloatCurve\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EingitionUseMultiplier\u003C/code\u003E. This is a straight multiplier and thus values below 1 will lower the chance of the engine igniting and values above 1 will increase the chances.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ETestFlightFailure_IgnitionFail\u003C/code\u003E\u00A0can now cause an additionalfailure to occur if the ignition fails. The chance of this occurringcan be set in the property\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EadditionalFailChance\u003C/code\u003E\u00A0and is a value 0-1f,with default of 0. If this additional failure triggers then theengine will receive one of the existing random failures assigned to thepart.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Add new property\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EFailed\u003C/code\u003E\u00A0to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EITestFlightFailure\u003C/code\u003E\u00A0interface.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EFIX\u003C/strong\u003E: Persist the failed state on a part\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E: Add EngineModuleWrapper method to\u00A0\u003Cstrong\u003Eset\u003C/strong\u003E\u00A0the number of ignitions directly.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW\u003C/strong\u003E:\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003EShutdownEngine\u003C/code\u003E\u00A0failure now also removes all ignitions from the engine. They are restored is the failure is repaired.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Add method to EngineModuleWrapper to return the current number of ignitions on an engine.\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003Eint GetIgnitionCount()\u003C/code\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENEW-API\u003C/strong\u003E: Added new functions to EngineModuleWrapper to Add and Remove ignitions from compatible engines.\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003Evoid AddIgnitions(int numIgnitions)\u003C/code\u003E\u00A0and\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003Evoid RemoveIgnitions(int numIgnitions)\u003C/code\u003E\u00A0Passing \u0026lt; 0 to\u00A0\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:14px;padding:.2em 0px;margin:0px;\u0022\u003ERemoveIgnitions\u003C/code\u003E\u00A0will remove all ignitions on the engine.\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/div\u003E\n"},{"CreatedByName":"Deimos Rast","CreatedById":157420,"CreatedDateTime":"2016-03-28T21:22:53Z","Content":"\n\u003Cp\u003E\nnow that\u0027s an impressive update\n\u003C/p\u003E\n"},{"CreatedByName":"rgr","CreatedById":161354,"CreatedDateTime":"2016-04-04T18:51:51Z","Content":"\n\u003Cp\u003E\nif anyone wonders why testflight keeps forgetting it\u0027s settings, create \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EGameData\\TestFlight\\Plugins\\PluginData\u003C/span\u003E folder.\n\u003C/p\u003E\n\u003Cp\u003E\nAfter that, I found out it\u0027ll be fixed in the 1.6 (1.1only) release...\n\u003C/p\u003E\n"},{"CreatedByName":"Filigan","CreatedById":121058,"CreatedDateTime":"2016-04-11T12:26:51Z","Content":"\n\u003Cp\u003E\nHas anyone a working config for KW Rocketry? There was a dropboxlink a few pages back but it is not available anymore\u00A0\u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2016-04-12T17:07:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222494395\u0022 data-ipsquote-contentid=\u002299043\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221459795911\u0022 data-ipsquote-userid=\u0022161354\u0022 data-ipsquote-username=\u0022rgr\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn April 4, 2016 at 11:51 AM, rgr said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nif anyone wonders why testflight keeps forgetting it\u0027s settings, create \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EGameData\\TestFlight\\Plugins\\PluginData\u003C/span\u003E folder.\n\u003C/p\u003E\n\u003Cp\u003E\nAfter that, I found out it\u0027ll be fixed in the 1.6 (1.1only) release...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSorry I didn\u0027t see this post, but FYI this is also fixed in 1.5.4.3 and 1.5.4.4 which are both for KSP 1.0.5\n\u003C/p\u003E\n"},{"CreatedByName":"garwel","CreatedById":141813,"CreatedDateTime":"2016-04-22T12:00:01Z","Content":"\n\u003Cp\u003E\nHey \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022http://forum.kerbalspaceprogram.com/index.php?/profile/23744-agathon/\u0026amp;do=hovercard\u0022 data-mentionid=\u002223744\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/23744-agathon/\u0022 rel=\u0022\u0022\u003E@Agathon\u003C/a\u003E, thank you for making this mod! Don\u0027t want to hurry you or anything.\u00A0But as I\u0027m preparing to start a new career and wanted to include TestFlight from the beginning, I\u0027m curious if a 1.1-compatible version is in the works or if I should skip it for now.\n\u003C/p\u003E\n\u003Cp\u003E\nUPD: After writing this, I discovered that there\u0027s a \u003Ca href=\u0022https://github.com/KSP-RO/TestFlight/releases/tag/1.6.0.0.beta-2\u0022 rel=\u0022external nofollow\u0022\u003E1.1-compatible beta\u003C/a\u003E in Github. Guess\u00A0I\u0027ll give it a try as soon as all other must-have mods are updated.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-22T12:01:52Z\u0022 title=\u002204/22/2016 12:01  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 22, 2016\u003C/time\u003E by garwel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"garwel","CreatedById":141813,"CreatedDateTime":"2016-04-22T20:27:49Z","Content":"\n\u003Cp\u003E\nOk, I ran the beta 2. Overall it appears ok, but the HUD in flight scene is just an small empty square window (I don\u0027t know what it was like in previous versions). It also looks like the Mk-55 \u0022Thud\u0022 engine is not tracked by the mod.\n\u003C/p\u003E\n"}]}