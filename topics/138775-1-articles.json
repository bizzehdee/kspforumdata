{"TopicId":138775,"ForumId":29,"TopicTitle":"Issues with development on a Mac using Xamarin","CreatedByName":"Booots","CreatedById":62446,"CreatedDateTime":"2016-05-02T18:36:25Z","PageNum":1,"Articles":[{"CreatedByName":"Booots","CreatedById":62446,"CreatedDateTime":"2016-05-02T18:36:25Z","Content":"\n\u003Cp\u003E\nHey,\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve taken over maintaining the ESLD beacons mod and had my build environment working fine for KSP 1.0.5. This was my first time using C# and setting this sort of environment, but it compiled and worked.\n\u003C/p\u003E\n\u003Cp\u003E\nUnfortunately, since updating to 1.1 I can get anything to load into the game. Compiling works fine, but I keep getting \u0022System.Reflection.ReflectionTypeLoadException: The classes in the module cannot be loaded.\u0022 errors in the log from AssemblyLoader related to my dll. I\u0027ve noticed that UnityEngine.dll has moved from KSP/Data/Managed to KSP/Resources/Data/Managed and there\u0027s a second copy of Assembly-CSharp there too. Compounding the problem, I think my version of Mono updated so that could be at play too.\n\u003C/p\u003E\n\u003Cp\u003E\nI saw this error once before when I was referencing the wrong .Net version, but I haven\u0027t changed that setting in Xamarin since fixing that.\n\u003C/p\u003E\n\u003Cp\u003E\nCan anyone tell me what I\u0027m doing wrong? Are there any experienced Mac developers?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m referencing the new UnityEngine.dll in /Resources/Data/Managed and the usual Assembly-CSharp in /Data/Managed. I\u0027m compiling in Xamarin studio with the profile \u0022PCL 4.0 - Profile5\u0022 which targets .NET 4 or later. I have the newest version of Mono.\n\u003C/p\u003E\n"},{"CreatedByName":"Booots","CreatedById":62446,"CreatedDateTime":"2016-05-02T23:18:17Z","Content":"\n\u003Cp\u003E\nI installed Mono 3.12.1 (which, according to the release notes, is the last supporting .NET 3.5), but now Xamarin won\u0027t start, saying \u0022This application requires a newer version of the Mono framework.\u0022 I emailed the makers of Xamarin asking for a download link to an earlier version that might support Mono 3, but who knows how far that\u0027ll go.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat IDEs do other Mac-based developers use? All the guides here talk about Monodevelop, but that\u0027s become Xamarin and can\u0027t be gotten anymore.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-02T23:21:45Z\u0022 title=\u002205/02/2016 11:21  PM\u0022 data-short=\u00228 yr\u0022\u003EMay 2, 2016\u003C/time\u003E by Booots\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-05-03T08:31:28Z","Content":"\n\u003Cp\u003E\nYou should be able to have 2 mono install on a system. A mono 4 that would be used to run Xamarin and a 3 that you ask the IDE to use to compile. It is doable on Linux so I guess you can do it on OSX but I can\u0027t help much more \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Pirateguillermo","CreatedById":154756,"CreatedDateTime":"2017-01-11T20:21:36Z","Content":"\n\u003Cp\u003E\nDid you ever resolve this? Mono gets installed in /Library/Frameworks/Mono.framework, and there is room in there for multiple versions. However, it appears that Xamarin Studio only sees whatever the current version is, even if you add a different version to its list of runtimes.\n\u003C/p\u003E\n"},{"CreatedByName":"Pirateguillermo","CreatedById":154756,"CreatedDateTime":"2017-01-11T20:57:20Z","Content":"\n\u003Cp\u003E\nAha! Here\u0027s how to get development started on a Mac, as I\u0027ve just managed to do it.\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nDownload and install an editor/IDE. I chose to use \u003Ca href=\u0022https://www.xamarin.com/download\u0022 rel=\u0022external nofollow\u0022\u003EXamarin Studio Community Edition\u003C/a\u003E since I\u0027m not doing any professional C# work.\n\u003Col\u003E\u003Cli\u003E\nUpon first running Xamarin Studio, it will prompt you to download Mono. Let it do that.\n\u003C/li\u003E\n\u003Cli\u003E\nAfter the Mono framework package is downloaded, you\u0027re going to need to run it as an installer and install it. The readme says that a bunch of libs get installed, and I was initially concerned because they were also libs that I\u0027d installed using MacPorts. However, they are installed inside the Mono framework directory, so there will be no collision. Don\u0027t Panic.\n\u003C/li\u003E\n\u003C/ol\u003E\u003C/li\u003E\n\u003Cli\u003E\nDownload and install the \u003Ca href=\u0022https://download.mono-project.com/archive/3.12.1/macos-10-x86/\u0022 rel=\u0022external nofollow\u0022\u003Eold version of Mono\u003C/a\u003E (3.12.1)\n\u003C/li\u003E\n\u003Cli\u003E\nOpen a terminal window and cd to /Library/Frameworks/Mono.framework/Versions\n\u003Col\u003E\u003Cli\u003E\nSince this is a root-owned directory, easiest thing here is to \u0060sudo -s\u0060\n\u003C/li\u003E\n\u003Cli\u003E\nNote that there will be at least two directories in here. One is \u00273.12.1\u0027 and the other is whatever is current at the time you ran Xamarin Studio. As I write this, it\u0027s 4.6.2. There is also a symbolic link, Current, that\u0027s pointing to the last version you installed, which is probably 3.12.1. If it is, that needs to be changed.\n\u003C/li\u003E\n\u003Cli\u003E\n\u0060rm -f Current;ln -s 4.6.2 Current\u0060\n\u003C/li\u003E\n\u003Cli\u003E\nNow you can exit the sudo shell\n\u003C/li\u003E\n\u003C/ol\u003E\u003C/li\u003E\n\u003Cli\u003E\nLaunch Xamarin Studio\n\u003C/li\u003E\n\u003Cli\u003E\nIn the application preferences (cmd-,) look in Projects-\u0026gt;.NET Runtimes. If the 3.12.1 framework isn\u0027t there, you need to add it.\n\u003C/li\u003E\n\u003Cli\u003E\nQuit and relaunch Xamarin Studio.\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\nNow you\u0027ll be able to set Mono / .NET 3.5 as the target in your project\u0027s options.\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2017-01-12T06:23:25Z","Content":"\n\u003Cp\u003E\nNever tried to compile using Xamarin Studio, but I found a process that works with xbuild (command line compiler that comes with mono). \u00A0I only ever had to install the latest version of Mono.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nxbuild /p:Configuration=Release /p:ReferencePath=\u0022path/containing/ksp/assemblies\u0022 MySolution.sln\u003C/pre\u003E\n\u003Cp\u003E\nYou can of course specify Debug rather than Release. \u00A0The path for the assemblies is something like something/KSP.app/Resources/Data/Managed (looks like you figured that out already), or copy the DLLs somewhere else.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-12T06:23:46Z\u0022 title=\u002201/12/2017 06:23  AM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 12, 2017\u003C/time\u003E by blowfish\u003C/strong\u003E\n\u003C/span\u003E\n"}]}