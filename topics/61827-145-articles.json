{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":145,"Articles":[{"CreatedByName":"Cakeofruit","CreatedById":73238,"CreatedDateTime":"2015-11-05T16:38:47Z","Content":"\n\u003Cp\u003EThis is how i get the AoA \u003C/p\u003E\u003Cp\u003EFUNCTION AOA {\u003C/p\u003E\u003Cp\u003E RETURN VANG(ship:facing:vector, ship:srfprograde:vector).\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\n"},{"CreatedByName":"idPhobos","CreatedById":138298,"CreatedDateTime":"2015-11-05T18:07:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E...In the meantime you can do the fix manually yourself - just use VCXL(SHIP:VELOCITY:SURFACE, SHIP:UP:VECTOR) and it *should* work.\u003C/div\u003E\u003C/blockquote\u003EGreat, I did wonder if it was that issue. I remembered it being a problem with KER a while back.\u003Cp\u003EI\u0027ll try the vec exclude tonight (was late and I had only tried a subtract of vertspeed to work around, was closer but still not correct \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E ).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-05T18:33:09Z\u0022 title=\u002211/05/2015 06:33  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 5, 2015\u003C/time\u003E by idPhobos\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2015-11-05T23:12:49Z","Content":"\n\u003Cp\u003EGithub \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/releases/tag/v0.18.0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/releases/tag/v0.18.0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E[h=3]BREAKING CHANGES[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EAs usual, you MUST recompile all KSM files before running them on the new version. Some of the changes have altered how the VM works.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ENew LOADDISTANCE obsoletes the previous way it worked ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/loaddistance.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/loaddistance.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EFixed broken spelling of \u0022ACQUIRE\u0022 on docking ports. The old spelling of \u0022AQUIRE\u0022 won\u0027t work anymore.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EChanged the bound variable \u0022SURFACESPEED\u0022 to \u0022GROUNDSPEED\u0022 instead, as the meaning of \u0022SURFACESPEED\u0022 was confusingly ambiguous.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ENew arg/param matching checks make some previously usable varying argument techniques not work. (We don\u0027t think anyone was using them anyway).\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDisabled the ability to control vessels the kOS computer part is not actually attached to. This always used to be possible, but it shouldn\u0027t have been as it breaks the theme of kOS. This affects all the following: vessel:control, part:controlfrom, part:tag (can still get, but not set), partmodule:doaction, partmodule:doevent, partmodule:setfield (can still getfield). These things become read-only when operating on any vessel other than the one the executing kOS module is actually part of.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[h=3]NEW FEATURES[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ETHE BIG ONE: Fix to Cooked Steering! Should help people using torque-less craft like with Realism Overhaul. Removed the old steering logic and replaced it with a nice auto-tuning system. ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1118\u0022 rel=\u0022external nofollow\u0022\u003E#1118\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESteeringManager structure to let users tweak parts of the new steering system ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/steeringmanager.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/steeringmanager.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EPIDLoop structure to let users see parts of the new steering system, and to let them use the built-in PID system for their own needs ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/pidloop.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/pidloop.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EString manipulation methods. ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/string.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/string.html\u003C/a\u003E)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ENew Lexicon (Associateive Array) type. ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/lexicon.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/lexicon.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ENew Science Experiment control interface allows scripts to directly execute science experiments, bypassing the on-screen prompts. ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/vessels/scienceexperiment.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/vessels/scienceexperiment.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECrewMember API to let you query the registered crew - their class, gender, and skill (\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/vessels/crewmember.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/vessels/crewmember.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EInfernal Robotics API now lets you get Part containing a servo ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1103\u0022 rel=\u0022external nofollow\u0022\u003E#1103\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E(user docs) Better tutorial for KSP 1.0 areo mode. ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1081\u0022 rel=\u0022external nofollow\u0022\u003E#1081\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EA few more constants: C, ATMTOKPA, KPATOATM. ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/math/basic.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/math/basic.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDYNAMICPRESSURE, or Q ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1085\u0022 rel=\u0022external nofollow\u0022\u003E#1085\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDEFINED keyword ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/language/variables.html#defined\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/language/variables.html#defined\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELoad and Pack Distance manipulation ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/loaddistance.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/loaddistance.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EKUniverse structure letting you break the 4th wall and revert from a script ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/kuniverse.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/kuniverse.html\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAdded SolarPrimeVector to provide universal longitude direction ( \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/bindings.html#solarprimevector\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/bindings.html#solarprimevector\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[h=3]BUG FIXES[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EMade stage:liquidfuel more sane. ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/513\u0022 rel=\u0022external nofollow\u0022\u003E#513\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELIST BODIES returned unusuable structure type ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1090\u0022 rel=\u0022external nofollow\u0022\u003E#1090\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMade \u0022ORBIT\u0022 and alias for \u0022OBT\u0022 and visa versa ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1089\u0022 rel=\u0022external nofollow\u0022\u003E#1089\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EMade vecdraws stop showing bogus atmospheric burning effects ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1108\u0022 rel=\u0022external nofollow\u0022\u003E#1108\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERemoved non-functional broken attempts to save/restore variables ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1098\u0022 rel=\u0022external nofollow\u0022\u003E#1098\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EKSM files didn\u0027t store relative jumps right, breaking short-circuit boolean logic ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1137\u0022 rel=\u0022external nofollow\u0022\u003E#1137\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E(user docs) many minor docs fixes.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELock throttle inside a FROM loop was broken ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1117\u0022 rel=\u0022external nofollow\u0022\u003E#1117\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EUnlock anything inside a Trigger body was broken ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1151\u0022 rel=\u0022external nofollow\u0022\u003E#1151\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EReplaced KSP\u0027s incorrect ground speed with our own calculation ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1097\u0022 rel=\u0022external nofollow\u0022\u003E#1097\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESASMODE \u0022radialin\u0022 and \u0022raidialout\u0022 were swapped in the KSP API ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1130\u0022 rel=\u0022external nofollow\u0022\u003E#1130\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBug with remote tech allowing access without antenna in one case ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1171\u0022 rel=\u0022external nofollow\u0022\u003E#1171\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWheelsteering by integer compass heading was broken ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1141\u0022 rel=\u0022external nofollow\u0022\u003E#1141\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESHUTDOWN didn\u0027t shut down immediately ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1120\u0022 rel=\u0022external nofollow\u0022\u003E#1120\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERemote Tech delay, and the wait command, were ignoring the time warp multiplier ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/723\u0022 rel=\u0022external nofollow\u0022\u003E#723\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBetter detection of arg/param matching. ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1107\u0022 rel=\u0022external nofollow\u0022\u003E#1107\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDoing PRINT AT that runs offscreen threw an error ( \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/813\u0022 rel=\u0022external nofollow\u0022\u003E#813\u003C/a\u003E )\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Horus","CreatedById":99705,"CreatedDateTime":"2015-11-06T00:04:10Z","Content":"\n\u003Cp\u003EBless you!\u003C/p\u003E\n"},{"CreatedByName":"idPhobos","CreatedById":138298,"CreatedDateTime":"2015-11-06T00:05:50Z","Content":"\n\u003Cp\u003EWell that fixes my little issue rather spectacularly. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Cakeofruit","CreatedById":73238,"CreatedDateTime":"2015-11-06T01:37:02Z","Content":"\n\u003Cp\u003Ethis update freeze my ksp loading when the kos part are patch with the module manager.\u003C/p\u003E\u003Cp\u003EI play on a mac and it\u0027s the only mod install\u003C/p\u003E\n"},{"CreatedByName":"idPhobos","CreatedById":138298,"CreatedDateTime":"2015-11-06T02:16:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cakeofruit\u0022 data-cite=\u0022Cakeofruit\u0022\u003E\u003Cdiv\u003Ethis update freeze my ksp loading when the kos part are patch with the module manager.\u003Cp\u003EI play on a mac and it\u0027s the only mod install\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHangs when MM is patching kOSMachine0m. Narrowed it down to KER in my case. Still doing A B tests to see if it\u0027s also with another mod.\u003C/p\u003E\u003Cp\u003EEdit: Not just KER. KIS/KAS too.\u003C/p\u003E\u003Cp\u003ETail of log\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 20:21:49.972] DragCubeSystem: Creating drag cubes for part \u0027KIS.evapropellant\u0027[LOG 20:21:49.988] PartLoader: Compiling Part \u0027KIS/Parts/guide/part/KIS_guide\u0027\u003Cbr\u003E[LOG 20:21:49.996] PartLoader: Part \u0027KIS/Parts/guide/part/KIS_guide\u0027 has no database record. Creating.\u003Cbr\u003E[LOG 20:21:50.000] DragCubeSystem: Creating drag cubes for part \u0027KIS.guide\u0027\u003Cbr\u003E[LOG 20:21:50.017] PartLoader: Compiling Part \u0027KIS/Parts/wrench/part/KIS_wrench\u0027\u003Cbr\u003E[LOG 20:21:50.025] PartLoader: Part \u0027KIS/Parts/wrench/part/KIS_wrench\u0027 has no database record. Creating.\u003Cbr\u003E[LOG 20:21:50.029] DragCubeSystem: Creating drag cubes for part \u0027KIS.wrench\u0027\u003Cbr\u003E[LOG 20:21:50.040] PartLoader: Compiling Part \u0027kOS/Parts/kOSMachine0m/part/kOSMachine0m\u0027\u003Cbr\u003E[EXC 20:21:50.055] FileNotFoundException: Could not load file or assembly \u0027KSPAPIExtensions, Version=1.7.5.0, Culture=neutral, PublicKeyToken=null\u0027 or one of its dependencies.\u003Cbr\u003E    System.MonoCustomAttrs.GetCustomAttributesBase (ICustomAttributeProvider obj, System.Type attributeType)\u003Cbr\u003E    System.MonoCustomAttrs.GetCustomAttributes (ICustomAttributeProvider obj, System.Type attributeType, Boolean inherit)\u003Cbr\u003E    System.Reflection.MonoField.GetCustomAttributes (System.Type attributeType, Boolean inherit)\u003Cbr\u003E    BaseFieldList.CreateList (System.Type type, System.Object instance)\u003Cbr\u003E    BaseFieldList..ctor (UnityEngine.Component host)\u003Cbr\u003E    PartModule.ModularSetup ()\u003Cbr\u003E    PartModule.Awake ()\u003Cbr\u003E    UnityEngine.GameObject:AddComponent(Type)\u003Cbr\u003E    Part:AddModule(String)\u003Cbr\u003E    Part:AddModule(ConfigNode)\u003Cbr\u003E    PartLoader:ParsePart(UrlConfig, ConfigNode)\u003Cbr\u003E    :MoveNext()\u003Cbr\u003E[EXC 20:21:50.058] NullReferenceException: Object reference not set to an instance of an object\u003Cbr\u003E    PartModule.Load (.ConfigNode node)\u003Cbr\u003E    Part.AddModule (.ConfigNode node)\u003Cbr\u003E    PartLoader.ParsePart (.UrlConfig urlConfig, .ConfigNode node)\u003Cbr\u003E    PartLoader\u002B.MoveNext ()\u003Cbr\u003E[EXC 20:21:50.062] NullReferenceException: Object reference not set to an instance of an object\u003Cbr\u003E    PartLoader.GetDatabaseConfig (.Part p)\u003Cbr\u003E    PartLoader.GetDatabaseConfig (.Part p, System.String nodeName)\u003Cbr\u003E    DragCubeSystem.LoadDragCubes (.Part p)\u003Cbr\u003E    Part\u002B.MoveNext ()\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-06T02:25:50Z\u0022 title=\u002211/06/2015 02:25  AM\u0022 data-short=\u00228 yr\u0022\u003ENovember 6, 2015\u003C/time\u003E by idPhobos\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2015-11-06T03:06:25Z","Content":"\n\u003Cp\u003EIt looks like we forgot to include KSPAPIExtensions.dll in the zip file that we released earlier today. That caused the errors that @idPhobos reported in the log file. Since we have to correct an issue with PIDLoop anyways, we\u0027ll get this dll included in the same update. Don\u0027t expect the release yet tonight, we\u0027ll want to make sure there are no other small fixes to publish at the same time. For the time being, you can copy the dll out of the zip file for 0.17.3.\u003C/p\u003E\n"},{"CreatedByName":"idPhobos","CreatedById":138298,"CreatedDateTime":"2015-11-06T03:17:43Z","Content":"\n\u003Cp\u003EExcellent, back up and running!\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2015-11-06T06:55:40Z","Content":"\n\u003Cp\u003Eit\u0027s not possible at the moment to add more than one kOS CPU to the same part (I tried - two CPUs show up but opening the terminal via the kOS menu highlights both CPUs as opened). Is this a core limitation of kOS or has it just not been implemented as a feature yet? I\u0027m not a fan of the kOS-specific parts and prefer to just MM the kOS module into my existing probe cores. In some cases I would like to run multiple CPUs (one for rocket control, another just for monitoring/logging telemetry) and once again it would be nice to be able to do so with a single part carrying multiple CPUs\u003C/p\u003E\n"},{"CreatedByName":"Octa","CreatedById":140058,"CreatedDateTime":"2015-11-06T10:02:49Z","Content":"\n\u003Cp\u003EIs this the right mod if i want to automate a SSTO flight profile? Right now i\u0027m using Pilot Assistant to keep heading, height or vertical speed at a constant level while it also stabilizes the plane (keeping roll at 0 and adjusting pitch/yaw for heading and climb. Can i do the same here or is there more manual work required in the script? In Pseudo-Code, what i imagine looks like this:\u003C/p\u003E\u003Cp\u003E- Start rapiers, disable other engine, full throttle, roll=0, hdg=90\u003C/p\u003E\u003Cp\u003E- If speed=100m/s, pitch up a bit (liftoff), retract gear\u003C/p\u003E\u003Cp\u003E- pitch=30 degree until 10.000m\u003C/p\u003E\u003Cp\u003E- keep vertical speed of 50 m/s until 20.000m\u003C/p\u003E\u003Cp\u003E- keep vertical speed of 10 m/s until 25.000m (asuming i run out of intake air at this height)\u003C/p\u003E\u003Cp\u003E- switch to closed cycle, close intakes, pitch 45\u00C3\u201A\u00C2\u00B0 until Ap is 75.000\u003C/p\u003E\u003Cp\u003E- stop engines, turn prograde\u003C/p\u003E\u003Cp\u003EAs said, right now i\u0027m typing in new numbers into pilot assistant during flight, which handles the actual controls. With a scripted ascend, i want to take most unreliable thing out of the equation (=me) and have something of a comparison between different vessel designs/configuration or flight profiles. (\u0022Hmmm, i have plenty of Oxygen left after i got in orbit, which my nuke does not need, how much can be removed while i still get to space\u0022).\u003C/p\u003E\u003Cp\u003EThis mod offers a huge amount of things that can be configured/scripted, is this sort of automated control possible or do i need to script more things explicitly? For example the sections of keeping vertical speed. Does kOS automatically adjust pitch to keep the climb rate like pilot assistant or do have to scripts the pitch itself (which i think would be a bit more complicated )?\u003C/p\u003E\u003Cp\u003EAlso, do 2 launches look exactly the same?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-11-06T10:51:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Octa\u0022 data-cite=\u0022Octa\u0022\u003E\u003Cdiv\u003EIs this the right mod if i want to automate a SSTO flight profile? Right now i\u0027m using Pilot Assistant to keep heading, height or vertical speed at a constant level while it also stabilizes the plane (keeping roll at 0 and adjusting pitch/yaw for heading and climb. Can i do the same here or is there more manual work required in the script? In Pseudo-Code, what i imagine looks like this:\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EShort answer: yes.\u003C/p\u003E\u003Cp\u003ELonger answer: yes, BUT... all the mod does is provide a toolkit you can use to write the software yourself, so you still have to figure out the algorithm of how you\u0027re going to do it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E- Start rapiers, disable other engine, full throttle, roll=0, hdg=90\u003C/p\u003E\u003Cp\u003E- If speed=100m/s, pitch up a bit (liftoff), retract gear\u003C/p\u003E\u003Cp\u003E- pitch=30 degree until 10.000m\u003C/p\u003E\u003Cp\u003E- keep vertical speed of 50 m/s until 20.000m\u003C/p\u003E\u003Cp\u003E- keep vertical speed of 10 m/s until 25.000m (asuming i run out of intake air at this height)\u003C/p\u003E\u003Cp\u003E- switch to closed cycle, close intakes, pitch 45\u00C3\u201A\u00C2\u00B0 until Ap is 75.000\u003C/p\u003E\u003Cp\u003E- stop engines, turn prograde\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEverything on that list should be doable from kOS, in principle.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis mod offers a huge amount of things that can be configured/scripted, is this sort of automated control possible or do i need to script more things explicitly? For example the sections of keeping vertical speed. Does kOS automatically adjust pitch to keep the climb rate like pilot assistant or do have to scripts the pitch itself (which i think would be a bit more complicated )?\u003C/p\u003E\u003Cp\u003EAlso, do 2 launches look exactly the same?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are small differences in behavior from one run to the next due to the fact that the environment outside the KSP game indirectly affects the game\u0027s simulation rate. i.e. if you ran KSP while your computer was trying to, say, process a video or calculate Pi to several million places, that can cause it to use slightly longer time deltas between simulation frames, as the OS isn\u0027t allowing it as much of the CPU\u0027s time. Those slightly longer time steps can cause variations that feel random as far as your script is concerned. But they generally only cause a small bit of \u0022noise\u0022 in the behavior, so to speak.\u003C/p\u003E\u003Cp\u003EThe main trick to all the things you\u0027re trying to do is to use a PID control algorithm. You could seek a certain climb rate as your target setpoint, and use that PID controller\u0027s output to set the elevator pitch. If you look over in the reddit group /r/kos, it has some useful sidebar information about how a PID control algorithm works and how you make one, and the new release of kOS is supposed to have a helpful library to do the math for you (but wait for tomorrow when the 0.18.1 patch is released first - that PID control part of the mod had a small error in today\u0027s 0.18.0 release that\u0027s getting patched tomorrow and re-released.)\u003C/p\u003E\n"},{"CreatedByName":"Octa","CreatedById":140058,"CreatedDateTime":"2015-11-06T12:53:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EShort answer: yes.\u003Cp\u003ELonger answer: yes, BUT... all the mod does is provide a toolkit you can use to write the software yourself, so you still have to figure out the algorithm of how you\u0027re going to do it.\u003C/p\u003E\u003Cp\u003EEverything on that list should be doable from kOS, in principle.\u003C/p\u003E\u003Cp\u003EThere are small differences in behavior from one run to the next due to the fact that the environment outside the KSP game indirectly affects the game\u0027s simulation rate. i.e. if you ran KSP while your computer was trying to, say, process a video or calculate Pi to several million places, that can cause it to use slightly longer time deltas between simulation frames, as the OS isn\u0027t allowing it as much of the CPU\u0027s time. Those slightly longer time steps can cause variations that feel random as far as your script is concerned. But they generally only cause a small bit of \u0022noise\u0022 in the behavior, so to speak.\u003C/p\u003E\u003Cp\u003EThe main trick to all the things you\u0027re trying to do is to use a PID control algorithm. You could seek a certain climb rate as your target setpoint, and use that PID controller\u0027s output to set the elevator pitch. If you look over in the reddit group /r/kos, it has some useful sidebar information about how a PID control algorithm works and how you make one, and the new release of kOS is supposed to have a helpful library to do the math for you (but wait for tomorrow when the 0.18.1 patch is released first - that PID control part of the mod had a small error in today\u0027s 0.18.0 release that\u0027s getting patched tomorrow and re-released.)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for your answer! \u003C/p\u003E\u003Cp\u003EFrom 1st thought, the Noise created by other programs than KSP can be ignored. When i start KSP, usually no other Program (apart from the always running background applications like steam) is running. Or the design/ascent path must be bleeding edge with no margin of error/variation.\u003C/p\u003E\u003Cp\u003ESo after digging a bit more in the documentation, i found that that stuff like vertical speed and heading are RO parameters, so i\u0027d have to write the loop that read the current values and and adjust the control (pitch, roll, yaw) if theres a difference. So no pre-programmed auto-pilot where i can set \u0022waypoints\u0022 of the ascent.\u003C/p\u003E\u003Cp\u003EI haven\u0027t yet decided if this goes too deep into material for me or not. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E I already spend much time on playing KSC or messing around with computers/servers, with scripting in KSP/kOS there would much less free time left for other things \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-06T23:21:42Z","Content":"\n\u003Cp\u003EI don\u0027t like the new cooked steering at all. The old algorithm worked reasonably well for most cases, and I could roll my own PID loop if it didn\u0027t. This new one REQUIRES hand tuning of pid values and/or torque/stopping time for almost every ship to get reasonable behavior, which I find tedious and unnecessary.\u003C/p\u003E\u003Cp\u003EPlease add back option to use the old control scheme... the new PIDLoop structure is great and simplifies custom PID loop scripting, but taking away the old cooked steering and forcing the use of PID loops seems to be a step backwards.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-11-06T23:51:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EPlease add back option to use the old control scheme... \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EProbably never going to happen. That would be a spaghetti code nightmare to maintain as they are two entirely different systems with different code flow.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Ethe new PIDLoop structure is great and simplifies custom PID loop scripting, but taking away the old cooked steering and forcing the use of PID loops seems to be a step backwards.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe only problem I\u0027ve seen is that the default tuning parameters make it steer too weakly for the case of a large rocket that is slow to turn and needs the controls pushed to the max. I just think that the default settings need to be a bit rebalanced, rather than scrapping everything and making the system a spaghetti code mess by trying to support both the old and new systems.\u003C/p\u003E\u003Cp\u003EOpening up the chance of tuning the built-in steering without having to make your own entire steering system from scratch isn\u0027t a step backward at all. In the old way you had to replace the entire steering system with your own work from scratch in order to get even the slightest change to the behavior. The only options you had were \u0022use hardcoded behavior\u0022 or \u0022do the whole thing yourself\u0022. There were no in-between options. Now there are.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-06T23:55:47Z\u0022 title=\u002211/06/2015 11:55  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 6, 2015\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"BevoLJ","CreatedById":77242,"CreatedDateTime":"2015-11-06T23:58:30Z","Content":"\n\u003Cp\u003EIs there a way to do RCS directional burns? Looking to automate my ullage for to automate starting my engines. Currently to start burns I\u0027m just disabling the engine, thrust to 1 with RCS active, then when they have fuel re-enabling my engines. Just wondering if it could also be done with RCS w/o needing to disable the engines prior to burns. I can\u0027t seem to find much on RCS in the documentation, unless I am just looking in the wrong place. Would also be nice to know if RCS directional burns are possible since that is how I do finetune most of my orbital adjustments in RSS.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-07T00:04:39Z\u0022 title=\u002211/07/2015 12:04  AM\u0022 data-short=\u00228 yr\u0022\u003ENovember 7, 2015\u003C/time\u003E by BevoLJ\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-07T00:18:37Z","Content":"\n\u003Cp\u003EUnless I\u0027m missing something, no set of default PID values can replace the flexibility of the old steering code which accounts for both torque and inertia, and seems to handle non-linear torque situations well (such as pitching with significant drag present). As an example, the old steering worked great, without any tuning, with my multistage spaceplane which has vastly different mass, cg and torque depending on the phase of flight. Now I have to have 3 separate sets of PID values for takeoff, atmospheric flight, and space flight to get good behavior.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EProbably never going to happen. That would be a spaghetti code nightmare to maintain as they are two entirely different systems with different code flow.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMaintainability is not valid reason to take away working, useful features. There are ways to have legacy code live side by side with newer stuff....\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2015-11-07T02:39:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EMaintainability is not valid reason to take away working, useful features\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt sure is when you\u0027re doing this as a hobby in whatever spare time you manage to make for it. Why would the devs willingly make things more difficult under those circumstances? They are already giving you all this awesome capability for free.\u003C/p\u003E\u003Cp\u003EAnd are any of the devs able to answer \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68089-1-0-4-kOS-Scriptable-Autopilot-System-v0-18-0-2015-11-05?p=2278504\u0026amp;viewfull=1#post2278504\u0022 rel=\u0022external nofollow\u0022\u003Emy question\u003C/a\u003E posed earlier?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-07T02:41:07Z\u0022 title=\u002211/07/2015 02:41  AM\u0022 data-short=\u00228 yr\u0022\u003ENovember 7, 2015\u003C/time\u003E by Gaiiden\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2015-11-07T02:56:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003EIt sure is when you\u0027re doing this as a hobby in whatever spare time you manage to make for it. Why would the devs willingly make things more difficult under those circumstances? They are already giving you all this awesome capability for free.\u003Cp\u003EAnd are any of the devs able to answer \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68089-1-0-4-kOS-Scriptable-Autopilot-System-v0-18-0-2015-11-05?p=2278504\u0026amp;viewfull=1#post2278504\u0022 rel=\u0022external nofollow\u0022\u003Emy question\u003C/a\u003E posed earlier?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFor your question. I simply have never tried it and we dont test for it. I think that having an advanced kOS part with 2 would be fun and useful. Do we have an open issue in github about it? if not would you mind creating one and we can put it in the roadmap\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-11-07T03:08:17Z","Content":"\n\u003Cp\u003EThe new PIDloop stuff seems interesting \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Even though I always rather enjoyed implementing a good PID controller, when it is about the purpose and not the means, this could be helpful. The only thing I do not see working is implementing more advanced PID features (jolt and/or jitter protection, for instance), though the ability to dynamically set minima and maxima somewhat mitigates that.\u003C/p\u003E\u003Cp\u003EThe reverting option is nice too. I was toying with the idea of writing an external program for a couple of experiments, but now kOS makes it very possible to do that from KSP itself (though I am not sure about processing speed).\u003C/p\u003E\u003Cp\u003EI see kOS has proper functions now too. How neat \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E You made wonderful progress in my absence. Colour me impressed, gentlemen!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-07T03:25:52Z\u0022 title=\u002211/07/2015 03:25  AM\u0022 data-short=\u00228 yr\u0022\u003ENovember 7, 2015\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-07T03:23:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003EIt sure is when you\u0027re doing this as a hobby in whatever spare time you manage to make for it. Why would the devs willingly make things more difficult under those circumstances? They are already giving you all this awesome capability for free.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E*sigh*\u003C/p\u003E\u003Cp\u003Ewelp, looks like I\u0027m branching kos and building my own version with the old steering logic. And having read the code, I fail to see how the 1500 lines of undocumented new steering code is more maintainable than the 200 lines of undocumented old code.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2015-11-07T03:25:25Z","Content":"\n\u003Cp\u003EWhy does this remind me of XKCD?\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://imgs.xkcd.com/comics/workflow.png\u0022 alt=\u0022workflow.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2015-11-07T03:56:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EUnless I\u0027m missing something, no set of default PID values can replace the flexibility of the old steering code which accounts for both torque and inertia, and seems to handle non-linear torque situations well (such as pitching with significant drag present). As an example, the old steering worked great, without any tuning, with my multistage spaceplane which has vastly different mass, cg and torque depending on the phase of flight. Now I have to have 3 separate sets of PID values for takeoff, atmospheric flight, and space flight to get good behavior.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wrote the new steering code, and based on your above comment I\u0027m not sure you fully understand the differences between the new code and the old code. So let me try to help with that.\u003C/p\u003E\u003Cp\u003EPreviously:\u003C/p\u003E\u003Cp\u003ESteering was handled using a \u0022guess\u0022 at what the turning angular velocity should be based on angular offset. Then the available torque was calculated for the vessel, based only on torque wheels and a rough calculation of RCS torque. There was no feedback to the control loop, and in fact is was implemented statically so that it did not remember anything about even the previous setpoint. In some instances, this was close enough to work well, while in others (most notably instances without RCS or torque wheels). In every experiment I conducted, the old cooked steering was an epic failure when using either control surfaces, or gimbals as the primary source of torque. I\u0027m happy that these values worked well for you in all instances, but that was by no means the norm.\u003C/p\u003E\u003Cp\u003ENow:\u003C/p\u003E\u003Cp\u003EThe new system is not just a PID loop with some tuned constants. The first modification I made was to add a calculation of engine gimbal torque, allowing the calculation to remain accurate when the available torque from the engines dwarfed that from reaction wheels and RCS (for example a gimbaled launcher, with a satellite on top). Next, I worked with another contributor on an accurate model for calculating required/target torque to achieve a desired angular velocity. After that, I implemented a total of 6 PID loops to calculate the target angular velocity and torque about 3 different axes. Finally, I wrote an algorithm that analysis the observed change in angular velocity, and automatically adjusts the \u0022available torque\u0022 based on a running average.\u003C/p\u003E\u003Cp\u003EI agree fully that installing blind PID controls that require the user to tune them would defeat the purpose of cooked steering (to be a fairly simple default default steering control). In an ideal world where we have access to all of the variables and computing power is infinite, a fully deterministic calculation would be far superior. However, that calculation is what the physics engine behind KSP is already doing and we cannot practically replicate or approximate it without taking some short cuts (otherwise the control calculation literally doubles the execution time). What the new steering code does is blend the two choices as practically as possible. Because we (all of the KSP developers) agree that this calculation will not be perfect in every instance, it was important to us that the tuning parameters be exposed to give the user the choice of how the steering should perform.\u003C/p\u003E\u003Cp\u003EIt is important to note that the old steering code was not in any way a fully deterministic calculation for steering. It ignored several more factors than today\u0027s code does. If failed miserably when there were small values for available torque, as well as when the available torque was significantly larger than it needed to be. When using gimbaled engines, it often oscillated wildly. These are all things that were supported by a variety of issues posted to github, posts on reddit, comments made by streamers and youtubers, and in this thread. It was not broken for all ships, but it was indeed broken for some ships, and it provided no way for the user to fix this. The stock SAS is not perfect for all ships either (it creates oscillations in the orbit itself when torque is very high for small mass ships), nor is MechJeb\u0027s (I\u0027ve had instances of uncontrollable pitch oscillation on more than one occasion, and I never could make it work well for planes).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EMaintainability is not valid reason to take away working, useful features. There are ways to have legacy code live side by side with newer stuff....\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wanted to pull this quote out separate from the rest, so that I could address it directly. Maintainability is a valid reason for removing a feature, especially a broken feature. When code becomes as complicated and patched together as the old steering code was, it becomes very difficult to trace out bugs. Add the fact that no one who wrote that implementation is currently working on the kOS, and you have a receipe for disaster when something breaks (and something always breaks). By re-writing the code, I was able to compartmentalize the code to some degree, putting features into their own classes and methods, which could be both reused elsewhere in the code and tested/debugged separate from the steering code itself. If we had chosen to maintain two tracks of steering, the answer to any issue with legacy steering would be \u0022use the new steering\u0022. \u003C/p\u003E\u003Cp\u003EAll of this being said, we do want to get feedback on default tuning. We are already preparing to adjust a couple of default parameters in the next patch. There has even been discussion of adding some \u0022recommended\u0022 tuning scripts to KSLib for different shapes/classes of ships. The easiest way for us to give the users a good default performance is to get feedback on what values work most often for most users. The existing default values were found to work well in initial testing, but there the devs have since found a few places where we want change things up a little bit. We want to invite every one to help with figuring out the tuning by submitting values that worked for you, along with an image of the ship design (or a link to the craft) and preferably the csv output files from the steering manager: \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/misc/steeringmanager.html?highlight=steering#attribute:STEERINGMANAGER:WRITECSVFILES\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/steeringmanager.html?highlight=steering#attribute:STEERINGMANAGER:WRITECSVFILES\u003C/a\u003E Help us help you... help us... help you?\u003C/p\u003E\u003Cp\u003EI should be setting up a stream tomorrow afternoon to go through the new features in 0.18.0 and help with issue as well as real time feedback/discussion. I\u0027m also planning on writing a tuning FAQ of sorts, and doing a video to walk through some of the behaviors.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003Eit\u0027s not possible at the moment to add more than one kOS CPU to the same part (I tried - two CPUs show up but opening the terminal via the kOS menu highlights both CPUs as opened). Is this a core limitation of kOS or has it just not been implemented as a feature yet? I\u0027m not a fan of the kOS-specific parts and prefer to just MM the kOS module into my existing probe cores. In some cases I would like to run multiple CPUs (one for rocket control, another just for monitoring/logging telemetry) and once again it would be nice to be able to do so with a single part carrying multiple CPUs\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell if it wasn\u0027t dependent on it before, the new steering code made it so that the part ID is used to differentiate between \u0022subscribed\u0022 parts for the steering provider. I do want to fix that by using a \u0022VesselModule\u0022 to manage the once per ship objects (like steering manager and flight control). That was too much of an additional undertaking to make this release, but it will probably be in a future release if I can dedicate enough time to figuring out the life-cycle. Honestly, the execution should be tied directly to the \u0022module\u0022 itself, rather than the part, which would enable the operation you\u0027re expecting. It will probably happen after the revisions to volumes and files in the next \u0022big\u0022 release.\u003C/p\u003E\u003Cp\u003EI\u0027ll look into it a little closer though. Cause it may be that the part tracking should be OK with multiple modules and we just don\u0027t have it enabled.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EThe new PIDloop stuff seems interesting \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Even though I always rather enjoyed implementing a good PID controller, when it is about the purpose and not the means, this could be helpful. The only thing I do not see working is implementing more advanced PID features (jolt and/or jitter protection, for instance), though the ability to dynamically set minima and maxima somewhat mitigates that.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWelcome back. I actually had to write a \u0022moving average\u0022 class to accomodate some of the other things in the steering code. That might be something that we could consider exposing as a structure in a future release as a way to filter out some of the jitter.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2015-11-07T04:19:46Z","Content":"\n\u003Cp\u003EDamn couldn\u0027t rep you again so soon hvacengi but, thanks!\u003C/p\u003E\u003Cp\u003ESame with you erendrake. I will create a Github issue, was going to do that originally but decided it might be better to propose the idea here first\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2015-11-07T04:32:20Z","Content":"\n\u003Cp\u003EIt\u0027s official. I\u0027ll be streaming tomorrow at 2PM EST: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/calendar.php?do=getinfo\u0026amp;e=231\u0026amp;day=2015-11-7\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/calendar.php?do=getinfo\u0026amp;e=231\u0026amp;day=2015-11-7\u003C/a\u003E\u003C/p\u003E\n"}]}