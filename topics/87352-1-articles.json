{"TopicId":87352,"ForumId":29,"TopicTitle":"How to detect which bodys have physical real sea level spheres","CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-10-15T01:58:33Z","PageNum":1,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-10-15T01:58:33Z","Content":"\n\u003Cp\u003ESome bodies, like Kerbin and Eve and Laythe, have a sea level sphere that is real and made of liquid.\u003C/p\u003E\u003Cp\u003ESome bodies, like Minmus, have a sea level sphere that is real and made of solid ground.\u003C/p\u003E\u003Cp\u003EBut other bodies, like the Mun, have a sea level sphere that is entirely invisible and permeable and not \u0022really\u0022 there. The Mun has one or two craters that actually allow you to go below sea level and land under the \u0022sea\u0022, with no ill effects.\u003C/p\u003E\u003Cp\u003EIs there something in the API I can query that can tell me the difference? Given a CelestialBody or a CelestialBody\u0027s pqsController, what is the way I can tell if its sea level is a \u0022real\u0022 one or not? This matters because I\u0027m trying to work out what the distance to the ground or water using a homemade raycats algorithm, given the body\u0027s pqs controller, and on some planets, when the pqsController tells me the ground altitude is negative at a certain location, that means I can actually go below sea level and land down there, and on other planets, it means I cannot ever reach that ground and I\u0027ll hit the sea level sphere first. Knowing the difference matters and I don\u0027t know how to tell other than just hardcoding it per body which way (which seems inelegant).\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-10-15T11:32:36Z","Content":"\n\u003Cp\u003ECelestialBody.ocean ?\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-10-15T13:08:42Z","Content":"\n\u003Cp\u003EThere\u0027s no such thing as a hard sea.\u003C/p\u003E\u003Cp\u003EMinmus does not have a sea\u003C/p\u003E\u003Cp\u003Ethe Mun does not have an invisible sea\u003C/p\u003E\u003Cp\u003EThe Mun has no ocean at all, nor does Minmus, or Jool for that matter. Oceans are an optional component.\u003C/p\u003E\u003Cp\u003EThe way Minmus works is that it has a seeded noise based procedural terrain definition; which is then clamped to within a range. This sets the smooth flats at the minimum value, and the smooth highlands at the maximum value; then just like Kerbin, the terrain is textured based on it\u0027s altitude, latitude, slope, biome, etc; the land on minmus which is at the minimum altitude is given this texture, land on kerbin that is near sealevel is given sand texture, land that\u0027s above some latitude becomes arctic.\u003C/p\u003E\u003Cp\u003EAll ocean is regular ocean, the color changes, the density changes, but it\u0027s all \u0027liquid\u0027, and all unusually lethal\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-10-15T14:26:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003EThere\u0027s no such thing as a hard sea.\u003Cp\u003EMinmus does not have a sea\u003C/p\u003E\u003Cp\u003Ethe Mun does not have an invisible sea\u003C/p\u003E\u003Cp\u003EThe Mun has no ocean at all, nor does Minmus, or Jool for that matter. Oceans are an optional component.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI didn\u0027t say it had an ocean. I said it has a mathematical \u0022sea level\u0022 and it does. It\u0027s the altitude that is returned as \u0022zero\u0022 in the altimeter, as opposed to the radar altitude to the actual terrain. The point is that on some worlds, when the pqsController tells you terrain exists that has negative altitude (the radius returned is less than the planet\u0027s default sphere radius, it\u0027s \u0022sea level\u0022), you actually can land on it, but on other words you cannot because there is an actual object to collide with a sea level that you hit first. I don\u0027t care whether that object is liquid and therefore can be called an \u0022ocean\u0022 or not. I only care whether that object exists on the body in question in one form or another, be it liquid or not. On some worlds, while the pqsController will return terrain at negative altitude, you can\u0027t actually get to it because the world is made up of an intersection between the terrain altitude returned by pqsController AND a smooth sphere at altitude zero, and whichever of the two of them is higher is the effective lowest you can go. On other bodies, you actually can go land at a negative altitude when the pqsController tells you there is negative altitude terrain there, because the \u0022sea level\u0022 altitude isn\u0027t populated with anything.\u003C/p\u003E\u003Cp\u003EI deliberately avoided calling the sea level object an \u0022ocean\u0022 because for the purpose of this query I don\u0027t care whether it\u0027s made of liquid or not. I only care whether it\u0027s going to be there or not, interfering with trying to reach the negative terrain.\u003C/p\u003E\u003Cp\u003EAs for Minmus, I was assuming it worked just like Kerbin - an intersection of a plain spherical object with a bumpy terrain object, but in minmus\u0027s case the plain spherical object was solid instead of liquid. That\u0027s why I left the door open for the possibility that the same intersection with a plain sphere that was used for oceans might be used for dry land too. I don\u0027t KNOW whether that\u0027s the case or not. All I want to know is \u0022what\u0027s the reliable way to detect whether or not there will be that superimposed sphere in place or not?\u0022 If it turns out that this technique is only used when CelestialBody.ocean is true, and it\u0027s never used for dry land, then that\u0027s my answer. I didn\u0027t know whether or not that superimposing-a-sphere-with-the-terrain technique was reserved purely for oceans and nothing else. Is it?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-15T14:53:30Z\u0022 title=\u002210/15/2014 02:53  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 15, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-10-15T15:53:49Z","Content":"\n\u003Cp\u003Ethere is no superimposed sphere, the ocean is an effect object - not a solid sphere\u003C/p\u003E\u003Cp\u003EYou can check for it\u0027s presence with get component. as sarbian suggested.\u003C/p\u003E\u003Cp\u003E If that is not present, you can land on any spot on the body. No matter what altitude it has.\u003C/p\u003E\u003Cp\u003EThe proof are submarines and underwater rovers..\u003C/p\u003E\u003Cp\u003Eyou can drive down to 1800meter below sealevel on kerbin if your rover does not float.\u003C/p\u003E\u003Cp\u003EI wouldn\u0027t call that a superimposed solid sphere..\u003C/p\u003E\u003Cp\u003Ethe answer is therefore \u0022yes\u0022 - but actualy greys answer was allready quite clear on this?\u003C/p\u003E\u003Cp\u003EHTH\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-10-15T16:42:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022philotical\u0022 data-cite=\u0022philotical\u0022\u003E\u003Cdiv\u003Ethere is no superimposed sphere, the ocean is an effect object - not a solid sphere\u003Cp\u003EYou can check for it\u0027s presence with get component. as sarbian suggested.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGet component? The only suggestion I saw mentioned CelestialBody.ocean, not get component.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI wouldn\u0027t call that a superimposed solid sphere..\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENeither would I, and I didn\u0027t. I didn\u0027t claim that \u003Cstrong\u003EKerbin\u0027s\u003C/strong\u003E superimposed sphere was a \u003Cstrong\u003Esolid\u003C/strong\u003E one, but that Minmus\u0027s was, under the assumption that Minmus had such a superimposed sphere.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Ethe answer is therefore \u0022yes\u0022 - but actualy greys answer was allready quite clear on this?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, not really. That answer just told me that Minmus had no ocean, which I already knew and I never claimed it had an ocean, nor a \u0022hard sea\u0022, as it was put. What I assumed was that the method of superimposing a smooth sphere with the bumpy pqsController terrain height was a technique that wasn\u0027t limited to oceans only.\u003C/p\u003E\u003Cp\u003EIn other words, I was envisioning the cases breaking down this way:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  Does Body have a superimposed sea-level sphere?\u003Cbr\u003E       /      \\\u003Cbr\u003E      /        \\\u003Cbr\u003E    no         yes\u003Cbr\u003E (i.e Mun)      |\u003Cbr\u003E  Case 1        |\u003Cbr\u003E                |\u003Cbr\u003E            Is it an ocean?\u003Cbr\u003E              /   \\\u003Cbr\u003E             /     \\\u003Cbr\u003E            /       \\\u003Cbr\u003E           no       yes\u003Cbr\u003E    (i.e. Minmus)   (i.e. Kerbin)\u003Cbr\u003E      Case 2              Case 3\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt sounds like what you\u0027re trying to say is that Case 2 doesn\u0027t exist.\u003C/p\u003E\u003Cp\u003ESo telling me oceans aren\u0027t solid doesn\u0027t really tell me anything because by the time I\u0027m calling it an \u0022ocean\u0022 I\u0027m already thinking Case 3 and I\u0027m already thinking \u0022well of course they\u0027re not solid. The kinds of spheres that are solid aren\u0027t going to be called \u0022oceans\u0022.\u003C/p\u003E\u003Cp\u003EThat\u0027s why the previous answers were not clear. They assumed I was thinking of it this way:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  Does Body have an ocean?\u003Cbr\u003E       /      \\\u003Cbr\u003E      /        \\\u003Cbr\u003E    no         yes\u003Cbr\u003E (i.e Mun)      |\u003Cbr\u003E  Case 1        |\u003Cbr\u003E                |\u003Cbr\u003E            Is it liquid?\u003Cbr\u003E              /   \\\u003Cbr\u003E             /     \\\u003Cbr\u003E            /       \\\u003Cbr\u003E           no       yes\u003Cbr\u003E    (i.e. Minmus)   (i.e. Kerbin)\u003Cbr\u003E      Case 2              Case 3\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhen that\u0027s not what I was thinking, nor how I was trying to describe it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-15T17:43:57Z\u0022 title=\u002210/15/2014 05:43  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 15, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-10-15T18:41:34Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022https://raw.githubusercontent.com/Anatid/XML-Documentation-for-the-KSP-API/master/Assembly-CSharp.xml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://raw.githubusercontent.com/Anatid/XML-Documentation-for-the-KSP-API/master/Assembly-CSharp.xml\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E \u0026lt;member name=\u0022F:CelestialBody.ocean\u0022\u0026gt;\u003C/p\u003E\u003Cp\u003E \u0026lt;summary\u0026gt;\u003C/p\u003E\u003Cp\u003E Whether this planet has an ocean at \u0022sea level\u0022\u003C/p\u003E\u003Cp\u003E \u0026lt;/summary\u0026gt;\u003C/p\u003E\u003Cp\u003E \u0026lt;/member\u0026gt;\u003C/p\u003E\u003Cp\u003Ethe sea level is just a number arbitrarly defined, if the answer to above question is no, the sea level is not much more than a number..\u003C/p\u003E\u003Cp\u003ENo one tried to hypotethise, what you thought - you where quite clear in OP.\u003C/p\u003E\u003Cp\u003EGreys told you that your assumption is wrong and explained why it\u0027s likely to get the wrong assumption, I confirmed that it\u0027s wrong.\u003C/p\u003E\u003Cp\u003ENow it\u0027s actually just up to you to believe it :-)\u003C/p\u003E\u003Cp\u003EConsider this: Could it be, that you got lost in a futile question because KSP/Unity is confusing in all details?\u003C/p\u003E\u003Cp\u003EIt is as simple as we described - no mysteries attached in this case..\u003C/p\u003E\u003Cp\u003EPS: the get component I mentioned, is an alternative (more complicated) way to reach the same - if you query for OcenFX (iirc) you can get the same confirmation\u003C/p\u003E\u003Cp\u003EDoes it or does it not have the water effect at sea level..\u003C/p\u003E\u003Cp\u003E...but the sea level does not otherwise affect the flight as far as I understand the matter\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-10-15T19:52:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022philotical\u0022 data-cite=\u0022philotical\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ENo one tried to hypotethise, what you thought - you where quite clear in OP.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThen why would anyone think that telling me oceans can\u0027t be solid constituted an answer? Someone who thinks I thought oceans can be solid didn\u0027t understand me.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EGreys told you that your assumption is wrong and explained why it\u0027s likely to get the wrong assumption, I confirmed that it\u0027s wrong.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, Greys said that an assumption I wasn\u0027t even making was wrong. The actual assumption I was making is that both oceans and flat bottom land are modeled using the same smooth sphere superimposition method, not that oceans themselves are solid.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ENow it\u0027s actually just up to you to believe it :-)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt only became clear eventually further down in the thread that in addition to the strawman of my assumption referred to in Grey\u0027s post being wrong, that the assumption I actually made was wrong too. The claim that it was clear from Grey\u0027s post alone is wrong.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EConsider this: Could it be, that you got lost in a futile question because KSP/Unity is confusing in all details?\u003C/p\u003E\u003Cp\u003EIt is as simple as we described - no mysteries attached in this case..\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s simpler than you described, which is why it\u0027s confusing. Talking about the red herrings of whether oceans can be solid deflected the topic from the actual point where my assumption was wrong, which was about whether or not solid land uses the same sphere intersection system oceans use.\u003C/p\u003E\u003Cp\u003E\u0022The system that superimposes a sphere above the negative altitude terrain is only used by oceans and oceans alone. It was not used to build flat land like you see on Minmus. Minmus\u0027s pqsController actually returns zero for real for the terrain height in those locations\u0022. \u0026lt;- That\u0027s the simple answer that addresses the point where I actually had the wrong assumption, and it\u0027s not quite how it was being expressed. Telling me that \u0022my\u0022 assumption that oceans can be solid is wrong is addressing a different assumption than the one I was making. I never thought that the flat land on Minmus was actually an ocean.\u003C/p\u003E\u003Cp\u003EAnyway, thanks for clearing it up.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-15T20:08:30Z\u0022 title=\u002210/15/2014 08:08  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 15, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-15T19:54:01Z","Content":"\n\u003Cp\u003EPQS can have negative altitude (i.e. below PQS.radius). CelestialBody also has a radius, and below that radius is \u0022below sea level\u0022 on the altitude meter.\u003C/p\u003E\u003Cp\u003EAs Greys and others said, you\u0027re confusing two things:\u003C/p\u003E\u003Cp\u003E1. Some PQS have child PQSs (Kerbin, Eve, Laythe), a whole separate PQS that does not get any height mods. This is the ocean PQS. It\u0027s why Kerbin etc are more processor-intensive to look at than other bodies, because they have two PQSs. This child PQS has its radius as the body\u0027s radius (i.e. sea level) and doesn\u0027t vary in height, while (as mentioned above) the parent PQS may vary in height below itsradius (i.e. below sea level) and thus you get a sea floor.\u003C/p\u003E\u003Cp\u003E2. All bodies have a set radius, this is their (altitude) sea level, against which the ASL altitude is calculated. Altitude above terrain is calculated from the actual PQS (parent-sphere if there is also a child sphere) terrain.\u003C/p\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-10-15T20:05:35Z","Content":"\n\u003Cp\u003ENathanKell to the rescue.. :-D\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAnyway, thanks for clearing it up.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eyour welcome..\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-10-15T20:16:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E1. Some PQS have child PQSs (Kerbin, Eve, Laythe), a whole separate PQS that does not get any height mods. This is the ocean PQS. It\u0027s why Kerbin etc are more processor-intensive to look at than other bodies, because they have two PQSs. This child PQS has its radius as the body\u0027s radius (i.e. sea level) and doesn\u0027t vary in height, while (as mentioned above) the parent PQS may vary in height below itsradius (i.e. below sea level) and thus you get a sea floor.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe relevant thing not being said here, and it\u0027s important as its the only thing I was ever confused about, is the fact that not only is the child PQS used for oceans, but that this system is used \u003Cstrong\u003Eexclusively for\u003C/strong\u003E oceans and never for generating flat land.\u003C/p\u003E\u003Cp\u003EThe same type of child PQS data structure could have easily been used to make flat bottom land, so it\u0027s not an obvious assumption to make that it is never done that way.\u003C/p\u003E\u003Cp\u003EAlthough mentioning that the oceans are also a separate PQS of their own does give rise to an alternate algorithm I can use that\u0027s more robust than assuming this system will only ever be used for oceans from now and forever. Instead of trying to track whether the planet has oceans, I just ask for all the PQS objects attached to it, and look for the intersect with whichever one of them is nearest, not caring whether it\u0027s an ocean or not. That way the code might continue working if in a future release SQUAD decides to change the assumptions and start using the child PQS system for solid ground.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-15T20:22:57Z\u0022 title=\u002210/15/2014 08:22  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 15, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"silverfox8124","CreatedById":125032,"CreatedDateTime":"2014-10-16T00:14:04Z","Content":"\n\u003Cp\u003ESteven, If you\u0027re using raycasts for measuring the distance to ground, then just do so. You can call a ray\u0027s distance travelled and it also has a vector to it which you can return. No matter what planet/mun you\u0027re on, you can raycast the ground and get the \u0022real\u0022 altitude by raycasting the ground and getting the distance travelled by the ray. ~SilverFox8124\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-10-16T22:06:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022silverfox8124\u0022 data-cite=\u0022silverfox8124\u0022\u003E\u003Cdiv\u003ESteven, If you\u0027re using raycasts for measuring the distance to ground, then just do so. You can call a ray\u0027s distance travelled and it also has a vector to it which you can return. No matter what planet/mun you\u0027re on, you can raycast the ground and get the \u0022real\u0022 altitude by raycasting the ground and getting the distance travelled by the ray. ~SilverFox8124\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKSP doesn\u0027t load the terrain polygons into Unity at distances longer than about 10km or so. Raycasts only work when close up. I want this to also work from orbit too. The only way I\u0027ve found to make it work from far away from the ground is making a numeric approximation algorithm that takes sample points along the ray and queries the pqsController to find the altitude at those locations, using a dissection algorithm to find where the ray first becomes underground, then recursively checking where in THAT slice the sub-slice is where it first goes underground, then check the sub-sub-sub slices, and so on until the error is less than the epsilon I\u0027ve chosen (which is 2 meters, as this is only used from very long distances where that\u0027s acceptable).\u003C/p\u003E\u003Cp\u003EKSP does have a raycast method in the pqsController but all it does is a sphere intersection with the ray and the body\u0027s default zero-altitude radius, ignoring the actual terrain.\u003C/p\u003E\u003Cp\u003EThe first thing my code does is attempt the direct raycast hoping the polygons are actually loaded and it\u0027s a nearby hit. It\u0027s only when that fails but the ray does intersect the body\u0027s radiusMax sphere that I then drop down into the more expensive numeric approximation algorithm.\u003C/p\u003E\n"},{"CreatedByName":"silverfox8124","CreatedById":125032,"CreatedDateTime":"2014-10-17T01:08:11Z","Content":"\n\u003Cp\u003EHave you tried calling for Biome.LowestHeight and Biome.HighestHeight yet? Those have been working for me if you do them right.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-10-17T01:31:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022silverfox8124\u0022 data-cite=\u0022silverfox8124\u0022\u003E\u003Cdiv\u003EHave you tried calling for Biome.LowestHeight and Biome.HighestHeight yet? Those have been working for me if you do them right.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve got a working solution using theBody.pqsController.radiusMin and theBody.pqsController.radiusMax. The only thing is that I have to be careful that some bodies have no pqsController because they have no surface (the Sun, and perhaps Jool, but I haven\u0027t tested on Jool yet so I don\u0027t know).\u003C/p\u003E\n"}]}