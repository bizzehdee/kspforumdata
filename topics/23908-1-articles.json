{"TopicId":23908,"ForumId":36,"TopicTitle":"Plugin for multiple vehicles ???","CreatedByName":"Chris_C","CreatedById":58544,"CreatedDateTime":"2013-04-24T19:47:03Z","PageNum":1,"Articles":[{"CreatedByName":"Chris_C","CreatedById":58544,"CreatedDateTime":"2013-04-24T19:47:03Z","Content":"\n\u003Cp\u003ENow I could be completely wrong but I\u0027m assuming if you have a part module (plugin) that it\u0027s update method is only executed while a single vehicle is actually active (ie being flown)\u003C/p\u003E\u003Cp\u003EThat being the case for some ideas if you wanted multiple flights to have their parts plugin executed some kind of work a round would be needed. ( for example mapping from multiple satellites simultaneously)\u003C/p\u003E\u003Cp\u003EI notice that with the GPS plugin although it probably doesn\u0027t execute anything in the GPS satellites it can at least iterate through each of the flights names and then get the position of each satellite with a name starting GPS...\u003C/p\u003E\u003Cp\u003EIt then occurred to me that you could have a base station \u0022vehicle\u0022 that in a similar way iterated though flights to build a list of all flights containing a specific part, the only problem is I assume you\u0027d have to create a plugin instance (somehow) for each part and then execute their updates...\u003C/p\u003E\u003Cp\u003EOf course in an ideal world there would be some kind of flight centre plugin.\u003C/p\u003E\u003Cp\u003EDoes anyone with more plugin writing experience than me (not difficult) have any thoughts on this?\u003C/p\u003E\n"},{"CreatedByName":"iamaphazael","CreatedById":49843,"CreatedDateTime":"2013-04-24T19:55:52Z","Content":"\n\u003Cp\u003EMy understanding is that the PartModule class (from which all plugins are subclassed) has methods not only for when a part is placed, loaded into the flight scene, activated, etc, but that there is also a method that is called when the module is first loaded into memory. Deadbeef\u0027s subassembly loader is an example of this kind of usage. So, I\u0027m not exactly sure what it is you want to do, but the upshot is that it\u0027s possible to run code without having it be tied to a part that\u0027s on an active vessel.\u003C/p\u003E\n"},{"CreatedByName":"Chris_C","CreatedById":58544,"CreatedDateTime":"2013-04-24T20:12:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022iamaphazael\u0022 data-cite=\u0022iamaphazael\u0022\u003E\u003Cdiv\u003EMy understanding is that the PartModule class (from which all plugins are subclassed) has methods not only for when a part is placed, loaded into the flight scene, activated, etc, but that there is also a method that is called when the module is first loaded into memory. Deadbeef\u0027s subassembly loader is an example of this kind of usage. So, I\u0027m not exactly sure what it is you want to do, but the upshot is that it\u0027s possible to run code without having it be tied to a part that\u0027s on an active vessel.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI\u0027m not exactly sure what it is you want to do,\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eok lets take for example you want to do mapping with multiple vehicles - when the module is first loaded into memory - odds on there isn\u0027t a created list of all your flights (but I don\u0027t know for sure)\u003C/p\u003E\u003Cp\u003EIf you\u0027re mapping it would be handy to have more information than just the vehicles position, ideally the specific instance of the plugin for that vehicle, so you could get that vehicles plugin\u0027s private variables...\u003C/p\u003E\u003Cp\u003EThere could be other reasons for wanting access for each flights plugin instances, this is just an example off the top of my head...\u003C/p\u003E\n"},{"CreatedByName":"EndlessWaves","CreatedById":41302,"CreatedDateTime":"2013-04-24T21:59:27Z","Content":"\n\u003Cp\u003EThe game\u0027s list of existing vessels (used for the tracking station, map screen etc.) can be gotten using FlightGlobals.Vessels\u003C/p\u003E\u003Cp\u003EPartModule extends MonoBehaviour so Public void Update() is always run and public void FixedUpdate() is always run when in physics range regardless of active vessel status (not to be confused with OnUpdate and OnFixedUpdate, which do have some active vessel limitations I believe).\u003C/p\u003E\u003Cp\u003EObviously if you\u0027re trying to query other people\u0027s or stock partmodules then there may be additional checks to make sure they\u0027re running on the active vessel so there\u0027s no guarantee you can ever get that to work, but certainly for custom PartModules it shouldn\u0027t be a problem. \u003C/p\u003E\u003Cp\u003EAlthough obviously if you can get the results from saved information then that\u0027s often a better bet than running stuff in the background.\u003C/p\u003E\n"},{"CreatedByName":"OrbitusII","CreatedById":57305,"CreatedDateTime":"2013-04-25T23:09:33Z","Content":"\n\u003Cp\u003EWhat\u0027s been said so far is correct, Update and FixedUpdate run regardless of what vessel is active, assuming things are within the loading range. You could create a plugin that makes sure the vessel that things are being calculated and enacted for is the active one, but it would kind of defeat the purpose of having multiple things within the loading range work all at once. I haven\u0027t messed around with writing plugins in KSP but there is indeed a list of existing vessels, which is necessary for things like persistence.\u003C/p\u003E\n"}]}