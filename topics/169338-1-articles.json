{"TopicId":169338,"ForumId":69,"TopicTitle":"Another weird Thrustmaster FCS HOTAS/T.A.R.G.E.T. software bug - 1.3.1 x64","CreatedByName":"BlueRaven","CreatedById":184211,"CreatedDateTime":"2018-01-07T04:54:28Z","PageNum":1,"Articles":[{"CreatedByName":"BlueRaven","CreatedById":184211,"CreatedDateTime":"2018-01-07T04:54:28Z","Content":"\n\u003Cp style=\u0022text-align:left;\u0022\u003E\nHi all,\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\nI\u0027m fairly new to KSP (couple of hundred hours into career mode) and playing a pretty fresh installation of 64-bit 1.3.1 on Windows 10.\u00A0 Good old X58 platform with a Xeon X5660, 4GB GTX970 and 12GB of DDR3.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\nI\u0027m aware that Unity has some known issues regarding joystick input handling, and I\u0027ve searched/scrolled through this support forum to read the previously posted questions re. multi-input, HOTAS throttles and Thrustmaster peripherals.\u003Cbr\u003E\nBut I haven\u0027t seen my specific issue previously reported, so I thought I\u0027d post a thread... doubting it will be a super-quick-fix kind of issue, but I may as well document it eh? So, prepare yourselves... wall-o-text post incoming... \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u003Cstrong\u003ESITUATION\u003C/strong\u003E: I got all inspired by Cupcake\u0027s videos and bought myself a wee christmas present... Thrustmaster 16000.M FCS flightstick and the TWCS HOTAS throttle to go with it. These units can be used \u0022plug\u0027n\u0027play\u0022 (in which case the game detects them as two separate input devices), or they can use a software app/virtual device driver called \u0022T.A.R.G.E.T.\u0022 which is basically a GUI laid over Thrustmaster\u0027s custom scripting engine. This software allows you to combine multiple physical controllers into one \u0022virtual device\u0022, with customised axis mapping/response curves, button mapping, keystroke generation, mouse pointer control, etc.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u003Cstrong\u003EPROBLEM\u003C/strong\u003E: Now, if I go the plug\u0027n\u0027pray route and don\u0027t use a T.A.R.G.E.T. profile, KSP recognises both devices as separate controllers and I can map the axes with no problems, everything behaves as it should. Except the JoyButton inputs are duplicated for both devices (whether due to limitations of the DirectX API, the Unity engine, or KSP\u0027s input handling code, I\u0027m not completely sure), e.g. the flightstick trigger registers as JoyButton0 in the game but so does the thumb button on the throttle, and this behaviour is the same for all the buttons on both devices. Obviously this makes most of the buttons on one or both devices unusable for specific functions. Some duplication is acceptable, but you really need more than 16 buttons across both devices in order to make the best use of the HOTAS setup.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u003Cstrong\u003EBIGGER PROBLEM\u003C/strong\u003E: \u0022That ain\u0027t no problem...\u0022 says I, \u0022...just create a T.A.R.G.E.T. profile with all the axes and buttons mapped the way I want\u0022. So I did this, and all the button mapping/keystroke generation worked perfectly. Except, as soon as I launch a craft and touch the joystick, all the control surfaces travel to their authority limit and stay there. When I push the joystick to the limit of an axis, the relevant control surface moves through its normal \u0022rest point\u0022 to the other extent of travel, and then back to the first limit again when I release the stick back to centre. If I move the stick to the other limit on the same axis, the control surface in question exhibits the same behaviour. The throttle also seems to set its 100% limit at the middle of the DX_SLIDER axis\u0027 physical travel, and moving the throttle either side of this point causes the in-game throttle to move sharply back to 0%. Reversing the axes, either in the TARGET software, in the KSP input settings, or by changing the \u0022deploy direction\u0022 of a control surface, merely results in the part moving to the opposite extent of travel on launch. All other response curve adjustments, absolute/relative settings, sensitivity and deadzone adjustments in TARGET and in KSP appear to have no effect on this behaviour.\u003Cbr\u003E\u003Cbr\u003E\u003Cstrong\u003EFURTHER BACKGROUND INFO\u003C/strong\u003E: It should be noted that when observing the behaviour of the \u0022Thrustmaster Combined\u0022 virtual device\u0027s axes (either via the Windows properties dialog or via the TARGET software\u0027s built-in \u0022device analyser\u0022 function), all the axes and buttons appear to behave normally, the visual indicators sit at a center rest point (or lower extent of travel in the case of the Throttle/Slider axes) and move to their full extent of travel along with the appropriate physical movements of the controller/s. I\u0027ve also tried previously suggested fixes such as starting the game with the physical throttle set at 50%, and I\u0027ve tried starting the game with the joystick pulled over to the full extent of X/Y travel. No difference to be seen. Furthermore, I\u0027ve tried disabling the TWCS throttle in the combined TARGET profile in case there was some weird axis mapping/config conflict occurring, and the FCS flightstick alone still exhibits the same behaviour on its assigned X/Y/Z/slider axes when being detected by the game as a \u0022Thrustmaster Combined\u0022 device.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u003Cstrong\u003EPOTENTIAL CAUSE\u003C/strong\u003E: So it seems obvious to me that the issue lies with how Unity/KSP interprets the \u0022rest value\u0022 of the virtual device\u0027s axes at startup. It assigns the centre \u0022rest value\u0022 of the joystick axes as being one extent of travel and the axis limit (in either direction) as the other extent. But it\u0027s the opposite with the \u0022virtual\u0022 throttle... the rest point is defined as being halfway along the physical axis (instead of at the lower limit of travel), with movement in either direction dropping the throttle back to 0% (or throwing it up to 100%, if the axis is inverted).\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u003Cstrong\u003EWhen you analyse and think about this behaviour, it seems that Unity/KSP is getting the virtual device\u0027s \u0022joystick\u0022 (self-centering) axes and \u0022slider\u0022 (non-centering) axis behaviour ass-backwards.\u003C/strong\u003E Self-centering axes behave as though the joystick\u0027s center rest position is one extent of travel and the axis limit/s are the other extent; i.e. behaving like a throttle/accelerator pedal. Non-centering axes behave as though the mid-point of travel is the rest position, with movement in either direction throwing the control to its limit; i.e. behaving like a self-centering joystick. But I have no ideas as to why this behaviour is only occurring with the combined \u0022virtual\u0022 device, and not when the controllers are mapped as separate input devices. \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u003Cstrong\u003ECONCLUSION: \u003C/strong\u003ESorry for the long long post, but I\u0027m hoping this report might make possible some kind of fix in a future update, so I can use my AUD$250 HOTAS setup effectively in the game. At the moment I\u0027m stuck using it as 2 separate input devices with severely limited button mapping/control options, which is pretty disappointing. I also suspect that squishing this bug might solve a lot of similar issues that people are having with other HOTAS/multi-input setups, especially where third-party \u0022virtual device driver\u0022 software is involved. However, I also recognise that this is very much an edge-case bug, and probably not worth the dev time/cost to fix.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\nBut maybe the community can come up with its own fix... it\u0027s been done before. \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003Cbr\u003E\nI\u0027ve considered the possibility that this bug may be fixable by digging deeper into Thrustmaster\u0027s scripting engine/language - it\u0027s pretty much syntax-identical to C code - but the fact that Windows reports the virtual device as behaving normally leads me to believe that the issue doesn\u0027t lie with the TARGET profile/script, it\u0027s to do with how Unity/KSP interprets the input/rest position values of the virtual controller\u0027s axes. If I knew Unity at all I\u0027d dig deeper into the game code/mod API to try and fix it myself, but that\u0027s beyond my scope at the moment.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\nFeedback/input from anyone else using the Thrustmaster T.16000M FCS HOTAS setup specifically, or Unity/Mod developers generally, would be appreciated as a worthwhile contribution to this bug report thread. I\u0027ll capture a video of the behaviour and link to it from this post shortly. Logs and other supporting documentation etc. can also be willingly provided upon request.\u003Cbr\u003E\nCheers,\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\nBR\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:left;\u0022\u003E\n\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-01-07T06:11:16Z\u0022 title=\u002201/07/2018 06:11  AM\u0022 data-short=\u00226 yr\u0022\u003EJanuary 7, 2018\u003C/time\u003E by BlueRaven\u003C/strong\u003E\n\u003Cbr\u003EClarification of issue and formatting tidy-up\n\u003C/span\u003E\n"},{"CreatedByName":"bunjatec","CreatedById":175222,"CreatedDateTime":"2018-05-16T17:30:07Z","Content":"\n\u003Cp\u003E\nI managed to get my thrustmaster 16000 working in the end, by not using the trustmaster software and using the axes \u0027vanilla\u0027 just using the basic driver.\n\u003C/p\u003E\n\u003Cp\u003E\nI then mapped the buttons using JoyToKey which interprets the joystick buttons and allows them to be assigned to key-presses.\n\u003C/p\u003E\n\u003Cp\u003E\nWhile it\u0027s not as good as the potential for customisation that TARGET allows, it is at least a usable workaround.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"BlueRaven","CreatedById":184211,"CreatedDateTime":"2018-05-19T07:13:00Z","Content":"\n\u003Cp\u003E\nThanks for the reply mate. I\u0027ve come up with a usable default button setup that\u0027s working okay for now, but I\u0027d really like to be touching the mouse a bit less frequently.\u003Cbr\u003E\nI was unaware of JoyToKey and will check it out, it sounds like a good workaround solution as you said. Cheers.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-05-19T07:17:09Z\u0022 title=\u002205/19/2018 07:17  AM\u0022 data-short=\u00226 yr\u0022\u003EMay 19, 2018\u003C/time\u003E by BlueRaven\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jason Melancon","CreatedById":199485,"CreatedDateTime":"2019-09-04T19:06:19Z","Content":"\n\u003Cp\u003E\nI had a similar issue, and like you, I checked here for a solution before working one out myself. I came up with a way of getting TARGET to work with joystick axes in KSP. You can find the article from my forum profile. I hope it can still be useful to you!\n\u003C/p\u003E\n"}]}