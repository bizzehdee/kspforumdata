{"TopicId":61506,"ForumId":29,"TopicTitle":"Computing the UT at which an altitude is reached","CreatedByName":"Meithan","CreatedById":76123,"CreatedDateTime":"2014-01-29T20:09:59Z","PageNum":1,"Articles":[{"CreatedByName":"Meithan","CreatedById":76123,"CreatedDateTime":"2014-01-29T20:09:59Z","Content":"\n\u003Cp\u003EHi. I\u0027m trying to compute the next UT at which a vessel with a given Orbit will be at some altitude (specifically, I want to find the UT for the next atmospheric contact, assuming the periapsis is within the atmosphere of the primary).\u003C/p\u003E\u003Cp\u003EI\u0027ve been using several methods of the KSP Orbit class but I get unreliable results: sometimes the UT is spot on, sometimes it\u0027s nonsensical, not even close to the actual atmospheric contact.\u003C/p\u003E\u003Cp\u003EThis is an example of what I\u0027ve tried:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EatmoTopR = vessel.mainBody.Radius \u002B vessel.mainBody.maxAtmosphereAltitude;\u003Cbr\u003EcontactUT = orbit.GetUTforTrueAnomaly(orbit.TrueAnomalyAtRadius(atmoTopR),0.0);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI don\u0027t really understand what the second parameter of the GetUTforTrueAnomaly() method of the orbit class is for. It\u0027s a double called \u0022wrapAfterSeconds\u0022. It sounds like it\u0027s used to clamp the resulting UT to a certain maximum value so as to get a result in the current orbital cycle and not far off into the future. However, the UTs I\u0027ve been getting are always within the current orbital cycle, so I\u0027ve simply left its value at zero.\u003C/p\u003E\u003Cp\u003EI\u0027ve checked manually the results of the TrueAnomalyAtRadius() method, and even when the resulting UT is incorrect, the calculated true anomaly \u003Cem\u003Eis\u003C/em\u003E correct. So it seems it\u0027s a problem in the GetUTforTrueAnomaly() method. I understand there is some ambiguity in these matters since orbits are cyclic and have certain symmetries.\u003C/p\u003E\u003Cp\u003EI guess I could compute the UT myself by computing the eccentric and mean anomalies, obtaining a time, and then adjusting that into the smallest value in the future.\u003C/p\u003E\u003Cp\u003EThoughts, anyone?\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-01-30T16:11:25Z","Content":"\n\u003Cp\u003EThe second parameter is the time from which you start your search. Most of the time it will be the current time.\u003C/p\u003E\u003Cp\u003EYou can have a look at how MJ does it too :\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/MuMech/MechJeb2/blob/master/MechJeb2/OrbitExtensions.cs#L463-L473\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/MuMech/MechJeb2/blob/master/MechJeb2/OrbitExtensions.cs#L463-L473\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Meithan","CreatedById":76123,"CreatedDateTime":"2014-01-30T21:13:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EThe second parameter is the time from which you start your search. Most of the time it will be the current time.\u003Cp\u003EYou can have a look at how MJ does it too :\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/MuMech/MechJeb2/blob/master/MechJeb2/OrbitExtensions.cs#L463-L473\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/MuMech/MechJeb2/blob/master/MechJeb2/OrbitExtensions.cs#L463-L473\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for answering. Ah yes, I was concocting a \u0022manual\u0022 solution very similar to what MechJeb does. I see that MJ doesn\u0027t use the GetUTforTrueAnomaly() method from the KSP API, but does the computation using its own functions involving the eccentric anomaly as intermediate step.\u003C/p\u003E\u003Cp\u003EI guess the GetUTforTrueAnomaly() method \u003Cem\u003Eis\u003C/em\u003E bugged somewhat? I\u0027ll try playing around with the wrapAfterSeconds parameter, and see if that fixes it. If not. I think I\u0027ll just do the following, which is similar to what MJ is doing:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[Pseudocode]\u003Cbr\u003E[given a radius r and a minimum UT min_UT, as well as an Orbit instance to extract orbital elements]\u003Cbr\u003E\u003Cbr\u003EE = acos(1/e*(1-r/a))\u003Cbr\u003EMA1 = E - e*sin(E)\u003Cbr\u003EMA2 = 2*pi - MA1  (or MA2 = -MA1, should be equivalent)\u003Cbr\u003En = sqrt(G*M/a^3)\u003Cbr\u003Et1 = (MA1-M0)/n \u002B t0\u003Cbr\u003Et2 = (MA2-M0)/n \u002B t0\u003Cbr\u003Ewhile (t1 \u0026lt; min_UT) {\u003Cbr\u003E  t1 \u002B= P;\u003Cbr\u003E}\u003Cbr\u003Ewhile (t2 \u0026lt; min_UT) {\u003Cbr\u003E  t2 \u002B= P;\u003Cbr\u003E}\u003Cbr\u003Ereturn min(t1,t2)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI haven\u0027t had chance to test it out, but I think it should work. That\u0027s for elliptic orbits, but the computation for hyperbolic ones is similar.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEdit\u003C/strong\u003E: yup, the above definitely works \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. Thanks for the tip in the right direction, though. MJ is an impressive piece of software.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-31T03:43:08Z\u0022 title=\u002201/31/2014 03:43  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 31, 2014\u003C/time\u003E by Meithan\u003C/strong\u003E\n\u003C/span\u003E\n"}]}