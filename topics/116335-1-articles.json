{"TopicId":116335,"ForumId":35,"TopicTitle":"[WEB] Config Tree Parser","CreatedByName":"Grimly","CreatedById":144009,"CreatedDateTime":"2015-07-19T18:35:44Z","PageNum":1,"Articles":[{"CreatedByName":"Grimly","CreatedById":144009,"CreatedDateTime":"2015-07-19T18:35:44Z","Content":"Hello,\n\nThe tool I present here is nothing an average player may be looking for, this is more for tool developpers.\n\nIn order to learn how do parsers work, I made myself a LL(1) parser for KSP config files. The parser has been written in Javascript and so the analysed tree is in JSON.\n\nHere is the application : [https://output.jsbin.com/wudife](https://output.jsbin.com/wudife) ( source : [https://output.jsbin.com/wudife/edit?html,css,js](https://output.jsbin.com/wudife/edit?html,css,js) )\n\nWarning : It\u0027s not pretty and I\u0027m not making it pretty.\n\nDrop a CFG file (or save file as it has the same format) and it will give you back a JSON file.\n\nIf I have to give a licence to my parser, then consider it has the WTFPL ( [http://www.wtfpl.net/txt/copying/](http://www.wtfpl.net/txt/copying/) ).\n\nIf in a console (hit F12 on your browser) you type the following command, you will find all the building blocs I used and maybe understand all about how the parser was made.\n\n    Array.prototype.forEach.call(document.querySelectorAll(\u0027pre, table\u0027), function(p) { p.style.display = \u0027block\u0027 });\n\nYou are free to reuse the javascript parser. I made it easy enough so you just need to build the syntaxical analyzer and make it parse your string :\n\n    tree = CFGAnalyzer().fullParse(content);\n\nThis may help web developpers to build applications around a config or save file with more ease as the parsed object is now accessible.\n\nGrimly"}]}