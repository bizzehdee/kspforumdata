{"TopicId":116335,"ForumId":35,"TopicTitle":"[WEB] Config Tree Parser","CreatedByName":"Grimly","CreatedById":144009,"CreatedDateTime":"2015-07-19T18:35:44Z","PageNum":1,"Articles":[{"CreatedByName":"Grimly","CreatedById":144009,"CreatedDateTime":"2015-07-19T18:35:44Z","Content":"\n\u003Cp\u003EHello,\u003C/p\u003E\u003Cp\u003EThe tool I present here is nothing an average player may be looking for, this is more for tool developpers.\u003C/p\u003E\u003Cp\u003EIn order to learn how do parsers work, I made myself a LL(1) parser for KSP config files. The parser has been written in Javascript and so the analysed tree is in JSON.\u003C/p\u003E\u003Cp\u003EHere is the application : \u003Ca href=\u0022https://output.jsbin.com/wudife\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://output.jsbin.com/wudife\u003C/a\u003E ( source : \u003Ca href=\u0022https://output.jsbin.com/wudife/edit?html,css,js\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://output.jsbin.com/wudife/edit?html,css,js\u003C/a\u003E )\u003C/p\u003E\u003Cp\u003EWarning : It\u0027s not pretty and I\u0027m not making it pretty.\u003C/p\u003E\u003Cp\u003EDrop a CFG file (or save file as it has the same format) and it will give you back a JSON file.\u003C/p\u003E\u003Cp\u003EIf I have to give a licence to my parser, then consider it has the WTFPL ( \u003Ca href=\u0022http://www.wtfpl.net/txt/copying/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.wtfpl.net/txt/copying/\u003C/a\u003E ).\u003C/p\u003E\u003Cp\u003EIf in a console (hit F12 on your browser) you type the following command, you will find all the building blocs I used and maybe understand all about how the parser was made.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EArray.prototype.forEach.call(document.querySelectorAll(\u0027pre, table\u0027), function(p) { p.style.display = \u0027block\u0027 });\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EYou are free to reuse the javascript parser. I made it easy enough so you just need to build the syntaxical analyzer and make it parse your string :\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Etree = CFGAnalyzer().fullParse(content);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis may help web developpers to build applications around a config or save file with more ease as the parsed object is now accessible.\u003C/p\u003E\u003Cp\u003EGrimly\u003C/p\u003E\n"}]}