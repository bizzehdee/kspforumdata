{"TopicId":53622,"ForumId":15,"TopicTitle":"[No Solution] ModuleJettison causes part to \u0026quot;pin\u0026quot; entire rocket to launchpad","CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-11-19T04:35:59Z","PageNum":1,"Articles":[{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-11-19T04:35:59Z","Content":"\n\u003Cp\u003EWhile working on part models for \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/57988-WIP-0-22-x-RealChute-Parachute-Systems-realistic-parachutes-v0-1b-16-11-13\u0022 rel=\u0022external nofollow\u0022\u003Estupid_chris\u0027s RealChutes add-on\u003C/a\u003E, I decided I wanted to be a little clever and use ModuleJettison (in a similar manner to the auto-fairings in the stock engines) to make the top half of my nose cone-case parachute pop off realistically upon parachute deployment - I was dissatisfied with the stock parachute PartModule magically hiding the \u0022cap\u0022 mesh instantly, and making a separate nose cone cover with a built-in decoupler would essentially double the number of parts required per parachute.\u003C/p\u003E\u003Cp\u003EThe problem I\u0027m having is that, although the nose cone cover submesh does pop off upon parachute deployment as intended, when the parachute part is used on an actual rocket, it causes the entire vessel to be pinned in mid-air just above the launchpad, even when the engines have ignited at full thrust and the clamps released; the only way I was able to test the ModuleJettison-RaelChute synchronization was after Hyperediting the vessel away from the launchpad.\u003C/p\u003E\u003Cp\u003EBelow is my CFG:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPART\u003Cbr\u003E{\u003Cbr\u003E    // --- general parameters ---\u003Cbr\u003E    name = RC_main_small\u003Cbr\u003E    module = Part\u003Cbr\u003E    author = stupid_chris, sumghai\u003Cbr\u003E\u003Cbr\u003E    MODEL\u003Cbr\u003E    {\u003Cbr\u003E        model = RealChute/Parts/model_RC_case_nose\u003Cbr\u003E           scale = 0.5, 0.5, 0.5\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    MODEL\u003Cbr\u003E    {\u003Cbr\u003E        model = RealChute/Parts/model_RC_canopy\u003Cbr\u003E           scale = 1, 1, 1\u003Cbr\u003E        position = 0, 0.025, 0\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    // --- asset parameters ---\u003Cbr\u003E    rescaleFactor = 1\u003Cbr\u003E\u003Cbr\u003E    // --- node definitions ---\u003Cbr\u003E    // definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z, size\u003Cbr\u003E    node_stack_bottom = 0.0, -0.023045, 0.0, 0.0, -1.0, 0.0, 0\u003Cbr\u003E    node_attach = 0.0, -0.023045, 0.0, 0.0, 1.0, 0.0\u003Cbr\u003E\u003Cbr\u003E    // --- FX definitions ---\u003Cbr\u003E    sound_parachute_open = rcpredeploy\u003Cbr\u003E    sound_parachute_single = rcdeploy\u003Cbr\u003E\u003Cbr\u003E    // --- editor parameters ---\u003Cbr\u003E    TechRequired = start\u003Cbr\u003E    entryCost = 0\u003Cbr\u003E    cost = 422\u003Cbr\u003E    category = Utility\u003Cbr\u003E    subcategory = 0\u003Cbr\u003E    title = RealChute main chute 0.625m\u003Cbr\u003E    manufacturer = RealChute\u003Cbr\u003E    description = After Bill complained the current parachutes were too rough for him, the engineers came up with this. This one is a small main chute.\u003Cbr\u003E\u003Cbr\u003E    // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003Cbr\u003E    attachRules = 1,0,0,1,0\u003Cbr\u003E\u003Cbr\u003E    // --- standard part parameters ---\u003Cbr\u003E    mass = 0.1\u003Cbr\u003E    dragModelType = default\u003Cbr\u003E    angularDrag = 3\u003Cbr\u003E    crashTolerance = 12\u003Cbr\u003E    maxTemp = 3100\u003Cbr\u003E\u003Cbr\u003E    stageOffset = -1\u003Cbr\u003E\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = RealChuteModule\u003Cbr\u003E        preDeployedDrag = 2\u003Cbr\u003E        deployedDrag = 500\u003Cbr\u003E        stowedDrag = 0.22\u003Cbr\u003E        minDeploymentAlt = 40000\u003Cbr\u003E        deploymentAlt = 700\u003Cbr\u003E        cutAlt = -1\u003Cbr\u003E        preDeploymentSpeed = 2\u003Cbr\u003E        deploymentSpeed = 6\u003Cbr\u003E        cutSpeed = 0.5\u003Cbr\u003E        preDeploymentAnimation = RC_chute_semi_deploy\u003Cbr\u003E        deploymentAnimation = RC_chute_full_deploy\u003Cbr\u003E        parachuteName = RC_canopy\u003Cbr\u003E        capName = chute_bundle\u003Cbr\u003E        spareChutes = 5\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = ModuleJettison\u003Cbr\u003E        jettisonName = cone    \u003Cbr\u003E        bottomNodeName = bottom\u003Cbr\u003E        isFairing = false\u003Cbr\u003E        jettisonedObjectMass = 0.025\u003Cbr\u003E        jettisonForce = 5\u003Cbr\u003E        jettisonDirection = 0 0 1\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESome notes:\u003C/p\u003E\u003Cp\u003E - \u003Cstrong\u003ERC_chute_semi_deploy \u003C/strong\u003Eand \u003Cstrong\u003ERC_chute_full_deploy\u003C/strong\u003E are parachute deployment animations defined in \u003Cstrong\u003Emodel_RC_canopy.mu\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E - \u003Cstrong\u003ERC_canopy \u003C/strong\u003Eis the name of the parachute canopy mesh itself, again defined in \u003Cstrong\u003Emodel_RC_canopy.mu\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E - chute_bundle \u003C/strong\u003Eis a mesh that depicts a packed-up parachute bag with straps, defined in \u003Cstrong\u003Emodel_RC_case_nose\u003C/strong\u003E\u003Cstrong\u003E.mu\u003C/strong\u003E; as part of the parachute deployment, it\u0027s perfectly reasonable for the bundled parachute to magically disappear\u003C/p\u003E\u003Cp\u003E - \u003Cstrong\u003Econe\u003C/strong\u003E is a mesh that depicts the jettisonable upper half of the nose cone case, again defined in \u003Cstrong\u003Emodel_RC_case_nose\u003C/strong\u003E\u003Cstrong\u003E.mu\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EIf you\u0027re feeling adventurous, you can \u003Ca href=\u0022https://www.dropbox.com/s/wmmupyp7zq854zu/ksp_realchute_parts_dev_19_nov_2013.zip\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003Etry out my WIP part\u003C/strong\u003E\u003C/a\u003E and see the problem for yourself - needless to say, you need to first download the RealChutes plugin.\u003C/p\u003E\u003Cp\u003EAny tips and pointers would be greatly appreciated.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-19T05:56:53Z\u0022 title=\u002211/19/2013 05:56  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 19, 2013\u003C/time\u003E by sumghai\u003C/strong\u003E\n\u003Cbr\u003EChanged title to denote lack of solution\n\u003C/span\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2013-11-19T04:52:10Z","Content":"\n\u003Cp\u003EEither I am forgetting how Modulejettison works (its been a while since I messed with it outside of making engine fairings) or I am missing something - what is prompting \u0027cone\u0027 to be released? Isn\u0027t the jettison module based around breaking that bottom node connection and specifying which object stays with the lower stage?\u003C/p\u003E\n"},{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-11-19T04:59:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiberion\u0022 data-cite=\u0022Tiberion\u0022\u003E\u003Cdiv\u003EEither I am forgetting how Modulejettison works (its been a while since I messed with it outside of making engine fairings) or I am missing something - what is prompting \u0027cone\u0027 to be released? Isn\u0027t the jettison module based around breaking that bottom node connection and specifying which object stays with the lower stage?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI believe that was its primary, intended purpose and mode of operation.\u003C/p\u003E\u003Cp\u003EThat being said, based on experimentation with stock engines:\u003C/p\u003E\u003Cp\u003E - \u003Cstrong\u003EisFairing = True\u003C/strong\u003E in most stock engines causes the fairing to stay with the lower, jettisoned stage (as you\u0027ve described)\u003C/p\u003E\u003Cp\u003E - \u003Cstrong\u003EisFairing = False\u003C/strong\u003E in stock nuclear engines causes the fairing to eject sideways indepedently from the lower jettisoned stage\u003C/p\u003E\u003Cp\u003EI suspect what\u0027s happening is that ModuleJettison expects that bottom node to be broken, but said bottom node is also where the parachute itself attaches to the rest of the vessel. I\u0027ve tried changing some of the node names / positions around, but that either causes the entire ModuleJettison to fail to load, or the \u0022stuck rocket\u0022 scenario I initially described.\u003C/p\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2013-11-19T05:30:25Z","Content":"\n\u003Cp\u003EYeah that is what I remember.\u003C/p\u003E\u003Cp\u003ESo the problem is, nothing is breaking the node connection that the jettison module it is looking at, so its never releasing.\u003C/p\u003E\u003Cp\u003EConnecting to \u0022bottom\u0022 is what causes the \u0027cone\u0027 to appear at all, and breaking that node would of course disconnect the chute from your pod or whatever. You could add a top node and make the jettison module use it, but that requires something be attached to the top, so stock stack-less chutes or radial chutes won\u0027t work.\u003C/p\u003E\u003Cp\u003EYou could visually make it work by making everything BUT the cone listed as the jettison mesh (by using a container object in Unity, and having everything but the nose cone assigned as children) then add a decoupler module and assign it to the bottom node. Then when you decouple the bottom node (and activate the chute since they\u0027ll be staged as a single entry) the container object should stay attached to what was on the bottom node (your rocket) and the cone should be free.\u003C/p\u003E\u003Cp\u003EI don\u0027t THINK the chute will function though, since the decoupling will jettison the part logic of the parachute module as well. You might set it as ActivateEvenIfDisconnection = True and give it a try though.\u003C/p\u003E\u003Cp\u003EPtobably going to be way better for Chris to implement the jettison module functions into his plugin.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-19T05:32:30Z\u0022 title=\u002211/19/2013 05:32  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 19, 2013\u003C/time\u003E by Tiberion\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sumghai","CreatedById":66272,"CreatedDateTime":"2013-11-19T05:56:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiberion\u0022 data-cite=\u0022Tiberion\u0022\u003E\u003Cdiv\u003EPtobably going to be way better for Chris to implement the jettison module functions into his plugin.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve spoken to Chris, and we\u0027ve decided to settle with the current \u0022vanishing\u0022 cover, at least until he has time to consider a custom variant of ModuleJettison.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-19T06:04:01Z\u0022 title=\u002211/19/2013 06:04  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 19, 2013\u003C/time\u003E by sumghai\u003C/strong\u003E\n\u003C/span\u003E\n"}]}