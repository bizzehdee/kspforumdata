{"TopicId":118594,"ForumId":18,"TopicTitle":"Which code language should I learn?","CreatedByName":"mrmcp1","CreatedById":79657,"CreatedDateTime":"2015-08-16T10:36:23Z","PageNum":1,"Articles":[{"CreatedByName":"mrmcp1","CreatedById":79657,"CreatedDateTime":"2015-08-16T10:36:23Z","Content":"\n\u003Cp\u003EI have recently become interested in learning to code but I have no idea of which language I should learn. So I thought maybe I should ask which I should learn.\u003C/p\u003E\u003Cp\u003EIf it helps I am interested in learning to use and program an arduino board.\u003C/p\u003E\u003Cp\u003ESorry if this question is a bit vague.\u003C/p\u003E\n"},{"CreatedByName":"Vaporo","CreatedById":110800,"CreatedDateTime":"2015-08-16T11:36:29Z","Content":"\n\u003Cp\u003EDepends on what you want to do with that language. If you want to script Excel, learn Visual Basic. If you want to write drivers, learn something like C.\u003C/p\u003E\u003Cp\u003EI would learn C or C\u002B\u002B. They are difficult languages to learn, especially as a beginning language, but a large number of languages borrow syntax and concepts from them, which opens the gate to easily learning a number of other languages. Of the two, I would try C\u002B\u002B as it is an \u0022expansion\u0022 of C. i.e. anything that C can do, C\u002B\u002B can do exactly the same but with classes.\u003C/p\u003E\u003Cp\u003EIf you want to start slower, though, try something like Visual Basic. It\u0027s used for scripting Office applications, and the editor is available with any copy of Microsoft Office. It\u0027s a simple enough language that includes a large number of major concepts used in programming with miles of documentation around the internet. It\u0027s also JIT (Just In Time) compiled, which means that you can run through it line by line as opposed to all at once.\u003C/p\u003E\u003Cp\u003EThough, if you\u0027re looking to program an Arduino, they appear to have their own IDE (Integrated Developer Envirnoment. The program you use to write programs): \u003Ca href=\u0022https://www.arduino.cc/en/Main/Software\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.arduino.cc/en/Main/Software\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo, if that\u0027s your only goal, pick a language supported by the IDE (which may be a language made specifically for programming Arduino).\u003C/p\u003E\n"},{"CreatedByName":"Pixel of Life","CreatedById":45646,"CreatedDateTime":"2015-08-16T12:09:41Z","Content":"\n\u003Cp\u003EJava or C#. Both are easy to learn, and since they\u0027re so similar, knowing one of them makes learning the other one a breeze. As for the Arduino - I really wouldn\u0027t recommend using one. The Arduino language is VERY limited and lacks many of the basic functions you can find on other programming languages so it\u0027s only good for very simple things.\u003C/p\u003E\n"},{"CreatedByName":"ComradeWolfe","CreatedById":142254,"CreatedDateTime":"2015-08-16T13:37:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022CaptainKorhonen\u0022 data-cite=\u0022CaptainKorhonen\u0022\u003E\u003Cdiv\u003EJava or C#. Both are easy to learn, and since they\u0027re so similar, knowing one of them makes learning the other one a breeze. As for the Arduino - I really wouldn\u0027t recommend using one. The Arduino language is VERY limited and lacks many of the basic functions you can find on other programming languages so it\u0027s only good for very simple things.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d argue that for someone with no experience, Arduino\u0027s flavor of C is pretty good. It\u0027s simplified enough to make it easy and the majority of materials on learning Arduino are very good at holding a beginner\u0027s hand... Once you get the basics, it\u0027s close enough to \u0022real\u0022 language for an easy jump if you\u0027re so inclined.\u003C/p\u003E\u003Cp\u003EBtw, if going Arduino do yourself a favor and buy a couple of project books. Online tutorials are nice, but books tend to give you a more cohesive A \u0026gt; B \u0026gt; C \u0026gt; D lesson plan which you can supplement with internet later.\u003C/p\u003E\n"},{"CreatedByName":"cantab","CreatedById":104935,"CreatedDateTime":"2015-08-16T13:41:54Z","Content":"\n\u003Cp\u003ELearn the language you need for what you want to do. For Arduino that\u0027s C\u002B\u002B or C. I\u0027d go with C\u002B\u002B because I think you\u0027re better of learning an object-oriented language from the start. I grew up with procedural languages like Basic and have really struggled to understand OO.\u003C/p\u003E\n"},{"CreatedByName":"mrmcp1","CreatedById":79657,"CreatedDateTime":"2015-08-16T15:12:28Z","Content":"\n\u003Cp\u003EThanks for the advice, I think I may look into learning C\u002B\u002B.\u003C/p\u003E\n"},{"CreatedByName":"SAI Peregrinus","CreatedById":125558,"CreatedDateTime":"2015-08-16T15:49:08Z","Content":"\n\u003Cp\u003ELearn (at least) 3: C\u002B\u002B/C#/Java for an Object Oriented language, C for a procedural language (but more to understand memory management), F#/Haskell for a functional language. Learning ASM for some microcontroller is a good idea as well, the Atmel AVR instruction set is that used for the Arudino.\u003C/p\u003E\u003Cp\u003EOO languages are popular, and generally pretty good. They solve lots of practical problems.\u003C/p\u003E\u003Cp\u003EC is important to understand memory management. That\u0027s VERY important for good design (especially security), even when you\u0027ve got a garbage collected language. It\u0027s also good to know because just about everything can call C and be called by C, so if you want to write programs that use different languages you\u0027ll use C as a shim. Assembly fits in here as well, for just about the same reasons. It\u0027s also useful to know for debugging and optimization, and if you\u0027re doing things with microcontrollers it\u0027s much more useful. \u003C/p\u003E\u003Cp\u003EFunctional languages (especially Haskell) are good for understanding the theory of computing. So if you want to learn computer science, learn one of them. \u003C/p\u003E\u003Cp\u003ERust/Scala/Erlang and other multi-paradigm languages are nice, but it\u0027s better to stick to a single core idea (OO, Procedural, Functional, etc) at a time when first learning.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2015-08-16T16:59:10Z","Content":"\n\u003Cp\u003Ec\u002B\u002B seems to be the most versatile. its also good to know some c. i also like lua and think it is highly underrated.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022CaptainKorhonen\u0022 data-cite=\u0022CaptainKorhonen\u0022\u003E\u003Cdiv\u003EJava or C#. Both are easy to learn, and since they\u0027re so similar, knowing one of them makes learning the other one a breeze. As for the Arduino - I really wouldn\u0027t recommend using one. The Arduino language is VERY limited and lacks many of the basic functions you can find on other programming languages so it\u0027s only good for very simple things.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u0022arduino language\u0022 is really just c\u002B\u002B with a couple of (sometimes annoying) transformations happening behind the scences. in many cases you can take the same arduino board and get a copy of avrstudio and program it straight c/\u002B\u002B without the arduino baggage.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-16T17:03:15Z\u0022 title=\u002208/16/2015 05:03  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 16, 2015\u003C/time\u003E by Nuke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"jmiki8","CreatedById":94688,"CreatedDateTime":"2015-08-16T19:36:05Z","Content":"\n\u003Cp\u003EI think C (and C#) is a versatile yet (more-or-less) easy language to learn. I started out with Pascal then Delphi, and after that I moved to C and C# (Btw, I\u0027m not a programmer).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-16T19:41:40Z\u0022 title=\u002208/16/2015 07:41  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 16, 2015\u003C/time\u003E by jmiki8\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Prime flux","CreatedById":57347,"CreatedDateTime":"2015-08-16T19:50:00Z","Content":"\n\u003Cp\u003Etbh, I think it is more important to learn the concepts of programming rather then just a language. When you have grasped the concept it is not so difficult to change programing language, it is mostly diffrent syntax. The way you need to think and how you approach the problem will be very similar. I would say C# or Java as a first language as they have a quick and easy way to create a graphic user interface.\u003C/p\u003E\n"},{"CreatedByName":"Norpo","CreatedById":113342,"CreatedDateTime":"2015-08-16T21:42:10Z","Content":"\n\u003Cp\u003E\u003Cem\u003E-warning, this post contains big words, but the point is clear, I swear!-\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EC\u003C/em\u003E, or \u003Cem\u003EPython\u003C/em\u003E is where I would start for programming in general, but for eventually learning to use Arduinos specifically I might especially recommend C. (both are strictly procedurally driven if I recall, but Python is object-oriented, i.e different ways of doing the same thing)\u003C/p\u003E\u003Cp\u003EPython is probably the simplest, but it neglects some important programming concepts (mostly in object-oriented programming, \u003Cem\u003Eencapsulation\u003C/em\u003E, for example), but you can literally start programming Python as soon as you download a single file, whereas with C you may have to figure out how to use your \u003Cem\u003EIDE\u003C/em\u003E (like notepad, but fancier) (if applicable), or the proper command line syntax to compile \u003Cem\u003E.c \u003C/em\u003E(C language file extension) files. Once you\u0027ve figured that out though, it\u0027s not a huge problem. Just a bit more of a barrier to actually starting to type code.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EA quick pros and cons run down:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EC:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EPros: Similar to the Arduino language, very powerful\u003C/p\u003E\u003Cp\u003ECons: somewhat complicated, low-level so some concepts (like pointers) may be confusing\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPython:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EPros: Simple to download/use, more and more people are using it as their first programming language, simpler workflow (no compiling)\u003C/p\u003E\u003Cp\u003ECons: some things may be harder to do in Python than C, a bit different than most modern programming languages (whitespace indentation, no \u0022private\u0022 or \u0022public\u0022 variables, no explicit typing of variables, though these all do make the programming language easier to use)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E \u003C/p\u003E\u003Cp\u003EAnd I would never,\u003Cem\u003E ever\u003C/em\u003E describe C\u002B\u002B as \u0022C with classes\u0022, while most C code will run in C\u002B\u002B, it\u0027d be not\u003Cem\u003E idiomatic\u003C/em\u003E at all, and half of programming is knowing the proper idiomatic way to do things,\u003C/p\u003E\u003Cp\u003Eprint(\u002210\u0022) is nice, \u003C/p\u003E\u003Cp\u003E-\u003C/p\u003E\u003Cp\u003Ex = (((3 * 3) \u002B 1) / 2) * 5 \u003C/p\u003E\u003Cp\u003Eprint(x) \u003C/p\u003E\u003Cp\u003Eprobably isn\u0027t.\u003C/p\u003E\u003Cp\u003EBut now i\u0027m starting to sound like a crazy person, so i\u0027ll stop there.\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EQuick notes on C\u002B\u002B, C#, Java, and other languages:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EC\u002B\u002B\u003C/strong\u003E is nice, but complicated. Multiple ways of doing things may cause headaches when you try to read code that has \u003Cem\u003E\u003Cspan style=\u0022color:#696969;\u0022\u003Eusing namespace std \u003C/span\u003E\u003C/em\u003Eand you can\u0027t figure out why it\u0027s not working.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EC#\u003C/strong\u003E and \u003Cstrong\u003EJava\u003C/strong\u003E are very similar, so i\u0027ll approach them together, they\u0027re very strongly typed, meaning you\u0027ll be clarifying things to the compiler very often. Once you understand what all the terms mean though, they\u0027re very powerful (and readable!), where in python you\u0027d say \u0022x = 5\u0022, in C# you\u0027ll be saying \u0022public int x = 5\u0022\u003C/p\u003E\u003Cp\u003EExtra resources specifically concerning C vs Python:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://blog.udemy.com/python-vs-c/\u0022 rel=\u0022external nofollow\u0022\u003EPython vs C: A Beginners Guide\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.quora.com/As-a-beginner-should-I-learn-C-or-Python-as-my-first-programming-language\u0022 rel=\u0022external nofollow\u0022\u003EAs a beginner, should I learn C or Python as my first programming language?\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://stackoverflow.com/questions/2399471/is-it-a-good-idea-for-me-to-learn-python-before-c-or-some-other-compiler-languag\u0022 rel=\u0022external nofollow\u0022\u003EIs it a good idea to learn Python before C or some other compiler language?\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAnd whichever programming language you ultimately choose, remember this: whenever you get an error you don\u0027t/can\u0027t understand, always enter it into Google. Chances are, someone\u0027s had a \u0022ClassError: \u0027foo\u0027 doesn\u0027t have permission to access \u0027bar\u0027 from parent class\u0022 before.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E(personally I started with Python, then moved to C#, then to C and C\u002B\u002B (roughly around the same time))\u003C/em\u003E\u003C/p\u003E\n"},{"CreatedByName":"Starwhip","CreatedById":83990,"CreatedDateTime":"2015-08-16T22:19:16Z","Content":"\n\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/SfwhyBN.jpg\u0022 alt=\u0022SfwhyBN.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EI would suggest Python, simply because it\u0027s one of the easiest to learn. And, once you\u0027ve got one language under your belt, you can very quickly switch to another, simply by learning the syntax. Learning \u0022how\u0022 to program is more important than learning any one language.\u003C/p\u003E\n"},{"CreatedByName":"TheCanadianVendingMachine","CreatedById":59684,"CreatedDateTime":"2015-08-16T23:02:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Starwhip\u0022 data-cite=\u0022Starwhip\u0022\u003E\u003Cdiv\u003E\u003Ca href=\u0022http://i.imgur.com/SfwhyBN.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/SfwhyBN.jpg\u003C/a\u003E\u003Cp\u003EI would suggest Python, simply because it\u0027s one of the easiest to learn. And, once you\u0027ve got one language under your belt, you can very quickly switch to another, simply by learning the syntax. Learning \u0022how\u0022 to program is more important than learning any one language.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFor the first picture:\u003C/p\u003E\u003Cp\u003Eerror C2065: \u0027cout\u0027 : undeclared identifier\u003C/p\u003E\u003Cp\u003ESilly picture maker. Forgot the std namespace\u003C/p\u003E\n"},{"CreatedByName":"Godot","CreatedById":16902,"CreatedDateTime":"2015-08-16T23:14:26Z","Content":"\n\u003Cp\u003EI agree with Prime flux ...\u003C/p\u003E\u003Cp\u003EIMHO it is most important for a beginner, to learfn the concepts of objectoriented programming.\u003C/p\u003E\u003Cp\u003ETherefore IMHO it would be best to learn Java as a first language ... more beginner friendly than C\u002B\u002B.\u003C/p\u003E\u003Cp\u003EC\u002B\u002B has a few topics ... for example pointers *wink* ... which may be easier to understand by people who already have ex\u00C3\u0192\u00C2\u00BCerience with another OO programming language\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2015-08-17T00:11:40Z","Content":"\n\u003Cp\u003EYou should start with either COBOL or INTERCAL.\u003C/p\u003E\u003Cp\u003EOnce you have learned either one of those to a sufficient degree, switch to C. Once you switch, you\u0027ll be so happy to never touch the original language that programming will seem so easy.\u003C/p\u003E\n"}]}