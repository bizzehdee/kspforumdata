{"TopicId":125836,"ForumId":69,"TopicTitle":"NullRef Bug in the contract system","CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-11-18T18:14:29Z","PageNum":1,"Articles":[{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-11-18T18:14:29Z","Content":"\nThis was found with a modded client (when deleting modded parts) but I\u0026#39;m pretty sure it\u0026#39;s a bug in the stock contract system.\u003Cbr\u003E\n\u003Cbr\u003E\nSteps to reproduce:\u003Cbr\u003E\nCheck the contracts offered list for a part test.\u003Cbr\u003E\nRemove that parts files from GameData.\u003Cbr\u003E\nRestart the game and you get a bunch of null reference errors and cannot click anything.\u003Cbr\u003E\n\u003Cbr\u003E\n[code](Filename: C:/buildslave/unity/build/artifacts/StandalonePlayerGenerated/UnityEngineDebug.cpp Line: 56)\u003Cbr\u003E\n\u003Cbr\u003E\nNullReferenceException: Object reference not set to an instance of an object\u003Cbr\u003E\nat Contracts.Templates.PartTest.OnSave (.ConfigNode node) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat Contracts.Contract.Save (.ConfigNode node) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat Contracts.ContractSystem.OnSave (.ConfigNode gameNode) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat ScenarioModule.Save (.ConfigNode node) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat ProtoScenarioModule..ctor (.ScenarioModule module) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat ScenarioRunner.GetUpdatedProtoModules () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat Game.Updated () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat GamePersistence.SaveGame (System.String saveFileName, System.String saveFolder, SaveMode saveMode) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat RDSceneSpawner.onRDDespawn () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat EventVoid.Fire () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat RDController.CloseButton (.POINTER_INFO\u0026 ptr) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat (wrapper delegate-invoke) EZInputDelegate:invoke_void__this___POINTER_INFO\u0026 (POINTER_INFO\u0026)\u003Cbr\u003E\n\u003Cbr\u003E\nat UIButton.OnInput (.POINTER_INFO\u0026 ptr) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat AutoSpriteControlBase.OnInput (POINTER_INFO ptr) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat UIManager.DispatchHelper (.POINTER_INFO\u0026 curPtr, Int32 camIndex) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat UIManager.DispatchInput () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat UIManager.Update () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat UIManager.DidAnyPointerHitUI () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat SpaceCenterCamera2.InputCamera () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\nat SpaceCenterCamera2.Update () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E\n\u003Cbr\u003E\n(Filename: Line: -1)[/code]\n"},{"CreatedByName":"Arsonide","CreatedById":32604,"CreatedDateTime":"2015-11-18T18:57:56Z","Content":"\nYeah that\u0026#39;d do the trick, as references to the part are saved. You\u0026#39;ll need to remove contracts that reference the part from the save file manually, but I will look at this in the next version.\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2015-11-18T20:37:43Z","Content":"\nYep, I restored the parts, declined the contracts and removed them again and everything was fine. But most of the rest of the game knows how to cope (more or less, even if it means deleting craft) with missing parts without breaking all functionality.\u003Cbr\u003E\n\u003Cbr\u003E\nThanks for taking the time.\n"}]}