{"TopicId":125511,"ForumId":69,"TopicTitle":"Fairings still bork stowed engines","CreatedByName":"Scarecrow88","CreatedById":66043,"CreatedDateTime":"2015-11-15T10:46:14Z","PageNum":1,"Articles":[{"CreatedByName":"Scarecrow88","CreatedById":66043,"CreatedDateTime":"2015-11-15T10:46:14Z","Content":"\n\u003Cp\u003EI was hoping with this release that the problem that generates the message \u0027cannot activate engine while stowed\u0027 would have been fixed.\u003C/p\u003E\u003Cp\u003ESeveral of my designs use a fairing rather than an engine shroud to cover the engine of the stage above. The idea is that you stage as normal and extract the engine from the fairing, rather than activate the fairing thus jettisoning fairing bits all over the place, which is kind of messy. Unfortunately, if you stage before activating the fairing the game thinks the engine is still inside the fairing and won\u0027t let you activate it.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure if this is a bug, or a game design, as I can see the logic of not wanting to activate the engine whilst it is still genuinely inside the fairing, but surely this comes down to staging management. It\u0027s no different to accidentally leaving the parachutes in the same stage as your engine in a single stage design, so that when you stage to take off, the chutes deploy as well, and everything goes to worms. The game doesn\u0027t stop the engines firing in that particular scenario, so why are they prevented from firing if they happen to be ensconced inside a fairing? Proper staging would prevent a disaster, but would also allow you to build designs that don\u0027t require the fairing to actually be activated.\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2015-11-15T13:46:02Z","Content":"\n\u003Cp\u003EThe fairings and cargobays check occlusion when their state or the state of other cargobays and fairings that make up a connected space changes between \u0022open\u0022 and \u0022closed\u0022, such as when opening a bay, staging a decoupler covering the end or staging the fairing, they also check on load.\u003C/p\u003E\u003Cp\u003EAn unstaged fairing counts as closed, sorry.\u003C/p\u003E\n"},{"CreatedByName":"Scarecrow88","CreatedById":66043,"CreatedDateTime":"2015-11-15T19:38:00Z","Content":"\n\u003Cp\u003EI can understand that, to a point, but why would the fairing state affect an engine if the stage that the fairing is attached to has just been jettisoned, and the engine is attached to the stage that is still in flight?\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2015-11-15T20:05:51Z","Content":"\n\u003Cp\u003EBecause the state is set ahead of time, and unless the fairing is staged there is no update, so the engine and any other occluded part that was in the unstaged fairing remain occluded until physics reload and a new occlusion check is made.\u003C/p\u003E\u003Cp\u003EYou\u0027re supposed to stage the fairing, it\u0027s by design, and I know it\u0027s disliked by many players.\u003C/p\u003E\u003Cp\u003EBut in all this time no one has put this on the Squad bug tracker, they instead complain about it here on the forum or Reddit or wherever, but if you want this changed it needs to be on the tracker, that\u0027s how the developers work.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://bugs.kerbalspaceprogram.com/issues/5955\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline\u0022\u003ESo I took the liberty.\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EFeel free to vote it up so the devs can see it\u0027s something the players want.\u003C/p\u003E\n"},{"CreatedByName":"Scarecrow88","CreatedById":66043,"CreatedDateTime":"2015-11-15T20:43:34Z","Content":"\n\u003Cp\u003EI didn\u0027t even know the bug tracker existed, and I\u0027ve been playing KSP for ages now. How daft do I feel!\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2015-12-04T14:34:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222280181\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221447617951\u0022 data-ipsquote-userid=\u002216426\u0022 data-ipsquote-username=\u0022sal_vager\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 15-11-2015 21:05:51, sal_vager said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://bugs.kerbalspaceprogram.com/issues/5955\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003ESo I took the liberty.\u003C/span\u003E\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFeel free to vote it up so the devs can see it\u0027s something the players want.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHmmm ... just created an account there but not sure how to upvote it. I did click a star though.\n\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2015-12-04T15:06:53Z","Content":"\n\u003Cp\u003E\nWhen in a report you should see a \u0022Votes\u0022 entry with a green and red arrow, just above the description.\n\u003C/p\u003E\n\u003Cp\u003E\nCurrently it\u0027s on 4 upvotes.\n\u003C/p\u003E\n"},{"CreatedByName":"Majorjim!","CreatedById":61954,"CreatedDateTime":"2015-12-04T15:35:38Z","Content":"\n\u003Cp\u003E\nHang on.. This is a very well known bug. We know, Squad know we have all known this since the fairings where made.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 What gives? I was also under the impression that Squad fixed this in the last patch.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2015-12-04T15:47:02Z","Content":"\n\u003Cp\u003E\nThey did fix some occlusion issues, but there\u0027s still no fix for interstage occlusion issues. The problem turns out to be annoying complex because of how events are currently triggered. The issue being that when you separate an interstage fairing, there\u0027s no Event that gets fired. And even if there was an event that was fired, the engine would still be \u0022in\u0022 the fairing for the next couple frames, which would still result in a hit when running the test to see what\u0027s inside the fairing.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve tried to fix this in my BugFixes, but since there\u0027s no event trigger, I think this one needs to be fixed inside the CargoBay module.\n\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2015-12-04T16:22:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222280181\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221447617951\u0022 data-ipsquote-userid=\u002216426\u0022 data-ipsquote-username=\u0022sal_vager\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 15/11/2015, 20:05:51, sal_vager said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents ipsClearfix\u0022\u003E\n\u003Cp\u003E\nBecause the state is set ahead of time, and unless the fairing is staged there is no update, so the engine and any other occluded part that was in the unstaged fairing remain occluded until physics reload and a new occlusion check is made.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nJust like Claw and I mentioned, there is no update until the fairing is staged, a lot of work was done to make sure that parts in a cargobay or a fairing do not remain occluded when the bay or fairing is opened, but the bay or fairing has to be opened.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd for fairings that means jettisoning the fairing via staging or the action menu, unfortunately as Claw says that is the \u003Cem\u003Eonly\u003C/em\u003E event that fairings are checking for.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you want this changed help me raise the votes on the tracker issue above.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-12-04T19:34:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222307963\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221449244022\u0022 data-ipsquote-userid=\u0022100668\u0022 data-ipsquote-username=\u0022Claw\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Claw said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe issue being that when you separate an interstage fairing, there\u0027s no Event that gets fired. And even if there was an event that was fired, the engine would still be \u0022in\u0022 the fairing for the next couple frames, which would still result in a hit when running the test to see what\u0027s inside the fairing\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI haven\u0027t come across this issue much myself (playtime :() but if the reference craft posted by sal_vager is representative of the problem, why not use OnVesselCreate? The problem with that craft isn\u0027t that the bay isn\u0027t updated but rather that at the moment the bay is decoupled from the rest of the ship, it captures (and \u003Cu\u003Eshields\u003C/u\u003E) Parts belonging to the original ship and then doesn\u0027t ever check if they\u0027ve moved out of range. Since its own update is now based on a separate ship (probably some debris), those incorrectly shielded Parts are now \u0022stuck\u0022 unless that separate ship receives another event that triggers an update...\n\u003C/p\u003E\n\u003Cp\u003E\nOne quick bandaid is to prevent bays from shielding parts not belonging to their own vessels. A cleverer solution might be to keep an eye on the distance between a Part and the bay that shields it whenever they belong to different Vessels, and then remove the shield if they exceed a certain distance.\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s my proof of concept:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint\u0022\u003E\n[KSPAddon(KSPAddon.Startup.Flight, false)]\npublic class CargoBayStowageBandaid : MonoBehaviour\n{\n    private void Start()\n    {\n        GameEvents.onVesselCreate.Add(OnVesselCreated);\n    }\n\n\n    private void OnDestroy()\n    {\n        GameEvents.onVesselCreate.Remove(OnVesselCreated);\n    }\n\n\n    private void OnVesselCreated(Vessel data)\n    {\n        if (!data.loaded) return;\n\n        UpdateFairingShieldsForLoadedVessels();\n    }\n\n\n    private void UpdateFairingShieldsForLoadedVessels()\n    {\n        foreach (var v in FlightGlobals.Vessels\n            .Where(v =\u0026gt; v.loaded \u0026amp;\u0026amp; !v.packed)\n            .Where(v =\u0026gt; v.rootPart != null))\n                        UpdateFairingShields(v);\n    }\n\n\n    private void UpdateFairingShields(Vessel vessel)\n    {\n        var fairingModules = vessel.FindPartModulesImplementing\u0026lt;ModuleProceduralFairing\u0026gt;()\n            .Where(fm =\u0026gt; fm.gameObject.GetComponent\u0026lt;ModuleCargoBay\u0026gt;() != null)\n            .ToList();\n\n        if (!fairingModules.Any())\n            return;\n\n        fairingModules.ForEach(fm =\u0026gt;\n        {\n            var bay = fm.gameObject.GetComponent\u0026lt;ModuleCargoBay\u0026gt;();\n\n            var nearby = FindNearbyParts(bay).ToList();\n\n            if (!nearby.Any())\n                return;\n\n            var partsWeShouldNotEnclose = FindPartsBelongingToOtherVessel(vessel, nearby);\n\n            foreach (var p in partsWeShouldNotEnclose)\n                StartCoroutine(WaitAndRemoveShield(bay, p));\n        });\n    }\n\n\n    private static IEnumerable\u0026lt;Part\u0026gt; FindPartsBelongingToOtherVessel(Vessel vessel, IEnumerable\u0026lt;Part\u0026gt; parts)\n    {\n        return parts.Where(p =\u0026gt; !ReferenceEquals(p.vessel, vessel));\n    }\n\n\n    private static IEnumerable\u0026lt;Part\u0026gt; FindNearbyParts(ModuleCargoBay bay)\n    {\n        if (bay == null) throw new ArgumentNullException(\u0022bay\u0022);\n\n        var bayColliders = ModuleCargoBay.FindPartColliders(bay.part).Select(pc =\u0026gt; pc.collider);\n\n        var allNearbyParts = Physics.OverlapSphere(bay.transform.TransformPoint(bay.lookupCenter), bay.lookupRadius, 1 \u0026lt;\u0026lt; 0) // Parts on layer 0\n            .Except(bayColliders)\n            .Where(c =\u0026gt; c.gameObject.GetComponentInParent\u0026lt;Part\u0026gt;() != null)\n            .Select(c =\u0026gt; c.gameObject.GetComponentInParent\u0026lt;Part\u0026gt;())\n            .ToList();\n\n        return allNearbyParts;\n    }\n\n\n    private static IEnumerator WaitAndRemoveShield(IAirstreamShield shield, Part part)\n    {\n        yield return new WaitForEndOfFrame();\n\n        print(\u0022Removing shield from \u0022 \u002B part.partInfo.name);\n\n        part.RemoveShield(shield);\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2015-12-04T20:24:49Z","Content":"\n\u003Cp\u003E\nThat\u0027s the idea I put forward, on decoupling do a check, but fairings don\u0027t know about the parts capping the ends so they can\u0027t know they are open on one end like cargobays do.\n\u003C/p\u003E\n\u003Cp\u003E\nSo it\u0027d take modifying the module to keep a record of the part the fairing was closed around, and checking for it when onVesselCreate was called.\n\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2015-12-05T02:50:26Z","Content":"\n\u003Cp\u003E\nAlso, the cargo bay module was explicitly designed to detect parts that are in the bay and aren\u0027t part of the vessel. The idea being that you can go capture\u00A0kerbals, satellites, or whatever and hold them loose in the bay. (There are other practical problems with this, but that was the idea.)\n\u003C/p\u003E\n\u003Cp\u003E\nNot shielding parts that belong to a vessel does fix the problem, but also isn\u0027t the intended behavior.\n\u003C/p\u003E\n\u003Cp\u003E\nThere is a variable that tracks the interstage part, but it\u0027s internal to the module, which is why it needs to be fixed internally. But the big sticking point (as mentioned) is that there is no event that fires when the engine leaves the bay.\n\u003C/p\u003E\n\u003Cp\u003E\nI agree that there is a problem here. I just think that (unfortunately) there is still a disconnect between desired and actual behavior.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-12-05T02:50:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222308297\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221449260689\u0022 data-ipsquote-userid=\u002216426\u0022 data-ipsquote-username=\u0022sal_vager\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, sal_vager said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo it\u0027d take modifying the module to keep a record of the part the fairing was closed around, and checking for it when onVesselCreate was called.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n? The cargo bay already keeps track of parts it\u0027s shielded. It\u0027s not that it isn\u0027t triggering properly (see the delay in my proof of concept where I wait to make sure it\u0027s already run) but that it assumes everything it\u0027s shielding will stay shielded unless a significant event happens to its Vessel like being modified in some way (OnVesselWasModified, OnVesselPack/Unpack). There\u0027s no consideration for what might happen if the Parts it captured aren\u0027t part of the same Vessel... and since it ignores those events for every other Vessel you end up in a weird place where the only thing that can change whether your active ship engine is shielded is an event \u003Cem\u003Ehappening to the debris (containing the cargo bay) you just created.\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nTake your reference craft into orbit, stage until the two small engines run. Give it a bit of thrust. Watch the log until the debris is packed (triggering new occlusion update). Poof, stowage issue gone. That\u0027s the problem\n\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2015-12-05T03:21:58Z","Content":"\n\u003Cp\u003E\nYes. Again, you are very correct. But removing the part from the fairing does not trigger an event. There\u0027s no natural thing that happens when removing the engine (or other part)\u00A0that triggers the event.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat probably needs to happen is that the cargo bay module needs to know when it\u0027s an interstage, but the interstage piece is actually controlled by the fairing module. So the fairing module needs to track interstage status, and (probably the best bet) is to detect when a OnVesselWasModified happens. Then check if the interstage part has become part of a separate vessel (which is different from checking if all parts inside the faring are part of another vessel). In the case where the fairing is an\u00A0interstage fairing, and the interstage receiver is now part of another vessel, the whole list should be unshielded and the fairing shielding\u00A0rendered inoperable.\n\u003C/p\u003E\n\u003Cp\u003E\nThat\u0027s different than just constantly checking all parts in the bay/fairing, and seeing if they are part of another vessel. That will create unnecessary slowdown and undesirable behavior.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-12-05T03:57:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222308851\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221449285718\u0022 data-ipsquote-userid=\u0022100668\u0022 data-ipsquote-username=\u0022Claw\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n36 minutes ago, Claw said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s different than just constantly checking all parts in the bay/fairing, and seeing if they are part of another vessel. That will create unnecessary slowdown and undesirable behavior.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t think I suggested such a thing (although creating a convex trigger collider would be my preferred solution which does kind of fall under that umbrella)... As for your solution, it won\u0027t catch every case. The reference craft provided by sal looks like an interstage fairing but isn\u0027t for example\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-05T03:58:28Z\u0022 title=\u002212/05/2015 03:58  AM\u0022 data-short=\u00228 yr\u0022\u003EDecember 5, 2015\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2015-12-05T04:18:41Z","Content":"\n\u003Cp\u003E\nAnd now we see why this is such a complex problem.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-12-05T04:42:52Z","Content":"\n\u003Cp\u003E\nI honestly don\u0027t. You don\u0027t seem to agree with my simple solution because of the capture issue but I have two problems with that:\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nHow often is an intact fairing made such that you can capture something inside it and it is reasonable that it be shielded? I keep thinking of a \u0022basket\u0022 type fairing to catch stuff and having the items in the open end completely shielded from the airstream seems unrealistic\n\u003C/li\u003E\n\u003Cli\u003E\nThe capture mechanic is already broken in that should you end up in such a case as 1) and the fairing occlusion gets triggered, everything caught in the fairing will be shielded from the airstream\u003Cem\u003E \u003C/em\u003Eand dragless/generate no lift even were it to fall out of the basket, until the catching Vessel triggers a new update\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\nI\u0027m not a rocket wizard so there might be some unconventional way to use a fairing as a catching mitt that I haven\u0027t thought of, but I think trading the ability to catch stuff [edit:in an aerodynamic-efficient manner] with a fairing for the ability to use interstage fairings properly is worthwhile\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-05T04:44:47Z\u0022 title=\u002212/05/2015 04:44  AM\u0022 data-short=\u00228 yr\u0022\u003EDecember 5, 2015\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2015-12-05T06:46:41Z","Content":"\n\u003Cp\u003E\nYou are right, you wouldn\u0027t use a fairing as some sort of catchers mitt. And even if you did, an open ended fairing isn\u0027t really useful for blocking airflow anyway.\n\u003C/p\u003E\n\u003Cp\u003E\nI will go back and re-read your postings, as well as download sal\u0027s craft. Perhaps I\u0027m misunderstanding what you\u0027re getting at. A lot of times, people are\u00A0worried about not being able to fire an engine while inside an intact interstage. The other thing that some people don\u0027t realize is that the module that does the occlusion is the same module for fairings and cargo bays. So if you shield parts inside a fairing that aren\u0027t part of the same vessel, you\u0027ve forced the same thing with cargo bays. The module was originally written for cargo bays, which is probably part of the reason it\u0027s suffering from some of these issues. The fairing module does some interfacing to the cargo bay module, but that\u0027s the piece that\u0027s lacking.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd yes, it\u0027s still possible to have loose parts inside a closed fairing. I don\u0027t know what need there is for this, but it\u0027s possible. And I\u0027m certain that if it happened, someone, somewhere would be equally as upset that this thing they built to be loose\u00A0inside a fairing isn\u0027t being shielded anymore.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I\u0027m not personally advocating for it to be one way or the other. Just trying to point out how things currently work. So I will take it\u00A0as a personal fault, that I maybe assumed too much about your meaning when I was first replying.\n\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2015-12-05T07:13:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222279415\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221447584374\u0022 data-ipsquote-userid=\u002266043\u0022 data-ipsquote-username=\u0022Scarecrow88\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 11/15/2015, 12:46:14, Scarecrow88 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe game doesn\u0027t stop the engines firing in that particular scenario, so why are they prevented from firing if they happen to be ensconced inside a fairing?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt was an intentional game design decision.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222280135\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221447616280\u0022 data-ipsquote-userid=\u002266043\u0022 data-ipsquote-username=\u0022Scarecrow88\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 11/15/2015, 9:38:00, Scarecrow88 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI can understand that, to a point, but why would the fairing state affect an engine if the stage that the fairing is attached to has just been jettisoned, and the engine is attached to the stage that is still in flight?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBecause the problem is that the fairing only runs the occlusion checks (which reside inside the cargo bay module) on certain events. The cargo bay module runs the check only once for when called upon by certain Event\u00A0triggers. So it actually is checking when you stage the decoupler, but the engine is technically still inside the ModuleCargoBay\u0027s search space. So it stays occluded. After the engine (or other part) has been physically removed from the fairing (which is really removal from the ModuleCargoBay\u0027s search space), there is no Event trigger that pokes ModuleCargoBay into running another update. That\u0027s why. It\u0027s currently designed that way, which is the crux of the problem.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222308226\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221449257648\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI haven\u0027t come across this issue much myself (playtime :() but if the reference craft posted by sal_vager is representative of the problem, why not use OnVesselCreate? The problem with that craft isn\u0027t that the bay isn\u0027t updated but rather that at the moment the bay is decoupled from the rest of the ship, it captures (and \u003Cu\u003Eshields\u003C/u\u003E) Parts belonging to the original ship and then doesn\u0027t ever check if they\u0027ve moved out of range. Since its own update is now based on a separate ship (probably some debris), those incorrectly shielded Parts are now \u0022stuck\u0022 unless that separate ship receives another event that triggers an update...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, exactly. Your proposed \u0022check to see if it\u0027s out of range\u0022 is another potentially viable solution. I will say that on the developer side, they are always keen on avoiding \u0022constant checks\u0022 because it can cause a hit in performance to have too many of those going on. That\u0027s actually the reason why the list exists, and triggers a check only under certain Events. Rather than \u0022am I far enough away? How about now? Now? Now? Am I?...\u0022\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222308823\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221449283842\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere\u0027s no consideration for what might happen if the Parts it captured aren\u0027t part of the same Vessel... and since it ignores those events for every other Vessel you end up in a weird place where the only thing that can change whether your active ship engine is shielded is an event \u003Cem\u003Ehappening to the debris (containing the cargo bay) you just created.\u003C/em\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYour assessment that I trimmed out is again spot on. This quote above was another specific design decision. That stuff inside the CargoBayModule\u0027s search area is supposed to get\u00A0occluded, even if it\u0027s not part of the same vessel. That was an intentional design decision, but was made before fairings existed. The end result is a case where we end up with the issue being discussed in this thread.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222308876\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221449287872\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe reference craft provided by sal looks like an interstage fairing but isn\u0027t for example\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis statement made me think that sal had a different craft posted. I went back to download and I actually already have that one which I have used to confirm the interstage part tracking failures. It is, in fact, an interstage fairing. It\u0027s quite impossible to build an open ended fairing like that without making an interstage. Though I\u0027m pretty sure the game fails in properly keeping track of the \u0022interstage part\u0022 in-flight. (If you can build an open ended fairing in the editor, please let me know.) This part tracking failure also causes other issues, such as interstage fairings that wobble as if the end isn\u0027t connected (because technically it\u0027s not).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThat\u0027s actually the best solution in my opinion, which I\u0027ve already stated. Which is that the fairing module (not the cargo bay module) properly tracks when the fairing is an interstage (which it should already be doing, but isn\u0027t). Then, when an Event occurs, the Fairing module is the responsible party\u00A0for checking: \u0022Oh hey, I\u0027m an interstage fairing. Some event has been triggered, is my interstage part still attached to this vessel? No...so tell the CargoBay module to unshield everything.\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nThat would fix it, without constantly checking ranges or fiddling with actual Cargo Bay mechanics.\n\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2015-12-05T12:16:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222307903\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221449241613\u0022 data-ipsquote-userid=\u002216426\u0022 data-ipsquote-username=\u0022sal_vager\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, sal_vager said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhen in a report you should see a \u0022Votes\u0022 entry with a green and red arrow, just above the description.\n\u003C/p\u003E\n\u003Cp\u003E\nCurrently it\u0027s on 4 upvotes.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nProbably because I\u0027m a new user and maybe don\u0027t have the rights yet, I can\u0027t find it anywhere. Oh well...\n\u003C/p\u003E\n"},{"CreatedByName":"cfds","CreatedById":82109,"CreatedDateTime":"2015-12-09T13:54:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222308985\u0022 data-ipsquote-contentid=\u0022125511\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221449299590\u0022 data-ipsquote-userid=\u0022100668\u0022 data-ipsquote-username=\u0022Claw\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5.12.2015, 08:13:10, Claw said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s actually the best solution in my opinion, which I\u0027ve already stated. Which is that the fairing module (not the cargo bay module) properly tracks when the fairing is an interstage (which it should already be doing, but isn\u0027t). Then, when an Event occurs, the Fairing module is the responsible party\u00A0for checking: \u0022Oh hey, I\u0027m an interstage fairing. Some event has been triggered, is my interstage part still attached to this vessel? No...so tell the CargoBay module to unshield everything.\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nThat would fix it, without constantly checking ranges or fiddling with actual Cargo Bay mechanics.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe best solution would just be to doing away with this pointless \u0022cannot activate while being stowed\u0022 check. The game does not prevent activating an engine while it is clipped inside a crew capsule or opening a solar panel that would intersect with a fuel tank. Why should fairings and cargo bays behave in another way.\n\u003C/p\u003E\n\u003Cp\u003E\nI know that it is an \u0022intentional game design decision\u0022 but so was the souposphere and the infinite thrust RCS thruster.\n\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2015-12-09T15:42:46Z","Content":"\n\u003Cp\u003E\ncfds, this is support, if you want this addressed by the devs please see my tracker issue above or request that parts are not disabled while stowed.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I\u0027m glad parts are disabled, that way I don\u0027t have to deal with constant reports that peoples craft have exploded due to accidentally staging their stowed engines.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-12-10T06:53:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI went back to download and I actually already have that one which I have used to confirm the interstage part tracking failures. It is, in fact, an interstage fairing.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSorry for being unclear. Even if the game did track interstage fairing status, sal\u0027s reference craft still would not count. Somehow the id of the interstage part has been lost inside the .craft. KSP will just blindly create the fairing mesh based on the saved cross sections and because the last one just happens to have exactly the right radius, it\u0027s interpreted as a hole.\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s a tweak of my first solution that will unshield non-vessel parts if the fairing has that hole:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\npublic class FairingStowageFix : PartModule\n{\n    private ModuleProceduralFairing _host;\n\n    public override void OnStart(StartState state)\n    {\n        base.OnStart(state);\n\n        if (state == StartState.Editor)\n        {\n            enabled = false;\n            return;\n        }\n\n        var fairing = GetComponent\u0026lt;ModuleProceduralFairing\u0026gt;();\n\n        if (fairing == null)\n        {\n            enabled = false;\n            Debug.LogWarning(\u0022FairingStowageFix: no fairing module found on \u0022 \u002B part.partInfo.name);\n            return;\n        }\n\n        _host = fairing;\n            \n        GameEvents.onVesselWasModified.Add(OnVesselModified);\n    }\n\n\n    private void OnDestroy()\n    {\n        if (!enabled) return;\n\n        GameEvents.onVesselWasModified.Remove(OnVesselModified);\n    }\n\n\n    private void OnVesselModified(Vessel data)\n    {\n        if (!ReferenceEquals(vessel, data)) return;\n\n        if (IsInterstage()) // build in a delay to be sure the cargo bay has responded to this event\n            StartCoroutine(IgnorePartsThatThisVesselDoesNotOwn());\n    }\n\n\n    private IEnumerator IgnorePartsThatThisVesselDoesNotOwn()\n    {\n        var bay = _host.GetComponent\u0026lt;ModuleCargoBay\u0026gt;();\n\n        if (bay == null)\n        {\n            Debug.LogError(\u0022FairingStowageFix: No CargoBay attached to \u0022 \u002B part.partInfo.name);\n            yield break;\n        }\n\n        yield return new WaitForEndOfFrame();\n\n        foreach (var partWeShouldNotShield in FindNearbyParts(bay).Where(p =\u0026gt; p.vessel != vessel))\n        {\n#if DEBUG\n            print(\u0022Unshielding \u0022 \u002B partWeShouldNotShield.partInfo.name \u002B \u0022 because it belongs to \u0022 \u002B\n                    partWeShouldNotShield.vessel.id \u002B \u0022 and not our \u0022 \u002B vessel.id);\n#endif\n            partWeShouldNotShield.RemoveShield(bay);\n        }\n\n    }\n\n\n    private bool IsInterstage()\n    {\n        if (_host == null) return false;\n\n        var last = _host.xSections.SingleOrDefault(xs =\u0026gt; xs.isLast);\n\n        // ReSharper disable once CompareOfFloatsByEqualityOperator\n        // note: direct comparison of floats intended (this is how the game does it!)\n        return last != null \u0026amp;\u0026amp; (!last.isCap || last.r == _host.capRadius);\n    }\n\n\n    private static IEnumerable\u0026lt;Part\u0026gt; FindNearbyParts(ModuleCargoBay bay)\n    {\n        if (bay == null) throw new ArgumentNullException(\u0022bay\u0022);\n\n        var bayColliders = ModuleCargoBay.FindPartColliders(bay.part).Select(pc =\u0026gt; pc.collider);\n\n        return Physics.OverlapSphere(bay.transform.TransformPoint(bay.lookupCenter), bay.lookupRadius, 1 \u0026lt;\u0026lt; 0) // Parts on layer 0\n            .Except(bayColliders)\n            .Where(c =\u0026gt; c.gameObject.GetComponentInParent\u0026lt;Part\u0026gt;() != null)\n            .Select(c =\u0026gt; c.gameObject.GetComponentInParent\u0026lt;Part\u0026gt;());\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nIf you\u0027re still unsatisfied, the last thing that comes to mind would be to store the interstageID ourselves. The main disadvantage there is that it probably wouldn\u0027t retroactively apply to fairings already in flight if they too are missing that data\n\u003C/p\u003E\n"}]}