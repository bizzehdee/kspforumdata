{"TopicId":178268,"ForumId":29,"TopicTitle":"Need some help creating new vessel","CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-09-13T02:49:52Z","PageNum":1,"Articles":[{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-09-13T02:49:52Z","Content":"\n\u003Cp\u003E\nI\u0027m trying to create a vessel from a part, and have it created about 10-20m in the air, and about 10m away from the current vessel.\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nI have it creating the vessel, but with problems:\n\u003C/li\u003E\n\u003Cli\u003E\nModules aren\u0027t initialized\n\u003C/li\u003E\n\u003Cli\u003E\nAdditional vessels created will always be created at the same location, even if the current active vessel moves away\n\u003C/li\u003E\n\u003Cli\u003E\nThe new vessel gets created where I expect, but then (maybe when physics kicks in) instantly is on the ground\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nI\u0027ve been looking at a number of mods which create vessels, and have so far been unable to figure this out.\n\u003C/p\u003E\n\u003Cp\u003E\nPinging \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/119307-nightingale/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022119307\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/119307-nightingale/\u0022 rel=\u0022\u0022\u003E@nightingale\u003C/a\u003E\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/105198-roverdude/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022105198\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/105198-roverdude/\u0022 rel=\u0022\u0022\u003E@RoverDude\u003C/a\u003E\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57176-taniwha/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257176\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57176-taniwha/\u0022 rel=\u0022\u0022\u003E@taniwha\u003C/a\u003E\u00A0since I\u0027ve been looking at your mods for help.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe code is here:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing UnityEngine;\nusing KSP;\nusing System.Collections;\n\nnamespace KSPGeoCaching\n{\n    public static class LocationUtil\n    {\n        public static double TerrainHeight(double latitude, double longitude, CelestialBody body)\n        {\n            // Sun and Jool - bodies without terrain\n            if (body.pqsController == null)\n            {\n                return 0;\n            }\n\n            // Figure out the terrain height\n            double latRads = Math.PI / 180.0 * latitude;\n            double lonRads = Math.PI / 180.0 * longitude;\n            Vector3d radialVector = new Vector3d(Math.Cos(latRads) * Math.Cos(lonRads), Math.Sin(latRads), Math.Cos(latRads) * Math.Sin(lonRads));\n            return Math.Max(body.pqsController.GetSurfaceHeight(radialVector) - body.pqsController.radius, 0.0);\n        }\n    }\n\n    partial class GeoCacheDriver : Monobehaviour\n    {\n        const string VesselName = \u0022GeoCache\u0022;\n\n        internal class KD\n        {\n            internal double altitude;\n            public double latitude = 0.0;\n            public double longitude = 0.0;\n            public CelestialBody body = null;\n            public Orbit orbit = null;\n            public bool landed = false;\n            //public float heading;\n            public AvailablePart craftPart;\n\n            public KD()\n            {\n                latitude = FlightGlobals.ActiveVessel.latitude;\n                longitude = FlightGlobals.ActiveVessel.longitude;\n                body = FlightGlobals.ActiveVessel.mainBody;\n                orbit = FlightGlobals.ActiveVessel.orbit;\n                landed = FlightGlobals.ActiveVessel.Landed;\n                altitude = FlightGlobals.ActiveVessel.altitude; // LocationUtil.TerrainHeight(latitude, longitude, body);\n                // heading = FlightGlobals.ActiveVessel.head\n                Log.Info(\u0022Creation Latitude: \u0022 \u002B latitude \u002B \u0022,   Longitude: \u0022 \u002B longitude);\n               \n            }\n        }\n\n        internal void Spawn()\n        {\n            KD kd = new KD();\n            Log.Info(\u0022Spawning a GeoCache\u0022 );\n\n            // Set additional info for landed \n            if (kd.landed)\n            {\n                Vector3d pos = kd.body.GetWorldSurfacePosition(kd.latitude, kd.longitude, kd.altitude);\n\n                kd.orbit = new Orbit(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, kd.body);\n                kd.orbit.UpdateFromStateVectors(pos, kd.body.getRFrmVel(pos), kd.body, Planetarium.GetUniversalTime());\n               \n            }\n            else\n            {\n                // Update the reference body in the orbit\n                kd.orbit.referenceBody = kd.body;\n            }\n\n            uint flightId = ShipConstruction.GetUniqueFlightID(HighLogic.CurrentGame.flightState);\n\n\n            kd.craftPart = PartLoader.getPartInfoByName(\u0022geocache\u0022);\n            // Create part nodes\n            ConfigNode[] partNodes = new ConfigNode[1];\n            partNodes[0] = ProtoVessel.CreatePartNode(kd.craftPart.name, flightId, null);\n            \n\n            // Create additional nodes\n            ConfigNode[] additionalNodes = new ConfigNode[0];\n            // Create the config node representation of the ProtoVessel        \n            ConfigNode protoVesselNode = ProtoVessel.CreateVesselNode(VesselName, VesselType.Probe, kd.orbit, 0, partNodes);\n\n            // Additional seetings for a landed vessel\n            if (kd.landed)\n            {\n                bool splashed = kd.altitude \u0026lt; 0.001 \u0026amp;\u0026amp; kd.body.ocean;\n\n                // Add a bit of height for landed\n                if (!splashed)\n                {\n                    kd.altitude \u002B= 40.2;\n                    Log.Info(\u0022Adding 40.2 to altitude\u0022);\n                }\n                //Guid vesselId = vessel.id;\n\n                // Figure out the appropriate rotation\n                Vector3d norm = kd.body.GetRelSurfaceNVector(kd.latitude, kd.longitude);\n                double terrainHeight = 0.0;\n                if (kd.body.pqsController != null)\n                {\n                    terrainHeight = kd.body.pqsController.GetSurfaceHeight(norm) - kd.body.pqsController.radius;\n                }\n\n                // Create the config node representation of the ProtoVessel\n\n                protoVesselNode.SetValue(\u0022sit\u0022, (splashed ? Vessel.Situations.SPLASHED : Vessel.Situations.LANDED).ToString());\n                protoVesselNode.SetValue(\u0022landed\u0022, (!splashed).ToString());\n                protoVesselNode.SetValue(\u0022splashed\u0022, splashed.ToString());\n                protoVesselNode.SetValue(\u0022lat\u0022, kd.latitude);\n                protoVesselNode.SetValue(\u0022lon\u0022, kd.longitude);\n                protoVesselNode.SetValue(\u0022alt\u0022, kd.altitude);                \n                protoVesselNode.SetValue(\u0022landedAt\u0022, kd.body.name);\n\n                float lowest = float.MaxValue;\n                foreach (Collider collider in kd.craftPart.partPrefab.GetComponentsInChildren\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Collider\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E())\n                {\n                    if (collider.gameObject.layer != 21 \u0026amp;\u0026amp; collider.enabled)\n                    {\n                        lowest = Mathf.Min(lowest, collider.bounds.min.y);\n                    }\n                }\n                if (Mathf.Approximately(lowest, float.MaxValue))\n                {\n                    lowest = 0;\n                }\n\n                float hgt = kd.craftPart.partPrefab.localRoot.attPos0.y - lowest;\n                hgt \u002B= 10;\n                protoVesselNode.SetValue(\u0022hgt\u0022, hgt);\n\n                // Set the normal vector relative to the surface\n                Quaternion normal = Quaternion.LookRotation(new Vector3((float)norm.x, (float)norm.y, (float)norm.z));\n                Quaternion rotation = Quaternion.identity;\n                rotation = rotation * Quaternion.FromToRotation(Vector3.up, Vector3.back);\n                Vector3 nrm = (rotation * Vector3.forward);\n                protoVesselNode.SetValue(\u0022prst\u0022, false.ToString());\n                protoVesselNode.SetValue(\u0022nrm\u0022, nrm.x \u002B \u0022,\u0022 \u002B nrm.y \u002B \u0022,\u0022 \u002B nrm.z);\n            }\n            ProtoVessel protoVessel = HighLogic.CurrentGame.AddVessel(protoVesselNode);\n            //protoVessel.Load(HighLogic.CurrentGame.flightState);\n\n            protoVessel.vesselName = VesselName;\n           \n            vessel = protoVessel.vesselRef;\n            if (vessel != null)\n            {\n                //var mode = OrbitDriver.UpdateMode.UPDATE;\n                //vessel.orbitDriver.SetOrbitMode(mode);\n\n                vessel.Load();\n                launchPoint = vessel.GetWorldPos3D();\n                // Offset the position by 10m in y and z to have it created away from the current vessel\n                launchPoint.y \u002B= 10;\n                launchPoint.z \u002B= 10;\n                \n                StartCoroutine(\u0022SpawnCoRoutine\u0022);\n            }\n\n        }\n        Vessel vessel;\n        Vector3 launchPoint;\n        IEnumerator SpawnCoRoutine()\n        {\n            if ((vessel.Parts[0] != null) \u0026amp;\u0026amp; (vessel.Parts[0].Rigidbody != null))\n            {\n                vessel.Parts[0].Rigidbody.isKinematic = true;\n            }\n            //vessel.GoOnRails();\n            while ((vessel.packed) \u0026amp;\u0026amp; (vessel.acceleration.magnitude == 0))\n            {\n                vessel.SetPosition(launchPoint);\n                yield return null;\n            }\n            while (true)\n            {\n                bool partsInitialized = true;\n                foreach (Part p in vessel.parts)\n                {\n                    if (!p.started)\n                    {\n                        partsInitialized = false;\n                        break;\n                    }\n                }\n                vessel.SetPosition(launchPoint, true);\n                //vessel.SetWorldVelocity(Vector3d.up * 0);\n                if (partsInitialized)\n                {\n                    break;\n                }\n                OrbitPhysicsManager.HoldVesselUnpack(2);\n                yield return null;\n            }\n            vessel.GoOffRails();\n\n            //flare.IgnoreGForces(250);\n            Log.Info(\u0022Final Latitude: \u0022 \u002B vessel.latitude \u002B \u0022,   Longitude: \u0022 \u002B vessel.longitude);\n\n        }\n    }\n\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"taniwha","CreatedById":57176,"CreatedDateTime":"2018-09-13T03:07:42Z","Content":"\n\u003Cp\u003E\nYou might find it easier to create a .craft config node (or, if it\u0027s always the same part, a .craft file you can load into a config node), then use ShipConstruct to \u0022build\u0022 the ship, something like PlaceShip in EL\u0027s SurveyStation.cs (to get position and orientation correct: the key points for you are the two rootPart.transform manipulation lines at the end), then use ShipConstruction.AssembleForLaunch to get the all the vessel and part modules running. There is some extra jiggling needed(? was in the past) to deal with the ship being put to ground correctly, which you\u0027ll find in BuildControl.BuildAndLaunchCraft (follow the builder.capture == false paths: capturing a built vessels is another barrel of worms). There\u0027s also some stuff in there for staging and current vessel switching.\n\u003C/p\u003E\n\u003Cp\u003E\nGetting a spawned vessel up and running is a complex task and it is best to let KSP itself do as much of the work as possible.\n\u003C/p\u003E\n\u003Cp\u003E\nI hope that helps. If you have more questions, feel free to ask.\n\u003C/p\u003E\n"},{"CreatedByName":"Benjamin Kerman","CreatedById":172792,"CreatedDateTime":"2018-09-13T13:48:26Z","Content":"\n\u003Cp\u003E\nI don\u0027t know if this will work for your case, but here\u0027s how I\u0027m doing it:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed7252846480\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/164792-how-to-create-a-vessel\u0026amp;do=embed\u0022 style=\u0022height:222px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n(I\u0027ll ping \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/120438-wasml/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022120438\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/120438-wasml/\u0022 rel=\u0022\u0022\u003E@wasml\u003C/a\u003E, as he can probably speak better about his answer)\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-09-13T15:04:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223450512\u0022 data-ipsquote-contentid=\u0022178268\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221536846506\u0022 data-ipsquote-userid=\u0022172792\u0022 data-ipsquote-username=\u0022Benjamin Kerman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Benjamin Kerman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t know if this will work for your case, but here\u0027s how I\u0027m doing it:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed7917389856\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/164792-how-to-create-a-vessel\u0026amp;do=embed\u0022 style=\u0022height:223px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n(I\u0027ll ping \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/120438-wasml/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022120438\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/120438-wasml/\u0022 rel=\u0022\u0022\u003E@wasml\u003C/a\u003E, as he can probably speak better about his answer)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI started with that, but it has some issues.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve rewritten what I have using code from an old mod KSP-Smelter.\u00A0 It\u0027s working much better, the only thing that is still not working properly is this:\n\u003C/p\u003E\n\u003Cul style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\u003Cli\u003E\nThe new\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cspan\u003E\uFEFF\u003C/span\u003Evessel gets created where I expect, but then (maybe\u003Cspan\u003E\uFEFF\u003C/span\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Ewhen physics kicks in) instantly is on the\u003Cspan\u003E\uFEFF\u003C/span\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eground\u003Cspan\u003E\uFEFF\u003C/span\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nI want the new vessel to be created in the air and offset from the vessel\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-09-13T15:17:38Z","Content":"\n\u003Cp\u003E\nThe current working code (except for the positioning in the air) is here:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E    partial class GeoCacheDriver\n    {\n        const string VesselName = \u0022GeoCache\u0022;\n\n        public class HideConfigNode\n        {\n            private ConfigNode node = null;\n            public HideConfigNode(ConfigNode node)\n            {\n                this.SetConfigNode(node);\n            }\n            public HideConfigNode()\n            {\n\n            }\n            public void SetConfigNode(ConfigNode node)\n            {\n                this.node = node;\n            }\n            public void SetValue(string name, string value)\n            {\n                node.SetValue(name, value);\n            }\n            public ConfigNode GetConfigNode()\n            {\n                return this.node;\n            }\n        }\n\n        /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        /// This class is pretty much built on what KAS uses to pull parts out of containers\n        /// All credit to https://github.com/KospY/KAS\n        /// https://github.com/KospY/KAS/blob/master/LICENSE.md\n        /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        public class VesselSpawner\n        {\n            const string PluginPath = \u0022/GameData/KSPGeoCaching/PluginData/Ships/\u0022;\n\n            private HideConfigNode _OldVabShip;\n            private string _craftFile = \u0022\u0022;\n            private Part _srcPart = null;\n            private Vector3 _spawnOffset = new Vector3(0, 0, 0);\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_craftFile\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ECraft file name as it appears in the PluginPath folder\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_srcPart\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESource part to spawn relative to\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_spawnOffset\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EOffset spawn from Source part position\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            public VesselSpawner(string _craftFile, Part _srcPart, Vector3 _spawnOffset)\n            {\n                //Store paths\n                this._craftFile = _craftFile;\n                this._srcPart = _srcPart;\n                this._spawnOffset = _spawnOffset;\n\n                if (this._srcPart == null)\n                    Debug.Log(\u0022Relative source part can\u0027t be null\u0022);\n                if ((_craftFile != String.Empty))\n                    Debug.Log(\u0022Source part path can\u0027t be null\u0022);\n\n            }\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// Spawns the vessel\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            public void SpawnVessel()\n            {\n                Log.Info(\u0022SpawnVessel\u0022);\n                //Load craft file\n                ShipConstruct _ship = LoadVessel(this._craftFile);\n                if (_ship != null)\n                    SpawnVessel(_ship, this._srcPart, this._spawnOffset);\n                else\n                    Debug.Log(\u0022Failed to load the vessel\u0022);\n            }\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// Attempt vessel load\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_craftFile\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;returns\u0026gt;\u0026lt;/returns\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            private ShipConstruct LoadVessel(string _craftFile)\n            {\n                //Get path to vessel\n                string BasePath = Environment.CurrentDirectory \u002B PluginPath;\n                string path = BasePath \u002B _craftFile;\n\n                Log.Info(\u0022LoadVessel, full path: \u0022 \u002B path);\n                //Save old ship for later, else player will see it in the VAB\n                _OldVabShip = new HideConfigNode(ShipConstruction.ShipConfig);\n\n                //Load craft file\n                ShipConstruct _shipConstruct = ShipConstruction.LoadShip(path);\n\n                //Check load\n                if (_shipConstruct == null)\n                {\n                    // Restore ShipConstruction ship, otherwise player sees loaded craft in VAB\n                    ShipConstruction.ShipConfig = _OldVabShip.GetConfigNode();\n                    Log.Info(\u0022vessel not loaded\u0022);\n                    return null; //Fail\n                }\n                return _shipConstruct;\n            }\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// Spawn ship construct\n            /// https://github.com/KospY/KAS/blob/master/Plugin/KAS_Shared.cs\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_shipConstruct\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EShipconstruct to spawn\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_srcPart\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESource part to spawn relative to\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_spawnOffset\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EOffset spawn from Source part position\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            private void SpawnVessel(ShipConstruct _shipConstruct, Part _srcPart, Vector3 _spawnOffset)\n            {\n                //Store construct root\n                Part _newConstructRootPart = _shipConstruct.parts[0];\n\n                //Center rootpart\n                Vector3 offset = _newConstructRootPart.transform.localPosition;\n                _newConstructRootPart.transform.Translate(-offset);\n\n                //Get launch spawn point, relative to part\n                Transform t = _srcPart.transform;\n                GameObject launchPos = new GameObject();\n                launchPos.transform.parent = _srcPart.transform;\n                launchPos.transform.position = t.position;\n                launchPos.transform.position \u002B= t.TransformDirection(_spawnOffset);\n                launchPos.transform.rotation = t.rotation;\n                //Store our launch / spawn position\n                Transform launchTransform = launchPos.transform;\n                //Kill original object\n                launchPos.DestroyGameObject();\n                //Set rootpart origin\n                _shipConstruct.Parts[0].localRoot.transform.Translate(launchPos.transform.position, Space.World);\n                //Position\n                float angle;\n                Vector3 axis;\n                //Extract ToAngleAxis data from selected spawning location\n                launchTransform.rotation.ToAngleAxis(out angle, out axis);\n                //TRANSFORM Rotate localRootPart in relation to root\n                _shipConstruct.Parts[0].localRoot.transform.RotateAround(launchTransform.position, axis, angle);\n\n                //Create vessel object\n                Vessel _newVessel = _newConstructRootPart.localRoot.gameObject.AddComponent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Vessel\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n                //Attach vessel information\n                _newVessel.id = Guid.NewGuid();\n                _newVessel.vesselName = _srcPart.vessel.vesselName \u002B \u0022 - \u0022 \u002B _shipConstruct.shipName;\n                _newVessel.landedAt = _srcPart.vessel.vesselName;\n\n                //Store backup\n                ShipConstruction.CreateBackup(_shipConstruct);\n\n                //Init from VAB\n                _newVessel.Initialize(true);\n                //Set Landed\n                _newVessel.Landed = true;\n\n                //Set Orbit\n                InitiateOrbit(launchTransform.position, _srcPart.vessel, _newVessel);\n\n                //Set Mission info\n                uint missionId = (uint)Guid.NewGuid().GetHashCode();\n                string flagUrl = _srcPart.flagURL;\n                uint launchId = HighLogic.CurrentGame.launchID\u002B\u002B;\n\n                //Set part mission info\n                for (int i = 0; i \u0026lt; _newVessel.parts.Count; i\u002B\u002B)\n                {\n                    Part part = _newVessel.parts[i];\n                    part.flightID = ShipConstruction.GetUniqueFlightID(FlightDriver.FlightStateCache.flightState);\n                    part.flagURL = flagUrl;\n                    part.launchID = launchId;\n                    part.missionID = missionId;\n                }\n\n                //Generate staging\n                KSP.UI.Screens.StageManager.BeginFlight();\n                _newConstructRootPart.vessel.ResumeStaging();\n                KSP.UI.Screens.StageManager.GenerateStagingSequence(_newConstructRootPart.localRoot);\n                KSP.UI.Screens.StageManager.RecalculateVesselStaging(_newConstructRootPart.vessel);\n\n                //Set position, again\n                _newVessel.SetPosition(launchTransform.position);\n                _newVessel.SetRotation(launchTransform.rotation);\n\n                ////Get allll the parts, does it even matter since we launch from VAB?\n                //for (int i = 0; i \u0026lt; _newVessel.parts.Count; i\u002B\u002B)\n                //{\n                //    // Solar panels from containers (we dont have no bloody containers here tho) don\u0027t work otherwise\n                //    for (int j = 0; j \u0026lt; _newVessel.parts[i].Modules.Count; j\u002B\u002B)\n                //    {\n                //        ConfigNode node = new ConfigNode();\n                //        node.AddValue(\u0022name\u0022, _newVessel.parts[i].Modules[j].moduleName);\n                //        _newVessel.parts[i].LoadModule(node, ref j);\n                //    }\n                //}\n\n\n                //Save Protovessel\n                ProtoVessel _newProto = new ProtoVessel(_newVessel);\n\n                //Kill and remove spawned vessel, had some serious problems with spawn position warping/glitching\n                _newVessel.Die();\n\n                //Set the protovessels position to the relative one we found, maybe redundant\n                _newProto.position = launchPos.transform.position;\n\n                //If you check this value, you will see the height change from launch scene to resume scene, extra dafuq\n                //float height = _newProto.height;\n\n                if (FlightDriver.StartupBehaviour == FlightDriver.StartupBehaviours.RESUME_SAVED_FILE ||\n                    FlightDriver.StartupBehaviour == FlightDriver.StartupBehaviours.RESUME_SAVED_CACHE)\n                {\n                    //Odd behaviour with positioning during different flight scenes, workaround awaaaay\n                    _newProto.height = TrueAlt(launchTransform.position, _srcPart.vessel);\n                }\n                _newProto.altitude \u002B= 10;\n                _newProto.height \u002B= 10;\n                //Load Protovessel\n                _newProto.Load(HighLogic.CurrentGame.flightState);\n\n                // Restore ShipConstruction ship, otherwise player sees loaded craft in VAB\n                ShipConstruction.ShipConfig = _OldVabShip.GetConfigNode();\n\n                //Fix Control Lock\n                FlightInputHandler.ResumeVesselCtrlState(FlightGlobals.ActiveVessel);\n                //Fix active vessel staging\n                FlightGlobals.ActiveVessel.ResumeStaging();\n\n            }\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// http://forum.kerbalspaceprogram.com/threads/111116-KSP-Altitude-Calculation-Inquiry\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;returns\u0026gt;\u0026lt;/returns\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            private float TrueAlt(Vector3 _LauncPos, Vessel _srcVessel)\n            {\n                //Vector3 pos = _srcPart.transform.position; //or this.vessel.GetWorldPos3D()\n                float ASL = FlightGlobals.getAltitudeAtPos(_LauncPos);\n                if (_srcVessel.mainBody.pqsController == null) { return ASL; }\n                float terrainAlt = Convert.ToSingle(_srcVessel.pqsAltitude);\n                if (_srcVessel.mainBody.ocean \u0026amp;\u0026amp; _srcVessel.heightFromTerrain \u0026lt;= 0) { return ASL; } //Checks for oceans\n                return ASL - terrainAlt;\n            }\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// https://github.com/taniwha-qf/Extraplanetary-Launchpads/blob/master/Source/BuildControl.cs\n            /// https://github.com/taniwha-qf/Extraplanetary-Launchpads/blob/master/License.txt\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_newVessel\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022_srcVessel\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            private void InitiateOrbit(Vector3 _spawnPoint, Vessel _srcVessel, Vessel _newVessel)\n            {\n                var mode = OrbitDriver.UpdateMode.UPDATE;\n                _newVessel.orbitDriver.SetOrbitMode(mode);\n\n                var craftCoM = GetVesselWorldCoM(_newVessel);\n                var vesselCoM = _spawnPoint;\n                var offset = (Vector3d.zero \u002B craftCoM - vesselCoM).xzy;\n\n                var corb = _newVessel.orbit;\n                var orb = _srcVessel.orbit;\n                var UT = Planetarium.GetUniversalTime();\n                var body = orb.referenceBody;\n                corb.UpdateFromStateVectors(orb.pos \u002B offset, orb.vel, body, UT);\n\n                Debug.Log(String.Format(\u0022[EL] {0} {1}\u0022, \u0022orb\u0022, orb.pos));\n                Debug.Log(String.Format(\u0022[EL] {0} {1}\u0022, \u0022corb\u0022, corb.pos));\n\n            }\n            public Vector3 GetVesselWorldCoM(Vessel v)\n            {\n                var com = v.CoM;\n                return v.rootPart.partTransform.TransformPoint(com);\n            }\n        }\n\n\n    }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57176-taniwha/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257176\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57176-taniwha/\u0022 rel=\u0022\u0022\u003E@taniwha\u003C/a\u003E Any ideas?\n\u003C/p\u003E\n"},{"CreatedByName":"Deddly","CreatedById":62955,"CreatedDateTime":"2018-09-13T18:46:54Z","Content":"\n\u003Cp\u003E\nMoved to the C# plugin development forum, as requested.\n\u003C/p\u003E\n\u003Cp\u003E\nAll the best with the project!\n\u003C/p\u003E\n"},{"CreatedByName":"taniwha","CreatedById":57176,"CreatedDateTime":"2018-09-14T01:23:49Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022129964\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0022 rel=\u0022\u0022\u003E@linuxgurugamer\u003C/a\u003E: if everything else is working nicely, then I suspect you may be fighting physics itself. I know that sometime recently, JPLRepo worked on the ground-placement code in KSP to get vessel placement more reliable, but KSP has always tried to force landed vessels to ground, and unlanded vessels would get deleted if they were on rails (this caused some fun when getting captured spawning working in EL). It sounds to me like you are essentially trying to create a gravity-defying object (and gravity is the core game element in KSP).\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe a good question to ask: why do you want the new vessel to spawn in the air? If it is for some sort of display, you might want to look into EL\u0027s survey plaques (SurveyStake.cs). Then you could put a small vessel on the surface and have it show a plaque at an arbitrary height, or even an arbitrary 3d offset.\n\u003C/p\u003E\n\u003Cp\u003E\nAnother thought is a two-part vessel with a \u0022cheaty\u0022 separation of the parts: one part is on the ground, the other is in the air supported by the ground part (since KSP\u0027s intra-vessel physics cares about only the joints, not the colliders).\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-09-14T01:37:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223450865\u0022 data-ipsquote-contentid=\u0022178268\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221536888229\u0022 data-ipsquote-userid=\u002257176\u0022 data-ipsquote-username=\u0022taniwha\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, taniwha said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022129964\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0022 rel=\u0022\u0022\u003E@linuxgurugamer\u003C/a\u003E: if everything else is working nicely, then I suspect you may be fighting physics itself. I know that sometime recently, JPLRepo worked on the ground-placement code in KSP to get vessel placement more reliable, but KSP has always tried to force landed vessels to ground, and unlanded vessels would get deleted if they were on rails (this caused some fun when getting captured spawning working in EL). It sounds to me like you are essentially trying to create a gravity-defying object (and gravity is the core game element in KSP).\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe a good question to ask: why do you want the new vessel to spawn in the air? If it is for some sort of display, you might want to look into EL\u0027s survey plaques (SurveyStake.cs). Then you could put a small vessel on the surface and have it show a plaque at an arbitrary height, or even an arbitrary 3d offset.\n\u003C/p\u003E\n\u003Cp\u003E\nAnother thought is a two-part vessel with a \u0022cheaty\u0022 separation of the parts: one part is on the ground, the other is in the air supported by the ground part (since KSP\u0027s intra-vessel physics cares about only the joints, not the colliders).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe basic idea is to allow the player to place a geocache part anywhere they want.\u00A0 So putting it in the air was a first step.\n\u003C/p\u003E\n\u003Cp\u003E\nI looked at the Vessel Mover code, and was able to incorporate it into my code, with minor modifications.\u00A0 This actually does what I want, so I\u0027ll be moving ahead with this.\n\u003C/p\u003E\n\u003Cp\u003E\nI learned a lot, thanks for your help\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"taniwha","CreatedById":57176,"CreatedDateTime":"2018-09-18T09:42:48Z","Content":"\n\u003Cp\u003E\nAh, yes, I had forgotten about Vessel Mover (probably because I have never used it, only seen it used). Yeah, it would be a good reference.\n\u003C/p\u003E\n\u003Cp\u003E\nStill, I\u0027m glad I was able to help.\n\u003C/p\u003E\n"}]}