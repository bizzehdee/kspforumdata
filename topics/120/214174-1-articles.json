{"TopicId":214174,"ForumId":120,"TopicTitle":"Propsal for fuel flow optimalization","CreatedByName":"Montaire","CreatedById":227144,"CreatedDateTime":"2023-03-02T08:16:41Z","PageNum":1,"Articles":[{"CreatedByName":"Montaire","CreatedById":227144,"CreatedDateTime":"2023-03-02T08:16:41Z","Content":"\n\u003Cp\u003E\nIt seems that the fuel problem in Kerbal Space Program 2 can be modeled as a complex graph problem with a time complexity of O(n^2) (approximately). However, I am not sure if this has already been addressed or solved in a different way.\n\u003C/p\u003E\n\u003Cp\u003E\nThe graph consists of nodes representing fuel tanks and engines, with edges representing one- or bidirectional connections between them. There is a separate graph for each fuel type.\n\u003C/p\u003E\n\u003Col\u003E\n\u003Cli\u003E\nTo reduce the number of nodes in the graph, we can combine nodes of the same type that are connected bi-directionally or form a cycle. Similarly, we can combine engines with the same settings. O(n^2) worst case\u003Cbr\u003E\n\u003Cbr\u003E\nAfter removing cycles, we are left with a directed acyclic graph (DAG), which simplifies the calculation of fuel consumption.\u003Cbr\u003E\n\u00A0\n\u003C/li\u003E\n\u003Cli\u003E\nWe can use the longest path (critical path) algorithm to calculate the consumption rate for each node. This algorithm has a time complexity of O(r\u002Be), where e is the number of edges and r is the number of nodes in the reduced DAG graph. The consumption rate represents the amount of fuel to be subtracted from the node in one time unit. We can then project this rate back to the corresponding tank.\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003Cp\u003E\nWith the consumption rate known for each tank, we can iterate through each tank in O(n) time to calculate how much fuel should be removed from it in each time unit. If there is a change in consumption rate, we need to recalculate step 2 as well, which has a time complexity of O(r\u002Be). If there is a change in the structure, we need to recalculate at least the affected parts from step 1. O(n^2) worst case.\u003Cbr\u003E\n\u003Cbr\u003E\nI hope this solution is helpful for your development efforts. Please note that if the issue has already been resolved or if my approach is not suitable for your project, feel free to disregard my post. Good luck with your work!\n\u003C/p\u003E\n"}]}