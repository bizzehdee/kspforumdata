{"TopicId":161965,"ForumId":55,"TopicTitle":"KSP physics on OpenCL","CreatedByName":"322997am","CreatedById":146422,"CreatedDateTime":"2017-06-12T00:29:52Z","PageNum":1,"Articles":[{"CreatedByName":"322997am","CreatedById":146422,"CreatedDateTime":"2017-06-12T00:29:52Z","Content":"\n\u003Cp\u003E\nThis is more of a unity question, but how worth it would it be to do physics on a GPU. In theory, KSP physics work by many simple floating point calculations, and video cards do those faster than CPUs. Would this work?\n\u003C/p\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2017-06-12T02:54:21Z","Content":"\n\u003Cp\u003E\nVideo cards do physics calculations slower than CPUs do.\n\u003C/p\u003E\n\u003Cp\u003E\nThey can just run thousands of physics calculations side-by-side.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, this has two major consequences for KSP:\n\u003C/p\u003E\n\u003Cp\u003E\n#1: I\u0027m not sure how rigid-body physics are usually handled, but it\u0027s possible that it\u0027s difficult to impossible to thread them. In that event, OpenCL physics acceleration is an outright no-go, because each individual CPU core is far more powerful than a GPU core.\n\u003C/p\u003E\n\u003Cp\u003E\n#2: Even if it\u0027s theoretically possible, threaded code is an absolute bear to write. Everything becomes more complicated when you have to worry about things like work balancing, cache synchronization and interference, and the typical languages for GPU programming (OpenCL, CUDA) are not known for ease of programming and productivity.\n\u003C/p\u003E\n\u003Cp\u003E\nThe Unity engine on which KSP runs was chosen in part because it already had the rigid-body physics engine they would need; it\u0027s not a super-optimized engine, and it only runs on a single thread per vessel, but it existed. It runs reasonably well on small part count vessels, but really chugs once you get past a certain level. What doesn\u0027t help in the slightest is that the physics engine exhibits super-linear scaling; for N parts, it needs to do more than O(N) calculations.\n\u003C/p\u003E\n\u003Cp\u003E\nI can\u0027t right now say it\u0027s impossible, but I can say with reasonable confidence that it would be an enormous coding project to offload physics calculations to an OpenCL kernel, and I doubt Squad has the money to see that through.\n\u003C/p\u003E\n"},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2017-06-12T06:55:22Z","Content":"\n\u003Cp\u003E\nIt depends on the type of physics.\u00A0 Joint physics, which is what KSP primarily uses between parts, can\u0027t effectively be done on a GPU.\u00A0 Cloth and smoke/steam physics can be done well on a CPU, so in theory if Unity supported it, they could add a more realistic engine plume... or a more realistic flag at \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E.\u00A0 Ultimately it isn\u0027t worth it.\u00A0 The Smoke Screen mod does just fine without it and who cares about the flag at \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E?\n\u003C/p\u003E\n"},{"CreatedByName":"JaredTheDragon","CreatedById":137445,"CreatedDateTime":"2017-06-12T16:26:46Z","Content":"\n\u003Cp\u003E\nThere are several decent GPU-based physics engines that \u003Cem\u003Ecould\u003C/em\u003E vastly improve KSP, but implementing them inside Unity is probably a massive task and very tedious. KSP gets most physics right, or close enough for the game\u0027s sake.\u003Cbr\u003E\u003Cbr\u003E\nPhysX would mean \u003Cem\u003Eonly\u003C/em\u003E Nvidia-GPU users would benefit, and it does have its benefits but also its flaws. Bullet is probably just too slow - usually firing up a blank scene takes much longer than PhysX, for example. You\u0027d really feel that in-game.\n\u003C/p\u003E\n\u003Cp\u003E\nI use GPU-physics all the time in Maya but you can\u0027t directly compare that to Unity. Not even the same universe, really. A better comparison would be Universe Sandbox\u00B2, which is a beautiful use of GPU physics but still only recreates a gravity field, not the unified gravity/charge field we experience in reality. For example, the elliptical orbits of the planets are hard-coded, not the dynamic gravity/charge orbits we have in real life.\u003Cbr\u003E\u003Cbr\u003E\nWhat I\u0027d like to see someday is the Universe engine inside KSP. Along with the Planetbase engine. But hey, a dragon can dream, right?\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022us2pe1.jpg\u0022 class=\u0022ipsImage\u0022 src=\u0022https://www.rockpapershotgun.com/images/15/aug/us2pe1.jpg\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2017-06-12T22:10:05Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223088569\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497227392\u0022 data-ipsquote-userid=\u0022146422\u0022 data-ipsquote-username=\u0022322997am\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, 322997am said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents ipsClearfix\u0022\u003E\n\u003Cp\u003E\nThis is more of a unity question, but how worth it would it be to do physics on a GPU. In theory, KSP physics work by many simple floating point calculations, and video cards do those faster than CPUs. Would this work?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThose simple FP calculations are dependent on the results of other simple FP calculations, because KSP vessels are a set of chained, constrained rigidbodies. So you get one processing unit in the GPU waiting for the results of another before doing its part and so on down the line, and those units are less powerful individually than the FP units in a CPU. GPUs are only faster at FP stuff that is embarrassingly parallel (this is actually a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Embarrassingly_parallel\u0022 rel=\u0022external nofollow\u0022\u003Etechnical term\u003C/a\u003E), for the type of physics problem that a KSP vessel represents it would be a step backwards performance-wise, unfortunately.\n\u003C/p\u003E\n\u003Cp\u003E\nThere is some benefit to threading, though. Physics calculations of independent vessels are not usually dependent on each other, so there is some benefit to assigning one thread per vessel so they can crunch away on separate CPU cores; this is what KSP has been doing since 1.1.\n\u003C/p\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2017-06-12T23:09:28Z","Content":"\n\u003Cp\u003E\nSo far as I can tell, there are a few parallelized rigid-body dynamics solvers out there, but they haven\u0027t extensively penetrated into actual game software yet.\n\u003C/p\u003E\n\u003Cp\u003E\nWhich is kinda funny, when a big part of rigid-body dynamics is avoiding penetration.\n\u003C/p\u003E\n\u003Cp\u003E\nAs to\u00A0\u003Cem\u003Ewhy\u003C/em\u003E\u00A0they aren\u0027t being used in current games, that\u0027s due to a few different things.\n\u003C/p\u003E\n\u003Cp\u003E\n#1: Only relatively recently did it become the case that consumer CPUs became multithreaded and GPUs used for anything but pixel-pushing.\n\u003C/p\u003E\n\u003Cp\u003E\n#2: It takes a long, long time for algorithms developed in academica to find their way into industrial/commercial code. For an example, free energy perturbation, despite being used for quite a while now, only recently started to get used in a serious fashion by the pharmaceutical industry.\n\u003C/p\u003E\n\u003Cp\u003E\n#3: Academic implementations of sophisticated algorithms tend not\u00A0to lend themselves well to becoming a commercially viable API, something about \u0022who cares about the code being clean, we need data to put in the grant, now get it finished so I can graduate you and get tenure\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n#4: Not many games call for rigid-body dynamics on the vast scale KSP does. Squad doesn\u0027t have the resources to write an OpenCL kernel for rigid-body dynamics working from primary literature; an organization like the people behind Unity might, but they just don\u0027t have many customers who need that sort of performance, so their current single-threaded CPU implementation is good enough.\n\u003C/p\u003E\n\u003Cp\u003E\n#5: The math can get ferociously complicated in a hurry, and whatever is difficult on single-threaded CPU codes is an endeavour to parallelize and a Herculean task to make work efficiently on a GPU... assuming it\u0027s even a problem that parallelizes in the first place.\n\u003C/p\u003E\n"},{"CreatedByName":"mattinoz","CreatedById":118580,"CreatedDateTime":"2017-06-13T07:34:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223089584\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497305405\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThose simple FP calculations are dependent on the results of other simple FP calculations, because KSP vessels are a set of chained, constrained rigidbodies. So you get one processing unit in the GPU waiting for the results of another before doing its part and so on down the line, and those units are less powerful individually than the FP units in a CPU. GPUs are only faster at FP stuff that is embarrassingly parallel (this is actually a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Embarrassingly_parallel\u0022 rel=\u0022external nofollow\u0022\u003Etechnical term\u003C/a\u003E), for the type of physics problem that a KSP vessel represents it would be a step backwards performance-wise, unfortunately.\n\u003C/p\u003E\n\u003Cp\u003E\nThere is some benefit to threading, though. Physics calculations of independent vessels are not usually dependent on each other, so there is some benefit to assigning one thread per vessel so they can crunch away on separate CPU cores; this is what KSP has been doing since 1.1.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cdiv\u003E\n\u003Cdiv title=\u0022Found 3 errors in text\u0022\u003E\n3\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCould one vessel be considered as multiple chunks of vessel that have collided?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nLike a train, the\u00A0engine can be moving for seconds before the end car starts to roll.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI wonder why the physics engine couldn\u0027t do the same with a staged rocket and still have a convincing game worthy simulation. Considering a physics frame is a such a short amount of time if it took a few frames for a change in the forces to propagate through the entire collection.\u00A0 Would it matter if the top of the rocket was providing feedback forces based on thrust from the bottom of rocket 100ms ago?\n\u003C/p\u003E\n"},{"CreatedByName":"Boris-Barboris","CreatedById":133181,"CreatedDateTime":"2017-06-13T08:05:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223089996\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497339295\u0022 data-ipsquote-userid=\u0022118580\u0022 data-ipsquote-username=\u0022mattinoz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n26 minutes ago, mattinoz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI wonder why the physics engine couldn\u0027t do the same with a staged rocket and still have a convincing game worthy simulation. Considering a physics frame is a such a short amount of time if it took a few frames for a change in the forces to propagate through the entire collection.\u00A0 Would it matter if the top of the rocket was providing feedback forces based on thrust from the bottom of rocket 100ms ago?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, it would be unplayable. Difference schemes build like this (equations used to get world state on the next time slice) tend to be unstable and violate physical laws, no matter how small the time step is, that\u0027s why alternative class of methods are used - and those methods are naturally serial.\n\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2017-06-13T14:12:24Z","Content":"\n\u003Cp\u003E\nOkay, joints physics on a single thread per craft, that\u0027s how it is. But since thermal calculations have no effect on materials or joints in any way except destruction, couldn\u0027t we have those in a separate thread? And if there\u0027s not much to gain with low part count, maybe with high part count or multiple vessels? Imagine three vessels on a quad core, one core does all the thermals.\n\u003C/p\u003E\n"},{"CreatedByName":"Boris-Barboris","CreatedById":133181,"CreatedDateTime":"2017-06-13T15:22:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223090229\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497363144\u0022 data-ipsquote-userid=\u002250750\u0022 data-ipsquote-username=\u0022Azimech\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Azimech said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBut since thermal calculations have no effect on materials or joints in any way except destruction, couldn\u0027t we have those in a separate thread?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThey depend on part-sun orientation\\relative position, wich requires said position. Unity does not allow to qeury and modify it\u0027s objects from threads other than main, wich forces the programmer to reinvent the wheel and move most of the game state to C# runtime. And the reason for that is very simple - crap engine.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-13T15:22:39Z\u0022 title=\u002206/13/2017 03:22  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 13, 2017\u003C/time\u003E by Boris-Barboris\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2017-06-13T15:50:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223090298\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497367337\u0022 data-ipsquote-userid=\u0022133181\u0022 data-ipsquote-username=\u0022Boris-Barboris\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n27 minutes ago, Boris-Barboris said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThey depend on part-sun orientation\\relative position, wich requires said position. Unity does not allow to qeury and modify it\u0027s objects from threads other than main, wich forces the programmer to reinvent the wheel and move most of the game state to C# runtime. And the reason for that is very simple - crap engine.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks for the explanation. I was wondering about this for years.\n\u003C/p\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2017-06-13T23:15:40Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223090298\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497367337\u0022 data-ipsquote-userid=\u0022133181\u0022 data-ipsquote-username=\u0022Boris-Barboris\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Boris-Barboris said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd the reason for that is very simple - crap engine.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPersonally, I\u0027d argue that for what it was meant for, Unity is an excellent engine. By limiting access to variables to the main thread, novice programmers don\u0027t wind up 10 feet under in synchronization issues.\n\u003C/p\u003E\n\u003Cp\u003E\nUnity might not be a high-performance engine, but for the tasks it was designed for, it is a good engine, because most of what it\u0027s intended for are mobile and indie games where the CPU wakes up for a couple hundred microseconds, yawns, registers the user input, moves a couple variables around, and goes back to sleep for another few milliseconds.\n\u003C/p\u003E\n\u003Cp\u003E\nI would prefer it were KSP on a higher-performance game engine, but I entirely understand why they chose Unity: it was free, had an extensive API, rigid-body dynamics were already implemented, and so Squad could get KSP off the ground quite quickly so we could get our rockets off the ground.\n\u003C/p\u003E\n"},{"CreatedByName":"Boris-Barboris","CreatedById":133181,"CreatedDateTime":"2017-06-13T23:20:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223090791\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497395740\u0022 data-ipsquote-userid=\u0022122674\u0022 data-ipsquote-username=\u0022Starman4308\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Starman4308 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPersonally, I\u0027d argue that for what it was meant for, Unity is an excellent engine.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI personally don\u0027t judge things for \u0022what they were ment for\u0022.\n\u003C/p\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2017-06-13T23:21:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223090795\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497396006\u0022 data-ipsquote-userid=\u0022133181\u0022 data-ipsquote-username=\u0022Boris-Barboris\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, Boris-Barboris said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI personally don\u0027t judge things for \u0022what they were ment for\u0022.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe Saturn V was truly a terrible paperweight, indeed. Way too heavy to be practical.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s almost as though there are multiple programming tools for multiple types of problem.\n\u003C/p\u003E\n"},{"CreatedByName":"Boris-Barboris","CreatedById":133181,"CreatedDateTime":"2017-06-13T23:31:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223090798\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497396074\u0022 data-ipsquote-userid=\u0022122674\u0022 data-ipsquote-username=\u0022Starman4308\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 minutes ago, Starman4308 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s almost as though there are multiple programming tools for multiple types of problem.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nEnter \u0022Unity3d\u0022 in google. First sentence I see, quote: \u0022\u003Cspan\u003E\u003Cem\u003EUnity\u003C/em\u003E is the ultimate game development platform. Use \u003Cem\u003EUnity\u003C/em\u003E to build high-quality \u003Cem\u003E3D\u003C/em\u003E and 2D games, deploy them across mobile, desktop, VR/AR, consoles or the\u003C/span\u003E...\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nI expect much more from an ultimate platform for high-quality games.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-13T23:32:01Z\u0022 title=\u002206/13/2017 11:32  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 13, 2017\u003C/time\u003E by Boris-Barboris\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2017-06-13T23:33:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223090807\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497396697\u0022 data-ipsquote-userid=\u0022133181\u0022 data-ipsquote-username=\u0022Boris-Barboris\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, Boris-Barboris said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nEnter \u0022Unity3d\u0022 in google. First sentence I see, quote: \u0022\u003Cspan\u003E\u003Cem\u003EUnity\u003C/em\u003E is the ultimate game development platform. Use \u003Cem\u003EUnity\u003C/em\u003E to build high-quality \u003Cem\u003E3D\u003C/em\u003E and 2D games, deploy them across mobile, desktop, VR/AR, consoles or the\u003C/span\u003E...\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nI expect much more of an ultimate platform for high-quality games.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat is marketing hype. There is a reason it is called hype: because it is exaggerated to get people to use it.\n\u003C/p\u003E\n"},{"CreatedByName":"Boris-Barboris","CreatedById":133181,"CreatedDateTime":"2017-06-13T23:36:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223090809\u0022 data-ipsquote-contentid=\u0022161965\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497396790\u0022 data-ipsquote-userid=\u0022122674\u0022 data-ipsquote-username=\u0022Starman4308\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, Starman4308 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat is marketing hype. There is a reason it is called hype: because it is exaggerated to get people to use it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s why you don\u0027t assume anything about \u0022the tasks it was designed for\u0022 and form your own opinion, comparing with other solutions and your needs\\ideals. You\u0027ve seen my opinion, I\u0027ve seen yours.\n\u003C/p\u003E\n"},{"CreatedByName":"Vanamonde","CreatedById":27914,"CreatedDateTime":"2017-06-14T02:59:32Z","Content":"\n\u003Cp\u003E\nThis thread is wandering from its topic. Please return to it.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"JaredTheDragon","CreatedById":137445,"CreatedDateTime":"2017-06-17T18:53:01Z","Content":"\n\u003Cp\u003E\nThis is yet another example of \u0022going the cheap route\u0022 to design something that shouldn\u0027t be done cheaply. Unity is what it is - a basic game development engine. It was never intended to replace or compete with CryEngine or Frostbite, much less Unreal. When KSP began, however, the cost to license Unreal was also unreal, so Squad chose to go with a free engine that at least let them get the game up and running rapidly and still allowed them to take a paycheck. Unreal has since changed their pricing scheme, but unless Squad were to hand off the project to another team with more Unreal experience and prep KSP 2.0 for Unreal instead, it\u0027s just not going to happen.\u003Cbr\u003E\u003Cbr\u003E\nCases in point: Subnautica vs. Everspace. Subnautica is a great game so far, a huge underwater landscape several square KM in size and 1KM in depth, give or take. It\u0027s the best of its kind - but is still a Unity game. It stutters everywhere, even on the best machines. The graphics aren\u0027t great. The water is nice enough and has come a long way, but doesn\u0027t behave much like a liquid.\u003Cbr\u003E\u003Cbr\u003E\nThen you have Everspace, on the Unreal engine. It\u0027s even bigger than Subnautica, as its in space, and has roughly the entire volume of Subnautica in every level - which are procedurally generated and different every time you play. It\u0027s beautiful. It\u0027s smooth as silk, even on lower-end machines. The controls are not only perfect but genre-redefining. It\u0027s everything Subnautica isn\u0027t.\u003Cbr\u003E\u003Cbr\u003E\nI don\u0027t see KSP switching engines at this point, so what we can hope for is ANOTHER game, similar, but using the Big Kid engine instead. If KSP continues to garner such fan support, I have no doubt a Big Kid game in the same vein would get even more support.\u003Cbr\u003E\u003Cbr\u003E\nAnd Unreal supports GPU-based physics far, far better than Unity.\n\u003C/p\u003E\n"},{"CreatedByName":"tugrul_8bit_gpu","CreatedById":178970,"CreatedDateTime":"2017-06-18T00:37:05Z","Content":"\n\u003Cp\u003E\nIf only for C# and windows, you can use cekirdekler api. You can try different things with a few lines of code. If you don\u0027t want to write your own kernels then you may need to wrap arrayfire library.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/Ep-36Lpqngc?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Arugela","CreatedById":133381,"CreatedDateTime":"2017-06-18T07:16:07Z","Content":"\n\u003Cp\u003E\nWhat if instead of changing the whole game. They changed it so multiple physics options were available to load per craft. You could simply make it so the craft has a notation as to which physics to load on runway/launchpad. Then you can mark it in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E/\u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E and make different craft. Or if needed have different saves with different options for which physics on start. It would be easier than replacing one type as far as player end. And it gives more options to players.\n\u003C/p\u003E\n\u003Cp\u003E\nHas anyone nagged unity to make more physics available by default. I bet all games would use them. The argument about not adding more because existing customers not using more is a bad argument because they technically just made games based on the engines abilities at the time. So, of course they don\u0027t use more!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-18T07:22:04Z\u0022 title=\u002206/18/2017 07:22  AM\u0022 data-short=\u00227 yr\u0022\u003EJune 18, 2017\u003C/time\u003E by Arugela\u003C/strong\u003E\n\u003C/span\u003E\n"}]}