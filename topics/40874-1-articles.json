{"TopicId":40874,"ForumId":55,"TopicTitle":"Add a programming-like function to the Action Group creator.","CreatedByName":"quietsamurai98","CreatedById":69270,"CreatedDateTime":"2013-08-03T21:27:43Z","PageNum":1,"Articles":[{"CreatedByName":"quietsamurai98","CreatedById":69270,"CreatedDateTime":"2013-08-03T21:27:43Z","Content":"\n\u003Cp\u003EIf action groups could be programmed to act like a launch sequence, it would add a whole new layer to rocket design. \u003C/p\u003E\u003Cp\u003EProof of concept/ravings of mad man:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003ERepresenting each individual part with an ID\u003C/span\u003E, with a format like this: \u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u0026lt;PartType\u0026gt;.\u0026lt;SymmetryGroupNumber\u0026gt;.\u0026lt;PartNumber\u0026gt;\u003C/pre\u003E\u003Cp\u003E.\u003Cbr\u003EBreakdown:\u003Cbr\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EPartType: Abbreviation for what part it is. Examples: SprtSRB for the Sepratron SRB, MnslENG for the Mainsail Engine, JmbLFT for the Rockomax Jumbo-64 Fuel Tank, and so on.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESymmetryGroupNumber: The symmetry group of the PartType that the specific part is in, numbered by chronological order of placement. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EPartNumber: Which part the specific part is, with the the part closest to the launchpad being 1 (in case of a tie, the rightmost part is 1), then the number goes up by one going clockwise. 0 means the whole group.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFor example, the part \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMnslENG.2.4\u003C/pre\u003E\u003Cp\u003E is the 4\u003Csup\u003Eth\u003C/sup\u003E part in the group of Mainsails that was placed second.\u003C/p\u003E\u003Cp\u003E[*]\u003Cspan style=\u0022font-size:18px;\u0022\u003ECommands\u003C/span\u003E could:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ETell the specified part(s) to do something, like to decouple, turn on, turn off, etc., with a format like \u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u0026lt;Action\u0026gt;(\u0026lt;PartID\u0026gt;)\u003C/pre\u003E\u003Cp\u003E. For example, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EActv(SprtSRB.5.0)\u003C/pre\u003E\u003Cp\u003E would activate the fifth group of Sepratrons, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EDcpl(RmxDcplrDCPLR.3.1)\u003C/pre\u003E\u003Cp\u003E would decouple the first member of the 3\u003Csup\u003Erd\u003C/sup\u003E group of Rockomax Brand Decouplers, and so on.\u003Cbr\u003E\u003C/p\u003E\u003C/li\u003E\u003Cli\u003ETell the craft to do something, like change the throttle, toggle RCS/SAS, point in a direction, etc. For example: \u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EThrottle(80)\u003C/pre\u003E\u003Cp\u003E Would set the throttle to 80%, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ESAS(Tgl)\u003C/pre\u003E\u003Cp\u003E toggles SAS, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ERCS(On)\u003C/pre\u003E\u003Cp\u003E turns on RCS if it was off, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPntDir(0,0)\u003C/pre\u003E\u003Cp\u003E tells RCS and/or SAS to rotate so it is facing 0 degrees (north) and to turn 0 degrees from the zenith, or from straight up, relative to the body that is being orbited (This is the starting orientation of nearly all spacecraft in KSP).\u003Cbr\u003E\u003C/p\u003E\u003C/li\u003E\u003Cli\u003ETell the program to do something, like to pause and wait, to terminate, to restart, etc. Examples: \u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ESleep(1000)\u003C/pre\u003E\u003Cp\u003E would cause to program to wait 1000 ms (1 second) before continuing, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EEndProgram\u003C/pre\u003E\u003Cp\u003E would end the program, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ERestrt\u003C/pre\u003E\u003Cp\u003E would restart the program from the beginning.\u003Cbr\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]\u003Cspan style=\u0022font-size:18px;\u0022\u003EAttributes\u003C/span\u003E could say what percent full a tank is, if a part is still connected to the main craft, the velocity of the craft, how overheated an engine is, what percentage the throttle is, etc. Examples: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EJmbLFT.5[Fuel.Liquid.Prct]\u003C/pre\u003E\u003Cp\u003E would return 1 if the tank is full, 0 if empty, 0.5 if 50% full, ect., \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMnslENG.1.0[Cnctd]\u003C/pre\u003E\u003Cp\u003E would return 1 if the first group of Mainsails is still connected, 0 if not, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ECraft[Vel]\u003C/pre\u003E\u003Cp\u003E would return the craft velocity in m/s, etc. Adding .Any to the end of an attribute selection returns the value for each part in a group of parts.\u003C/p\u003E\u003Cp\u003E[*]\u003Cspan style=\u0022font-size:18px;\u0022\u003ELoops and blocks\u003C/span\u003E would be things like \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ERepeat[\u0026lt;Int value\u0026gt;]{\u0026lt;Code\u0026gt;}\u003C/pre\u003E\u003Cp\u003E, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EWhile[bool]{\u0026lt;Code\u0026gt;}\u003C/pre\u003E\u003Cp\u003E, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUntil[bool]{\u0026lt;Code\u0026gt;}\u003C/pre\u003E\u003Cp\u003E, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EIf[Bool]{\u0026lt;Code\u0026gt;}\u003C/pre\u003E\u003Cp\u003E, \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EIf[bool]{Then{\u0026lt;Code\u0026gt;} Else {\u0026lt;Code\u0026gt;}}\u003C/pre\u003E\u003Cp\u003E, etc.\u003C/p\u003E\u003Cp\u003E[*]\u003Cspan style=\u0022font-size:18px;\u0022\u003ELogic\u003C/span\u003E would consist of bool operators, like And, Or, Xor, Not,\u0026lt;, \u0026gt;, =\u0026lt;, =\u0026gt;, =, etc., which would compare Attributes. For example, (JmbLFT.1.0[Fuel.Liquid.Prct]=0) OR (MnslENG.1.0[Cnctd]=0) returns 1 if all fuel tanks in group 1 are empty or if all Mainsails in group 1 are not connected to the craft, and returns 0 if all tanks are not empty and all Mainsails are still connected to the ship.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EExample of a program:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EUntil[JmbLFT.1.0[Fuel.Liquid.Prct]=0]{\u003Cbr\u003ESleep(1)\u003Cbr\u003E}\u003Cbr\u003EStg(Nxt)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe above code waits until the first group of Jumbo tanks are empty, then advances to the next stage. This could be used as a way to save fuel, to create automated launch sequences, etc.\u003C/p\u003E\u003Cp\u003ENow, for something more complicated.\u003C/p\u003E\u003Cp\u003EThis is a basic autopilot example script that I thought of. It will guide a craft into a non circular, stable orbit, but it only points the craft and adjusts the throttle. The staging is manual, and the player must turn RCS on if wanted while still in the atmosphere.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EThrottle(80)\u003Cbr\u003EUntil[Craft[Alt]=\u0026gt;10000]{\u003Cbr\u003E PntDir(90,0)\u003Cbr\u003E}\u003Cbr\u003EUntil[Craft[Alt]=\u0026gt;70000]{\u003Cbr\u003E PntDir(90,45)\u003Cbr\u003E}\u003Cbr\u003EThrottle(0)\u003Cbr\u003ERCS(On)\u003Cbr\u003EUntil[Craft[Alt]=Craft[Ap]]{\u003Cbr\u003E PntDir(90,90)\u003Cbr\u003E}\u003Cbr\u003EUntil[Craft[Pr]=\u0026gt;70000]{\u003Cbr\u003E Throttle(80)\u003Cbr\u003E PntDir(90,90)\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EThrottle(0)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBreakdown of script:\u003C/p\u003E\u003Cp\u003E1. Throttle to 80%, so that engines with be near 100% but not overheat (if using Mainsails).\u003C/p\u003E\u003Cp\u003E2. Point straight up and face east until the craft passes 10000 meters (Takeoff and ascent).\u003C/p\u003E\u003Cp\u003E3. Turn 45 degrees east of straight up until the craft passes 70000 meters (Gravity turn).\u003C/p\u003E\u003Cp\u003E4. Cut the throttle, and turn on RCS, as fins don\u0027t work in outer space.\u003C/p\u003E\u003Cp\u003E5. Point parallel to the ground, pointing east, until the craft has reached the apoapsis.\u003C/p\u003E\u003Cp\u003E6. Maintaining the current orientation, throttle up to 80%, until the periapsis has passed 70000 meters, the lowest possible periapsis for a stable orbit around Kerbin.\u003C/p\u003E\u003Cp\u003EPrimitive guidance system I coded in five minutes. Don\u0027t criticize me, I know it\u0027s a blob of spaghetti code. \u003C/p\u003E\u003Cp\u003EMmm... Italian... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EAlso, a friend told me that for beginners, that drag and drop block coding could be simpler, and have a more gentle learning curve. \u003C/p\u003E\u003Cp\u003EExample of Drag and Drop coding (shown in an old version of \u003Ca href=\u0022http://scratch.mit.edu\u0022 rel=\u0022external nofollow\u0022\u003EScratch\u003C/a\u003E):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/pkhjX792yVI?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EThis idea could be an amazing addition to the game, allowing players with enough skill to make fully automated launchpad to orbit sequences, automated rovers, landing sequences, anything, as long as your coding skills are good enough.\u003C/p\u003E\u003Cp\u003EConcerning the ban on suggesting autopilots:\u003C/p\u003E\u003Cp\u003EI fully believe that this system would be balanced, as a player would need skill, knowledge, planning, and time to write a complex code, as opposed to autopilots like MechJeb, which require next to no skill to use.\u003C/p\u003E\u003Cp\u003EThanks for reading this post despite the extreme length and unnecessary detail.\u003C/p\u003E\u003Cp\u003ESorry for the long post, especially if it makes no sense to you. I\u0027ve kinda confused myself now.\u003C/p\u003E\u003Cp\u003EPlease post feedback on the idea.\u003C/p\u003E\u003Cp\u003EThanks,\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E--\u003C/div\u003E\u003Cem\u003E\u003C/em\u003E\u003Cdiv\u003E\u003Cem\u003EThe Quiet Samurai\u003C/em\u003E\u003C/div\u003E\u003Cem\u003E\u003C/em\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEDIT: I just found Autom8, so I want to preemptively address any people who say to just use that.\u003C/p\u003E\u003Cp\u003EI think that a simple to understand, reads like English, easy to learn, language would be great for the future game; as a readable and easy to learn and use language would not be as intimidating to new players/coders as a more complex language, like lua or C/C#, is.\u003C/p\u003E\u003Cp\u003EI can speak from experience: being overwhelmed by something, especially programming, at first glance can make you very reluctant to even attempt to learn it, even under different circumstances. My dad tried, and to a degree succeeded, to teach me KPL when I was 6-7, and I never really enjoyed coding until about 3 years later, when I happened to find a rather simple language called \u003Ca href=\u0022http://scratch.mit.edu\u0022 rel=\u0022external nofollow\u0022\u003EScratch\u003C/a\u003E, and only then did I begin to like coding. \u003C/p\u003E\u003Cp\u003EIf people get turned off of coding by KSP, they may never give it another chance, and that would be the opposite of my intentions; to introduce programming to people in an approachable way in a fun environment.\u003C/p\u003E\u003Cp\u003EThis is just my own musings on how a block based system could work, just ignore it.\u003C/p\u003E\u003Cp\u003EOr try to decipher the syntax and connect the meanings to the blocks used in Scratch, which is my inspiration for this syntax.\u003C/p\u003E\u003Cp\u003EBlock Code Visual Text Representation\u003C/p\u003E\u003Cp\u003E|\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EWhen (P) Released\u003C/span\u003E|\u003C/p\u003E\u003Cp\u003E|| |\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EUntil \u0026lt;(P) Pressed\u0026gt;\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E|| ||\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EUntil \u0026lt;(FuelPercent[FuelTank.Group.Last])=(0)\u0026gt;\u003C/span\u003E|\u003C/p\u003E\u003Cp\u003E|| ||\u003Cspan style=\u0022text-decoration:underline;\u0022\u003ESleep(1)\u003C/span\u003E|\u003C/p\u003E\u003Cp\u003E|| ||\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E=====\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E|| |\u003Cspan style=\u0022text-decoration:underline;\u0022\u003ENext Stage\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E||\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E=====\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E|\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EStop\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ELine by line explanation:\u003C/p\u003E\u003Cp\u003EWhen the P key is released,\u003C/p\u003E\u003Cp\u003E Repeat the following until P key is pressed:\u003C/p\u003E\u003Cp\u003E Repeat the following until the still connected group of fuel tanks that was last placed is empty,\u003C/p\u003E\u003Cp\u003E Wait 1 ms\u003C/p\u003E\u003Cp\u003E Loop to beginning of this repeat until loop (line 3).\u003C/p\u003E\u003Cp\u003E Activate the next stage,\u003C/p\u003E\u003Cp\u003E Loop to beginning of this repeat until loop (line 2).\u003C/p\u003E\u003Cp\u003EStop Program.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-04T04:03:58Z\u0022 title=\u002208/04/2013 04:03  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 4, 2013\u003C/time\u003E by quietsamurai98\u003C/strong\u003E\n\u003Cbr\u003Ecode block musings\n\u003C/span\u003E\n"},{"CreatedByName":"Themohawkninja","CreatedById":9628,"CreatedDateTime":"2013-08-03T21:41:31Z","Content":"\n\u003Cp\u003EMaybe I\u0027m biased, being a programmer myself, but OH MY GOD YES!\u003C/p\u003E\u003Cp\u003EYou could have things automatically fire/decouple when a tank runs out of fuel. This would be so cool!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-03T22:58:32Z\u0022 title=\u002208/03/2013 10:58  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 3, 2013\u003C/time\u003E by Themohawkninja\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Beeman","CreatedById":28178,"CreatedDateTime":"2013-08-03T21:57:29Z","Content":"\n\u003Cp\u003EI feel like this would be a good alternative to what we have now. But like...keep what we have now, if that makes sense. Like, maybe in the options there\u0027d be a gameplay toggle for action groups and what we have now can be simplified action groups while something like that can be expanded action groups.\u003C/p\u003E\u003Cp\u003EIf all we had was super complex action groups, it\u0027d overwhelm a lot of people, especially when it\u0027s their first time playing. Or even some of us who play a lot but just don\u0027t know much about what we\u0027re doing. True trial-and-error KSPers XD\u003C/p\u003E\n"},{"CreatedByName":"quietsamurai98","CreatedById":69270,"CreatedDateTime":"2013-08-03T22:01:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Beeman\u0022 data-cite=\u0022Beeman\u0022\u003E\u003Cdiv\u003EI feel like this would be a good alternative to what we have now. But like...keep what we have now, if that makes sense. Like, maybe in the options there\u0027d be a gameplay toggle for action groups and what we have now can be simplified action groups while something like that can be expanded action groups.\u003Cp\u003EIf all we had was super complex action groups, it\u0027d overwhelm a lot of people, especially when it\u0027s their first time playing. Or even some of us who play a lot but just don\u0027t know much about what we\u0027re doing. True trial-and-error KSPers XD\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt could be like another tab, like the tabs for Parts, Action Groups, and Crew. Maybe call it Advanced Action Programmer\u003C/p\u003E\n"},{"CreatedByName":"Beeman","CreatedById":28178,"CreatedDateTime":"2013-08-03T22:26:40Z","Content":"\n\u003Cp\u003EThat could also work \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-08-03T22:46:20Z","Content":"\n\u003Cp\u003EToo much abbreviations in the proof of concept I think (Do we really want to type Dcpl instead of Decouple? Does it really saves time?), but I really like your concept. It can be a much better approach for the \u0022non-mod\u0022 beginners to have automated parts.\u003C/p\u003E\u003Cp\u003ENow script implementation is something big to add, and will take time. But this is an awesome idea to being able to write autopilots.\u003C/p\u003E\n"},{"CreatedByName":"quietsamurai98","CreatedById":69270,"CreatedDateTime":"2013-08-03T22:57:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SolarLiner\u0022 data-cite=\u0022SolarLiner\u0022\u003E\u003Cdiv\u003EToo much abbreviations in the proof of concept I think (Do we really want to type Dcpl instead of Decouple? Does it really saves time?)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAbbreviations are more or less standard in coding. I think that abbreviations are faster than normal text, but the main draw, at least for me, is that they are easier to spell.\u003C/p\u003E\u003Cp\u003ECase and point: I was originally going to say Dcpl and decouple in that last sentence, but after trying and failing to spell decouple five times, I just changed the sentence. I got Dcpl on the first try.\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-08-03T23:07:16Z","Content":"\n\u003Cp\u003EYeah, I\u0027m not that much of an abbreviation guy. I use them when I see an improvement in the typing speed.\u003C/p\u003E\u003Cp\u003EAfter that, I\u0027m used to VS who gives me all the vars names and such. In a simple text file (like when I do PHP) I like to use them a bit more often. But still, I like when I can read properly on the first try who\u0027s who and what does what.\u003C/p\u003E\n"},{"CreatedByName":"quietsamurai98","CreatedById":69270,"CreatedDateTime":"2013-08-03T23:27:28Z","Content":"\n\u003Cp\u003EI see what you\u0027re saying, and I agree that abbreviating most actions doesn\u0027t really matter, but for things like parts and longer actions, it would probably get old typing \u0027Mainsail.#.#\u0027 or \u0027LargeStackDecoupler.#.#\u0027 or \u0027JumboTank.#.#[Fuel.Liquid.PercentFull]\u0027 over and over again.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-03T23:30:01Z\u0022 title=\u002208/03/2013 11:30  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 3, 2013\u003C/time\u003E by quietsamurai98\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MrKicker","CreatedById":77424,"CreatedDateTime":"2013-08-04T01:05:09Z","Content":"\n\u003Cp\u003EHow about using dropdown menus with the words of code in them and ditch typing completly. More user friendly for those who dont know that mutch about computers.\u003C/p\u003E\n"},{"CreatedByName":"quietsamurai98","CreatedById":69270,"CreatedDateTime":"2013-08-04T03:57:36Z","Content":"\n\u003Cp\u003EAlso, here is a basic autopilot example script that I just thought of, that will put a craft into a non circular orbit, but it only points the craft and adjusts the throttle. The staging is manual, and the player must turn RCS on if wanted while still in the atmosphere.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EThrottle(80)\u003Cbr\u003E\u003Cbr\u003EUntil[Craft[Alt]=\u0026gt;10000]{\u003Cbr\u003E PntDir(90,0)\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EUntil[Craft[Alt]=\u0026gt;70000]{\u003Cbr\u003E PntDir(90,45)\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EThrottle(0)\u003Cbr\u003ERCS(On)\u003Cbr\u003E\u003Cbr\u003EUntil[Craft[Alt]=Craft[Ap]]{\u003Cbr\u003E PntDir(90,90)\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EUntil[Craft[Pr]=\u0026gt;70000]{\u003Cbr\u003E Throttle(80)\u003Cbr\u003E PntDir(90,90)\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EThrottle(0)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBreakdown of script:\u003C/p\u003E\u003Cp\u003E1. Throttle to 80%, so that engines with be near 100% but not overheat (if using Mainsails).\u003C/p\u003E\u003Cp\u003E2. Point straight up and face east until the craft passes 10000 meters (Takeoff and ascent).\u003C/p\u003E\u003Cp\u003E3. Turn 45 degrees east of straight up until the craft passes 70000 meters (Gravity turn).\u003C/p\u003E\u003Cp\u003E4. Cut the throttle, and turn on RCS, as fins don\u0027t work in outer space.\u003C/p\u003E\u003Cp\u003E5. Point parallel to the ground pointing east, until the craft has reached the apoapsis\u003C/p\u003E\u003Cp\u003E6. Maintaining the current orientation, throttle up to 80%, until the periapsis has passed 70000 meters, the lowest possible periapsis for a stable orbit around Kerbin\u003C/p\u003E\u003Cp\u003ESimple \u0027auto guidance\u0027 system for launchpad to Kerbin orbit. Not really autopilot as there isn\u0027t autostaging or sophistication. Just a little proof of concept.\u003C/p\u003E\n"},{"CreatedByName":"quietsamurai98","CreatedById":69270,"CreatedDateTime":"2013-08-04T04:04:25Z","Content":"\n\u003Cp\u003EDouble Post\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_lipssealed.gif\u0022 alt=\u0022:sealed:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Beeman","CreatedById":28178,"CreatedDateTime":"2013-08-04T04:29:58Z","Content":"\n\u003Cp\u003EI like the scratch idea, where you use...in KSP they\u0027d probably just be buttons for words and functions and things. So maybe action group one would have x number of buttons that you can define to certain parts, then give those parts functions. \u003C/p\u003E\u003Cp\u003ELet\u0027s say we click action group one, a panel shifts open to the right with...let\u0027s say ten buttons. You..maybe click a button then click a part to assign that part to that button. Then another panel shifts over to the right from the engine button and you can assign one(or possibly more, depending on how complicated this system is already) action to that button. Maybe some of the actions can have parameters that you can manually adjust for numeric values. Like activating the selected engines at eighty percent or using your SAS controller to tilt the craft at a specific heading with a particular inclination. Or something like that.\u003C/p\u003E\u003Cp\u003EYou then start to setup button two. Let\u0027s say the first one was launching with your engines at eighty percent and then you set your second button to wait until you reach an altitude of 10,000. You\u0027d probably have to use the command pod for the button.\u003C/p\u003E\u003Cp\u003ENext, you setup button three. Button three, you want to perform a thirty degree turn with a heading of ninety degrees. Again, you probably would need to use the command pod for this as that\u0027s kind of your SAS controller, right?\u003C/p\u003E\u003Cp\u003EThen instead of setting more buttons, you just launch. The buttons will activate from top to bottom in order for each action group that you activate. You hit action group one(whatever the hotkey might be for it) and you immediately launch with all of your engines set to eighty percent. THEN your craft just kind of goes until you reach an altitude of ten thousand meters. Finally, your craft starts to tilt just as you\u0027d designed.\u003C/p\u003E\u003Cp\u003EEssentially everything you seem to want, but with simple and accessible user interface for it.\u003C/p\u003E\u003Cp\u003EThough, that leads to autopiloting(even if you have to manually define the numbers beforehand) and I think SQUAD wants to avoid that type of thing...more or less. I don\u0027t know. Either way, might make a decent mod if someone knows how to code that stuff.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure how difficult it would be to work that out, though...I know practically nothing about coding XD\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-04T04:32:22Z\u0022 title=\u002208/04/2013 04:32  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 4, 2013\u003C/time\u003E by Beeman\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"quietsamurai98","CreatedById":69270,"CreatedDateTime":"2013-08-04T04:49:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Beeman\u0022 data-cite=\u0022Beeman\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThough, that leads to autopiloting(even if you have to manually define the numbers beforehand) and I think SQUAD wants to avoid that type of thing...more or less. \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, it kinda does lead to autopiloting. \u003C/p\u003E\u003Cp\u003EIn five minutes I coded a crude auto guidance for launch to orbit in about 5 minutes, so imagine what a really good coder with some extra time could do... Interplanetary travel? Full auto launch, Kerbin orbit, Jool transfer, aerobrake, and Laythe land landing? That would be really hard though... \u003C/p\u003E\u003Cp\u003EThe easier the task, the easier the code, so a fairly experienced KSP player could code a launch to orbit autopilot, because they basically have a \u0027script\u0027 for it in their head from doing it so many times manually. However, The more rare, advanced maneuvers, like Kerbin Launch to Jool transfer\u002Baerobrake to orbit would be near impossible to code, due to rarity and complexity of the mission. \u003C/p\u003E\u003Cp\u003EI believe that this would more or less balance out, allowing the repetitive, easy tasks to become automated with enough experience and effort, but more unfamiliar and difficult tasks being extremely hard to automate.\u003C/p\u003E\n"},{"CreatedByName":"1D-1()T","CreatedById":75340,"CreatedDateTime":"2013-08-04T04:56:52Z","Content":"\n\u003Cp\u003EI must say this is a great suggestion. This would go really well with a mod where you could collect samples or rock etc.\u003C/p\u003E\u003Cp\u003ECan you imagine sending a unmanned rover to Duna, and leave it searching for, I dunno, water or life. And it could have a satellite dish that could be set up to inform you if it finds anything.\u003C/p\u003E\u003Cp\u003EI don\u0027t think it will get into vanilla, because it could be used as an auto pilot, and might drive people away with the added complexity, but if it did make it in, or there was a mod for it I for one would use.\u003C/p\u003E\n"},{"CreatedByName":"Beeman","CreatedById":28178,"CreatedDateTime":"2013-08-04T05:09:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022quietsamurai98\u0022 data-cite=\u0022quietsamurai98\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI believe that this would more or less balance out, allowing the repetitive, easy tasks to become automated with enough experience and effort, but more unfamiliar and difficult tasks being extremely hard to automate.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI feel like if we had a UI system like scratch or the weird button thing I was talking about emulating coding without the freedom of actual coding, it would more or less balance things out on its own. They\u0027d just have to omit more advanced actions, leaving it to modders to implement those addons to the system. By limiting what actions you can assign to each button/part, you effectively limit the player\u0027s ability to fully automate flights. Or restrict certain actions to pilot skill, since I remember one of the devs saying something about training crew to handle certain maneuvers on their own. Like, if you setup a button to perform a particular turn or maneuver, maybe that vehicle will require at least one crewman with piloting skill level two. Or something like that...and it won\u0027t allow a launch without that crewman?\u003C/p\u003E\u003Cp\u003EI don\u0027t know, there\u0027s a lot of interesting things to think about in this topic, though.\u003C/p\u003E\n"},{"CreatedByName":"Wice","CreatedById":57743,"CreatedDateTime":"2013-08-04T07:41:36Z","Content":"\n\u003Cp\u003EMan, I would love something like this so much! It has been suggested before but I really hope the devs ead this and implement something like it...\u003C/p\u003E\n"},{"CreatedByName":"Thorben","CreatedById":38185,"CreatedDateTime":"2013-08-04T12:18:10Z","Content":"\n\u003Cp\u003EIn the past, I also thought how cool it would be to code some kind of autopilot and to automate everything on the space craft. The problem is: What will the player have to do if there is an active autopiloting script as you suggested? Extending or retracting solar panels (not even necessary)? Watching the planet? Doing ten EVAs just because there is nothing else to do? For me, this sounds quite boring and (although I basically like the idea) I hope this will not happen. In fact, this feature would change the spirit of KSP from \u0022building and flying rockets\u0022 to \u0022building rockets, programming scripts and watching how they work\u0022. Furthermore, I guess many community members have never been programming before and in the worst case, they would stop playing KSP if it changes to much into this \u0022nerd\u0022-direction (I\u0027m programming a lot, so I\u0027m counting myself to the \u0022nerds\u0022 as well \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E). Of course, one might say \u0022don\u0027t use it if you cannot or will not write scripts\u0022 but the more parts of a game are not open to the player, the more rises the feeling of not being the right gamer for the game (just my personal guess).\u003C/p\u003E\u003Cp\u003EI hope the (already planned) crew tasks will find a way in the middle, allowing players to automate easy things (without coding) while not taking over the interesting tasks. Anyone who wants to write code for his rockets in KSP is free to write his personal autopilot mod.\u003C/p\u003E\n"},{"CreatedByName":"Beeman","CreatedById":28178,"CreatedDateTime":"2013-08-04T13:03:49Z","Content":"\n\u003Cp\u003ESome people don\u0027t care to fly the rockets that they build. Some people just want to build rockets, stations, probes, bases and so on and hop about in low gravity worlds, ragdolling left and right. Oh the hilarity~\u003C/p\u003E\u003Cp\u003ESome people just want to manage a space program, doing missions to earn money then investing that money back into the space program to take on harder missions with more advanced tech.\u003C/p\u003E\u003Cp\u003EGranted, I want to do everything, including flying my own rockets. Even so, the scratch method or the button thing I was talking about could have strict(or loose) limitations on what you can and can\u0027t actually do with the system and that\u0027s the beauty of it. The functions would still be much more robust and customizable than current action groups but not to the point where you can fully automate flight after flight. You\u0027d still have to do things to make your flights successful. There could even be, as I suggested earlier, a crew skill requirement for certain tasks.\u003C/p\u003E\u003Cp\u003EWe might even see a lot of this semi-automated rocket maneuvering anyways, depending on how they work in the flight planning features they\u0027ve got planned. Who knows? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_ohmy.png\u0022 alt=\u0022:o\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Fifi","CreatedById":76353,"CreatedDateTime":"2013-08-04T15:32:08Z","Content":"\n\u003Cp\u003EShouldn\u0027t it be better to made a part which will function as a on-board computer? It would be programmed in Lua/Python/whatver and maneuver ships for us. This would allow automatic fleet to do it\u0027s jobs.\u003C/p\u003E\u003Cp\u003EI don\u0027t know if anybody remembers this game, but connecting KSP and Colobot would be a great experience. ;\u0026gt;\u003C/p\u003E\n"},{"CreatedByName":"toric5","CreatedById":58046,"CreatedDateTime":"2013-08-05T21:43:34Z","Content":"\n\u003Cp\u003Ebig support for this! i think that because of the game/cartoony feel of kip, it should be a drag and drop, like scratch. someone go pester the devs about this!! (JK, the devs have a lot of stuff to do as it is. i just want the devs to hear about this.)\u003C/p\u003E\n"},{"CreatedByName":"Skorpion","CreatedById":4192,"CreatedDateTime":"2013-08-06T19:16:56Z","Content":"\n\u003Cp\u003EI remember ages ago Harvester asked the community about ideas for a redesign of the staging system. He eventually decided that the staging system wasn\u0027t so broken after all, so in the end not much changed (at least on the surface).\u003C/p\u003E\u003Cp\u003EHowever, one of the more developed ideas that came out of that discussion was an editable flow chart, so that you could say, for instance:\u003C/p\u003E\u003Cp\u003EIf I\u0027m in the second stage and I press the abort button:\u003C/p\u003E\u003Cp\u003E1) Separate the pod.\u003C/p\u003E\u003Cp\u003E2) Fire escape thrusters\u003C/p\u003E\u003Cp\u003E3) Delay for three seconds\u003C/p\u003E\u003Cp\u003E4) Open the parachutes.\u003C/p\u003E\u003Cp\u003E(You\u0027ll have to imagine that in flow-chart form to get the full effect.)\u003C/p\u003E\u003Cp\u003EI still like the sound of that, and now that we have action groups I can easily imagine an advanced interface that allows you to drag around nodes on a flow-chart, building actions the same way we build rockets.\u003C/p\u003E\u003Cp\u003EOne thing I\u0027ve always wanted on my tugs is to have one button that cycles between front lights and rear lights, and a second button that cycles between lights off, lights low, and lights high. That\u0027s not really possible with the action groups we have now.\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-08-06T19:29:10Z","Content":"\n\u003Cp\u003ETL;DR, stopped at the buttons for non-programmers.\u003C/p\u003E\u003Cp\u003EWHat I think about is a user-friendly IDE to quickly design ascent profiles for example, add often used functions, and has the functionality of any other IDE (colour syntaxing, assisted typing maybe?, functions help, etc...).\u003C/p\u003E\u003Cp\u003ENow the idea of a Lua/Python/Other/Custom scripting language autopilot Mod is also a great idea in the wait.\u003C/p\u003E\n"},{"CreatedByName":"Dave Kerbin","CreatedById":78777,"CreatedDateTime":"2013-08-13T18:33:24Z","Content":"\n\u003Cp\u003EFirst of course this is a great idea - as a programmer I was thinking of it myself and went searching to see if someone had already done it or started a conversation.\u003C/p\u003E\u003Cp\u003EWith regard to automation I think that is part of the point - I\u0027d love to be able to design a \u0027program\u0027 to go along with my unmanned orbital refueling stations to cover the mundane task of putting a few up in proper orbit and then deorbiting their upper stage. Different people play the game differently, and I happen to be one of those that likes the design and planning part but don\u0027t get as much out of the basic flight tasks once I\u0027ve mastered them. I think this would be a more \u0027realistic\u0027 alternative to MechJeb which I\u0027ve tried and found both \u0027cheating\u0027 a little, but at the same time worse then doing some actions manually because it wants to do them in its own way. I like to feel that any failures are because I made a specific mistake which I can then find and fix, and failures like a well tested rocket using ascent assist going out of control is much more frustrating because the reason for the failure is due to some buried code in MechJeb.\u003C/p\u003E\u003Cp\u003ELanguage wise I think using a BASIC dialect would not only match the flavor of a 60\u0027s space program, but also make it easy for non-programmers to learn and use. Strict old-school BASIC is also somewhat drag and drop friendly in the way each statement is easily identified by a keyword instead of by inference.\u003C/p\u003E\u003Cp\u003EThere are some challenges with an in-game language. You\u0027ve already got one of them, which is how to \u0027name\u0027 parts and objects for reference in code. You want it to be simple and straight forward, but still cover everything. Consider what happens when you dock spacecraft together to form a larger ship or station; You might even launch duplicates of the same craft file, like standardized orbiting fuel depots, which are then joined in orbit to create a super depot. You might also want some form of reflection that allows a program to dynamically locate a part or parts. For example DPort(#ship) would give you the first docking port part inside the #ship part tree, while DPorts(#ship) would return an array of all of them.\u003C/p\u003E\u003Cp\u003EAnother challenge is with the limitations of how KSP works - to optimize performance objects outside a certain range or above a certain time warp become simple inert masses. For practical purposes a ship stops being a complex system of working parts and instead becomes a one step orbital mass equation as soon as you go to the space center or another ship. For example if you wrote a program that turned on some running light while solar power is at zero (ship is in the dark) KSP would only be able to execute it you where directly viewing your ship at 1x or low warp (I\u0027m not sure of the exact warp steps where part function and part existance stop being simulated, based on the atmospheric warp restrictions I\u0027d say it is 4x or less).\u003C/p\u003E\u003Cp\u003EI think this means that any program would need to be something with a defined start and end, or at least the ability for the player to \u0027stop\u0027 a running program. A running program would be treated in a manner similar to the ship being throttled up - you can\u0027t warp and you can\u0027t switch to another object, which puts some serious limitations on what programs can do. Since very near objects do getsimulated it could be that a close enough objects can be \u0027remotely\u0027 commanded by your ships program.\u003C/p\u003E\n"},{"CreatedByName":"ZenithRising","CreatedById":77506,"CreatedDateTime":"2013-08-14T02:04:52Z","Content":"\n\u003Cp\u003EYou tried and failed to spell Decouple multiple times? How does that happen? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E\u003C/p\u003E\u003Cp\u003EIn any case, programming languages are moving away from abbreviations and towards readability, even going so far as to do away with typing all together and using drag and drop lego-style systems. That\u0027s definitely the direction I would like to see anything in KSP go towards. How are you suppossed to know that the proper abbreviation is dcpl and not decoup or decpl?\u003C/p\u003E\u003Cp\u003EIf anybody has used Apple\u0027s Automator, that\u0027s a pretty good example of drag-and-drop script building, and it works well. Something similar in KSP would be amazing (though obviously a huge undertaking). Something text based might be easier to implement (perhaps it could be based off of the game\u0027s existing engine?). Either way, I would love playing around with it.\u003C/p\u003E\n"}]}