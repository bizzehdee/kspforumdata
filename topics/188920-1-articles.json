{"TopicId":188920,"ForumId":20,"TopicTitle":"Python based suicide burn autopilot using the KRPC mod","CreatedByName":"marcnesium-iv","CreatedById":200756,"CreatedDateTime":"2019-10-15T22:08:20Z","PageNum":1,"Articles":[{"CreatedByName":"marcnesium-iv","CreatedById":200756,"CreatedDateTime":"2019-10-15T22:08:20Z","Content":"\n\u003Cp\u003E\nHello everyone!\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m a casual KSP player and new to this forum. Recently I finished a project which I wanted to share with you. So I saw one of those graceful Falcon 9 booster landings and thought about doing the same in KSP. I stumbled across calculations for the simplified version of a vertical suicide burn but that was not satisfying to me. Basically, it\u0027s just simple mechanics so that problem cannot be that hard, right? Turns out it is also not that easy. After a week I was finally convinced that there is no easy analytical solution, but I had an idea on how to tackle that problem. I found the mod \u003Ca href=\u0022https://krpc.github.io/krpc/\u0022 rel=\u0022external nofollow\u0022\u003EKRPC\u003C/a\u003E which gives me the possibility to control KSP with a Python script. And in that Python script I can do all the unholy things I need for a suicide burn... \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nWhat my program does is to evaluate the equations of motion (EOM) of a rocket burning retrograde in a gravitational field numerically. This works pretty good and in the end the autopilot stops my rocket 10 m above the ground within a few meters of the predicted landing site. However, this comes at a cost: The calculations take about 5 min. Unfortunately, Python is not the most efficient programming language but the only one I\u0027m proficient in. But it works! And if you want to try it for yourself here is the code:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/marcnesium-iv/SuicideBurnAutopilot\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/marcnesium-iv/SuicideBurnAutopilot\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIt requires Python 2.7, the Python packages numpy, scipy and krpc, and the KSP mods KRPC and MechJeb2. It should also be fairly easy to translate the code to Python 3.x -- just change print and xrange. Actually I hope that some of you will test it because there are still some minor bugs in it (no critical ones) and it\u0027s not that much tested. I wrote a small paragraph about the usage on the github page. The code should also be understandable since I left quite some comments in there.\n\u003C/p\u003E\n\u003Cp\u003E\nThe basic algorithm looks like this: The EOM first describes a coasting phase until the time t_burn and then the suicide burn. The scipy.integrate.solve_ivp function evaluates the EOM for a given t_burn until either the rocket crashes into the planet or it slows down to zero. scipy.optimize.minimize now tries to optimize t_burn, so the rocket stops at the end of the burn right at the surface. The main bottlenecks are the functions which determine the velocity and the altitude as both have to use KRPC functions which prevents me from using efficient numpy stuff. As I already said: It works but is not very efficient. If you have any ideas on how to speed this algorithm up, please let me know! Also all other kinds of feedback is very much appreciated. \u003Cspan\u003E:)\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"marcnesium-iv","CreatedById":200756,"CreatedDateTime":"2019-10-16T22:22:06Z","Content":"\n\u003Cp\u003E\nUPDATE\n\u003C/p\u003E\n\u003Cp\u003E\nThe calculations now take less than 1 minute! \u003Cspan\u003E\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EI had two ideas this morning and just implemented them. The calculations are now much faster and in the order of 45 seconds. Unfortunately, the calculations are not that precise anymore and I don\u0027t know why but I\u0027ll look into it. I\u0027ll also try to make a video in the next days so you get an idea what it looks like. Since the calculations are now that fast I can use my script as a live autopilot without pausing the game.\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"marcnesium-iv","CreatedById":200756,"CreatedDateTime":"2019-10-17T22:11:11Z","Content":"\n\u003Cp\u003E\nI would not have thought that it was possible to decrease the computation time much more. Today I simulated over 30 suicide burns and optimized the parameters. I\u0027m now at \u003Cstrong\u003E5 seconds\u003C/strong\u003E computational time! \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EAs I promised I also made a video of one of these landings.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 width=\u0022480\u0022 data-embed-src=\u0022https://www.youtube.com/embed/BffjZgVukDU?feature=oembed\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIn the beginning my lander is in a circular 40 km orbit with a inclination of 15\u00B0 around Mun. My script is not capable of landing at a specific site as this would include another optimization step. So you have to perform your own deorbit burn. As you can see I chose a comparably flat descent trajectory, however, any trajectory should be fine as long as it is suborbital. And of course you should have enough time left to slow down.\n\u003C/p\u003E\n\u003Cp\u003E\nThen I started the script in the console. The output shows how the optimizing algorithm is converging. \u0022t_burn\u0022 (the time until the start of the suicide burn) is changed until the \u0022altitude\u0022 (at the end of the suicide burn) is slightly positive. In my script I set an offset of 20 m, but for larger ships this should also be larger. After 4.6 seconds the calculations are finished and we get the parameters of the final trajectory. The ship orientates itself and warps to 10 seconds before engine ignition (or t_burn-10). The \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E is set to retrograde (relative to surface!) and we wait for the burn. Well... and then comes the burn.\n\u003C/p\u003E\n\u003Cp\u003E\nAbout 20 m above ground we reach close to zero velocity and the MechJeb untargeted-landing autopilot is activated for the last few meters. If you compare the console output of the calculated coordinates (\u0022final coordinates\u0022) and the actual landing coordinates, we see that we are pretty much where we expect to be.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EHope you liked it! \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n"}]}