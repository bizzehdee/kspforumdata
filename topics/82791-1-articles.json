{"TopicId":82791,"ForumId":29,"TopicTitle":"[SOLVED]Apply force in a floatcurve for orion engine module","CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-08-25T08:21:16Z","PageNum":1,"Articles":[{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-08-25T08:21:16Z","Content":"\n\u003Cp\u003EHey. Im in the process of making my moduleorionengine class. (Basically bombs explodes behind the engine providing force in pulses, the force gets dampened by a pusher plate. My approach is quite different than the previous orion plugin so there is unfortunantly not much i can take from it) What has got me steiffeled is how to apply force over time. Like in a floatcurve. Im wondering if this is possible to do contained inside a partmodule(without a monobehaviour class)\u003C/p\u003E\u003Cp\u003EThe idea is that as the second part of the animation cycle plays(pistons compress) force gets applied progressively so you dont get such a big spike in gees. \u003C/p\u003E\u003Cp\u003EThanks in advance. Any input will help. I do realize doing an engine module as a first ksp plugin project is a bit ambitious:P\u003C/p\u003E\u003Cp\u003ENovice plugin coder\u003C/p\u003E\u003Cp\u003EUpdate: \u003C/p\u003E\u003Cp\u003EUsing the method discribed by sarbian, nathankell and honeyfox i have solved how to do it. Marked the thread as solved. Will be putting up a vid in my wip thread of the plugin in action in the unity editor\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-01T06:21:24Z\u0022 title=\u002209/01/2014 06:21  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 1, 2014\u003C/time\u003E by landeTLS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-08-25T08:34:36Z","Content":"\n\u003Cp\u003EYou just have to change the force you apply yourself each frame. I don\u0027t really see what the problem is, unless you want to use the stock engine module too? \u003C/p\u003E\u003Cp\u003EYou could try to apply the force with ForceMode.Impulse too\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-08-25T08:36:03Z","Content":"\n\u003Cp\u003EThen apply a bit each FixedUpdate?\u003C/p\u003E\u003Cp\u003EI guess you should create a floatcurve that relates time-since-explosion to force-multiplier; then track the time since the last explosion, and AddForce(force * curve.Evaluate(timeSinceExplosion)) in each FixedUpdate.\u003C/p\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-08-25T08:51:13Z","Content":"\n\u003Cp\u003EHeheh. I should have been more clear. The problem doesnt lie in the code, its more the coder:P. Thanks nathankell, that makes perfect sence. Im still learning how to make partmodules in ksp do stuff so its all new to me. Sarbian: whats the difference between forcemode.impulse and forcemode.force? Im not extending moduleengine.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-25T08:57:18Z\u0022 title=\u002208/25/2014 08:57  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 25, 2014\u003C/time\u003E by landeTLS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"HoneyFox","CreatedById":19237,"CreatedDateTime":"2014-08-25T10:06:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022landeTLS\u0022 data-cite=\u0022landeTLS\u0022\u003E\u003Cdiv\u003EHeheh. I should have been more clear. The problem doesnt lie in the code, its more the coder:P. Thanks nathankell, that makes perfect sence. Im still learning how to make partmodules in ksp do stuff so its all new to me. Sarbian: whats the difference between forcemode.impulse and forcemode.force? Im not extending moduleengine.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHave to say that PartModule is actually inherited from MonoBehaviour and so it can have void FixedUpdate() function to be called each physics frame.\u003C/p\u003E\u003Cp\u003EYou can load/create a float curve and record the UT of the moment when the nuclear charge explodes, then get the time by subtracting the current UT with the recorded one, use float curve\u0027s Evaluate() function to get the thrust value and finally use rigidbody.AddForceAtPosition() to add force in each physics frame.\u003C/p\u003E\n"},{"CreatedByName":"HoneyFox","CreatedById":19237,"CreatedDateTime":"2014-08-25T10:24:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022landeTLS\u0022 data-cite=\u0022landeTLS\u0022\u003E\u003Cdiv\u003EHeheh. I should have been more clear. The problem doesnt lie in the code, its more the coder:P. Thanks nathankell, that makes perfect sence. Im still learning how to make partmodules in ksp do stuff so its all new to me. Sarbian: whats the difference between forcemode.impulse and forcemode.force? Im not extending moduleengine.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFor continuous force applying, use ForceMode.Force. ForceMode.Impulse mode will consider your force parameter as the impulse given in one time step.\u003C/p\u003E\u003Cp\u003EIf you want to use ForceMode.Impulse and still want to get similar effect as ForceMode.Force does, you need your force parameter multiplied by fixedDeltaTime (which might vary but should be close to 0.03sec).\u003C/p\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-08-25T21:24:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HoneyFox\u0022 data-cite=\u0022HoneyFox\u0022\u003E\u003Cdiv\u003EHave to say that PartModule is actually inherited from MonoBehaviour and so it can have void FixedUpdate() function to be called each physics frame.\u003Cp\u003EYou can load/create a float curve and record the UT of the moment when the nuclear charge explodes, then get the time by subtracting the current UT with the recorded one, use float curve\u0027s Evaluate() function to get the thrust value and finally use rigidbody.AddForceAtPosition() to add force in each physics frame.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks man. That info is so gold to me!\u003C/p\u003E\u003Cp\u003EI spent some time today setting up unity and adding keyinputs so i can experiment without loading ksp for each test. Made some progress but i can feel its been a while since i did any programming. Trying out some different force modes and it seems that impulse is indeed the way to go. I also found this method = \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAddExplosionForce(explosionForce: float, explosionPosition: Vector3, explosionRadius: float, upwardsModifier: float = 0.0F, mode: ForceMode = ForceMode.Force): void;]\u003C/div\u003E\u003C/blockquote\u003E it makes it so easy to apply force to objects in a sphere around the rigidbody. Ill probably be using it in addition to some random destruction of parts in the sphere. (Blastzone) havent tried it out inside ksp yet tho. But in unity it works spledidly\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-25T21:29:42Z\u0022 title=\u002208/25/2014 09:29  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 25, 2014\u003C/time\u003E by landeTLS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-08-26T22:19:37Z","Content":"\n\u003Cp\u003Ehey guys. back again, this time with a basic adhoc unity class for the first smooth force application.\u003C/p\u003E\u003Cp\u003Ea quite sleepy so i am probably missing some very basic math.\u003C/p\u003E\u003Cp\u003Ehow do i configure the thrust delivered properly along the floatcurve?\u003C/p\u003E\u003Cp\u003Ealso i didnt add a bool etc yet to check if the curve has reached the end so it just continues applying force.\u003C/p\u003E\u003Cp\u003Eim using animationcurve instead of floatcurve since im testing in unityeditor. but floatcurve is an extension of it so it works the same way i presume.\u003C/p\u003E\u003Cp\u003Especial thanks to both nathankell and honeyfox, without you guys i would be much much less further along. thanks in advance.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003Eusing System.Collections;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Enamespace Assets\u003Cbr\u003E{\u003Cbr\u003E    class orion : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        public GameObject Payload_Obj;\u003Cbr\u003E        public string payloadTransform = \u0022payload_Obj\u0022;\u003Cbr\u003E\u003Cbr\u003E        public float ThrustPerPulse = 100f;\u003Cbr\u003E        public GameObject adhoc_obj;\u003Cbr\u003E\u003Cbr\u003E        [SerializeField]\u003Cbr\u003E        AnimationCurve ThrustCurve;\u003Cbr\u003E        private float timeAtLastBlast = -0f;\u003Cbr\u003E        private float timeSinceLastBlast = -0f;\u003Cbr\u003E        private float thrustToApply = -0f;\u003Cbr\u003E        private float forceDirection = 0f;\u003Cbr\u003E\u003Cbr\u003E        //stage 1\u003Cbr\u003E        // record time of last blast as it happens with: timeAtLastBlast = Time.fixedTime;\u003Cbr\u003E        private void OnTriggerEnter(Collider other)\u003Cbr\u003E        {\u003Cbr\u003E            if (other.name == payloadTransform)\u003Cbr\u003E            {\u003Cbr\u003E                print(\u0022the payload object has entered trigger zone\u0022);\u003Cbr\u003E                timeAtLastBlast = Time.fixedTime;\u003Cbr\u003E                Destroy(Payload_Obj);\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            { print(\u0022a different object has entered trigger zone\u0022); }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        void FixedUpdate()//per physx frame (onFixedUpdate for ksp)\u003Cbr\u003E        {\u003Cbr\u003E            if (timeAtLastBlast \u0026gt; 0)\u003Cbr\u003E            {\u003Cbr\u003E                //checking time passed\u003Cbr\u003E                timeSinceLastBlast = Time.fixedTime - timeAtLastBlast;\u003Cbr\u003E                print(\u0022time since last blast: \u0022 \u002B timeSinceLastBlast);\u003Cbr\u003E                thrustToApply = ThrustPerPulse / ThrustCurve.Evaluate(timeSinceLastBlast); //(?)\u003Cbr\u003E\u003Cbr\u003E                print(\u0022thrust to apply is: \u0022 \u002B thrustToApply);\u003Cbr\u003E                adhoc_obj = GameObject.Find(\u0022OrionPlaceholder\u0022);\u003Cbr\u003E                adhoc_obj.rigidbody.AddForceAtPosition(adhoc_obj.transform.up * thrustToApply * Time.fixedDeltaTime, adhoc_obj.transform.position, ForceMode.Impulse);\u003Cbr\u003E\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eedit: i feel embarrased now, i just checked the code. \u003C/p\u003E\u003Cp\u003EthrustToApply = ThrustPerPulse / ThrustCurve.Evaluate(timeSinceLastBlast); //(?) should be:\u003C/p\u003E\u003Cp\u003EthrustToApply = ThrustPerPulse * ThrustCurve.Evaluate(timeSinceLastBlast);\u003C/p\u003E\u003Cp\u003Eappears to work as expected now, now i just wonder how the best way would be to stop applying force when the floatfurve reaches clamp?\u003C/p\u003E\u003Cp\u003EEdit2: i got to do a lot of work on the plugin class this evening.finally Finished the whole force loop. Still need to move the functions to fixedupdate. Most of the time i spent experimenting with different physics scripts and dynamic creation of gameobjects from prefabs. Im thinking now that this is the best way to make the bomb translate out of the barrel transform and raycast\u002B\u002B to check when it reaches a transform or box called obj_trigger. I was toying first with using rigidbody for thid but unity physics doesnt seem to like fast moving objects too well. This way i can have the pusher plate animation slow or speed up depending on the force curve and not need it to move at a constant speed because the bomb transform is moved by it. Looking forward to trying out the particle system to create some (hopefully) nice explosion effects. Am i right that i need to stick to the kspparticleemitter stuff or can i make some of the unity built in stuff work somehow? also am i overcomplicating things with raycasting the bomb transform etc. Is there an easier and effective way to do it?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T18:42:24Z\u0022 title=\u002208/27/2014 06:42  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by landeTLS\u003C/strong\u003E\n\u003C/span\u003E\n"}]}