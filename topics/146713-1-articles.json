{"TopicId":146713,"ForumId":36,"TopicTitle":"TextEdit / TextArea not working in FLIGHT Mode","CreatedByName":"kspjrthom4444","CreatedById":162730,"CreatedDateTime":"2016-08-28T20:12:58Z","PageNum":1,"Articles":[{"CreatedByName":"kspjrthom4444","CreatedById":162730,"CreatedDateTime":"2016-08-28T20:12:58Z","Content":"\n\u003Cp\u003E\nI\u0027m sure I\u0027m just misunderstanding something fundamental, but I have a window that contains a textedit and a textarea. \u00A0When the window is rendered on the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, I can type into the textedit and area fields, when I am in flight mode I cannot. \u00A0Do I need to do anything special?\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing KSP.UI.Screens;\nusing StatiK.Utils;\nusing UnityEngine;\n\nnamespace StatiK.Windows\n{\n    public class MissionWindow : BaseWindow\n    {\n        private ILogger log = StatikLogManager.Instance.GetLogger(typeof(MissionWindow).Name);\n\n        private ApplicationLauncherButton _appButton;\n        private string _missionName = \u0022\u0022;\n        private string _missionDescription = \u0022\u0022;\n\n        public MissionWindow(WindowSettings settings) : base(settings) { }\n\n        public static WindowSettings GetDefaultSettings()\n        {\n            return new WindowSettings\n            {\n                Name = \u0022MissionWindow\u0022,\n                Title = \u0022Mission\u0022,\n                Dimensions = new GUIDimensions { Top = 500, Left = 800, Height = 600, Width = 400 }\n            };\n        }\n\n        public override void ScrollableContent()\n        {\n            GUILayout.Label(\u0022Mission Name\u0022);\n            _missionName = GUILayout.TextField(_missionName);\n            GUILayout.Label(\u0022Mission Description\u0022);\n            _missionDescription = GUILayout.TextArea(_missionDescription);\n            if(GUILayout.Button(\u0022Save\u0022))\n            {\n                log.Info(\u0022Mission Saved: \u0022 \u002B _missionName \u002B \u0022   \u0022 \u002B _missionDescription);\n            }\n        }\n\n        public override void InitializeAppLauncherButton()\n        {\n            ApplicationLauncher.AppScenes eligibleGameScenes = ApplicationLauncher.AppScenes.FLIGHT | ApplicationLauncher.AppScenes.\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E;\n            if (_appButton == null)\n            {\n                _appButton = ApplicationLauncher.Instance.AddModApplication(this.Show, this.Hide, null, null, null, null, eligibleGameScenes, ResourceUtil.Instance.StatiKIcon);\n            }\n        }\n\n        public override void DestoryAppLauncherButton()\n        {\n            ApplicationLauncher.Instance.RemoveApplication(_appButton);\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing UnityEngine;\n\nnamespace StatiK.Windows\n{\n    public abstract class BaseWindow\n    {\n        public Rect _container;\n        public WindowSettings _settings;\n        private Vector2 scrollPosition = Vector2.zero;\n        private bool _shouldReDraw = false;\n\n\n        public BaseWindow(WindowSettings settings)\n        {\n            _settings = settings;\n            _container = _settings.Dimensions.GetRect();\n        }\n\n        public void OnGUI()\n        {\n            if (_shouldReDraw)\n            {\n                _container = GUILayout.Window(_settings.Id, _container, DrawWindow, _settings.Title);\n            }\n        }\n        \n        void DrawWindow(int windowId)\n        {\n            \n            scrollPosition = GUILayout.BeginScrollView(scrollPosition, GUILayout.Width(_settings.Dimensions.Width), GUILayout.Height(_settings.Dimensions.Height));\n            ScrollableContent();\n            GUILayout.EndScrollView();\n            GUI.DragWindow();\n        }\n\n        public void Show()\n        {\n            _shouldReDraw = true;\n        }\n\n        public void Hide()\n        {\n            _shouldReDraw = false;\n        }\n\n        public abstract void InitializeAppLauncherButton();\n        public abstract void DestoryAppLauncherButton();\n        public abstract void ScrollableContent();\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nNote that the window id is generated when setting the WindowSetting\u0027s Name property:\u00A0_id = _name.GetHashCode();\n\u003C/p\u003E\n"}]}