{"TopicId":206545,"ForumId":20,"TopicTitle":"science rebalance","CreatedByName":"eberkain","CreatedById":157548,"CreatedDateTime":"2022-01-22T15:25:59Z","PageNum":1,"Articles":[{"CreatedByName":"eberkain","CreatedById":157548,"CreatedDateTime":"2022-01-22T15:25:59Z","Content":"\n\u003Cp\u003E\nIs there a mod or set of mods that can do this for all experiments...\n\u003C/p\u003E\n\u003Cp\u003E\nscience that generates samples can not be transmitted and recovery grants 100%\n\u003C/p\u003E\n\u003Cp\u003E\nscience that does not generate samples can be transmitted for 100%\n\u003C/p\u003E\n"},{"CreatedByName":"leonardfactory","CreatedById":206655,"CreatedDateTime":"2022-01-23T03:50:01Z","Content":"\n\u003Cp\u003E\nSomething like that is implemented in Kerbalism. Experiments that generate samples must be recovered or analysed in a Lab, they are useless without bringing them back. On the other side, if something is just a Temperature Reading, it can be transmitted for 100%.\n\u003C/p\u003E\n\u003Cp\u003E\nKerbalism builds on top of this idea and, while reimagining all the science system (in an incredibly interesting adventure imho), it provides even a time dimension, since experiments require time to complete.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2022-01-23T10:44:36Z","Content":"\n\u003Cp\u003E\nYou can do that with a \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E patch, but there is no 100% guaranteed way to identify if an experiment is a sample or not.\u003Cbr\u003E\nIn stock, \u0022conceptually not transmittable\u0022 experiments are configured with \u0022rerunnable = False\u0022 (meaning you need a scientist to \u0022restore\u0022 it).\u003Cbr\u003E\nHowever, this assumption might not hold true in experiments from various mods.\n\u003C/p\u003E\n\u003Cp\u003E\nThis being said, here is a quick and dirty \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E patch that should do the job \u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#rerunnable[True]]]:FINAL\n{\n\t@MODULE[*ModuleScience*]\n\t{ \n\t\t@xmitDataScalar = 1 \n\t}\n}\n\n@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#rerunnable[False]]]:FINAL\n{\n\t@MODULE[*ModuleScience*]\n\t{ \n\t\t@xmitDataScalar = 0 \n\t}\n}\n\n@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[~rerunnable[]]]:FINAL\n{\n\t@MODULE[*ModuleScience*]\n\t{ \n\t\t@xmitDataScalar = 0 \n\t}\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}