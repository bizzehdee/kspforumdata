{"TopicId":42577,"ForumId":44,"TopicTitle":"I need someone help me do some math for launch optimization","CreatedByName":"SaturnV","CreatedById":79006,"CreatedDateTime":"2013-08-15T10:56:30Z","PageNum":1,"Articles":[{"CreatedByName":"SaturnV","CreatedById":79006,"CreatedDateTime":"2013-08-15T10:56:30Z","Content":"\n\u003Cp\u003ESome equation can be found here: \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Atmosphere\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Atmosphere\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThe problem:\u003C/strong\u003E What speed you need to keep at certain altitude to maximize your vehicle efficiency?\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EDetailed Description:\u003C/strong\u003E In space, just install MJ and watch how much delta-V you remain, that\u0027s it. But on Kerbin(mostly where you launch from, we will discuss other planet with atmosphere later, maybe), the air resistance is a big problem to optimize your launch, as fluid mechanism is one of the most difficult science on earth.\u003C/p\u003E\u003Cp\u003EBut in KSP, we can simplify the most complex part: the drag coefficient \u0026amp; cross-sectional area. Let\u0027s consider a single-stage rocket, both parameters is constant during the whole launch. I merge that with some other constant into one, called constant C. That\u0027s not very important in our further discuss.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.minus.com/ibqwd91FHLNVmk.png\u0022 alt=\u0022ibqwd91FHLNVmk.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EAs you speed up in dense air, you slow down more, that drag is related to square of you velocity so it increase dramatically if you\u0027re too fast.\u003C/p\u003E\u003Cp\u003EBut if you are fast, you can raise up quickly. The air density is decreased exponential which results in a lesser drag force, since Fd is related to altitude. What\u0027s more, faster means higher thrust output means faster fuel consume rate means faster mass decreased, that\u0027s an additional acceleration boost.\u003C/p\u003E\u003Cp\u003ESo, is there an optimal point can balance the air drag and altitude gain, with certain vehicle with given mass, air drag factor, thrust strength?\u003C/p\u003E\u003Cp\u003EIs there a speed map that you could follow, say \u0022you should not exceed the speed 165m/s at altitude 4500m, with this vehicle\u0022?\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2013-08-15T15:57:29Z","Content":"\n\u003Cp\u003EHave a look at Closette\u0027s \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/6664-Mini-challenge-max-altitude-with-this-supplied-spacecraft\u0022 rel=\u0022external nofollow\u0022\u003EMini-challenge: max altitude with this supplied spacecraft\u003C/a\u003E thread from about a year and a half ago. That thread documents the great deal of effort that several members of this forum undertook to study the one dimensional (i.e. vertical climb only) version of this very problem. Many of the key contributors in that thread went on to collaborate on MechJeb\u0027s initial development. As far as I know, that thread is the origin of the \u0022climb at terminal velocity\u0022 and \u0022design for TWR=2\u0022 rules of thumb that everyone on these forums cites as gospel. \u003C/p\u003E\u003Cp\u003EMore recently, Tarmenius\u0027 \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/39196-Launch-Efficiency-Exercise-Updated-for-0-21-1\u0022 rel=\u0022external nofollow\u0022\u003ELaunch Efficiency Exercise\u003C/a\u003E thread attempted to find the optimal two-dimensional launch trajectory (i.e. vertical and horizontal acceleration into an orbital trajectory) by \u0022crowd sourced\u0022 trial and error.\u003C/p\u003E\u003Cp\u003EBoth threads were specific to two unique spacecraft designs, but the principles discussed are still relevant to more general designs.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-15T16:03:41Z\u0022 title=\u002208/15/2013 04:03  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 15, 2013\u003C/time\u003E by PakledHostage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-08-15T17:52:43Z","Content":"\n\u003Cp\u003EOptimal climb rate is, indeed, terminal velocity. For constant density, the proof is trivial. The thrust, in units of ship mass, is equal to F = g \u002B kv\u00C3\u201A\u00C2\u00B2. The amount of time needed to rises to some altitude h is t = h/v. In that time you consume some quantity of fuel proportional to Ft, so your goal is to find maximum of (g \u002B kv\u00C3\u201A\u00C2\u00B2)/v. Differentiating that with respect to v and setting derivative to zero yields k - g/v\u00C3\u201A\u00C2\u00B2 = 0. Or g = kv\u00C3\u201A\u00C2\u00B2. Note that this is the same exact condition as setting F = 0, meaning you just found terminal velocity, except going upwards instead of down. Substituting into original equation we have F = 2g, meaning thrust is twice the weight.\u003C/p\u003E\u003Cp\u003ENow, the problem is actually more complicated because air density is decreasing exponentially, so the value k is varying as k(h) = k0 exp(-h/H), where H is scale height. Math for this problem is extremely hairy and involves calculus of variation. I have solved this problem, and if anyone here wants to see the proof, I can outline it. But the result is exactly the same. Climb must be performed at terminal velocity for given altitude. In other words, v(h) = v0 exp(h/(2H)), where v0 is terminal velocity at sea level. Now, however, thrust must compensate for drag and acceleration. By the time acceleration is significant, however, you should already be well into gravity turn, so it turns out that TWR of 2 is still a good one to shoot for.\u003C/p\u003E\u003Cp\u003ETwo dimensional problem involving gravity turn is extremely complex, and I have not found a solution. I have verified a number of \u0022rules of thumb\u0022 to not be true optimums, but even solving for optimal ascent numerically has proven to be beyond the \u0022simple\u0022 methods.\u003C/p\u003E\u003Cp\u003EEdit: There is an interesting consequence for all of this. Again, I\u0027m not going to get into all the math, but you can estimate the extra delta-V required to climb out of atmosphere as 4gH/v0. Again, H is scale height and v0 is terminal velocity at whatever height you start out from. This means that the total minimum delta-V required to reach stable circular orbit is roughly dV = 4gH/v0 \u002B Sqrt[MG/(h\u002BR)]. Here R is radius of the planet, M is its mass, G is the gravitational constant, and h is the altitude of your final circular orbit. For Kerbin, that works out to 4,128m/s, which is very close to empirically established value.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-15T18:03:43Z\u0022 title=\u002208/15/2013 06:03  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 15, 2013\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diche Bach","CreatedById":76097,"CreatedDateTime":"2013-08-15T19:21:19Z","Content":"\n\u003Cp\u003EFascinating topic. The parameters re unfamiliar to me, but the concepts are quite intriguing.\u003C/p\u003E\u003Cp\u003ECouple ideas/questions that occur to me as a result of (a) watching Scott Manley\u0027s video on the Orion nuclear explosive pulse propulsion spacecraft; (\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E reading about the apparent solution in recent years to the \u0022Pioneer Anomaly;\u0022 \u00A9 just a general sense of how aerodynamics works.\u003C/p\u003E\u003Cp\u003E1. Air resistance or drag are largely a function of the shape of the vehicle right? For example, the Concorde with its extra long and pointy nose. Why aren\u0027t rockets that employ these kinds of features used? Would it not make enough difference? Would it produce other problems? Would it not be possible to make a nose cone that was sufficiently rigid?\u003C/p\u003E\u003Cp\u003E2. Air density is going to be a function of heat right? What about (in addition to more aerodynamic nose) putting some lasers on the nose of the vehicle that project directly up into the prograde direction of the vehicle, thus (maybe!?) creating a heated \u0027column\u0027 of air immediately above/in front of the craft thus reducing drag and improving efficiency? Seems insane, but that\u0027s the luxury of being a na\u00C3\u0192\u00C2\u00AFve social scientist forumite on a gaming forum with all you physical scientists around to tell me how hilarious such ideas are \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003E3. Air gets compressed when something pushes on it, so I would think that, to some extent (depending on the bluntness of the craft) the vehicle itself causes the resistance in front of it to increase as it ascends. However, if that pressure upwards were not applied continuously but rather in some oscillating pattern, I would think that instead of simply \u0027stacking up\u0027 the air into a compressed space it might actually push some of it out of the way, at least momentarily. In large part I reckon this is what a highly streamlined pointed nose cone does. But in addition to this, what about some method for actually pushing the air directly above/ in front of the vehicle out of the way? Ideas here could be: a nose-cone that rapidly pumps up and down (aka the pumping pressure plate on the Orion is what is giving me this crazy idea), or a series of small explosive devices that launch out in front of the vehicle and blast air out of the way.\u003C/p\u003E\u003Cp\u003EThank you for reading my absurd, na\u00C3\u0192\u00C2\u00AFve and insane anthropological theories on aeronautics. I appreciate all of your humor in pointing out just how crazy these ideas are! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_shocked.gif\u0022 alt=\u0022:0.0:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2013-08-15T20:54:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diche Bach\u0022 data-cite=\u0022Diche Bach\u0022\u003E\u003Cdiv\u003E1. Air resistance or drag are largely a function of the shape of the vehicle right? For example, the Concorde with its extra long and pointy nose. Why aren\u0027t rockets that employ these kinds of features used? Would it not make enough difference? Would it produce other problems? Would it not be possible to make a nose cone that was sufficiently rigid?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe Concorde is optimized for supersonic cruise, while launch vehicles are optimized for maximizing payload delivered into orbit. Given that launch vehicles climb through the thickest part of the atmosphere at sub-sonic speeds, their optimal aerodynamic shapes are different than that of supersonic aircraft.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diche Bach\u0022 data-cite=\u0022Diche Bach\u0022\u003E\u003Cdiv\u003E2. Air density is going to be a function of heat right? What about (in addition to more aerodynamic nose) putting some lasers on the nose of the vehicle that project directly up into the prograde direction of the vehicle, thus (maybe!?) creating a heated \u0027column\u0027 of air immediately above/in front of the craft thus reducing drag and improving efficiency?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would imagine that the mass and cost of the lasers, together with the energy requirements to run them would outweigh the benefit.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diche Bach\u0022 data-cite=\u0022Diche Bach\u0022\u003E\u003Cdiv\u003E3. Air gets compressed when something pushes on it, so I would think that, to some extent (depending on the bluntness of the craft) the vehicle itself causes the resistance in front of it to increase as it ascends. However, if that pressure upwards were not applied continuously but rather in some oscillating pattern, I would think that instead of simply \u0027stacking up\u0027 the air into a compressed space it might actually push some of it out of the way, at least momentarily. In large part I reckon this is what a highly streamlined pointed nose cone does. But in addition to this, what about some method for actually pushing the air directly above/ in front of the vehicle out of the way? Ideas here could be: a nose-cone that rapidly pumps up and down (aka the pumping pressure plate on the Orion is what is giving me this crazy idea), or a series of small explosive devices that launch out in front of the vehicle and blast air out of the way.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe process of compressing the air and pushing it out of the way happens by default. The speed of sound is the speed at which an infinitesimal pressure wave propagates through the air. Stronger pressure waves (such as blast waves from explosions) propagate at higher speeds. A body moving through the air \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cnotifies the air ahead of it that it is coming\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 by means of pressure. Supersonic objects develop pressure waves (shock waves) around themselves that are strong enough to propagate at the speed that the object is moving. Air passing through a supersonic shock will increase in pressure, density and temperature. The shock can be either normal or oblique. Oblique shocks are weaker than normal shocks and cause less drag. \u003C/p\u003E\u003Cp\u003EAgain, the faster the object is moving, the stronger the shock must be. The Concorde\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s pointy nose was chosen to ensure that the Concorde forms a (lower drag) oblique shock while flying at supersonic speeds. Missiles also have pointy nose fairings like the Concorde, but the aerodynamic fairings on launch vehicles would be optimized to minimize drag over the full range of speeds that they encounter during the flight phase where they are required.\u003C/p\u003E\n"},{"CreatedByName":"SaturnV","CreatedById":79006,"CreatedDateTime":"2013-08-16T13:07:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PakledHostage\u0022 data-cite=\u0022PakledHostage\u0022\u003E\u003Cdiv\u003EHave a look at Closette\u0027s \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/6664-Mini-challenge-max-altitude-with-this-supplied-spacecraft\u0022 rel=\u0022external nofollow\u0022\u003EMini-challenge: max altitude with this supplied spacecraft\u003C/a\u003E thread from about a year and a half ago. That thread documents the great deal of effort that several members of this forum undertook to study the one dimensional (i.e. vertical climb only) version of this very problem. Many of the key contributors in that thread went on to collaborate on MechJeb\u0027s initial development. As far as I know, that thread is the origin of the \u0022climb at terminal velocity\u0022 and \u0022design for TWR=2\u0022 rules of thumb that everyone on these forums cites as gospel. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI finished it, but I need more time to catch on. That\u0027s a great thread, so do you. Thanks a lot dude.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-17T02:27:10Z","Content":"\n\u003Cp\u003ENot sure if my derivation matches K^2\u0027s as I don\u0027t think he\u0027s posted it anywhere yet, but I went through this a few weeks ago here:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/43706-Rocket-Acceleration-g?p=573727\u0026amp;viewfull=1#post573727\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/43706-Rocket-Acceleration-g?p=573727\u0026amp;viewfull=1#post573727\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Mrwood","CreatedById":79207,"CreatedDateTime":"2013-08-17T03:11:37Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022http://sbir.nasa.gov/SBIR/successes/ss/8-048text.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://sbir.nasa.gov/SBIR/successes/ss/8-048text.html\u003C/a\u003E NASA plasma drag reduction research.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PakledHostage\u0022 data-cite=\u0022PakledHostage\u0022\u003E\u003Cdiv\u003EThe Concorde is optimized for supersonic cruise, while launch vehicles are optimized for maximizing payload delivered into orbit. Given that launch vehicles climb through the thickest part of the atmosphere at sub-sonic speeds, their optimal aerodynamic shapes are different than that of supersonic aircraft.\u003Cp\u003EI would imagine that the mass and cost of the lasers, together with the energy requirements to run them would outweigh the benefit.\u003C/p\u003E\u003Cp\u003EThe process of compressing the air and pushing it out of the way happens by default. The speed of sound is the speed at which an infinitesimal pressure wave propagates through the air. Stronger pressure waves (such as blast waves from explosions) propagate at higher speeds. A body moving through the air \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cnotifies the air ahead of it that it is coming\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 by means of pressure. Supersonic objects develop pressure waves (shock waves) around themselves that are strong enough to propagate at the speed that the object is moving. Air passing through a supersonic shock will increase in pressure, density and temperature. The shock can be either normal or oblique. Oblique shocks are weaker than normal shocks and cause less drag. \u003C/p\u003E\u003Cp\u003EAgain, the faster the object is moving, the stronger the shock must be. The Concorde\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s pointy nose was chosen to ensure that the Concorde forms a (lower drag) oblique shock while flying at supersonic speeds. Missiles also have pointy nose fairings like the Concorde, but the aerodynamic fairings on launch vehicles would be optimized to minimize drag over the full range of speeds that they encounter during the flight phase where they are required.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-08-19T20:18:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003ENot sure if my derivation matches K^2\u0027s as I don\u0027t think he\u0027s posted it anywhere yet, but I went through this a few weeks ago here:\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/43706-Rocket-Acceleration-g?p=573727\u0026amp;viewfull=1#post573727\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/43706-Rocket-Acceleration-g?p=573727\u0026amp;viewfull=1#post573727\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are looking at mass changes. I basically disregarded that because in KSP drag is proportional to the mass, so everything can be done in units of ship\u0027s mass.\u003C/p\u003E\u003Cp\u003EWhat I was working on is accounting for d\u00C3\u00C2/dt terms. Your derivation simply assumes that \u00C3\u00C2 is constant, but it really isn\u0027t, and it would throw a major monkey wrench in your computations, because then you can\u0027t just say, \u0022What is optimal v?\u0022 You have to say, \u0022Which function, v(t), optimizes \u003Cem\u003Etotal\u003C/em\u003E fuel consumption.\u0022 And that\u0027s Variation Calculus problem. Fortunately, some really smart people found some really nice shortcuts there.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-20T01:59:34Z","Content":"\n\u003Cp\u003ECare to share, if you\u0027ve been deriving something more detailed? I wasn\u0027t necessarily considering rho as constant, but rather a variable that you don\u0027t have control over if you are trying to determine the (locally, greedy) best v at a given altitude.\u003C/p\u003E\u003Cp\u003EI\u0027ve looked at the optimal control literature on this problem and haven\u0027t found many detailed analytical derivations. There\u0027s a good paper by Rugescu that goes through the history of developments on the problem, but I wish it was more detailed in the math and most of the references are either in German or difficult to find.\u003C/p\u003E\u003Cp\u003EI\u0027ve been making headway on coding up a numerical solution of the full problem including gravity turn, but actual work keeps interfering.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-20T02:05:45Z\u0022 title=\u002208/20/2013 02:05  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 20, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-08-20T02:45:21Z","Content":"\n\u003Cp\u003EWell, the basic idea is that total fuel used (ignoring I\u003Csub\u003ESP\u003C/sub\u003E changes due to pressure) is proportional to trust. Now, there is choice in what we are optimizing with respect to, but if an integral over F(t) from some t\u003Csub\u003E1\u003C/sub\u003E to t\u003Csub\u003E2\u003C/sub\u003E can be reduced with minor variations in v(t), then you haven\u0027t done the best possible job. Now, given altitude as h(t), velocity is h\u0027(t) and acceleration is h\u0027\u0027(t). (Just making note of notation.) Then in units of ship\u0027s mass, we can write.\u003C/p\u003E\u003Cp\u003EF(t) = h\u0027\u0027(t) \u002B g \u002B k(t)h\u0027\u00C3\u201A\u00C2\u00B2(t)\u003C/p\u003E\u003Cp\u003EHere k(t) is the drag coefficient given by k(t) = k\u003Csub\u003E0\u003C/sub\u003E exp(-h(t)/H). This is proportional to \u00C3\u00C2 in your computations.\u003C/p\u003E\u003Cp\u003ESo what we want to optimize is a functional S[h(t)] = \u00C3\u00A2\u00CB\u2020\u00C2\u00ABF(t)dt. Any function h(t) that satisfies such an optimization will also satisfy the Euler-Lagrange Equation. For a function F(t) which depends on h(t), h\u0027(t), and h\u0027\u0027(t), the following is satisfied.\u003C/p\u003E\u003Cp\u003E\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161F/\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161h - (d/dt)\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161F/\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161h\u0027 \u002B (d\u00C3\u201A\u00C2\u00B2/dt\u00C3\u201A\u00C2\u00B2)\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161F/\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161h\u0027\u0027 = 0\u003C/p\u003E\u003Cp\u003EIn other words, whatever the optimal ascent is going to be, it\u0027s going to satisfy the following equation.\u003C/p\u003E\u003Cp\u003E(d/dt) (\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161k(t)/\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161h h\u0027\u00C3\u201A\u00C2\u00B2(t) - 2 k(t)h\u0027(t) = 0\u003C/p\u003E\u003Cp\u003ETwo things should be noted right away. First, if k(t) was constant, we\u0027d have v(t) is constant as solution. Second is that this doesn\u0027t depend on g and allows for infinitely many solutions. For instance, v(t)=0 is clearly a solution. This isn\u0027t THE optimal one, just a constraint on possible optimal solutions. But it\u0027s a very useful constraint. Taking time derivative, we get the actual differential equation for velocity.\u003C/p\u003E\u003Cp\u003E2k\u003Csub\u003E0\u003C/sub\u003E exp(-h(t)/H) h\u0027\u0027(t) = k\u003Csub\u003E0\u003C/sub\u003E exp(-h(t)/H) h\u0027\u00C3\u201A\u00C2\u00B2(t)/H\u003C/p\u003E\u003Cp\u003EWhich, thankfully, simplifies.\u003C/p\u003E\u003Cp\u003E2H v\u0027(t) = v\u00C3\u201A\u00C2\u00B2(t)\u003C/p\u003E\u003Cp\u003EThat isn\u0027t so bad, and general solution is easy to find.\u003C/p\u003E\u003Cp\u003Ev(t) = -2H/(t\u002BC)\u003C/p\u003E\u003Cp\u003EWhere C can be any constant. On one hand, this is a solution. Give me v(t=0) and I can find C that will make this work. But that\u0027s not the interesting part. Consider the velocity that satisfies the following equation.\u003C/p\u003E\u003Cp\u003Ev(t) = v\u003Csub\u003E0\u003C/sub\u003E exp(h(t)/(2H))\u003C/p\u003E\u003Cp\u003EYou will realize that if v\u003Csub\u003E0\u003C/sub\u003E is terminal velocity at the surface, the above is terminal velocity at altitude h(t). This differential equation can also be solved, and with h(t=0) = 0 it yields the following.\u003C/p\u003E\u003Cp\u003Eh(t) = -2H ln((2H-tv\u003Csub\u003E0\u003C/sub\u003E)/(2H))\u003C/p\u003E\u003Cp\u003EWhat\u0027s more interesting is that I can find the velocity of the above profile.\u003C/p\u003E\u003Cp\u003Ev(t) = 2H v\u003Csub\u003E0\u003C/sub\u003E/(2H - tv\u003Csub\u003E0\u003C/sub\u003E)\u003C/p\u003E\u003Cp\u003EAnd this, in turn, satisfies the earlier equation with C = -1/v\u003Csub\u003E0\u003C/sub\u003E.\u003C/p\u003E\u003Cp\u003EIn other words, ascent at terminal velocity through exponentially thinning atmosphere is locally optimal. And therefore, being the optimal solution for constant density is the overall optimal way to ascend through exponentially thinning atmo.\u003C/p\u003E\u003Cp\u003EEdit: Fixed \u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161F/\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161h term.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-20T03:41:15Z\u0022 title=\u002208/20/2013 03:41  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 20, 2013\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-20T03:09:43Z","Content":"\n\u003Cp\u003EInteresting, thanks. One quick clarifying question, it looks like your F(t) is thrust divided by rocket mass? So by integrating that, you\u0027re minimizing something slightly different than total fuel use, are you not? I suppose you\u0027re minimizing delta-V which has a one-to-one correspondence with fuel, so you\u0027ll get an equivalent minimizer.\u003C/p\u003E\u003Cp\u003EEdit: I think you may have missed a factor of two (or cancelled only on one side of an equation instead of both):\u003C/p\u003E\u003Cp\u003E(d/dt) 2 k(t)h\u0027(t) = 0\u003C/p\u003E\u003Cp\u003E(d/dt) 2 k0 exp(-h(t)/H) h\u0027(t) = 2 k0 exp(-h(t)/H) h\u0027\u0027(t) - 2 k0 exp(-h(t)/H) h\u0027(t)^2 / H\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-20T03:24:53Z\u0022 title=\u002208/20/2013 03:24  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 20, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-08-20T03:39:06Z","Content":"\n\u003Cp\u003EHeh. Yeah, I missed something. Sorry, I\u0027m actually doing all of this in Mathematica, which lets me skip steps. What\u0027s missing is the \u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161F/\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161h term. I\u0027ll make an edit.\u003C/p\u003E\u003Cp\u003EHm. This is a much messier thing to differentiate than it looked. I\u0027m really glad I wasn\u0027t doing this on paper. I\u0027m feeling a bit lazy to fill in the steps, but hopefully, you can figure it out. The equations in the main post should be right now.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-20T03:42:35Z\u0022 title=\u002208/20/2013 03:42  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 20, 2013\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-20T03:53:22Z","Content":"\n\u003Cp\u003ELooks right now. It\u0027s not too terrible to differentiate by hand, just very easy to miss a term, a sign, or a factor of 2 somewhere. I\u0027ve got Mathematica open as well and now trying to play with the variable-gravity solution, things didn\u0027t cancel as nicely there and DSolve couldn\u0027t get it. Only a couple percent variation on Kerbin over the altitude ranges this analysis matters for, so constant\u0027s good enough here.\u003C/p\u003E\u003Cp\u003EAnd figures that Euler-Lagrange does the trick here and you get a nice little differential equation. I haven\u0027t used that method since the last dynamics course I took about 7 years ago. Always with the brachistochrone problems and involute pendulums, not nearly enough rockets in those textbooks that I can remember.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-20T03:56:01Z\u0022 title=\u002208/20/2013 03:56  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 20, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-20T23:02:38Z","Content":"\n\u003Cp\u003EThinking about this a little more, you\u0027ve shown that terminal velocity satisfies the Euler-Lagrange equation for this problem. But so does any other velocity profile of the same form with a different v0, right? We need another few steps to show that the particular best v0 we want is actually terminal velocity at 0 altitude, sqrt(g / k0), don\u0027t we?\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-08-20T23:36:12Z","Content":"\n\u003Cp\u003ETechnically, yes. I was a bit lazy about doing this strictly analytically, and I\u0027m not sure how hard it\u0027d be to actually do. If you take h to infinity, even thought time required for ascent is finite, fuel requirement diverges because acceleration goes to infinity as h does. So you probably need to set up cutoff height, optimize for v\u003Csub\u003E0\u003C/sub\u003E, and only then take the limit.\u003C/p\u003E\u003Cp\u003EAlternatively, one can be satisfied with the fact that numerically v\u003Csub\u003E0\u003C/sub\u003E = v\u003Csub\u003Et\u003C/sub\u003E works. That\u0027s the attitude I chose. Call me lazy if you must. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-21T00:11:25Z","Content":"\n\u003Cp\u003EWell if I\u0027m going to do the problem numerically, may as well go all the way and do the whole problem with a gravity turn, Isp varying with altitude, hard atmosphere cutoff, the whole deal.\u003C/p\u003E\u003Cp\u003EI was trying basically what you describe (and in KSP there\u0027s a nice meaningful cutoff altitude at H*ln(10^6)), though the results don\u0027t make much sense. I integrated F(t) from 0 to tf after substituting h(t) = -2H ln((2H - t v0)/(2H)).\u003C/p\u003E\u003Cp\u003EThen substituted tf = 2H (1 - exp(-hf / (2H))) / v0, differentiated the result wrt v0, and found a zero at:\u003C/p\u003E\u003Cp\u003Ev0 = sqrt(2 g H / (exp(hf / (2H)) \u002B 2 H k0))\u003C/p\u003E\u003Cp\u003EI\u0027m not sure that\u0027s right...\u003C/p\u003E\u003Cp\u003ETo put different v0 solutions on an equal footing for comparison purposes, I think you\u0027d need to include a coast phase and solve for h_meco(v0, h_apo).\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-08-21T03:23:31Z","Content":"\n\u003Cp\u003EI tried to get a numerical solution with gravity turn. I wasn\u0027t able to find anything resembling an optimum. If you have good ideas on that, I\u0027d be interested.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-21T05:06:48Z","Content":"\n\u003Cp\u003EYou\u0027re not the only one, the discussion of getting the full nonlinear gravity turn problem with drag and variable throttle and everything has come up several times. I think AlterBaron was going to have a look at using PSOPT (\u003Ca href=\u0022http://www.psopt.org/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.psopt.org/\u003C/a\u003E) to try a pseudospectral method, they have a rocket-launch example problem that I think he was going to start by trying to adapt for KSP fizziks.\u003C/p\u003E\u003Cp\u003EI was going to try a local discretization method, simple RK4 or maybe something implicit with a short time step and suitable initial and final conditions applied as equality constraints (or upper bound = lower bound for those variables). I was going to formulate the nonlinear programming problem including dynamics and all input variables for every time step, using some optimization modeling language that would do automatic differentiation for me, like AMPL or OpenOpt, or a new Matlab toolbox that I\u0027ve been developing in my research. I\u0027d use a large-scale sparse nonlinear interior point solver, most likely Ipopt, to find local minima, and if it converges to anything interesting then I\u0027ll start playing around with multi-start to see how many different local minima it can get stuck at, and how different in performance they are.\u003C/p\u003E\u003Cp\u003EI\u0027ve started and made a bit of progress (I can send you my Matlab stuff and explain how to use it if you want to look at it), but my advisor got back in town last week and I\u0027m behind in other areas of my research, I have code for linear systems I need to write that won\u0027t be useful for KSP. And I haven\u0027t attempted to convince my advisor that I find KSP-related research more interesting than that other code...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-21T05:14:19Z\u0022 title=\u002208/21/2013 05:14  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 21, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-08-21T05:12:44Z","Content":"\n\u003Cp\u003EHa, ha. Yeah, I know the feeling. Well, I\u0027ve been wanting to try something along the lines of a genetic algorithm and see if I can \u0022evolve\u0022 a near-optimal solution. The \u0022genome\u0022 would consist of adjustments to attitude and throttle position. It should work, but time...\u003C/p\u003E\u003Cp\u003EAs for the RK method, you shouldn\u0027t need to go for RK4. Just do a Velocity Verlet. It\u0027s equivalent to a mid-point RK2, much easier to implement, and should be sufficiently precise for the given problem.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-21T05:30:39Z","Content":"\n\u003Cp\u003EAre you gmcnew on Github by any chance? I\u0027m not a fan of genetic algorithms, but they have their uses. Here I think it would be great to use a genetic algorithm or some other randomized algorithm (whether it be simulated annealing, particle swarm, neural networks, whatever you feel like) as an outer-level iteration to generate initial guesses for a Newton-type local nonlinear programming solver.\u003C/p\u003E\u003Cp\u003ECan you do velocity Verlet with drag? Acceleration depends on velocity, so the velocity update becomes implicit. Implicit\u0027s not a big deal since I\u0027m using an optimization algorithm that can handle nonlinear equality constraints, but then I may as well just use trapezoidal. I have no idea what kind of sensitivity to expect with respect to time step length, discretization method, or number of time steps, so I\u0027ll play around with things once I get something working. RK4\u0027s not that much more difficult than anything else in principle, give me a Butcher tableau and I can do it... I just never feel confident if I start with Euler.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-08-21T05:37:14Z","Content":"\n\u003Cp\u003EYou are technically half a time step off with drag in Verlet, but in practice, it\u0027s not a big deal unless you have huge swings in velocity. And no, I\u0027m not on Github. I don\u0027t usually go for genetic algorithms. It just somehow feels right for this one.\u003C/p\u003E\n"},{"CreatedByName":"SaturnV","CreatedById":79006,"CreatedDateTime":"2013-08-21T09:26:01Z","Content":"\n\u003Cp\u003EI can\u0027t follow you the whole way, but your calculation looks rigorous. I was lost in the Euler-Lagrange part, other derivation seems reasonable. Thanks for your work, I should noticed that this is far beyond me, even when the answer is in front of me, I can\u0027t understand it fully.\u003C/p\u003E\n"},{"CreatedByName":"alterbaron","CreatedById":57492,"CreatedDateTime":"2013-08-23T03:00:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003ECan you do velocity Verlet with drag?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHere\u0027s the code I use to do velocity verlet with velocity dependent forces.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efunction [r v t] = vel_vert_term( F, m, r0, v0, dt, term_cond )\u003Cbr\u003E% VEL_VERT_TERM Integrate the equations of motion for a particle of mass\u003Cbr\u003E%     m being acted upon by a vector force F. Terminate when term_cond\u003Cbr\u003E%     is true.\u003Cbr\u003E%     \u003Cbr\u003E%     F - Function which returns the vector force acting on the particle,\u003Cbr\u003E%         as a function of position and velocity.\u003Cbr\u003E%     m - Particle mass\u003Cbr\u003E%     r0 - Initial position\u003Cbr\u003E%     v0 - Initial velocity\u003Cbr\u003E%     dt - Integration time step\u003Cbr\u003E\u003Cbr\u003Et = 0;\u003Cbr\u003Er = r0;\u003Cbr\u003Ev = v0;\u003Cbr\u003E\u003Cbr\u003Ea = @(rin, vin) F(rin, vin)./m;\u003Cbr\u003E\u003Cbr\u003Efirstrun = true;\u003Cbr\u003E\u003Cbr\u003Ewhile firstrun || (term_cond(r,v,t) == 0)\u003Cbr\u003E    r_old = r;\u003Cbr\u003E    v_old = v;\u003Cbr\u003E    a_t = a(r_old, v_old);\u003Cbr\u003E    r = r_old \u002B v_old*dt \u002B 0.5*a_t*dt.^2;\u003Cbr\u003E    v_est = v_old \u002B 0.5*dt*(a_t \u002B a(r,v_old\u002Bdt*a_t));\u003Cbr\u003E    v = v_old \u002B 0.5*(a_t \u002B a(r,v_est))*dt;\u003Cbr\u003E    t = t \u002B dt;\u003Cbr\u003E    firstrun = false;\u003Cbr\u003Eend\u003Cbr\u003E\u003Cbr\u003Eend\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-23T03:11:33Z\u0022 title=\u002208/23/2013 03:11  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 23, 2013\u003C/time\u003E by alterbaron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-23T05:06:41Z","Content":"\n\u003Cp\u003EInteresting, though I\u0027d also want to include a mass state as it simplifies the thrust constraint. I could normalize things in terms of delta-V and TWR, but then the max thrust constraint is messy.\u003C/p\u003E\u003Cp\u003EAny luck with PSOPT?\u003C/p\u003E\u003Cp\u003EEdit: Have you done an error analysis of that method (or did you get it from some reference that did)? You could do RK3 for the same number of function evaluations. In terms of your code, RK3 would look like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ewhile firstrun || (term_cond(r,v,t) == 0)\u003Cbr\u003E    r_old = r;\u003Cbr\u003E    v_old = v;\u003Cbr\u003E    a_t = a(r_old, v_old);\u003Cbr\u003E    r_half = r_old \u002B 0.5*v_old*dt;\u003Cbr\u003E    v_half = v_old \u002B 0.5*a_t*dt;\u003Cbr\u003E    a_half = a(r_half, v_half);\u003Cbr\u003E    r_est = r_old - v_old*dt \u002B 2*v_half*dt;\u003Cbr\u003E    v_est = v_old - a_t*dt \u002B 2*a_half*dt;\u003Cbr\u003E    a_est = a(r_est, v_est);\u003Cbr\u003E    r = r_old \u002B (v_old \u002B 4*v_half \u002B v_est)*dt/6;\u003Cbr\u003E    v = v_old \u002B (a_t \u002B 4*a_half \u002B a_est)*dt/6;\u003Cbr\u003E    t = t \u002B dt;\u003Cbr\u003E    firstrun = false;\u003Cbr\u003Eend\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-23T05:37:58Z\u0022 title=\u002208/23/2013 05:37  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 23, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"}]}