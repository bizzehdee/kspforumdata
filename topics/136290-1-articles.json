{"TopicId":136290,"ForumId":55,"TopicTitle":"Asset loading suggestion","CreatedByName":"SpaceTiger","CreatedById":133800,"CreatedDateTime":"2016-04-07T12:05:22Z","PageNum":1,"Articles":[{"CreatedByName":"SpaceTiger","CreatedById":133800,"CreatedDateTime":"2016-04-07T12:05:22Z","Content":"\n\u003Cp\u003E\nKerbal uses a co routine to load every asset during the initial loading screen and only loads one asset per frame.\n\u003C/p\u003E\n\u003Cp\u003E\nNow that might not sound bad but if you take into account that after each asset Kerbal renders the whole frame again for no good reason. Yes the loading screen only consist of a loading bar and a image for the background but even that adds to the loading time. I have noticed that on my GTX 770 the clock goes all the way up and stays at around 90% load during this time which makes me ask the question how slower GPU\u0027s handle this. I would guess this adds to the loading time quite a bit.\n\u003C/p\u003E\n\u003Cp\u003E\nLets assume Kerbal does the following:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan\u003E    \u003C/span\u003E\u003Cspan\u003Eprivate\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003EIEnumerator\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003ELoadAssets\u003C/span\u003E\u003Cspan\u003E()\u003C/span\u003E\u003Cspan\u003E\n    \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n      \u003C/span\u003E\u003Cspan\u003E//no idea how kerbal handles the loading screen internally so lets assume loops trough a list of items called assets\u003C/span\u003E\u003Cspan\u003E\n      foreach\u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003Evar asset in assets\u003C/span\u003E\u003Cspan\u003E)\u003C/span\u003E\u003Cspan\u003E\n      \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n        \u003C/span\u003E\u003Cspan\u003E//loads asset here\u003C/span\u003E\u003Cspan\u003E\n\n        \u003C/span\u003E\u003Cspan\u003E//and gives controll back to unity/whatever else is loading during the loading screen\u003C/span\u003E\u003Cspan\u003E\n        yield \u003C/span\u003E\u003Cspan\u003Ereturn\u003C/span\u003E\u003Cspan\u003E null\u003C/span\u003E\u003Cspan\u003E;\u003C/span\u003E\u003Cspan\u003E\n      \u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E\n    \u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAs you can see with this code i would load one asset at a time which brings up the problems i highlighted before.\n\u003C/p\u003E\n\u003Cp\u003E\nNow my suggestion would be to modify that code to something along these lines:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan\u003E    \u003C/span\u003E\u003Cspan\u003Eprivate\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003EIEnumerator\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003ELoadAssets\u003C/span\u003E\u003Cspan\u003E()\u003C/span\u003E\u003Cspan\u003E\n    \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n      \u003C/span\u003E\u003Cspan\u003E//start a timer\u003C/span\u003E\u003Cspan\u003E\n      \u003C/span\u003E\u003Cspan\u003EStopwatch\u003C/span\u003E\u003Cspan\u003E timer \u003C/span\u003E\u003Cspan\u003E=\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003Enew\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003EStopwatch\u003C/span\u003E\u003Cspan\u003E();\u003C/span\u003E\u003Cspan\u003E\n      timer\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EStart\u003C/span\u003E\u003Cspan\u003E();\u003C/span\u003E\u003Cspan\u003E\n      \u003C/span\u003E\u003Cspan\u003E//no idea how kerbal handles the loading screen internally so lets assume loops trough a list of items called assets\u003C/span\u003E\u003Cspan\u003E\n      foreach \u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003Evar asset in assets\u003C/span\u003E\u003Cspan\u003E)\u003C/span\u003E\u003Cspan\u003E\n      \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n        \u003C/span\u003E\u003Cspan\u003E//loads asset here\u003C/span\u003E\u003Cspan\u003E\n\n        \u003C/span\u003E\u003Cspan\u003E//a frame at 60fps takes ~0.016 seconds so we take that as the target\u003C/span\u003E\u003Cspan\u003E\n        \u003C/span\u003E\u003Cspan\u003Eif\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003Etimer\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EElapsed\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003ETotalMilliseconds\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003E\u0026gt;=\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003E0.016\u003C/span\u003E\u003Cspan\u003E)\u003C/span\u003E\u003Cspan\u003E\n        \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E//if it took longer than a frame we give controll back to unity/whatever else is loading during the loading screen\u003C/span\u003E\u003Cspan\u003E\n          yield \u003C/span\u003E\u003Cspan\u003Ereturn\u003C/span\u003E\u003Cspan\u003E null\u003C/span\u003E\u003Cspan\u003E;\u003C/span\u003E\u003Cspan\u003E\n          \u003C/span\u003E\u003Cspan\u003E//reset and start the timer\u003C/span\u003E\u003Cspan\u003E\n          timer\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EReset\u003C/span\u003E\u003Cspan\u003E();\u003C/span\u003E\u003Cspan\u003E\n          timer\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EStart\u003C/span\u003E\u003Cspan\u003E();\u003C/span\u003E\u003Cspan\u003E\n        \u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E\n      \u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E\n    \u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nIn this example small files would load back to back without any downtime, maxing out either CPU or HDD/SSD, big files would behave exactly the same as before as they took more time to load anyways.\n\u003C/p\u003E\n"}]}