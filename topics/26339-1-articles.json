{"TopicId":26339,"ForumId":16,"TopicTitle":"Calculate needed fuel fraction","CreatedByName":"twotoes02","CreatedById":23227,"CreatedDateTime":"2013-05-11T01:12:48Z","PageNum":1,"Articles":[{"CreatedByName":"twotoes02","CreatedById":23227,"CreatedDateTime":"2013-05-11T01:12:48Z","Content":"\n\u003Cp\u003EHey gang, Two Toes here.\u003C/p\u003E\u003Cp\u003EI was hoping to get some help with a bit of rocket science I\u0027ve tripped up on. I\u0027m trying to calculate the mass fraction of fuel a rocket will need to carry based on the needed delta v and a few other variables.\u003C/p\u003E\u003Cp\u003ELet me show you what I have so far:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i1352.photobucket.com/albums/q650/TwoToes02/deltavmff_zpsc169e85b.gif\u0022 alt=\u0022deltavmff_zpsc169e85b.gif\u0022\u003E\u003C/p\u003E\u003Cp\u003EThis derivation provides the delta v available for a single stage rocket knowing g, the specific impulse of the engine, the starting mass (mo), the burn out mass (mbo) and the thrust to weight ratio R.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i1352.photobucket.com/albums/q650/TwoToes02/thrust2weight_zps8cabb63a.gif\u0022 alt=\u0022thrust2weight_zps8cabb63a.gif\u0022\u003E\u003C/p\u003E\u003Cp\u003EWhat I\u0027d like to do (and this is where I\u0027m having trouble) is redefine the equation in terms of mbo. With this I can determine the mass fuel fraction (mff) of the vessel knowing the thrust, specific impulse, delta v and starting mass. The issue as you can see is that one of the mbo\u0027s is located within a natural log.\u003C/p\u003E\u003Cp\u003EDoes anyone know of another derivation that allows me to calculate the burn out mass with these (or more) variables? Other suggestions are more than welcome of course.\u003C/p\u003E\u003Cp\u003EThanks!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-05-11T01:20:20Z\u0022 title=\u002205/11/2013 01:20  AM\u0022 data-short=\u002211 yr\u0022\u003EMay 11, 2013\u003C/time\u003E by twotoes02\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jason Patterson","CreatedById":44388,"CreatedDateTime":"2013-05-11T01:28:08Z","Content":"\n\u003Cp\u003EDo you have a question? The first part of the equation is Tsiolkovsky\u0027s rocket equation.\u003C/p\u003E\u003Cp\u003EIs the second part your attempt to include TWR? I\u0027m kind of confused about its purpose. If you\u0027re trying to calculate an effective delta-v by subtracting out part of the entire quantity to compensate for gravity drag, this won\u0027t work. You\u0027d have to know how long the engines were burning upward and the characteristics of the gravity turn (assuming there is one) and all of that sort of thing. Additionally, as the rocket moves upward, its TWR changes because the force of gravity decreases. On several bodies you\u0027d also have an atmosphere to deal with.\u003C/p\u003E\n"},{"CreatedByName":"nyrath","CreatedById":61886,"CreatedDateTime":"2013-05-11T01:31:41Z","Content":"\n\u003Cp\u003Etwotoes02, the opposite of the natural log of a number is called e^x or natural antilog.\u003C/p\u003E\u003Cp\u003EFor example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EdeltaV = (g*Isp) * ln[massRatio]\u003Cbr\u003EdeltaV / (g*Isp)  = ln[massRatio]\u003Cbr\u003EmassRatio = e^(deltaV / (g*Isp))\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EYou sort of confused me because I\u0027m used to seeing the letter R to symbolize Mass Ratio, not thrust to weight ratio.\u003C/p\u003E\u003Cp\u003ENow, below, Mp is the mass of the propellant, Me is the mass of the rest of the rocket, deltaV is delta V, Isp is specific Impulse\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMassRatio = (Mp/Me) \u002B 1\u003Cbr\u003EdeltaV = (g*Isp) * ln((Mp/Me) \u002B 1)\u003Cbr\u003EdeltaV / (g*Isp) = ln((Mp/Me) \u002B 1)\u003Cbr\u003Ee^(deltaV / (g*Isp)) = (Mp/Me) \u002B 1\u003Cbr\u003Ee^(deltaV / (g*Isp)) - 1 = Mp / Me\u003Cbr\u003E(e^(deltaV / (g*Isp)) - 1) * Me = Mp\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eso the last equation will give you the mass of propellant, given the other variables. \u003C/p\u003E\u003Cp\u003EThe total initial mass is Me \u002B Mp, divide the mass of the propellant by that to get the propellant fraction.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-05-11T01:41:32Z\u0022 title=\u002205/11/2013 01:41  AM\u0022 data-short=\u002211 yr\u0022\u003EMay 11, 2013\u003C/time\u003E by nyrath\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"twotoes02","CreatedById":23227,"CreatedDateTime":"2013-05-11T02:03:30Z","Content":"\n\u003Cp\u003EWow fast responses, that\u0027s awesome!\u003C/p\u003E\u003Cp\u003EI do apologize for confusing you, its most likely in my clunky communication skills...\u003C/p\u003E\u003Cp\u003EJason if I may, \u003C/p\u003E\u003Cp\u003ELet\u0027s assume the rocket is already in space and I\u0027m using this derivation to determine the delta v needed for an orbital maneuver. I derived this equation from William Tyrrell Thomson\u0027s \u0022Introduction to Space Dynamics\u0022 equation (8.1-10) on page 242 of the second edition (I believe its the second edition...). Now knowing this, if you believe TWR is not needed under these circumstances then we can certinally modify the equation or find another derivation that will serve my purpose better.\u003C/p\u003E\u003Cp\u003EAnd it seems that I may have not posted my question clearly. Please allow me to restate the question. Is it possible to rewrite the equation to solve for mbo knowing delta v, and the other variables? Or is there another derivation that would better suit my purpose. However, it seems that nyrath may have answered my question.\u003C/p\u003E\u003Cp\u003Enyrath, yes I certainly do understand the natural log and its opposite, the problem here is that one iteration of mbo is within a natural log and the other is not.\u003C/p\u003E\u003Cp\u003EI am a little confused unfortunately, you stated that R represents the mass ratio where the texts I have at hand show R as the thrust to weight ratio. Written as R = T/(m*g) where T is the thrust of the rocket. However it seems you have provided me another equation that will better suit me and my need! I do thank you good sir, please allow me to try this out and I will let you know if this is the answer I am looking for.\u003C/p\u003E\u003Cp\u003EThank you for your time. I\u0027ll see if this answer is what I\u0027m looking for.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-05-11T02:04:22Z","Content":"\n\u003Cp\u003EEdit: Ninja\u0027d by OP. Might look for that book, maybe the relevant page can be previewed in Google books or something. The first term in the equation is Tsiolkovsky\u0027s rocket equation which most of us here are familiar with. We\u0027re just not sure where the second term came from.\u003C/p\u003E\u003Cp\u003EFollow nyrath\u0027s math (though natural antilog is a silly name for what I always just call the exponential function). One thing is you may not know your empty mass Me because you don\u0027t know how many fuel tanks you need to add and they add dry mass. If you use fuel tanks as big or bigger than the FL-T200 (so none of the small Oscar-B or Round-8 tanks), then all the tanks in KSP have the same propellant fraction of 8/9. So if you have a final payload of mass Ml, then you can add tanks such that:\u003C/p\u003E\u003Cp\u003EMt = Mp/8, where Mt = dry tank mass, Mp = propellant mass\u003C/p\u003E\u003Cp\u003EMe = Ml \u002B Mt = Ml \u002B Mp/8, where Me = empty mass, Ml = payload (non-fuel-tank) mass\u003C/p\u003E\u003Cp\u003E(e^(deltaV / (g*Isp)) - 1) * (Ml \u002B Mp/8) = Mp\u003C/p\u003E\u003Cp\u003E(e^(deltaV / (g*Isp)) - 1) * Ml = Mp * (1 - (e^(deltaV / (g*Isp)) - 1)/8)\u003C/p\u003E\u003Cp\u003E(e^(deltaV / (g*Isp)) - 1) * Ml / (1 - (e^(deltaV / (g*Isp)) - 1)/8) = Mp\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-05-11T02:11:30Z\u0022 title=\u002205/11/2013 02:11  AM\u0022 data-short=\u002211 yr\u0022\u003EMay 11, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nyrath","CreatedById":61886,"CreatedDateTime":"2013-05-11T02:10:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003Ethough natural antilog is a silly name for what I always just call the exponential function\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, it is true that is its real name. But when trying to explain it is not intuitively obvious that the exponential function is the inverse of natural logarithm. Which is what you have to do when solving for Mp\u003C/p\u003E\n"},{"CreatedByName":"purpletarget","CreatedById":57317,"CreatedDateTime":"2013-05-11T02:57:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022twotoes02\u0022 data-cite=\u0022twotoes02\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ELet\u0027s assume the rocket is already in space and I\u0027m using this derivation to determine the delta v needed for an orbital maneuver. I derived this equation from William Tyrrell Thomson\u0027s \u0022Introduction to Space Dynamics\u0022 equation (8.1-10) on page 242 of the second edition (I believe its the second edition...). Now knowing this, if you believe TWR is not needed under these circumstances then we can certinally modify the equation or find another derivation that will serve my purpose better.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe page you mention isn\u0027t available for preview, but 241 is. So looking at the initial steps of what I think was leading to your OP formula, the equation isn\u0027t the Delta-V proper, but rather the max vertical velocity. So the first part is the Rocket Equation, and everything after the Minus is trying to account for Gravity Drag because the equation assumes vertical flight from Earth. It\u0027s an equation dealing in performance more than characteristics. \u003C/p\u003E\u003Cp\u003ESo, in terms of figuring out your actual Rocket Delta-V, particularly for orbital maneuvers, just use the Rocket equation. ( dV = Isp*g0*ln(m1/m2) ) and drop the second part after the Minus. \u003C/p\u003E\u003Cp\u003EAfter that, rearranging for your unknown mass ratio should be pretty straight forward.\u003C/p\u003E\n"},{"CreatedByName":"Jason Patterson","CreatedById":44388,"CreatedDateTime":"2013-05-11T03:07:28Z","Content":"\n\u003Cp\u003EI\u0027m not 100% certain, but I don\u0027t believe that that function, delta-v(Mbo), has an inverse. I think that\u0027s what you\u0027re after, but it just doesn\u0027t look to be possible without resorting to infinite series.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-05-11T04:10:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Jason Patterson\u0022 data-cite=\u0022Jason Patterson\u0022\u003E\u003Cdiv\u003EI\u0027m not 100% certain, but I don\u0027t believe that that function, delta-v(Mbo), has an inverse. I think that\u0027s what you\u0027re after, but it just doesn\u0027t look to be possible without resorting to infinite series.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou can express it in terms of the Lambert W function (also known as product log). Named after the same guy as the orbital transfer Lambert problem, funny enough. \u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.wolframalpha.com/input/?i=solve\u002Ba\u002B%3D\u002Bb\u002Bln%28x%29\u002B%2B\u002Bc%2Fx%2C\u002Bfor\u002Bx\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.wolframalpha.com/input/?i=solve\u002Ba\u002B%3D\u002Bb\u002Bln%28x%29\u002B%2B\u002Bc%2Fx%2C\u002Bfor\u002Bx\u003C/a\u003E\u003C/p\u003E\n"}]}