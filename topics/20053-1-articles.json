{"TopicId":20053,"ForumId":50,"TopicTitle":"[Tutorial] Interplanetary Travel without Angles: The Launch Calendar","CreatedByName":"martscht","CreatedById":29513,"CreatedDateTime":"2012-09-23T16:57:27Z","PageNum":1,"Articles":[{"CreatedByName":"martscht","CreatedById":29513,"CreatedDateTime":"2012-09-23T16:57:27Z","Content":"\n\u003Cp\u003ETo me it seems like one of the biggest problems in interplanetary travel seems to be determining whether the angle between the departure planet (mostly Kerbin) and the target is correct. Now since the cooperation of Kosmo-not and Olex gave us this beautiful brain-child (\u003Ca href=\u0022http://ksp.olex.biz/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp.olex.biz/\u003C/a\u003E) the only thing we actually need to determine is whether the picture shown in the browser is the same as the one seen onscreen in KSP. I know there are some nice tools out there that allow us to measure angles in KSP, but in my opinion this isn\u0027t necessary, because all-stock KSP provides everything we need: an exact measure of time.\u003C/p\u003E\u003Cp\u003EWorking under the assumption that all new games of KSP start with the same constellation it is extremely easy to determine when you reach the exact phase angle required for smooth interplanetary sailing. I\u0027ve written an R-function that can determine the next occurence of a launch window, but basically this is all you need to know:\u003C/p\u003E\u003Cp\u003EThe Eve launch window opens every 170 days, for the first time on day 138. For Jool it opens every 117 days and does so for the first time on day 45. For Duna I\u0027ve also only come up with a rough approximation so far (because of the slightly elliptical orbit): here the launch window opens every 228 days and is open for the first time on day 56.\u003C/p\u003E\u003Cp\u003ENow when I say \u0022launch window\u0022 here, I actually mean \u0022injection burn window\u0022, meaning that it\u0027s probably better to already be in your parking orbit, when the moment comes. If rough approximations is all you need, this should do. For a bit more precision:\u003C/p\u003E\u003Cp\u003EEVE\u003C/p\u003E\u003Cp\u003EPeriod: 170 days, 7 hours, 56 minutes, 21 seconds\u003C/p\u003E\u003Cp\u003EInitial Wait: 137 days, 15 hours, 17 minutes, 54 seconds\u003C/p\u003E\u003Cp\u003EDUNA\u003C/p\u003E\u003Cp\u003EPeriod: 227 days, 19 hours, 24 minutes, 58 seconds\u003C/p\u003E\u003Cp\u003EInitial Wait: 55 days, 21 hours, 55 minutes, 37 seconds\u003C/p\u003E\u003Cp\u003EJOOL\u003C/p\u003E\u003Cp\u003EPeriod: 117 days, 0 hours, 45 minutes, 4 seconds\u003C/p\u003E\u003Cp\u003EInitial Wait: 45 days, 20 hours, 44 minutes, 36 seconds\u003C/p\u003E\u003Cp\u003EI haven\u0027t come around to doing Moho yet, because I\u0027ve been busy visiting the outher planets ;-). Anyway my tactic was to launch a spacestation as my clock (i.e. launch it at the very beginning of the game). Then I was able to see the total time that had passed in the space centre and simply time my launches and injection burns accordingly.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222012-10-12T19:44:39Z\u0022 title=\u002210/12/2012 07:44  PM\u0022 data-short=\u002211 yr\u0022\u003EOctober 12, 2012\u003C/time\u003E by sal_vager\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"maltesh","CreatedById":17144,"CreatedDateTime":"2012-09-23T17:10:59Z","Content":"\n\u003Cp\u003EConvert those numbers to seconds, and you\u0027ll have values you can set the \u003Cstrong\u003EUT=\u003C/strong\u003E parameter in the Flightstate section of persistent.sfs file to, instead of waiting.\u003C/p\u003E\n"},{"CreatedByName":"Grizzlol","CreatedById":40170,"CreatedDateTime":"2012-09-23T17:37:52Z","Content":"\n\u003Cp\u003EBut you would still need to know the (almost) exact ejection angle, or did I miss something? You replaced the phase angle with a measurement of time, which is useful, but what about the ejection angle? Are you using the same ejection angle for all transfers (I wonder if that is even possible) ?\u003C/p\u003E\n"},{"CreatedByName":"martscht","CreatedById":29513,"CreatedDateTime":"2012-09-23T18:09:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Grizzlol\u0022 data-cite=\u0022Grizzlol\u0022\u003E\u003Cdiv\u003EBut you would still need to know the (almost) exact ejection angle, or did I miss something? You replaced the phase angle with a measurement of time, which is useful, but what about the ejection angle? Are you using the same ejection angle for all transfers (I wonder if that is even possible) ?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are correct. I didn\u0027t post fix numbers, because the time you need to wait for injection is dependent upon your parking altitude, but is fairly easy to compute.\u003C/p\u003E\u003Cp\u003EMy standard parking altitude is 125 km. For this orbit around Kerbin the period (i.e. the time it requires to go around a full orbit) is 2064.292 seconds. From Olex\u0027s site we know that if we were to go to Jool the ejection angle is 113.86\u00C3\u201A\u00C2\u00B0. Using this info we can compute our wait time from Kerbin prograde as\u003C/p\u003E\u003Cp\u003E(360-113.86)/360 * period = 1411.402 seconds. \u003C/p\u003E\u003Cp\u003EThus we\u0027d have to wait 23 minutes and 31 seconds for the correct ejection angle.\u003C/p\u003E\u003Cp\u003EEdit: The period is computed by 2 * pi * sqrt( (altitude \u002B 600)^3 / mu ) with mu being 3530.461 for Kerbin\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222012-09-23T18:13:12Z\u0022 title=\u002209/23/2012 06:13  PM\u0022 data-short=\u002211 yr\u0022\u003ESeptember 23, 2012\u003C/time\u003E by martscht\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Banarath","CreatedById":12261,"CreatedDateTime":"2012-09-25T20:48:59Z","Content":"\n\u003Cp\u003EThanks, I made a spreadsheet calender for KSP launches\u003C/p\u003E\u003Cp\u003ECan you post your maths and your formula?\u003C/p\u003E\u003Cp\u003EI would like to calculate the other planets\u003C/p\u003E\n"},{"CreatedByName":"martscht","CreatedById":29513,"CreatedDateTime":"2012-09-28T15:39:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Banarath\u0022 data-cite=\u0022Banarath\u0022\u003E\u003Cdiv\u003EThanks, I made a spreadsheet calender for KSP launches\u003Cp\u003ECan you post your maths and your formula?\u003C/p\u003E\u003Cp\u003EI would like to calculate the other planets\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESure, you can can calculate the wait time as\u003C/p\u003E\u003Cp\u003E(phi2 - phi1) / (omega2 - omega1)\u003C/p\u003E\u003Cp\u003Ephi represents angles (with phi1 being the initial angle and phi2 being the final angle, i.e. the phase angle Olex\u0027s calculator gives you) in radians. Omega is calculated by\u003C/p\u003E\u003Cp\u003Esqrt(mu / a^3)\u003C/p\u003E\u003Cp\u003Ewhere mu is the gravitational parameter and a is the semimajor axis. Again Omega1 is computed for your origin (i.e. Kerbin) and Omega2 is for your goal.\u003C/p\u003E\u003Cp\u003EThe Period is computed as 2*pi/(omega2-omega1) (and is returned in seconds).\u003C/p\u003E\u003Cp\u003EThough there seem to be some problems in my calculation (perhaps my initial angles were off), because the angles aren\u0027t quite aligned at the time I predicted (I checked with the Kerbal Engineer Mod)...\u003C/p\u003E\n"},{"CreatedByName":"Diche Bach","CreatedById":76097,"CreatedDateTime":"2013-08-04T00:42:34Z","Content":"\n\u003Cp\u003EI\u0027ve been looking for this thread \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}