{"TopicId":35281,"ForumId":34,"TopicTitle":"[0.20.x] Subassembly Manager","CreatedByName":"TheUndeadFish","CreatedById":67157,"CreatedDateTime":"2013-06-29T16:42:30Z","PageNum":3,"Articles":[{"CreatedByName":"simmy2109","CreatedById":72110,"CreatedDateTime":"2013-07-02T18:56:49Z","Content":"\n\u003Cp\u003EAlright. I wonder why that limitation exists and if it could be fixed. I don\u0027t think SAL had that limitation, but I could be wrong. And then changes to KSP itself might have made SAL\u0027s method broken anyways. Definitely something to look at improving if it can be done.\u003C/p\u003E\u003Cp\u003EThanks for the answer though. I understand what to do now.\u003C/p\u003E\n"},{"CreatedByName":"MR4Y","CreatedById":66897,"CreatedDateTime":"2013-07-02T19:27:06Z","Content":"\n\u003Cp\u003EMy only issues till this point is that Subassemblies can only be attached radially.\u003C/p\u003E\n"},{"CreatedByName":"TheUndeadFish","CreatedById":67157,"CreatedDateTime":"2013-07-02T23:42:44Z","Content":"\n\u003Cp\u003ECurrently, you can only attach a subassembly via the same part that you clicked on to detach it in the first place. This is due to the way KSP views things as a hierarchy of parts. The part you click on to detach it is the root of that subassembly and consequently the only one that can be used to reattach. If you take a whole craft and save it as a subassembly, then the root node (the command pod that you used to click and drag it) will be the root of the subassembly and consequently the only one that can be used to reattach. In that case, if you\u0027ve covered up all the attachment nodes on that root, then you probably won\u0027t have any way to reattach the subassembly to another craft.\u003C/p\u003E\u003Cp\u003EThese are all the same limitations that the old Subassembly Loader had. In fact, the old mod had a check that would prevent you from even trying to save a subassembly if it believed that it would not be reattachable. I haven\u0027t put in any kind of check like that, so for better or worse you can currently end up with unattachable subassemblies.\u003C/p\u003E\u003Cp\u003EI would like to find a way around these limitations eventually. But I suspect it will involve rearranging some of the part hierarchy of the subassembly on the fly, if it\u0027s possible. So that is going to take some time and experimentation.\u003C/p\u003E\n"},{"CreatedByName":"simmy2109","CreatedById":72110,"CreatedDateTime":"2013-07-03T00:25:36Z","Content":"\n\u003Cp\u003EYeah I completely understand how much of a pain (any maybe unavoidable problem) that is. Probably why Squad hasn\u0027t shipped any sort of thing like this in-game. Even with that limitation, this is still HUGELY useful. Thanks for SAL 2.0!\u003C/p\u003E\n"},{"CreatedByName":"GJNelson","CreatedById":60188,"CreatedDateTime":"2013-07-03T00:49:17Z","Content":"\n\u003Cp\u003EQuestion, do I need to install the old Subassembly Loader too for Subassembly Manager to work fully? I noticed no button icons and the PluginData/subassemblyLoader/subassemblies folders are not under the GameData folder.\u003C/p\u003E\n"},{"CreatedByName":"simmy2109","CreatedById":72110,"CreatedDateTime":"2013-07-03T01:00:30Z","Content":"\n\u003Cp\u003ENo, the manager is run by itself. The old SAL was run by a developer who seems to no longer be developing. This is an independent mod.\u003C/p\u003E\n"},{"CreatedByName":"GJNelson","CreatedById":60188,"CreatedDateTime":"2013-07-03T01:03:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022simmy2109\u0022 data-cite=\u0022simmy2109\u0022\u003E\u003Cdiv\u003ENo, the manager is run by itself. The old SAL was run by a developer who seems to no longer be developing. This is an independent mod.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo I can uninstall the old mod and install the new Subassembly Manager and all the icons, etc. will appear and work?\u003C/p\u003E\n"},{"CreatedByName":"HoY","CreatedById":57294,"CreatedDateTime":"2013-07-03T01:19:16Z","Content":"\n\u003Cp\u003ENew mod uses new button\u003C/p\u003E\n"},{"CreatedByName":"TheUndeadFish","CreatedById":67157,"CreatedDateTime":"2013-07-03T01:34:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022GJNelson\u0022 data-cite=\u0022GJNelson\u0022\u003E\u003Cdiv\u003ESo I can uninstall the old mod and install the new Subassembly Manager and all the icons, etc. will appear and work?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou don\u0027t need the old SAL plugin. And this mod doesn\u0027t use any of those icon files. However, this does still use \u0022Kerbal Space Program\\PluginData\\subassemblyLoader\\subassemblies\u0022 to save and load subassemblies. (I did it that way mainly so that people can easily start using my mod while continuing to access anything they\u0027ve previously saved with the old SAL.)\u003C/p\u003E\n"},{"CreatedByName":"GJNelson","CreatedById":60188,"CreatedDateTime":"2013-07-03T09:13:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheUndeadFish\u0022 data-cite=\u0022TheUndeadFish\u0022\u003E\u003Cdiv\u003EYou don\u0027t need the old SAL plugin. And this mod doesn\u0027t use any of those icon files. However, this does still use \u0022Kerbal Space Program\\PluginData\\subassemblyLoader\\subassemblies\u0022 to save and load subassemblies. (I did it that way mainly so that people can easily start using my mod while continuing to access anything they\u0027ve previously saved with the old SAL.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECool, thanks for the clarification. I\u0027ll be downloading shortly and really appreciate your efforts!\u003C/p\u003E\n"},{"CreatedByName":"MR4Y","CreatedById":66897,"CreatedDateTime":"2013-07-03T10:25:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheUndeadFish\u0022 data-cite=\u0022TheUndeadFish\u0022\u003E\u003Cdiv\u003ECurrently, you can only attach a subassembly via the same part that you clicked on to detach it in the first place. This is due to the way KSP views things as a hierarchy of parts. The part you click on to detach it is the root of that subassembly and consequently the only one that can be used to reattach. If you take a whole craft and save it as a subassembly, then the root node (the command pod that you used to click and drag it) will be the root of the subassembly and consequently the only one that can be used to reattach. In that case, if you\u0027ve covered up all the attachment nodes on that root, then you probably won\u0027t have any way to reattach the subassembly to another craft.\u003Cp\u003EThese are all the same limitations that the old Subassembly Loader had. In fact, the old mod had a check that would prevent you from even trying to save a subassembly if it believed that it would not be reattachable. I haven\u0027t put in any kind of check like that, so for better or worse you can currently end up with unattachable subassemblies.\u003C/p\u003E\u003Cp\u003EI would like to find a way around these limitations eventually. But I suspect it will involve rearranging some of the part hierarchy of the subassembly on the fly, if it\u0027s possible. So that is going to take some time and experimentation.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI suggested this to Pontiac and will to you. What if a invisible root part was created when you save the subassembly? Or if the subassembly was possible to be saved as a part?\u003C/p\u003E\n"},{"CreatedByName":"simmy2109","CreatedById":72110,"CreatedDateTime":"2013-07-03T18:19:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MR4Y\u0022 data-cite=\u0022MR4Y\u0022\u003E\u003Cdiv\u003EI suggested this to Pontiac and will to you. What if a invisible root part was created when you save the subassembly? Or if the subassembly was possible to be saved as a part?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think you\u0027d have to be careful to then be able to \u0027deconstruct\u0027 this single part you\u0027ve created once it is imported somewhere. And if I understand what Undead is saying about how KSP handles the hierarchy of parts once you select it.... would there even be enough information to create the logic needed to put the correct nodes on this single part you create?\u003C/p\u003E\n"},{"CreatedByName":"Death Engineering","CreatedById":68528,"CreatedDateTime":"2013-07-03T21:03:30Z","Content":"\n\u003Cp\u003EWhat does this app do with struts that extend from the save subassembly to another part that was not saved? Say.. struts from the top of fuel tanks on the booster that extend up to a lander?\u003C/p\u003E\n"},{"CreatedByName":"Eric S","CreatedById":57117,"CreatedDateTime":"2013-07-04T00:29:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MR4Y\u0022 data-cite=\u0022MR4Y\u0022\u003E\u003Cdiv\u003EI suggested this to Pontiac and will to you. What if a invisible root part was created when you save the subassembly? Or if the subassembly was possible to be saved as a part?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe first wouldn\u0027t help. The problem with only being able to reattach a subassembly by the part that it was originally attached to is due to the KSP tree structure and can be seen even without using subassembly manager. Create a new craft starting with a command pod (it doesn\u0027t actually have to be a command pod, just as an example). Stack two Hubmax six-way connectors under it. Pick up the Hubmax that is the center piece, so you\u0027re removing both Hubmax parts and detach it from the command pod. You will notice that the subassembly that you\u0027re holding only has five nodes on it, and all of them were on the Hubmax that had been attached to the base part. None of the nodes on the Hubmax attached to the one you pulled off are active. This will happen even in a stock game, so it\u0027s almost definitely not a subassembly manager issue.\u003C/p\u003E\u003Cp\u003EThe second could have issues as well, since it would require the ability to create new parts on the fly that exactly match the subassembly, and I suspect that at least some of the parts modules may have issues with multiple parts merged into one, and that\u0027s ignoring the fact that some parts have stats on them that you don\u0027t want the entire structure to take over. On top of that, decouplers/separators in the merged part certainly wouldn\u0027t work, defeating the whole point of using a mod like this to create lift vehicles.\u003C/p\u003E\u003Cp\u003EThe only possibly viable solution that I see that can be done by a modder would be as TheUndeadFish said, rearranging the part tree so that the part you wanted to attach the subassembly by to the craft is the root part. The easiest way I see of doing that would be to have an option either when you save or load the subassembly to designate a part as the root part, so that you could use the nodes of that part, or surface attach that part. Getting all of the nodes on the subassembly to activate is something Squad might be able to fix, but I don\u0027t think a mod could do that.\u003C/p\u003E\u003Cp\u003EEDIT: From what I understand about struts and fuel lines, those would probably be the hardest part of rearranging the tree, since the vector that controls which way the strut/fuel line points is relative to the root part, so changing the root part would require that vector to be recomputed.\u003C/p\u003E\n"},{"CreatedByName":"MR4Y","CreatedById":66897,"CreatedDateTime":"2013-07-04T01:39:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Eric S\u0022 data-cite=\u0022Eric S\u0022\u003E\u003Cdiv\u003EThe first wouldn\u0027t help. The problem with only being able to reattach a subassembly by the part that it was originally attached to is due to the KSP tree structure and can be seen even without using subassembly manager. Create a new craft starting with a command pod (it doesn\u0027t actually have to be a command pod, just as an example). Stack two Hubmax six-way connectors under it. Pick up the Hubmax that is the center piece, so you\u0027re removing both Hubmax parts and detach it from the command pod. You will notice that the subassembly that you\u0027re holding only has five nodes on it, and all of them were on the Hubmax that had been attached to the base part. None of the nodes on the Hubmax attached to the one you pulled off are active. This will happen even in a stock game, so it\u0027s almost definitely not a subassembly manager issue.\u003Cp\u003EThe second could have issues as well, since it would require the ability to create new parts on the fly that exactly match the subassembly, and I suspect that at least some of the parts modules may have issues with multiple parts merged into one, and that\u0027s ignoring the fact that some parts have stats on them that you don\u0027t want the entire structure to take over. On top of that, decouplers/separators in the merged part certainly wouldn\u0027t work, defeating the whole point of using a mod like this to create lift vehicles.\u003C/p\u003E\u003Cp\u003EThe only possibly viable solution that I see that can be done by a modder would be as TheUndeadFish said, rearranging the part tree so that the part you wanted to attach the subassembly by to the craft is the root part. The easiest way I see of doing that would be to have an option either when you save or load the subassembly to designate a part as the root part, so that you could use the nodes of that part, or surface attach that part. Getting all of the nodes on the subassembly to activate is something Squad might be able to fix, but I don\u0027t think a mod could do that.\u003C/p\u003E\u003Cp\u003EEDIT: From what I understand about struts and fuel lines, those would probably be the hardest part of rearranging the tree, since the vector that controls which way the strut/fuel line points is relative to the root part, so changing the root part would require that vector to be recomputed.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, considering subassemblies are craft files...\u003C/p\u003E\n"},{"CreatedByName":"Benie","CreatedById":70327,"CreatedDateTime":"2013-07-04T03:57:48Z","Content":"\n\u003Cp\u003EThis doesn\u0027t work for Docking Ports. It selects everything that is attached to it, not its parent.\u003C/p\u003E\u003Cp\u003EPlease fix it so it will.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-04T05:02:09Z\u0022 title=\u002207/04/2013 05:02  AM\u0022 data-short=\u002211 yr\u0022\u003EJuly 4, 2013\u003C/time\u003E by Benie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Hawkstorm","CreatedById":73072,"CreatedDateTime":"2013-07-04T05:42:02Z","Content":"\n\u003Cp\u003EExactly what I was looking for but sadly it doesn\u0027t work at all.\u003C/p\u003E\u003Cp\u003EI can save things just fine but anything I load back in is completely unusable, can\u0027t attach it to anything, can\u0027t separate any of its parts nothing it just becomes a useless paperweight.\u003C/p\u003E\n"},{"CreatedByName":"Eric S","CreatedById":57117,"CreatedDateTime":"2013-07-04T18:43:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MR4Y\u0022 data-cite=\u0022MR4Y\u0022\u003E\u003Cdiv\u003EWell, considering subassemblies are craft files...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s correct, but I\u0027m missing your point, because I don\u0027t see how that really affects the problem or the discussed possible solutions. Saved craft files still have the tree structure for parts, which is the root of this problem.\u003C/p\u003E\n"},{"CreatedByName":"HoY","CreatedById":57294,"CreatedDateTime":"2013-07-04T19:12:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Benie\u0022 data-cite=\u0022Benie\u0022\u003E\u003Cdiv\u003EThis doesn\u0027t work for Docking Ports. It selects everything that is attached to it, not its parent.\u003Cp\u003EPlease fix it so it will.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt Does work with docking ports, but you have to save the craft from the docking port down. The easiest way to do this is to just start with a tiny probe, then put the docking port under it and the rest of the craft attaches to the docking port. Now when you want to save it you can just move the docking port and everything attached under it to the icon. You could do the same thing and maintain your struts and fuel lines by moving the tiny probe core to the icon and saving it too, then just deleting it once you\u0027ve pasted it into the other craft\u003C/p\u003E\n"},{"CreatedByName":"Teirusu","CreatedById":65301,"CreatedDateTime":"2013-07-04T19:18:45Z","Content":"\n\u003Cp\u003EIncidentally, you can actually copy a normal craft file to sub-assembly\u0027s directory folders and sub-assembly will load it. Someone found out that tends to fix issues with fuel lines and struts, at least with the old version. It seems it didn\u0027t save the craft file exactly how the game was expecting it. The root part still needs to have an exposed node, however, when you do this.\u003C/p\u003E\u003Cp\u003EI haven\u0027t had the time to test this method with this new version though.\u003C/p\u003E\n"},{"CreatedByName":"MR4Y","CreatedById":66897,"CreatedDateTime":"2013-07-04T19:25:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Eric S\u0022 data-cite=\u0022Eric S\u0022\u003E\u003Cdiv\u003EThat\u0027s correct, but I\u0027m missing your point, because I don\u0027t see how that really affects the problem or the discussed possible solutions. Saved craft files still have the tree structure for parts, which is the root of this problem.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe problem is how one saves a subassembly while still preseving the attachment points? Cause the difference between the subassembly save and the normal save is that the normal save preserves all it\u0027s attachment points. So, the tree structure is not the same, or at least don\u0027t behave the same.\u003C/p\u003E\n"},{"CreatedByName":"HoY","CreatedById":57294,"CreatedDateTime":"2013-07-04T19:26:21Z","Content":"\n\u003Cp\u003EYeah Temstar listed exactly how he did this step by step in his newest release of the Zenith family of lifters, I haven\u0027t had a chance to try it out for Manager yet however, but it will probably work exactly the same.\u003C/p\u003E\n"},{"CreatedByName":"HoY","CreatedById":57294,"CreatedDateTime":"2013-07-04T19:41:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MR4Y\u0022 data-cite=\u0022MR4Y\u0022\u003E\u003Cdiv\u003EThe problem is how one saves a subassembly while still preseving the attachment points? Cause the difference between the subassembly save and the normal save is that the normal save preserves all it\u0027s attachment points. So, the tree structure is not the same, or at least don\u0027t behave the same.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think your looking at the plugin in the wrong way. But based on what your saying it should do, I can tell you Exactly how to do it by hand! (This is how I used standard launchers before I found out about SaL or mods in general)\u003C/p\u003E\u003Cp\u003EStep 1:\u003C/p\u003E\u003Cp\u003EMake your launcher, no payload, whatever command pod or probe core at the top with nothing above it and the decoupler below it. \u003C/p\u003E\u003Cp\u003EMake sure you leave the bottom of the launcher close to the floor but not under the floor (fairly important)\u003C/p\u003E\u003Cp\u003EStep 2: \u003C/p\u003E\u003Cp\u003EMake your payload. Leave the bottom open for however you plan to attach it to the launcher. Ie; docking port or decoupler or whatever. \u003C/p\u003E\u003Cp\u003EMake sure you leave the payload high up in the VAB, usually near the ceiling and off to the side a little bit. \u003C/p\u003E\u003Cp\u003EStep 3:\u003C/p\u003E\u003Cp\u003EOpen the .craft file for the payload, go all the way down to the bottom and get ready to add new lines;\u003C/p\u003E\u003Cp\u003EOpen the .craft file for the launcher, press save as, name it something different so that we don\u0027t mess up the original incase something goes wrong. Now on the new saved copy erase everything at the top until you get to the first PART. \u003C/p\u003E\u003Cp\u003ELook down a little lower inside the first PART entry and you\u0027ll see something like \u0022CommandPod true\u0022 or yes, or something along those lines, change it to the opposite (been a while so I forget exactly what it\u0027s listed as) \u003C/p\u003E\u003Cp\u003EYou only have to change that one thing.\u003C/p\u003E\u003Cp\u003EStep 4:\u003C/p\u003E\u003Cp\u003ECopy everything in your modified Launcher.craft and paste it on to the end of your Payload.craft\u003C/p\u003E\u003Cp\u003EMake sure you press enter any the very bottom so the flashing cursor is on its own clean line\u003C/p\u003E\u003Cp\u003ESave As whatever you wish to call it, \u003C/p\u003E\u003Cp\u003EStep 5:\u003C/p\u003E\u003Cp\u003EWhen you open your newly combined craft (don\u0027t need to close or re open KSP.exe to do this) you\u0027ll see both crafts inside the VAB as solid, you have to be careful for the moment because once you pick up the launcher it can get glitchy until you attach it to the bottom of the Payload, which should still be up higher with all of its nodes in tact. \u003C/p\u003E\u003Cp\u003EStep 6:\u003C/p\u003E\u003Cp\u003E?????\u003C/p\u003E\u003Cp\u003EStep 7: \u003C/p\u003E\u003Cp\u003EProfit!!!\u003C/p\u003E\n"},{"CreatedByName":"HoY","CreatedById":57294,"CreatedDateTime":"2013-07-04T19:42:04Z","Content":"\n\u003Cp\u003ELaggy airport wifi double post.\u003C/p\u003E\n"},{"CreatedByName":"Budgie","CreatedById":13840,"CreatedDateTime":"2013-07-04T21:47:49Z","Content":"\n\u003Cp\u003ECan I make a suggestion? I like to keep my subassemblies in a more organized way. For example: Subassemblies/Lifters/American/Constellation/Ares V\u003C/p\u003E\u003Cp\u003EIs there any way you can add a functionality to go down a few more levels of organization? I get about this by moving the files to their proper place in Finder after im done with my KSP session at the time, but reducing this would be a godsend\u003C/p\u003E\u003Cp\u003EThanks for all the hard work!\u003C/p\u003E\n"}]}