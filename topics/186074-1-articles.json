{"TopicId":186074,"ForumId":39,"TopicTitle":"YAKP - Yet Another Kontrol Panel","CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2019-07-04T22:40:30Z","PageNum":1,"Articles":[{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2019-07-04T22:40:31Z","Content":"\n\u003Cp\u003E\nAs some of you know, I have wonted to build a control panel for a long while, and have even write my own KSP plugin \u002B openGL application for it.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nRecently I have started building it and have finished the frame and cut out the wooden panels to fit on the frame. The panels aren\u0027t really \u0022mounted\u0022 in the sense that i will still have to take them off to make cutouts for the switches, as well as paint them.\u003Cimg alt=\u0022IMG_6240.JPG\u0022 data-ratio=\u002275.00\u0022 width=\u00221200\u0022 src=\u0022https://cdn.discordapp.com/attachments/545751198410735618/596468744864268298/IMG_6240.JPG\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThe two big holes in the middle are for a laptop and a monitor. The laptop will serve as the multifunctional display\u00A0/ guidance computer while the monitor will display the video output from the PC running KSP, serving as the cockpit window.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-07-04T22:45:16Z\u0022 title=\u002207/04/2019 10:45  PM\u0022 data-short=\u00225 yr\u0022\u003EJuly 4, 2019\u003C/time\u003E by c4ooo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"theJesuit","CreatedById":122369,"CreatedDateTime":"2019-07-13T10:20:46Z","Content":"\n\u003Cp\u003E\nNice.\u00A0 Will the MFD be a telemachus display?\n\u003C/p\u003E\n\u003Cp\u003E\nPeace.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2019-07-13T15:03:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223634149\u0022 data-ipsquote-contentid=\u0022186074\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221563013246\u0022 data-ipsquote-userid=\u0022122369\u0022 data-ipsquote-username=\u0022theJesuit\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, theJesuit said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNice.\u00A0 Will the MFD be a telemachus display?\n\u003C/p\u003E\n\u003Cp\u003E\nPeace.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNope its my own software \u003Cimg alt=\u0022;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Kerbal007","CreatedById":92253,"CreatedDateTime":"2019-07-15T04:22:22Z","Content":"\n\u003Cp\u003E\nThis is awesome!, I never considered building a panel like this, I had been looking at a simple desk controller. This adds a whole-nother level of immersion \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E Looking forward to watching this project grow\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2019-11-27T19:50:42Z","Content":"\n\u003Cp\u003E\nI have started wiring the \u003Cspan style=\u0022font-size:14px;\u0022\u003Eelectronics \u003C/span\u003Efor the panel. I will try to make a post for each area of the panel.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:20px;\u0022\u003E\u003Cstrong\u003EPower:\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nDue to the number of LEDs I\u00A0have planned\u00A0to use, as well as the LCD monitor I needed to power, I knew I had to use an external PSU. One of my first thoughts was to use an ATX PSU. They are very powerful, easy to come by, and provide like 3 different voltages (as well as a standby 5v), plus can be turned on/off by shorting a PSU_ON signal to ground. Instead of having a simple on/off toggle, I thought it would be cool to have a \u0022push to start\u0022 button and a \u0022toggle kill\u0022 switch. Since I needed something to \u0022store\u0022 the on state after the push button was depressed, I decided to use a relay. When the\u00A0\u0022push to start\u0022 is pressed, the standby line is used to close a relay. When the really closes, it shorts the PSU_ON to ground, turning the PSU on. As the PSU turns on, it starts outputting 5v, which keeps\u00A0the relay closed even after the\u00A0\u0022push to start\u0022 button is opened. Finally, the \u0022toggle kill\u0022 is used to cut the 5V going to the relay, allowing the PSU to be turned off. Throwing in a couple LEDs and I get this circuit:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022OCxWC4w.png\u0022 data-ratio=\u002280.29\u0022 width=\u00221200\u0022 src=\u0022https://i.imgur.com/OCxWC4w.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThe two diodes before the relay are needed since you can\u0027t short the 5V and STB lines together. They are both 5V, but are generated by different circuits in the PSU. (And also, I\u00A0forgot to draw the rays coming off of the \u0022on LED\u0022 \u003Cspan\u003E\u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u00A0\u003C/span\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nThe wired up circuit looks like this. You can see the ATX header on the left.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022KufmWm8.jpg\u0022 data-ratio=\u002275.00\u0022 width=\u00221200\u0022 src=\u0022https://i.imgur.com/KufmWm8.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAnd here is the push button and switch from the front:\u00A0\u003Cimg alt=\u00224hSCjaQ.jpg\u0022 data-ratio=\u002275.00\u0022 width=\u00221200\u0022 src=\u0022https://i.imgur.com/4hSCjaQ.jpg\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-11-27T19:51:25Z\u0022 title=\u002211/27/2019 07:51  PM\u0022 data-short=\u00224 yr\u0022\u003ENovember 27, 2019\u003C/time\u003E by c4ooo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2019-12-15T22:54:12Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EFUEL (analog displays):\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nNext I decided to work on the analog displays. The displays I used where 5 volt voltmeters that you can get off of ebay. disassembling the meter, I took measured the faceplate design and recreated it in CAD. From there, I added marking and added text labels.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u003Cimg alt=\u0022tTI7Dah.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002259.28\u0022 height=\u0022607\u0022 width=\u00221024\u0022 src=\u0022https://i.imgur.com/tTI7Dah.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI wasn\u0027t sure if I wanted the text to be horizontal or curved on the G and VERT meters so I made two variants. Then I printed out the designs and glued the paper to the faceplate. I also drilled some holes in the meter housing for LEDs, these will be used for warning lights later. This was the final result:\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022yiqIRvs.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002275.00\u0022 height=\u0022630\u0022 width=\u0022840\u0022 src=\u0022https://i.imgur.com/yiqIRvs.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nFinally I wired up all the negative sides of the meters to ground and the positive sides to the PWM pins on the arduino. Controlling them is easy, all calcculations are done on the PC, the arduino simply recieves 8 bytes and uses them to set the pulse width for the 8 meters in a for() loop.\n\u003C/p\u003E\n"},{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2020-01-06T15:44:35Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EInput Matrix:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI planned to have around 40 input switches in my control panel. Having a separate MCU pin per switch would not only be a pain to wire, but also make me quickly run out of MCU pins. The solution is to use a\u00A0matrix. A matrix allows a grid of devices to be wired into a series or rows and columns, and \u0022scanned\u0022 one column at a time. Thus instead of having 40 wires, I can instead have 5 row and 8 column (for 13 total) wires. The idea is that you send current down a single row at a time and see then read the side to see which switches are on, then send current down the next row. This is a little bit reversed in my setup, but I will explain why later.\u00A0Having 6 rows 7 columns would technically allow be more switches for the same amount of wires, but having 8 column wires allows me to easily read all the pins at once using the PIN\u00A0register. If you want a good explanation read here:\u00A0\u003Ca href=\u0022https://www.dribin.org/dave/keyboard/one_html/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.dribin.org/dave/keyboard/one_html/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nNow, switches need either pull down or pull up\u00A0resisters. For an input matrix, using pull down resisters makes more sense. However, most MCUs have internal pull up, not pull down pins. This means that the output has to sink current from the input. This is kinda backwards and makes less logical sense, but it works on the amels. Here is the schematic:\u00A0\u003Cimg alt=\u0022Qmf9I3W.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002275.00\u0022 height=\u0022630\u0022 width=\u0022840\u0022 src=\u0022https://i.imgur.com/Qmf9I3W.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nNotice how there\u0027s a diode per switch. The diodes prevent ghosting (see above link), but in my setup they also prevent a HIGH (ignore) from flowing from the output to the input.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTo read the middle vertical row of switches, I can output HIGH/LOW/HIGH. This allows the current from the 5v to sink through the middle vertical row, but not through any of the other rows. If the switch is open, the 5v can\u0027t sink to ground, and the input port reads HIGH for that switch. If the switch is closed, the 5v sinks to ground the output port, and the switch reads LOW. Wired up, it ends up looking kinda neat:\u00A0\u003Cimg alt=\u0022loCIznM.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002266.67\u0022 height=\u0022544\u0022 width=\u0022816\u0022 src=\u0022https://i.imgur.com/loCIznM.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EInput Matrix part 2: code\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFirst we set up the ports we need to use:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E  DDRD \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0b11111111\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//38,X,X,X,18,19,20,21\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  DDRA \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0b00000000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  PORTA \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0b11111111\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//29,28,27,26,25,24,23,22\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n1) First we set the \u003Cstrong\u003Edirection \u003C/strong\u003E(\u003Cstrong\u003EDDR)\u003C/strong\u003E\u00A0register of bank\u00A0\u003Cstrong\u003ED\u00A0\u003C/strong\u003Eto 0b11111111, this sets pins 38 ,18, 19, 20, and 21 to \u003Cstrong\u003Eoutput \u003C/strong\u003Emode. This bank will have the output pins we use to select which row of switches we read.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n2) Then we set\u00A0\u003Cstrong\u003Edirection \u003C/strong\u003E(\u003Cstrong\u003EDDR)\u003C/strong\u003E\u00A0register of bank\u00A0\u003Cstrong\u003EA\u00A0\u003C/strong\u003Eto 0b00000000, this sets pins\u00A029, 28, 27, 26, 25, 24, 23, and 22 to\u00A0\u003Cstrong\u003Einput\u00A0\u003C/strong\u003Emode. This bank will have the input pins we use to read the switches.\n\u003C/p\u003E\n\u003Cp\u003E\n3) Then we set the \u003Cstrong\u003Eoutput (PORT)\u00A0\u003C/strong\u003Eregister of bank\u00A0\u003Cstrong\u003EA\u00A0\u003C/strong\u003Eto 0b11111111, this starts outputing 5V to the pins through the pull up resisters.\n\u003C/p\u003E\n\u003Cp\u003E\nSteps 2 and 3 is like setting INPUT_PULLUP mode for all the pins in bank A.\n\u003C/p\u003E\n\u003Cp\u003E\nThen, this is how we read the switches:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EPORTD \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0b11111110\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  delay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nswitches\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E PINA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nPORTD \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0b11111101\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  delay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nswitches\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E PINA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nPORTD \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0b11111011\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  delay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nswitches\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E PINA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nPORTD \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0b11110111\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  delay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nswitches\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E PINA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nPORTD \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0b01111111\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  delay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nswitches\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E PINA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nUsing\u00A0\u003Cstrong\u003EPORTD\u003C/strong\u003E, we set \u003Cstrong\u003ELOW\u003C/strong\u003E\u00A0one pin at a time. This \u0022activates\u0022 the corresponding row. Then we read the states of the 8 switches in that row using\u00A0\u003Cstrong\u003EPINA\u003C/strong\u003E. The delay() part is kinda needed becouse, do to the length of the wire (some switches are up to a meter away from the arduino!), or do to capacitance, or do to black magic,\u00A0the wire that selects the row may \u0022ring\u0022 for a bit before it actually goes LOW/HIGH. This will cause weirdness like reading row 1 into switches[0] and switches[1] while also reading row 2 into switches[1] and switches[2].\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-01-07T00:46:08Z\u0022 title=\u002201/07/2020 12:46  AM\u0022 data-short=\u00224 yr\u0022\u003EJanuary 7, 2020\u003C/time\u003E by c4ooo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"richfiles","CreatedById":129946,"CreatedDateTime":"2020-01-25T02:54:37Z","Content":"\n\u003Cp\u003E\nI can\u0027t wait to see this develop! I love the work so far!\u00A0\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n"}]}