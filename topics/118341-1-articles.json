{"TopicId":118341,"ForumId":29,"TopicTitle":"[SOLVED] Adding resource consumption to a custom PartModule","CreatedByName":"MYCRAFTisbest","CreatedById":149304,"CreatedDateTime":"2015-08-13T01:01:03Z","PageNum":1,"Articles":[{"CreatedByName":"MYCRAFTisbest","CreatedById":149304,"CreatedDateTime":"2015-08-13T01:01:03Z","Content":"Hello. I\u0027m trying to make a part with a custom module that would need to consume resources (and more importantly) would not function without them.\n\nCould anyone give me some example code or point me in the right direction on how to utilize resources on the same vessel as the part?\n\nGreatly appreciated ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\nEDIT: For clarification, I already have a custom resource created, but for the purposes of my question LiquidFuel can be assumed.\n\n**Edited \u003Ctime datetime=\u00222015-08-13T02:59:19Z\u0022 title=\u002208/13/2015 02:59  AM\u0022 data-short=\u00228 yr\u0022\u003EAugust 13, 2015\u003C/time\u003E by MYCRAFTisbest**"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-08-13T01:35:09Z","Content":"I have not done much with Resources myself, but I do know you need to look at the Part.RequestResource() methods. There are several overloads of that method and you\u0027ll have to decide which one works for your case.\n\nNote that in your calculation of how much resource to request, make sure you include TimeWarp.DeltaTime in your calculation so that your resource consumption scales with timewarp correctly.\n\nThat should get you started,\n\nD."},{"CreatedByName":"MYCRAFTisbest","CreatedById":149304,"CreatedDateTime":"2015-08-13T02:58:45Z","Content":"\u003E \n\u003E I have not done much with Resources myself, but I do know you need to look at the Part.RequestResource() methods. There are several overloads of that method and you\u0027ll have to decide which one works for your case.\n\u003E Note that in your calculation of how much resource to request, make sure you include TimeWarp.DeltaTime in your calculation so that your resource consumption scales with timewarp correctly.\n\u003E \n\u003E That should get you started,\n\u003E \n\u003E D.\n\nThank you, I think I can figure it out from here. For anyone else who is wondering this, you need to use \u0022part\u0022 not \u0022Part\u0022"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-08-13T14:51:27Z","Content":"Heh, welcome to the KSP API where things are not consistent.\n\nPart is the overarching Part class, it does not actually reference an object in game. When actually initialized, the Part term gets replaced with whatever reference you are using.\n\npart is the actual reference in a partModule to the parent part that partModule is attached to, so part is an actual reference and replaces the Part term to tell KSP which part you are executing the .RequestResource() method on.\n\nAny reference that is a part can use it though, one of the more common ones being just p in a foreach statement. In that case, p.RequestResource() would also work.\n\nA minor detail yes, but I want to clarify that any part reference can request methods in the part class, not just references actually named part. It just happens that on a partModule, part is the reference name of the part that partModule is attached to.\n\nD."},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2015-08-13T15:24:51Z","Content":"The RequestResource functions\u0027 return value tells you how much it actually managed to do but, for all flow modes except for NO\\_FLOW, the function will not always manage the whole amount even though there is enough resource (or space if adding) available due to a number of bugs in the underlying code. Until the problems in the function are fixed (hopefully in the next update), you should call the function repeatedly until it returns 0 before you can be sure there really is none left, e.g.\n\n    double remaining = demand;while (abs(remaining) \u003E 0){    double got = part.RequestResource(resid, remaining);    if (got == 0)        break;    remaining -= got;}// At this point you either got it all if remaining == 0 or you only got some or none if remaining is anything between 0 and demand"}]}