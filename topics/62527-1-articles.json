{"TopicId":62527,"ForumId":55,"TopicTitle":"Make time warp remember your selection, reduce time warp to 50x near SOI changes","CreatedByName":"technicalfool","CreatedById":70430,"CreatedDateTime":"2014-02-08T12:35:53Z","PageNum":1,"Articles":[{"CreatedByName":"technicalfool","CreatedById":70430,"CreatedDateTime":"2014-02-08T12:35:53Z","Content":"\n\u003Cp\u003EThe idea is that the game should remember if it reduced your time warp during a low swing around a planet, and increase back to the original warp value when it\u0027s far enough away from the body it\u0027s orbiting around.\u003C/p\u003E\u003Cp\u003EUI-wise, perhaps if you try to warp faster than allowed, the game paints the unavailable arrows on the warp indicator red. These will paint themselves green as you increase in altitude and the game raises your warp speed to the selected value.\u003C/p\u003E\u003Cp\u003EThis could also work in tandem with a much higher warp speed (or speeds) that only become available in interplanetary space. As soon as you get within some reliable distance of a SOI, you drop down to a warp value that\u0027s low enough to not ruin your projected periapsis in floating point errors.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-02-08T13:11:35Z","Content":"\n\u003Cp\u003EFor SOI changes it\u0027s unnecessary. All that\u0027s needed is fixing the bug that causes trajectory errors if you cross the SOI boundary at higher warp levels.\u003C/p\u003E\u003Cp\u003EBut for when the warp speed is reduced due to planet proximity, that would be quite nice.\u003C/p\u003E\u003Cp\u003EOr the game might be a bit smarter about it and only reduce the warp speed if I am going to hit the atmosphere or surface.\u003C/p\u003E\n"},{"CreatedByName":"rkman","CreatedById":15721,"CreatedDateTime":"2014-02-08T16:56:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003EFor SOI changes it\u0027s unnecessary. All that\u0027s needed is fixing the bug that causes trajectory errors if you cross the SOI boundary at higher warp levels.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think that\u0027s not a bug but an inevitable consequence of reduced accuracy at high timewarp.\u003C/p\u003E\n"},{"CreatedByName":"technicalfool","CreatedById":70430,"CreatedDateTime":"2014-02-08T17:05:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kasuha\u0022 data-cite=\u0022Kasuha\u0022\u003E\u003Cdiv\u003EFor SOI changes it\u0027s unnecessary. All that\u0027s needed is fixing the bug that causes trajectory errors if you cross the SOI boundary at higher warp levels.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom what I\u0027m aware (and that\u0027s not all that much), that\u0027s not a little bug. It has more to do with the limitations of even 64 bit numbers. There\u0027s some code libraries out there for handling really \u003Ca href=\u0022http://sine.codeplex.com/Wikipage\u0022 rel=\u0022external nofollow\u0022\u003Ereally big number types\u003C/a\u003E in C#, but I\u0027m not sure how fast the CPU is going to be able to crunch through them given it\u0027s a speed vs accuracy compromise, or whether the really big numbers can somehow be used really sparingly!\u003C/p\u003E\n"},{"CreatedByName":"technicalfool","CreatedById":70430,"CreatedDateTime":"2014-02-08T17:18:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rkman\u0022 data-cite=\u0022rkman\u0022\u003E\u003Cdiv\u003EI think that\u0027s not a bug but an inevitable consequence of reduced accuracy at high timewarp.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s what I\u0027m thinking. Having the game detect when you\u0027re [some reliable distance] from an SOI or the main body and drop out of hyper-warp could be a compromise that would allow gazillion-times warp speed in interplanetary space, but the time warp drops automatically when close to an SOI, or crossing an SOI boundary.\u003C/p\u003E\u003Cp\u003EIt would probably kill a bunch of amusingly bad related bugs, like warping through planets. The game already attempts to drop your warp speed if you\u0027re getting close to a lithobraking manoeuver. It just needs tweaking a bit, perhaps making more aggressive at high warp speeds so it doesn\u0027t miss the atmosphere and give you a free ride to Moho via Jool.\u003C/p\u003E\n"},{"CreatedByName":"rkman","CreatedById":15721,"CreatedDateTime":"2014-02-08T17:39:03Z","Content":"\n\u003Cp\u003EThe \u0027reduce timewarp as distance to body decreases\u0027-mechanism used to be much more aggressive in older versions of ksp. As far as i can remember accidental overshooting occurred less frequently back then. Downside was being limited to lower timewarp while in orbit, compared to how it works now. General consensus seemed to be that timewarp limits in orbit were to low, and it was changed to what we have now.\u003C/p\u003E\u003Cp\u003EA workable solution might be to have aggressive auto-reduction of timewarp (including when about to cross soi boundary), which can then be manually overridden to one or two steps faster timewarp.\u003C/p\u003E\n"},{"CreatedByName":"Kasuha","CreatedById":81781,"CreatedDateTime":"2014-02-08T17:46:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rkman\u0022 data-cite=\u0022rkman\u0022\u003E\u003Cdiv\u003EI think that\u0027s not a bug but an inevitable consequence of reduced accuracy at high timewarp.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt is only inevitable consequence of the current implementation of timewarp. I don\u0027t know the code but I have very good rough idea how is it implemented. And I am rather sure the implementation can be improved to provide smooth SOI transition at any time warp level. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technicalfool\u0022 data-cite=\u0022technicalfool\u0022\u003E\u003Cdiv\u003EFrom what I\u0027m aware (and that\u0027s not all that much), that\u0027s not a little bug. It has more to do with the limitations of even 64 bit numbers. There\u0027s some code libraries out there for handling really \u003Ca href=\u0022http://sine.codeplex.com/Wikipage\u0022 rel=\u0022external nofollow\u0022\u003Ereally big number types\u003C/a\u003E in C#, but I\u0027m not sure how fast the CPU is going to be able to crunch through them given it\u0027s a speed vs accuracy compromise, or whether the really big numbers can somehow be used really sparingly!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDouble precision numbers are standard for quite a while even on 32-bit machines and with these numbers you can hold diameter of solar system in sub-milimeter accuracy. KSP system is order of magnitude smaller. Errors in SOI transitions are not caused by this, otherwise you\u0027d not be able to transit the SOI boundary correctly even at 1x time.\u003C/p\u003E\n"}]}