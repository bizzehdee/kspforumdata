{"TopicId":198017,"ForumId":109,"TopicTitle":"Alternate building grids for colonies and stations","CreatedByName":"Pthigrivi","CreatedById":105624,"CreatedDateTime":"2020-11-09T22:57:09Z","PageNum":1,"Articles":[{"CreatedByName":"Pthigrivi","CreatedById":105624,"CreatedDateTime":"2020-11-09T22:57:10Z","Content":"\n\u003Cp\u003E\nIm an architect professionally so this is a topic near and dear to my heart. Im psyched to see the colony building mechanics especially as they relate to bodies with different gravities\u00A0because it radically alters your relationship to statics and the kinds of things you can build. \u00A0There are restrictions on cantilevers here on earth that would not exist on Minmus, and the organizational considerations in orbit are different from both. Colonies on Gilly could and should look much different from ones on Tylo or Eve.\u00A0We don\u2019t know much about the colony construction UI but Id love to see the ability to build on different types of grids to take advantage of this, especially equilateral, hexagonal, and right-triangle pinwheel grids.\u00A0I think this could open up a whole world of creative structural engineering solutions and much more diverse architectures for colonies and stations.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022figure4.gif\u0022 class=\u0022ipsImage\u0022 data-ratio=\u0022142.45\u0022 height=\u0022500\u0022 width=\u0022351\u0022 src=\u0022https://ascelibrary.org/cms/asset/160beeb3-5acf-4894-8925-2080eff980d9/figure4.gif\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-11-09T22:59:07Z\u0022 title=\u002211/09/2020 10:59  PM\u0022 data-short=\u00223 yr\u0022\u003ENovember 9, 2020\u003C/time\u003E by Pthigrivi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Lewie","CreatedById":203745,"CreatedDateTime":"2020-11-09T22:59:37Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/105624-pthigrivi/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022105624\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/105624-pthigrivi/\u0022 rel=\u0022\u0022\u003E@Pthigrivi\u003C/a\u003E\u00A0I love this idea! However....I\u0027ve got a thinking that most player\u0027s (including myself) will most likely try to build the largest, most unstable colony possible!\n\u003C/p\u003E\n\u003Cp\u003E\nCheers-\n\u003C/p\u003E\n\u003Cp\u003E\nLewie\n\u003C/p\u003E\n"},{"CreatedByName":"Pthigrivi","CreatedById":105624,"CreatedDateTime":"2020-11-09T23:03:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879538\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221604962777\u0022 data-ipsquote-userid=\u0022203745\u0022 data-ipsquote-username=\u0022Lewie\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, Lewie said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/105624-pthigrivi/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022105624\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/105624-pthigrivi/\u0022 rel=\u0022\u0022\u003E@Pthigrivi\u003C/a\u003E\u00A0I love this idea! However....I\u0027ve got a thinking that most player\u0027s (including myself) will most likely try to build the largest, most unstable colony possible!\n\u003C/p\u003E\n\u003Cp\u003E\nCheers-\n\u003C/p\u003E\n\u003Cp\u003E\nLewie\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTo (mis)quote an engineer whose name escapes me \u201Cengineering isn\u0027t the art of making things that stand up, but making\u00A0things that just barely don\u2019t fall down.\u201D\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-11-09T23:06:34Z\u0022 title=\u002211/09/2020 11:06  PM\u0022 data-short=\u00223 yr\u0022\u003ENovember 9, 2020\u003C/time\u003E by Pthigrivi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-09T23:21:52Z","Content":"\n\u003Cp\u003E\nI kind of doubt that KSP2 is going to be accounting for structural stress in colonies and stations. Partially, based on what has been shown so far, and partially because they are still using weld joints on the rockets. If you try to build colonies with weld joints bad things will happen. A lot. You have to take your rigid body simulation seriously if you are going to build stable, physically plausible structures. Restrictions to building out of modules is already going to make it difficult to have variety in structures that are stable even with a good simulation in place, and so far, I have seen no indication that the Intercept is even trying to have that sort of simulation.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only game I have seen so far to even remotely have something physically plausible, fully simulated, and built on a grid in an open world is \u003Ca href=\u0022https://www.youtube.com/watch?v=MXhNsFhO6Ew\u0026amp;t=3m35s\u0022 rel=\u0022external nofollow\u0022\u003EMedieval Engineers\u003C/a\u003E. It is built on a custom voxel engine, and even there, you can tell that some liberties had to be taken.\n\u003C/p\u003E\n\u003Cp\u003E\nI know, I know, the teaser for KSP2 clearly has shown a colony falling apart, but I\u0027m going to venture a guess that this feature has been revised. It certainly can be done. It has been done. But it is a project and I haven\u0027t seen any indications of it so far that the team at Intercept are putting in the necessary work to make it happen in any shape that would be contributing positively\u00A0to the game.\n\u003C/p\u003E\n"},{"CreatedByName":"Pthigrivi","CreatedById":105624,"CreatedDateTime":"2020-11-09T23:35:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879555\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221604964112\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI kind of doubt that KSP2 is going to be accounting for structural stress in colonies and stations. Partially, based on what has been shown so far, and partially because they are still using weld joints on the rockets. If you try to build colonies with weld joints bad things will happen. A lot. You have to take your rigid body simulation seriously if you are going to build stable, physically plausible structures. Restrictions to building out of modules is already going to make it difficult to have variety in structures that are stable even with a good simulation in place, and so far, I have seen no indication that the Intercept is even trying to have that sort of simulation.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only game I have seen so far to even remotely have something physically plausible, fully simulated, and built on a grid in an open world is \u003Ca href=\u0022https://www.youtube.com/watch?v=MXhNsFhO6Ew\u0026amp;t=3m35s\u0022 rel=\u0022external nofollow\u0022\u003EMedieval Engineers\u003C/a\u003E. It is built on a custom voxel engine, and even there, you can tell that some liberties had to be taken.\n\u003C/p\u003E\n\u003Cp\u003E\nI know, I know, the teaser for KSP2 clearly has shown a colony falling apart, but I\u0027m going to venture a guess that this feature has been revised. It certainly can be done. It has been done. But it is a project and I haven\u0027t seen any indications of it so far that the team at Intercept are putting in the necessary work to make it happen in any shape that would be contributing positively\u00A0to the game.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNo Im pretty sure I recall Nate saying something about structural limitations to how colonies are built being a part of the challenge in an interview.\u00A0Damned if I could find it now though. So far all of the colonies Ive seen seem to be built on orthogonal (all-90-degree) grids\u00A0but I might be wrong or maybe this is a choice and not baked in. This is in contrast to KSP1 where triangular and hexagonal symmetries allow for different building layouts. How easy or difficult this would be to implement is hard for me to guess, but I\u2019d love to see it in the x \u002B y axis at least.\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-11-09T23:35:54Z\u0022 title=\u002211/09/2020 11:35  PM\u0022 data-short=\u00223 yr\u0022\u003ENovember 9, 2020\u003C/time\u003E by Pthigrivi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-10T00:00:02Z","Content":"\n\u003Cp\u003E\nI\u0027m absolutely sure that was at least part of initial ambition for the game, but there is also real life, and they don\u0027t even have handle on Kraken for ships. It\u0027s way worse for structures if you want them to be even remotely playable. Nobody wants to try to add an antenna to a tower, only to have it start vibrating, explode, send shrapnel in every direction, and have a chain reaction take out your entire colony. That\u0027s the sort of thing that makes an average player close the game and never come back to it.\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s a way to avoid all of that, but you have to be clever about it. Intercept did have an open rec for physics engineer that did get filled or closed some time in the early spring. That could be an indication that they hired someone who knows how to do this sort of sim, but there\u0027s a LOT of other work to be done on the physics in this game, and there is only so much time. I sincerely doubt their ability to deliver on simulated structural integrity of colonies without compromising other parts of gameplay at this point.\n\u003C/p\u003E\n\u003Cp\u003E\nEssentially, the crux is that they are still using Unity physics for rockets, which you can tweak until it works. But the physics simulation you need for colonies would be completely separate and has to be built from scratch. I don\u0027t know a lot of game dev engineers who know how to do this work. I work for a studio that has in-house engine built largely around physics simulation, and even here, there hasn\u0027t really been more than one engineer at any given time who specializes in simulation for a while. Currently, that\u0027s my responsibility, and the only other person who fully grasps how the simulation works is our CTO. And even\u00A0\u003Cem\u003Ethat\u003C/em\u003E\u00A0simulation isn\u0027t designed to handle structural stress and would need a lot of work to get it to that point.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know how much background you have on civil engineering. A naive implementation of a structure is a collection of rigid bodies with a system of constraints. That\u0027s generally good enough for a game. Even if you want individual components to have limits on stress, you can sort of compute an average stress and put limits on that. The problem is now entirely in how you solve the system of constraints. Standard approach used by pretty much every game now is a variant on iterative solution which is going to be at least similar to impulse exchange. The problem with that approach is that number of iterations you need increases with complexity of the structure and some other parameters. For example, it\u0027s a lot easier to build a stable structure if all your parts have similar masses. If you have light objects that hold together heavy objects expect trouble. Not getting deep into numerics of it, but it\u0027s just not viable for large, complex structures with many parts.\n\u003C/p\u003E\n\u003Cp\u003E\nThe other approach is trying to solve the linear system directly. Again, that works great on simple systems, and might look promising, until you start getting more and more complex systems that become more and more singular. At that point, adding a new part can suddenly make the solution unstable and there is no way to predict it, so it\u0027s a ticking time bomb. No good.\n\u003C/p\u003E\n\u003Cp\u003E\nFinally, you can realize that you\u0027re not the first person having this problem and look at what\u0027s been done to these kinds of systems historically. And fortunately some brilliant mathematicians have come up with good ways of handling such systems of equations. Problem is entirely in adapting the approaches to games. Specifically, you need to build pseudo-inverses by first looking at singular value decomposition of the problem, taking care of singularities, and constructing a pseudo-inverse that doesn\u0027t have these problems. The challenge, then, is making sure you can do this in a way that\u0027s efficient. If you have no moving parts in your structure, then, theoretically, you only need to run the process once. Of course, any time a part is added or removed, you have to re-do the computations. Probably not a huge problem if you are adding stuff, but good by framerate if your base is being destroyed. So the next step is optimizing the re-computation process to where you don\u0027t have to start from the scratch. That\u0027s a serious math problem, and fortunately, because it comes up in particle physics, fluid simulations, and even SLAM algorithms, there are known ways of addressing it.\n\u003C/p\u003E\n\u003Cp\u003E\nProblem is, if you need something like this in the game, you aren\u0027t hiring a generalist engineer who knows a bit about physics. You are hiring someone with deep background in mathematics and simulation and that\u0027s a req that\u0027s hard to fill and isn\u0027t cheap. And unless Intercept lucked out when hiring for their physics engineer, is it really worth it for them to be looking for someone like this just for colonies?\n\u003C/p\u003E\n"},{"CreatedByName":"Pthigrivi","CreatedById":105624,"CreatedDateTime":"2020-11-10T04:00:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879571\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221604966402\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m absolutely sure that was at least part of initial ambition for the game, but there is also real life, and they don\u0027t even have handle on Kraken for ships. It\u0027s way worse for structures if you want them to be even remotely playable. Nobody wants to try to add an antenna to a tower, only to have it start vibrating, explode, send shrapnel in every direction, and have a chain reaction take out your entire colony. That\u0027s the sort of thing that makes an average player close the game and never come back to it.\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s a way to avoid all of that, but you have to be clever about it. Intercept did have an open rec for physics engineer that did get filled or closed some time in the early spring. That could be an indication that they hired someone who knows how to do this sort of sim, but there\u0027s a LOT of other work to be done on the physics in this game, and there is only so much time. I sincerely doubt their ability to deliver on simulated structural integrity of colonies without compromising other parts of gameplay at this point.\n\u003C/p\u003E\n\u003Cp\u003E\nEssentially, the crux is that they are still using Unity physics for rockets, which you can tweak until it works. But the physics simulation you need for colonies would be completely separate and has to be built from scratch. I don\u0027t know a lot of game dev engineers who know how to do this work. I work for a studio that has in-house engine built largely around physics simulation, and even here, there hasn\u0027t really been more than one engineer at any given time who specializes in simulation for a while. Currently, that\u0027s my responsibility, and the only other person who fully grasps how the simulation works is our CTO. And even\u00A0\u003Cem\u003Ethat\u003C/em\u003E\u00A0simulation isn\u0027t designed to handle structural stress and would need a lot of work to get it to that point.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know how much background you have on civil engineering. A naive implementation of a structure is a collection of rigid bodies with a system of constraints. That\u0027s generally good enough for a game. Even if you want individual components to have limits on stress, you can sort of compute an average stress and put limits on that. The problem is now entirely in how you solve the system of constraints. Standard approach used by pretty much every game now is a variant on iterative solution which is going to be at least similar to impulse exchange. The problem with that approach is that number of iterations you need increases with complexity of the structure and some other parameters. For example, it\u0027s a lot easier to build a stable structure if all your parts have similar masses. If you have light objects that hold together heavy objects expect trouble. Not getting deep into numerics of it, but it\u0027s just not viable for large, complex structures with many parts.\n\u003C/p\u003E\n\u003Cp\u003E\nThe other approach is trying to solve the linear system directly. Again, that works great on simple systems, and might look promising, until you start getting more and more complex systems that become more and more singular. At that point, adding a new part can suddenly make the solution unstable and there is no way to predict it, so it\u0027s a ticking time bomb. No good.\n\u003C/p\u003E\n\u003Cp\u003E\nFinally, you can realize that you\u0027re not the first person having this problem and look at what\u0027s been done to these kinds of systems historically. And fortunately some brilliant mathematicians have come up with good ways of handling such systems of equations. Problem is entirely in adapting the approaches to games. Specifically, you need to build pseudo-inverses by first looking at singular value decomposition of the problem, taking care of singularities, and constructing a pseudo-inverse that doesn\u0027t have these problems. The challenge, then, is making sure you can do this in a way that\u0027s efficient. If you have no moving parts in your structure, then, theoretically, you only need to run the process once. Of course, any time a part is added or removed, you have to re-do the computations. Probably not a huge problem if you are adding stuff, but good by framerate if your base is being destroyed. So the next step is optimizing the re-computation process to where you don\u0027t have to start from the scratch. That\u0027s a serious math problem, and fortunately, because it comes up in particle physics, fluid simulations, and even SLAM algorithms, there are known ways of addressing it.\n\u003C/p\u003E\n\u003Cp\u003E\nProblem is, if you need something like this in the game, you aren\u0027t hiring a generalist engineer who knows a bit about physics. You are hiring someone with deep background in mathematics and simulation and that\u0027s a req that\u0027s hard to fill and isn\u0027t cheap. And unless Intercept lucked out when hiring for their physics engineer, is it really worth it for them to be looking for someone like this just for colonies?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSuper appreciate the breakdown because from the kind of basic, predictive statics equations I deal with this is a much simpler problem. \u00A0I always chalked the sudden, resonant explody situations to reaction wheel tea-cupping and poor terrain interactions. Most things in real life don\u2019t rattle themselves to death without some unexpected resonant external force like wind or seismic movement.\u00A0Seems simple enough to ignore/remove that kind of thing from the system? The nice thing is these structures dont have hypersonic aerodynamics to deal with, they just have to not fall down. Couldn\u2019t they run a test sim when placing a new part and mark it red if it would result in failure?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-11-10T04:11:52Z\u0022 title=\u002211/10/2020 04:11  AM\u0022 data-short=\u00223 yr\u0022\u003ENovember 10, 2020\u003C/time\u003E by Pthigrivi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-10T10:38:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879634\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221604980859\u0022 data-ipsquote-userid=\u0022105624\u0022 data-ipsquote-username=\u0022Pthigrivi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Pthigrivi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMost things in real life don\u2019t rattle themselves to death without some unexpected resonant external force like wind or seismic movement.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIn games, it\u0027s almost always a consequence of finite time step or finite precision in numerical integration. Here\u0027s an artificial example. Imagine that you\u0027re trying to keep an object in place with a simulated spring with stiffness k. That object has mass m and is initially at position x\u003Csub\u003E0\u003C/sub\u003E\u00A0= 0. It got a kick from some external force or collision and has some initial velocity v\u003Csub\u003E0\u003C/sub\u003E. Every time step you update position based on current velocity, then update velocity based on forces.\n\u003C/p\u003E\n\u003Cp\u003E\nF\u003Csub\u003E0\u003C/sub\u003E\u00A0= -kx\u003Csub\u003E0\u003C/sub\u003E\u00A0= 0\n\u003C/p\u003E\n\u003Cp\u003E\na\u003Csub\u003E0\u003C/sub\u003E\u00A0= F\u003Csub\u003E0\u003C/sub\u003E/m = 0\n\u003C/p\u003E\n\u003Cp\u003E\nx\u003Csub\u003E1\u003C/sub\u003E\u00A0= x\u003Csub\u003E0\u003C/sub\u003E\u00A0\u002B v\u003Csub\u003E0\u003C/sub\u003Et = v\u003Csub\u003E0\u003C/sub\u003Et\n\u003C/p\u003E\n\u003Cp\u003E\nv\u003Csub\u003E1\u003C/sub\u003E\u00A0= v\u003Csub\u003E0\u003C/sub\u003E\u00A0\u002B a\u003Csub\u003E0\u003C/sub\u003Et = v\u003Csub\u003E0\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\nNot a lot is happening yet, but lets look at the energy.\n\u003C/p\u003E\n\u003Cp\u003E\nE\u003Csub\u003E0\u003C/sub\u003E\u00A0= mv\u003Csub\u003E0\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 \u002B kx\u003Csub\u003E0\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 =\u00A0mv\u003Csub\u003E0\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2\n\u003C/p\u003E\n\u003Cp\u003E\nE\u003Csub\u003E1\u003C/sub\u003E\u00A0= mv\u003Csub\u003E1\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 \u002B kx\u003Csub\u003E1\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 = mv\u003Csub\u003E0\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 \u002B k(v\u003Csub\u003E0\u003C/sub\u003Et)\u003Csup\u003E2\u003C/sup\u003E/2\n\u003C/p\u003E\n\u003Cp\u003E\nSo the system gained energy during this time step. What\u0027s interesting is that with this particular integration scheme, you\u0027ll be gaining energy on every single time step. Yes, you can add damping to try to counteract that, but for any damping coefficient you chose and no matter how small the time step t gets, you can find combination of k and m such that energy gain will be higher and the system WILL shake itself apart.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, the problem in this particular example is using forward Euler integration. There are much better integration methods that don\u0027t have this problem for this simple case. Unfortunately, as the system gets more and more complex, that doesn\u0027t help you anymore. Basically, no matter how careful you are about simulation, if your joints are effectively springs, somebody can come up with a system that\u0027s going to shake itself apart at the slightest nudge. And, well, KSP demonstrates it perfectly.\n\u003C/p\u003E\n\u003Cp\u003E\nObviously, there are ways to minimize these problems. Reducing time step is one. That\u0027s why things get worse under time warp. And then there are ways in which you apply joints between modules, the ways in which you compute spring coefficients (or, rather, Baumgarte parameters for joint stabilization, but it\u0027s the same effect). But things generally get worse as you increase the size, number of contact points, and any additional external forces.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879634\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221604980859\u0022 data-ipsquote-userid=\u0022105624\u0022 data-ipsquote-username=\u0022Pthigrivi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Pthigrivi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCouldn\u2019t they run a test sim when placing a new part and mark it red if it would result in failure?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSure. But I immediately see two problems. Lets say the simulation is very close to instability. First, when you are placing the part, it might show up red. Then you mouse away, mouse back, and it\u0027s green now, because this time simulation didn\u0027t explode. And it might be unstable enough that it takes you several tries to place the part. That\u0027s bad player experience. Then you start playing. Everything\u0027s great until you tried to land a rocket on a pad. Suddenly, game realizes that it needs to check stability with added weight of the rocket, and this time, the simulation explodes and your entire base flies into all possible directions at once. Bad player experience.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t think a dynamic simulation of any kind is a solution here. You have to turn it into a statics problem. If you say that modules themselves never move from equilibrium, this becomes entirely a problem about interaction forces. If velocity is always zero, your base can\u0027t possibly shake itself apart. Unfortunately, there is still a route for it going bad.\n\u003C/p\u003E\n\u003Cp\u003E\nImagine two modules welded together at 4 points. These 4 weld points make a cross. Now, I tell you that two modules don\u0027t move relative to each other, what are the forces on joints? There are infinitely many solutions, technically, providing same net force. If two of the joints are pulling the modules together very, very hard, then two of the others are pushing the modules apart. The net effect is still zero, but forces can get really high. Unfortunately, left to their own devices these forces tend to diverge in simulation due to divisions by nearly zero. (Singularity.) There are number of ways to fix that as well, and the most direct and fool-proof is via singular value decomposition. Which is, honestly, just a fancy math way of saying, \u0022Ok, find solution that minimizes the sum of squares of all forces\u0022. And unless you are dealing with materials that are pre-stressed, this tends to give physically sensible results.\n\u003C/p\u003E\n\u003Cp\u003E\nBut what you arrive at is that the simulation you should be doing for structures is completely different than the way Unity simulates physics. Because Unity is designed for dynamic objects with all sorts of joint types, while for structures you want a static simulation with weld joints only. Different math, different criteria for stability. And, well, custom physics would have to be written from scratch, so there\u0027s that.\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2020-11-10T13:10:50Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879698\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605004726\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cem\u003Esnip\u003C/em\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPremise I\u0027m way below your level of understanding of this argument.\n\u003C/p\u003E\n\u003Cp\u003E\nThat said, I think you\u0027re missing a huge opportunity for simplification:\u00A0\u003Cstrong\u003Eground anchors.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhen he talked about this Nate always talked about cliffs, canyons and, generally, of interactions with the ground morphology. I read that as: \u0022the problem arises when you can\u0027t directly build a pylon to the ground.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m convinced that the structural calculations aren\u0027t for the building as a whole but from the last anchored module/structure.\n\u003C/p\u003E\n\u003Cp\u003E\nI can also immagine them making explicitly non-structural pressurized tubes/corridors relatively cheap encouraging the players to build multiple structurally indipendent buildings instead of a single monolithic block.\n\u003C/p\u003E\n"},{"CreatedByName":"cfds","CreatedById":82109,"CreatedDateTime":"2020-11-10T13:18:29Z","Content":"\n\u003Cp\u003E\nThe problem with ground anchors is, that including them naively just introduces another node with an infinite force to the graph.\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2020-11-10T14:30:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879730\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605014309\u0022 data-ipsquote-userid=\u002282109\u0022 data-ipsquote-username=\u0022cfds\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, cfds said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe problem with ground anchors is, that including them naively just introduces another node with an infinite force to the graph.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot player placeable ground anchors, I\u0027m thinking more about automatically placed pylons if the module is close enought to the ground and the ground has the right conditions (type and inclination), that way most modules will just be static root and only the part built \u0022in mid air\u0022 will be considered in the structural calculations.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-11-10T14:31:18Z\u0022 title=\u002211/10/2020 02:31  PM\u0022 data-short=\u00223 yr\u0022\u003ENovember 10, 2020\u003C/time\u003E by Master39\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"starcaptain","CreatedById":166799,"CreatedDateTime":"2020-11-10T16:40:09Z","Content":"\n\u003Cp\u003E\nLet\u0027s look at a specific example.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022ksp2_39.jpg\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002290.00\u0022 height=\u0022675\u0022 width=\u00221200\u0022 src=\u0022https://www.kerbalspaceprogram.com/wp-content/uploads/2019/09/ksp2_39.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThis is one of the screenies of a base on a Mun-like object.\n\u003C/p\u003E\n\u003Cp\u003E\nCentered in the scene is what appears to be the heart of any colony mission, a self-contained, vacuum-proof, iron-enriched, allegedly portable\u00A0\u003Cem\u003EExospheric Vehicle Assembly Building\u003C/em\u003E. (EVAB?) This building may be invariant apart from color scheme, from level to level.\n\u003C/p\u003E\n\u003Cp\u003E\nAttached to it at each of its four sides are \u0022stuff\u0022, which each look like they\u0027re coming from preset attachment nodes, not unlike the\u00A0Multi-Point Connector hub.\n\u003C/p\u003E\n\u003Cp\u003E\nOut one side are solar panels. They\u0027re such simple constructions that I wonder if they\u0027re click-and-drag and procedural generated.\n\u003C/p\u003E\n\u003Cp\u003E\nOut another side are a handful of modules that I bet are part of the first tech epoch, being roughly analogous to our current level of technology in the real world: with metal tanks and balloonified habitation modules. Or maybe the white things are rigid tanks covered with insulation. Or giant marshmallows. Anything is possible.\n\u003C/p\u003E\n\u003Cp\u003E\nEverything is suspended above the ground by little stilts. These stilts are just some sufficient length downwards so that you can\u0027t see their bottoms after they intersect the surface.\n\u003C/p\u003E\n\u003Cp\u003E\nI get\u00A0Pthigrivi\u0027s issue: the little supporting stilts should have a few different variants (and perhaps the exterior of some modules and the EVAB too) depending on surface gravity (and/or external pressure).\n\u003C/p\u003E\n\u003Cp\u003E\nI personally am wondering to what degree we can fiddle with things like rotation or alignment of modules: is everything going to be hard limited to nodes and 90\u00BA points of contact, or will we have complete rotation and translation offset tools like in the vehicle editor, where people can build enormously sophisticated facilties that fit inside a single tiny box because of abusing part intersections. Or perhaps we\u0027ll have something in-between that\u0027s more free than 90\u00BA hard points, but less than full 6-axis freedom.\n\u003C/p\u003E\n\u003Cp\u003E\nI wonder also if space station colony editors function the same as base editors.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-11-10T16:43:58Z\u0022 title=\u002211/10/2020 04:43  PM\u0022 data-short=\u00223 yr\u0022\u003ENovember 10, 2020\u003C/time\u003E by starcaptain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-10T17:07:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879741\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605018652\u0022 data-ipsquote-userid=\u002268648\u0022 data-ipsquote-username=\u0022Master39\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Master39 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot player placeable ground anchors, I\u0027m thinking more about automatically placed pylons if the module is close enought to the ground and the ground has the right conditions (type and inclination), that way most modules will just be static root and only the part built \u0022in mid air\u0022 will be considered in the structural calculations.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhich I think is pretty close to how they\u0027ll do this for ground colonies. But we\u0027re sort of back to having it where the structure is either complex enough to have stability problems or it\u0027s simple enough to where you don\u0027t get any benefits of the simulation. All you need is for each module to become an independent physics object if it\u0027s been hit with enough force to break it off. It will still look reasonable and requires zero structural simulation.\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2020-11-10T17:34:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879786\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605028068\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n24 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhich I think is pretty close to how they\u0027ll do this for ground colonies. But we\u0027re sort of back to having it where the structure is either complex enough to have stability problems or it\u0027s simple enough to where you don\u0027t get any benefits of the simulation. All you need is for each module to become an independent physics object if it\u0027s been hit with enough force to break it off. It will still look reasonable and requires zero structural simulation.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAs I said I was considering the \u0022structural simulation\u0022 only for modules suspended without direct pylons, like when you\u0027re trying to bridge a canyon or build on the rim of a crater (or just love to build tower-colonies)\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-10T18:03:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879793\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605029689\u0022 data-ipsquote-userid=\u002268648\u0022 data-ipsquote-username=\u0022Master39\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 minutes ago, Master39 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs I said I was considering the \u0022structural simulation\u0022 only for modules suspended without direct pylons, like when you\u0027re trying to bridge a canyon or build on the rim of a crater (or just love to build tower-colonies)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou have 3 limiting cases here.\n\u003C/p\u003E\n\u003Cp\u003E\n1) Connections are very weak, barely enough to support a single module. So you can\u0027t build any complex suspended or free-standing structures. Anything that doesn\u0027t collapse immediately is stable.\n\u003C/p\u003E\n\u003Cp\u003E\n2) Connections are strong, but you are building with just a few modules. Everything is stable.\n\u003C/p\u003E\n\u003Cp\u003E\n3) Connections are strong, and you build complex free-standing or suspended structures. Due to part count, you have stability issues I\u0027ve outlined. Entire colony occasionally undergoes spontaneous disassociation.\n\u003C/p\u003E\n\u003Cp\u003E\nCase 1) isn\u0027t fun, because it drastically limits what you can build.\u00A0Case 3) is unstable regardless of anchors. Case 2) doesn\u0027t actually benefit from simulation, because nothing is even close to structural limits.\n\u003C/p\u003E\n\u003Cp\u003E\nSo the only sensible solution is you either build a custom simulation that can handle case 3) or you don\u0027t, pretend you did, and just treat everything as if it was case 2) regardless of complexity without actually running simulation.\n\u003C/p\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-11-11T00:11:11Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879698\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605004726\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIn games, it\u0027s almost always a consequence of finite time step or finite precision in numerical integration. Here\u0027s an artificial example. Imagine that you\u0027re trying to keep an object in place with a simulated spring with stiffness k. That object has mass m and is initially at position x\u003Csub\u003E0\u003C/sub\u003E\u00A0= 0. It got a kick from some external force or collision and has some initial velocity v\u003Csub\u003E0\u003C/sub\u003E. Every time step you update position based on current velocity, then update velocity based on forces.\n\u003C/p\u003E\n\u003Cp\u003E\nF\u003Csub\u003E0\u003C/sub\u003E\u00A0= -kx\u003Csub\u003E0\u003C/sub\u003E\u00A0= 0\n\u003C/p\u003E\n\u003Cp\u003E\na\u003Csub\u003E0\u003C/sub\u003E\u00A0= F\u003Csub\u003E0\u003C/sub\u003E/m = 0\n\u003C/p\u003E\n\u003Cp\u003E\nx\u003Csub\u003E1\u003C/sub\u003E\u00A0= x\u003Csub\u003E0\u003C/sub\u003E\u00A0\u002B v\u003Csub\u003E0\u003C/sub\u003Et = v\u003Csub\u003E0\u003C/sub\u003Et\n\u003C/p\u003E\n\u003Cp\u003E\nv\u003Csub\u003E1\u003C/sub\u003E\u00A0= v\u003Csub\u003E0\u003C/sub\u003E\u00A0\u002B a\u003Csub\u003E0\u003C/sub\u003Et = v\u003Csub\u003E0\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\nNot a lot is happening yet, but lets look at the energy.\n\u003C/p\u003E\n\u003Cp\u003E\nE\u003Csub\u003E0\u003C/sub\u003E\u00A0= mv\u003Csub\u003E0\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 \u002B kx\u003Csub\u003E0\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 =\u00A0mv\u003Csub\u003E0\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2\n\u003C/p\u003E\n\u003Cp\u003E\nE\u003Csub\u003E1\u003C/sub\u003E\u00A0= mv\u003Csub\u003E1\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 \u002B kx\u003Csub\u003E1\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 = mv\u003Csub\u003E0\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E/2 \u002B k(v\u003Csub\u003E0\u003C/sub\u003Et)\u003Csup\u003E2\u003C/sup\u003E/2\n\u003C/p\u003E\n\u003Cp\u003E\nSo the system gained energy during this time step. What\u0027s interesting is that with this particular integration scheme, you\u0027ll be gaining energy on every single time step. Yes, you can add damping to try to counteract that, but for any damping coefficient you choseand no matter how small the time step t gets, you can find combination of k and m such that energy gain will be higher and the system WILL shake itself apart.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIs there not a way to implement a potential well that holds the total energy of the system and doesn\u0027t allow anything to exceed the region of\u00A0maximum potential energy to account for errors in timesteps?\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-11T00:41:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879921\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605053471\u0022 data-ipsquote-userid=\u0022180102\u0022 data-ipsquote-username=\u0022mcwaffles2003\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 minutes ago, mcwaffles2003 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIs there not a way to implement a potential well that holds the total energy of the system and doesn\u0027t allow anything to exceed the region of\u00A0maximum potential energy to account for errors in timesteps?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s not about a shape of potential, but rather the discrete points at which you probe it. That said, for a particular type of potential, one can design a conservative integrator that will conserve energy to within numerical errors. Problem is, once you start increasing number of degrees of freedom, you can\u0027t build a conservative integrator for a general case. Best you can do is integrators that will be conservative on average in most practical circumstances. (See \u003Ca href=\u0022https://en.wikipedia.org/wiki/Symplectic_integrator\u0022 rel=\u0022external nofollow\u0022\u003Esymplectic integrators\u003C/a\u003E.)\n\u003C/p\u003E\n\u003Cp\u003E\nIn practice, you rarely get even that far. Fancy methods of integration are just too expensive to run for a game. A typical multi-body simulation in a game engine will run at most a few rounds of impulse exchange or equivalent to solve for constraints, then use some variation of \u003Ca href=\u0022https://en.wikipedia.org/wiki/Verlet_integration\u0022 rel=\u0022external nofollow\u0022\u003EVerlet integration\u003C/a\u003E to update bodies. It\u0027s good enough for most practical cases, including ragdolls, if you set them up correctly.\n\u003C/p\u003E\n\u003Cp\u003E\nTruth is, physics sims like the one used in Unity just aren\u0027t made for the use case. They are good when the part count is low, and they are at their worst when two massive objects are connected by a very light one. You know, like stack separators. You can probably avoid that last one in base building, but you still have all the other problems.\n\u003C/p\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-11-11T06:21:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223879936\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605055281\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s not about a shape of potential, but rather the discrete points at which you probe it. That said, for a particular type of potential, one can design a conservative integrator that will conserve energy to within numerical errors. Problem is, once you start increasing number of degrees of freedom, you can\u0027t build a conservative integrator for a general case. Best you can do is integrators that will be conservative on average in most practical circumstances. (See \u003Ca href=\u0022https://en.wikipedia.org/wiki/Symplectic_integrator\u0022 rel=\u0022external nofollow\u0022\u003Esymplectic integrators\u003C/a\u003E.)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nJust as it\u0027s speculated\u00A0to be the case with ships I think colonies will also have large segments simply joined without spring- like joints to limit the DOF being simulated\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-11T06:40:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223880025\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605075706\u0022 data-ipsquote-userid=\u0022180102\u0022 data-ipsquote-username=\u0022mcwaffles2003\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, mcwaffles2003 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nJust as it\u0027s speculated\u00A0to be the case with ships I think colonies will also have large segments simply joined without spring- like joints to limit the DOF being simulated\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s definitely the correct approach. The question is whether you still want to simulate stress at these not-joints. If the answer is no, you\u0027re done. Formula for adding together moment of inertia tensors for two rigid bodies joined together is in high school physics textbook. But if you want to simulate stress in the structure, you still have to jump through all the hoops and look after all the singularities.\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s also a separate note on rockets. One thing that joints give you over simply joining rigid bodies is the flex. Personally, I think KSP could have done without from the start, but now that KSP has had bendy rockets for nearly a decade, it\u0027s hard for me to picture KSP2 without it. Some sort of a hybrid approach might be what you want here, however, and if that\u0027s what they\u0027re going for, great!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nUnless they really have both the talent and time to do this right, my recommendation would be to not worry about stress. For colonies, surface or orbital, just build the whole thing as a single rigid body. Maybe add some joints for moving bits, like ramps, satellite dishes, etc. If a particular part takes enough of a bonk, it disconnects from its neighbors and possibly explodes. That will still look pretty good if you crash a ship into a colony and won\u0027t tax your simulation.\n\u003C/p\u003E\n\u003Cp\u003E\nFor rockets yeah, replace as many welds as you can with proper unions, and again, don\u0027t worry about stress there. You can treat a stack of tanks as a single tank. We\u0027ve been kind of thinking of them that way logically anyhow. And then things like stack separators and struts can still be done with conventional weld joints. This will allow for construction of much larger rockets without fear of the Kraken, while you still get that classic flex anywhere stages separate, whether stages themselves are large or small. Best of all the worlds.\n\u003C/p\u003E\n"},{"CreatedByName":"Pthigrivi","CreatedById":105624,"CreatedDateTime":"2020-11-11T14:53:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223880028\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605076812\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s definitely the correct approach. The question is whether you still want to simulate stress at these not-joints. If the answer is no, you\u0027re done. Formula for adding together moment of inertia tensors for two rigid bodies joined together is in high school physics textbook. But if you want to simulate stress in the structure, you still have to jump through all the hoops and look after all the singularities.\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s also a separate note on rockets. One thing that joints give you over simply joining rigid bodies is the flex. Personally, I think KSP could have done without from the start, but now that KSP has had bendy rockets for nearly a decade, it\u0027s hard for me to picture KSP2 without it. Some sort of a hybrid approach might be what you want here, however, and if that\u0027s what they\u0027re going for, great!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nUnless they really have both the talent and time to do this right, my recommendation would be to not worry about stress. For colonies, surface or orbital, just build the whole thing as a single rigid body. Maybe add some joints for moving bits, like ramps, satellite dishes, etc. If a particular part takes enough of a bonk, it disconnects from its neighbors and possibly explodes. That will still look pretty good if you crash a ship into a colony and won\u0027t tax your simulation.\n\u003C/p\u003E\n\u003Cp\u003E\nFor rockets yeah, replace as many welds as you can with proper unions, and again, don\u0027t worry about stress there. You can treat a stack of tanks as a single tank. We\u0027ve been kind of thinking of them that way logically anyhow. And then things like stack separators and struts can still be done with conventional weld joints. This will allow for construction of much larger rockets without fear of the Kraken, while you still get that classic flex anywhere stages separate, whether stages themselves are large or small. Best of all the worlds.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAll great info, and though a lot of that is beyond me not being a programmer I think I understand the pitfalls. If Intercept has come up with some clever work-arounds/simplifications, great, but even if not and bases are all rigid\u00A0I hope like starcaptain says that there\u2019s a good amount of assembly flexibility if for aesthetic reasons alone.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-11T23:13:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223880147\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605106437\u0022 data-ipsquote-userid=\u0022105624\u0022 data-ipsquote-username=\u0022Pthigrivi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Pthigrivi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI hope like starcaptain says that there\u2019s a good amount of assembly flexibility if for aesthetic reasons alone.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, I sort of hijacked the thread on purely the structural integrity aspect of things, but there\u0027s a lot more to it. Regardless of how Intercept solves the other problems, there needs to be a system that\u0027s flexible enough to let you build the colony that works for you, and that has both aesthetic and logistical aspects that all have to do with flexibility of layouts. Personally, I think I want to be able to build on a grid, but not be forced into any particular grid. Maybe I\u0027ll want to arrange my storage tanks on a hex grid to conserve space and solar panels on a rectangular grid to use the area more effectively. And the way I\u0027m picturing that working is that new placements would snap to a selected grid relative to the\u00A0nearest structure. Maybe have a key you can hold to lock in the \u0022root\u0022 structure, so you can place far away, but keep the grid alignment relative to desired structure? Seems like that would give you all the flexibility you need, but maybe I\u0027m missing something.\n\u003C/p\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-11-11T23:49:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223880028\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605076812\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe question is whether you still want to simulate stress at these not-joints\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIsn\u0027t that the point of making them non joints? \u003Cspan\u003E\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//s3.us-west-2.amazonaws.com/kerbal-forum-uploads/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223880028\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605076812\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere\u0027s also a separate note on rockets. One thing that joints give you over simply joining rigid bodies is the flex. Personally, I think KSP could have done without from the start, but now that KSP has had bendy rockets for nearly a decade, it\u0027s hard for me to picture KSP2 without it. Some sort of a hybrid approach might be what you want here, however, and if that\u0027s what they\u0027re going for, great!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t think it would be kerbal without bendy rockets. Without it aerodynamic stresses wouldn\u0027t behave correctly at all, though less bending would be nice as the extents of bending we see in game can get extreme.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223880028\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605076812\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUnless they really have both the talent and time to do this right, my recommendation would be to not worry about stress. For colonies, surface or orbital, just build the whole thing as a single rigid body. Maybe add some joints for moving bits, like ramps, satellite dishes, etc. If a particular part takes enough of a bonk, it disconnects from its neighbors and possibly explodes. That will still look pretty good if you crash a ship into a colony and won\u0027t tax your simulation.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s already confirmed colonies will not be single rigid bodies though, so there can be failures to stop people from making completely crazy builds like a long plank base over a pit and it hopefully can add fun to the process.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027d wager a lot of the stress and unevenness will be solved with the posts that join the bases to the ground and the very bottom layer of the base will act like a single rigid body. Hopefully if the building have multiple locations to join to the foundation to increase rigidity we can see similar for rockets as well (the whole tree structure of how they\u0027re built) and we can get some more variety in the way we build.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-12T00:33:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223880334\u0022 data-ipsquote-contentid=\u0022198017\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221605138553\u0022 data-ipsquote-userid=\u0022180102\u0022 data-ipsquote-username=\u0022mcwaffles2003\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, mcwaffles2003 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIsn\u0027t that the point of making them non joints? \u003Cspan\u003E\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//s3.us-west-2.amazonaws.com/kerbal-forum-uploads/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can still do the math for stress in both scenarios. Here\u0027s the super simple example. Imagine that we\u0027re looking at two objects of masses m\u003Csub\u003E1\u003C/sub\u003E\u00A0and m\u003Csub\u003E2\u003C/sub\u003E that can only move in one dimension (like, attached to a rail, or something), and their centers\u00A0are located at positions x\u003Csub\u003E1\u003C/sub\u003E\u00A0and x\u003Csub\u003E2\u003C/sub\u003E. We also say that they are attached together by a joint so that the centers are L apart. In other words, we have joint constraint x\u003Csub\u003E2\u003C/sub\u003E\u00A0- x\u003Csub\u003E1\u003C/sub\u003E\u00A0= L. We say that there is a constraint force\u00A0\u03BB between the two. And lets say a force F is applied to the first body. Equations of motion can be written for accelerations of these bodies.\n\u003C/p\u003E\n\u003Cp\u003E\nm\u003Csub\u003E1\u003C/sub\u003Ea\u003Csub\u003E1\u003C/sub\u003E\u00A0= F -\u00A0\u03BB\n\u003C/p\u003E\n\u003Cp\u003E\nm\u003Csub\u003E2\u003C/sub\u003Ea\u003Csub\u003E2\u003C/sub\u003E\u00A0=\u00A0\u03BB\n\u003C/p\u003E\n\u003Cp\u003E\na\u003Csub\u003E2\u003C/sub\u003E\u00A0- a\u003Csub\u003E1\u003C/sub\u003E\u00A0= 0\n\u003C/p\u003E\n\u003Cp\u003E\nIf you solve these as a system, you\u0027ll know both accelerations and the \u0022stress\u0022\u00A0\u03BB at the joint. This is basically the approach taken by Unity to solve for all of the joints in the simulation. Well, there\u0027s a correction. You\u0027ll note that we are only solving for accelerations. After updates, we aren\u0027t guaranteed that initial constraint\u00A0x\u003Csub\u003E2\u003C/sub\u003E\u00A0- x\u003Csub\u003E1\u003C/sub\u003E\u00A0= L is satisfied. This is called a drift and you\u0027ll get more of it as you increase complexity of the system. I won\u0027t get into the math of fixing it, but we effectively replace a strict constraint with a stiff spring. The result will be that a\u003Csub\u003E1\u003C/sub\u003E\u00A0is not strictly equal to a\u003Csub\u003E2\u003C/sub\u003E\u00A0and you can get various oscillations. Most of the time, it isn\u0027t a problem, but as the system grows in complexity, chances for instability increase.\n\u003C/p\u003E\n\u003Cp\u003E\nIt might seem like a silly way to do things, but you need to keep in mind that Unity supports a lot of joint types, and the above method can be generalized to anything you can write constraint equations for, which makes it easy to address fairly complex systems without having to worry about all the special cases.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut if we decided that we\u0027ll only have welds, then alternatively, you treat the two objects welded together as a single rigid body. We know from constraint that a\u003Csub\u003E1\u003C/sub\u003E\u00A0=\u00A0a\u003Csub\u003E2\u003C/sub\u003E\u00A0= a, where a is acceleration of center of mass. We also know that\u00A0\u03A3m\u003Csub\u003Ei\u003C/sub\u003Ea\u003Csub\u003Ei\u003C/sub\u003E =\u00A0\u03A3F\u003Csub\u003Ei\u003C/sub\u003E.\u00A0So we have a new equation of motion.\n\u003C/p\u003E\n\u003Cp\u003E\n(m\u003Csub\u003E1\u003C/sub\u003E\u00A0\u002B m\u003Csub\u003E2\u003C/sub\u003E)a = F\n\u003C/p\u003E\n\u003Cp\u003E\nAnd, well, we don\u0027t really need to solve anything, we just have our answer. There is no drift, because we just simulate center of mass position and then we place all the components relative to it.\u00A0However, what we lost is information about\u00A0\u03BB. We can recover it. What we do is we go to the original equations that have\u00A0\u03BB\u00A0in them and substitute information we have about acceleration.\n\u003C/p\u003E\n\u003Cp\u003E\nm\u003Csub\u003E1\u003C/sub\u003Ea = F -\u00A0\u03BB\n\u003C/p\u003E\n\u003Cp\u003E\nm\u003Csub\u003E2\u003C/sub\u003Ea =\u00A0\u03BB\n\u003C/p\u003E\n\u003Cp\u003E\nTechnically, we don\u0027t need both of these equations, since we have only one unknown. For this simple case, we can pick either one, and unless we\u0027ve done something horribly wrong, we should get the same answer to within numerical error. But imagine that we did make a miscalculation of the value for a. In that case, the two results can disagree. The way to minimize the error is to look for the pseudo-inverse, and again, skipping the hairier math, the correct expression for lambda that minimizes the errors is the following.\n\u003C/p\u003E\n\u003Cp\u003E\n\u03BB = (1/2) (F \u002B (m\u003Csub\u003E2\u003C/sub\u003E\u00A0- m\u003Csub\u003E1\u003C/sub\u003E)a)\n\u003C/p\u003E\n\u003Cp\u003E\nIt happens to be the average of the results of the two expressions in this simple case, but if you were to try and solve a problem with multiple constraints, you will encounter numerical singularities - division by zero or numbers very close to zero - which will wreck havoc on your results and can lead to exceptionally high estimates of stress when there is no reason for it.\n\u003C/p\u003E\n\u003Cp\u003E\nSo in short, whether you simulated a joint constraint, or you simply joined the bodies together, you can get the estimates for stress at the point the two objects are joined, but you will have to do some math gymnastics to get there either way.\n\u003C/p\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-11-12T04:20:09Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57710-k2/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257710\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57710-k2/\u0022 rel=\u0022\u0022\u003E@K^2\u003C/a\u003E\u00A0Is the point of preserving lamda to still allow sheering events to still occur where the two parts of the welded pair join? I would just figure not allowing fractures at all at any of these points to keep it simple and reduce the total\u00A0calculations.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-11-12T04:40:33Z","Content":"\n\u003Cp\u003E\nYes, and yes, that\u0027s the simple solution. Simply let people build whatever they build and don\u0027t worry about the stress for the colonies. Or as some people here have mentioned, limit the number of places where you use the simulated joints, so that you only have a few potential failure points.\n\u003C/p\u003E\n"}]}