{"TopicId":52683,"ForumId":20,"TopicTitle":"rescaleFactor and the MODEL node","CreatedByName":"kaldak","CreatedById":71466,"CreatedDateTime":"2013-11-11T02:35:31Z","PageNum":1,"Articles":[{"CreatedByName":"kaldak","CreatedById":71466,"CreatedDateTime":"2013-11-11T02:35:31Z","Content":"\n\u003Cp\u003ESo I\u0027m trying to alter some config files. One of the things I\u0027d like to be able to do is resize a part. It\u0027s simple enough if the part uses \u0022mesh=...\u0022 to define the model, but rescaleFactor doesn\u0027t seem to work correctly when the new model definition format is used\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODEL{\u003Cbr\u003Emodel=...\u003Cbr\u003Escale=1,1,1\u003Cbr\u003E}\u003Cbr\u003ErescaleFactor=2\u003Cbr\u003Escale=1\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESpecifically, the model scales correctly, but the nodes don\u0027t scale with it. I have tried different combinations of changing those \u0022scale\u0022 variables, but the nodes continue to be an issue. I\u0027ve searching for solutions and come across other people having this problem, but most of the discussions are a few versions out of date and don\u0027t seem to do the trick. I\u0027m not sure if it\u0027s still a bug, or I\u0027m just missing something. Has anyone figured out how to make this work?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Chr\u003E\u003Cp\u003EEDIT: Ugh... I could swear I had already tried this, but one of the previous solutions does indeed work. I guess I\u0027ll leave this post here in case anyone else is wondering about how it works in 0.22.\u003C/p\u003E\u003Cp\u003ECredit goes to \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/43054-21-Scale-and-Rescale?p=550868\u0026amp;viewfull=1#post550868\u0022 rel=\u0022external nofollow\u0022\u003EGreys\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODEL{\u003Cbr\u003Emodel=...\u003Cbr\u003Escale=X,X,X\u003Cbr\u003E}\u003Cbr\u003ErescaleFactor=Y\u003Cbr\u003Escale=Z\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESet Y equal to the scale you want. Leave Z as 1. Set X equal to 1/Y.\u003C/p\u003E\u003Cp\u003EOn my first test part, it also seemed to work by setting X and Z to the scale you want, and leaving Y as 1... but on closer examination that may have been a fluke.\u003C/p\u003E\u003Cp\u003EThis doesn\u0027t make very much sense... but at least it works.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-11T05:42:41Z\u0022 title=\u002211/11/2013 05:42  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 11, 2013\u003C/time\u003E by kaldak\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2013-11-11T04:26:43Z","Content":"\n\u003Cp\u003E\u0022scale = Z\u0022 outside of the MODEL{} node has NOTHING to do with the scale your model appears as. Its a config parameter that existed since the beginning and tells KSP what measurement scale the model is in (meters, centimeters, decimeters, or whatever)\u003C/p\u003E\u003Cp\u003EThis ONLY affects the positions of Stack nodes and FX offsets in relation to the origin of the part/model. \u003C/p\u003E\u003Cp\u003Efor instance if you have scale = 1, then KSP assumes your part is modeled in Meters, and a unit of 1 = 1 meter.\u003C/p\u003E\u003Cp\u003Eso a stacknode like this:\u003C/p\u003E\u003Cp\u003Enode_stack_top = 0.0, 1.0, 0.0, 0.0, 1.0, 0.0\u003C/p\u003E\u003Cp\u003EMeans that the node will be 1 meter above the origin point on the Y axis. If the scale = z was set to 0.01 then it would only be 1 centimeter from the origin.\u003C/p\u003E\u003Cp\u003ETo summarize:\u003C/p\u003E\u003Cp\u003Escale = X (inside a MODEL{} node) and rescaleFactor = Y both affect the actual scale of the model via scalar transforms (and rescaleFactor will also scale your stack nodes and such to match, whereas a model{} node scale will not)\u003C/p\u003E\u003Cp\u003Escale = Z outside of the MODEL{} node only affects the node \u0027scales\u0027 - it also has the side affect of changing the precision of your nodes, since KSP only respects stack node entries up to 3 significant digits after the decimal (at least in the old loader, and I assume this is unchanged)\u003C/p\u003E\u003Cp\u003EThis used to confuse me as well, but I had it explained to me by Chad/C7 quite a while ago, and I have used that config parameter quite a lot during my upkeep of Novapunch - Novasilisko used one scalar precision and Sundaypunch used another, so some parts were scale = 1 and others were 0.1, which meant I always had to multiply my node entries by 10 to make them work. And this was several updates before rescaleFactor was ever a thing.\u003C/p\u003E\u003Cp\u003EI\u0027ve had this discussion before, and I maintain that if you\u0027re seeing otherwise you have found a bug, and I would love to see proof of it.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E----------------------------------------------------------------------------\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEdit #1:\u003C/strong\u003E The rest of your information is indeed correct - you can correctly use rescale factor by setting your MODEL{} node scale to 1/Y - this is a bug and is hopefully on the chopping block to get fixed. When it does get fixed you\u0027ll have to change your scales in the MODEL nodes again to undo the workaround of course.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E-----------------------------------------------------------------------------\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEdit #2:\u003C/strong\u003E here\u0027s an illustration: \u003Ca href=\u0022http://i.imgur.com/Y8OGxJo.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/Y8OGxJo.jpg\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI cloned the stock fueltank, changed it scale from 0.1 to 1.0, and changed the name.\u003C/p\u003E\u003Cp\u003EAs you can see, they\u0027re the same size ingame, but their stack and attach nodes are 10x scale now, so the attach node went from 0.5m to 5m and the stack nodes ~0.7m up and down to 7meters.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E--------------------------------------------------------------------------\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAlso\u003C/strong\u003E, I thought of another important thing to remember when using model{} nodes.\u003C/p\u003E\u003Cp\u003EThe default rescaleFactor is NOT 1.0, it\u0027s 1.25. So if you do not define it in the config file (like in the example above) then if you use a model node you need to set the scale inside your model{} node to 1/1.25 or 0.8\u003C/p\u003E\u003Cp\u003EThis is a hold-over from the old KSP scale where parts were 1m and 2m instead of 1.25m and 2.5m. The stock fuel tank in the example is modeled as a 1m fuel tank, which is why the surface attach node is set to half a meter (equal to the radius) - since the default rescaleFactor is 1.25, the part is scaled to the 1.25m standard, and nodes are scaled too. so ingame those node_attach nodes are actually 0.62625m (0.501 X 1.25)\u003C/p\u003E\u003Cp\u003ELong Story short: best practice is to model in the proper scale and use rescaleFactor = 1 when possible, and then use the 1/y workaround when needed for scaled parts.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-11T04:54:04Z\u0022 title=\u002211/11/2013 04:54  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 11, 2013\u003C/time\u003E by Tiberion\u003C/strong\u003E\n\u003C/span\u003E\n"}]}