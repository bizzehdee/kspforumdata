{"TopicId":115714,"ForumId":29,"TopicTitle":"How to animate a part with multiple animations?","CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2015-07-12T14:07:50Z","PageNum":1,"Articles":[{"CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2015-07-12T14:07:50Z","Content":"I made a part with three animations:\n\n- Heating up\n\n- Working animation\n\n- Lights\n\n![SeriousNeighboringAmericanriverotter.gif](http://giant.gfycat.com/SeriousNeighboringAmericanriverotter.gif)\n\nI\u0027d like to group the first two animations and run them in sequence when a \u0022turn on\u0022 event occurs:\n\n- Heat up (till animation finishes)\n\n- Working (loop)\n\nand then animator should loop the second animation until the \u0022turn off\u0022 event occurs after which it should end both animations simultaneously in this fashion:\n\n- Heat up (backwards animation)\n\n- Working (stop looping)\n\nThe key is blending them together.\n\nFor the \u0022lights\u0022 animation I wish it didn\u0027t interrupt the \u0022working\u0022 animation.\n\nI\u0027m searching for the code which my friend could implement into his plugin.\n\nIs there any mod that has a similar animation code? Where should we look?\n\n**Edited \u003Ctime datetime=\u00222015-07-12T14:13:45Z\u0022 title=\u002207/12/2015 02:13  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 12, 2015\u003C/time\u003E by Enceos**"},{"CreatedByName":"BahamutoD","CreatedById":72433,"CreatedDateTime":"2015-07-13T15:29:17Z","Content":"You could have a startup coroutine and a shutdown coroutine. (using System.Collections)\n\nYou might need another animation that\u0027s just the slideythings sitting at their default position if you want to blend from their moving state smoothly into an idle state.\n\nFirst grab the AnimationStates from the animation then do something like this (pseudo-ish code):\n\n    IEnumerator StartupRoutine(){    heatAnimState.enabled = true;    heatAnimState.normalizedSpeed = 1;    while(heatAnimState.normalizedTime \u003C 1)    {        yield return null; //wait until animation is done.  its a coroutine so it won\u0027t freeze the game    }    heatAnimState.enabled = false;    workingAnimState.enabled = true;    workingAnimState.wrapMode = loop;    workingAnimState.normalizedSpeed = 1;}IEnumerator ShutdownRoutine(){    //start the heat anim at the end and play it backwards    heatAnimState.enabled = true;    heatAnimState.normalizedTime =1;    heatAnimState.normalizedSpeed = -1;     workingAnimState.weight = 1;    idleAnimState.weight = 0;    idleAnimState.enabled = true;    while(idleAnimState.weight \u003C 1 || workingAnimState.weight \u003E 0)    {        idleAnimState.weight = mathf.movetowards(idleAnimState.weight, 1, delta); //fading the weight of idle to one        workingAnimState.weight = mathf.movetowards(workingAnimState.weight, 0, delta); //fading the weight of the working anim to zero        yield return null;    }    idleAnimState.enabled = false;    workingAnimState.enabled = false; //these animations are done, turn them off    while(heatAnimState.normalizedTime \u003E 0)    {        yield return null; //now wait for the reverse heating anim to finish    }    heatAnimState.enabled = false;    //done!}\n\nYou should make sure the heating animation doesn\u0027t have any keyframes for the positions of the other objects so it doesn\u0027t interfere.\n\nThen, for your turn on/turn off methods, start the respective coroutines\n\n    void TurnOn(){    StartCoroutine(StartupRoutine());}\n\nHope this helps..\n\nEdit: when you\u0027re initializing everything and getting the animationState from the animation, I think you have to do animation.blend(animationName) or something.\n\nHere\u0027s a snip of me setting up firing and reloading animations from my game:\n\n                    if(GetComponent())\t\t{\t\t\t//animationSetup\t\t\tfireAnim = GetComponent()[\u0022fireAnimation\u0022];\t\t\tfireAnimSpeed = (fireRateRPM*fireAnim.length)/60;\t\t\tfireAnim.normalizedSpeed = 0;\t\t\tfireAnim.enabled = true;\t\t\tfireAnim.wrapMode = WrapMode.ClampForever;\t\t\tGetComponent().Blend(\u0022fireAnimation\u0022);\t\t\tif(!infiniteMag)\t\t\t{\t\t\t\treloadAnim = GetComponent()[\u0022reloadAnimation\u0022];\t\t\t\treloadAnimSpeed = reloadAnim.length/reloadTime;\t\t\t\treloadAnim.normalizedTime = 1;\t\t\t\treloadAnim.enabled = true;\t\t\t\treloadAnim.wrapMode = WrapMode.ClampForever;\t\t\t\tGetComponent().Blend (\u0022reloadAnimation\u0022);\t\t\t}\t\t}\n\n**Edited \u003Ctime datetime=\u00222015-07-14T20:47:56Z\u0022 title=\u002207/14/2015 08:47  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 14, 2015\u003C/time\u003E by BahamutoD**\n  \nchanged \u0026\u0026 to || in the weight fading \u0027while loop\u0027 condition"},{"CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2015-07-13T20:48:25Z","Content":"Thank you very much, that was very informative!"},{"CreatedByName":"ObiVanDamme","CreatedById":136329,"CreatedDateTime":"2015-07-28T16:23:48Z","Content":"Hey BahamutoD, thank you very much for your help. I managed to make these complex animations available and it looks very promising for the first shot.\n\nHere is what I did for start (no pseudo-code)\n\n    heatAnimation.enabled = true;heatAnimation.normalizedSpeed = 0.5f;while (heatAnimation.normalizedTime \u003C 1){    yield return null;}heatAnimation.enabled = false;workAnimation.enabled = true;workAnimation.wrapMode = WrapMode.Loop;workAnimation.normalizedSpeed = 0.5f;\n\nand for end\n\n    heatAnimation.enabled = true;heatAnimation.normalizedTime = 1;heatAnimation.normalizedSpeed = -0.5f;workAnimation.enabled = true;workAnimation.wrapMode = WrapMode.Loop;workAnimation.normalizedSpeed = 0.5f;while (workAnimation.normalizedTime \u003C 1){    yield return null;}workAnimation.enabled = false;while (heatAnimation.normalizedTime \u003E 0){    yield return null;}heatAnimation.enabled = false;\n\nThe only struggle I have currently is the setup for the animations. I already received bug reports with NullReferenceExceptions inside those two methods and I expect, that this is happening, because the animation states where not initialized but where *null.* \n\nHere is the code i have. I currently call it inside the OnLoad method. Is that the correct way or should I call it from OnStart?\n\n    foreach (var animator in part.FindModelAnimators(\u0022workshop_emissive\u0022)){    heatAnimation = animator[\u0022workshop_emissive\u0022];    heatAnimation.speed = 0;    heatAnimation.enabled = true;    heatAnimation.wrapMode = WrapMode.ClampForever;    animator.Blend(\u0022workshop_emissive\u0022);    break;}foreach (var animator in part.FindModelAnimators(\u0022work\u0022)){    workAnimation = animator[\u0022work\u0022];    workAnimation.speed = 0;    workAnimation.enabled = true;    workAnimation.wrapMode = WrapMode.ClampForever;    animator.Blend(\u0022work\u0022);}\n\nI cannot reproduce the exceptions and the reporter has a very heavily modded install. Can you tell me if this setup is right or do you have any Idea what could cause those exceptions based on the info you have?"},{"CreatedByName":"BahamutoD","CreatedById":72433,"CreatedDateTime":"2015-07-28T16:48:24Z","Content":"I\u0027ve never used OnLoad, so the first thing I would try is to put the animator setup in OnStart."}]}