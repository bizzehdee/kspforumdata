{"TopicId":111356,"ForumId":29,"TopicTitle":"Docking Port module Decouple option","CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-05-30T08:45:36Z","PageNum":1,"Articles":[{"CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-05-30T08:45:36Z","Content":"\n\u003Cp\u003ESo I tried to make a part that behaves like a docking port. This is almost identical to existing stock docking part, but I do not have a decouple option, only a \u0022control from here\u0022 option. \u003C/p\u003E\u003Cp\u003EDoes that behavior not come with the ModuleDockingNode? Do I need to make a plugin that inherits from the DockingPort class?\u003C/p\u003E\u003Cp\u003EObviously plugins give you alot more control to implement custom code, but when you instead are trying to leverage existing stock behavior, what is the difference between using a module in a part config, versus inheriting from the part in a plugin?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART {\u003Cbr\u003E\tname = testPort\u003Cbr\u003E\tmodule = Part\u003Cbr\u003E\tauthor = aaron\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\tmesh = model.mu\u003Cbr\u003E\tscale = 1\u003Cbr\u003E\trescaleFactor = 1\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\tnode_stack_top = 0.0, 1, 0.0, 0.0, 1.0, 0.0, 1\u003Cbr\u003E\tnode_stack_bottom = 0.0, -1, 0.0, 0.0, -1.0, 0.0, 3\t\u003Cbr\u003E    node_attach = 0.0, 0, 0.0, 0.0, 0, 1.0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\tTechRequired = advConstruction\u003Cbr\u003E\tentryCost = 12500\u003Cbr\u003E\tcost = 12500\u003Cbr\u003E\tcategory = Utility\u003Cbr\u003E\tsubcategory = 0\u003Cbr\u003E\ttitle = Test\u003Cbr\u003E\tmanufacturer = Test\u003Cbr\u003E\tdescription = Test\u003Cbr\u003E\tattachRules = 1,1,1,1,0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t// --- standard part parameters ---\u003Cbr\u003E\tmass = 10\u003Cbr\u003E\tdragModelType = override\u003Cbr\u003E\tmaximum_drag = 0\u003Cbr\u003E\tminimum_drag = 0\u003Cbr\u003E\tangularDrag = 0\u003Cbr\u003E\tcrashTolerance = 9\u003Cbr\u003E\tbreakingForce = 600\u003Cbr\u003E\tbreakingTorque = 600\u003Cbr\u003E\tmaxTemp = 5000\u003Cbr\u003E\u003Cbr\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\t name = ModuleDockingNode\u003Cbr\u003E\t\t referenceAttachNode = top\u003Cbr\u003E\t\t nodeType = size1\t\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-05-30T09:55:57Z","Content":"\n\u003Cp\u003EInheriting from Part is what was done in KSP a long time ago. If you want to implement a function for a part you need to inherit from PartModule.\u003C/p\u003E\u003Cp\u003EAs for you problem the part needs a transform to position where the docking is actually done. By default the module search for a transform named \u0022dockingNode\u0022 or you can set nodeTransformName with the module config.\u003C/p\u003E\n"}]}