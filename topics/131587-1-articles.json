{"TopicId":131587,"ForumId":29,"TopicTitle":"Finding the orbit under the mouse?","CreatedByName":"zentarul","CreatedById":151841,"CreatedDateTime":"2016-02-07T18:30:13Z","PageNum":1,"Articles":[{"CreatedByName":"zentarul","CreatedById":151841,"CreatedDateTime":"2016-02-07T18:30:13Z","Content":"\n\u003Cp\u003E\nI am trying to display contextual information about an orbit just by hovering the mouse above it. Obviously, clicking on an orbit allows you to place a maneuver node at that position, so there must be a way to translate mouse position into orbit \u002B obit UT. The question is how? The OrbitRenderer seems to have some info about that. It has a GetMouseOverNode function and a mouseOver member, but it is not clear what they mean.\n\u003C/p\u003E\n\u003Cp\u003E\nDoes anyone have any insight on this?\n\u003C/p\u003E\n\u003Cp\u003E\nThanks,\u003Cbr\u003E\nZentarul\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2016-02-07T21:31:50Z","Content":"\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n[KSPAddon(KSPAddon.Startup.Flight, false)]\npublic class OrbitMouseOver : MonoBehaviour\n{\n    private bool _mouseOver = false;\n    private PatchedConics.PatchCastHit _mousedOverPatch;\n\n\n    private Rect _popup = new Rect(0f, 0f, 120f, 60f);\n    private Texture2D _cross;\n    private Rect _crossRect;\n\n    private void Awake()\n    {\n        _popup.center = new Vector2(Screen.width * 0.5f - _popup.width * 0.5f,\n            Screen.height * 0.5f - _popup.height * 0.5f);\n\n        _cross = new Texture2D(32, 32, TextureFormat.ARGB32, false);\n        _crossRect = new Rect(0, 0, _cross.width, _cross.height);\n\n        var pixels = Enumerable.Repeat(Color.clear, _cross.width * _cross.height).ToArray();\n\n        for (int i = 0; i \u0026lt; _cross.width; \u002B\u002Bi)\n            for (int j = 0; j \u0026lt; _cross.height; \u002B\u002Bj)\n            {\n                if (i == j || j == (_cross.width - i))\n                    pixels[j * _cross.height \u002B i] = Color.red;\n            }\n\n        _cross.SetPixels(pixels);\n        _cross.Apply();\n    }\n\n\n    private void Update()\n    {\n        _mouseOver = MouseOverOrbit(out _mousedOverPatch);\n\n        if (!_mouseOver) return;\n\n        var updatedLocation = _mousedOverPatch.GetUpdatedScreenPoint();\n\n        _popup.center = _crossRect.center = new Vector2(updatedLocation.x, Screen.height - updatedLocation.y);\n    }\n\n\n    private void OnGUI()\n    {\n        if (!_mouseOver) return;\n\n        GUI.skin = HighLogic.Skin;\n\n\n        GUILayout.BeginArea(GUIUtility.ScreenToGUIRect(_popup));\n        GUILayout.Label(\u0022UT: \u0022 \u002B KSPUtil.PrintTime((int)(Planetarium.GetUniversalTime() - _mousedOverPatch.UTatTA), 5, true));\n\n        GUILayout.EndArea();\n\n        if (Event.current.type == EventType.Repaint)\n            Graphics.DrawTexture(_crossRect, _cross);\n    }\n\n\n\n\n    private bool MouseOverOrbit(out PatchedConics.PatchCastHit hit)\n    {\n        hit = default(PatchedConics.PatchCastHit);\n\n        if (FlightGlobals.ActiveVessel == null) return false;\n\n        var patchRenderer = FlightGlobals.ActiveVessel.patchedConicRenderer;\n\n        if (patchRenderer == null) return false;\n\n        var patches = patchRenderer.solver.maneuverNodes.Any()\n            ? patchRenderer.flightPlanRenders\n            : patchRenderer.patchRenders;\n\n        return PatchedConics.ScreenCast(Input.mousePosition, patches, out hit);\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\nHere\u0027s a rough proof of concept. It works on the active vessel\u0027s orbit. If you want to include the other orbits (CelestialBodies at least, anyway), you\u0027ll probably want to use OrbitRenderer.OrbitCast. I didn\u0027t go far on that path other than yes/no type mouseover debug spam since it became apparent that the maneuver node placement was doing something different and the active vessel\u0027s orbit wasn\u0027t included by that method\n\u003C/p\u003E\n"},{"CreatedByName":"zentarul","CreatedById":151841,"CreatedDateTime":"2016-02-09T14:03:53Z","Content":"\n\u003Cp\u003E\nThanks a lot xEvilReepers! Here\u0027s the result: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/131706-105-abookcase-orbital-reference-system-0110/\u0022\u003EABookCase Orbital Reference System\u003C/a\u003E\n\u003C/p\u003E\n"}]}