{"TopicId":22583,"ForumId":34,"TopicTitle":"Firespitter propeller plane and helicopter parts v7.1 (May 5th) for KSP 1.0","CreatedByName":"Snjo","CreatedById":57198,"CreatedDateTime":"2013-04-18T22:30:39Z","PageNum":67,"Articles":[{"CreatedByName":"erbmur","CreatedById":57112,"CreatedDateTime":"2014-09-10T18:09:39Z","Content":"\n\u003Cp\u003ECould somebody give me a hand please. I\u0027m trying to incorporate the texture/fuel switcher into the Tac Life support parts to reduce the part count. This is what I have currently:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = FStextureSwitch2\u003Cbr\u003E\t\ttextureRootFolder = ThunderAerospace/TacLifeSupportContainers/\u003Cbr\u003E\t\ttextureNames = FoodTexture;OxygenTexture;WasteTexture;WaterTexture;Texture\u003Cbr\u003E\t\tobjectNames = TacContainer\u003Cbr\u003E\t\ttextureDisplayNames = Food;Oxygen;Waste;Water;Life Support\u003Cbr\u003E\t\tuseFuelSwitchModule = true\u003Cbr\u003E\t\tfuelTankSetups = 0;1;2;3;4\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = FSfuelSwitch\u003Cbr\u003E\t\tresourceNames = Food;Oxygen;CarbonDioxide,WasteWater,Waste;Water;Food,Water,Oxygen\u003Cbr\u003E\t\tresourceAmounts = 240;53072.3;18800.1,180.9,19.5;240;113.2,74.8,11466.9\u003Cbr\u003E\t\ttankCost = 57.4;3;0;0.2;27.8\u003Cbr\u003E\t\thasGUI = false\u003Cbr\u003E\t}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe switcher seems to function properly in that the fuels are changed, but the texture of the container doesn\u0027t seem to change. What am I doing wrong?\u003C/p\u003E\n"},{"CreatedByName":"Elmetian","CreatedById":32720,"CreatedDateTime":"2014-09-11T20:07:34Z","Content":"\n\u003Cp\u003EHi guys,\u003C/p\u003E\u003Cp\u003EI\u0027m using Firespitter\u0027s procedural rotors and they seem to bring up the input visualizer whether I want it or not. Is there a way to disable it? I can\u0027t see any obvious toolbar buttons or menu options :S\u003C/p\u003E\n"},{"CreatedByName":"sober667","CreatedById":116695,"CreatedDateTime":"2014-09-13T16:56:26Z","Content":"\n\u003Cp\u003EAll my engines depended on firesplitter ( with animated parts) starts activated all (B9,karbonite, and more)\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-13T17:37:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sober667\u0022 data-cite=\u0022sober667\u0022\u003E\u003Cdiv\u003EAll my engines depended on firesplitter ( with animated parts) starts activated all (B9,karbonite, and more)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Edo you have KSPI?\u003C/p\u003E\n"},{"CreatedByName":"sober667","CreatedById":116695,"CreatedDateTime":"2014-09-13T18:01:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Edo you have KSPI?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eyes i have it mess it? that could be true...\u003C/p\u003E\u003Cp\u003Eis way to fix it?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-13T18:05:43Z\u0022 title=\u002209/13/2014 06:05  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 13, 2014\u003C/time\u003E by sober667\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-13T18:12:41Z","Content":"\n\u003Cp\u003Enone that I know of. I recommend getting the mod that sets start throttle to 0 as a temporary fix\u003C/p\u003E\n"},{"CreatedByName":"sober667","CreatedById":116695,"CreatedDateTime":"2014-09-13T21:47:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Enone that I know of. I recommend getting the mod that sets start throttle to 0 as a temporary fix\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ei serching a lot and donnt get any do u now is any that have it?\u003C/p\u003E\n"},{"CreatedByName":"The Destroyer","CreatedById":36109,"CreatedDateTime":"2014-09-13T23:48:56Z","Content":"\n\u003Cp\u003EGreat, 500 internal error \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003E(kerbalstuff)\u003C/p\u003E\n"},{"CreatedByName":"skeevy","CreatedById":110477,"CreatedDateTime":"2014-09-15T16:08:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erbmur\u0022 data-cite=\u0022erbmur\u0022\u003E\u003Cdiv\u003ECould somebody give me a hand please. I\u0027m trying to incorporate the texture/fuel switcher into the Tac Life support parts to reduce the part count. This is what I have currently:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = FStextureSwitch2\u003Cbr\u003E        textureRootFolder = ThunderAerospace/TacLifeSupportContainers/\u003Cbr\u003E        textureNames = FoodTexture;OxygenTexture;WasteTexture;WaterTexture;Texture\u003Cbr\u003E        objectNames = TacContainer\u003Cbr\u003E        textureDisplayNames = Food;Oxygen;Waste;Water;Life Support\u003Cbr\u003E        useFuelSwitchModule = true\u003Cbr\u003E        fuelTankSetups = 0;1;2;3;4\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = FSfuelSwitch\u003Cbr\u003E        resourceNames = Food;Oxygen;CarbonDioxide,WasteWater,Waste;Water;Food,Water,Oxygen\u003Cbr\u003E        resourceAmounts = 240;53072.3;18800.1,180.9,19.5;240;113.2,74.8,11466.9\u003Cbr\u003E        tankCost = 57.4;3;0;0.2;27.8\u003Cbr\u003E        hasGUI = false\u003Cbr\u003E    }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe switcher seems to function properly in that the fuels are changed, but the texture of the container doesn\u0027t seem to change. What am I doing wrong?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027ve had better luck than me, that\u0027s for sure. I\u0027ve been trying to add Karbonite to various B9 parts (actually have a MM config for all the S2 parts, adding in Karbonite and Atmosphere Intake for all relevant parts, modified descriptions, costs, weight, and all...322 lines so far and that\u0027s just the S2 parts and a few Mk2\u0027s), but the problem I\u0027m having is it crashes on load because I need up update the firespitter sources to include Karbonite as an actual resource defined in the FS dll. Atm Intake is covered with either Karbonite or ORS (not really sure, haven\u0027t checked; works on other parts that I\u0027m MM\u0027d Atm Intake into), but Karbonite causes a crash on launch because it isn\u0027t a defined resource in the FS dll.\u003C/p\u003E\u003Cp\u003EYou problem could be because Life Support might need to be LifeSupport (line 6)\u003C/p\u003E\u003Cp\u003Eand line 5 might need something more than just Texture for the texture name...perhaps LSTexutre as a suggestion (for Life Support)\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/snjo/Firespitter/blob/master/Firespitter/customization/FSfuelSwitch.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/snjo/Firespitter/blob/master/Firespitter/customization/FSfuelSwitch.cs\u003C/a\u003E (link to part of sources needed to add in resources...for fuels)\u003C/p\u003E\u003Cp\u003Elines 9-26 need to be modified for more resources\u003C/p\u003E\u003Cp\u003Efollowed by lines 246 to 280 to make them able to be toggled\u003C/p\u003E\u003Cp\u003E@SNJO\u003C/p\u003E\u003Cp\u003EWould it be possible to move resources from the DLL to a config file...or add in the ability to add more resources with a config file. I\u0027m sorry, my coding skills are mediocre at best..adding in something is easy, moving all resources to a config file is beyond my skill set (especially since I\u0027m most specialized in bash scripts and very basic java...working on learning java actually)\u003C/p\u003E\u003Cp\u003EAnd I\u0027ve actually done the necessary source changes to add Karbonite support for Firespitter, only I don\u0027t have a build environment to actually compile and test it (working on it, gotta work on freeing up some HDD space to hold all of Unity and Visual Studio). If anybody could use the below and compile it for me I\u0027d really appreciate it...if not, give me a few days and I should have it done myself.\u003C/p\u003E\u003Cp\u003EWhat I\u0027ve done to FSfuelSwitch.cs (sorry, on Windows...If I was on my linux box I\u0027d either post a diff or link to a fork and commit on github)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing System.Collections.Generic;using System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Enamespace Firespitter.customization\u003Cbr\u003E{\u003Cbr\u003E    public class FSfuelSwitch : PartModule, IPartCostModifier\u003Cbr\u003E    {\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string resourceNames = \u0022ElectricCharge;LiquidFuel,Oxidizer;MonoPropellant;Karbonite\u0022;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string resourceAmounts = \u0022100;75,25;200;100\u0022;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float basePartMass = 0.25f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string tankMass = \u00220;0;0;0;0\u0022;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string tankCost = \u00220; 0; 0; 0; 0\u0022;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool displayCurrentTankCost = false;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool hasGUI = true;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool availableInFlight = false;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool availableInEditor = true;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [KSPField(isPersistant = true)]\u003Cbr\u003E        public Vector4 currentAmounts = Vector4.zero;\u003Cbr\u003E        [KSPField(isPersistant = true)]\u003Cbr\u003E        public int selectedTankSetup = 0;\u003Cbr\u003E        [KSPField(isPersistant = true)]\u003Cbr\u003E        public bool hasLaunched = false;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool showInfo = true; // if false, does not feed info to the part list pop up info menu\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [KSPField(guiActive = false, guiActiveEditor = false, guiName = \u0022Added cost\u0022)]\u003Cbr\u003E        public float addedCost = 0f;\u003Cbr\u003E        [KSPField(guiActive = false, guiActiveEditor = true, guiName = \u0022Dry mass\u0022)]\u003Cbr\u003E        public float dryMassInfo = 0f;\u003Cbr\u003E        private List\u0026lt;FSmodularTank\u0026gt; tankList = new List\u0026lt;FSmodularTank\u0026gt;();\u003Cbr\u003E        private List\u0026lt;float\u0026gt; weightList = new List\u0026lt;float\u0026gt;();\u003Cbr\u003E        private List\u0026lt;float\u0026gt; tankCostList = new List\u0026lt;float\u0026gt;();\u003Cbr\u003E        private bool initialized = false;\u003Cbr\u003E        [KSPField (isPersistant = true)]\u003Cbr\u003E        private bool brandNewPart = true;        \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        UIPartActionWindow tweakableUI;        \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public override void OnStart(PartModule.StartState state)\u003Cbr\u003E        {            \u003Cbr\u003E            initializeData();\u003Cbr\u003E            assignResourcesToPart(false);\u003Cbr\u003E            brandNewPart = false;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void initializeData()\u003Cbr\u003E        {\u003Cbr\u003E            if (!initialized)\u003Cbr\u003E            {\u003Cbr\u003E                setupTankList(false);\u003Cbr\u003E                weightList = Tools.parseFloats(tankMass);\u003Cbr\u003E                tankCostList = Tools.parseFloats(tankCost);\u003Cbr\u003E                if (HighLogic.LoadedSceneIsFlight) hasLaunched = true;\u003Cbr\u003E                if (hasGUI)\u003Cbr\u003E                {\u003Cbr\u003E                    Events[\u0022nextTankSetupEvent\u0022].guiActive = availableInFlight;\u003Cbr\u003E                    Events[\u0022nextTankSetupEvent\u0022].guiActiveEditor = availableInEditor;\u003Cbr\u003E                }\u003Cbr\u003E                else\u003Cbr\u003E                {\u003Cbr\u003E                    Events[\u0022nextTankSetupEvent\u0022].guiActive = false;\u003Cbr\u003E                    Events[\u0022nextTankSetupEvent\u0022].guiActiveEditor = false;\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                if (HighLogic.CurrentGame.Mode == Game.Modes.CAREER)\u003Cbr\u003E                {\u003Cbr\u003E                    Fields[\u0022addedCost\u0022].guiActiveEditor = displayCurrentTankCost;\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                initialized = true;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [KSPEvent(guiActive = true, guiActiveEditor = true, guiName = \u0022Next tank setup\u0022)]\u003Cbr\u003E        public void nextTankSetupEvent()\u003Cbr\u003E        {\u003Cbr\u003E            selectedTankSetup\u002B\u002B;\u003Cbr\u003E            if (selectedTankSetup \u0026gt;= tankList.Count)\u003Cbr\u003E            {\u003Cbr\u003E                selectedTankSetup = 0;\u003Cbr\u003E            }\u003Cbr\u003E            if (HighLogic.LoadedSceneIsFlight)\u003Cbr\u003E            {\u003Cbr\u003E                currentAmounts = Vector4.zero;\u003Cbr\u003E            }\u003Cbr\u003E            assignResourcesToPart(true);            \u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void selectTankSetup(int i, bool calledByPlayer)\u003Cbr\u003E        {            \u003Cbr\u003E            initializeData();\u003Cbr\u003E            selectedTankSetup = i;\u003Cbr\u003E            assignResourcesToPart(calledByPlayer);            \u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void assignResourcesToPart(bool calledByPlayer)\u003Cbr\u003E        {            \u003Cbr\u003E            // destroying a resource messes up the gui in editor, but not in flight.\u003Cbr\u003E            setupTankInPart(part, calledByPlayer);\u003Cbr\u003E            if (HighLogic.LoadedSceneIsEditor)\u003Cbr\u003E            {\u003Cbr\u003E                for (int s = 0; s \u0026lt; part.symmetryCounterparts.Count; s\u002B\u002B)\u003Cbr\u003E                {\u003Cbr\u003E                    setupTankInPart(part.symmetryCounterparts[s], calledByPlayer);\u003Cbr\u003E                    FSfuelSwitch symSwitch = part.symmetryCounterparts[s].GetComponent\u0026lt;FSfuelSwitch\u0026gt;();\u003Cbr\u003E                    if (symSwitch != null)\u003Cbr\u003E                    {\u003Cbr\u003E                        symSwitch.selectedTankSetup = selectedTankSetup;\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            //Debug.Log(\u0022refreshing UI\u0022);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            if (tweakableUI == null)\u003Cbr\u003E            {\u003Cbr\u003E                tweakableUI = Tools.FindActionWindow(part);\u003Cbr\u003E            }\u003Cbr\u003E            if (tweakableUI != null)\u003Cbr\u003E            {\u003Cbr\u003E                tweakableUI.displayDirty = true;\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022no UI to refresh\u0022);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void setupTankInPart(Part currentPart, bool calledByPlayer)\u003Cbr\u003E        {\u003Cbr\u003E            currentPart.Resources.list.Clear();\u003Cbr\u003E            PartResource[] partResources = currentPart.GetComponents\u0026lt;PartResource\u0026gt;();\u003Cbr\u003E            for (int i = 0; i \u0026lt; partResources.Length; i\u002B\u002B)\u003Cbr\u003E            {\u003Cbr\u003E                DestroyImmediate(partResources[i]);\u003Cbr\u003E            }            \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            for (int tankCount = 0; tankCount \u0026lt; tankList.Count; tankCount\u002B\u002B)\u003Cbr\u003E            {\u003Cbr\u003E                if (selectedTankSetup == tankCount)\u003Cbr\u003E                {\u003Cbr\u003E                    for (int resourceCount = 0; resourceCount \u0026lt; tankList[tankCount].resources.Count; resourceCount\u002B\u002B)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (tankList[tankCount].resources[resourceCount].name != \u0022Structural\u0022)\u003Cbr\u003E                        {\u003Cbr\u003E                            //Debug.Log(\u0022new node: \u0022 \u002B tankList[i].resources[j].name);\u003Cbr\u003E                            ConfigNode newResourceNode = new ConfigNode(\u0022RESOURCE\u0022);\u003Cbr\u003E                            newResourceNode.AddValue(\u0022name\u0022, tankList[tankCount].resources[resourceCount].name);\u003Cbr\u003E                            if (calledByPlayer || brandNewPart)\u003Cbr\u003E                            {\u003Cbr\u003E                                newResourceNode.AddValue(\u0022amount\u0022, tankList[tankCount].resources[resourceCount].maxAmount);\u003Cbr\u003E                                setResource(resourceCount, tankList[tankCount].resources[resourceCount].amount);\u003Cbr\u003E                            }\u003Cbr\u003E                            else\u003Cbr\u003E                            {\u003Cbr\u003E                                newResourceNode.AddValue(\u0022amount\u0022, getResource(resourceCount));\u003Cbr\u003E                            }\u003Cbr\u003E                            newResourceNode.AddValue(\u0022maxAmount\u0022, tankList[tankCount].resources[resourceCount].maxAmount);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                            //Debug.Log(\u0022add node to part\u0022);\u003Cbr\u003E                            currentPart.AddResource(newResourceNode);                          \u003Cbr\u003E                        }\u003Cbr\u003E                        else\u003Cbr\u003E                        {\u003Cbr\u003E                            //Debug.Log(\u0022Skipping structural fuel type\u0022);\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            currentPart.Resources.UpdateList();\u003Cbr\u003E            updateWeight(currentPart, selectedTankSetup);\u003Cbr\u003E            updateCost();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private float updateCost()\u003Cbr\u003E        {\u003Cbr\u003E            if (selectedTankSetup \u0026lt; tankCostList.Count)\u003Cbr\u003E            {\u003Cbr\u003E                addedCost = tankCostList[selectedTankSetup];\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                addedCost = 0f;\u003Cbr\u003E            }\u003Cbr\u003E            //GameEvents.onEditorShipModified.Fire(EditorLogic.fetch.ship); //crashes game\u003Cbr\u003E            return addedCost;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void updateWeight(Part currentPart, int newTankSetup)\u003Cbr\u003E        {\u003Cbr\u003E            if (newTankSetup \u0026lt; weightList.Count)\u003Cbr\u003E            {\u003Cbr\u003E                currentPart.mass = basePartMass \u002B weightList[newTankSetup];\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public override void OnUpdate()\u003Cbr\u003E        {\u003Cbr\u003E            updateResourcePersistence();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void updateResourcePersistence()\u003Cbr\u003E        {\u003Cbr\u003E            if (selectedTankSetup \u0026lt; tankList.Count)\u003Cbr\u003E            {\u003Cbr\u003E                if (tankList[selectedTankSetup] != null)\u003Cbr\u003E                {\u003Cbr\u003E                    for (int i = 0; i \u0026lt; tankList[selectedTankSetup].resources.Count; i\u002B\u002B)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (tankList[selectedTankSetup].resources[i].name == \u0022Structural\u0022)\u003Cbr\u003E                        {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                        }\u003Cbr\u003E                        else\u003Cbr\u003E                        {\u003Cbr\u003E                            setResource(i, (float)part.Resources[tankList[selectedTankSetup].resources[i].name].amount);\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void Update()\u003Cbr\u003E        {\u003Cbr\u003E            if (HighLogic.LoadedSceneIsEditor)\u003Cbr\u003E            {\u003Cbr\u003E                dryMassInfo = part.mass;\u003Cbr\u003E                updateResourcePersistence();\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private float getResource(int number)\u003Cbr\u003E        {\u003Cbr\u003E            switch (number)\u003Cbr\u003E            {\u003Cbr\u003E                case 0:\u003Cbr\u003E                    return currentAmounts.x;\u003Cbr\u003E                case 1:\u003Cbr\u003E                    return currentAmounts.y;\u003Cbr\u003E                case 2:\u003Cbr\u003E                    return currentAmounts.z;\u003Cbr\u003E                case 3:\u003Cbr\u003E                    return currentAmounts.w;\u003Cbr\u003E                case 4:\u003Cbr\u003E                    return currentAmounts.v;\u003Cbr\u003E                default:\u003Cbr\u003E                    return 0f;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void setResource(int number, float amount)\u003Cbr\u003E        {\u003Cbr\u003E            switch (number)\u003Cbr\u003E            {\u003Cbr\u003E                case 0:\u003Cbr\u003E                    currentAmounts.x = amount;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 1:\u003Cbr\u003E                    currentAmounts.y = amount;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 2:\u003Cbr\u003E                    currentAmounts.z = amount;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 3:\u003Cbr\u003E                    currentAmounts.w = amount;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 4:\u003Cbr\u003E                    currentAmounts.v = amount;\u003Cbr\u003E                    break;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void setupTankList(bool calledByPlayer)\u003Cbr\u003E        {\u003Cbr\u003E            tankList.Clear();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            // First find the amounts each tank type is filled with\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            List\u0026lt;List\u0026lt;float\u0026gt;\u0026gt; resourceList = new List\u0026lt;List\u0026lt;float\u0026gt;\u0026gt;();\u003Cbr\u003E            string[] resourceTankArray = resourceAmounts.Split(\u0027;\u0027);\u003Cbr\u003E            for (int tankCount = 0; tankCount \u0026lt; resourceTankArray.Length; tankCount\u002B\u002B)\u003Cbr\u003E            {\u003Cbr\u003E                resourceList.Add(new List\u0026lt;float\u0026gt;());\u003Cbr\u003E                string[] resourceAmountArray = resourceTankArray[tankCount].Split(\u0027,\u0027);\u003Cbr\u003E                for (int amountCount = 0; amountCount \u0026lt; resourceAmountArray.Length; amountCount\u002B\u002B)\u003Cbr\u003E                {\u003Cbr\u003E                    try\u003Cbr\u003E                    {\u003Cbr\u003E                        resourceList[tankCount].Add(float.Parse(resourceAmountArray[amountCount]));\u003Cbr\u003E                    }\u003Cbr\u003E                    catch\u003Cbr\u003E                    {\u003Cbr\u003E                        Debug.Log(\u0022FSfuelSwitch: error parsing resource amount \u0022 \u002B tankCount \u002B \u0022/\u0022 \u002BamountCount \u002B \u0022: \u0022 \u002B resourceTankArray[amountCount]);\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            // Then find the kinds of resources each tank holds, and fill them with the amounts found previously, or the amount hey held last (values kept in save persistence/craft)\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            string[] tankArray = resourceNames.Split(\u0027;\u0027);\u003Cbr\u003E            for (int tankCount = 0; tankCount \u0026lt; tankArray.Length; tankCount\u002B\u002B)\u003Cbr\u003E            {\u003Cbr\u003E                FSmodularTank newTank = new FSmodularTank();\u003Cbr\u003E                tankList.Add(newTank);\u003Cbr\u003E                string[] resourceNameArray = tankArray[tankCount].Split(\u0027,\u0027);\u003Cbr\u003E                for (int nameCount = 0; nameCount \u0026lt; resourceNameArray.Length; nameCount\u002B\u002B)\u003Cbr\u003E                {\u003Cbr\u003E                    engine.FSresource newResource = new engine.FSresource(resourceNameArray[nameCount].Trim(\u0027 \u0027));\u003Cbr\u003E                    if (resourceList[tankCount] != null)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (nameCount \u0026lt; resourceList[tankCount].Count)\u003Cbr\u003E                        {\u003Cbr\u003E                            newResource.maxAmount = resourceList[tankCount][nameCount];\u003Cbr\u003E                            if (calledByPlayer)\u003Cbr\u003E                            {\u003Cbr\u003E                                newResource.amount = resourceList[tankCount][nameCount];\u003Cbr\u003E                            }\u003Cbr\u003E                            else\u003Cbr\u003E                            {                                \u003Cbr\u003E                                newResource.amount = getResource(nameCount);\u003Cbr\u003E                            }\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                    newTank.resources.Add(newResource);\u003Cbr\u003E                }\u003Cbr\u003E            }            \u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public float GetModuleCost()\u003Cbr\u003E        {\u003Cbr\u003E            return updateCost();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public override string GetInfo()\u003Cbr\u003E        {\u003Cbr\u003E            if (showInfo)\u003Cbr\u003E            {\u003Cbr\u003E                List\u0026lt;string\u0026gt; resourceList = Tools.parseNames(resourceNames);\u003Cbr\u003E                StringBuilder info = new StringBuilder();\u003Cbr\u003E                info.AppendLine(\u0022Fuel tank setups available:\u0022);\u003Cbr\u003E                for (int i = 0; i \u0026lt; resourceList.Count; i\u002B\u002B)\u003Cbr\u003E                {\u003Cbr\u003E                    info.AppendLine(resourceList[i].Replace(\u0022,\u0022, \u0022, \u0022));\u003Cbr\u003E                }\u003Cbr\u003E                return info.ToString();\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E                return string.Empty;\u003Cbr\u003E        }\u003Cbr\u003E    }    \u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENot sure what\u0027s up the the \u0022Case 4\u0022 parts having bad formatting...looks just fine in Notepad\u002B\u002B and inside the code brackets before posting...and then they look just fine on the 2nd preview...weird...\u003C/p\u003E\n"},{"CreatedByName":"Snjo","CreatedById":57198,"CreatedDateTime":"2014-09-15T18:40:53Z","Content":"\n\u003Cp\u003ENone of the resources are defined in the dll, what you are seeing are just sample values that get used if nothing else is put in the cfg. There is no reason ElectricCharge would work any better than Kethane or Karbonite, IF they are defined in the resource cfgs.\u003C/p\u003E\n"},{"CreatedByName":"skeevy","CreatedById":110477,"CreatedDateTime":"2014-09-15T19:34:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Snjo\u0022 data-cite=\u0022Snjo\u0022\u003E\u003Cdiv\u003ENone of the resources are defined in the dll, what you are seeing are just sample values that get used if nothing else is put in the cfg. There is no reason ElectricCharge would work any better than Kethane or Karbonite, IF they are defined in the resource cfgs.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmm. Now I feel like I over thought it. I\u0027ve found the files and see exactly what you mean. Thanks. \u003C/p\u003E\u003Cp\u003EI can easily add Karbonite to regular parts, but any part with FSFuelSwitcher crashes upon loading when Karbonite either replaces a different fuel or is added as a new option; hence my above suggestion. Perhaps I need to read a bit more on setting up Module Manager configs. The only reason I thought what I mentioned above was necessary is because I took a stock B9 part, changed relevant LiquidFuel parts to Karbonite (everything sans texture..used LiquidFuel\u0027s because the best I can do with image editing is a meme pic \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_kiss.gif\u0022 alt=\u0022:kiss:\u0022\u003E), and it crashed upon loading B9 (no Mod Manager; part cfg edit). Reverted that, tried with MM, same results when loading the MM config...I know it\u0027ll probably be something stupid that I overlooked since, technically, it should work.\u003C/p\u003E\u003Cp\u003EI don\u0027t wanna post what all I\u0027ve done yet...not that I don\u0027t want the help, but one really doesn\u0027t learn all that much if someone else points out what needs to be done...plus I want to figure it out on my own for a sense of accomplishment. Thanks again.\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-15T19:44:44Z","Content":"\n\u003Cp\u003Eis there a fix for KSPI \u002B engines using FSpropellerSpinner = engines launch in the activated state? it\u0027s happening with B9; Karbonite; and my RF engines.\u003C/p\u003E\n"},{"CreatedByName":"Snjo","CreatedById":57198,"CreatedDateTime":"2014-09-15T20:48:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skeevy\u0022 data-cite=\u0022skeevy\u0022\u003E\u003Cdiv\u003EHmm. Now I feel like I over thought it. I\u0027ve found the files and see exactly what you mean. Thanks. \u003Cp\u003EI can easily add Karbonite to regular parts, but any part with FSFuelSwitcher crashes upon loading when Karbonite either replaces a different fuel or is added as a new option; hence my above suggestion. Perhaps I need to read a bit more on setting up Module Manager configs. The only reason I thought what I mentioned above was necessary is because I took a stock B9 part, changed relevant LiquidFuel parts to Karbonite (everything sans texture..used LiquidFuel\u0027s because the best I can do with image editing is a meme pic \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_kiss.gif\u0022 alt=\u0022:kiss:\u0022\u003E), and it crashed upon loading B9 (no Mod Manager; part cfg edit). Reverted that, tried with MM, same results when loading the MM config...I know it\u0027ll probably be something stupid that I overlooked since, technically, it should work.\u003C/p\u003E\u003Cp\u003EI don\u0027t wanna post what all I\u0027ve done yet...not that I don\u0027t want the help, but one really doesn\u0027t learn all that much if someone else points out what needs to be done...plus I want to figure it out on my own for a sense of accomplishment. Thanks again.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESomeone said something about resources with GUI tweakability turned off in their cfgs bugging out a while back, that might cause some issued if your resource acts up.\u003C/p\u003E\n"},{"CreatedByName":"Snjo","CreatedById":57198,"CreatedDateTime":"2014-09-15T20:49:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Eis there a fix for KSPI \u002B engines using FSpropellerSpinner = engines launch in the activated state? it\u0027s happening with B9; Karbonite; and my RF engines.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDoesn\u0027t it happen for all engines now?\u003C/p\u003E\u003Cp\u003EYou mean the fact that is starts at 50% throttle, right? Or are they staged from the get go, where they weren\u0027t before?\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-15T21:22:02Z","Content":"\n\u003Cp\u003Enon-FSpropellerSpinner engines start with throttle at 50%, but not running at launch. engines with FSpropellerSpinner (can\u0027t say for FSengine module, I believe B9 engines use ModuleEngineFX) , like B9 turbofans, Karbonite turbofans, and my propeller engines, start with throttle at 50%, and running at launch; so the vessel is under propulsion as soon as it is loaded on the launchpad or runway.. Though not considered staged by KSP, if you press space bar, the staging sound will play.\u003C/p\u003E\u003Cp\u003EThis only happens when KSPI is installed along with Firespitter. presumably KSPI Experimental, since KSPI isn\u0027t compatible with 24.x\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-15T21:28:03Z\u0022 title=\u002209/15/2014 09:28  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 15, 2014\u003C/time\u003E by nli2work\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"skeevy","CreatedById":110477,"CreatedDateTime":"2014-09-15T22:20:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Snjo\u0022 data-cite=\u0022Snjo\u0022\u003E\u003Cdiv\u003ESomeone said something about resources with GUI tweakability turned off in their cfgs bugging out a while back, that might cause some issued if your resource acts up.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI overlooked the simplest thing...64bit vs 32bit. I\u0027ve been launching with a shortcut on my desktop that points to my modded KSP folder\u0027s 64bit executable...changed to 32bit and all the B9 S2 parts had user selectable Karbonite and the intake parts have both intake atmosphere (a Karbonite resource) and air intake (stock resource) at the same time...really shouldn\u0027t matter, but I\u0027m gonna make that user selectable and post something in the B9 and Karbonite threads. Got busy with work, didn\u0027t play for a month, updated stuff, saw an issue I had with mods needing stuff from other mods, learned a bit of MM, tested, didn\u0027t work, went all out...didn\u0027t check the executable I was using...sigh and embarrassment and yet glad it works...\u003C/p\u003E\u003Cp\u003EThanks for all the help.\u003C/p\u003E\n"},{"CreatedByName":"skeevy","CreatedById":110477,"CreatedDateTime":"2014-09-16T14:07:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Enon-FSpropellerSpinner engines start with throttle at 50%, but not running at launch. engines with FSpropellerSpinner (can\u0027t say for FSengine module, I believe B9 engines use ModuleEngineFX) , like B9 turbofans, Karbonite turbofans, and my propeller engines, start with throttle at 50%, and running at launch; so the vessel is under propulsion as soon as it is loaded on the launchpad or runway.. Though not considered staged by KSP, if you press space bar, the staging sound will play.\u003Cp\u003EThis only happens when KSPI is installed along with Firespitter. presumably KSPI Experimental, since KSPI isn\u0027t compatible with 24.x\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m having the same issue with Karbonite and B9 engines like that...using KSPI E too. Though I haven\u0027t updated any of the plugins I use, except Mod Manager, since the 5th. Sometimes you just want to enjoy playing the game and don\u0027t want to break your save game updating mods every other day. Gonna update them all after work today, start fresh, and I\u0027ll chime back in if that helps any. (also was hoping .25 would be released).\u003C/p\u003E\u003Cp\u003ENot really a deal breaker, but it sucks because my \u0022cheat\u0022 engine was based on the Karbonite turbofan jet engine. What? I wanted an engine that looked Star Treky and can run for a long time on a single barrel. 3500 thrust and 42000 isp only gives a few minutes of time with a plethora of S2 modified Karbonite parts and 2 engines anyways...gonna up the isp to 420000 and modify the rapier into a Karbonite \u0022cheat\u0022 engine as work-around...The way I figure it, if all the tech is unlocked, logically thinking, IRL that would take some time, during that time fuel efficiency should improve, so by the time there\u0027s able to be a Captain Jeb T. Kerb using antimatter warp drives, there should be an engine with cheat level specs when compared to what Jeb Armstrong was using. \u003C/p\u003E\u003Cp\u003EActually, that makes me think a good mod would be to enhance everything in the tech tree as newer and better parts are unlocked. Multi generation engines, increased tire grip, decreased weight as newer build materials are discovered (land on minmus, take soil sample, discover new element or compound, wings/body are now a bit lighter), etc. Has anyone made a mod like that? For example, 1st gen engine would be stock, 2nd gen could add alternate fuels, 3rd gen could increase isp or thrust, 4th gen increases vectoring range, etc. It could make science feel like less of a grind when, for example, you take an air sample of Eeloo and discover Tri-Karbonite and Di-Oxidizer which leads to better efficiency engines.\u003C/p\u003E\n"},{"CreatedByName":"ryanedward","CreatedById":103837,"CreatedDateTime":"2014-09-16T21:16:05Z","Content":"\n\u003Cp\u003EThat is a beautiful idea, wish someone would run with it.\u003C/p\u003E\n"},{"CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2014-09-17T02:01:11Z","Content":"\n\u003Cp\u003EFound a minor display bug with FSfuelSwitcher, when switching back to empty (\u0022Structural\u0022) fuselage, the VAB/SPH craft total cost (in bottom left) fails to update immediately.\u003C/p\u003E\u003Cp\u003EI didn\u0027t see anything like it on the github issue tracker, apologies if known issue and I missed it or something.\u003C/p\u003E\u003Cp\u003ETo reproduce:\u003C/p\u003E\u003Cp\u003E- In sandbox mode, start a new craft in SPH/VAB.\u003C/p\u003E\u003Cp\u003E- place one Oblong Multi Tank as the first part. Editor total cost should reflect 250\u003C/p\u003E\u003Cp\u003E- either switch to next tank (fuel) or previous tank (battery) -- Editor total cost will change accordingly (280 or 370) instantly.\u003C/p\u003E\u003Cp\u003E- switch back to the empty structural tank. Editor total cost fails to update. However, we can tell that the part cost actually changed, because:\u003C/p\u003E\u003Cp\u003E -- if you have the newest KER 1.0.9, the KER mouseover info reflects the new cost instantly\u003C/p\u003E\u003Cp\u003E -- if you slap another Oblong Multi Tank onto the first one, the Editor total cost will correctly change to 2*250 = 500\u003C/p\u003E\u003Cp\u003EThis is not due to decreasing vs increasing cost, as switching from battery-\u0026gt;rocket-\u0026gt;fuel will be reflected correctly immediately 370-\u0026gt;330-\u0026gt;280\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-09-17T02:07:33Z","Content":"\n\u003Cp\u003EStock KSP issue, I believe.\u003C/p\u003E\n"},{"CreatedByName":"somewhatcasual","CreatedById":102043,"CreatedDateTime":"2014-09-19T19:03:56Z","Content":"\n\u003Cp\u003EFound a work around\u003C/p\u003E\u003Cp\u003EIf I cycle through the vtol angles in the vab/sph, then detach \u0026amp; rotate the part to the right orientation again, and re-attach, the part works as intended at launch. weird stuff.\u003C/p\u003E\u003Cp\u003Eideas?\u003C/p\u003E\u003Cp\u003EOriginal\u003C/p\u003E\u003Cp\u003EHi all,\u003C/p\u003E\u003Cp\u003ERegarding the FSVTOLrotator module, and a custom part.\u003C/p\u003E\u003Cp\u003EI am having difficulty setting up the part axis and having it rotate \u0026amp; display properly in game vs sph/vab. Is there a way to change the axis of rotation for this module? Or is there a better way of setting the part up in unity that I am missing?\u003C/p\u003E\u003Cp\u003EWhen in the vab/sph, the part appears to be placed correctly. Once I launch, the part rotates 90 degrees out of place. \u003C/p\u003E\u003Cp\u003EI appreciate any and all help on this, Thanks!\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/s/6cql3fjzp3bp906/FSvtol.png?dl=0\u0022 rel=\u0022external nofollow\u0022\u003EFSvtol\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Emods in use:\u003C/p\u003E\u003Cp\u003Efirespitter, toolbar, ThrottleControlledAvionics, MM, DavonTCsystemsMod, BDAnimationModule and the following by diazo: extended action grps, RCSLandAid, TWR1\u003C/p\u003E\u003Cp\u003EMy part cfg so far \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART\u003Cbr\u003E{\u003Cbr\u003E// --- general parameters ---\u003Cbr\u003Ename = ep_1\u003Cbr\u003Emodule = Part\u003Cbr\u003Eauthor = TTDesProd\u003Cbr\u003E\u003Cbr\u003E// --- asset parameters ---\u003Cbr\u003Emesh = ep_1.mu\u003Cbr\u003ErescaleFactor = 1\u003Cbr\u003E\u003Cbr\u003E// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003Cbr\u003EattachRules = 1,1,1,1,0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- editor parameters ---\u003Cbr\u003ETechRequired = start\u003Cbr\u003EentryCost = 0\u003Cbr\u003Ecost = 3600\u003Cbr\u003Ecategory = Pods\u003Cbr\u003Esubcategory = 0\u003Cbr\u003Etitle = Engine Pod\u003Cbr\u003Emanufacturer = TTDesProd\u003Cbr\u003Edescription = Getting places slowly\u003Cbr\u003E\u003Cbr\u003E// --- standard part parameters ---\u003Cbr\u003Emass = 15.321\u003Cbr\u003EdragModelType = default\u003Cbr\u003Emaximum_drag = 0.2\u003Cbr\u003Eminimum_drag = 0.15\u003Cbr\u003EangularDrag = 2\u003Cbr\u003EcrashTolerance = 100\u003Cbr\u003EbreakingForce = 5000\u003Cbr\u003EbreakingTorque = 5000\u003Cbr\u003EmaxTemp = 3400\u003Cbr\u003E\u003Cbr\u003E// --- node definitions ---\u003Cbr\u003E//\t\t\t\t\t\tx\t\t\ty\t \tz\t \tx\t  y\t  z\u003Cbr\u003Enode_stack_attach = 0.0246, 1.267498, -0.102023, 0.0, 0.0, -1.0, 1\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE \u003Cbr\u003E{\u003Cbr\u003Ename = FSanimateGeneric\u003Cbr\u003EanimationName = gear_deploy\u003Cbr\u003EstartEventGUIName = Open Gear Bay Doors\u003Cbr\u003EendEventGUIName = Close Gear Bay Doors\u003Cbr\u003EstartDeployed = True\u003Cbr\u003EstartDeployedString = Start Deployed?\u003Cbr\u003EavailableInEVA = True\u003Cbr\u003EavailableInVessel = True\u003Cbr\u003EEVArange = 5\u003Cbr\u003Elayer = 1\u003Cbr\u003EuseActionEditorPopup = True\u003Cbr\u003EmoduleID = 0\u003Cbr\u003EplayAnimationOnEditorSpawn = True\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E//Engine\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003Ename = ModuleAnimateHeat\u003Cbr\u003EThermalAnim = heat_2\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E// --- FX definitions ---\u003Cbr\u003E\u003Cbr\u003Efx_exhaustFlame_blue_small = 0.0, 0, 0.0, 0.0, 1.0, 0.0, running\u003Cbr\u003Efx_exhaustLight_blue = 0.0, 0, 0.0, 0.0, 0.0, 1.0, power\u003Cbr\u003Efx_smokeTrail_light = 0.0, 0, 0.0, 0.0, 1.0, 0.0, running\u003Cbr\u003Efx_exhaustSparks_flameout = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, flameout\u003Cbr\u003E\u003Cbr\u003E// --- Sound FX definition ---\u003Cbr\u003E\u003Cbr\u003Esound_vent_medium = engage\u003Cbr\u003Esound_rocket_hard = running\u003Cbr\u003Esound_vent_soft = disengage\u003Cbr\u003Esound_explosion_low = flameout\u003Cbr\u003E\u003Cbr\u003E//engine stuff\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleEngines\u003Cbr\u003E\tthrustVectorTransformName = thrust\u003Cbr\u003E\texhaustDamage = True\u003Cbr\u003E\tignitionThreshold = 0.1\u003Cbr\u003E\tminThrust = 0\u003Cbr\u003E\tmaxThrust = 1000\u003Cbr\u003E\theatProduction = 800\u003Cbr\u003E\tfxOffset = 0, 0, 0.0\u003Cbr\u003E\tPROPELLANT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LiquidFuel\u003Cbr\u003E        \tratio = 0.9\u003Cbr\u003E\t\tDrawGauge = True\u003Cbr\u003E\t}\u003Cbr\u003E\tPROPELLANT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Oxidizer\u003Cbr\u003E\t\tratio = 1.1\u003Cbr\u003E\t}\u003Cbr\u003E\tatmosphereCurve\u003Cbr\u003E \t{\u003Cbr\u003E   \t key = 0 390\u003Cbr\u003E  \t key = 1 270\u003Cbr\u003E \t}\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleGimbal\u003Cbr\u003E\tgimbalTransformName = thrust\u003Cbr\u003E\tgimbalRange = 2.5\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E//prop spinning\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003Ename = FSplanePropellerSpinner\u003Cbr\u003E// the gameObject to Spin around its forwards axis. Can be a parent to other sub objects.\u003Cbr\u003EpropellerName = intake_1\u003Cbr\u003E// the propeller rotation speed in RPMs when the engine is ignited, independent of throttle. Positive or negative values can be used. Use 0 for a wholly throttle controlled rotation.\u003Cbr\u003ErotationSpeed = 20\u003Cbr\u003E// the propeller rotation speed in RPMS that are added to the rotationSpeed according to the final thrust of the engine. i.e., higher throttle makes spinny thing go fast.\u003Cbr\u003EthrustRPM = 70\u003Cbr\u003E// Normalized value to spin the propeller if the engine is shut down/flamed out, but moving fast. If the craft is moving beyond windMillAirSpeed, the engine will spin at the speed you\u003Cbr\u003E//would expect in a running engine * windMillRPM. This means a purely thrustRPMcontrolled\u003Cbr\u003E//engine will not windmill.\u003Cbr\u003EwindmillRPM = 0.1\u003Cbr\u003E// If the craft is moving beyond this speed, and atmospheric density is above 0.1, the windmilling will start. It currently does not scale with speed above the minimum threshold.\u003Cbr\u003EwindmillMinAirspeed = 20.0\u003Cbr\u003E// divide engineResponseSpeed by this amount for dramatic effect. Slows the spin up time of the propeller\u003Cbr\u003EspinUpTime = 1\u003Cbr\u003E// //The rotor disc swap, when enabled, will swap out the blades for a slowly spinning blurrydisc graphic when the engine is spinning at top speed.\u003Cbr\u003E// whether the blade/disc swap at high RPMs is used\u003Cbr\u003EuseRotorDiscSwap = 0\u003Cbr\u003E}\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003Ename = FSplanePropellerSpinner\u003Cbr\u003E// the gameObject to Spin around its forwards axis. Can be a parent to other sub objects.\u003Cbr\u003EpropellerName = intake_2\u003Cbr\u003E// the propeller rotation speed in RPMs when the engine is ignited, independent of throttle. Positive or negative values can be used. Use 0 for a wholly throttle controlled rotation.\u003Cbr\u003ErotationSpeed = 20\u003Cbr\u003E// the propeller rotation speed in RPMS that are added to the rotationSpeed according to the final thrust of the engine. i.e., higher throttle makes spinny thing go fast.\u003Cbr\u003EthrustRPM = 70\u003Cbr\u003E// Normalized value to spin the propeller if the engine is shut down/flamed out, but moving fast. If the craft is moving beyond windMillAirSpeed, the engine will spin at the speed you\u003Cbr\u003E//would expect in a running engine * windMillRPM. This means a purely thrustRPMcontrolled\u003Cbr\u003E//engine will not windmill.\u003Cbr\u003EwindmillRPM = 0.1\u003Cbr\u003E// If the craft is moving beyond this speed, and atmospheric density is above 0.1, the windmilling will start. It currently does not scale with speed above the minimum threshold.\u003Cbr\u003EwindmillMinAirspeed = 20.0\u003Cbr\u003E// divide engineResponseSpeed by this amount for dramatic effect. Slows the spin up time of the propeller\u003Cbr\u003EspinUpTime = 1\u003Cbr\u003E// //The rotor disc swap, when enabled, will swap out the blades for a slowly spinning blurrydisc graphic when the engine is spinning at top speed.\u003Cbr\u003E// whether the blade/disc swap at high RPMs is used\u003Cbr\u003EuseRotorDiscSwap = 0\u003Cbr\u003E}\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = FSVTOLrotator\u003Cbr\u003E\tdeployedAngle = 90 //the starting max value\u003Cbr\u003E\tmaxDownAngle = -90 // Allowed rotation below the default parked state\u003Cbr\u003E\tstepAngle = 10 // How much each action group button press will rotate the engine\u003Cbr\u003E\ttargetPartObject = rotate\u003Cbr\u003E\tavailableAngles1 =\t90, 130, 45 //max three values, use 0 to skip the value and shorten the list. The first value is the default, so smaller than default values should be the final numbers.\u003Cbr\u003E\tavailableAngles2 =\t0, 0, 0 // more angles, for a max of 6\u003Cbr\u003E\tinvertYaw = True\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = FSengineMenuCleaner\u003Cbr\u003E}\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = FSpropellerAtmosphericNerf\u003Cbr\u003E        disableAtmosphericNerf = true\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-19T23:03:07Z\u0022 title=\u002209/19/2014 11:03  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 19, 2014\u003C/time\u003E by somewhatcasual\u003C/strong\u003E\n\u003Cbr\u003EProblem with image displaying\n\u003C/span\u003E\n"},{"CreatedByName":"Horman","CreatedById":81208,"CreatedDateTime":"2014-09-20T15:03:06Z","Content":"\n\u003Cp\u003EHi folks,\u003C/p\u003E\u003Cp\u003EI just have downloaded the actual firespitter version to my ksp.\u003C/p\u003E\u003Cp\u003EDuring launching KSP tells me now, that the mod firespitter is incompatible with 0.24.2...\u003C/p\u003E\u003Cp\u003EIs this a known issue, I might have overread?\u003C/p\u003E\u003Cp\u003EGreeting, Horman\u003C/p\u003E\n"},{"CreatedByName":"mjy","CreatedById":69956,"CreatedDateTime":"2014-09-20T23:13:00Z","Content":"\n\u003Cp\u003Eis there anything I can use from your mod to get my APC to go into the water, would like to use your electric prop in the back of it, but my custom mesh always tip over, maybe its in the cfg?\u003C/p\u003E\n"},{"CreatedByName":"Bit Fiddler","CreatedById":103108,"CreatedDateTime":"2014-09-26T06:05:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Snjo\u0022 data-cite=\u0022Snjo\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIt should be as simple as copying the surface attach node and replacing the name of it with \u003Cstrong\u003Enode_stack_bottom = \u003C/strong\u003E (or node_stack_top = ) since the coordinates should be the same. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI just tried this fix you mentioned a while back... but the problem is there is no node_attach, and the node_stack looks like this...\u003C/p\u003E\u003Cp\u003EPART\u003C/p\u003E\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003Ename = FScopterRotorMainElectric\u003C/p\u003E\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003Enode_stack_top = 0.0, 0.0, 0.0, 0.0, 0.0, 1.0\u003C/p\u003E\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003EattachRules = 1,1,1,1,1\u003C/p\u003E\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EI guess I could just mess with it a bit until I get a node in the correct spot. But if you happen to have this info handy that would be swell. Also I notice the rotor provides max lift even with the blades retracted. is this a bug, or a limitation of the mod? Amd a second question... it seems to me mechjeb has no idea how to fly a helicopter... is this true? or do I need to fix my setup somehow?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-26T06:10:15Z\u0022 title=\u002209/26/2014 06:10  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 26, 2014\u003C/time\u003E by Bit Fiddler\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Deep silence","CreatedById":55089,"CreatedDateTime":"2014-09-26T08:42:10Z","Content":"\n\u003Cp\u003EI found a bug on the landings gears : the \u0027disable dynamic steering\u0027 option is not saved. \u003C/p\u003E\u003Cp\u003EOn a fresh linux install, with only firespitter : create a plane with a landing gear (tail gear in my case), enable steering and disabled dynamic, save, reload (or launch), and then the steering is enabled but with dynamic still activated.\u003C/p\u003E\u003Cp\u003EAnyway, thanks for this great mod! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}