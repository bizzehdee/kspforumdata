{"TopicId":205936,"ForumId":109,"TopicTitle":"Physics and Part Count Developer Insight Request :)","CreatedByName":"Anth","CreatedById":161238,"CreatedDateTime":"2021-12-11T03:55:15Z","PageNum":1,"Articles":[{"CreatedByName":"Anth","CreatedById":161238,"CreatedDateTime":"2021-12-11T03:55:15Z","Content":"\n\u003Cp\u003E\nHello.\n\u003C/p\u003E\n\u003Cp\u003E\nI saw the last Developer Insight and saw that there is an obvious improvement to the terrain looking more consistent zooming in and out which is excellent. Good work!\n\u003C/p\u003E\n\u003Cp\u003E\nHowever my last 2 years of KSPing have been more about large part count and KSP1 hates large part count. I don\u0027t use any visual mods except for waterfall to maximize performance.\n\u003C/p\u003E\n\u003Cp\u003E\nI was wondering how part count and physics calculations are going to be changed for improved performance in the following areas:\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nHow the CPU will calculate physics per part\n\u003C/li\u003E\n\u003Cli\u003E\nHow the CPU will calculate physics per vessel (per core etc)\n\u003C/li\u003E\n\u003Cli\u003E\nHow the CPU will be affected for vessels within render range vs physics range because 1000\u002B parts within just render range still causes a significant drop in performance on my i9 9900K \u002B Geforce 1080 GTX\n\u003C/li\u003E\n\u003Cli\u003E\nHow KSP2 will counter the game freezing for a moment when entering render range and physics range exclusively\n\u003C/li\u003E\n\u003Cli\u003E\nHow KSP2 will counter the game freezing when a complicated craft with a large part count explodes\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"The Aziz","CreatedById":150811,"CreatedDateTime":"2021-12-11T08:53:42Z","Content":"\n\u003Cp\u003E\nPhysics LOD, devs mentioned it long ago.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso\u00A0\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022210281\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed9220077875\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/203961-developer-insights-10-%E2%80%93-collisions/\u0026amp;do=embed\u0022 style=\u0022height:197px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0People should stop thinking in terms of \u0022ksp1 bad, how ksp2 good\u0022. New game has no legacy code that would slow it down, no \u0022technical debt\u0022, works on an engine which, if properly utilized, is one of the best out there...\n\u003C/p\u003E\n\u003Cp\u003E\nKsp2 doesn\u0027t have to \u0022counter\u0022 freezing if there\u0027s no freezing in the first place because it was coded to not have any freezing.\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2021-12-11T10:13:32Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064101\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639212822\u0022 data-ipsquote-userid=\u0022150811\u0022 data-ipsquote-username=\u0022The Aziz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, The Aziz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPhysics LOD, devs mentioned it long ago.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso\u00A0\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022210281\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed1518063310\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/203961-developer-insights-10-%E2%80%93-collisions/\u0026amp;do=embed\u0022 style=\u0022height:197px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0People should stop thinking in terms of \u0022ksp1 bad, how ksp2 good\u0022. New game has no legacy code that would slow it down, no \u0022technical debt\u0022, works on an engine which, if properly utilized, is one of the best out there...\n\u003C/p\u003E\n\u003Cp\u003E\nKsp2 doesn\u0027t have to \u0022counter\u0022 freezing if there\u0027s no freezing in the first place because it was coded to not have any freezing.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAlso, this time around we\u0027ll have proper big ship and big station parts, no more need to use 2000\u002B 16 seat plane fuselages to build anything bigger than the ISS.\n\u003C/p\u003E\n"},{"CreatedByName":"Anth","CreatedById":161238,"CreatedDateTime":"2021-12-11T13:07:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064101\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639212822\u0022 data-ipsquote-userid=\u0022150811\u0022 data-ipsquote-username=\u0022The Aziz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, The Aziz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKsp2 doesn\u0027t have to \u0022counter\u0022 freezing if there\u0027s no freezing in the first place because it was coded to not have any freezing.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf that\u0027s true, then the developers haven\u0027t explained how it works yet.\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064101\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639212822\u0022 data-ipsquote-userid=\u0022150811\u0022 data-ipsquote-username=\u0022The Aziz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, The Aziz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022210281\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed6997153323\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/203961-developer-insights-10-%E2%80%93-collisions/\u0026amp;do=embed\u0022 style=\u0022height:197px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis above doesn\u0027t talk about how 1000 parts interact in an explosion.\n\u003C/p\u003E\n\u003Cp\u003E\nThe above doesn\u0027t talk about how render range/physics range works in KSP2\n\u003C/p\u003E\n\u003Cp\u003E\nThe above doesn\u0027t talk about how the freezing was happening in KSP1 and how it will be countered in KSP2\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064101\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639212822\u0022 data-ipsquote-userid=\u0022150811\u0022 data-ipsquote-username=\u0022The Aziz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, The Aziz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPhysics LOD, devs mentioned it long ago.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat was Physics LOD again?\n\u003C/p\u003E\n\u003Cp\u003E\nAlso part of the reason these Developer Insights are happening is to show off how its improved over KSP1 no?\n\u003C/p\u003E\n"},{"CreatedByName":"MechBFP","CreatedById":184845,"CreatedDateTime":"2021-12-11T13:56:01Z","Content":"\n\u003Cp\u003E\nKSP1 != KSP2\n\u003C/p\u003E\n"},{"CreatedByName":"Anth","CreatedById":161238,"CreatedDateTime":"2021-12-11T14:10:43Z","Content":"\n\u003Cp\u003E\nFine. How its different to KSP1... \u003Cimg alt=\u0022;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"HebaruSan","CreatedById":156657,"CreatedDateTime":"2021-12-11T15:12:12Z","Content":"\n\u003Cp\u003E\nI agree this would be a good topic. I don\u0027t expect them to cover it though, probably because not much improvement is possible. 1000 parts interacting with each other is on the order of 1,000,000 interactions to calculate every frame, or 16 nanoseconds per interaction at 60 FPS. A modern CPU will take that much time to access the L3 cache a time or two, and you can forget about pulling inputs in from RAM and pushing outputs back out to RAM that fast. That\u0027s not technical debt or bad coding, that\u0027s just the reality of the task presented.\n\u003C/p\u003E\n\u003Cp\u003E\nLarge part count vessels were always allowed by the engine but not the main thing it was made to support. Expect that to continue. The best bet, for devs and players alike, will be to find ways to avoid it, such as the big parts mentioned above.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: Oops, the original version of the above text accidentally assumed \u0022one frame\u0022 and \u0022one second\u0022 were interchangeable, contrary to most players\u0027 expectations that the game should run at more than 1 FPS. Dividing/multiplying by 60 makes the problem much worse, and I\u0027ve attempted to correct the error.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222021-12-11T16:11:38Z\u0022 title=\u002212/11/2021 04:11  PM\u0022 data-short=\u00222 yr\u0022\u003EDecember 11, 2021\u003C/time\u003E by HebaruSan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2021-12-11T21:52:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064134\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639228051\u0022 data-ipsquote-userid=\u0022161238\u0022 data-ipsquote-username=\u0022Anth12\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Anth12 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat was Physics LOD again?\n\u003C/p\u003E\n\u003Cp\u003E\nAlso part of the reason these Developer Insights are happening is to show off how its improved over KSP1 no?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064165\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639235532\u0022 data-ipsquote-userid=\u0022156657\u0022 data-ipsquote-username=\u0022HebaruSan\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, HebaruSan said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI agree this would be a good topic. I don\u0027t expect them to cover it though, probably because not much improvement is possible. 1000 parts interacting with each other is on the order of 1,000,000 interactions to calculate every frame, or 16 nanoseconds per interaction at 60 FPS. A modern CPU will take that much time to access the L3 cache a time or two, and you can forget about pulling inputs in from RAM and pushing outputs back out to RAM that fast. That\u0027s not technical debt or bad coding, that\u0027s just the reality of the task presented.\n\u003C/p\u003E\n\u003Cp\u003E\nLarge part count vessels were always allowed by the engine but not the main thing it was made to support. Expect that to continue. The best bet, for devs and players alike, will be to find ways to avoid it, such as the big parts mentioned above.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: Oops, the original version of the above text accidentally assumed \u0022one frame\u0022 and \u0022one second\u0022 were interchangeable, contrary to most players\u0027 expectations that the game should run at more than 1 FPS. Dividing/multiplying by 60 makes the problem much worse, and I\u0027ve attempted to correct the error.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAs I understand it, it\u0027s being speculated that regions of connected parts may be hard welded together and treated all as single parts to reduce the amount of joints as needed to reduce the simulated part count. It may sacrifice some \u0022accuracy\u0022, but is having a kraken attack blow a ship apart for no reason accurate anyway?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nReally curious as to how much of the will be automated and how much will allow user intervention.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222021-12-11T21:56:26Z\u0022 title=\u002212/11/2021 09:56  PM\u0022 data-short=\u00222 yr\u0022\u003EDecember 11, 2021\u003C/time\u003E by mcwaffles2003\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2021-12-12T16:22:10Z","Content":"\n\u003Cp\u003E\n\u0022physics\u0022 is a rather vague term.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you\u0027re talking about rigidbody/joint/collision physics, this is handled by the PhysX engine and there is little they can do to optimize that. Unless they decide to roll out a 100% custom rigidbody physics engine, which would be quite justified as PhysX (or any \u0022standard\u0022 physics library) is quite inadequate for KSP use case. But I doubt this will be happening, this would be a huge investment for not that much immediate gains.\n\u003C/p\u003E\n\u003Cp\u003E\nAs mentioned, the most likely optimization they will do is just to disable RB physics altogether in some cases. RB physics are essentially useless when there are no external forces (collisions, gravity, atmospheric drag...). The most likely case will be bases and stations, and other vessels beside the active one. Or even anything that is in space, since they intend to have \u0022unloaded\u0022 vessels being able to produce thrust, this mean they are planning to handle thrust/attitude control forces without relying on the RB simulation (but how coherent the simulation will be between active and unloaded vessels remain to be seen).\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, contrary to popular belief, the rigibody/joints physics is NOT the main KSP performance issue. The KSP other \u0022physics\u0022 subsystem are the main bottleneck \u003Cspan\u003E: the aerodynamic and thermal simulations. Each of these subsystems consume about as much CPU time as the PhysX RB simulation. Using modern Unity features (jobs/burst), those could be massively optimized without that much effort. There are many other potential optimizations in various specific subsystems like the orbit solver, the resource flow/request system, the engine thrust solver, various partmodules...\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis being said, I don\u0027t expect a paradigm shift in what is possible in term of part count. The current KSP \u0022playable\u0022 threshold is somewhere between 300-400 parts. If they do a decent job at optimizing the various subsystems compared to KSP 1, we could maybe get a 3x improvement on that figure, but don\u0027t expect being able to have thousands of parts without lag.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222021-12-12T16:34:34Z\u0022 title=\u002212/12/2021 04:34  PM\u0022 data-short=\u00222 yr\u0022\u003EDecember 12, 2021\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"HebaruSan","CreatedById":156657,"CreatedDateTime":"2021-12-12T18:32:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064072\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639194915\u0022 data-ipsquote-userid=\u0022161238\u0022 data-ipsquote-username=\u0022Anth12\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 12/11/2021 at 3:55 AM, Anth12 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Col\u003E\u003Cli\u003E\nHow KSP2 will counter the game freezing when a complicated craft with a large part count explodes\n\u003C/li\u003E\n\u003C/ol\u003E\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064134\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639228051\u0022 data-ipsquote-userid=\u0022161238\u0022 data-ipsquote-username=\u0022Anth12\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 12/11/2021 at 1:07 PM, Anth12 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis above doesn\u0027t talk about how 1000 parts interact in an explosion.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis may partly be caused by creating lots of new Vessel objects per frame. Remember that when a craft breaks apart, each cluster of parts that are still attached to each other becomes a new vessel in the tracking station (usually with a vessel type of \u0022debris\u0022). So before the explosion, you have 1 vessel with 1000 parts, and afterwards you have many vessels with a few parts each. During the explosion, the game has to create all of those Vessels, each of which has its own calculated center of mass,\u00A0 resources, heating, Orbit objects, etc. And while parts in the same vessel can be set to not interact, that\u0027s not the case for parts from different vessels.\n\u003C/p\u003E\n\u003Cp\u003E\nSo maybe another optimization to pursue, if KSP 2 uses a similar structure, would be to make the Vessel object (or equivalent) more lightweight in anticipation of needing to create lots of them at once.\n\u003C/p\u003E\n"},{"CreatedByName":"Spaceman.Spiff","CreatedById":209133,"CreatedDateTime":"2021-12-12T18:34:40Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064427\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639326130\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUsing modern Unity features (jobs/burst), those could be massively optimized without that much effort. There are many other potential optimizations in various specific subsystems like the orbit solver, the resource flow/request system, the engine thrust solver, various partmodules...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCould KSPCommunityFixes implement something along these lines to improve performance?\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2021-12-13T06:42:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064427\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639326130\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf you\u0027re talking about rigidbody/joint/collision physics, this is handled by the PhysX engine and there is little they can do to optimize that.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAs mentioned previously, the optimization that can be done is combining multiple parts into a single rigid body. If you don\u0027t care about flex between the parts, combining multiple moment of inertia tensor into one is a rather simple procedure. You also don\u0027t have to sacrifice ability to model joint strength limits, as for a rigid body, constraint matrix never changes, so you only ever have to invert it once. Combined with ability to build a reduced LoD collision model for the complex, a collection of welded parts can be as cheap to simulate in PhysX as a single part precisely because from PhysX perpsective it\u0027s a single part.\u00A0It sounds like something like this is, or at least was, in the works for KSP2.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd yeah, the non-PhysX portions of the simulation will mostly benefit from better ability to spread the work between the cores. Between these two optimizations, it should be possible to have a drastically higher part count and/or create breathing room for other systems.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2021-12-13T12:43:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064465\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639334080\u0022 data-ipsquote-userid=\u0022209133\u0022 data-ipsquote-username=\u0022Spaceman.Spiff\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, Spaceman.Spiff said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCould KSPCommunityFixes implement something along these lines to improve performance?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot really, for the same reason Squad couldn\u0027t do it either : this would imply major breaking changes in core legacy code, breaking ton of other code down the line, including mods. Squad already did what they could in terms of \u0022afterthought\u0022 optimization, there is actually not that much left on the table given KSP technical debt and desire to ensure backward compatibility with the existing modding ecosystem.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064666\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639377764\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou also don\u0027t have to sacrifice ability to model joint strength limits, as for a rigid body, constraint matrix never changes, so you only ever have to invert it once.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t see how you can keep joint strength limits if you merge everything into a single PhysX RB, unless you roll out a custom implementation for that.\u003Cbr\u003E\nAt this point, if you have that custom implementation, you\u0027ve already reproduced most of what PhysX is used for in KSP.\u003Cbr\u003E\u003Cbr\u003E\u003Cspan\u003ESide note \u003Cspan\u003E:\u003C/span\u003E KSP relying on PhysX joints at all is quite questionable, since \u003Cspan\u003E:\u003C/span\u003E\u003Cbr\u003E\n- it \u003C/span\u003Ehas to use a floating origin (which cause a significant overhead on the PhysX side)\u003Cbr\u003E\n- it doesn\u0027t use jointed RBs collisions (no \u0022intra-part\u0022 collision)\u003Cbr\u003E\n- it has to spam hundreds of extra PhysX joints to be vaguely successful at implementing a \u0022lightweight parts should result in as much rigidity as heavy ones\u0022 behavior\u003Cbr\u003E\n- it has to compute a significant proportion of the RB physics results independently\u003Cbr\u003E\n- it has more generally to do tons of dirty hacks to avoid various issues\n\u003C/p\u003E\n\u003Cp\u003E\nOn the other hand, it gives KSP its distinctive \u0022noodle rocket / wonky physics\u0022 touch. Depending on your POV, this is either a bug or a feature.\u003Cbr\u003E\nMy personal stance is that the KSP lego parts paradigm fundamentally can\u0027t result in a good \u0022structural strength design\u0022 gameplay element. This isn\u0027t a bridge construction game, there is fundamental conflict in trying to mix the \u0022parts are functional elements\u0022 and \u0022parts are structural elements\u0022 paradigms. The whole \u0022joints structural gameplay\u0022 is vaguely fun for the first two hours you discover the game, then it just become a constant annoyance.\n\u003C/p\u003E\n\u003Cp\u003E\nThis being said, rolling out a completely custom joint/RB physics implementation is no trivial task, and it imply loosing a lot of \u0022standard\u0022 features from the Unity ecosystem, for example the wheels/legs physics plugin KSP relies on (VPP).\u003Cbr\u003E\nI don\u0027t expect them to take that path. Even though it would likely be the better option in the long run, it imply a massive upfront development cost.\u003Cbr\u003E\nSo yup, maybe they will partially disable the per part RB PhysX simulation we are used to in some cases.\u003Cbr\u003E\nIf they do that, I wouldn\u0027t qualify that as \u0022optimization\u0022, but more as another hacky workaround, in the same realm as spamming PhysX joints to make large vessels vaguely rigid.\n\u003C/p\u003E\n\u003Cp\u003E\nThere are several technical options there, merging multiple parts in a single RB is one.\u003Cbr\u003E\nFor vessels, which are frequently subject to part reconfiguration events (staging, docking, collisions, etc), it would induce a lot of complexity and overhead. But I can see that happening for the \u0022semi-static\u0022 large bases/stations, which will likely be different technical entities than regular vessels.\u003Cbr\u003E\u003Cbr\u003E\nAlternatively, there is the possibility of switching the vessel parts RB to kinematic mode and handling vessel forces/torques manually to update part positions\u00A0 (KSP already does this when vessels are in the packed state, minus the forces/torques handling). This is a relatively straightforward way to opt-out from joint physics (and the bulk of the performance cost) while keeping some useful RB stats (like per-part \u003Cabbr title=\u0022Center of Mass\u0022\u003E\u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E\u003C/abbr\u003E), and as I said, they will need to implement all that for being able to do out-of-physics/in-timewarp engine thrust and vessel attitude control, unless they decide to use a dumbed down \u0022just aggregate all engines as a single \u003Cabbr title=\u0022Center of Mass\u0022\u003E\u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E\u003C/abbr\u003E aligned thrust vector\u0022 model for that. The only remaining piece is having a collision prediction thing, so they can switch out of kinematic mode before a vessel-vessel or vessel-terrain collision happen and have joints behave as expected in that case. And side note,\u00A0 that \u0022physics LOD\u0022 rumor comes from a 2019 \u0022leak\u0022 from somebody that used to work on KSP 2, and what he said was just that : they will try to keep vessels in the packed (ie kinematic RBs) state more often.\n\u003C/p\u003E\n\u003Cp\u003E\nBut in any case, as long as they keep the flexible joints feature, those always will be temporary optimization opportunities. There will always be a point where full per-part RB physics have to be enabled. So this would result in an user experience with massive FPS variations for the same vessel depending if said optimizations are applicable or not. Not to mention it would introduce (more) discrepancies in physics behavior. So the whole thing is a quite questionable decision, and I have some doubts that \u0022physics LOD\u0022 rumor will actually materialize into something very significant.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for the stuttering on docking/undocking/staging/collisions/vessel becoming loaded, there is little they can do here. Those events fundamentally imply initializing and re-initializing a lot of stuff, which is always a costly operation. If your CPU already has no breathing room when those happen, the stuttering is unavoidable. They can use some strategies and good practices to limit the effect, but it always will be here. There is also a tradeoff between stutter during those events and performance the rest of the time. Outside of those events, there are usually a lot of opportunities to cache some costly computation results instead of redoing them continuously. But this mean that when those results become invalid because the vessel state has changed, you need to perform all those calculations at once, inducing temporary stutter.\u003Cbr\u003E\u003Cbr\u003E\nAnyway, I agree with the \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003E\u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E\u003C/abbr\u003E, I would love to hear some information about what the KSP 2 developments and plans are in regard to this stuff.\u003Cbr\u003E\n\u0022Vessel physics\u0022 (be it RB physics, aerodynamics, thermal simulation, resource simulation...) are the main pillar of KSP, what make it distinct from any other game.\u003Cbr\u003E\nIt\u0027s also the most technically difficult aspect. As a seasoned KSP player, I don\u0027t really care about the new planets or scifi engines, all I want is a KSP 2.0 that provide good solutions for those core features.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222021-12-13T12:55:29Z\u0022 title=\u002212/13/2021 12:55  PM\u0022 data-short=\u00222 yr\u0022\u003EDecember 13, 2021\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2021-12-13T13:32:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064704\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639399421\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t see how you can keep joint strength limits if you merge everything into a single PhysX RB, unless you roll out a custom implementation for that.\u003Cbr\u003E\nAt this point, if you have that custom implementation, you\u0027ve already reproduced most of what PhysX is used for in KSP.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot at all. You still have to do collision detection, extract contact points, and solve the constraints for remaining joints and contact points. All of that is still handled by PhysX. The only thing the custom implementation for RB does is take the constraint forces produced by PhysX and multiplies them\u00A0by a pre-computed matrix to get the forces on the internal joints of the RB which you then test against strength limits. It\u0027s a tiny fraction of the full solver.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064704\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639399421\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n29 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis being said, rolling out a completely custom joint/RB physics implementation is no trivial task\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is a bit of an understatement. Less than a year ago, at a former job, I have been involved in evaluating Unreal\u0027s new Chaos solver against our in-house engine that I was a lead engineer on. We have found problems. Now, UE5 was not released yet, and this was advertised to us as WIP, and the bugs and issues were being rapidly fixed, and I\u0027m sure it\u0027s in way better shape now. So I\u0027m not trying to talk crap about UE5 here. But this was a physics engine years in the making with Epic\u0027s resources behind it and it was still in need of work. A good physics solver is a huge project.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, Chaos does a lot of things for a lot of different kinds of games. You don\u0027t need all of that for a game like KSP, obviously. You can cut a lot of corners and simplify a lot of things. Basic BVH-accelerated collision detection and a constraints solver are reasonably sized problems.\u00A0 And if you were clever about how Jacobians for your constraints are generated, adding special constraints to handle wheels and landing gear isn\u0027t a huge amount of work. But it\u0027s still a good amount of work, and\u00A0if you consider that Intercept has only about a dozen engineers to make the entire game, only one of whom is a physics engineer, making a custom solver does not seem feasible.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064704\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639399421\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n43 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMy personal stance is that the KSP lego parts paradigm fundamentally can\u0027t result in a good \u0022structural strength design\u0022 gameplay element.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI agree with that part. I think going with wobbly rockets was a mistake from the start, and they should have treated the entire structure as a rigid body. Early versions probably didn\u0027t even need stress limits simulation, especially not with the way old aerodynamics worked.\u00A0It could have been added in later versions, causing rockets to simply fall apart, rather than start bending. The end effect would have been exactly the same. You could still have rockets undergo \u003Cabbr title=\u0022Rapid unplanned disassembly\u0022\u003ERUD\u003C/abbr\u003E due to aerodynamic forces if you lost control at high speeds or simply due to impact with terrain, but you wouldn\u0027t have to fight Kraken just to get your large rocket to orbit. This is the kind of thing that\u0027s challenging, but isn\u0027t fun.\n\u003C/p\u003E\n\u003Cp\u003E\nBut it seems that we\u0027re stuck with it. All of the footage we\u0027ve seen of rockets under any kind of stress still show deformation consistent with PhysX weld joints. So it seems that this is still the design choice for KSP2.\n\u003C/p\u003E\n"},{"CreatedByName":"flart","CreatedById":181486,"CreatedDateTime":"2021-12-13T13:35:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064427\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639326130\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe KSP other \u0022physics\u0022 subsystem are the main bottleneck \u003Cspan\u003E: the aerodynamic and thermal simulations.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\ndoes the systems distinct enough for being able to disable them in the cheat menu in the ksp1?\n\u003C/p\u003E\n"},{"CreatedByName":"MechBFP","CreatedById":184845,"CreatedDateTime":"2021-12-13T13:45:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064717\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639402323\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 minutes ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBut it seems that we\u0027re stuck with it. All of the footage we\u0027ve seen of rockets under any kind of stress still show deformation consistent with PhysX weld joints. So it seems that this is still the design choice for KSP2.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHave we actually seen anything along those lines some time after Intercept took over though? I can\u0027t recall.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2021-12-13T14:13:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064719\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639403107\u0022 data-ipsquote-userid=\u0022184845\u0022 data-ipsquote-username=\u0022MechBFP\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n36 minutes ago, MechBFP said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHave we actually seen anything along those lines some time after Intercept took over though? I can\u0027t recall.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, there was a shot of a rocket firing engines relatively recently. Nowhere near as much bouncing as in early shots, but definitely some flex. Let me see if I can find the footage I\u0027m thinking of.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: Ok, \u0022recently\u0022 might have been a stretch. I\u0027m definitely thinking of the outro sequence of Next Gen Astronauts. You can see the boosters react to change in acceleration.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 frameborder=\u00220\u0022 height=\u0022113\u0022 width=\u0022200\u0022 data-embed-src=\u0022https://www.youtube.com/embed/5CNwB8mmntg?start=593\u0026amp;feature=oembed\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nTime-stamped at \u003Ca href=\u0022https://www.youtube.com/watch?v=5CNwB8mmntg\u0026amp;t=593s\u0022 rel=\u0022external nofollow\u0022\u003E9:53\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nThere is also a much easier to miss example in another part of this video, at \u003Ca href=\u0022https://www.youtube.com/watch?v=5CNwB8mmntg\u0026amp;t=557s\u0022 rel=\u0022external nofollow\u0022\u003E9:17\u003C/a\u003E you can see two ships collide, with boosters on smaller one shaking as a result. Of course, collisions might be treated differently.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, notably, all the flexing we\u0027ve seen here is at separators. So it is possible that separators are still treated as PhysX joints, while the solid welds between components aren\u0027t. That would be an interesting choice for optimization and one I\u0027d be in support of. But we also see parts breaking apart in the collision video, meaning that either there is stress limits evaluation as described above in this thread, or the welds are treated as joints at least during the collisions. Both of these are plausible, but so is the possibility that everything is joints, just like in KSP, and they are just too stiff for us to see any flexing in these examples.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222021-12-13T14:31:09Z\u0022 title=\u002212/13/2021 02:31  PM\u0022 data-short=\u00222 yr\u0022\u003EDecember 13, 2021\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2021-12-13T15:47:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064717\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639402323\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot at all. You still have to do collision detection, extract contact points, and solve the constraints for remaining joints and contact points. All of that is still handled by PhysX.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, I should have been more specific. I meant not using PhysX RB joints, but rolling out a custom \u0022rigid but breakable\u0022 part joint implementation. There is zero justification for not using PhysX colliders and not reusing RBs \u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E computations. In other words, KSP could be handling forces and part positions by itself, instead of relying on the wholly inadequate for the purpose PhysX joints. But yep, this would be a complex hybrid implementation, and as you said, it\u0027s unlikely they have the resources for a low return on investment project like that. KSP1 joint physics are from ideal, but they still kinda work from a gameplay perspective, are (unfortunately) a huge part of KSP perceived \u0022identity\u0022 and again, there are other much lower hanging fruits in terms of performance optimization.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064718\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639402544\u0022 data-ipsquote-userid=\u0022181486\u0022 data-ipsquote-username=\u0022flart\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, flart said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\ndoes the systems distinct enough for being able to disable them in the cheat menu in the ksp1?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m\u0027 not aware of any \u0022kill switch\u0022. Those two systems are quite deeply interlinked, you can\u0027t really have one without the other. They are also quite strongly interlinked with the orbit solver, and many various subcomponents (not to mention mods). I doubt it\u0027s possible to disable meaningful pieces of code there without cascading side effects everywhere.\n\u003C/p\u003E\n"},{"CreatedByName":"MechBFP","CreatedById":184845,"CreatedDateTime":"2021-12-13T18:41:24Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57710-k2/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257710\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57710-k2/\u0022 rel=\u0022\u0022\u003E@K^2\u003C/a\u003E\u00A0pretty sure that outro at9:53 is KSP1. The earlier one at 9:17 is KSP2 for sure.\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt is definitely interesting that this hasn\u2019t been shown at all since then though. \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2021-12-13T23:13:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224064757\u0022 data-ipsquote-contentid=\u0022205936\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221639410432\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKSP1 joint physics are from ideal, but they still kinda work from a gameplay perspective\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSo the sad thing is that even despite coming from physics background and working on multiple titles, I used to think that PhysX and (now old) Havok is as good as these systems get, and you just have to eat the instability problems if you want dynamic joints. By \u0022dynamic joints\u0022\u00A0I mean, something that\u0027s entirely defined by the constraints equations that can change - be they contact points, ragdoll joints, wheels, etc. But then I\u0027ve worked on an engine that actually handles it properly, and now I\u0027m just bemused that PhysX still hasn\u0027t fixed their stuff.\u00A0Interestingly, I can trace pretty much all of the major changes in how people do physics engine to Erin Catto\u0027s work on Box2D and at Crystal Dynamics. Following that, I can point out at least Havok, Roblox, and Epic\u0027s Chaos as engines that have implemented similar approach and now have good joint simulation that doesn\u0027t suffer from nearly the level of stability problems that PhysX does. I\u0027m guessing Blizzard\u0027s Overwatch engine is also benefiting from that, since Erin worked on it, but I don\u0027t know how much use they\u0027re getting out of constraints. Erin has done a lot of work to improve their dynamic BVH, though. In general, if you\u0027re interested in game physics, I\u0027d definitely look up his talks at various game dev conferences.\n\u003C/p\u003E\n\u003Cp\u003E\nTangent aside, if PhysX got their stuff together and implemented proper constraint solver, even with using basic Unity welds, the KSP simulation would be way, way more stable. Alternatively, if KSP2 was to take a different route and use Havok physics for their components, but my understanding is that they initially wanted to recycle some of the KSP work in addition to Unity ECS, which is a requirement, being\u00A0 still kind of raw when KSP2 development started. So I think we missed that particular train.\n\u003C/p\u003E\n"}]}