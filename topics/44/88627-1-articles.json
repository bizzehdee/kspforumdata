{"TopicId":88627,"ForumId":44,"TopicTitle":"What\u0026#039;s the difference between 0 and -0?","CreatedByName":"Sun","CreatedById":66710,"CreatedDateTime":"2014-10-27T02:22:15Z","PageNum":1,"Articles":[{"CreatedByName":"Sun","CreatedById":66710,"CreatedDateTime":"2014-10-27T02:22:15Z","Content":"\n\u003Cp\u003EFor normal intents and purposes, they\u0027re the same number. Except that one is positive and one is negative. How is that so? Technically, they have the same value, but I feel like there\u0027s a difference. Is there a difference? If so, what\u0027s the difference?\u003C/p\u003E\n"},{"CreatedByName":"Tommygun","CreatedById":41293,"CreatedDateTime":"2014-10-27T02:31:40Z","Content":"\n\u003Cp\u003EThe only thing I can think of is a negative number rounded to zero or negative zero that might be needed in calculating voltages in an electrical circuit?\u003C/p\u003E\u003Cp\u003EBut that\u0027s just my guess.\u003C/p\u003E\u003Cp\u003EOr could it be used to represent a waveform number that is at zero, but is about to pass into negative numbers?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-27T02:34:54Z\u0022 title=\u002210/27/2014 02:34  AM\u0022 data-short=\u00229 yr\u0022\u003EOctober 27, 2014\u003C/time\u003E by Tommygun\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2014-10-27T03:13:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrMuddyBoots\u0022 data-cite=\u0022MrMuddyBoots\u0022\u003E\u003Cdiv\u003EFor normal intents and purposes, they\u0027re the same number. Except that one is positive and one is negative. How is that so? Technically, they have the same value, but I feel like there\u0027s a difference. Is there a difference? If so, what\u0027s the difference?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe only thing I can think of is function limits from calculus: the limit of some function as it approaches 0 from the negative side may be different than the limit as you approach from the positive side. One such example is f(x) = 1/x: it approaches negative infinity as you approach from the negative side, and positive infinity as you approach from the positive side.\u003C/p\u003E\n"},{"CreatedByName":"qemist","CreatedById":64828,"CreatedDateTime":"2014-10-27T03:15:35Z","Content":"\n\u003Cp\u003EThere\u0027s no meaningful difference at all. Adding a negative sign in front of a number like that signifies it\u0027s additive inverse. Basically any number \u003Cem\u003Ex\u003C/em\u003E has a unique number that we call \u003Cem\u003E-x\u003C/em\u003E such that \u003Cem\u003Ex \u002B (-x) = 0\u003C/em\u003E. (This is analogous to the idea of a multiplicative inverse, where say 1/3 * 3 = 1). 0 is special because its additive inverse happens to be itself, it\u0027s the only number you can add to 0 to make 0.\u003C/p\u003E\n"},{"CreatedByName":"Leszek","CreatedById":119053,"CreatedDateTime":"2014-10-27T05:22:40Z","Content":"\n\u003Cp\u003EIn general whenever you see something like -0 anywhere it means that the number is a negative number that has been rounded to 0.\u003C/p\u003E\u003Cp\u003ESpecific situations and context can change that but in the absence of context it should be assumed to be so.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2014-10-27T09:00:36Z","Content":"\n\u003Cp\u003E-0 is a quirk of floating point units. its simpler logic wise to use a sign bit rather than a twos complement mantissa. a multiplication for example just needs to xor the bit independently of the other parts of the number. this means negative zero is a thing, but i think if you do something like \u0027if(anegativezero==apositivezero)\u0027 it will be true.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-10-27T09:30:42Z","Content":"\n\u003Cp\u003EIt sort of depends on the algebra. One could conceive an algebra where there is a meaningful difference between 0 and -0. But for fields we usually deal with, qemist\u0027s reply covers it. -0 by definition is the number such that 0 \u002B (-0) = 0, and that trivially gives you 0 = -0.\u003C/p\u003E\u003Cp\u003EIn practical situations, -0 arises in two contexts. Leszek covered one. If you are dealing with a tiny negative number it can be rounded to -0. Though, more typical notations for slightly positive and slightly negative numbers are 0\u002B and 0-.\u003C/p\u003E\u003Cp\u003EThe other situation, where -0 arises quite frequently, is computer science (Ninja\u0027d on that by Nuke). The way real numbers are represented on modern computers is as floating point numbers. Unlike integers\u003Csup\u003E*\u003C/sup\u003E, floating point numbers have one bit reserved for the sign, and that is computed separately from the rest of the operation. So if you, for example, multiply 0 * (-1), you get -0 as the result. It doesn\u0027t hurt anything, and typically means nothing. I have, however, seen some hacks that use that extra bit of storage for interesting things.\u003C/p\u003E\u003Cp\u003EIt\u0027s worth to keep in mind, however, that one of the reasons floating point is set up this way is because 0 is often treated as \u0022very small number rounded to zero.\u0022\u003C/p\u003E\u003Cp\u003E\u003Csup\u003E*\u003C/sup\u003E Integer math is done completely differently. While the high bit can be considered a sign bit, and for the purposes of comparison it is, it\u0027s not used in algebra any differently from the rest of the fields. Instead, entire algebra is done modulo 2\u003Csup\u003En\u003C/sup\u003E, so there is no difference between a negative number and very large positive number. As a consequence, zero is entirely unique. There is no such thing as integer -0.\u003C/p\u003E\u003Cp\u003EEdit: Nuke, whether == passes or fails depends on how you compare them. In most situations, compiler will know that these are two floats, and will use floating point comparison. FPU will, indeed, report 0 == -0 as true. But if you compare them in some odd context, you might end up with bitwise comparison of memory that will evaluate to false. That usually means you either have an error in the code or you are doing something intentionally creative, though.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-27T09:40:21Z\u0022 title=\u002210/27/2014 09:40  AM\u0022 data-short=\u00229 yr\u0022\u003EOctober 27, 2014\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"magnemoe","CreatedById":57801,"CreatedDateTime":"2014-10-27T09:49:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EIt sort of depends on the algebra. One could conceive an algebra where there is a meaningful difference between 0 and -0. But for fields we usually deal with, qemist\u0027s reply covers it. -0 by definition is the number such that 0 \u002B (-0) = 0, and that trivially gives you 0 = -0.\u003Cp\u003EIn practical situations, -0 arises in two contexts. Leszek covered one. If you are dealing with a tiny negative number it can be rounded to -0. Though, more typical notations for slightly positive and slightly negative numbers are 0\u002B and 0-.\u003C/p\u003E\u003Cp\u003EThe other situation, where -0 arises quite frequently, is computer science (Ninja\u0027d on that by Nuke). The way real numbers are represented on modern computers is as floating point numbers. Unlike integers\u003Csup\u003E*\u003C/sup\u003E, floating point numbers have one bit reserved for the sign, and that is computed separately from the rest of the operation. So if you, for example, multiply 0 * (-1), you get -0 as the result. It doesn\u0027t hurt anything, and typically means nothing. I have, however, seen some hacks that use that extra bit of storage for interesting things.\u003C/p\u003E\u003Cp\u003EIt\u0027s worth to keep in mind, however, that one of the reasons floating point is set up this way is because 0 is often treated as \u0022very small number rounded to zero.\u0022\u003C/p\u003E\u003Cp\u003E\u003Csup\u003E*\u003C/sup\u003E Integer math is done completely differently. While the high bit can be considered a sign bit, and for the purposes of comparison it is, it\u0027s not used in algebra any differently from the rest of the fields. Instead, entire algebra is done modulo 2\u003Csup\u003En\u003C/sup\u003E, so there is no difference between a negative number and very large positive number. As a consequence, zero is entirely unique. There is no such thing as integer -0.\u003C/p\u003E\u003Cp\u003EEdit: Nuke, whether == passes or fails depends on how you compare them. In most situations, compiler will know that these are two floats, and will use floating point comparison. FPU will, indeed, report 0 == -0 as true. But if you compare them in some odd context, you might end up with bitwise comparison of memory that will evaluate to false. That usually means you either have an error in the code or you are doing something intentionally creative, though.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, floating points covers it, I guess you also will get it in common settings like -3*0=-0 and yes the main problem is visual. \u003C/p\u003E\u003Cp\u003EInteger can get rollover, that it you pull the values too high and it become an large negative number. around 2 billions 2^31 is most common but 2^14 or around 32000 will roll for 2 bits integer. You might have seen this in games usually if you use exploits. \u003C/p\u003E\u003Cp\u003EHealing somebody for 2.1 billion health is an bad idea \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ZetaX","CreatedById":60692,"CreatedDateTime":"2014-10-27T10:18:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EIt sort of depends on the algebra. One could conceive an algebra where there is a meaningful difference between 0 and -0.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, not really. The symbol 0 is defined to denote the neutral element of addition, and the reasoning you gave shows that it is its own inverse (or at least, _an_ inverse, there might be more if we don\u0027t have inverses or associativity). Thus you would need to break that very definition to make 0 different from -0.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-10-27T10:33:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZetaX\u0022 data-cite=\u0022ZetaX\u0022\u003E\u003Cdiv\u003ENo, not really. The symbol 0 is defined to denote the neutral element of addition, and the reasoning you gave shows that it is its own inverse (or at least, _an_ inverse, there might be more if we don\u0027t have inverses or associativity). Thus you would need to break that very definition to make 0 different from -0.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAddition doesn\u0027t have to be a group. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"rtxoff","CreatedById":107622,"CreatedDateTime":"2014-10-27T10:41:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZetaX\u0022 data-cite=\u0022ZetaX\u0022\u003E\u003Cdiv\u003ENo, not really. The symbol 0 is defined to denote the neutral element of addition, and the reasoning you gave shows that it is its own inverse (or at least, _an_ inverse, there might be more if we don\u0027t have inverses or associativity). Thus you would need to break that very definition to make 0 different from -0.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhen conceiving a new algebra, the breaking definition of 0 might or might not be necessary i don\u0027t see a fallacy in K2\u0027s post.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-10-27T11:22:04Z","Content":"\n\u003Cp\u003EJust to give an example, consider non-commuting addition. In that case, we might want to introduce a left identity and a right identity. Specifically: 0\u003Csub\u003EL\u003C/sub\u003E \u002B a = a = a \u002B 0\u003Csub\u003ER\u003C/sub\u003E for all a that are not identities. If that is the case, and we want to preserve at least associativity, then we define inverses thusly. a \u002B (-a) = 0\u003Csub\u003ER\u003C/sub\u003E, (-a) \u002B a = 0\u003Csub\u003EL\u003C/sub\u003E. That way, a \u002B b \u002B (-\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E = a. Note that (-(-a)) is not a. \u003C/p\u003E\u003Cp\u003EThis brings up the question, what is 0\u003Csub\u003ER\u003C/sub\u003E \u002B 0\u003Csub\u003EL\u003C/sub\u003E? I can\u0027t find any reason not to define it to be 0\u003Csub\u003ER\u003C/sub\u003E. Consequently, 0\u003Csub\u003EL\u003C/sub\u003E = (-0\u003Csub\u003ER\u003C/sub\u003E). This leads to an algebra where -(a \u002B \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E = (-\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E \u002B (-a), which may look odd, but is entirely self-consistent.\u003C/p\u003E\u003Cp\u003EFinally, as means of simplifying notation, I call 0\u003Csub\u003ER\u003C/sub\u003E simply 0, and 0\u003Csub\u003EL\u003C/sub\u003E = -0.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2014-10-27T11:46:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EEdit: Nuke, whether == passes or fails depends on how you compare them. In most situations, compiler will know that these are two floats, and will use floating point comparison. FPU will, indeed, report 0 == -0 as true. But if you compare them in some odd context, you might end up with bitwise comparison of memory that will evaluate to false. That usually means you either have an error in the code or you are doing something intentionally creative, though.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eit does depend on language, implementation, your fpu architecture, and your compiler, etc. i was specifically refering to fpu compare though there are other ways of doing the same operation, and they might improve performance in some situations. but then again you can do all kinds of geeky, cool, and sometimes useful things by casting a float to int and operating on it as if it were an integer.\u003C/p\u003E\n"},{"CreatedByName":"Diofantos","CreatedById":100982,"CreatedDateTime":"2014-10-27T12:08:47Z","Content":"\n\u003Cp\u003EThe number 0 is wierd. It represent \u0022nothing\u0022, but still it can be expressed as the sum of all other numbers: 1\u002B(-1)\u002B2\u002B(-2)\u002Bpi\u002B(-pi)...n\u002B(-n)\u003C/p\u003E\n"},{"CreatedByName":"Nikolai","CreatedById":23085,"CreatedDateTime":"2014-10-27T15:10:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diofantos\u0022 data-cite=\u0022Diofantos\u0022\u003E\u003Cdiv\u003EThe number 0 is wierd. It represent \u0022nothing\u0022, but still it can be expressed as the sum of all other numbers: 1\u002B(-1)\u002B2\u002B(-2)\u002Bpi\u002B(-pi)...n\u002B(-n)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes. In a very real way, the concepts of zero and infinity are linked.\u003C/p\u003E\u003Cp\u003EAlso, arguably, zero can be used as the starting point of deriving everything in math. We start with zero as a concept. But what about the sets that zero represents? That is, how many sets have zero elements? Only one -- the null set. But now that you have zero and one as concepts, you can derive everything.\u003C/p\u003E\n"},{"CreatedByName":"ZetaX","CreatedById":60692,"CreatedDateTime":"2014-10-27T17:29:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EAddition doesn\u0027t have to be a group. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI never said it does. Why would I even mention non-unique inverses otherwise\u00C3\u201A\u00C2\u00BF\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EJust to give an example, consider non-commuting addition. In that case, we might want to introduce a left identity and a right identity. Specifically: 0\u003Csub\u003EL\u003C/sub\u003E \u002B a = a = a \u002B 0\u003Csub\u003ER\u003C/sub\u003E for all a that are not identities. If that is the case, and we want to preserve at least associativity, then we define inverses thusly. a \u002B (-a) = 0\u003Csub\u003ER\u003C/sub\u003E, (-a) \u002B a = 0\u003Csub\u003EL\u003C/sub\u003E. That way, a \u002B b \u002B (-\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E = a. Note that (-(-a)) is not a. \u003Cp\u003EThis brings up the question, what is 0\u003Csub\u003ER\u003C/sub\u003E \u002B 0\u003Csub\u003EL\u003C/sub\u003E? I can\u0027t find any reason not to define it to be 0\u003Csub\u003ER\u003C/sub\u003E. Consequently, 0\u003Csub\u003EL\u003C/sub\u003E = (-0\u003Csub\u003ER\u003C/sub\u003E). This leads to an algebra where -(a \u002B \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E = (-\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E \u002B (-a), which may look odd, but is entirely self-consistent.\u003C/p\u003E\u003Cp\u003EFinally, as means of simplifying notation, I call 0\u003Csub\u003ER\u003C/sub\u003E simply 0, and 0\u003Csub\u003EL\u003C/sub\u003E = -0.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnless you just want to only have the two zeroes, you need to define how other elements are added. And what is 0_L \u002B 0_R\u00C3\u201A\u00C2\u00BF If they actually are left and right identities, then it would be both 0_L and 0_R, making them equal.\u003C/p\u003E\u003Cp\u003EIf you use \u0022\u002B\u0022 for the structure of a group/monoid/whatever, then it is a pretty well established convention that this implictely means it is abelian/commutative. If your structure lacks that property, you should use other symbols like \u00C3\u201A\u00C2\u00B7, * or just \u0022nothing\u0022. As a result, 0 will always be inverse (on both sides) to itself.\u003C/p\u003E\u003Cp\u003EAlso note that \u0022algebra\u0022 is already in use (essentially: a morphism of rings with a fixed source), \u0022algebraic structure\u0022 is the better term for this.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022gpisic\u0022 data-cite=\u0022gpisic\u0022\u003E\u003Cdiv\u003EWhen conceiving a new algebra, the breaking definition of 0 might or might not be necessary i don\u0027t see a fallacy in K2\u0027s post.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThen don\u0027t call it 0. Calling it 0 without it being the neutral element of \u0022addition\u0022 is like calling your hamster \u0022Zero\u0022: you can, but what is the point\u00C3\u201A\u00C2\u00BF\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nikolai\u0022 data-cite=\u0022Nikolai\u0022\u003E\u003Cdiv\u003EBut now that you have zero and one as concepts, you can derive everything.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually you can\u0027t: set theory needs several more axioms than just \u0022the empty set exists\u0022 and the few axioms that construct new sets from old ones. The axiom of choice comes to mind, but even the simpler existence of the set omega must be explicitely required.\u003C/p\u003E\n"},{"CreatedByName":"Technical Ben","CreatedById":10512,"CreatedDateTime":"2014-10-27T17:33:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EJust to give an example, consider non-commuting addition. In that case, we might want to introduce a left identity and a right identity. Specifically: 0\u003Csub\u003EL\u003C/sub\u003E \u002B a = a = a \u002B 0\u003Csub\u003ER\u003C/sub\u003E for all a that are not identities. If that is the case, and we want to preserve at least associativity, then we define inverses thusly. a \u002B (-a) = 0\u003Csub\u003ER\u003C/sub\u003E, (-a) \u002B a = 0\u003Csub\u003EL\u003C/sub\u003E. That way, a \u002B b \u002B (-\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E = a. Note that (-(-a)) is not a. \u003Cp\u003EThis brings up the question, what is 0\u003Csub\u003ER\u003C/sub\u003E \u002B 0\u003Csub\u003EL\u003C/sub\u003E? I can\u0027t find any reason not to define it to be 0\u003Csub\u003ER\u003C/sub\u003E. Consequently, 0\u003Csub\u003EL\u003C/sub\u003E = (-0\u003Csub\u003ER\u003C/sub\u003E). This leads to an algebra where -(a \u002B \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E = (-\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E \u002B (-a), which may look odd, but is entirely self-consistent.\u003C/p\u003E\u003Cp\u003EFinally, as means of simplifying notation, I call 0\u003Csub\u003ER\u003C/sub\u003E simply 0, and 0\u003Csub\u003EL\u003C/sub\u003E = -0.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s all well and good. But calling a duck a goose, does not make a duck a goose. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EYour entirely correct, we could redefine a new system where -0 and 0 are different. But by definition, are we not no longer talking about 0 and -0 as defined by the OP? Else we would have to prove your version of the definitions can be mapped/translated into the normal definitions and the \u0022meanings/principles etc\u0022 still apply.\u003C/p\u003E\u003Cp\u003EPS, as a good proof of this (for me, as I really only get visual proofs) is a number line. It only maps \u0022zero\u0022 as \u00220\u0022. There is no -0 on the number line, though all other numbers can be represented as themselves and their inverse.\u003C/p\u003E\u003Cp\u003EEven if we add new dimensions etc to the number line, all will pass zero in the same place, and we never get -0. We can however get other forms of \u0022zero\u0022 such as 0,2 or -5,0 etc:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/wikipedia/commons/thumb/0/0e/Cartesian-coordinate-system.svg/354px-Cartesian-coordinate-system.svg.png\u0022 alt=\u0022354px-Cartesian-coordinate-system.svg.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EIn your system, \u0022handedness\u0022 (Right or Left) is not a concept of the number, but another defining feature of it. I could for instance have a \u0022blue\u0022 zero, a \u0022green\u0022 zero and a \u0022red\u0022 zero. However, no amount of addition or subtraction of those colours results in one becoming \u0022negative blue zero\u0022 or translating to \u0022negative zero\u0022.\u003C/p\u003E\u003Cp\u003EThough I am no mathmatician, so may be wrong. A quick search (google, gah!) suggests -0 is purely a notation to show a number approaching zero, as said from previous calculations, as by definition, 0 and -0 are equal. So even if we do map the example of handedness, we only get two equal values of zero, but a \u0022L\u0022 or \u0022R\u0022 defining the \u003Cem\u003Edirection\u003C/em\u003E of our calculations.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-27T17:45:26Z\u0022 title=\u002210/27/2014 05:45  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 27, 2014\u003C/time\u003E by Technical Ben\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZetaX","CreatedById":60692,"CreatedDateTime":"2014-10-27T17:43:47Z","Content":"\n\u003Cp\u003EThat graphical \u0022proof\u0022 only talks about things that already contain the reals (probably you talk about a real vector space here). The concept of \u00220\u0022 exists in every abelian group, especially in every ring like e.g. IF_2 = IZ/2 = {0,1}, the field with two elements.\u003C/p\u003E\n"},{"CreatedByName":"rtxoff","CreatedById":107622,"CreatedDateTime":"2014-10-27T17:50:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZetaX\u0022 data-cite=\u0022ZetaX\u0022\u003E\u003Cdiv\u003EThen don\u0027t call it 0. Calling it 0 without it being the neutral element of \u0022addition\u0022 is like calling your hamster \u0022Zero\u0022: you can, but what is the point\u00C3\u201A\u00C2\u00BF\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy shouldn\u0027t someone name his hamster \u0022Zero\u0022 ? It\u0027s actually a good name for a hamster.\u003C/p\u003E\u003Cp\u003EAlso when conceiving a new algebra 0 could be a good name for nothing or something or whatever it should stay for.\u003C/p\u003E\u003Cp\u003EStill no break of logic in the statement of K^2 here.\u003C/p\u003E\n"},{"CreatedByName":"Technical Ben","CreatedById":10512,"CreatedDateTime":"2014-10-27T17:57:38Z","Content":"\n\u003Cp\u003EThose kind of calculations and definitions are way above my pay grade and qualifications (peanuts, I have none!). But everything I can find on the subject talks about zero being zero. We pass it as a big nothing, though as has been said many times already, can pass it from multiple directions.\u003C/p\u003E\u003Cp\u003E(edit)\u003C/p\u003E\u003Cp\u003EEG: \u003Ca href=\u0022https://en.wikipedia.org/wiki/Imaginary_unit#i_and_.E2.88.92i\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Imaginary_unit#i_and_.E2.88.92i\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-27T18:02:22Z\u0022 title=\u002210/27/2014 06:02  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 27, 2014\u003C/time\u003E by Technical Ben\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"qemist","CreatedById":64828,"CreatedDateTime":"2014-10-27T19:02:04Z","Content":"\n\u003Cp\u003EAfter doing a bit of reading it seems like the closest thing to having more than one zero is in some semigroups where there can be multiple left neutral elements or multiple right neutral elements (I feel like there should be a more general word for these, maybe multiple same-sided neutral elements?), but if there is at least one of each (like in K^2\u0027s \u0022proof\u0022, with 0L and 0R) then they all end up being equal and the neutral element is unique.\u003C/p\u003E\n"},{"CreatedByName":"ZetaX","CreatedById":60692,"CreatedDateTime":"2014-10-27T20:04:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022gpisic\u0022 data-cite=\u0022gpisic\u0022\u003E\u003Cdiv\u003EWhy shouldn\u0027t someone name his hamster \u0022Zero\u0022 ? It\u0027s actually a good name for a hamster.\u003Cp\u003EAlso when conceiving a new algebra 0 could be a good name for nothing or something or whatever it should stay for.\u003C/p\u003E\u003Cp\u003EStill no break of logic in the statement of K^2 here.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat logic\u00C3\u201A\u00C2\u00BF He just said that one \u0022could conceive\u0022 such a thing and unlike your example, he still tried to adhere to the definition. The mathematical definition of 0 is to be the neutral element of addition and as such it is automatically its own inverse. If you conceive a new object, then you give it a new name; if it properly generalises the old one, then you can think about using the same name, but otherwise it would just be completely against convention and common sense. \u003C/p\u003E\u003Cp\u003EThe argument would sound like someone answering my claim that the moon is not made of cheese by \u0022but I named that cheese in my hand \u0027Moon\u0027, yo sou are wrong\u0022; no, I am not, that\u0027s just a plain equivocation fallacy.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-10-28T04:00:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZetaX\u0022 data-cite=\u0022ZetaX\u0022\u003E\u003Cdiv\u003EUnless you just want to only have the two zeroes, you need to define how other elements are added. And what is 0_L \u002B 0_R\u00C3\u201A\u00C2\u00BF If they actually are left and right identities, then it would be both 0_L and 0_R, making them equal.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E0\u003Csub\u003EL\u003C/sub\u003E \u002B 0\u003Csub\u003ER\u003C/sub\u003E = 0\u003Csub\u003EL\u003C/sub\u003E, naturally. It follows from all the other definition. And no, identities don\u0027t have to act as identity on other identities. Not in algebras that do not have commutative property. Having only left/right identity (or both) and having special rules for these is pretty common in math. Consult \u003Ca href=\u0022https://en.wikipedia.org/wiki/Identity_element\u0022 rel=\u0022external nofollow\u0022\u003Ethis table\u003C/a\u003E.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tehcnical Ben\u0022 data-cite=\u0022Tehcnical Ben\u0022\u003E\u003Cdiv\u003EThat\u0027s all well and good. But calling a duck a goose, does not make a duck a goose.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou should read some texts on abstract algebra and group theory.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nuke\u0022 data-cite=\u0022Nuke\u0022\u003E\u003Cdiv\u003Ebut then again you can do all kinds of geeky, cool, and sometimes useful things by casting a float to int and operating on it as if it were an integer.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Fast_inverse_square_root\u0022 rel=\u0022external nofollow\u0022\u003EIndeed\u003C/a\u003E.\u003C/p\u003E\n"},{"CreatedByName":"qemist","CreatedById":64828,"CreatedDateTime":"2014-10-28T04:48:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003E]0\u003Csub\u003EL\u003C/sub\u003E \u002B 0\u003Csub\u003ER\u003C/sub\u003E = 0\u003Csub\u003EL\u003C/sub\u003E, naturally. It follows from all the other definition. And no, identities don\u0027t have to act as identity on other identities. Not in algebras that do not have commutative property. Having only left/right identity (or both) and having special rules for these is pretty common in math. Consult \u003Ca href=\u0022https://en.wikipedia.org/wiki/Identity_element\u0022 rel=\u0022external nofollow\u0022\u003Ethis table\u003C/a\u003E.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E0\u003Csub\u003EL\u003C/sub\u003E \u002B 0\u003Csub\u003ER\u003C/sub\u003E = 0\u003Csub\u003ER\u003C/sub\u003E is just as natural, which implies that 0\u003Csub\u003EL\u003C/sub\u003E = 0\u003Csub\u003ER\u003C/sub\u003E. Therefore the identity element 0 = 0\u003Csub\u003EL\u003C/sub\u003E = 0\u003Csub\u003ER\u003C/sub\u003E is two-sided and unique. This is true in all the algebraic structures I\u0027ve ever studied.\u003C/p\u003E\u003Cp\u003EThe definition of an identity is an element \u003Cem\u003Ee\u003C/em\u003E of a set with an operation \u003Cem\u003E*\u003C/em\u003E such that either \u003Cem\u003Ee*a = a\u003C/em\u003E or \u003Cem\u003Ea*e = a\u003C/em\u003E for all elements \u003Cem\u003Ea\u003C/em\u003E belonging to the set. This means that an identity would have act as an identity on any other identities in the set. If it didn\u0027t then it couldn\u0027t be a proper identity in the first place.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-10-28T05:27:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022qemist\u0022 data-cite=\u0022qemist\u0022\u003E\u003Cdiv\u003E0\u003Csub\u003EL\u003C/sub\u003E \u002B 0\u003Csub\u003ER\u003C/sub\u003E = 0\u003Csub\u003ER\u003C/sub\u003E is just as natural, which implies that 0\u003Csub\u003EL\u003C/sub\u003E = 0\u003Csub\u003ER\u003C/sub\u003E.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt might be just as natural, but it\u0027s not what you want if you want two distinct identities. 1\u002B1 = 0 is quite natural, but not what you are going to go with if you are constructing a number line. The other definition is consistent with two distinct identities and every definition up to that point. It is a valid algebraic structure.\u003C/p\u003E\u003Cp\u003EAgain, you are thinking in context of a group. We are not building a group. We are building a group-like algebraic structure with distinct left and right identities. Argument that if left identity doesn\u0027t act as identity on the right identity is about as valid as saying that Reals aren\u0027t a field because zero has no inverse. Now, if you can find a self contradiction, that\u0027s another matter.\u003C/p\u003E\n"}]}