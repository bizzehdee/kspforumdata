{"TopicId":100294,"ForumId":44,"TopicTitle":"N-Body Physics: learning resources","CreatedByName":"davidparks21","CreatedById":109178,"CreatedDateTime":"2015-02-21T10:28:10Z","PageNum":1,"Articles":[{"CreatedByName":"davidparks21","CreatedById":109178,"CreatedDateTime":"2015-02-21T10:28:10Z","Content":"I\u0027m interested in learning how to do n-body gravitational calculations. I wonder if anyone can suggest good texts on the subject (strong preference for eBooks), or any other resources I might look to in order to come up to speed on the subject. I\u0027m willing to tackle reasonably significant resources on the subject, I don\u0027t just want the overview.\n\nI noticed this book on amazon (though no eBook version), but since I don\u0027t know what I don\u0027t know yet, it\u0027s probably best to ask.\n\n[http://www.amazon.com/Gravitational-N-Body-Simulations-Algorithms-Mathematical/dp/0521121531](https://www.amazon.com/Gravitational-N-Body-Simulations-Algorithms-Mathematical/dp/0521121531)"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-02-21T11:23:02Z","Content":"What\u0027s your background in physics, math, and numerical methods like?\n\nIn a nutshell, an n-body simulation is just a numerical solution to a differential equation. If you have no experience with that, I would start there. Any good introductory text on numerical methods will cover basic methods and various problems one encounters. Gravity is a very special case, and you\u0027ll probably want a text that specializes in that, but you\u0027ll probably find the entry curve too steep if you don\u0027t get yourself comfortable with standard methods. And, of course, if you aren\u0027t familiar with differential equations at all, then you\u0027ll need to take another step back and get at least basic familiarity.\n\nIt also helps *a lot* when learning numerical methods to be able to try them out, which means programming. If you simply want to learn and write some proofs of concept, you can program in just about anything. But if you hope to solve real n-body problems, you\u0027ll probably need to learn C. Almost any other option comes with too many restrictions that prevent getting the computational performance you need. So if you haven\u0027t started learning to program, and you have a serious interest in computational physics, I strongly recommend starting with C.\n\nFinally, some basic physics helps. But unlike gravitational perturbations or restricted 3-body, which require very serious understanding of mechanics, n-body gravity just requires you to know Newton\u0027s Laws of motion and Newton\u0027s Universal Gravity. Basically, nothing you couldn\u0027t pick up even from KSP.\n\nAs for specific texts, for introduction to Numerical Methods, [Introduction to Numerical Analysis by Stoer and Bulirsch](https://www.amazon.com/Introduction-Numerical-Analysis-Applied-Mathematics/dp/038795452X/) is not bad, and is not too hard to get through on your own. If you know what a differential equation is, but don\u0027t know how to solve it numerically, it will get you started.\n\nAlso, if you are going to be writing numerical code in C, [Numerical Recipies in C](https://www.amazon.com/Numerical-Recipes-Scientific-Computing-Second/dp/0521431085/) is going to be your good friend. Note, it will not teach you good programming practices. Just efficient ways of organizing your computational code. Or just use code from the book directly to do some standard computational steps.\n\nP.S. If you are already comfortable with programming in C and/or C\u002B\u002B, but are looking for squeezing more computational power for your projects (and you\u0027ll need it for n-body), consider learning CUDA. Udacity has a fantastic course for that called [Introduction to Prarallel Programming with CUDA](https://www.udacity.com/course/cs344). So if you are going to be learning numerical methods and writing your own code to tackle n-body problems, you can develop all of that in CUDA as you work through it.\n\n**Edited \u003Ctime datetime=\u00222015-02-21T11:26:53Z\u0022 title=\u002202/21/2015 11:26  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 21, 2015\u003C/time\u003E by K^2**"},{"CreatedByName":"davidparks21","CreatedById":109178,"CreatedDateTime":"2015-02-22T02:42:49Z","Content":"Fantastic response!! Thank you so much for taking the time to write that! \n\nI\u0027m pretty sure I can handle the differential equations, though it\u0027ll take a tad bit of study to come back up to speed. I\u0027ve coded in java mostly, and for problems such as learning algorithms I prefer MATLAB, which incidentally makes cuda support near trivial, so I\u0027ll probably start there. I think my biggest deficiency is numerical analysis so I\u0027ll start there.\n\nI\u0027d like to code a tool that aids with identifying and planning multi step gravity assists in ksp more fluidly than trying to link up each hop individually. At least as a project to drive me to learn the subject in general.\n\n**Edited \u003Ctime datetime=\u00222015-02-22T03:39:33Z\u0022 title=\u002202/22/2015 03:39  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 22, 2015\u003C/time\u003E by davidparks21**"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-02-22T03:07:07Z","Content":"For KSP specifically, you do not need n-body physics. A search for optimal transfer there is purely a solution to a non-linear optimization with constraints. That said, my recommendation on starting resources would be nearly unchanged.\n\nFor solving the same problem with real gravity, you need both."},{"CreatedByName":"davidparks21","CreatedById":109178,"CreatedDateTime":"2015-02-22T03:45:03Z","Content":"Right, because of the discreet SOI construct in ksp. My end goal is still to understand and be able to do the math in reality. I figure that doing a ksp tool is a good starting point. An achievable goal."},{"CreatedByName":"sgt_flyer","CreatedById":57690,"CreatedDateTime":"2015-02-22T06:23:10Z","Content":"If you did not checked it out already, i would encourage you to also check the WIP mod Principia\n\n[http://forum.kerbalspaceprogram.com/threads/68502-WIP-Principia-N-Body-Gravitation-and-Better-Integrators-for-Kerbal-Space-Program](https://forum.kerbalspaceprogram.com/threads/68502-WIP-Principia-N-Body-Gravitation-and-Better-Integrators-for-Kerbal-Space-Program)\n\n(And maybe ask questions to eggrobin if you need)\n\nAt least, this mod, once done, will allow you to put to practice what you\u0027ll learn about n-body physics ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-02-22T07:48:15Z","Content":"I have reservations about that mod. Author claims he is using symplectic integrators, but there is no such thing for n-body gravity. Perhaps, he is simply mis-using the term, and just means higher order RK method. I will take a closer look at it."}]}