{"TopicId":44621,"ForumId":44,"TopicTitle":"Space Computer. Brought to you by kOS and hopefully many nerds.","CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-01T18:11:17Z","PageNum":3,"Articles":[{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T02:54:23Z","Content":"\n\u003Cp\u003EFor what I\u0027m doing I don\u0027t think TWR has to be all that accurate. I\u0027m not even checking it until I am coasting to apoapsis. So it wont change until burn time.\u003C/p\u003E\u003Cp\u003EI think I see what your saying. We can use the circular orbital speed calc at the altitude we are currently at because that is equal to current orbital velocity - verticalspeed.\u003C/p\u003E\u003Cp\u003ESo just hammering out something that will give the an idea of the math we get.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eset Radius to 600000 \u002B apoapsis.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eset iRadius to 600000 \u002B altitude.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eset tVel to ((mass*9.816)/Radius)^0.5.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eset iVel to ((mass*9.816)/iRadius)^0.5.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eset reqdV to (tVel-iVel).\u003C/span\u003E \u003C/p\u003E\u003Cp\u003E\u003Cem\u003E All of that was wrong apparently. \u003C/em\u003E\u003C/p\u003E\u003Cp\u003EThat should get me required dV. Yes? Still need to be able to derive relative burn time from that, and it doesn\u0027t need to be all that accurate. The burn shouldn\u0027t be that long or you wont end up very circular no matter what you do. Also I thought you would like to know that I got your test craft into orbit with my launch script no problem. The issue being the orbit wasn\u0027t very circular. That is why I\u0027m trying to fix that section to set the burn at a calculated time before eta:apoapsis.\u003C/p\u003E\u003Cp\u003EI will eventually work on the gravity turn section too. Right now it is just set to be nominal for 2.0 average TWR or there about.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T04:21:49Z\u0022 title=\u002209/06/2013 04:21  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Payload\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2013-09-06T03:08:25Z","Content":"\n\u003Cp\u003ENo that\u0027s wrong. You should use big G, not little g. Big G is the gravitational constant of the universe. You\u0027ve used the gravitational acceleration around Kerbin there.\u003C/p\u003E\u003Cp\u003EAlso I\u0027m not sure about the circular orbit thing you said. You\u0027d need to ask a better astronomer.\u003C/p\u003E\u003Cp\u003EEdit.\u003C/p\u003E\u003Cp\u003ESecond thing i just realised. You cannot just use the radius for your final velocity calculation because the orbit at that point is NOT circular. You need the full calculation.\u003C/p\u003E\u003Cp\u003EEdit.\u003C/p\u003E\u003Cp\u003EJust use the full calculation for everything because frankly orbits are practically never circular.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T03:24:21Z\u0022 title=\u002209/06/2013 03:24  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T03:36:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003ENo that\u0027s wrong. You should use big G, not little g. Big G is the gravitational constant of the universe. You\u0027ve used the gravitational acceleration around Kerbin there.\u003Cp\u003EAlso I\u0027m not sure about the circular orbit thing you said. You\u0027d need to ask a better astronomer.\u003C/p\u003E\u003Cp\u003EEdit.\u003C/p\u003E\u003Cp\u003ESecond thing i just realised. You cannot just use the radius for your final velocity calculation because the orbit at that point is NOT circular. You need the full calculation.\u003C/p\u003E\u003Cp\u003EEdit.\u003C/p\u003E\u003Cp\u003EJust use the full calculation for everything because frankly orbits are practically never circular.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI need to know the dV to circularize. So I do need to know what my orbital speed should be for it to be circular at that altitude. Why wouldn\u0027t the bodies gravitational constant be correct since it is the major gravitational influence and it already takes into account the mass of the orbited body?\u003C/p\u003E\u003Cp\u003EWhatever I guess I\u0027m just confused. and I looked up Newtons gravitational constant. Yea that is harder to do even still. Further more it\u0027s not one single number. EVER. I mean Never. So good luck with that. I need to redo the whole G*M thing.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EOk so the KSP wiki lists both of these numbers. G=3.5316000\u00C3\u0192\u00E2\u20AC\u201D10^12 and M=5.2915793\u00C3\u0192\u00E2\u20AC\u201D10^22. I\u0027ve never had to do any of this before. I am a computer programmer. I know how to do math. I have no idea what orbital calculations even look like. You can\u0027t give me some giant equation and expect me to look at it and know the answer is a simple constant number. This is what I am asking for. If the equations helped at all I wouldn\u0027t be asking.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003E It appears I will need to know the eccentricity to calculate iVel. I can calculate eccentricity no problem. I\u0027ve been doing it all week.\u003C/p\u003E\u003Cp\u003ESo.\u003C/p\u003E\u003Cp\u003Eset G to 3.5216000*(10^12).\u003C/p\u003E\u003Cp\u003Eset M to 5.2915793*(10^22).\u003C/p\u003E\u003Cp\u003Eset tVel to ((G*M)/Radius)^0.5.\u003C/p\u003E\u003Cp\u003EThat gets me a target velocity at least.\u003C/p\u003E\u003Cp\u003ESo I\u0027m back down to having less information than I need.\u003C/p\u003E\u003Cp\u003EI need to know how to calculate iVal now based on orbital eccentricity.\u003C/p\u003E\u003Cp\u003EWikipedia says this.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EFor an object in an eccentric orbit orbiting a much larger body, the length of the orbit decreases with eccentricity \u003Cstrong\u003Ee\u003C/strong\u003E, and is an ellipse. This can be used to obtain a more accurate estimate of the average orbital speed:\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/math/c/a/1/ca1292bae1fc983f05d621f99278e2c2.png\u0022 alt=\u0022ca1292bae1fc983f05d621f99278e2c2.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T04:55:16Z\u0022 title=\u002209/06/2013 04:55  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Payload\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2013-09-06T05:06:26Z","Content":"\n\u003Cp\u003EG = gravitational constant of the universe = 6.67384*(10^-11) \u003C/p\u003E\u003Cp\u003EM = Mass of orbited body = 5.2915793*(10^22) for Kerbin\u003C/p\u003E\u003Cp\u003E\u00C3\u017D\u00C2\u00BC = standard gravitational parameter = G*M = 3.5216000*(10^12) for Kerbin\u003C/p\u003E\u003Cp\u003EGravitational constant and gravitational parameter are not the same thing.\u003C/p\u003E\u003Cp\u003EAll of your velocities and deltav wherever you are can be calculated using Vis-Viva.\u003C/p\u003E\u003Cp\u003EYou use the product of the gravitational constant and mass OR the standard gravitational parameter:\u003C/p\u003E\u003Cp\u003Ev = G*M*(1/r-2/a)^0.5\u003C/p\u003E\u003Cp\u003Eis the same as\u003C/p\u003E\u003Cp\u003Ev = \u00C3\u017D\u00C2\u00BC*(1/r-2/a)^0.5\u003C/p\u003E\u003Cp\u003Er = your **current** distance from the center of the orbited body = altitude \u002B equatorial radius of the orbited body = altitude \u002B 600000 (for Kerbin)\u003C/p\u003E\u003Cp\u003Ea = semi-major axis of your orbit = (apoapsis\u002Bperipsis\u002B(2*equatorialRadius))/2\u003C/p\u003E\u003Cp\u003ESince we always burn at periapsis or apoapsis then r will always be:\u003C/p\u003E\u003Cp\u003EequatorialRadius \u002B apoapsis (if you\u0027re at apoapsis)\u003C/p\u003E\u003Cp\u003Eor\u003C/p\u003E\u003Cp\u003EequatorialRadius \u002B periapsis (if you\u0027re at periapsis)\u003C/p\u003E\u003Cp\u003EAlways use the full calculation. When changing your orbit all you need to do is find out your current semi-major axis then solve for your current v.\u003C/p\u003E\u003Cp\u003EThen find out the semi-major axis of your desired orbit and again solve for v.\u003C/p\u003E\u003Cp\u003Eyour r will be the same for both calculations, since you barely change your position during the burn, and if you perform half of your burn before the apoapsis/periapsis and half of it after then it all works out perfectly.\u003C/p\u003E\u003Cp\u003EThen you just subtract.\u003C/p\u003E\u003Cp\u003Etargetv - currentv = deltav\u003C/p\u003E\u003Cp\u003EIf the number is positive, then you burn prograde. If it\u0027s negative you burn retrograde.\u003C/p\u003E\u003Cp\u003ESorry to dumb this down so much but it\u0027s better than constantly elaborating.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003EThat wikipedia quote has nothing to do with what you\u0027re trying to do here.\u003C/p\u003E\u003Cp\u003EEdit.\u003C/p\u003E\u003Cp\u003EHow did you manage to circularise your orbit without vis-viva????\u003C/p\u003E\u003Cp\u003EEdit.\u003C/p\u003E\u003Cp\u003EThings get a little more interesting when you\u0027re at apoapsis and trying to increase your periapsis to be your apoapsis, but I hope you can figure this out. You just treat your current apoapsis as the periapsis of your new orbit.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T05:19:53Z\u0022 title=\u002209/06/2013 05:19  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T05:48:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EG = gravitational constant of the universe = 6.67384*(10^-11) \u003Cp\u003EM = Mass of orbited body = 5.2915793*(10^22) for Kerbin\u003C/p\u003E\u003Cp\u003E\u00C3\u017D\u00C2\u00BC = standard gravitational parameter = G*M = 3.5216000*(10^12) for Kerbin\u003C/p\u003E\u003Cp\u003EGravitational constant and gravitational parameter are not the same thing.\u003C/p\u003E\u003Cp\u003EAll of your velocities and deltav wherever you are can be calculated using Vis-Viva.\u003C/p\u003E\u003Cp\u003EYou use the product of the gravitational constant and mass OR the standard gravitational parameter:\u003C/p\u003E\u003Cp\u003Ev = G*M*(1/r-2/a)^0.5\u003C/p\u003E\u003Cp\u003Eis the same as\u003C/p\u003E\u003Cp\u003Ev = \u00C3\u017D\u00C2\u00BC*(1/r-2/a)^0.5\u003C/p\u003E\u003Cp\u003Er = your **current** distance from the center of the orbited body = altitude \u002B equatorial radius of the orbited body = altitude \u002B 600000 (for Kerbin)\u003C/p\u003E\u003Cp\u003Ea = semi-major axis of your orbit = (apoapsis\u002Bperipsis\u002B(2*equatorialRadius))/2\u003C/p\u003E\u003Cp\u003ESince we always burn at periapsis or apoapsis then r will always be:\u003C/p\u003E\u003Cp\u003EequatorialRadius \u002B apoapsis (if you\u0027re at apoapsis)\u003C/p\u003E\u003Cp\u003Eor\u003C/p\u003E\u003Cp\u003EequatorialRadius \u002B periapsis (if you\u0027re at periapsis)\u003C/p\u003E\u003Cp\u003EAlways use the full calculation. When changing your orbit all you need to do is find out your current semi-major axis then solve for your current v.\u003C/p\u003E\u003Cp\u003EThen find out the semi-major axis of your desired orbit and again solve for v.\u003C/p\u003E\u003Cp\u003Eyour r will be the same for both calculations, since you barely change your position during the burn, and if you perform half of your burn before the apoapsis/periapsis and half of it after then it all works out perfectly.\u003C/p\u003E\u003Cp\u003EThen you just subtract.\u003C/p\u003E\u003Cp\u003Etargetv - currentv = deltav\u003C/p\u003E\u003Cp\u003EIf the number is positive, then you burn prograde. If it\u0027s negative you burn retrograde.\u003C/p\u003E\u003Cp\u003ESorry to dumb this down so much but it\u0027s better than constantly elaborating.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003EThat wikipedia quote has nothing to do with what you\u0027re trying to do here.\u003C/p\u003E\u003Cp\u003EEdit.\u003C/p\u003E\u003Cp\u003EHow did you manage to circularise your orbit without vis-viva????\u003C/p\u003E\u003Cp\u003EEdit.\u003C/p\u003E\u003Cp\u003EThings get a little more interesting when you\u0027re at apoapsis and trying to increase your periapsis to be your apoapsis, but I hope you can figure this out. You just treat your current apoapsis as the periapsis of your new orbit.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo my r will not be the same for both calculations. One is 69500m and one is tOrbit. Or apoapsis if you will. I need to know my average orbital velocity when I shut the engines off at 69500. They wont be fired again until tTime which is expressed as thus. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ewhen eta:apoapsis \u0026lt; tTime then { do this. }.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI don\u0027t think you understand what I am trying to do here. I need to calculate how much dV it will take to circularize before I get to apoapsis because I need to know how long the burn at apoapsis will take. I can\u0027t wait until I\u0027m there or it\u0027s too late. I need to know that information at 69500m not at apoapsis. Of course the eccentricity of my current orbit matters. No I cannot reuse r. Unless you think 69500 and infinity are the same thing.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EI don\u0027t know... I thank you for trying to help but you really aren\u0027t. I don\u0027t understand why you are subtracting 2 from r in that equation. I think I have a handle on this just by getting an average Vo at 69500m by using an average orbital altitude. iRadius = Apoapsis\u002BPeriapsis/2\u002B600000. So then I could just pretend it was a circular orbit to begin with. So then in real terms. I can say that if my average orbital velocity at INITIAL or 69500m is iVel. Then I should be able to subtract iVel from tVel to get reqdV. Acceleration = maxthrust/mass. Then time = reqdV/acceleration and tTime = time/2.\u003C/p\u003E\u003Cp\u003EIs this totally off base or what? Seems right to me. At this point all I see is a sea of Greek alphabet.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T06:22:26Z\u0022 title=\u002209/06/2013 06:22  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Payload\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2013-09-06T06:29:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003ENo my r will not be the same for both calculations.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUm. when I said \u0022current\u0022 i meant \u0022during the burn\u0022. And that doesn\u0027t change for circularisation does it. Why would you assume that I\u0027m telling you to calculate burns NOT at the place where you actually burn, come on...\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003EI don\u0027t think you understand what I am trying to do here.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI do. Just read what I gave you carefully and apply it. I\u0027ve used it before for very precise orbit changes and it works.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003E I don\u0027t understand why you are subtracting 2 from r in that equation\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELOL WTF? Are you telling me you don\u0027t understand orders of operations?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T06:34:17Z\u0022 title=\u002209/06/2013 06:34  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T07:49:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ELOL WTF? Are you telling me you don\u0027t understand orders of operations?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre you telling me you think you understand the op order when the man who made kOS himself said the thing executes divides and multiplies out of order sometimes. So yea. I don\u0027t understand that. So thanks for proving your excellent mathematical prowess but it still isn\u0027t helping me or any other non mathematician. If you expect me to understand through text you must make it as simple as possible.\u003C/p\u003E\u003Cp\u003EI don\u0027t think you understand. See because you don\u0027t even understand how my code works. None of this math matters when I am actually burning. It matters before. Long before. The burn length isn\u0027t used when I am burning. The code doesn\u0027t even care. It sets throttle to 1 at tTime and sets throttle to .1 when periapsis is 10% of apoapsis and it sets throttle to 0 when periapsis is 1% of apoapsis OR when apoapsis is greater than the projected orbit altitude by 1km. \u003C/p\u003E\u003Cp\u003EFor now, I have been setting tTime by pure observation. All I care about is how long that burn will take. The code handles the burn it-self with logic and not obtuse use of arithmetic. I succeeded a long time ago for writing a script that will orbit one craft. I want to orbit all the crafts all the time provided you have the thrust and dV.\u003C/p\u003E\u003Cp\u003EI do thank you for helping me with the constants. I would have never known that unless you told me. Please bear with me. You do have to understand that terms like \u0022the full thing\u0022 that makes no sense to me. I don\u0027t even know what half the thing is. In essence I was asking what the full thing is.\u003C/p\u003E\u003Cp\u003E I suggested that one could get the average Radius of the orbit and preform that calculation as if the orbit where circular.\u003C/p\u003E\u003Cp\u003E Because average velocity is all that matters.\u003C/p\u003E\u003Cp\u003E We know the average velocity for a circular orbit because it is the same as the actual orbital velocity.\u003C/p\u003E\u003Cp\u003ESo therefore I must be able to conclude that \u003Cem\u003Eu\u003C/em\u003E/averageradius^0.5 = average orbital velocity or my Initial as it where. iVel \u003C/p\u003E\u003Cp\u003EAnd I want the target velocity of the apoapsis which we can also say is the average orbital velocity at that height. tVel\u003C/p\u003E\u003Cp\u003EIf all of the previous things are true. Then reqdV is what? I know the target velocity will be less based on the law of orbits.\u003C/p\u003E\u003Cp\u003EReal case examples.\u003C/p\u003E\u003Cp\u003EI exit the atmosphere at 69500 and my apoapsis is 100km. My Periapsis is 0km. \u003Cem\u003EThis is actually what I have observed from nearly nominal accent perameters.\u003C/em\u003E The average radius is 50Km\u002B600000. Since we won\u0027t be hitting the atmosphere, much less the ground, anytime soon. The fact that the orbit is elliptical doesn\u0027t really matter. The period and average velocity are the exact same for a no atmosphere 50km orbit and an elliptical 100km by 0km orbit. I am having trouble understanding how to derive dV from those two values.\u003C/p\u003E\u003Cp\u003ESo please forgive me that I am asking you to be verbose. I really don\u0027t understand half of the things you are talking about. I understand how to make the computer do math. I prefer to be as verbose as possible when I am testing arithmetic code so that I can debug it more easily. So yes I tend to do math in stages and reduce it when I know it is correct.\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2013-09-06T09:06:31Z","Content":"\n\u003Cp\u003EThink of it as a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Hohmann_transfer_orbit\u0022 rel=\u0022external nofollow\u0022\u003EHohmann transfer orbit\u003C/a\u003E where you start off in the elliptical orbit.\u003C/p\u003E\u003Cp\u003ESo provided you are circularizing at Apoapsis you need to burn:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/Uds5LOU.png\u0022 alt=\u0022Uds5LOU.png\u0022\u003E\u003C/p\u003E\u003Cp\u003Em/s of dV.\u003C/p\u003E\u003Cp\u003EI don\u0027t really know why you would bother calculating that though. You have access to apoapsis and periapsis height and eta. So you can just make a control loop:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclearscreen.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Waiting for apo\u0022.\u003Cbr\u003E\u003Cbr\u003Eset I to 0.\u003Cbr\u003Eset F to 0.\u003Cbr\u003Elock steering to prograde.\u003Cbr\u003Eset X to 1.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait until ETA:APOAPSIS \u0026lt; 30.\u003Cbr\u003Eprint \u0022Initializing circularization protocol!\u0022.\u003Cbr\u003E\u003Cbr\u003Euntil F=1 {\u003Cbr\u003Eset error to (apoapsis - periapsis)/(apoapsis\u002Bperiapsis\u002B1200000).\u003Cbr\u003Eif error\u0026gt;X { set F to 1. }.\u003Cbr\u003Elock throttle to 10*error.\u003Cbr\u003E\u003Cbr\u003Eset TAp to eta:apoapsis.\u003Cbr\u003Eset TPe to eta:periapsis.\u003Cbr\u003E\u003Cbr\u003Eif (TPe\u0026lt;TAp) {\u003Cbr\u003Eset X to 200*(TAp - 2*TPe)/(0.5*(TAp-TPe)).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eif (TAp\u0026lt;TPe) {\u003Cbr\u003Eset X to 200*(0 - TAp)/(0.5*(TPe-TAp)).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eif X\u0026gt;90 {set X to 90.}.\u003Cbr\u003Eif X\u0026lt;-90 {set X to -90.}.\u003Cbr\u003Elock steering to prograde \u002B R(0,X\u002BI,0).\u003Cbr\u003E\u003Cbr\u003Eset X to error.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Done!\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is what I wrote as a circularization script. It is still a bit buggy (And I need to fix it to work with lowering orbits) but it usually gets the difference between apo and peri down to 100 meters.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2013-09-06T09:56:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003EI don\u0027t think you understand. See because you don\u0027t even understand how my code works. None of this math matters when I am actually burning. It matters before. Long before. The burn length isn\u0027t used when I am burning. The code doesn\u0027t even care. It sets throttle to 1 at tTime and sets throttle to .1 when periapsis is 10% of apoapsis and it sets throttle to 0 when periapsis is 1% of apoapsis OR when apoapsis is greater than the projected orbit altitude by 1km.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027re right I didn\u0027t know what your code was doing, and I see where the confusion comes from now. It would never occur to me to do it your way because that\u0027s not how real rocket scientists do it. They do it by calculating thrust and timing the burn correctly, which is what I was attempting to show you. This way doesn\u0027t care about checking for the desired orbit. it only measures the initial orbit and calculates necessary dv to get to the desired orbit. And that\u0027s where precise acceleration and timing come in. Maybe it\u0027s just a matter of preference. I like to do things realistically when I can.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003E... average velocity... \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EJust no. I have to assume you mean average speed, because the average orbital velocity is 0 for all elliptical orbits, but still.... no. Just forget that notion. It\u0027s irrelevant.\u003C/p\u003E\u003Cp\u003EI really don\u0027t know what else to do. I\u0027ve explained how to calculate the burn time and how to calculate dv and assuming a constant force (which is also easy to do by dynamically throttling down) that is ALL you need to change your orbit. Nothing else.\u003C/p\u003E\u003Cp\u003EMaybe it\u0027ll be better if each one of us just tries their own way and we\u0027ll test each one.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ralathon\u0022 data-cite=\u0022Ralathon\u0022\u003E\u003Cdiv\u003EI don\u0027t really know why you would bother calculating that though. You have access to apoapsis and periapsis height and eta. So you can just make a control loop:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E....\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is what I wrote as a circularization script. It is still a bit buggy (And I need to fix it to work with lowering orbits) but it usually gets the difference between apo and peri down to 100 meters.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell if you code works then we should use it although (correct me if I\u0027m wrong) your script will use more processor time, because it loops. I don\u0027t know. My way just does the initial calculations and locks the throttle to a function of mass then waits a specific amount of time.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T10:31:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ralathon\u0022 data-cite=\u0022Ralathon\u0022\u003E\u003Cdiv\u003EThink of it as a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Hohmann_transfer_orbit\u0022 rel=\u0022external nofollow\u0022\u003EHohmann transfer orbit\u003C/a\u003E where you start off in the elliptical orbit.\u003Cp\u003ESo provided you are circularizing at Apoapsis you need to burn:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/Uds5LOU.png\u0022 alt=\u0022Uds5LOU.png\u0022\u003E\u003C/p\u003E\u003Cp\u003Em/s of dV.\u003C/p\u003E\u003Cp\u003EI don\u0027t really know why you would bother calculating that though. You have access to apoapsis and periapsis height and eta. So you can just make a control loop:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclearscreen.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Waiting for apo\u0022.\u003Cbr\u003E\u003Cbr\u003Eset I to 0.\u003Cbr\u003Eset F to 0.\u003Cbr\u003Elock steering to prograde.\u003Cbr\u003Eset X to 1.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait until ETA:APOAPSIS \u0026lt; 30.\u003Cbr\u003Eprint \u0022Initializing circularization protocol!\u0022.\u003Cbr\u003E\u003Cbr\u003Euntil F=1 {\u003Cbr\u003Eset error to (apoapsis - periapsis)/(apoapsis\u002Bperiapsis\u002B1200000).\u003Cbr\u003Eif error\u0026gt;X { set F to 1. }.\u003Cbr\u003Elock throttle to 10*error.\u003Cbr\u003E\u003Cbr\u003Eset TAp to eta:apoapsis.\u003Cbr\u003Eset TPe to eta:periapsis.\u003Cbr\u003E\u003Cbr\u003Eif (TPe\u0026lt;TAp) {\u003Cbr\u003Eset X to 200*(TAp - 2*TPe)/(0.5*(TAp-TPe)).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eif (TAp\u0026lt;TPe) {\u003Cbr\u003Eset X to 200*(0 - TAp)/(0.5*(TPe-TAp)).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eif X\u0026gt;90 {set X to 90.}.\u003Cbr\u003Eif X\u0026lt;-90 {set X to -90.}.\u003Cbr\u003Elock steering to prograde \u002B R(0,X\u002BI,0).\u003Cbr\u003E\u003Cbr\u003Eset X to error.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Done!\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is what I wrote as a circularization script. It is still a bit buggy (And I need to fix it to work with lowering orbits) but it usually gets the difference between apo and peri down to 100 meters.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOMG I don\u0027t know why I would want the computer to do the calculation once when it could obviously be wasting cpu cycles doing over and over. Is that a trick question? You don\u0027t need a control loop to handle this. I see your loop doesn\u0027t even start until eta:apoapsis \u0026lt; 30. What if you have a burn time longer than one minute? What happens then? That could happen with a highly elliptical orbit and a low TWR insertion stage.\u003C/p\u003E\u003Cp\u003EOk I\u0027ve cracked it anyway. I think....\u003C/p\u003E\u003Cp\u003E3.5316000e12/650000^.5=2330ms. Exactly like here. \u003Ca href=\u0022http://files.arklyffe.com/orbcalc.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://files.arklyffe.com/orbcalc.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Eand 3.5316000e12/700000^.5=2246ms. Also closely corroborated by that Orbital calc.\u003C/p\u003E\u003Cp\u003ESo that is terms iVel and tVel solved. tVel-iVel= -84ms. That also jives with what the orbital calc is telling me for circularizing at apoapsis with a 100k x 0km orbit. All but the sign anyway. So I need to do a sign change or have I done some math wrong?\u003C/p\u003E\u003Cp\u003EWhat is even worse is I\u0027ve been doing those calcs on paper for the last three hours and not getting the right answers. You know what my problem was? I wrote down 3.5316000x10.e12.... Face palm... Yep that is one more 0 than 3.5316000e12... Ugghhhh...\u003C/p\u003E\u003Cp\u003ETHOSE DANG ZEROS... Epic fail...\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EJust no. I have to assume you mean average speed, because the average orbital velocity is 0 for all elliptical orbits, but still.... no. Just forget that notion. It\u0027s irrelevant.\u003Cp\u003EI really don\u0027t know what else to do. I\u0027ve explained how to calculate the burn time and how to calculate dv and assuming a constant force (which is also easy to do by dynamically throttling down) that is ALL you need to change your orbit. Nothing else.\u003C/p\u003E\u003Cp\u003EMaybe it\u0027ll be better if each one of us just tries their own way and we\u0027ll test each one.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENope a 50k x 50k orbit is computationally the same as 100k x 0k in this case. As a matter of fact. Do the math yourself. I just did. If you just do the math like the orbit is circular, but you use your average orbital altitude like.... apoapsis\u002Bperiapsis/2 \u002B 600000. Does that not = 650000. It does and here is why.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe transverse orbital speed is inversely proportional to the distance to the central body because of the law of conservation of angular momentum, or equivalently, Kepler\u0027s second law. This states that as a body moves around its orbit during a fixed amount of time, the line from the barycenter to the body sweeps a constant area of the orbital plane, regardless of which part of its orbit the body traces during that period of time. This law is usually stated as \u0022equal areas in equal time.\u003C/p\u003E\u003Cp\u003EThis law implies that the body moves faster near its periapsis than near its apoapsis, because at the smaller distance it needs to trace a greater arc to cover the same area.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMind=Blown. And yes I meant speed.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T10:45:41Z\u0022 title=\u002209/06/2013 10:45  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Payload\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2013-09-06T11:01:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EOMG I don\u0027t know why I would want the computer to do the calculation once when it could obviously be wasting cpu cycles doing over and over. Is that a trick question? You don\u0027t need a control loop to handle this. I see your loop doesn\u0027t even start until eta:apoapsis \u0026lt; 30. What if you have a burn time longer than one minute? What happens then? That could happen with a highly elliptical orbit and a low TWR insertion stage.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat else do you want to use those CPU cycles for? Are you trying to play doom on kOS while circularizing? If you\u0027re worried that it hogs down your actual CPU just add a \u0022wait 0.05\u0022 in the loop. A control loop is less error prone and more versatile in my opinion.\u003C/p\u003E\u003Cp\u003EOh, and if you\u0027d read the script you\u0027d see that if the burntime was longer than 1 minute the ship would just pitch up or down to keep eta:apoapsis close to 0. So it would work just fine.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T11:28:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ralathon\u0022 data-cite=\u0022Ralathon\u0022\u003E\u003Cdiv\u003EWhat else do you want to use those CPU cycles for? Are you trying to play doom on kOS while circularizing? If you\u0027re worried that it hogs down your actual CPU just add a \u0022wait 0.05\u0022 in the loop. A control loop is less error prone and more versatile in my opinion.\u003Cp\u003EOh, and if you\u0027d read the script you\u0027d see that if the burntime was longer than 1 minute the ship would just pitch up or down to keep eta:apoapsis close to 0. So it would work just fine.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t know about you, but my FPS tanks drastically when running anything but simple loops in kOS. Also my answer to what could I be doing with those CPU cycles. I don\u0027t know... Hmm stage watching maybe... Perhaps.. Low fuel warning. Basically anything I want.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2013-09-06T11:29:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003E Also closely corroborated by that Orbital calc.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn other words wrong. You keep confusing concepts and variables. All you did was calculate the difference between orbital speeds of two different circular orbits. That\u0027s not the same as calculating the necessary dv for each burn. Even on that page it tells you how much dv you need to expend:\u003C/p\u003E\u003Cp\u003Eperiapsis: 1250.0000 km, apoapsis: 1300.0000 km\u003C/p\u003E\u003Cp\u003Eperiapsis: 650.0000 km AMSL, apoapsis: 700.0000 km AMSL\u003C/p\u003E\u003Cp\u003Evelocity at periapsis: 1697.0 m/s, at apoapsis: 1631.7 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHohmann delta-v at periapsis: 16.4 m/s, at apoapsis: 16.2 m/s\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EVesc at periapsis: 2376.7 m/s, at apoapsis: 2330.5 m/s\u003C/p\u003E\u003Cp\u003Eperiod: 80.2 minutes\u003C/p\u003E\u003Cp\u003Esemimajor axis: 1275.0000 km\u003C/p\u003E\u003Cp\u003Esemiminor axis: 1274.7549 km\u003C/p\u003E\u003Cp\u003Eeccentricity: 0.0\u003C/p\u003E\u003Cp\u003Especific orbital energy: -1384.4682 kJ/kg\u003C/p\u003E\u003Cp\u003EWhy is this so hard to grasp? You keep screwing up because you\u0027re trying to do short cuts and it\u0027s getting ridiculous. If you want to time your burn with a variable then just do what I explained to you.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T12:09:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EIn other words wrong. You keep confusing concepts and variables. All you did was calculate the difference between orbital speeds of two different circular orbits. That\u0027s not the same as calculating the necessary dv for each burn. Even on that page it tells you how much dv you need to expend:\u003Cp\u003Eperiapsis: 1250.0000 km, apoapsis: 1300.0000 km\u003C/p\u003E\u003Cp\u003Eperiapsis: 650.0000 km AMSL, apoapsis: 700.0000 km AMSL\u003C/p\u003E\u003Cp\u003Evelocity at periapsis: 1697.0 m/s, at apoapsis: 1631.7 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHohmann delta-v at periapsis: 16.4 m/s, at apoapsis: 16.2 m/s\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EVesc at periapsis: 2376.7 m/s, at apoapsis: 2330.5 m/s\u003C/p\u003E\u003Cp\u003Eperiod: 80.2 minutes\u003C/p\u003E\u003Cp\u003Esemimajor axis: 1275.0000 km\u003C/p\u003E\u003Cp\u003Esemiminor axis: 1274.7549 km\u003C/p\u003E\u003Cp\u003Eeccentricity: 0.0\u003C/p\u003E\u003Cp\u003Especific orbital energy: -1384.4682 kJ/kg\u003C/p\u003E\u003Cp\u003EWhy is this so hard to grasp? You keep screwing up because you\u0027re trying to do short cuts and it\u0027s getting ridiculous. If you want to time your burn with a variable then just do what I explained to you.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EToo bad it\u0027s not wrong. You aren\u0027t understanding what the calculator is telling you.\u003C/p\u003E\u003Cp\u003Eperiapsis: 600.0000 km, apoapsis: 700.0000 km\u003C/p\u003E\u003Cp\u003Eperiapsis: 0.0000 km AMSL, apoapsis: 100.0000 km AMSL\u003C/p\u003E\u003Cp\u003Evelocity at periapsis: 2517.3 m/s, at apoapsis: 2157.7 m/s\u003C/p\u003E\u003Cp\u003EHohmann delta-v at periapsis: 91.6 m/s, at apoapsis: 88.1 m/s\u003C/p\u003E\u003Cp\u003EVesc at periapsis: 3430.4 m/s, at apoapsis: 3176.0 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eperiod: 29.2 minutes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Esemimajor axis: 650.0000 km\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Esemiminor axis: 648.0741 km\u003C/p\u003E\u003Cp\u003Eeccentricity: 0.1\u003C/p\u003E\u003Cp\u003Especific orbital energy: -2715.6877 kJ/kg\u003C/p\u003E\u003Cp\u003E-----------------------------------------------------------------------------------------\u003C/p\u003E\u003Cp\u003Eperiapsis: 650.0000 km, apoapsis: 650.0000 km\u003C/p\u003E\u003Cp\u003Eperiapsis: 50.0000 km AMSL, apoapsis: 50.0000 km AMSL\u003C/p\u003E\u003Cp\u003Evelocity at periapsis: 2330.5 m/s, at apoapsis: 2330.5 m/s\u003C/p\u003E\u003Cp\u003EHohmann delta-v at periapsis: 0.0 m/s, at apoapsis: 0.0 m/s\u003C/p\u003E\u003Cp\u003EVesc at periapsis: 3295.9 m/s, at apoapsis: 3295.9 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eperiod: 29.2 minutes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Esemimajor axis: 650.0000 km\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Esemiminor axis: 650.0000 km\u003C/p\u003E\u003Cp\u003Eeccentricity: 0.0\u003C/p\u003E\u003Cp\u003Especific orbital energy: -2715.6877 kJ/kg\u003C/p\u003E\u003Cp\u003ENoticing anything similar?\u003C/p\u003E\u003Cp\u003EYou can do that with any orbit.\u003C/p\u003E\u003Cp\u003E_______________________________________________\u003C/p\u003E\u003Cp\u003E50k and 200k what\u0027s the SMA? It\u0027s 725k that\u0027s what. What is the SMA of 125k circular orbit? Is it 725k? What is the orbital period?\u003C/p\u003E\u003Cp\u003Eperiapsis: 650.0000 km, apoapsis: 800.0000 km\u003C/p\u003E\u003Cp\u003Eperiapsis: 50.0000 km AMSL, apoapsis: 200.0000 km AMSL\u003C/p\u003E\u003Cp\u003Evelocity at periapsis: 2448.1 m/s, at apoapsis: 1989.1 m/s\u003C/p\u003E\u003Cp\u003EHohmann delta-v at periapsis: 117.6 m/s, at apoapsis: 111.6 m/s\u003C/p\u003E\u003Cp\u003EVesc at periapsis: 3295.9 m/s, at apoapsis: 2970.9 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eperiod: 34.4 minutes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Esemimajor axis: 725.0000 km\u003C/p\u003E\u003Cp\u003Esemiminor axis: 721.1103 km\u003C/p\u003E\u003Cp\u003Eeccentricity: 0.1\u003C/p\u003E\u003Cp\u003Especific orbital energy: -2434.7545 kJ/kg\u003C/p\u003E\u003Cp\u003E-------------------------------------------------------------------------------------------\u003C/p\u003E\u003Cp\u003EWhat about 125 circular.\u003C/p\u003E\u003Cp\u003Eperiapsis: 725.0000 km, apoapsis: 725.0000 km\u003C/p\u003E\u003Cp\u003Eperiapsis: 125.0000 km AMSL, apoapsis: 125.0000 km AMSL\u003C/p\u003E\u003Cp\u003Evelocity at periapsis: 2206.7 m/s, at apoapsis: 2206.7 m/s\u003C/p\u003E\u003Cp\u003EHohmann delta-v at periapsis: 0.0 m/s, at apoapsis: 0.0 m/s\u003C/p\u003E\u003Cp\u003EVesc at periapsis: 3120.7 m/s, at apoapsis: 3120.7 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eperiod: 34.4 minutes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Esemimajor axis: 725.0000 km\u003C/p\u003E\u003Cp\u003Esemiminor axis: 725.0000 km\u003C/p\u003E\u003Cp\u003Eeccentricity: 0.0\u003C/p\u003E\u003Cp\u003Especific orbital energy: -2434.7545 kJ/kg\u003C/p\u003E\u003Cp\u003E_________________________________________________________\u003C/p\u003E\u003Cp\u003EBut lets do yours.\u003C/p\u003E\u003Cp\u003EYou have set periapsis to 650k and apoapsis to 700k. Alright no problem\u003C/p\u003E\u003Cp\u003E650000\u002B700000/2 \u002B 600000 = 1275000 SMA? Lets just see..\u003C/p\u003E\u003Cp\u003Eperiapsis: 1250.0000 km, apoapsis: 1300.0000 km\u003C/p\u003E\u003Cp\u003Eperiapsis: 650.0000 km AMSL, apoapsis: 700.0000 km AMSL\u003C/p\u003E\u003Cp\u003Evelocity at periapsis: 1697.0 m/s, at apoapsis: 1631.7 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHohmann delta-v at periapsis: 16.4 m/s, at apoapsis: 16.2 m/s\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EVesc at periapsis: 2376.7 m/s, at apoapsis: 2330.5 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eperiod: 80.2 minutes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Esemimajor axis: 1275.0000 km\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Esemiminor axis: 1274.7549 km\u003C/p\u003E\u003Cp\u003Eeccentricity: 0.0\u003C/p\u003E\u003Cp\u003Especific orbital energy: -1384.4682 kJ/kg\u003C/p\u003E\u003Cp\u003ENote the orbital period.\u003C/p\u003E\u003Cp\u003ENow lets see what the SMA is for a 675 circular... Hmmm. Could it possibly be 1275k. I don\u0027t know since I am apparently dumb. Lets have the calculator find out for us.\u003C/p\u003E\u003Cp\u003Eperiapsis: 1275.0000 km, apoapsis: 1275.0000 km\u003C/p\u003E\u003Cp\u003Eperiapsis: 675.0000 km AMSL, apoapsis: 675.0000 km AMSL\u003C/p\u003E\u003Cp\u003Evelocity at periapsis: 1664.0 m/s, at apoapsis: 1664.0 m/s\u003C/p\u003E\u003Cp\u003EHohmann delta-v at periapsis: 0.0 m/s, at apoapsis: 0.0 m/s\u003C/p\u003E\u003Cp\u003EVesc at periapsis: 2353.3 m/s, at apoapsis: 2353.3 m/s\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eperiod: 80.2 minutes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Esemimajor axis: 1275.0000 km\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Esemiminor axis: 1275.0000 km\u003C/p\u003E\u003Cp\u003Eeccentricity: 0.0\u003C/p\u003E\u003Cp\u003Especific orbital energy: -1384.4682 kJ/kg\u003C/p\u003E\u003Cp\u003EThat must be wizardry I guess.\u003C/p\u003E\u003Cp\u003EThus I pontificate that periapsis\u002Bapoapsis/2 \u002B 600000 is exactly the same calc as circular. Thus you can treat any orbit as circular as long as you replace orbital altitude with the average orbital altitude. The periods are the same. The average speed is the same. The SMA is the same.\u003C/p\u003E\u003Cp\u003ERead this.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Orbital_speed\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Orbital_speed\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s a mathematical fact. You only need to know your average orbital altitude to get the SMA. Being in a 0k by 100k orbit is exactly the same as being in a 50k x 50k orbit. \u003Cem\u003EWell if you don\u0027t factor in that smacking into the ground problem anyway.\u003C/em\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThis is stupid really because we are arguing about the same thing just thinking about it differently. We should stop now. I\u0027m getting correct answers and if it wasn\u0027t for you I wouldn\u0027t be.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T12:49:43Z\u0022 title=\u002209/06/2013 12:49  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Payload\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2013-09-06T13:38:27Z","Content":"\n\u003Cp\u003EIf you look at a dictionary definition for \u0022Red Herring\u0022, then you\u0027ll see the above post. But that\u0027s ok, I\u0027ll just wait for your script.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T14:20:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EIf you look at a dictionary definition for \u0022Red Herring\u0022, then you\u0027ll see the above post. But that\u0027s ok, I\u0027ll just wait for your script.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy wait.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset fApoapsis to 700000.\u003Cbr\u003Eset fPeriapsis to 650000.\u003Cbr\u003E\u003Cbr\u003Eset Gk to 3.5316000*10^12.\u003Cbr\u003Eset Radius to 600000 \u002B fApoapsis.\u003Cbr\u003Eset iRadius to 600000 \u002B ((fApoapsis\u002BfPeriapsis)/2).\u003Cbr\u003Eset tVel to (Gk/Radius)^0.5.\u003Cbr\u003Eset iVel to (Gk/iRadius)^0.5.\u003Cbr\u003Eset reqdV to (iVel-tVel).\u003Cbr\u003Eset acceleration to (maxthrust/mass).\u003Cbr\u003Eset burnTime to (reqdV/acceleration).\u003Cbr\u003Eset tTime to (burnTime/2).\u003Cbr\u003Eprint \u0022\u0022.\u003Cbr\u003Eprint Radius.\u003Cbr\u003Eprint iRadius.\u003Cbr\u003Eprint iVel.\u003Cbr\u003Eprint tVel.\u003Cbr\u003Eprint reqdV.\u003Cbr\u003Eprint burnTime.\u003Cbr\u003Eprint tTime.\u003Cbr\u003E\u003Cbr\u003Eset aRadius to 600000 \u002B fApoapsis.\u003Cbr\u003Eset pRadius to 600000 \u002B fPeriapsis.\u003Cbr\u003Eset aVel to (Gk/aRadius)^0.5.\u003Cbr\u003Eset pVel to (Gk/pRadius)^0.5.\u003Cbr\u003Eset reqdV2 to ((pVel-aVel)/2).\u003Cbr\u003Eset acceleration2 to (maxthrust/mass).\u003Cbr\u003Eset burnTime2 to (reqdV/acceleration).\u003Cbr\u003Eset tTime2 to (burnTime/2).\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint aRadius.\u003Cbr\u003Eprint pRadius.\u003Cbr\u003Eprint aVel.\u003Cbr\u003Eprint pVel.\u003Cbr\u003Eprint reqdV2.\u003Cbr\u003Eprint burnTime2.\u003Cbr\u003Eprint tTime2.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eif burnTime = burnTime2 { print \u0022The burntimes are the same or this wouldn\u0027t print.\u0022. }.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/zoS1Dnr.jpg\u0022 alt=\u0022zoS1Dnr.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003ENow add your orbital calc to the bottom and see how different your burnTime is than mine. I\u0027m interested since kOS barely has 1 second resolution anyway. Use the same constant since that is what is on the KSP wiki. \u003C/p\u003E\u003Cp\u003EWell I guess we will have to call that close enough to good.\u003C/p\u003E\n"},{"CreatedByName":"Desrtfox","CreatedById":80185,"CreatedDateTime":"2013-09-06T16:00:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003EWhy wait.\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset fApoapsis to 700000.\u003Cbr\u003Eset fPeriapsis to 650000.\u003Cbr\u003E\u003Cbr\u003Eset Gk to 3.5316000*10^12.\u003Cbr\u003Eset Radius to 600000 \u002B fApoapsis.\u003Cbr\u003Eset iRadius to 600000 \u002B ((fApoapsis\u002BfPeriapsis)/2).\u003Cbr\u003Eset tVel to (Gk/Radius)^0.5.\u003Cbr\u003Eset iVel to (Gk/iRadius)^0.5.\u003Cbr\u003Eset reqdV to (iVel-tVel).\u003Cbr\u003Eset acceleration to (maxthrust/mass).\u003Cbr\u003Eset burnTime to (reqdV/acceleration).\u003Cbr\u003Eset tTime to (burnTime/2).\u003Cbr\u003Eprint \u0022\u0022.\u003Cbr\u003Eprint Radius.\u003Cbr\u003Eprint iRadius.\u003Cbr\u003Eprint iVel.\u003Cbr\u003Eprint tVel.\u003Cbr\u003Eprint reqdV.\u003Cbr\u003Eprint burnTime.\u003Cbr\u003Eprint tTime.\u003Cbr\u003E\u003Cbr\u003Eset aRadius to 600000 \u002B fApoapsis.\u003Cbr\u003Eset pRadius to 600000 \u002B fPeriapsis.\u003Cbr\u003Eset aVel to (Gk/aRadius)^0.5.\u003Cbr\u003Eset pVel to (Gk/pRadius)^0.5.\u003Cbr\u003Eset reqdV2 to ((pVel-aVel)/2).\u003Cbr\u003Eset acceleration2 to (maxthrust/mass).\u003Cbr\u003Eset burnTime2 to (reqdV/acceleration).\u003Cbr\u003Eset tTime2 to (burnTime/2).\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint aRadius.\u003Cbr\u003Eprint pRadius.\u003Cbr\u003Eprint aVel.\u003Cbr\u003Eprint pVel.\u003Cbr\u003Eprint reqdV2.\u003Cbr\u003Eprint burnTime2.\u003Cbr\u003Eprint tTime2.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eif burnTime = burnTime2 { print \u0022The burntimes are the same or this wouldn\u0027t print.\u0022. }.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/zoS1Dnr.jpg\u0022 alt=\u0022zoS1Dnr.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003ENow add your orbital calc to the bottom and see how different your burnTime is than mine. I\u0027m interested since kOS barely has 1 second resolution anyway. Use the same constant since that is what is on the KSP wiki. \u003C/p\u003E\u003Cp\u003EWell I guess we will have to call that close enough to good.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for this Payload. I\u0027m going to test out setting up actual burn times for my circularization burn scripts now, considering mine was more of the loop until correct method, and while working, was rather slow.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-06T16:21:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Desrtfox\u0022 data-cite=\u0022Desrtfox\u0022\u003E\u003Cdiv\u003EThanks for this Payload. I\u0027m going to test out setting up actual burn times for my circularization burn scripts now, considering mine was more of the loop until correct method, and while working, was rather slow.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDon\u0027t thank me yet. I may not be right! I only think I\u0027m right! Plus I\u0027m pretty sure that even though this works just fine for burn time. It may not work very well if you are counting on the dV to be accurate for MECO. Like I said, I use pure logic for MECO.\u003C/p\u003E\u003Cp\u003ECurrent testing says it reduces my eccentricity by a factor of 8.\u003C/p\u003E\u003Cp\u003EI bet someone recognizes this baby.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/0D7gSkv.jpg\u0022 alt=\u00220D7gSkv.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EBefore I added the burn time calc, this was giving me a .008 eccentricity. Orbital parameters at time of calc. I was 69500m into a -100k x 100k orbit. \u003C/p\u003E\u003Cp\u003EStill I prefer this.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/gqpKV4q.jpg\u0022 alt=\u0022gqpKV4q.jpg\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/p4KbbHX.jpg\u0022 alt=\u0022p4KbbHX.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EThat is the Jebpollo. It\u0027s got everything for a single guy. You will just have to pretend there are three.\u003C/p\u003E\u003Cp\u003EHere is the craft file for Jebpollo. \u003Ca href=\u0022http://pastebin.com/2zp4N9MU\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/2zp4N9MU\u003C/a\u003E Just save it as Jebpollo.craft in notepad. Make sure you are set it to all files so you don\u0027t get Jebpollo.craft.txt. \u003C/p\u003E\u003Cp\u003EHere is the script that runs her. Make sure you remove the comments. Comments don\u0027t parse yet as far as I know. I just haven\u0027t worked the asparagus variables into the menu system yet. I haven\u0027t quite decided how I will do it. So that is why the comments are there incase you want to use asparagus staging you will know how.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003Eset rpAlt to 100.\u003Cbr\u003Eset rProgram to 90.\u003Cbr\u003Eset r to 180.\u003Cbr\u003Eset p to 0.\u003Cbr\u003Eset y to 0.\u003Cbr\u003Eset orbit to 0.\u003Cbr\u003Eset tOrbit to 100000.\u003Cbr\u003Eset hAtmo to 69500.\u003Cbr\u003Eset tAngle to up \u002B R(y,p,r).\u003Cbr\u003Eset tThr to 1.\u003Cbr\u003Eset turn1 to 9999.\u003Cbr\u003Eset turn2 to 14999.\u003Cbr\u003Eset turn3 to 19999.\u003Cbr\u003Eset turn4 to 24999.\u003Cbr\u003Eset turn5 to 49000.\u003Cbr\u003Eset selection to 0.\u003Cbr\u003Eset flagup to 0.\u003Cbr\u003Eset flagdown to 0.\u003Cbr\u003Eset confirm to 0.\u003Cbr\u003E                    // If your rocket has no aparagus stages set Count to 0.\u003Cbr\u003Eset Count to 0.     // For aparagus. Count = Number of asparagus stages.\u003Cbr\u003Eset aspFuel to 0.   // aspFuel = The amount of liquidfuel in one asparagus stage.\u003Cbr\u003E\u003Cbr\u003Eon abort { toggle ag2. wait until verticalspeed \u0026lt; 0. toggle ag3. }.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Select your orbit altitude.\u0022.\u003Cbr\u003Eprint \u0022--------------------------------\u0022.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint \u0022Use action group 9 to add 10Km to orbit alt.\u0022.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint \u0022Use action group 8 to remove 10Km from orbit alt.\u0022.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint \u0022Use action group 7 to confirm orbit alt.\u0022.\u003Cbr\u003E\u003Cbr\u003Euntil selection = 1\u003Cbr\u003E {\u003Cbr\u003Eon ag9 set flagup to 1.\u003Cbr\u003Eon ag8 set flagdown to 1.\u003Cbr\u003Eon ag7 set confirm to 1.\u003Cbr\u003E\u003Cbr\u003E if flagup = 1\u003Cbr\u003E {\u003Cbr\u003E clearscreen.\u003Cbr\u003E print \u0022Select your orbit altitude.\u0022.\u003Cbr\u003E print \u0022--------------------------------\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022Default orbit alt is set to \u0022 \u002B tOrbit \u002B \u0022m\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022Use action group 9 to add 10Km to orbit alt.\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022Use action group 8 to remove 10Km from orbit alt.\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022Use action group 7 to confirm orbit alt.\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E set tOrbit to tOrbit \u002B 10000.\u003Cbr\u003E print \u0022You have selected \u0022 \u002B tOrbit.\u003Cbr\u003E toggle ag9.\u003Cbr\u003E set flagup to 0.\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003E if flagdown = 1\u003Cbr\u003E {\u003Cbr\u003E clearscreen.\u003Cbr\u003E print \u0022Select your orbit altitude.\u0022.\u003Cbr\u003E print \u0022--------------------------------\u0022.\u003Cbr\u003E print \u0022\u0022.\u003Cbr\u003E print \u0022Default orbit alt is set to \u0022 \u002B tOrbit \u002B \u0022m\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022Use action group 9 to add 10Km to orbit alt.\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022Use action group 8 to remove 10Km from orbit alt.\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022Use action group 7 to confirm orbit alt.\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E set tOrbit to tOrbit - 10000.\u003Cbr\u003E if tOrbit \u0026lt; 80000 { set tOrbit to 80000. }.\u003Cbr\u003E print \u0022You have selected \u0022 \u002B tOrbit \u002B \u0022m\u0022.\u003Cbr\u003E toggle ag8.\u003Cbr\u003E set flagdown to 0.\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003E if confirm = 1\u003Cbr\u003E {\u003Cbr\u003E clearscreen.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022You have confirmed \u0022 \u002B tOrbit \u002B \u0022m\u0022.\u003Cbr\u003E print \u0022 \u0022.\u003Cbr\u003E print \u0022Lift Off in 5s.\u0022.\u003Cbr\u003E toggle ag7.\u003Cbr\u003E set confirm to 0.\u003Cbr\u003E wait 2.\u003Cbr\u003E set selection to 1.\u003Cbr\u003E }.\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003Eset xOrbit to tOrbit \u002B 1000.\u003Cbr\u003Eset cAlt to tOrbit - (tOrbit*.05).\u003Cbr\u003Eset xAlt to tOrbit - 1000.\u003Cbr\u003Eset hAlt to tOrbit - 5.\u003Cbr\u003Eclearscreen.\u003Cbr\u003Eprint \u0022Orbit altitude set to \u0022 \u002B tOrbit \u002B \u0022m\u0022.\u003Cbr\u003Elock steering to tAngle.\u003Cbr\u003Elock throttle to tThr.\u003Cbr\u003E\u003Cbr\u003Eprint \u00223\u0022. wait 1.\u003Cbr\u003Eprint \u00222\u0022. wait 1.\u003Cbr\u003Eprint \u00221\u0022. Wait 1.\u003Cbr\u003EPrint \u0022Lift Off!\u0022. stage.\u003Cbr\u003E\u003Cbr\u003Eset StartFuel to \u0026lt;liquidfuel\u0026gt;.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewhen altitude \u0026gt; rpAlt then\u003Cbr\u003E {\u003Cbr\u003E set r to rProgram.\u003Cbr\u003E print \u0022Roll Program\u0022.\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003Ewhen altitude \u0026gt; turn1 then set p to -35.\u003Cbr\u003Ewhen altitude \u0026gt; turn2 then set p to -45.\u003Cbr\u003Ewhen altitude \u0026gt; turn3 then set p to -60.\u003Cbr\u003Ewhen altitude \u0026gt; turn4 then set p to -75.\u003Cbr\u003Ewhen apoapsis \u0026gt; turn5 then set p to -90.\u003Cbr\u003E\u003Cbr\u003Ewhen apoapsis \u0026gt; tOrbit then\u003Cbr\u003E {\u003Cbr\u003E toggle ag5.\u003Cbr\u003E set tThr to 0.\u003Cbr\u003E set Gk to 3.5316000*10^12.\u003Cbr\u003E set Radius to 600000 \u002B apoapsis.\u003Cbr\u003E set iRadius to 600000 \u002B ((apoapsis\u002Bperiapsis)/2).\u003Cbr\u003E set tVel to (Gk/Radius)^0.5.\u003Cbr\u003E set iVel to (Gk/iRadius)^0.5.\u003Cbr\u003E set reqdV to (iVel-tVel).\u003Cbr\u003E set acceleration to (maxthrust/mass).\u003Cbr\u003E set burnTime to (reqdV/acceleration).\u003Cbr\u003E set tTime to (burnTime/2).\u003Cbr\u003E until altitude \u0026gt; hAtmo\u003Cbr\u003E {\u003Cbr\u003E if apoapsis \u0026lt; hAlt { set tThr to .1. }.\u003Cbr\u003E if apoapsis \u0026gt; tOrbit { set tThr to 0. }.\u003Cbr\u003E }.\u003Cbr\u003E when eta:apoapsis \u0026lt; tTime then set tThr to 1.\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003Ewhen periapsis \u0026gt; cAlt then set tThr to .1.\u003Cbr\u003Ewhen periapsis \u0026gt; xAlt then\u003Cbr\u003E {\u003Cbr\u003E if periapsis \u0026gt; xAlt OR apoapsis \u0026gt; xOrbit\u003Cbr\u003E {\u003Cbr\u003E set tThr to 0.\u003Cbr\u003E sas on.\u003Cbr\u003E print \u0022You Are Now In Orbit\u0022.\u003Cbr\u003E set orbit to 1.\u003Cbr\u003E }.\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003Euntil orbit = 1\u003Cbr\u003E {\u003Cbr\u003E set StageSolid to stage:solidfuel.\u003Cbr\u003E Set StageLiquid to stage:liquidfuel.\u003Cbr\u003E set Lfuel to \u0026lt;liquidfuel\u0026gt;.\u003Cbr\u003E set tAngle to up \u002B R(y,p,r).\u003Cbr\u003E\u003Cbr\u003E if Lfuel \u0026lt; StartFuel - aspFuel AND Count \u0026gt; 0\u003Cbr\u003E { stage. set StartFuel to Lfuel. set Count to Count - 1. }.\u003Cbr\u003E\u003Cbr\u003E if StageSolid \u0026gt; 0 AND StageSolid \u0026lt; 1\u003Cbr\u003E { stage. }.\u003Cbr\u003E\u003Cbr\u003E if StageLiquid = 0 AND StageSolid = 0\u003Cbr\u003E { if Lfuel \u0026gt; 0 { wait .1. stage. }. }.\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003Eset tThr to 0.\u003Cbr\u003Etoggle ag1.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint \u0022Apoapsis is \u0022 \u002B apoapsis \u002B \u0022m\u0022.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint \u0022Periapsis is \u0022 \u002B periapsis \u002B \u0022m\u0022.\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003Eprint \u0022Orbital Eccentricity is \u0022 \u002B\u003Cbr\u003E (((apoapsis \u002B 600000)-(periapsis \u002B 600000))/((apoapsis \u002B 600000)\u002B(periapsis \u002B 600000))).\u003Cbr\u003Eprint \u0022 \u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEDIT: I forgot to add! Try the abort sequence anytime after lift off. Click the abort button to the left of the altimeter and wait. It does everything else. I still have to do it about 20 more times before I get it out of my system. So simple yet so cool. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-06T17:48:25Z\u0022 title=\u002209/06/2013 05:48  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 6, 2013\u003C/time\u003E by Payload\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-07T13:25:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAnother thing the language could use that I just ran into:\u003Cp\u003EThere\u0027s no way to abort the program other than trying to if-check around the whole thing. I wanted to put a check at the front of my script to say this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif maxthrust = 0 { \u003Cbr\u003E  print \u0022ABORTING PROGRAM: No active engines right now.\u0022.\u003Cbr\u003E  print \u0022Do not run until after you\u0027ve started up the engines.\u0022.\u003Cbr\u003E  ...Crud what goes here? break?  abort?...\u003Cbr\u003E}.\u003Cbr\u003E... rest of program continues on from here.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThere needs to be an \u0022exit\u0022 or something like that. Or perhaps allow \u0022break\u0022 outside a loop to mean exit.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUse CNTRL-C in the kOS window to break out of the program if you need to. I\u0027m not really sure what your issue is. If you program is written correctly it should end when it\u0027s end conditions are met. The end condition can be written in to your main loop or it can be set to be before that with a \u0022when then\u0022. I don\u0027t think this is something wrong with kOS or it\u0027s missing anything. It has everything you need. You just have to learn to use it. For instance my launch to orbit script ends when you are either in orbit or it knows you aren\u0027t going to make it.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-07T15:55:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JewelShisen\u0022 data-cite=\u0022JewelShisen\u0022\u003E\u003Cdiv\u003EClearly you missed what he is looking for. He is looking for some way to have the program self abort if you haven\u0027t started the engines. There is no \u0027abort\u0027 command to kill an entire program.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E What you are talking about already exist. He just hasn\u0027t set it up correctly.\u003C/p\u003E\u003Cp\u003EIf you get stuck in a loop because of a program error you can just hit CNTRL-C.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-09T04:31:08Z\u0022 title=\u002209/09/2013 04:31  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 9, 2013\u003C/time\u003E by Leonov\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Kerbolus","CreatedById":80698,"CreatedDateTime":"2013-09-07T19:01:07Z","Content":"\n\u003Cp\u003Esomeone here who can tell me how to set warp-speed in kos\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-07T20:46:03Z","Content":"\n\u003Cp\u003EIt\u0027s already there you just have to program it. No good API for what? I already have code that stages everything and doesn\u0027t stage your parachutes and all of that. It is freely available in the space computer thread. It also will show you how to use a main loop and set various close conditions. So once again, I reiterate that what you want already exist, you just have to know how to set it up. If your program is structured correctly then you can end it anytime you like. Excessive nesting? What does that even mean? You think there is something wrong with nested conditionals? Because there isn\u0027t. You are asking for what exactly. A command to end your program? You have 100% control over what it does. So why do you need a command to do something you should have already programmed in from the beginning?\u003C/p\u003E\u003Cp\u003EYou know how I can end my program at any time I want? \u003Cstrong\u003Eset done to 1.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EJust so I can make it clear how simple it is.\u003C/p\u003E\u003Cp\u003EAll you need is a loop or a conditional wait at the end of your script and it\u0027s over. So we do this.\u003C/p\u003E\u003Cp\u003EExample 1.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ewhen THIS \u0026gt; WHATEVER then { print \u0022You can even check in a when-then statement. Like this.\u0022.  }.\u003Cbr\u003Ewhen THIS \u0026gt; WHATEVER then { set CONDITION to SOMETHING }.\u003Cbr\u003Ewhen THIS \u0026gt; WHATEVER then { do these things. }.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EUntil CONDITION = SOMETHING\u003Cbr\u003E {\u003Cbr\u003E do this.\u003Cbr\u003E Print \u0022You want multiple conditions?\u0022.\u003Cbr\u003E print \u0022It\u0027s easy!\u0022.\u003Cbr\u003E if THING = THIS { set CONDITION to SOMETHING }.\u003Cbr\u003E if APPLES = 0 { set CONDITION to SOMETHING }.\u003Cbr\u003E\u003Cbr\u003E }.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAll of those \u003Cstrong\u003E\u0022when-then\u0022\u003C/strong\u003E things will still function until CONDITION = SOMETHING. He can set CONDITION to SOMETHING any time he wants. If he doesn\u0027t need the until loop to actually do anything, \u003C/p\u003E\u003Cp\u003Ehe can just use the command \u003Cstrong\u003E wait until CONDITION = SOMETHING.\u003C/strong\u003E in it\u0027s place. There is no need for an explicit exit program at all.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-09T04:32:42Z\u0022 title=\u002209/09/2013 04:32  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 9, 2013\u003C/time\u003E by Leonov\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-07T23:44:30Z","Content":"\n\u003Cp\u003EExecutes a command when a certain criteria are met. Unlike WAIT, WHEN does not halt execution. Example:\u003C/p\u003E\u003Cp\u003EWHEN BCount \u0026lt; 99 THEN PRINT BCount \u002B \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201C bottles of beer on the wall\u00C3\u00A2\u00E2\u201A\u00AC\u00C2.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-09T04:33:17Z\u0022 title=\u002209/09/2013 04:33  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 9, 2013\u003C/time\u003E by Leonov\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-08T01:19:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kerbolus\u0022 data-cite=\u0022Kerbolus\u0022\u003E\u003Cdiv\u003Esomeone here who can tell me how to set warp-speed in kos\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnfortunately I don\u0027t think you can right now kerb. We will see what the next update brings. You could pop in the kOS thread and ask Kevin about it.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-08T02:39:18Z","Content":"\n\u003Cp\u003EI don\u0027t think GOTO is the devil at all. The problem is new players latch on to it like a fish hook. They just wont let go. So you end up with GOTO everywhere and you can\u0027t follow the flow. I don\u0027t have any fundamental problem with EXIT either. Specifically when it can solve a problem. But it isn\u0027t a hammer and everything isn\u0027t a nail. I was simply demonstrating that he can still do exactly what he is asking by structuring his program in a sensible way. You don\u0027t have to use any loops if you don\u0027t want to. There is a \u0022wait until\u0022 and that works just fine. \u0022When then\u0022 is a one time trigger you can use and allow the program to halt on end condition. When then will not loop unless you imbed it into a loop. It\u0027s perfectly fine to have a script that looks like this.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ewhen-then\u003Cbr\u003Ewhen-then\u003Cbr\u003Ewhen-then\u003Cbr\u003E.\u003Cbr\u003E.\u003Cbr\u003E.\u003Cbr\u003E.\u003Cbr\u003E\u003Cbr\u003Ewait until...\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI prefer a loop at the end myself. Even if it is empty. Then it is already there for you to use for things like staging and throttle control. Hopefully we will get an EXIT AND RUN anyway because we need it. Then everyone is happy.\u003C/p\u003E\n"}]}