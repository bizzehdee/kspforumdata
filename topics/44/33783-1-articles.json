{"TopicId":33783,"ForumId":44,"TopicTitle":"N- Physics and KSP","CreatedByName":"Sathurn","CreatedById":58040,"CreatedDateTime":"2013-06-19T13:22:49Z","PageNum":1,"Articles":[{"CreatedByName":"Sathurn","CreatedById":58040,"CreatedDateTime":"2013-06-19T13:22:49Z","Content":"\n\u003Cp\u003EKSP uses a n=1 physics model, with the planets on rails.\u003C/p\u003E\u003Cp\u003EWhile I fully understand that an n=10 model would grind most computer to a halt. What about n=2? or n=3?\u003C/p\u003E\u003Cp\u003EI don\u0027t have any idea how demanding n=2 to would be. Or how realistic it would be. Would it be even worse that n=1? How would you decide which body was counted as the second one?\u003C/p\u003E\u003Cp\u003EWould it come close to being worth it to the game?\u003C/p\u003E\n"},{"CreatedByName":"Themohawkninja","CreatedById":9628,"CreatedDateTime":"2013-06-19T13:31:10Z","Content":"\n\u003Cp\u003EYou know, this thread brings up a good point, because I\u0027ve played Universe Sandbox where you can collide galaxies with the n value reaching many thousands, and it\u0027s not dipping below 5 FPS.\u003C/p\u003E\u003Cp\u003EAs for KSP, adding N-body physics would just add to a game that can already easily kill your CPU just by the massive ships/stations you can build. While n=2 or n=3 probably isn\u0027t that bad on it\u0027s own, once your ship get\u0027s close to say Duna and Ike, the computer would start running physics calculations for each part on your ship being affected by both bodies, which to me sounds bad for a CPU.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-06-19T13:53:02Z","Content":"\n\u003Cp\u003EYeah, you\u0027d need to replace the closed spheres that are the current SOIs by inverted functions, meaning a lot more data that would also somewhat need to be calculated by altitude. Then you have to double the calculations if you want n=2, which would get pretty heavy, especially since KSP can barely access half of what a good computer can throw at him.\u003C/p\u003E\u003Cp\u003EBefore going to n=2, the gravitational model would need to be reworked and that\u0027s already likely to be bad for our already struggling CPUs. So technically it\u0027s doable, but not right now for sure and not with how Unity currently works :l\u003C/p\u003E\n"},{"CreatedByName":"Sathurn","CreatedById":58040,"CreatedDateTime":"2013-06-19T14:14:42Z","Content":"\n\u003Cp\u003EWhat you use this function:\u003C/p\u003E\u003Cp\u003EBegan frame calculation\u003C/p\u003E\u003Cp\u003EFind CoM location\u003C/p\u003E\u003Cp\u003EFind force of Gravity for CoM = Temporary Gravity Constant for ship (this frame)\u003C/p\u003E\u003Cp\u003EApply to each part.\u003C/p\u003E\u003Cp\u003Eend frame calculation.\u003C/p\u003E\u003Cp\u003EI realize on really large ships (we still limited to 2km render distance) force of gravity would vary, but is that really worth calculating?\u003C/p\u003E\u003Cp\u003Eedit\u003C/p\u003E\u003Cp\u003EStupid Chris you must be smarter than me. What is an inverted function? could you give an example?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T14:17:10Z\u0022 title=\u002206/19/2013 02:17  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by Sathurn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Bunsen","CreatedById":10598,"CreatedDateTime":"2013-06-19T14:30:58Z","Content":"\n\u003Cp\u003EThe choice between patched conics (n=1) and multi-body gravitation (n\u0026gt;1) was discussed at length when Kerbin began to acquire moons and neighboring planets. The major factor in the decision was not actually the computational load of in-game physics, but orbit forecasting in the map view.\u003C/p\u003E\u003Cp\u003EThey didn\u0027t have maneuver nodes yet, but they knew they wanted something like that. Think about what would have to happen with n\u0026gt;1 when you drag that maneuver node\u0027s delta-v around: At every frame, it would have to propagate your hypothetical orbit through a time-varying multi-body potential with enough accuracy to predict exactly where you\u0027ll encounter Eeloo several months later. Doing that sort of calculation at the pace of in-game physics, even at significant time warp, isn\u0027t that big a deal. Doing an entire orbit\u0027s worth 30 times a second while the crazy user screws around with the planned burn, though, that\u0027s hard.\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-06-19T14:42:10Z","Content":"\n\u003Cp\u003EWhat I always wondered is why can\u0027t KSP predict n\u0026gt;1 body orbits with maneuver nodes, while Orbiter\u0027s TransX MFD can simulate Voyager\u0027s path (with all these slingshots) real-time ? IMFD has even a functional quasi-real-time n-body map window. Does something is wrong with Unity ? Or it is Orbiter that has \u0022accelerated\u0022 calculation for orbital physics ?\u003C/p\u003E\n"},{"CreatedByName":"Sathurn","CreatedById":58040,"CreatedDateTime":"2013-06-19T14:45:11Z","Content":"\n\u003Cp\u003EThank you Bunsen, I see where that would be very cpu heavy. You would literally have to pause the game for like 5-10 seconds for every adjustment of the node.\u003C/p\u003E\u003Cp\u003Eedit: Solarliner, does Orbiter allow for more than one ship at a time? And if it is a recreation is it using some sort of pre-calculated math?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T14:47:55Z\u0022 title=\u002206/19/2013 02:47  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by Sathurn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pigbear","CreatedById":68791,"CreatedDateTime":"2013-06-19T15:02:27Z","Content":"\n\u003Cp\u003EMaybe with Unity4 they could without \u003Cstrong\u003E\u003Cem\u003Eas much\u003C/em\u003E\u003C/strong\u003E lag\u003C/p\u003E\n"},{"CreatedByName":"MBobrik","CreatedById":59889,"CreatedDateTime":"2013-06-19T15:41:03Z","Content":"\n\u003Cp\u003EThere are public domain implementations of numerical solvers that would allow n say 20 and still be capable of doing time warp 1 000 000 on low end hardware at reasonable framerate.\u003C/p\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003EAnd because the gravity ultimately applies only to the CoM ( ships big enough to feel tidal forces can\u0027t be built in KSP anyway ), the slowdown would only add to part count caused slowdown, not multiply with it.\u003C/p\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003EBut the devs have already made up their minds, and, I suspect, that the n=1 approximation is just hardcoded at too many places through the entire code to be changeable, so this is not gonna happen.\u003C/p\u003E\u003Cp\u003ESomeone with a LOT of free time can still write a mod that patches all the places with calls to the numerical approximator or something like that.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T15:52:16Z\u0022 title=\u002206/19/2013 03:52  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by MBobrik\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MBobrik","CreatedById":59889,"CreatedDateTime":"2013-06-19T15:51:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThe choice between patched conics (n=1) and multi-body gravitation (n\u0026gt;1) was discussed at length when Kerbin began to acquire moons and neighboring planets. The major factor in the decision was not actually the computational load of in-game physics, but orbit forecasting in the map view.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003EIf your numerical solver can churn out extrapolation of several thousand orbits per second, this would not be more difficult than computing positions during max time warp. And one could still let the solver run asynchronously or iteratively , simply adding as many points to the predicted trajectory per frame as it during a fixed time slice, so on a low end hardware and a very hard to predict chaotic halo orbit, you would move a node and see how your trajectory forecast stretches continuously over a few sec.\u003C/p\u003E\n"},{"CreatedByName":"Unit One","CreatedById":71471,"CreatedDateTime":"2013-06-19T15:57:50Z","Content":"\n\u003Cp\u003EThere\u0027s another issue with using even n=2, it introduces sometimes very significant orbital perturbation, and right now there\u0027s no way people want to keep tabs on the orbital degradation of their 30 satellites in a game. It would be a lot of work, and geostationary orbits would be impossible. In real life constant automated monitoring and thruster fires keep satellites in their orbits, KSP is incapable of that. It\u0027s not a matter if it could be done, but rather should be done. (And it shouldn\u0027t be done.)\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-06-19T16:01:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sathurn\u0022 data-cite=\u0022Sathurn\u0022\u003E\u003Cdiv\u003EDoes Orbiter allow for more than one ship at a time? And if it is a recreation is it using some sort of pre-calculated math?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOf course ! You can do pretty much all of what KSP does, building aside. The sim is way more realistic (and maybe pre-calculated as well), and even solar wind is taken in account when space travelling.\u003C/p\u003E\n"},{"CreatedByName":"MBobrik","CreatedById":59889,"CreatedDateTime":"2013-06-19T16:34:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Unit One\u0022 data-cite=\u0022Unit One\u0022\u003E\u003Cdiv\u003Eright now there\u0027s no way people want to keep tabs on the orbital degradation of their 30 satellites in a game. It would be a lot of work, and geostationary orbits would be impossible.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003EAFAIK the RemoteTech mod can do that.\u003C/p\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003EEDIT: Another possibility would be of course to add an arbitrary cutoff where the influence from the other bodies is too small, just like the atmosphere cutoff so ships on low to mid orbits would be completely unaffected.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T16:48:30Z\u0022 title=\u002206/19/2013 04:48  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by MBobrik\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Unit One","CreatedById":71471,"CreatedDateTime":"2013-06-19T17:02:10Z","Content":"\n\u003Cp\u003EI don\u0027t know of RemoteTech being able to do that, I use RemoteTech in my main save. RemoteTech can begin a fire for a set time and a set delay after giving a signal, though. Unless there\u0027s something else amazing about RT\u0027s control that I don\u0027t know.\u003C/p\u003E\u003Cp\u003EThat would be a good idea, everything Geosynchronous and below could be protected while still allowing for Lagrange Points and other types of fun.\u003C/p\u003E\n"},{"CreatedByName":"Spacial_Anomaly","CreatedById":63225,"CreatedDateTime":"2013-06-19T17:19:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MBobrik\u0022 data-cite=\u0022MBobrik\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEDIT: Another possibility would be of course to add an arbitrary cutoff where the influence from the other bodies is too small, just like the atmosphere cutoff so ships on low to mid orbits would be completely unaffected.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnother thing you have to look out for are numerical approximation errors (because you have a time steps and not a continuous time development, also depending on the method used), so orbits that should be stable \u0022degenerate\u0022 over time.\u003C/p\u003E\n"},{"CreatedByName":"PLB","CreatedById":28457,"CreatedDateTime":"2013-06-19T17:22:41Z","Content":"\n\u003Cp\u003EIf we do get n\u0026gt;1 calculations then we can see if mechjeb can keep our satellites in orbit, which is exactly how we keep our satellites in orbit in the solar system. We just need to pack some ion rcs (Which is a mod) onboard and replace any empty satellites, like how we do it in real life. Also, we \u0027could\u0027 make it an option to choose n equalling between [n=1-15] or even [n=15\u002B( X% of the current ships in orbit)] if we REALLY want to take our simulating to the extreme. This is AFTER we get past the incapabilities of the 32-bit program KSP, whatever \u0027after\u0027 means.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T17:24:44Z\u0022 title=\u002206/19/2013 05:24  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by PLB\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MBobrik","CreatedById":59889,"CreatedDateTime":"2013-06-19T17:25:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spacial_Anomaly\u0022 data-cite=\u0022Spacial_Anomaly\u0022\u003E\u003Cdiv\u003EAnother thing you have to look out for are numerical approximation errors (because you have a time steps and not a continuous time development, also depending on the method used), so orbits that should be stable \u0022degenerate\u0022 over time.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003Ethere are stable methods in the sense that in 1 body case all orbits that contain more than a few dozen timesteps per orbit stay stable.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T17:39:21Z\u0022 title=\u002206/19/2013 05:39  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by MBobrik\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Technical Ben","CreatedById":10512,"CreatedDateTime":"2013-06-19T17:26:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Themohawkninja\u0022 data-cite=\u0022Themohawkninja\u0022\u003E\u003Cdiv\u003EYou know, this thread brings up a good point, because I\u0027ve played Universe Sandbox where you can collide galaxies with the n value reaching many thousands, and it\u0027s not dipping below 5 FPS.\u003Cp\u003EAs for KSP, adding N-body physics would just add to a game that can already easily kill your CPU just by the massive ships/stations you can build. While n=2 or n=3 probably isn\u0027t that bad on it\u0027s own, once your ship get\u0027s close to say Duna and Ike, the computer would start running physics calculations for each part on your ship being affected by both bodies, which to me sounds bad for a CPU.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERelevant:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/KhP0Ym8csJo?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EScott Manley may also have done a video on this, and is a bit more confident on film than I am. :#\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-06-20T02:11:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MBobrik\u0022 data-cite=\u0022MBobrik\u0022\u003E\u003Cdiv\u003E.\u003Cp\u003Ethere are stable methods in the sense that in 1 body case all orbits that contain more than a few dozen timesteps per orbit stay stable.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd you can use implicit methods that are technically stable for any timestep. Doesn\u0027t change the fact that accuracy breaks down as timestep increases, unless your problem has a closed-form solution.\u003C/p\u003E\n"},{"CreatedByName":"drakesdoom","CreatedById":57297,"CreatedDateTime":"2013-06-20T03:25:40Z","Content":"\n\u003Cp\u003EPerhaps you should consider modifying the current system to look more like n body while staying 1 body. I have theorized that properly shaped SoI\u0027s (they are not exact spheres) coupled with very small SoI\u0027s at L points could give 90% of n body physics without any additional load of any kind.\u003C/p\u003E\n"},{"CreatedByName":"Unit One","CreatedById":71471,"CreatedDateTime":"2013-06-20T04:44:33Z","Content":"\n\u003Cp\u003ESlightly modifying SOIs might work well to make n=1 simulations more realistic, but n=1 physics and SOIs cannot be used for Lagrange points at all. Lagrange points go beyond a deformed sphere, and Lagrange points cannot be orbited any which way, like planets can.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.nasa.gov/images/content/481132main_artemis-p1-orbit.jpg\u0022 rel=\u0022external nofollow\u0022\u003EThis image\u003C/a\u003E shows just how different the shape of Lagrange orbits are, not resembling any conic at all. As you see, for L1 and L2 points you would need something of an SOI that resembles a bean.\u003C/p\u003E\u003Cp\u003EI have an image of a different type of L1 orbit but it\u0027s in a book so it might take me a minute.\u003C/p\u003E\n"},{"CreatedByName":"drakesdoom","CreatedById":57297,"CreatedDateTime":"2013-06-20T05:42:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Unit One\u0022 data-cite=\u0022Unit One\u0022\u003E\u003Cdiv\u003ESlightly modifying SOIs might work well to make n=1 simulations more realistic, but n=1 physics and SOIs cannot be used for Lagrange points at all. Lagrange points go beyond a deformed sphere, and Lagrange points cannot be orbited any which way, like planets can.\u003Cp\u003E\u003Ca href=\u0022http://www.nasa.gov/images/content/481132main_artemis-p1-orbit.jpg\u0022 rel=\u0022external nofollow\u0022\u003EThis image\u003C/a\u003E shows just how different the shape of Lagrange orbits are, not resembling any conic at all. As you see, for L1 and L2 points you would need something of an SOI that resembles a bean.\u003C/p\u003E\u003Cp\u003EI have an image of a different type of L1 orbit but it\u0027s in a book so it might take me a minute.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou could not simulate a proper L point orbit but you could get the usefulness of the L point by making a micro gravity SOI say 5k meters across. If you pass through it without aiming for it you would be through so fast it would have little effect, but if you knew where it was and aimed for it drifting slowly into it bam craft is stable at L point.\u003C/p\u003E\n"},{"CreatedByName":"sjwt","CreatedById":9268,"CreatedDateTime":"2013-06-20T06:14:03Z","Content":"\n\u003Cp\u003EA 3D N=3 model would kill a CPU on its own.. At the moment you can get specfic solutions to the N body problem, in 2D on Java aps that eat all your CPU and MOAR. Those apps will simulate multiple no mass bodies relative to one or two bodies, or they can simulate 2 or 3 bodies with mass in a simplified optimised system. Adding a 3rd Dimension to any of these and you move into the realms of Supercomputers taking days to do a frame, add more bodies and good by!\u003C/p\u003E\n"},{"CreatedByName":"MBobrik","CreatedById":59889,"CreatedDateTime":"2013-06-20T15:57:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EAnd you can use implicit methods that are technically stable for any timestep. Doesn\u0027t change the fact that accuracy breaks down as timestep increases, unless your problem has a closed-form solution.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003Ethe accuracy breaks down, and for the best methods I\u0027ve seen, the inaccuracy reaches a whopping 0.0001 % per orbit when having less than 30 points per orbit... which is, methinks, for the purposes of KSP, negligible\u003C/p\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sjwt\u0022 data-cite=\u0022sjwt\u0022\u003E\u003Cdiv\u003EA 3D N=3 model would kill a CPU on its own.. At the moment you can get specfic solutions to the N body problem, in 2D on Java aps that eat all your CPU and MOAR. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E.\u003C/p\u003E\u003Cp\u003EGet yourself better apps \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-06-20T21:28:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MBobrik\u0022 data-cite=\u0022MBobrik\u0022\u003E\u003Cdiv\u003E.\u003Cp\u003Ethe accuracy breaks down, and for the best methods I\u0027ve seen, the inaccuracy reaches a whopping 0.0001 % per orbit when having less than 30 points per orbit... which is, methinks, for the purposes of KSP, negligible\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKeep in mind much of Unity is single-precision. There may not be the facilities within Unity to do this properly.\u003C/p\u003E\n"}]}