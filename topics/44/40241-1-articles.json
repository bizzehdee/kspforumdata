{"TopicId":40241,"ForumId":44,"TopicTitle":"Optimal drag is g dependent?","CreatedByName":"Superluminaut","CreatedById":58963,"CreatedDateTime":"2013-07-31T08:29:32Z","PageNum":1,"Articles":[{"CreatedByName":"Superluminaut","CreatedById":58963,"CreatedDateTime":"2013-07-31T08:29:32Z","Content":"\n\u003Cp\u003ESo I was going through the KSP wiki article on \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Atmosphere\u0022 rel=\u0022external nofollow\u0022\u003Eatmospheres\u003C/a\u003E, which is a mess, and it states that the terminal velocity of a falling object at x altitude = the velocity to match at x altitude during launch. \u003C/p\u003E\u003Cp\u003EFor that to be true the vehicle must be accelerating at g. \u003C/p\u003E\u003Cp\u003EWhy is it a given that a rocket should accelerate at local g?\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003EGiven some confusion, my actual question is: Why should drag be g dependent in an optimal assent?\u003C/span\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-19T22:56:51Z\u0022 title=\u002208/19/2013 10:56  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 19, 2013\u003C/time\u003E by Superluminaut\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-07-31T08:47:20Z","Content":"\n\u003Cp\u003EI think you might be a bit confused\u003C/p\u003E\u003Cp\u003EBasically, terminal velocity is when atmospheric drag creates the same deceleration as gravity does. Before you reach terminal velocity, your acceleration doesn\u0027t matter much. But once you reach it, in KSP it\u0027 preferable not to go faster than it. So if you want to not cross terminal velocity, you have to accelerate at the same speed the air drag decelerates you, and as mentioned above, at terminal velocity, drag slows you at the same rate as g, so to cancel it out, you have to accelerate at g. And that\u0027s why when you follow terminal velocity you should accelerate at g \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-07-31T11:56:26Z","Content":"\n\u003Cp\u003EYour acceleration isn\u0027t g if you\u0027re perfectly following terminal velocity. It will be the slope of terminal velocity with respect to altitude (in meters per second per meter) times your vertical speed (in meters per second). Terminal velocity increases as you ascend, so that net acceleration is a small positive value, and the total thrust you have to apply is equal to weight plus drag force plus (mass times acceleration). Weight and drag force are equal at terminal velocity, so this ends up translating to a TWR slightly higher than 2.\u003C/p\u003E\u003Cp\u003EIn practice your TWR increases as you burn off fuel so unless you want to be throttling down constantly it\u0027s a good idea to shoot for somewhat lower than 2 TWR at the start of the first few stages.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-31T12:01:43Z\u0022 title=\u002207/31/2013 12:01  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 31, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Superluminaut","CreatedById":58963,"CreatedDateTime":"2013-08-06T00:33:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EYour acceleration isn\u0027t g if you\u0027re perfectly following terminal velocity. It will be the slope of terminal velocity with respect to altitude (in meters per second per meter) times your vertical speed (in meters per second). Terminal velocity increases as you ascend, so that net acceleration is a small positive value, and the total thrust you have to apply is equal to weight plus drag force plus (mass times acceleration). Weight and drag force are equal at terminal velocity, so this ends up translating to a TWR slightly higher than 2.\u003Cp\u003EIn practice your TWR increases as you burn off fuel so unless you want to be throttling down constantly it\u0027s a good idea to shoot for somewhat lower than 2 TWR at the start of the first few stages.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood point, I see now that my question is not stated properly. What I\u0027m actually after is why drag force should be g dependent. Or, why should (drag force) = (weight force)?\u003C/p\u003E\n"},{"CreatedByName":"magnemoe","CreatedById":57801,"CreatedDateTime":"2013-08-06T03:00:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Superluminaut\u0022 data-cite=\u0022Superluminaut\u0022\u003E\u003Cdiv\u003EGood point, I see now that my question is not stated properly. What I\u0027m actually after is why drag force should be g dependent. Or, why should (drag force) = (weight force)?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe drag force increase by the square if the speed is doubled. At some speed the drag force equals the gravity force and an falling object will not fall faster, at some point the forces will match up.\u003C/p\u003E\u003Cp\u003ENow if the gravity is lighter the terminal speed is lower, same if the atmosphere is thicker and the atmosphere thickness is most important, terminal speed is lower on Eve than Duna even if Duna has far lower gravity.\u003C/p\u003E\n"},{"CreatedByName":"Ben 9072","CreatedById":72430,"CreatedDateTime":"2013-08-06T03:07:29Z","Content":"\n\u003Cp\u003EThat\u0027s not actually true in real life - the fuel optimal ascent would vary greatly depending on several factors - the drag coefficient of the ship, the thrust-to-weight ratio, changes in specific impulse of the engine from altitude. To my knowledge about KSP, though, which you should take with a grain of salt, the game calculates drag under terminal velocity as relatively constant, then sharply increases the drag above terminal velocity. I believe, based on purely qualitative observations of how fast ships decelerate on reentry, that the drag increases quadratically after terminal velocity, which is accurate at subsonic speeds, though I can\u0027t back that up with quantitative data from the game.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-06T03:48:44Z","Content":"\n\u003Cp\u003EThat\u0027s a better question. It\u0027s known as the Goddard problem, let\u0027s see how tough it is to actually work out.\u003C/p\u003E\u003Cp\u003EFirst assume we\u0027re only talking about a vertical ascent. Once you start turning and trying to get into orbit the math gets more complicated. So for now, we want to maximize altitude for a given amount of fuel.\u003C/p\u003E\u003Cp\u003ELet x = altitude, t = time, v = dx/dt = vertical speed, a = dv/dt = net acceleration, T = thrust\u003C/p\u003E\u003Cp\u003EDrag in KSP is proportional to atmospheric density (rho) times craft mass (m) times velocity squared for some coefficient we\u0027ll call 0.5*c, so we have\u003C/p\u003E\u003Cp\u003Em*dv/dt = T - m*g - 0.5*c*rho*m*v^2\u003C/p\u003E\u003Cp\u003EFor a single-stage rocket, mass decreases only due to expended propellant, at a rate proportional to the thrust. The constant of proportionality is the reciprocal of the effective exhaust velocity g0*Isp.\u003C/p\u003E\u003Cp\u003Edm/dt = -T / (g0*Isp)\u003C/p\u003E\u003Cp\u003Em*dv/dt \u002B g0*Isp*dm/dt \u002B m*g \u002B 0.5*c*rho*m*v^2 = 0\u003C/p\u003E\u003Cp\u003EThe time derivative dv/dt can also be expressed as\u003C/p\u003E\u003Cp\u003Edv/dt = (dv/dx)*(dx/dt) = (dv/dx)*v\u003C/p\u003E\u003Cp\u003EWe want to maximize altitude gain per unit of expended mass dx/dm, which is equivalent to (dx/dt)/(dm/dt) = v/(dm/dt).\u003C/p\u003E\u003Cp\u003Edm/dt = -(m*(dv/dx)*v \u002B m*g \u002B 0.5*c*rho*m*v^2) / (g0*Isp)\u003C/p\u003E\u003Cp\u003Ev/(dm/dt) = -(g0*Isp*v) / (m*(dv/dx)*v \u002B m*g \u002B 0.5*c*rho*m*v^2)\u003C/p\u003E\u003Cp\u003EThis is a bit annoying to maximize, since we don\u0027t know how v varies with x yet! To make things easier, let\u0027s just see what the solution would be for the best velocity at the current altitude neglecting how that velocity changes with altitude. So we want to solve for v such that d(v/(dm/dt))/dv = 0, assuming for the moment that dv/dx = 0.\u003C/p\u003E\u003Cp\u003Ed(v/(dm/dt))/dv = -(g0*Isp) / (0 \u002B m*g \u002B 0.5*c*rho*m*v^2) \u002B (c*rho*m*v*g0*Isp*v) / (0 \u002B m*g \u002B 0.5*c*rho*m*v^2)^2\u003C/p\u003E\u003Cp\u003E0 = -g0*Isp*(m*g \u002B 0.5*c*rho*m*v^2) \u002B c*rho*m*g0*Isp*v^2\u003C/p\u003E\u003Cp\u003Ev^2 = g/(0.5*c*rho)\u003C/p\u003E\u003Cp\u003EAnd we have the expected terminal velocity result. Let me play around in Mathematica a bit to see what happens when we calculate dv/dx as a function of v using this result as well as density and gravity varying with altitude, and see whether it\u0027s still optimal.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-06T03:51:48Z\u0022 title=\u002208/06/2013 03:51  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 6, 2013\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2013-08-06T08:39:05Z","Content":"\n\u003Cp\u003ESo trying to express everything in terms of v is not a good idea, it leads to a mess of product-log functions and inconclusive results. There\u0027s an easier way, a little less hand-wavy than treating dv/dx as zero. Instead we assume it is nonzero, but treat it as a constant with respect to v when trying to determine the maximum of dx/dm = v/(dm/dt).\u003C/p\u003E\u003Cp\u003Ev/(dm/dt) = -(g0*Isp*v) / (m*(dv/dx)*v \u002B m*g \u002B 0.5*c*rho*m*v^2)\u003C/p\u003E\u003Cp\u003Ed(v/(dm/dt))/dv = -(g0*Isp) / (m*(dv/dx)*v \u002B m*g \u002B 0.5*c*rho*m*v^2) \u002B (m*(dv/dx) \u002B c*rho*m*v)*g0*Isp*v / (m*(dv/dx)*v \u002B m*g \u002B 0.5*c*rho*m*v^2)^2\u003C/p\u003E\u003Cp\u003E0 = -g0*Isp*(m*(dv/dx)*v \u002B m*g \u002B 0.5*c*rho*m*v^2) \u002B (m*(dv/dx) \u002B c*rho*m*v)*g0*Isp*v\u003C/p\u003E\u003Cp\u003E0 = -m*g \u002B 0.5*c*rho*m*v^2\u003C/p\u003E\u003Cp\u003Ev^2 = g/(0.5*c*rho)\u003C/p\u003E\n"},{"CreatedByName":"Superluminaut","CreatedById":58963,"CreatedDateTime":"2013-08-07T04:41:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EThat\u0027s a better question. It\u0027s known as the Goddard problem, let\u0027s see how tough it is to actually work out.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy math is seldomly used and rusty but I noted a few things. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003Em*dv/dt\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you use a changing mass can you really pull it out of Newtons equation like this?\u003C/p\u003E\u003Cp\u003EAlso, should this not be in an accelerating reference frame?\u003C/p\u003E\n"},{"CreatedByName":"Yourself","CreatedById":4465,"CreatedDateTime":"2013-08-07T05:12:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Superluminaut\u0022 data-cite=\u0022Superluminaut\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIf you use a changing mass can you really pull it out of Newtons equation like this?\u003C/p\u003E\u003Cp\u003EAlso, should this not be in an accelerating reference frame?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe issue with Newton\u0027s laws here is actually a pretty subtle one. Technically he applied it correctly by virtue of the fact that he included the thrust as T. Another way of looking at it is to consider the rocket as a variable mass system where the only forces applied to it are gravity and aerodynamic drag. The thrust force is kind of a fictitious force that arises due to the fact that the rocket is ejecting mass. So, the completely proper statement of Newton\u0027s second law that you\u0027re probably thinking of would go something like this:\u003C/p\u003E\u003Cp\u003Edp/dt = -m g - 0.5 * \u00C3\u00C2 A Cd v |v| ( technically the form given above was only correct for positive velocities, v |v| gives v\u00C3\u201A\u00C2\u00B2 but with a sign, so it also works if the rocket goes down, not a really relevant in this analysis but I figured I bring it up anyway)\u003C/p\u003E\u003Cp\u003EIt turns out that for a system that\u0027s ejecting mass at some velocity relative to its center of mass, V\u003Csub\u003Er\u003C/sub\u003E, we get this:\u003C/p\u003E\u003Cp\u003Edp/dt = m dv/dt - V\u003Csub\u003Er\u003C/sub\u003E dm/dt\u003C/p\u003E\u003Cp\u003EIn the case of a rocket, V\u003Csub\u003Er\u003C/sub\u003E is the exhaust velocity and we define V\u003Csub\u003Er\u003C/sub\u003E dm/dt to \u003Cstrong\u003Ebe[/be] the thrust produced by the rocket. Putting the above equations together we get this:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Em dv/dt - V\u003C/strong\u003E\u003Csub\u003E\u003Cstrong\u003Er\u003C/strong\u003E\u003C/sub\u003E\u003Cstrong\u003E dm/dt = -m g - 0.5 * \u00C3\u00C2 A Cd v |v|\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Em dv/dt = V\u003C/strong\u003E\u003Csub\u003E\u003Cstrong\u003Er\u003C/strong\u003E\u003C/sub\u003E\u003Cstrong\u003E dm/dt - m g - 0.5 * \u00C3\u00C2 \u00C3\u017D\u00E2\u20AC\u02DC Cd v |v|\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIn the equation by tavert the V\u003C/strong\u003E\u003Csub\u003E\u003Cstrong\u003Er\u003C/strong\u003E\u003C/sub\u003E\u003Cstrong\u003E dm/dt term has simply been called \u003C/strong\u003E\u003Cem\u003E\u003Cstrong\u003ET\u003C/strong\u003E\u003C/em\u003E\u003Cstrong\u003E for thrust.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EI\u0027m not sure what you mean by your question about accelerating reference frames. The reference frame chosen here is that of the ground, it is non-accelerating. It doesn\u0027t really matter what reference frame we pick, but picking an accelerating reference frame is usually pretty inconvenient. Inertial reference frames are much easier to deal with since the laws of physics are typically more naturally expressed in inertial frames.\u003C/strong\u003E\u003C/p\u003E\n"},{"CreatedByName":"Superluminaut","CreatedById":58963,"CreatedDateTime":"2013-08-19T23:05:33Z","Content":"\n\u003Cp\u003EHi people, sorry about my long absence but I simply haven\u0027t been able to give this as much attention as I would like. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Yourself\u0022 data-cite=\u0022Yourself\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Em dv/dt = V\u003Csub\u003Er\u003C/sub\u003E dm/dt - m g - 0.5 * \u00C3\u00C2 \u00C3\u017D\u00E2\u20AC\u02DC Cd v |v|\u003C/p\u003E\u003Cp\u003EIn the equation by tavert the V\u003Csub\u003Er\u003C/sub\u003E dm/dt term has simply been called \u003Cem\u003ET\u003C/em\u003E for thrust.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you for explaining. It makes sense now, I believe... \u003C/p\u003E\u003Cp\u003EMath can be confusing. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003ETo make things easier, let\u0027s just see what the solution would be for the best velocity at the current altitude neglecting how that velocity changes with altitude. So we want to solve for v such that d(v/(dm/dt))/dv = 0, assuming for the moment that dv/dx = 0.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EThere\u0027s an easier way, a little less hand-wavy than treating dv/dx as zero. Instead we assume it is nonzero, but treat it as a constant with respect to v when trying to determine the maximum of dx/dm = v/(dm/dt).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHowever I\u0027m still not sure that turning dv/dx into a constant is the right idea. How can this result in anything useful?\u003C/p\u003E\n"}]}