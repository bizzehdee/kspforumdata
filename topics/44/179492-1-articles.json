{"TopicId":179492,"ForumId":44,"TopicTitle":"Physics simulations in python","CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-02T20:55:27Z","PageNum":1,"Articles":[{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-02T20:55:27Z","Content":"\n\u003Cp\u003E\nI\u0027ve been working with a group of people on some model rocketry projects, and I wanted to try simulating retro-propulsive landing with solid engines. As far as I can tell, none of the already available rocket sims have enough control over the design of the rocket (multiple engines, actuators) or allow computer control of the rocket throughout the simulation. While KSP can do this, it doesn\u0027t work at small scales, plus I think this would be a fun challenge. Could anyone direct me to some beginner references for physics simulation with computers?\u00A0I\u0027m familiar with python and javascript, but can work from tutorials designed for other languages. Thanks!\n\u003C/p\u003E\n"},{"CreatedByName":"Green Baron","CreatedById":107381,"CreatedDateTime":"2018-11-02T21:38:08Z","Content":"\n\u003Cp\u003E\nI am not a programmer but i do some hobby tinkering with a similar thing (for private use ;-)). Unfortunately i have no clue of Python but some understanding of C/C\u002B\u002B, but i am not far enough to show something off.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt is no witchcraft; seen from a very high level, in principle you 1 setup 2 loop 3 cleanup.\n\u003C/p\u003E\n\u003Cp\u003E\n1 On program startup for every object you have, you setup the starting parameters. Lets assume a tank full of stuff and an engine consuming stuff. Then you enter the loop.\n\u003C/p\u003E\n\u003Cp\u003E\n2 in the loop (fixed or variable doesn\u0027t matter), you simply calculate the deltaTime between the current and the last loop run, and apply that to your formulas for engine consumption, tank content, center of gravity, velocity, acceleration, whatever. The new values are used at the next loop run.\n\u003C/p\u003E\n\u003Cp\u003E\n3 well, yeah. Cleanup after the loop has finished by user interaction (escape or so).\n\u003C/p\u003E\n\u003Cp\u003E\nDefining your objects cleverly is crucial, and the technical challenges lie in the arrangement of objects, tasks and scheduling, memory management (in Python not that important), event handling etc.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis concept is frequently called the \u0022game loop\u0022 and is one of the principle patterns of everything that calculates and does user interaction. Searching \u0022game loop pattern\u0022 will give you many results. Also, if you have a concrete example or idea, we could try some pseudo code just for demo.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd maybe a real programmer shows up and helps :-)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-11-02T21:41:45Z\u0022 title=\u002211/02/2018 09:41  PM\u0022 data-short=\u00225 yr\u0022\u003ENovember 2, 2018\u003C/time\u003E by Green Baron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-03T04:14:03Z","Content":"\n\u003Cp\u003E\nThanks, that\u0027s mostly how I imagined it, but I\u0027m glad to hear that (at a high level at least) I\u0027m not too far off.\n\u003C/p\u003E\n\u003Cp\u003E\nOn delta time: That is just the \u0022fine-ness\u0022 of the simulation in time, right?\u00A0For example, if I had an object moving at 10 m/s, a delta time of 1 second would advance the position of the object by 1 meter every loop cycle, and a delta time of 1/10 of a second would advance the object by 1/10 of a meter every time? And without the requirement of running in real time, like a game, I can just leave that as a constant, or are\u00A0there more considerations than that?\n\u003C/p\u003E\n\u003Cp\u003E\nAs for concrete examples, I\u0027d like to model a rocket with solid engines, including thrust curves, rotation, gravity, simple aerodynamics, etc. I\u0027d also like to be able to \u0022trick\u0022 a control system into thinking it is controlling the rocket, so producing appropriately inaccurate pressure and acceleration values.\u00A0I want to add later things like\u00A0specifying\u00A0the exact location and rotation of the thrust vector relative to the rocket\u0027s origin, center of mass shift during flight, momentum effects from moving weights, fins, or landing legs, and multiple engines.\n\u003C/p\u003E\n"},{"CreatedByName":"Gargamel","CreatedById":64714,"CreatedDateTime":"2018-11-03T05:14:53Z","Content":"\n\u003Cp\u003E\nSo disappointed... thought this would be about a professor getting eaten by a snake....\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-11-03T05:15:03Z\u0022 title=\u002211/03/2018 05:15  AM\u0022 data-short=\u00225 yr\u0022\u003ENovember 3, 2018\u003C/time\u003E by Gargamel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kerbiloid","CreatedById":129408,"CreatedDateTime":"2018-11-03T05:33:12Z","Content":"\n\u003Cp\u003E\nUnlikely irl solid engines are enough accurately predictable to use them for landing as is.\n\u003C/p\u003E\n\u003Cp\u003E\nA second sooner, a second later, and your rocket \u003Cs\u003Elands\u003C/s\u003E lithobrakes not just as planned.\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe you should use a special landing engine with a toroidal chamber getting filled by exhaust of powder gas generators.\u003Cbr\u003E\nWith several nozzles around, equipped with flaps redirecting the nozzle exhaust.\u003Cbr\u003E\nThen you would stop descending at several meters height, hover with this engine and slowly land by tilting the flaps.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-11-03T05:34:21Z\u0022 title=\u002211/03/2018 05:34  AM\u0022 data-short=\u00225 yr\u0022\u003ENovember 3, 2018\u003C/time\u003E by kerbiloid\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2018-11-03T08:49:42Z","Content":"\n\u003Cp\u003E\nSimple physics simulation is basically just numerical integration over \u003Ca href=\u0022https://en.wikipedia.org/wiki/Newton%27s_laws_of_motion\u0022 rel=\u0022external nofollow\u0022\u003ENewton\u0027s 3rd Law\u003C/a\u003E. For general problems, it can get quite complicated, but for simple trajectory computations,\u00A0\u003Ca href=\u0022https://en.wikipedia.org/wiki/Verlet_integration\u0022 rel=\u0022external nofollow\u0022\u003EVelocity Verlet\u003C/a\u003E\u00A0is usually quite sufficient. Just keep making the time step smaller until results converge. If drag gives you trouble with Velocity Verlet, you can try generic \u003Ca href=\u0022https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods\u0022 rel=\u0022external nofollow\u0022\u003ERK4\u003C/a\u003E, but I doubt it\u0027ll be necessary.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only notable exception is gravity simulations. These tend to go bad with explicit integration methods over any significant time scales, and you have to do something funky, like implicit collocation methods. But unless your goal is predicting trajectory of a spacecraft in interplanetary space over the next several decades, you simply don\u0027t need that sort of precision. For everything else, Verlet has you covered 90% of the time, and RK4 picks up the slack on the rest. So if you get comfortable with these two methods, you have numerical part down.\n\u003C/p\u003E\n\u003Cp\u003E\nThe rest is just picking the right models. Gravity is a constant force for your case, so that\u0027s easy. Simple \u003Ca href=\u0022https://en.wikipedia.org/wiki/Drag_coefficient\u0022 rel=\u0022external nofollow\u0022\u003Equadratic drag\u003C/a\u003E is good for air resistance until you get into transonic speeds. Engine thrust is going to be tricky. You can get general thrust profiles from manufacturers, but the tolerance on these tend to be bad, so you\u0027ll have to add some random variation to have something resembling a real engine. If you encode the thrust curve with something like \u003Ca href=\u0022https://en.wikipedia.org/wiki/B%C3%A9zier_curve\u0022 rel=\u0022external nofollow\u0022\u003EBezier curve\u003C/a\u003E or \u003Ca href=\u0022https://en.wikipedia.org/wiki/Cubic_Hermite_spline\u0022 rel=\u0022external nofollow\u0022\u003Ecubic spline\u003C/a\u003E, moving a few control points around by small random amount, say 10%, should put you in a ballpark of what to expect. You\u0027d have to read up on manufacturer docs to get more precise. But if your method will work with 10% variation in control points, it\u0027ll probably work with real engines.\n\u003C/p\u003E\n\u003Cp\u003E\nIf orientation of the rocket changes, things get a bit more complex. You have to do \u003Ca href=\u0022https://en.wikipedia.org/wiki/Rigid_body\u0022 rel=\u0022external nofollow\u0022\u003Erigid body physics\u003C/a\u003E, for which the key concepts are \u003Ca href=\u0022https://en.wikipedia.org/wiki/Angular_momentum\u0022 rel=\u0022external nofollow\u0022\u003Eangular momentum\u003C/a\u003E and \u003Ca href=\u0022https://en.wikipedia.org/wiki/Moment_of_inertia\u0022 rel=\u0022external nofollow\u0022\u003Emoment of inertia tensor\u003C/a\u003E. Integrating orientation can generally use the same basic principles, but the actual EoMs for bodies with non-degenerate axes can be a touch overwhelming. There are some variations, but by far the cleanest approach is simply to go with \u003Ca href=\u0022https://en.wikipedia.org/wiki/Euler%27s_equations_(rigid_body_dynamics)\u0022 rel=\u0022external nofollow\u0022\u003EEuler\u0027s Equations\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nThings get further complicated by orientation changes in terms of aerodynamics. The drag coefficient will vary with orientation, and your body and control surfaces may start developing lift. Here, things can get as complex as you\u0027d care to press them. But honestly, if you get to a point where it matters, this project probably has gotten a bit out of hand.\n\u003C/p\u003E\n"},{"CreatedByName":"Green Baron","CreatedById":107381,"CreatedDateTime":"2018-11-03T09:26:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223480463\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541218443\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOn delta time: That is just the \u0022fine-ness\u0022 of the simulation in time, right?\u00A0For example, if I had an object moving at 10 m/s, a delta time of 1 second would advance the position of the object by 1 meter every loop cycle, and a delta time of 1/10 of a second would advance the object by 1/10 of a meter every time? And without the requirement of running in real time, like a game, I can just leave that as a constant, or are\u00A0there more considerations than that?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRight with the \u0022fine-ness\u0022. It takes care that the correct values are applied even if the program runs on computers with different performance. Well, in your example, if the speed is 10m/s, the rocket has moved 10m after 1 second. But the granularity of the clock is in micro- or even nanoseconds as it runs many times a second. PCs have a heartbeat of Gigahertz and 4-20 hearts :-), so on a PC your loop will run thousands of times a second if you let it.\n\u003C/p\u003E\n\u003Cp\u003E\nIf movement is linear you\u0027re fine, but it isn\u0027t, you come down from some terminal velocity to 0. Also your thrust curve varies, as does center of gravity, air density, etc. So you have to interpolate between values or look them up from pre-calculated stuff before you apply them to your formulas and use integration methods for the forces you calculated, as \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57710-k2/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257710\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57710-k2/\u0022 rel=\u0022\u0022\u003E@K^2\u003C/a\u003E hast stated in detail.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs for concrete examples, I\u0027d like to model a rocket with solid engines, including thrust curves, rotation, gravity, simple aerodynamics, etc. I\u0027d also like to be able to \u0022trick\u0022 a control system into thinking it is controlling the rocket, so producing appropriately inaccurate pressure and acceleration values.\u00A0I want to add later things like\u00A0specifying\u00A0the exact location and rotation of the thrust vector relative to the rocket\u0027s origin, center of mass shift during flight, momentum effects from moving weights, fins, or landing legs, and multiple engines.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI would run them in different modules and do some communication between them so it is easier to keep them apart and later try tinkering with multithreading if Python permits.\n\u003C/p\u003E\n\u003Cp\u003E\nSuggestion: In your loop, first call the calculation of is-values and apply variable values for whatever you have as controlling stuff. Write calculated values to an independent data structure. Then call the controller module and let it read the structure, and compare it to what should be and calculate corrections\u00A0 to the controlling variable as it sees fit, and feed them back via another structure to the calculation routine.\n\u003C/p\u003E\n\u003Cp\u003E\nIt all sounds that easy, but it isn\u0027t. Your rocket will probably paint funny things on the sky on the first tries :-)\n\u003C/p\u003E\n\u003Cp\u003E\nAlso you must take care that the calculator has finished before the other one reads and vice versa.\n\u003C/p\u003E\n\u003Cp\u003E\nThe biggest problem is probably choosing the right data structures for fast access and calculation ... ?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-11-03T09:33:01Z\u0022 title=\u002211/03/2018 09:33  AM\u0022 data-short=\u00225 yr\u0022\u003ENovember 3, 2018\u003C/time\u003E by Green Baron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-03T17:02:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223480517\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541223192\u0022 data-ipsquote-userid=\u0022129408\u0022 data-ipsquote-username=\u0022kerbiloid\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, kerbiloid said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUnlikely irl solid engines are enough accurately predictable to use them for landing as is.\n\u003C/p\u003E\n\u003Cp\u003E\nA second sooner, a second later, and your rocket \u003Cs\u003Elands\u003C/s\u003E lithobrakes not just as planned.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, I\u0027ve heard that their accuracy is surprisingly good though. Probably going to do some tests to determine how variable they are, unless anyone has a source for raw testing data of model engines?\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, kerbiloid said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMaybe you should use a special landing engine with a toroidal chamber getting filled by exhaust of powder gas generators.\u003Cbr\u003E\nWith several nozzles around, equipped with flaps redirecting the nozzle exhaust.\u003Cbr\u003E\nThen you would stop descending at several meters height, hover with this en\u003Cspan\u003E\uFEFF\u003C/span\u003Egine and slowly land by\u003Cspan\u003E\uFEFF\u003C/span\u003E tilting the flaps.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTVC is possible with solid engines:\u00A0\u003Ca href=\u0022https://www.youtube.com/channel/UCILl8ozWuxnFYXIe2svjHhg/featured\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.youtube.com/channel/UCILl8ozWuxnFYXIe2svjHhg/featured\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBut if I need to control thrust through the burn duration hybrid engines may be the best option, although pairs of 1/2 A or smaller solid engines may work too.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223480557\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541234982\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSimple physics simulation is basically just numerical integration over \u003Ca href=\u0022https://en.wikipedia.org/wiki/Newton%27s_laws_of_motion\u0022 rel=\u0022external nofollow\u0022\u003ENewton\u0027s 3rd Law\u003C/a\u003E. For general problems, it can get quite complicated, but for simple trajectory computations,\u00A0\u003Ca href=\u0022https://en.wikipedia.org/wiki/Verlet_integration\u0022 rel=\u0022external nofollow\u0022\u003EVelocity Verlet\u003C/a\u003E\u00A0is usually quite sufficient. Just keep making the time step smaller until results converge. If drag gives you trouble with Velocity Verlet, you can try generic \u003Ca href=\u0022https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods\u0022 rel=\u0022external nofollow\u0022\u003ERK4\u003C/a\u003E, but I doubt it\u0027ll be necessary.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only notable exception is gravity simulations. These tend to go bad with explicit integration methods over any significant time scales, and you have to do something funky, like implicit collocation methods. But unless your goal is predicting trajectory of a spacecraft in interplanetary space over the next several decades, you simply don\u0027t need that sort of precision. For everything else, Verlet has you covered 90% of the time, and RK4 picks up the slack on the rest. So if you get comfortable with these two methods, you have numerical part down.\n\u003C/p\u003E\n\u003Cp\u003E\nThe rest is just picking the right models. Gravity is a constant force for your case, so that\u0027s easy. Simple \u003Ca href=\u0022https://en.wikipedia.org/wiki/Drag_coefficient\u0022 rel=\u0022external nofollow\u0022\u003Equadratic drag\u003C/a\u003E is good for air resistance until you get into transonic speeds. Engine thrust is going to be tricky. You can get general thrust profiles from manufacturers, but the tolerance on these tend to be bad, so you\u0027ll have to add some random variation to have something resembling a real engine. If you encode the thrust curve with something like \u003Ca href=\u0022https://en.wikipedia.org/wiki/B%C3%A9zier_curve\u0022 rel=\u0022external nofollow\u0022\u003EBezier curve\u003C/a\u003E or \u003Ca href=\u0022https://en.wikipedia.org/wiki/Cubic_Hermite_spline\u0022 rel=\u0022external nofollow\u0022\u003Ecubic spline\u003C/a\u003E, moving a few control points around by small random amount, say 10%, should put you in a ballpark of what to expect. You\u0027d have to read up on manufacturer docs to get more precise. But if your method will work with 10% variation in control points, it\u0027ll probably work with real engines.\n\u003C/p\u003E\n\u003Cp\u003E\nIf orientation of the rocket changes, things get a bit more complex. You have to do \u003Ca href=\u0022https://en.wikipedia.org/wiki/Rigid_body\u0022 rel=\u0022external nofollow\u0022\u003Erigid body physics\u003C/a\u003E, for which the key concepts are \u003Ca href=\u0022https://en.wikipedia.org/wiki/Angular_momentum\u0022 rel=\u0022external nofollow\u0022\u003Eangular momentum\u003C/a\u003E and \u003Ca href=\u0022https://en.wikipedia.org/wiki/Moment_of_inertia\u0022 rel=\u0022external nofollow\u0022\u003Emoment of inertia tensor\u003C/a\u003E. Integrating orientation can generally use the same basic principles, but the actual EoMs for bodies with non-degenerate axes can be a touch overwhelming. There are some variations, but by far the cleanest approach is simply to go with \u003Ca href=\u0022https://en.wikipedia.org/wiki/Euler%27s_equations_(rigid_body_dynamics)\u0022 rel=\u0022external nofollow\u0022\u003EEuler\u0027s Equations\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nThings get further complicated by orientation changes in terms of aerodynamics. The drag coefficient will vary with orientation, and your body and\u003Cspan\u003E\uFEFF\u003C/span\u003E control surfaces may start developing lift. Here, things can get as complex as you\u0027d care to press them. But honestly, if you get to a point where it matters, this project probably has gotten a bit out of hand.\u003Cspan\u003E\uFEFF\u003Cspan\u003E\uFEFF\u003Cspan\u003E\uFEFF\u003Cspan\u003E\uFEFF\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s really helpful, thanks.\n\u003C/p\u003E\n\u003Cp\u003E\nAre quaternions overkill for this? I know they avoid gimbal lock, but is that really an issue if you\u0027re staying within 10 degrees of vertical throughout the entire flight?\n\u003C/p\u003E\n"},{"CreatedByName":"Gargamel","CreatedById":64714,"CreatedDateTime":"2018-11-03T19:59:29Z","Content":"\n\u003Cp\u003E\nYou can spend a lot of effort on simulating the maths here, but given real world circumstances, your simulations will only get you within the ballpark of accuracy.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI think you need to design for large margins of error, and have active systems on your rocket making adjustments.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI know this is straying a bit from your intended \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E, but...\n\u003C/p\u003E\n\u003Cp\u003E\nUse your sims to find your final engine properties.\u00A0 Then you will know how much thrust you need to do your final suicide burn, and at what altitude.\u00A0\u00A0 Unless you plan on launching on a salt flat or frozen lake bed, undulations in the topography will affect your timing of the engine, if that\u0027s the method you are planning to use.\u00A0\u00A0 Also, while you might try to stay within 10\u0027 of vertical, wind and launch angles might throw this off too.\n\u003C/p\u003E\n\u003Cp\u003E\nMy suggestion might be to limit your theoertical calculations, and lean more heavily on real time calculations.\u00A0\u00A0 There are Arduino chips out there that are small enough that won\u0027t affect launch mass that much, and using Ultrasonic transducers, you will be able to calculate your altitude accurately enough to perform a suicide burn.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe transducers are somewhat bulky, but fairly light weight, so you\u0027d probably have a pair of them to balance out the aero drag.\u00A0 That also increases the reliability and accuracy of the data you are getting from them.\u00A0 The sensor\u0027s are good to about 2-3m, which should be plenty for the size of craft you\u0027re building I assume.\u00A0\u00A0\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-03T23:02:00Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223480796\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541275169\u0022 data-ipsquote-userid=\u002264714\u0022 data-ipsquote-username=\u0022Gargamel\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Gargamel said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can spend a lot of effort on simulating the maths here, but given real world circumstances, your simulations will only get you within the ballpark of accuracy.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI think you need to design for large margins of error, and have active systems on your rocket making adjustments.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWe definitely need active control. This simulation is mostly to determine whether it is possible to use solid engines for this, and to test and debug the control code without blowing things up.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Gargamel said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI know this is straying a bit from your intended \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E, but...\n\u003C/p\u003E\n\u003Cp\u003E\nUse your sims to find your final engine properties.\u00A0 Then you will know how much thrust you need to do your final suicide burn, and at what altitude.\u00A0\u00A0 Unless you plan on launching on a salt flat or frozen lake bed, undulations in the topography will affect your timing of the engine, if that\u0027s the method you are planning to use.\u00A0\u00A0 Also, while you might try to stay within 10\u0027 of vertical, wind and launch angles might throw this off too.\n\u003C/p\u003E\n\u003Cp\u003E\nMy suggestion might be to limit your theoertical calculations, and lean more heavily on real time calculations.\u00A0\u00A0 There are Arduino chips out there that are small enough that won\u0027t affect launch mass that much, and using Ultrasonic transducers, you will be able to calculate your altitude accurately enough to perform a suicide burn.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe transducers are somewhat bulky, but fairly light weight, so you\u0027d probably have a pair of them to balance out the aero drag.\u00A0 That also increases the reliability and accuracy of the data you are getting from them.\u00A0 The sensor\u0027s are good to about 2-3m, which should be plenty for the size of craft you\u0027re building I assume.\u00A0\u00A0\u00A0\u003Cspan\u003E\uFEFF\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nDo you mean cm? 2-3 meters is a lot. It also looks like you can improve the accuracy of those by correcting for the speed of sound based on air temp, but\u00A0I\u0027m hoping accurate enough accelerometers will let us integrate to get our altitude. Initial tests will likely be drop tests rather than using powered ascent, allowing for much more control over where it lands.\n\u003C/p\u003E\n"},{"CreatedByName":"Gargamel","CreatedById":64714,"CreatedDateTime":"2018-11-04T00:18:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223480864\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541286120\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDo you mean cm? 2-3 meters is a lot. I\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s their effective range.\u00A0\u00A0 Especially if you pair them up, it will cancel out the errors.\u00A0\u00A0 But yeah, they are accurate to about 2-3 cm, maybe less.\u00A0 Good enough for the computer to yell FIRE! and then let it fall the last couple cm.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"wumpus","CreatedById":133850,"CreatedDateTime":"2018-11-04T15:48:32Z","Content":"\n\u003Cp\u003E\nFirst with python: you have sci-py downloaded (the replacement for numpy)?\u00A0 Not sure how well it works with pypy, for simple things it might make sense just to work with pypy.\u00A0 Also if you want your \u003Cspan\u003E\u003Cspan\u003E\u0022loop fineness\u0022 remotely reasonable, make sure all floats are 64bit.\u00A0 Python should be 64 bit (I just checked mine, it is), but I\u0027ve run into this issue with FFTs and such.\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003Cspan\u003ECan you wrap \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E (I assume it is c#) into something you can call with Python (I\u0027m not even sure about the license, you may have to talk to the author)?\u00A0 I\u0027m guessing the aerodynamics are \u0022good enough\u0022 (except that they are for far larger rockets, it might not scale down well to model rockets).\u00A0 You might be able to build your rockets in KSP and then scale them down and run \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E on them.\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003Cspan\u003EWill you even get transonic?\u00A0 I\u0027d assume that \u0022beyond transonic\u0022 would be past the range of model rocketry (in all but large multistage rockets), but getting transonic might be a problem.\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003Cspan\u003EAnd as far as retropropulsion in model rocketry: first, I\u0027d recommend measuring your ignition delay on the groudn with whatever means you are using to ignite your retrorocket.\u00A0 Also model rockets are kept stable by fins.\u00A0 It is fairly easy to determine the required speed (about 10m/s assuming stability after a 5g launch off a 1m rod) for stability, so don\u0027t try to retro decelerate below 10m/s without fancy stability controls.\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2018-11-04T21:44:53Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223480732\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541264557\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 11/3/2018 at 10:02 AM, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAre quaternions overkill for this? I know they avoid gimbal lock, but is that really an issue if you\u0027re staying within 10 degrees of vertical throughout the entire flight?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou wouldn\u0027t want to use Euler angles or anything similar, yes. But describing mechanics in terms of quaternions is awkward. It can certainly be done, but I wouldn\u0027t bother. Just use 3x3 \u003Ca href=\u0022https://en.wikipedia.org/wiki/Rotation_matrix\u0022 rel=\u0022external nofollow\u0022\u003Erotation matrices\u003C/a\u003E. They avoid singularities just as well as quaternions do, but the math is easier to carry out, and rotation matrices have convenient intuitions about rows or columns as coordinate axes. Something that quaternions certainly lack. And there are standard formulae for extracting Euler angles from a rotation matrix if you need them for output or debugging.\n\u003C/p\u003E\n\u003Cp\u003E\nAs an aside, it\u0027s worth pointing out that rotation with quaternions and matrices are very closely related. The multiplicative group of unit quaternions is homomorphic to SO(3) group, which contains all matrices you\u0027d use for rotation. That is, for every rotation matrix, there is a unit quaternion that describes the same rotation. Two, in fact, since changing sign of the quaternion doesn\u0027t change rotation it describes. So anything you can do with one, you can certainly do with the other. But your mileage may vary on implementation. Matrices are easier to work with, which is why I recommend them here. In contrast, quaternions take up less space, which is very important in cache optimization, and highly optimized code for quaternion math can be a little faster than matrix equivalent. Both of these make quaternions preferred method in video games. There are also some skinning techniques that leverage quaternions\u0027 better behavior under interpolation, such as \u003Ca href=\u0022https://en.wikipedia.org/wiki/Dual_quaternion\u0022 rel=\u0022external nofollow\u0022\u003EDual Quaternion\u003C/a\u003E Skinning, but that\u0027s getting way off on a tangent.\n\u003C/p\u003E\n\u003Cp\u003E\nSome of these considerations may be valid for physics simulations in certain contexts. It\u0027s not something you\u0027ll ever have to worry simulating a few rigid bodies, though. There, I would absolutely place simplicity and better intuitiveness of rotation matrices above any computational edge you might have with quaternions. As a general rule, whenever correct beats fast, I would skip quaternions.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-11-04T21:46:35Z\u0022 title=\u002211/04/2018 09:46  PM\u0022 data-short=\u00225 yr\u0022\u003ENovember 4, 2018\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-04T22:59:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223481183\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541346512\u0022 data-ipsquote-userid=\u0022133850\u0022 data-ipsquote-username=\u0022wumpus\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, wumpus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFirst with python: you have sci-py downloaded (the replacement for numpy)?\u00A0 Not sure how well it works with pypy, for simple things it might make sense just to work with pypy.\u00A0 Also if you want your \u003Cspan\u003E\u003Cspan\u003E\u0022loop fineness\u0022 remotely reasonable, make sure all floats are 64bit.\u00A0 Python should be 64 bit (I just checked mine, it is), but I\u0027ve run into this issue with FFTs and such.\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m just about to get my python environment set up. It\u0027s actually been a while since I last used it.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, wumpus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003Cspan\u003ECan you wrap \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E (I assume it is c#) into something you can call with Python (I\u0027m not even sure about the license, you may have to talk to the author)?\u00A0 I\u0027m guessing the aerodynamics are \u0022good enough\u0022 (except that they are for far larger rockets, it might not scale down well to model rockets).\u00A0 You might be able to build your rockets in KSP and then scale them down and run \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E on them.\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003Cspan\u003EWill you even get transonic?\u00A0 I\u0027d assume that \u0022beyond transonic\u0022 would be past the range of model rocketry (in all but large multistage rockets), but getting transonic might be a problem.\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think trying to get calls to \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E\u00A0working will be more effort than just rewriting my own version without any supersonic considerations. The rocket will also likely look like a tube, so there shouldn\u0027t be a need for the ability to simulate bricks like \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E can.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, wumpus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan\u003E\u003Cspan\u003EAnd as far as retropropulsion in model rocketry: first, I\u0027d recommend measuring your ignition delay on the groudn with whatever means you are using to ignite your retrorocket.\u00A0 Also model rockets are kept stable by fins.\u00A0 It is fairly easy to determine the required speed (about 10m/s assuming stability after a 5g launch off a 1m rod) for stability, so don\u0027t try to retro decelerate below 10m/s without fancy stability controls.\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWe will probably end up needing stability control of some kind. Hopefully this sim will make it clear how much and what kind of stability hardware will be needed.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2018-11-05T08:35:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223481371\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541372387\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWe will probably end up needing stability control of some kind. Hopefully this sim will make it clear how much and what kind of stability hardware will be needed.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nA ring rudder tends to work pretty good with model rockets. The ring is bellow nozzle and around the flow. Not being inserted into flow reduces need for fancy materials, and it tends to have enough authority for anything you\u0027d use it for. From there, a simple PID loop should keep the rocket stable, but your overall solution is likely to be way more complex. If you just needed stabilization, I\u0027d grab ready built drone control system, but since you\u0027ll probably need to control way more parameters, you\u0027ll need an MCU anyways (PIC, Arduino, etc.) and a serious IMU. Fortunately, later are plentiful for drones and helis, so you can get a good one cheap. Then you\u0027d write your own PID loop along with everything else you need.\n\u003C/p\u003E\n"},{"CreatedByName":"wumpus","CreatedById":133850,"CreatedDateTime":"2018-11-05T14:10:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223480864\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541286120\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 11/3/2018 at 7:02 PM, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWe definitely need active control. This simulation is mostly to determine whether it is possible to use solid engines for this, and to test and debug the control code without blowing things up.\n\u003C/p\u003E\n\u003Cp\u003E\nDo you mean cm? 2-3 meters is a lot. It also looks like you can improve the accuracy of those by correcting for the speed of sound based on air temp, but\u00A0I\u0027m hoping accurate enough accelerometers will let us integrate to get our altitude. Initial tests will likely be drop tests rather than using powered ascent, allowing for much more control over where it lands.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m curious what strategy you have for using solids for such landings.\u00A0 I\u0027d assume a \u0027\u0022hoverslam\u0022 is right out, although it might be possible to blow the tops of the motors (presumably side mounted).\u00A0 Some sort of two step (burn to near hover, then descend on weaker engines) sounds far more possible, but replaces fine ignition timing with controls issues.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223481371\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541372387\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWe will probably end up needing stability control of some kind. Hopefully this sim will make it clear how much and what kind of stability hardware will be needed.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223481562\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541406912\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA ring rudder tends to work pretty good with model rockets. The ring is bellow nozzle and around the flow. Not being inserted into flow reduces need for fancy materials, and it tends to have enough authority for anything you\u0027d use it for. From there, a simple PID loop should keep the rocket stable, but your overall solution is likely to be way more complex. If you just needed stabilization, I\u0027d grab ready built drone control system, but since you\u0027ll probably need to control way more parameters, you\u0027ll need an MCU anyways (PIC, Arduino, etc.) and a serious IMU. Fortunately, later are plentiful for drones and helis, so you can get a good one cheap. Then you\u0027d write your own PID loop along with everything else you need.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy point above is that a ring rudder isn\u0027t reliably stable under 10m/s (that\u0027s probably well beyond where the fins stall, but fairly easy to check by launching off a rod with controlled acceleration (probably just using a weight and lever to launch)).\u00A0 You would either have to land with at least the rudder stall speed or put the rudder in the exhaust (or similar games with the exhaust).\n\u003C/p\u003E\n\u003Cp\u003E\nPersonally, I\u0027d probably stick to \u0022proof of concept\u0022 where I retrorocketed to some predetermined height and parachute the rest of the way (not sure if you can get a parachute to open from a good height to measure.\u00A0 Possibly CO2-assissted parachutes are in order).\n\u003C/p\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-05T21:02:20Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223481562\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541406912\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA ring rudder tends to work pretty good with model rockets. The ring is bellow nozzle and around the flow. Not being inserted into flow reduces need for fancy materials, and it tends to have enough authority for anything you\u0027d use it for. From there, a simple PID loop should keep the rocket stable, but your overall solution is likely to be way more complex. If you just needed stabilization, I\u0027d grab ready built drone control system, but since you\u0027ll probably need to control way more parameters, you\u0027ll need an MCU anyways (PIC, Arduino, etc.) and a serious IMU. Fortunately, later are plentiful for drones and helis, so you can get a good one cheap. Then you\u0027d write your own PID loop along with everything else you need.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027ll look more into ring rudders, those sound useful. Buying a premade IMU might be a good idea, it looks like they cost about $15 USD. The tricky bit of landing probably won\u0027t be staying upright, but rather controlling horizontal drift.\u00A0As for the flight computer, one of the people in the group is thinking of using a raspberry pi. Personally, I think an arduino\u00A0would be adequate, but nothing\u0027s set in stone yet.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223481640\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541427054\u0022 data-ipsquote-userid=\u0022133850\u0022 data-ipsquote-username=\u0022wumpus\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, wumpus said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m curious what strategy you have for using solids for such landings.\u00A0 I\u0027d assume a \u0027\u0022hoverslam\u0022 is right out, although it might be possible to blow the tops of the motors (presumably side mounted).\u00A0 Some sort of two step (burn to near hover, then descend on weaker engines) sounds far more possible, but replaces fine ignition timing with controls issues.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWe\u0027re actually kind of forced to do a hoverslam/suicide burn since there is no way to control the thrust of the engine. If the engines have tight enough tolerances, then we just have a timing and stability problem as long as the drop height is the same. Otherwise, there is the option of adding smaller engines which the computer can decide to fire or not based on the thrust from the main engine, some kind of thrust termination system (I was personally imagining simply detaching the engine and letting it fly up through the center of the rocket, but some kind of fins that blocked the exhaust could work too), or even jettisoning weight as needed. Adding the smaller engines sort of moves your suggestion of two steps into one step.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf we\u0027re not able to get consistent enough results with solid engines we\u0027ll probably have to move to hybrids.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMy point above is that a ring rudder isn\u0027t reliably stable under 10m/s (that\u0027s probably well beyond where the fins stall, but fairly easy to check by launching off a rod with controlled acceleration (probably just using a weight and lever to launch)).\u00A0 You would either have to land with at least the rudder stall speed or put the rudder in the exhaust (or similar games with the exhaust).\n\u003C/p\u003E\n\u003Cp\u003E\nPersonally, I\u0027d probably stick to \u0022proof of concept\u0022 where I retrorocketed to some predetermined height and parachute the rest of the way (not sure if you can get a parachute to open from a good height to measure.\u00A0 Possibly CO2-assissted parachutes are in order).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u0022Landing\u0022 at a point in mid-air is almost certainly how we will initially test the rocket. To make our program sound more respectable, we could use a bouncy castle to prevent damage if the parachute doesn\u0027t deploy right. \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EEDIT:\u00A0\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EWhat kind of mathematical\u00A0model is recommended\u00A0for velocity? X, Y, Z velocities stored separately? Vectors?\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-11-05T21:03:20Z\u0022 title=\u002211/05/2018 09:03  PM\u0022 data-short=\u00225 yr\u0022\u003ENovember 5, 2018\u003C/time\u003E by Mad Rocket Scientist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2018-11-05T22:34:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223481851\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541451740\u0022 data-ipsquote-userid=\u0022139256\u0022 data-ipsquote-username=\u0022Mad Rocket Scientist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs for the flight computer, one of the people in the group is thinking of using a raspberry pi. Personally, I think an arduino\u00A0would be adequate, but nothing\u0027s set in stone yet.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPi Zero is definitely viable, and will give you some advantages if you want to get fancy. It\u0027s heavier than a stripped-down Arduino, but actually lighter than some devboards I\u0027ve seen.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Mad Rocket Scientist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003EWhat kind of mathematical\u00A0model is recommended\u00A0for velocity? X, Y, Z velocities stored separately? Vec\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\uFEFF\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003Etors?\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou don\u0027t want to drag them around as 3 different variables. That\u0027s a pain. Use numpy. It provides \u002B/- operator overloads that will let you add two arrays as vectors. (Otherwise, tuples and arrays default to treating \u002B as concatenation.)\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eimport numpy as np\na = np.array([1, 2, 3])\nb = np.array([4, 5, 6])\nprint (a \u002B b)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nMoreover, you can do np.cross(a, b) to do cross products, and np.dot(a, b) to do scalar products. So that\u0027s basically all of your vector math right there. Numpy will also do matrix products for you. It\u0027s a pretty good library for handling all kinds of tensor-like data.\n\u003C/p\u003E\n"},{"CreatedByName":"Gargamel","CreatedById":64714,"CreatedDateTime":"2018-11-06T01:25:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223481909\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541457289\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPi Zero is definitely viable, and will give you some advantages if you want to get fancy. It\u0027s heavier than a stripped-down Arduino, but actually lighter than some devboards I\u0027ve seen.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs for the flight computer, one of the people in the group is thinking of using a raspberry pi. Personally, I think an arduino\u00A0would be adequate, but nothing\u0027s set in stone yet. \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/139256-mad-rocket-scientist/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022139256\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/139256-mad-rocket-scientist/\u0022 rel=\u0022\u0022\u003E@Mad Rocket Scientist\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWay overkill too.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0I use ATTiny 45/85/44/84 chips for anything I need a really small package.\u00A0\u00A0 All the circuitry can fit on the tip of my finger if you design the board correctly, bit bigger if not. The bigger chips (44/84) are about 3/4\u0022 long and about 1/4\u0022 wide (18mm x 6mm), the smaller ones about half that length.\u00A0 I won\u0027t even guess at the weight, but it\u0027s less than 2-3 US quarters. \u00A0\u00A0 I think you\u0027ll need a Resistor and a cap too to filter the noise, but you could get away without.\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThey will take the entire C\u002B\u002B language that you can put into a normal Arduino.\u00A0 You\u0027ll need to make yourself an \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E programming shield that runs off an Uno to program it.\u00A0\u00A0\u00A0 You just upload the \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E programming sketch onto the UNO, plop the shield on,\u00A0 drop the chip onto the shield, upload the Flight control program onto the chip, and then drop the chip onto the final circuit board.\u00A0\u00A0\u00A0\u00A0 You can even add jumpers to your FC board if you need to reprogram it later, or just use a socket so you can pull the chip on and off at will, but that will add a bit of size and weight, but not much.\u00A0 The \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E programmer shield is easily to build, I did it in an afternoon.\u00A0\u00A0 I have hand soldered entire boards on circular perfboard that were about 20mm diameter.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe entire package from UNO to Attinys shouldn\u0027t run you more than $40 all said, depending on what you get.\u00A0\u00A0 Each ATTiny runs about $1-$2 each, less if you buy in bulk (like a stick of 12 or so).\u00A0\u00A0 And bulk may be good if you plan on wrecking some in a fiery crash. \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe reason you don\u0027t see them pushed a lot, is that they are a lone chip.\u00A0\u00A0 You have to design your own IC board with it.\u00A0 That itself is it\u0027s own rabbit hole.\u00A0 But if you only have one or maybe 2 other IC\u0027s on the same board, it should be a fairly simple task to do.\u00A0\u00A0 The art of home board making is pretty fun too.\u00A0 Even if you don\u0027t go with a printed board, perfboard is an option too, but that will add weight.\u00A0\u00A0\u00A0 At the very least someone can design you a board, and then you could send it out for fabrication.\u00A0 That\u0027s pretty cheap too.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022images?q=tbn:ANd9GcScTPMbgZrTud30FbTVfZ8\u0022 class=\u0022ipsImage\u0022 height=\u0022205\u0022 src=\u0022https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcScTPMbgZrTud30FbTVfZ8BiWjUI8rGKit5URLxNKNm9CYw_xsf\u0022 width=\u0022246\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nATTiny 45/85 for size. \u00A0 It\u0027s the little black 8 legged chip in the corner.\u00A0\u00A0 The 44/84\u0027s have an extra 8 legs for more connections if needed.\u00A0\u00A0 And if you have the moxy and get a surface mounted version, rather than a through hole, they get tiiiiiiiiny.\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-11-06T01:31:45Z\u0022 title=\u002211/06/2018 01:31  AM\u0022 data-short=\u00225 yr\u0022\u003ENovember 6, 2018\u003C/time\u003E by Gargamel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-06T03:52:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223482030\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541467518\u0022 data-ipsquote-userid=\u002264714\u0022 data-ipsquote-username=\u0022Gargamel\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Gargamel said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWay overkill too.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0I use ATTiny 45/85/44/84 chips for anything I need a really small package.\u00A0\u00A0 All the circuitry can fit on the tip of my finger if you design the board correctly, bit bigger if not. The bigger chips (44/84) are about 3/4\u0022 long and about 1/4\u0022 wide (18mm x 6mm), the smaller ones about half that length.\u00A0 I won\u0027t even guess at the weight, but it\u0027s less than 2-3 US quarters. \u00A0\u00A0 I think you\u0027ll need a Resistor and a cap too to filter the noise, but you could get away without.\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n[...]\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI didn\u0027t even know they made microcontrollers\u00A0that small and cheap. Thanks.\n\u003C/p\u003E\n\u003Cp\u003E\nGetting more into the specifics:\n\u003C/p\u003E\n\u003Cp\u003E\nI have a object at rest 10 m above the ground. To simulate its motion, can I do something like this?\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E numpy \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eas\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E np\ng0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E np\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E([\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E9.81\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nposition \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E np\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E([\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#does it matter if these are arrays vs. lists?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nvelocity \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E np\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E([\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nt \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\ndt \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.01\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E position\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  t \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dt\n  position \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E velocity \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dt \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.5\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E g0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Edt \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dt \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#Just stealing this from someone else\u0027s implementation of the velocity verlet...\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  velocity \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E g0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dt\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nTesting this, I get 0.003\u00A0seconds of from sqrt(2*d/9.81) where d = 10. I also get completely shocked that it worked so well.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2018-11-06T05:37:00Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223482030\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541467518\u0022 data-ipsquote-userid=\u002264714\u0022 data-ipsquote-username=\u0022Gargamel\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Gargamel said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWay overkill too.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFor a simple control loop? Absolutely. But with Pi, you can also be managing video recording and live telemetry (via WiFi if you get Zero W version). Not to mention that you\u0027re basically running a full OS, so you can write your control scripts in anything you want, and use full debug suit\u00A0without having to worry about compiling/assembling code for a particular MCU, and worrying about op counts and memory overhead. Granted, later tends to become moot with modern MCUs, but even then, debugging in viva can be troublesome.\n\u003C/p\u003E\n\u003Cp\u003E\nDoesn\u0027t change the fact that it\u0027s overkill, of course, but I also see little reason not to go overkill. Pi Zero is cheap, light enough for anything bigger than an A engine, and very easy to use even for somebody with no experience with programming and flashing MCU.\n\u003C/p\u003E\n\u003Cp\u003E\nI never tried ATTiny, but I\u0027ve used to be all about PIC MCUs myself. Tiny, cheap, come in variety of models and packages for every job. But I\u0027m starting to lean more and more towards just dropping a Pi Zero in and having the same tools available as if I was working with a PC. Call it lazy, but for $10 and 9g, I don\u0027t mind being lazy.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I don\u0027t insist that it\u0027s the right solution. Just that the fact that it\u0027s overkill doesn\u0027t make it the wrong solution.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/139256-mad-rocket-scientist/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022139256\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/139256-mad-rocket-scientist/\u0022 rel=\u0022\u0022\u003E@Mad Rocket Scientist\u003C/a\u003E\u00A0That code looks good. Your dt is 0.01 seconds, so that\u0027s as precise as you\u0027re going to get your answer. You can try reducing dt\u00A0further, and you should get closer and closer to the analytical result, but whether you need to will depend on precision you actually need from your system.\n\u003C/p\u003E\n"},{"CreatedByName":"Gargamel","CreatedById":64714,"CreatedDateTime":"2018-11-06T22:58:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223482122\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541482620\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCall it lazy, but for $10 and 9g, I don\u0027t mind being lazy.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI hear that, but if your budget is $2 and 1g.....\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs for live telemetry, I would fully expect a rocket to travel outside of wifi range.\u00A0\u00A0 If not, the ESP-whatever breakout boards are very small.\u00A0 Arduino does have a 2.4ghz radio chip available, small and light, with basically LOS range, along with requisite software libraries.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut it depends on budgets: money, size, and weight.\u00A0\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2018-11-08T00:32:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223482523\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541545113\u0022 data-ipsquote-userid=\u002264714\u0022 data-ipsquote-username=\u0022Gargamel\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 11/6/2018 at 2:58 PM, Gargamel said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI hear that, but if your budget is $2 and 1g.....\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n*shrug* No argument in general, but the smallest servos I\u0027ve worked with just happen to be 9g each as well, and you\u0027ll want at least two of these, plus a power pack to keep them running. So you\u0027re probably looking at something like 30g and $20\u002B of hardware before you consider MCU. That still doesn\u0027t make cost and weight of Pi Zero trivial, but certainly blunts the impact of going with something smaller.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyways, without more details, \u0022It depends,\u0022 is probably the most that can be said, yeah.\n\u003C/p\u003E\n"},{"CreatedByName":"Gargamel","CreatedById":64714,"CreatedDateTime":"2018-11-08T02:56:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223483205\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541637146\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ve worked with just happen to be 9g each as well\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThose will do, the 9g\u0027s will probably be able to handle the loads, but they do make smaller, lighter, and stronger digitals, but for that, it\u0027ll cost ya....\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223483205\u0022 data-ipsquote-contentid=\u0022179492\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221541637146\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnyways, without more details, \u0022It depends,\u0022 is probably the most that can be said, yeah.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYup.\u00A0\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Mad Rocket Scientist","CreatedById":139256,"CreatedDateTime":"2018-11-09T21:26:05Z","Content":"\n\u003Cp\u003E\nI don\u0027t know about what budgets (money, mass, time) will be the most important.\n\u003C/p\u003E\n\u003Cp\u003E\nTwo other questions:\n\u003C/p\u003E\n\u003Cp\u003E\nIs it reasonable to assume that mass flow rate is linearly correlated with thrust?\n\u003C/p\u003E\n\u003Cp\u003E\nAnd about 3x3 rotation matrices: do they describe a specific rotation of an object in space at a point in time, or do they describe the\u00A0\u003Cem\u003Eact\u003C/em\u003E\u00A0of rotating from one rotational point to another?\n\u003C/p\u003E\n"}]}