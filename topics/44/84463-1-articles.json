{"TopicId":84463,"ForumId":44,"TopicTitle":"Any other Scratchers out there? Share your projects!","CreatedByName":"GreeningGalaxy","CreatedById":66813,"CreatedDateTime":"2014-09-12T23:12:48Z","PageNum":1,"Articles":[{"CreatedByName":"GreeningGalaxy","CreatedById":66813,"CreatedDateTime":"2014-09-12T23:12:48Z","Content":"\n\u003Cp\u003EI\u0027m personally a huge fan of \u003Ca href=\u0022http://scratch.mit.edu\u0022 rel=\u0022external nofollow\u0022\u003EScratch\u003C/a\u003E, a pseudo-programming language type of thing made by MIT. Yes, I know, as soon as I post this, someone\u0027s going to click on that link, take one look, and then want to post something like \u0022Wow, GG, that\u0027s for \u003Cem\u003Ekids\u003C/em\u003E! It\u0027s totally not \u003Cem\u003Ereal\u003C/em\u003E programming! Why would you ever use that for anything serious?\u0022 \u003C/p\u003E\u003Cp\u003EPlease don\u0027t do that. I\u0027m aware that Scratch does not use plain text code (well, it kind of does, but that\u0027s more complicated) and that its site is \u0027geared towards all ages,\u0027 which is generally just adult-speak for \u0027designed for small kids.\u0027 Yes, it\u0027s simplistic, but that doesn\u0027t mean you can\u0027t do a lot with it! There are a lot of great projects in the Featureds and such, and you can find more by searching around. \u003C/p\u003E\u003Cp\u003EWhile you\u0027re there, check out this KSP-inspired spaceplane simulator I made!- \u003Ca href=\u0022http://scratch.mit.edu/projects/25716804/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://scratch.mit.edu/projects/25716804/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s no Ferram Aerospace Research (nor is it 3D), but I did try my best to simulate aerodynamics to a simplified extent. The orbital mechanics are complete crap, but they\u0027re not really the point of the project, I suppose.\u003C/p\u003E\u003Cp\u003ESo, has anyone else made anything cool (KSP/space-related or otherwise) in Scratch? If so, link us to it!\u003C/p\u003E\n"},{"CreatedByName":"Lordherrmann","CreatedById":9345,"CreatedDateTime":"2014-09-12T23:55:29Z","Content":"\n\u003Cp\u003EI remember doing a few little projects with scratch back in high school. Our teacher let us play around with it in the school year\u0027s last week, so we really didn\u0027t come up with anything serious. Just nonsensical stuff like creating psychedelic colour patterns or letting Scratch play some ball. It was quite funny though.\u003C/p\u003E\u003Cp\u003EI think I\u0027ll have to get into it again, but with some time I\u0027ll try to come up with with some interesting things.\u003C/p\u003E\u003Cp\u003EI really like the project you posted here, even though I experienced a little glitch were the ground detection wouldn\u0027t work I somehow managed to take off and get the plane into orbit and back. Really nice work with the atmospheric effects and the aerodynamic simulation. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2014-09-12T23:59:52Z","Content":"\n\u003Cp\u003Ei prefer real programming. visual programming is great for learning, but not that useful for creating big projects. lego rcx/nxt was nice for getting the basic concepts of programming robotics down, but i quickly switched to nqc/nxc programming and found it much easier to work with for large projects. i dont think i would want to go backwards and use something like scratch. i do a lot of c/\u002B\u002B, much on embedded platforms. my most recent project was a software renderer i wrote in c\u002B\u002B for the raspberry pi, which is loaded with bugs and still not working right, but it is drawing shoddy 3d graphics in a pitft screen. i do a lot of arduino projects too, sometimes on custom boards, and sometimes i even ditch the arduino ide and do everything in winavr. i also do a lot of lua, i have a more complete game engine running in pure lua, and i also use lua to build quick gui apps (usually to talk to an mcu over a com port). but i dont do scratch.\u003C/p\u003E\u003Cp\u003Eone thing that is interesting to note is that textual hardware descriptor languages (such as verilog and vhdl), which are used to design and simulate microarchitectures, replace more traditional circuit/logic diagrams. because when a system gets significantly complex, diagrams become very confusing, very fast. code is just very easy to organize. so for simple little apps scratch might do well. but i wouldn\u0027t want to design an os or game engine with it.\u003C/p\u003E\n"},{"CreatedByName":"GreeningGalaxy","CreatedById":66813,"CreatedDateTime":"2014-09-13T04:29:18Z","Content":"\n\u003Cp\u003EThe intended implication of the original post was that if you prefer real programming, then this is not your thread. \u003C/p\u003E\u003Cp\u003EI\u0027m aware that working with actual code is better for bigger projects; I like Scratch because it\u0027s relaxing to be able to dispense with syntax errors and typos while still being able to think in terms of code. Things like the spaceplane sim I made are about as big as I like to get with Scratch, because if you go much bigger then the software starts getting bogged down. The other main reason why Scratch interests me is that, because its learning curve is so shallow, anyone good at thinking with abstractions (who, especially in the case of the younger crowd, might not know any proper programming languages yet) can create some pretty cool stuff without having to read textbooks, take classes, or plug around with CodeCademy for a few weeks.\u003C/p\u003E\u003Cp\u003EAs I tried to make it easy to see from the start, talking about all the things you do in \u0027real\u0027 programming languages and the reasons why you don\u0027t use Scratch is exactly the opposite of the point of this thread.\u003C/p\u003E\u003Cp\u003EThanks for understanding!\u003C/p\u003E\n"},{"CreatedByName":"Nibb31","CreatedById":7272,"CreatedDateTime":"2014-09-13T08:36:54Z","Content":"\n\u003Cp\u003EScratch is kind of a modern day equivalent of Basic. It\u0027s designed to get kids into the concepts of programming.\u003C/p\u003E\u003Cp\u003EI still think Basic is great for that, and probably offers more flexibility that Scratch does.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E10 Print \u0022Endless Loop\u0022\u003Cbr\u003E20 Goto 10\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"MegaFlop10","CreatedById":114575,"CreatedDateTime":"2014-09-13T11:05:28Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022http://scratch.mit.edu/users/MegaFlop10/\u0022 rel=\u0022external nofollow\u0022\u003EYes!\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI started playing around with it randomly and I made some silly fighting game with it. I\u0027ve learned Python now, but I still don\u0027t have any ideas of what to do next.\u003C/p\u003E\u003Cp\u003EThe first serious game I did was Arm Flailer, but it was almost finished before I gave up.\u003C/p\u003E\u003Cp\u003EI then made Microwaveable Simulator 2014. Just a quick thing I did in a few hours.\u003C/p\u003E\u003Cp\u003EThen I did Super Basketball Tournament on my holiday in Hong Kong. It was my first proper game, with AI and everything.\u003C/p\u003E\u003Cp\u003EMy last one was Fighter-37, about a jet fighter beating up bad guys. A simple arcade game, it was fun to make though.\u003C/p\u003E\u003Cp\u003EI had 32 Scratch projects in my projects folder.\u003C/p\u003E\u003Cp\u003EI also did a tic-tac-toe AI that would almost win every time.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2014-09-13T11:21:39Z","Content":"\n\u003Cp\u003Eyou got to start somewhere. my first programming experience threw me into the deep end with c. this was in the mid 90s and up to that point i didnt even own a computer. later when i finally got a computer, it was a 120mhz processor with 8mb of ram, i dont think you could have run a graphic programming language very well. you would be constantly out of memory. its rather nice that you have things like scratch to play with. it takes an otherwise steep learning curve and flattens it out to the point where a child can do it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-13T11:24:00Z\u0022 title=\u002209/13/2014 11:24  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 13, 2014\u003C/time\u003E by Nuke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Thomas988","CreatedById":92699,"CreatedDateTime":"2014-09-13T11:58:05Z","Content":"\n\u003Cp\u003EIn 8th grade, my Tech Ed. class used Scratch. We were taught the basics, and then our teacher let us loose to make whatever we wanted for a few weeks. I made 2D EVA game where you controlled a Kerbal and flew around. It worked, but wasn\u0027t as cool as you think it\u0027d be.\u003C/p\u003E\n"},{"CreatedByName":"Javster","CreatedById":74613,"CreatedDateTime":"2014-09-13T20:31:06Z","Content":"\n\u003Cp\u003EYeah I used to use it a LOT. My username on it is Javster\u003C/p\u003E\n"}]}