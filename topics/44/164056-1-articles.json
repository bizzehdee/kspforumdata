{"TopicId":164056,"ForumId":44,"TopicTitle":"Tucker Congruence coefficient calculation","CreatedByName":"VITAS","CreatedById":124625,"CreatedDateTime":"2017-08-04T08:59:42Z","PageNum":1,"Articles":[{"CreatedByName":"VITAS","CreatedById":124625,"CreatedDateTime":"2017-08-04T08:59:42Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EPlease read the whole text and also take a look at the link below before you post something. Thank you \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHi,\n\u003C/p\u003E\n\u003Cp\u003E\nim working on some real world sience stuff and have to write a php function that compares datasets using the Tucker Congruence coefficient.\n\u003C/p\u003E\n\u003Cp\u003E\nI cant get it to work like it should and welcome every help in fixing my code.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can see more details under the link below.\n\u003C/p\u003E\n\u003Cp\u003E\nThank you in advance.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Ca href=\u0022https://pads.reis.asia/p/OpenFluor\u0022 rel=\u0022external nofollow\u0022\u003EMore Details\u003C/a\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cu\u003EA more detailed Explanation:\u003C/u\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ESome vocabulary:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWavelength: a datapoint. This is about fluorescence spectrometry aka measuring the intensety at different wavelength of light.\n\u003C/p\u003E\n\u003Cp\u003E\nComponent: a dataset containg measurements for a range of wavelength\n\u003C/p\u003E\n\u003Cp\u003E\nModel: sort of a folder containing multiple components\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EGoal:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe user wants to find similar components to the ones contained in the model he selected.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Ehow it (should) work(s):\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nthe tuckercalc function calculates a value between 1 and 0 that represents the similarity between\u00A0 all wavelength (aka measurements) of a component (aka dataset) in relation to another components (datasets) wavelnegth.\n\u003C/p\u003E\n\u003Cp\u003E\n1 represents 100% identical and 0 0%.\n\u003C/p\u003E\n\u003Cp\u003E\nBut we can only compare ranges of data we have for both components.\n\u003C/p\u003E\n\u003Cp\u003E\nSo we have to a) start at the smallest wavelength both components have and stop at the largest and b) interpolate mssing datapoints that are in the source component (the one we want to find matches for) from the existing data of the target component using linear interpolation.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat i do is to first get the source component data fromt he db and dump it into an array.\n\u003C/p\u003E\n\u003Cp\u003E\nthen i cycle trough all the datapoints in the db that dont belong to the source component trying to extract the needed wavelength or interpolate them for each component of each model.\n\u003C/p\u003E\n\u003Cp\u003E\nso what i should end up with is two arrays:\n\u003C/p\u003E\n\u003Cp\u003E\none source component array and one with the correct target wavlenegth (without the unneeded ones and with the missing interpolated ones)\n\u003C/p\u003E\n\u003Cp\u003E\nonce the loop finds out that a new component started it calls the tucker calc function, gets the similarity value and dumps the result into an array that is later used to make a bulk db insert after all components of all models have been checked.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Emy problem:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nthe result is always 0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Ewhat i know:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nthe tucker calculation is correct until i start to compare the results of the source and the the target.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd i also found that there are more wavlenegths compared as needed.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EMy guess:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nmy array preparation code (in the main function) isnt matching the source and target arrays, so they contain wavlength the other doesnt contain and because php tends to return zero isntead of null for non existant variables it messes up the tuckercalc function\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Ewhat i think is needed:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nsomeone to revisit my hot code mess in the main function with the goal to make sure the arrays that are send to the tuckercalac fucntiona re in order (as defined above)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThe future:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIm open for improvements that make the code faster\u00A0 and/or more compact \u003Cu\u003Eafter\u003C/u\u003E its working as intended.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI know i repeat myself but i hope this is clearer \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Csub\u003E\u003Cstrong\u003EAnd another disclaimer for anybody new:\u003C/strong\u003E\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Csub\u003EYes its PHP and no this is not a place or time to voice your opinion about it or suggest different mathematical solutions.\u003Cbr\u003E\nThis has to be done the way i described with PHP. Getting this to work is my main priority. Making it beautiful and fast comes after that.\u003C/sub\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-05T07:28:42Z\u0022 title=\u002208/05/2017 07:28  AM\u0022 data-short=\u00226 yr\u0022\u003EAugust 5, 2017\u003C/time\u003E by VITAS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Green Baron","CreatedById":107381,"CreatedDateTime":"2017-08-04T09:44:54Z","Content":"\n\u003Cp\u003E\nMaybe i am writing nonsense and i know nothing about php, but a little c and c\u002B\u002B. Analyzing other people\u0027s code is too tedious for me :-)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003EA little specification would help i think. How \u003Cem\u003Eshould\u003C/em\u003E it work ? What exactly is the fabric of the datastructure you put into the algorithm and what exactly happens to it ?\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003EIf the algorithm is the formula you posted in the wikipedia link than that is trivial. If not, a thorough description of that would help.\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003EWhat happens to the data; shall the algorithm simply put out a value of -1 to 1, i understand somehow that 0/null values aren\u0027t interpreted correctly, but what would be correct ?\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI am sure programmers will show up soon ... sorry if that didn\u0027t help ...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEdit, oh, i see you did yo, I simply don\u0027t understand the jargon. Nevermind ...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-04T09:51:10Z\u0022 title=\u002208/04/2017 09:51  AM\u0022 data-short=\u00226 yr\u0022\u003EAugust 4, 2017\u003C/time\u003E by Green Baron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VITAS","CreatedById":124625,"CreatedDateTime":"2017-08-04T11:42:55Z","Content":"\n\u003Cp\u003E\nYes m explanation is a bit sloppy. I spend a week on it and ive just no energy left in me to finish it. (But i need to finish it by the end of next week)\n\u003C/p\u003E\n\u003Cp\u003E\nIt isnt that complicated i would say. Im just in a state of \u0022huh?!\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nThe second part is to display the best matches and so on. I will simply get them from the cache tables afterwards.\u003Cbr\u003E\nI do that because theres no point in calculating everythign over and over each time somone wants to find the best matches.\n\u003C/p\u003E\n\u003Cp\u003E\nBtw. I use laravel and thats another problem: iwhile looking at that framework i was tossed into this project and had to use it while learning it. so i would say my laraval is crap but php is no problem.\n\u003C/p\u003E\n\u003Cp\u003E\n(and just as disclaimer: this has to be done in php (\u002Blaravel) and using those algorythems so \u0022use x its better\u0022 wont help)\n\u003C/p\u003E\n"},{"CreatedByName":"kerbiloid","CreatedById":129408,"CreatedDateTime":"2017-08-04T11:44:47Z","Content":"\n\u003Cp\u003E\nCan\u0027t test as I don\u0027t use Laravel, but several remarks about \u003Cem\u003EcalcTucker\u003C/em\u003E function:\n\u003C/p\u003E\n\u003Cp\u003E\n$sT and $tT are both used as 2d-arrays, but you init them:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $sT = [[],[],[],[]];\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $tT = [[],[],[]];\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n, i.e. as 4d and 3d arrays correspondingly, but then use them as 2d, assigning to $sT[][] and $tT[][] a scalar value (while every 2nd-level item is inited as an array).\n\u003C/p\u003E\n\u003Cp\u003E\nTry to reduce dimensions in the declaration.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBoth fragments\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 //\u003Cbr\u003E\n\u00A0\u00A0\u00A0 $sT = [[],[],[],[]];\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $sTs = [];\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 foreach( $sdata as $sWl)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 $sT[0][] = pow($sWl,2);\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $sTs[0] = array_sum($sT[0]);\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 foreach( $sT[0] as $sWl)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 $sT[1][] = $sWl/$sTs[0];\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $sTs[1] = array_sum($sT[1]);\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 foreach( $sT[1] as $sWl)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 $sT[2][] = pow($sWl,2);\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $sTs[2] = sqrt(array_sum($sT[2]));\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nand\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $tT = [[],[],[]];\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $tTs = [];\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 foreach( $tdata as $tWl)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 $tT[0][] = pow($tWl,2);\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $tTs[0] = array_sum($tT[0]);\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u003Cbr\u003E\n\u00A0\u00A0\u00A0 foreach( $tT[0] as $tWl)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 $tT[1][] = $tWl/$tTs[0];\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $tTs[1] = array_sum($tT[1]);\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 foreach( $tT[1] as $tWl)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 $tT[2][] = pow($tWl,2);\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0\u00A0 $tTs[2] = sqrt(array_sum($tT[2]));\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nlook absolutely similar, but you write this code twice.\n\u003C/p\u003E\n\u003Cp\u003E\nCut it off into a smaller function returning an array.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCheck whether these two points effect your result.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nNo \u0022pow($sWl,2)\u0022. Use \u0022$sWl * $sWl\u0022, as pow is 1) expensive 2) inaccurate. \u0022Pow\u0022 is for fractional or high degrees.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-04T11:50:19Z\u0022 title=\u002208/04/2017 11:50  AM\u0022 data-short=\u00226 yr\u0022\u003EAugust 4, 2017\u003C/time\u003E by kerbiloid\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VITAS","CreatedById":124625,"CreatedDateTime":"2017-08-04T11:51:17Z","Content":"\n\u003Cp\u003E\n$sT[0][] = pow($sWl,2); \u0026lt;- isnt that 2D?\n\u003C/p\u003E\n\u003Cp\u003E\ni wrote it that long so i can find bugs. youre right that i can massivly compact and speed it up once its working\n\u003C/p\u003E\n\u003Cp\u003E\ni tried \u0022 \u0022$sWl ^2\u0022 and that didnt work but yes mybe * would. Ill keep that in mind once the code itself works.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThank you for your input \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"monstah","CreatedById":95210,"CreatedDateTime":"2017-08-04T13:05:45Z","Content":"\n\u003Cpre class=\u0022ipsCode prettyprint lang-php prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E calcTucker\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$t_data\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $s_data\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    $s_squares \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    $t_squares \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    $st_factors \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Esizeof\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$t_data\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Esizeof\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$s_data\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethrow\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EException\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Factor vectors must be same size\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n    $n \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Esizeof\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$t_data\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        $s_val \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $s_data\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        $t_val \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $t_data\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$s_val \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enull\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $t_val \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enull\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Econtinue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \n        $s_squares\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $s_val \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $s_val\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        $t_squares\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $t_val \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $t_val\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        $st_factors\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $s_val \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $t_val\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n    $s_square_sum \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E array_sum\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$s_squares\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    $t_square_sum \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E array_sum\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$t_squares\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    $st_factor_sum \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E array_sum\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$st_factors\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $st_factor_sum \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sqrt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$s_square_sum \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E $t_square_sum\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nHope it helps \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nUh, I had written a couple paragraphs, but then went and pasted my code\u00A0\u003Cem\u003Eover it\u00A0\u003C/em\u003E\u003Cimg alt=\u0022:mad:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_angry.gif\u0022 title=\u0022:mad:\u0022\u003E\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMy point was: your calcTucker() is\u00A0\u003Cem\u003Ewaaaay\u003C/em\u003E\u00A0overthought, and your algorithm is going places I don\u0027t follow (e.g. why are you dividing the squares by their sum? And why on Earth are you then summing over\u00A0\u003Cem\u003Ethat\u003C/em\u003E\u00A0array? The sum will always be 1!)\n\u003C/p\u003E\n\u003Cp\u003E\nI also don\u0027t understand how you\u0027re\u00A0\u003Cem\u003Eusing\u003C/em\u003E\u00A0it\u00A0(tho honestly I get \u003Cem\u003Ereally lazy\u003C/em\u003E following code when the variable names don\u0027t tell me anything about \u003Cem\u003Ewhat they\u00A0are...\u003C/em\u003E), and I think it\u0027s possible you are understanding the concept wrong. If your data is shaped with rows as observations (i.e, runs of an experiment) and the columns are the variables (results of each run), then the Tucker congruence measures similarity between two columns (kinda like correlation does). Is that what you\u0027re trying here? (I don\u0027t understand what your components and wavelenghts are, in this statistical context of observations and variables)\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223139715\u0022 data-ipsquote-contentid=\u0022164056\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221501847477\u0022 data-ipsquote-userid=\u0022124625\u0022 data-ipsquote-username=\u0022VITAS\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, VITAS said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n$sT[0][] = pow($sWl,2); \u0026lt;- isnt that 2D?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, that is 2D.\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129408-kerbiloid/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022129408\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129408-kerbiloid/\u0022 rel=\u0022\u0022\u003E@kerbiloid\u003C/a\u003E\u00A0\u003Cspan style=\u0022font-size:9px;\u0022\u003E(mentioned the wrong guy, gimme slack, I need some sleep)\u003C/span\u003E is probably thinking of dimensions in terms of vector spaces, and that\u0027s not what\u0027s usually meant by \u00222D array\u0022, which is kind of like \u0022an array of arrays\u0022.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-04T13:21:49Z\u0022 title=\u002208/04/2017 01:21  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 4, 2017\u003C/time\u003E by monstah\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"monstah","CreatedById":95210,"CreatedDateTime":"2017-08-04T13:16:24Z","Content":"\n\u003Cp\u003E\nOh, another thing. Like I said, I didn\u0027t quite follow how you used the function. The one I wrote here accepts two numerical arrays of the same length as inputs; your compare() function should then prepare the data, extracting each desired column as an array, and inputting those two to calcTucker()\n\u003C/p\u003E\u003Cp\u003E\nAlso: it\u0027s been over a decade since I wrote any PHP, and I\u0027ve been doing Python for awhile now. My syntax might be\u00A0\u003Cem\u003Eall wrong\u003C/em\u003E, but I tried \u003Cimg alt=\u0022:sticktongue:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 title=\u0022:sticktongue:\u0022\u003E\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"VITAS","CreatedById":124625,"CreatedDateTime":"2017-08-04T13:36:55Z","Content":"\n\u003Cp\u003E\ni summ the array to add a check later. if it isnt 1 something went wrong.\n\u003C/p\u003E\n\u003Cp\u003E\nI think the problem isnt the tuckercalc function but the compare function.\n\u003C/p\u003E\n\u003Cp\u003E\ni hunch is, that it has to do with php returning 0 isntead of null for nonexistant values and that the function tries to compare source values with target values that dont exist.\n\u003C/p\u003E\n\u003Cp\u003E\n(so it fails if the target dataset has a lower maximum wavelength than the source.)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nYour function certenly makes the tucerclac function a lot more streamlined. (Ive to test it) Thank you \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\np.s. im sure you know how it is: you can conenctrate and get more confused by the second but have to get stuff done. thats when you end up with code like mine \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-04T13:38:09Z\u0022 title=\u002208/04/2017 01:38  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 4, 2017\u003C/time\u003E by VITAS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"monstah","CreatedById":95210,"CreatedDateTime":"2017-08-04T14:44:01Z","Content":"\n\u003Cp\u003E\nHow about you try and filter the nulls out in the SQL query?\n\u003C/p\u003E\n"},{"CreatedByName":"VITAS","CreatedById":124625,"CreatedDateTime":"2017-08-04T20:22:59Z","Content":"\n\u003Cp\u003E\nthare are no nulls in the db (as you can see from the db dump)\n\u003C/p\u003E\n\u003Cp\u003E\nbut zeros are a thing that exists in the db and are valid values.\n\u003C/p\u003E\n"},{"CreatedByName":"monstah","CreatedById":95210,"CreatedDateTime":"2017-08-04T20:37:24Z","Content":"\n\u003Cp\u003E\nI\u0027m confused, what\u0027s this, then? \u003Cimg alt=\u0022:huh:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 title=\u0022:huh:\u0022\u003E\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223139768\u0022 data-ipsquote-contentid=\u0022164056\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221501853815\u0022 data-ipsquote-userid=\u0022124625\u0022 data-ipsquote-username=\u0022VITAS\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, VITAS said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nit has to do with php returning 0 isntead of null for nonexistant values\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n(and yeah, I didn\u0027t read through the data dump... \u003Cimg alt=\u0022:rolleyes:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 title=\u0022:rolleyes:\u0022\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, if the zeros are valid data, then the algorithm shouldn\u0027t have a problem\n\u003C/p\u003E\n"},{"CreatedByName":"VITAS","CreatedById":124625,"CreatedDateTime":"2017-08-05T07:24:53Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003ESome vocabulary:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWavelength: a datapoint. This is about fluorescence spectrometry aka measuring the intensety at different wavelength of light.\n\u003C/p\u003E\n\u003Cp\u003E\nComponent: a dataset containg measurements for a range of wavelength\n\u003C/p\u003E\n\u003Cp\u003E\nModel: sort of a folder containing multiple components\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EGoal:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe user wants to find similar components to the ones contained in the model he selected.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Ehow it (should) work(s):\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nthe tuckercalc function calculates a value between 1 and 0 that represents the similarity between\u00A0 all wavelength (aka measurements) of a component (aka dataset) in relation to another components (datasets) wavelnegth.\n\u003C/p\u003E\n\u003Cp\u003E\n1 represents 100% identical and 0 0%.\n\u003C/p\u003E\n\u003Cp\u003E\nBut we can only compare ranges of data we have for both components.\n\u003C/p\u003E\n\u003Cp\u003E\nSo we have to a) start at the smallest wavelength both components have and stop at the largest and b) interpolate mssing datapoints that are in the source component (the one we want to find matches for) from the existing data of the target component using linear interpolation.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat i do is to first get the source component data fromt he db and dump it into an array.\n\u003C/p\u003E\n\u003Cp\u003E\nthen i cycle trough all the datapoints in the db that dont belong to the source component trying to extract the needed wavelength or interpolate them for each component of each model.\n\u003C/p\u003E\n\u003Cp\u003E\nso what i should end up with is two arrays:\n\u003C/p\u003E\n\u003Cp\u003E\none source component array and one with the correct target wavlenegth (without the unneeded ones and with the missing interpolated ones)\n\u003C/p\u003E\n\u003Cp\u003E\nonce the loop finds out that a new component started it calls the tucker calc function, gets the similarity value and dumps the result into an array that is later used to make a bulk db insert after all components of all models have been checked.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Emy problem:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nthe result is always 0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Ewhat i know:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nthe tucker calculation is correct until i start to compare the results of the source and the the target.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd i also found that there are more wavlenegths compared as needed.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EMy guess:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nmy array preparation code (in the main function) isnt matching the source and target arrays, so they contain wavlength the other doesnt contain and because php tends to return zero isntead of null for non existant variables it messes up the tuckercalc function\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Ewhat i think is needed:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nsomeone to revisit my hot code mess in the main function with the goal to make sure the arrays that are send to the tuckercalac fucntiona re in order (as defined above)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThe future:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIm open for improvements that make the code faster\u00A0 and/or more compact \u003Cu\u003Eafter\u003C/u\u003E its working as intended.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI know i repeat myself but i hope this is clearer \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Csub\u003E\u003Cstrong\u003EAnd another disclaimer for anybody new:\u003C/strong\u003E\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Csub\u003EYes its PHP and no this is not a place or time to voice your opinion about it or suggest different mathematical solutions.\u003Cbr\u003E\nThis has to be done the way i described with PHP. Getting this to work is my main priority. Making it beautiful and fast comes after that.\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-05T07:29:02Z\u0022 title=\u002208/05/2017 07:29  AM\u0022 data-short=\u00226 yr\u0022\u003EAugust 5, 2017\u003C/time\u003E by VITAS\u003C/strong\u003E\n\u003C/span\u003E\n"}]}