{"TopicId":69707,"ForumId":44,"TopicTitle":"Sine Graphs and Orbital Paths","CreatedByName":"Omicron314","CreatedById":59506,"CreatedDateTime":"2014-04-18T02:14:42Z","PageNum":1,"Articles":[{"CreatedByName":"Omicron314","CreatedById":59506,"CreatedDateTime":"2014-04-18T02:14:42Z","Content":"\n\u003Cp\u003ESo as I was rewatching the 0.23.5 release trailer, I noticed the orbital path on the big screen in the control room. But then I thought that the path looked an awful lot like a graph of the sine or cosine functions. Compare this:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i62.tinypic.com/14d37gz.gif\u0022 alt=\u002214d37gz.gif\u0022\u003E\u003C/p\u003E\u003Cp\u003ETo this:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i60.tinypic.com/df8y75.png\u0022 alt=\u0022df8y75.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ESo, the question is: what equation defines the graph of the projection of inclined orbits onto a map? I think inclination affects amplitude, but I can\u0027t really figure anything else besides that. Shifting shouldn\u0027t be a factor because the orbit shifts itself, but what function defines the shift that occurs with each orbit relative to orbital period and inclination? How would one figure this out?\u003C/p\u003E\n"},{"CreatedByName":"Sillychris","CreatedById":103939,"CreatedDateTime":"2014-04-18T02:26:40Z","Content":"\n\u003Cp\u003EThe orbit shift is because of the rotation of the earth under it... and is specifically a function of the orbital height. If you picked the right height (say 50000 km) the wave wouldn\u0027t shift over like that.\u003C/p\u003E\n"},{"CreatedByName":"TerLoki","CreatedById":30301,"CreatedDateTime":"2014-04-18T02:27:17Z","Content":"\n\u003Cp\u003ENot sure about a function, but the shifting of the orbit is just the planet\u0027s rate of rotation relative to the speed of the orbiting object.\u003C/p\u003E\n"},{"CreatedByName":"Sillychris","CreatedById":103939,"CreatedDateTime":"2014-04-18T02:29:40Z","Content":"\n\u003Cp\u003EAlso, check this out. Blew my mind when I first saw it back in the 90\u0027s.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://demonstrations.wolfram.com/RelationshipOfSineAndCosineToTheUnitCircle/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://demonstrations.wolfram.com/RelationshipOfSineAndCosineToTheUnitCircle/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-04-18T02:36:34Z","Content":"\n\u003Cp\u003EIt depends a lot on the \u003Ca href=\u0022https://en.wikipedia.org/wiki/List_of_map_projections\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003Eprojection\u003C/span\u003E\u003C/a\u003E, but the picture you show is based on equirectangular projection, which makes the most sense for this sort of application.\u003C/p\u003E\u003Cp\u003EFor an equirectangular projection, call the horizontal position (longitude) \u00C3\u00E2\u20AC\u00A0 and vertical position (latitude) \u00C3\u017D\u00C2\u00B8. (So we are looking to plot function \u00C3\u017D\u00C2\u00B8(\u00C3\u00E2\u20AC\u00A0).) For a circular orbit with inclination \u00C3\u017D\u00C2\u00B1, where \u00C3\u017D\u00C2\u00B1 = 0 corresponds to equatorial orbit, the latitude is given by the function:\u003C/p\u003E\u003Cp\u003E\u00C3\u017D\u00C2\u00B8(\u00C3\u00E2\u20AC\u00A0) = sin\u003Csup\u003E-1\u003C/sup\u003E(sin(\u00C3\u00E2\u20AC\u00A0 - \u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) sin(\u00C3\u017D\u00C2\u00B1) / Sqrt(sin\u00C3\u201A\u00C2\u00B2(\u00C3\u00E2\u20AC\u00A0 - \u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) \u002B cos\u00C3\u201A\u00C2\u00B2(\u00C3\u00E2\u20AC\u00A0 - \u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) cos\u00C3\u201A\u00C2\u00B2(\u00C3\u017D\u00C2\u00B1)) )\u003C/p\u003E\u003Cp\u003EWhere \u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E is the latitude of the ascending node. For non-circular orbits, the formula will be quite a bit more complex.\u003C/p\u003E\u003Cp\u003EEdit: There, that should work. Though, it does not account for planet\u0027s rotation. If you want to throw that in, you\u0027ll need to figure out orbital period and adjust \u00C3\u00E2\u20AC\u00A0 accordingly.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-18T02:59:26Z\u0022 title=\u002204/18/2014 02:59  AM\u0022 data-short=\u002210 yr\u0022\u003EApril 18, 2014\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Eisen Feuer","CreatedById":109514,"CreatedDateTime":"2014-05-03T08:02:18Z","Content":"\n\u003Cp\u003EK^2, is there a way to graph the lat/lon traversed over time? I\u0027m having massive problems making an orbit like this in a 3D application/XYZ space using pure trig and I think spherical coordinates may be my way out. As longitudes are traversed more quickly at different latitudes, I have no idea where to start or even where to look for such a specific solution.\u003C/p\u003E\u003Cp\u003EAnyway, here\u0027s the above equation made interactive on Desmos Graphing Calculator if anyone wants to play with it: \u003Ca href=\u0022https://www.desmos.com/calculator/ui8awrisw5\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.desmos.com/calculator/ui8awrisw5\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://s3.amazonaws.com/grapher/exports/ui8awrisw5.png\u0022 alt=\u0022ui8awrisw5.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E(for those wondering why it looks like a square wave, this is a near polar orbit (87\u00C3\u201A\u00C2\u00B0 inclination), which, just like the poles of Earth in an equirectangular projection map, stretch out. A 90\u00C3\u201A\u00C2\u00B0 inclination will return an actual square wave, and an equatorial orbit will be a flat line, and a 51\u00C3\u201A\u00C2\u00B0 inclination like the ISS will return a nice soft sine-wave looking curve.\u003C/p\u003E\u003Cp\u003EAs for the math to make it mesh with the rotation of the Earth, divide a 24-hour day by the orbital period (let\u0027s use 90 minutes) (24x60)/90 = 16 360/16= a loss of 22.5\u00C3\u201A\u00C2\u00B0 per orbit, so you\u0027ll want to sample the image once every 360-22.5=337.5\u00C3\u201A\u00C2\u00B0 and stack the samples on top of each other to see your forthcoming orbits.\u003C/p\u003E\n"},{"CreatedByName":"Yasmy","CreatedById":79995,"CreatedDateTime":"2014-05-03T17:10:30Z","Content":"\n\u003Cp\u003EStart with a circular orbit of radius r around the equator. At t = 0, T, 2T, ..., kT, you are back at (x,y,z) coordinate (r,0,0):\u003C/p\u003E\u003Cp\u003Ex = r cos(\u00C3\u00E2\u20AC\u00B0t)\u003C/p\u003E\u003Cp\u003Ey = r sin(\u00C3\u00E2\u20AC\u00B0t)\u003C/p\u003E\u003Cp\u003Ez = 0\u003C/p\u003E\u003Cp\u003E\u00C3\u00E2\u20AC\u00B0 = 2\u00C3\u00E2\u201A\u00AC/T = sqrt(\u00C3\u017D\u00C2\u00BC/r\u003Csup\u003E3\u003C/sup\u003E)\u003C/p\u003E\u003Cp\u003ENow rotate this orbit by the inclination angle \u00C3\u017D\u00C2\u00B1 about the x axis:\u003C/p\u003E\u003Cp\u003Ex -\u0026gt; x\u003C/p\u003E\u003Cp\u003Ey -\u0026gt; y cos(\u00C3\u017D\u00C2\u00B1) - z sin(\u00C3\u017D\u00C2\u00B1)\u003C/p\u003E\u003Cp\u003Ez -\u0026gt; y sin(\u00C3\u017D\u00C2\u00B1) \u002B z cos(\u00C3\u017D\u00C2\u00B1)\u003C/p\u003E\u003Cp\u003Ex = r cos(\u00C3\u00E2\u20AC\u00B0t)\u003C/p\u003E\u003Cp\u003Ey = r sin(\u00C3\u00E2\u20AC\u00B0t) cos(\u00C3\u017D\u00C2\u00B1)\u003C/p\u003E\u003Cp\u003Ez = r sin(\u00C3\u00E2\u20AC\u00B0t) sin(\u00C3\u017D\u00C2\u00B1)\u003C/p\u003E\u003Cp\u003ENow the orbit is correctly inclined, but the longitude of the ascending node is zero. So rotate the entire orbit about the z axis by \u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E, the new longitude of the ascending node:\u003C/p\u003E\u003Cp\u003Ex -\u0026gt; x cos(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) - y sin(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E)\u003C/p\u003E\u003Cp\u003Ey -\u0026gt; x sin(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) \u002B y cos(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E)\u003C/p\u003E\u003Cp\u003Ez -\u0026gt; z\u003C/p\u003E\u003Cp\u003EThus\u003C/p\u003E\u003Cp\u003Ex = r cos(\u00C3\u00E2\u20AC\u00B0t) cos(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) - r sin(\u00C3\u00E2\u20AC\u00B0t) cos(\u00C3\u017D\u00C2\u00B1) sin(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E)\u003C/p\u003E\u003Cp\u003Ey = r cos(\u00C3\u00E2\u20AC\u00B0t) sin(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) \u002B r sin(\u00C3\u00E2\u20AC\u00B0t) cos(\u00C3\u017D\u00C2\u00B1) cos(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E)\u003C/p\u003E\u003Cp\u003Ez = r sin(\u00C3\u00E2\u20AC\u00B0t) sin(\u00C3\u017D\u00C2\u00B1)\u003C/p\u003E\u003Cp\u003E\u00C3\u017D\u00C2\u00B8(t) = asin(z/r) = asin(sin(\u00C3\u00E2\u20AC\u00B0t) sin(\u00C3\u017D\u00C2\u00B1))\u003C/p\u003E\u003Cp\u003E\u00C3\u00E2\u20AC\u00A0(t) = atan(y/x) = atan((cos(\u00C3\u00E2\u20AC\u00B0t) sin(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) \u002B sin(\u00C3\u00E2\u20AC\u00B0t) cos(\u00C3\u017D\u00C2\u00B1) cos(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E)) / (cos(\u00C3\u00E2\u20AC\u00B0t) cos(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E) \u002B sin(\u00C3\u00E2\u20AC\u00B0t) cos(\u00C3\u017D\u00C2\u00B1) sin(\u00C3\u00E2\u20AC\u00A0\u003Csub\u003E0\u003C/sub\u003E)))\u003C/p\u003E\u003Cp\u003EBut note that you should use a 2-argument inverse tangent function \u003Ca href=\u0022https://en.wikipedia.org/wiki/Atan2\u0022 rel=\u0022external nofollow\u0022\u003Eatan2(y,x)\u003C/a\u003E, because atan2(-y,x) is different from atan2(y,-x), which atan(y/x) can\u0027t tell.\u003C/p\u003E\u003Cp\u003EAnd as mentioned above, if you want the coordinates relative to the surface of the body you are orbiting, subtract the rotation of the body: \u00C3\u00E2\u20AC\u00A0(t) -\u0026gt; \u00C3\u00E2\u20AC\u00A0(t) - \u00C3\u00E2\u20AC\u00B0\u003Csub\u003Eb\u003C/sub\u003Et.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-03T18:01:54Z\u0022 title=\u002205/03/2014 06:01  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 3, 2014\u003C/time\u003E by Yasmy\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Eisen Feuer","CreatedById":109514,"CreatedDateTime":"2014-05-04T15:49:10Z","Content":"\n\u003Cp\u003EI managed to figure this out by generating the orbit which was simple to incline around one axis (I had already gotten that far by the time of my post), then transposing the XYZ to spherical coordinates, where it was simple to offset the longitude of the path being generated, and then converting back to XYZ.\u003C/p\u003E\u003Cp\u003EYour solution is definitely more elegant though and I\u0027d assume less prone to accrue error over time than my back-and-forth so I will definitely incorporate it into version 2.\u003C/p\u003E\u003Cp\u003EThanks a lot!\u003C/p\u003E\n"},{"CreatedByName":"Darkvidor","CreatedById":171559,"CreatedDateTime":"2016-11-14T22:07:01Z","Content":"\n\u003Cp\u003E\nHello everybody, I may have missed something, but what I assume are greek characters in this thread are displayed to me as a mangle of characters (for example \u0022\u00C3\u00E2\u20AC\u0022 for what appears to be Lambda and \u0022\u00C3\u017D\u00C2\u0022 for what seems to be Phi. Is there a way to display those characters appropriately?\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, I didn\u0027t wait for a solution and tried to implement Yasmy\u0027s formulas in one of my projects by identifying the characters and decyphering the formulas. It mostly works, I have all the orbital paths I want, except when my ascending node is set too close to Pi/4 mod(Pi/2) (ie 45\u00B0, 135\u00B0, etc) where I get non-sensical orbits. I tried to debug the formulas but the display errors makes it very difficult.\n\u003C/p\u003E\n\u003Cdiv data-role=\u0022contentPage\u0022\u003E\n\u003Cdiv data-role=\u0022contentPage\u0022\u003E\n\u003Cp\u003E\nBelow is an example of the problem I am running into; there are three curves, one of which is pretty and has ascending node at 0\u00B0, and the ugly ones\u00A0are close to 45\u00B0 and -45\u00B0.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cimg alt=\u0022769881image2.png\u0022 class=\u0022ipsImage\u0022 src=\u0022http://img4.hostingpics.net/pics/769881image2.png\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n"},{"CreatedByName":"Steel","CreatedById":49317,"CreatedDateTime":"2016-11-14T22:44:38Z","Content":"\n\u003Cp\u003E\nAll those posts are from before the forums changed, so they\u0027re pretty much broken for all eternity now\n\u003C/p\u003E\n"},{"CreatedByName":"Darkvidor","CreatedById":171559,"CreatedDateTime":"2016-11-14T22:51:25Z","Content":"\n\u003Cp\u003E\nNooo \u003Cimg alt=\u0022:o\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_ohmy.png\u0022 title=\u0022:o\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nWell, I will try to solve it myself. I\u0027ll post the corrected formulas here if I succeed.\n\u003C/p\u003E\n\u003Cdiv data-role=\u0022contentPage\u0022\u003E\n\u003Cp\u003E\nThank you anyway!\n\u003C/p\u003E\n\u003Chr data-role=\u0022contentPageBreak\u0022\u003E\u003C/div\u003E\n\u003Cp\u003E\nEdit: Turns out I made a mistake when I entered the formulas to generate my points.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022719090image3.png\u0022 class=\u0022ipsImage\u0022 src=\u0022http://img11.hostingpics.net/pics/719090image3.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nHere are\u00A0Yasmy\u0027s equations in a readable form.\n\u003C/p\u003E\n\u003Cp\u003E\nCircular equatorial orbit of radius r with angular speed omega, inclination phi\u003Csub\u003E0\u003C/sub\u003E and longitude of ascending node lambda\u003Csub\u003E0\u003C/sub\u003E:\n\u003C/p\u003E\n\u003Cp\u003E\nx(t)\u00A0= r*cos(omega*t)\n\u003C/p\u003E\n\u003Cp\u003E\ny(t) = r*sin(omega*t)\n\u003C/p\u003E\n\u003Cp\u003E\nz(t) = 0\n\u003C/p\u003E\n\u003Cp\u003E\nNote that omega = 2*Pi/T = sqrt(G*M/a\u003Csup\u003E3\u003C/sup\u003E) with T the orbital period, G the gravitational constant, M the mass of the body and a the radius of the circular orbit.\n\u003C/p\u003E\n\u003Cp\u003E\nRotation around the x axis to change inclination to phi\u003Csub\u003E0\u003C/sub\u003E\u00A0by the transformation:\n\u003C/p\u003E\n\u003Cp\u003E\nx\u00A0-\u0026gt; x\n\u003C/p\u003E\n\u003Cp\u003E\ny -\u0026gt; y*cos(phi\u003Csub\u003E0\u003C/sub\u003E) - z*sin(phi\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nz -\u0026gt; y*sin(phi\u003Csub\u003E0\u003C/sub\u003E) \u002B z*cos(phi\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nThis gives us:\n\u003C/p\u003E\n\u003Cp\u003E\nx(t) =\u00A0r*cos(omega*t)\n\u003C/p\u003E\n\u003Cp\u003E\ny(t) =\u00A0r*sin(omega*t)*cos(phi\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nz(t) =\u00A0r*sin(omega*t)*sin(phi\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nRotation around the z axis to change longitude of ascending node to lambda\u003Csub\u003E0\u003C/sub\u003E\u00A0by the transformation:\n\u003C/p\u003E\n\u003Cp\u003E\nx -\u0026gt; x*cos(lambda\u003Csub\u003E0\u003C/sub\u003E) - y*sin(lambda\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\ny -\u0026gt; x*sin(lambda\u003Csub\u003E0\u003C/sub\u003E) \u002B y*cos(lambda\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nz -\u0026gt; z\n\u003C/p\u003E\n\u003Cp\u003E\nThat gives us:\n\u003C/p\u003E\n\u003Cp\u003E\nx(t) =\u00A0r*cos(omega*t)*cos(lambda\u003Csub\u003E0\u003C/sub\u003E) -\u00A0r*sin(omega*t)*cos(phi\u003Csub\u003E0\u003C/sub\u003E)*sin(lambda\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\ny(t) =\u00A0r*cos(omega*t)*sin(lambda\u003Csub\u003E0\u003C/sub\u003E) \u002B\u00A0r*sin(omega*t)*cos(phi\u003Csub\u003E0\u003C/sub\u003E)*cos(lambda\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nz(t) =\u00A0r*sin(omega*t)*sin(phi\u003Csub\u003E0\u003C/sub\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWe finally have:\n\u003C/p\u003E\n\u003Cp\u003E\nphi(t) = sin\u003Csup\u003E-1\u003C/sup\u003E(z(t)/r) =\u00A0sin\u003Csup\u003E-1\u003C/sup\u003E(sin(omega*t)*sin(phi\u003Csub\u003E0\u003C/sub\u003E))\n\u003C/p\u003E\n\u003Cp\u003E\nlambda(t) = tan\u003Csup\u003E-1\u003C/sup\u003E(y(t)/x(t)) =\u00A0tan\u003Csup\u003E-1\u003C/sup\u003E((cos(omega*t)*sin(lambda\u003Csub\u003E0\u003C/sub\u003E) \u002B\u00A0sin(omega*t)*cos(phi\u003Csub\u003E0\u003C/sub\u003E)*cos(lambda\u003Csub\u003E0\u003C/sub\u003E)) / (cos(omega*t)*cos(lambda\u003Csub\u003E0\u003C/sub\u003E) -\u00A0sin(omega*t)*cos(phi\u003Csub\u003E0\u003C/sub\u003E)*sin(lambda\u003Csub\u003E0\u003C/sub\u003E)))\n\u003C/p\u003E\n\u003Cp\u003E\nAnd remember to use atan2(y,x) when possible to dissipate any sign ambiguity.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTo have the coordinates of the orbiting object on the surface of the body, apply the transformation:\n\u003C/p\u003E\n\u003Cp\u003E\nlambda(t) -\u0026gt; lambda(t) - omega\u003Csub\u003Eb\u003C/sub\u003E*t (With omega\u003Csub\u003Eb\u003C/sub\u003E\u00A0the angular speed of the body\u0027s surface.)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-11-15T17:57:33Z\u0022 title=\u002211/15/2016 05:57  PM\u0022 data-short=\u00227 yr\u0022\u003ENovember 15, 2016\u003C/time\u003E by Darkvidor\u003C/strong\u003E\n\u003Cbr\u003Esolved the problem, adding the solution to the post\n\u003C/span\u003E\n"}]}