{"TopicId":181894,"ForumId":44,"TopicTitle":"Orbital mechanics of circularization","CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-01T19:36:26Z","PageNum":1,"Articles":[{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-01T19:36:26Z","Content":"\n\u003Cp\u003E\nI\u2019m fiddling with a KOS script for circularization and can\u2019t seems to get the physics quite spot on.\n\u003C/p\u003E\n\u003Cp\u003E\nMy intention is to do the circularization burn in a direction that means the \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E doesn\u2019t move, which surely must be possible.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u2019m calculating the required velocity for a circular orbit at the altitude of the Apoapsis, and subtracting my current velocity to get a \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E vector.\u00A0 I then figure there\u2019s 3 accelerations acting on the ship, Thrust, Gravity, and Centripetal Acceleration.\u00A0 So I\u2019m calculating the thrust angle to be that required so that when you add on the vertical deceleration (gravity \u2013 centripetal) you get the direction of the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E vector.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u2019s close but clearly not quite right as the \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E initially climbs and then drops back down, ending up around 120m below my target altitude, but a lot better than just following the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E vector which ends up around 500-600m low.\u00A0\u00A0I\u0027m not taking in to account increasing acceleration due to reduced mass on the burn time, so I actually start the burn a bit early, but as the \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E is dropping towards the end starting the burn a bit later would presumably be worse.\n\u003C/p\u003E\n\u003Cp\u003E\nAny thoughts on what I\u2019m missing?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMaths looks like this:\n\u003C/p\u003E\n\u003Cp\u003E\nRequired speed = Sqrt (mu / (kerbin radius \u002B altitude)\n\u003C/p\u003E\n\u003Cp\u003E\ndVel = Required tangential velocity \u2013 orbital velocity\n\u003C/p\u003E\n\u003Cp\u003E\nAcc Gravity = mu / (radius \u002B alttude)^2\n\u003C/p\u003E\n\u003Cp\u003E\nAcc Centripetal = horizontal velocity ^2 / (radius \u002Baltitude)\n\u003C/p\u003E\n\u003Cp\u003E\nAcc Vertical = Acc Gravity \u2013 Acc Centripetal\n\u003C/p\u003E\n\u003Cp\u003E\nThrust Acc = =max thrust / mass\n\u003C/p\u003E\n\u003Cp\u003E\nI then use the sine rule to calculate the thrust angle from the thrust magnitude, vertical acceleration magnitude and angle of resultant thrust from the vertical.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2019-02-01T19:56:51Z","Content":"\n\u003Cp\u003E\nYour calculations assume thrust is done in one 0-second burst, but in fact it occurs over multiple seconds.\n\u003C/p\u003E\n\u003Cp\u003E\nI have no idea how to correct for it, but suspect a lot of the hard work put into MechJeb is exactly for that.\n\u003C/p\u003E\n"},{"CreatedByName":"bewing","CreatedById":154251,"CreatedDateTime":"2019-02-01T19:57:59Z","Content":"\n\u003Cp\u003E\nYour horizontal velocity changes during the burn, so are you doing your centripetal calculation as an integral?\n\u003C/p\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-01T20:56:59Z","Content":"\n\u003Cp\u003E\nI\u0027m recalculating it quite a few\u00A0times a second so it takes in to account changes in velocity during the burn, and updates the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E vector and the heading each time, so I think that should get around both those issues.\n\u003C/p\u003E\n\u003Cp\u003E\nHow accurate does Mechjeb get the circularization to compared to the target altitude?\u00A0 It\u0027s a while since I\u0027ve used it but I seem to remember it being pretty accurate.\u00A0 But while Mechjeb can do the launch it\u0027s nowhere near as much fun as working it out myself, and it can\u0027t do an entire mission itself (I\u0027m currently earning money flying a suborbital tourist mission while I type here, who needs to play computer games for fun when you can program them to play themselves\u00A0\u00A0\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E)\n\u003C/p\u003E\n"},{"CreatedByName":"Jacke","CreatedById":103694,"CreatedDateTime":"2019-02-01T21:21:00Z","Content":"\n\u003Cp\u003E\nThe instantaneous \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E is the zeroth approximation.\u00A0\u00A0 Using the vis-viva equation, get the coast orbit\u0027s velocity vector at the circularization altitude.\u00A0 Then vector subtract the circular orbit velocity to get the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E vector (some amount slightly pointed down).\u00A0 You should already have that.\n\u003C/p\u003E\n\u003Cp\u003E\nThe next approximation is to start the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E burn half the burn time before getting to the circularization altitude.\u00A0 Given the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E in the zeroth approx and the effective exhaust velocity (Isp x g/zero), calculate its burn time.\u00A0 Then you have to calculate the time you would normally get to the circularization altitude.\u00A0 To do that to high precision for an elliptical orbit using the formulas for true and mean anomaly is complex but doable.\u00A0 In this case, you want to calculate that time.\u00A0 Given that time and the coast orbit velocity determined before, you can then make the linear approximation of the time and altitude of the burn start.\n\u003C/p\u003E\n\u003Cp\u003E\nThe next step I think would be to dynamically track the burn by tracking the current orbit velocity.\u00A0 Once it becomes circular (no relative vertical velocity component), cut engines.\n\u003C/p\u003E\n"},{"CreatedByName":"Starman4308","CreatedById":122674,"CreatedDateTime":"2019-02-01T21:56:11Z","Content":"\n\u003Cp\u003E\nThe simple solution: once you\u0027re close to target altitude, run a PID loop using pitch or throttle to control vertical velocity, keeping it at zero.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s probably not the most efficient way to make a totally circular orbit, but it\u0027ll work.\n\u003C/p\u003E\n"},{"CreatedByName":"MrSystems","CreatedById":195047,"CreatedDateTime":"2019-02-02T07:00:33Z","Content":"\n\u003Cp\u003E\nI\u0027ll share my script if you can tell me how you\u0027re running KOS.\u00A0 Steam automatically downloaded KSP version 1.6.1 and broke my KOS and I didn\u0027t have a backup.\n\u003C/p\u003E\n\u003Cp\u003E\nThis just creates the maneuver node. I have a different script (over 300 lines long) to execute the burn. The KOS github page has a much shorter version that works okay.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-perl prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E/ circularizes at the next apsis\nset burn_at_periapsis to TRUE.\nif APOAPSIS \u0026gt; 0 { /\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E apoapsis is negative\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E time to apoapsis is infinite\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ETA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EAPOAPSIS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ETA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EPERIAPSIS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E SET burn_at_periapsis to FALSE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E burn_at_periapsis \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E set which_apsis_text to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Periapsis\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E else \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E set which_apsis_text to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Apoapsis\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E burn_at_periapsis \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tset node_time to TIME\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESECONDS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ETA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EPERIAPSIS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tset otherapsis to APOAPSIS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tset burnapsis to PERIAPSIS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ELSE \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tset node_time to TIME\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESECONDS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ETA\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EAPOAPSIS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tset otherapsis to PERIAPSIS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tset burnapsis to APOAPSIS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nset v_old to sqrt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EBODY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMU \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eburnapsis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EBODY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERADIUS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                             \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EOBT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESEMIMAJORAXIS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nset v_new to sqrt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EBODY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMU \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eburnapsis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EBODY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERADIUS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t     \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EBODY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERADIUS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eburnapsis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nset dv to v_new \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nset \u003C/span\u003E\u003Cspan\u003EMyNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to NODE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enode_time\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Edv\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nADD \u003C/span\u003E\u003Cspan\u003EMyNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Setting up node at \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E which_apsis_text\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022ETA=\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ROUND\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enode_time \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESECONDS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022, dV=\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ROUND\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Edv\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Old eccentricity was \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ROUND\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EORBIT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EECCENTRICITY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022, new eccentricity is \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ROUND\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EMyNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EORBIT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EECCENTRICITY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-02T09:46:35Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223533153\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549056060\u0022 data-ipsquote-userid=\u0022103694\u0022 data-ipsquote-username=\u0022Jacke\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, Jacke said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe next approximation is to start the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E burn half the burn time before getting to the circularization altitude.\u00A0 Given the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E in the zeroth approx and the effective exhaust velocity (Isp x g/zero), calculate its burn time.\u00A0 Then you have to calculate the time you would normally get to the circularization altitude.\u00A0 To do that to high precision for an elliptical orbit using the formulas for true and mean anomaly is complex but doable.\u00A0 In this case, you want to calculate that time.\u00A0 Given that time and the coast orbit velocity determined before, you can then make the linear approximation of the time and altitude of the burn start.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBugger, I\u0027m starting the burn at the wrong time having failed to take in to account the increased speed getting me there sooner!\u00A0 KOS gives me a reading of time to Apoapsis and the velocity at a given time along my path.\u00A0\u00A0I was starting the burn at\u00A0BurnTime =(RequiredSpeedAtApoapsis-PredictedSpeedAtApoapsis)/(Thrust/Mass) before the Apoapsis.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve modified that to StartTime =\u00A0BurnTime * 2 * CurrentSpeed / (CurrentSpeed \u002B RequiredSpeed) , so the burn should finish about when it reaches the current Apoapsis location...\n\u003C/p\u003E\n\u003Cp\u003E\n..and now I end up 500m above\u00A0the target altitude and the engine shuts off about 10 seconds after the original Apoapsis time, from a 25 second burn, whereas prevuiusly it was about 3 seconds before the Apo time.\u00A0\u003Cimg alt=\u0022:mad:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_angry.gif\u0022 title=\u0022:mad:\u0022\u003E\u00A0 So clearly that\u0027s still not right!\u00A0 I\u0027m only thrusting a degree or two away from the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E vector so there shouldn\u0027t be that much\u00A0difference.\n\u003C/p\u003E\n\u003Cp\u003E\nIgnoring the timing issue for a minute, there\u0027s definitely something wrong with my heading calculation\u00A0 as the \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E climbs by 500-600m before dropping back down again so my initial thrust vector must need to point down a bit more.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m making life hard for myself by trying to work out the physics for everything rather than the use KSP\u0027s nodes or PID loops, although I am using basic feedback loops for things like Q limiting the climb.\u00A0 I should be able to do that properly but can\u0027t really be bothered at the moment as I\u0027m more interesting in the orbital mechanics than the aerodynamics.\u00A0 I was using PID loops a bit on a previous game but found in some cases they\u0027re actually more complicated than working out the physics \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nRe versions, I\u0027ve not played in a while, think I played on 1.4 but missed 1.5.\u00A0 Downloaded 1.61 the other day, installed KOS, and all worked fine despite being the 1.41 compatibility version of KOS.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCode for those interested.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-xml prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EFunction Circularize2 {\n\tParameter ApOrPe.\n\tSet Thrott to 0.\n\tSet kuniverse:timewarp:mode to \u0022PHYSICS\u0022.\n\tif ApOrPe =\u0022Ap\u0022 {\n\t\tset nodetime to time:seconds\u002Beta:apoapsis.\n\t\tset OrbSpd to sqrt(body:mu/(body:radius\u002Bship:apoapsis)).\n\t\tLock steering to velocityat(ship,nodetime):orbit. \n\t\tset TargetAlt to ship:apoapsis.\n\t\twait until vang(ship:facing:vector,velocityat(ship,nodetime):orbit)\u0026lt;1.\n\t}else if ApOrPe = \u0022Pe\u0022{\n\t\tset nodetime to time:seconds\u002Beta:periapsis.\n\t\tset OrbSpd to sqrt(body:mu/(body:radius\u002Bship:periapsis)).\n\t\tLock steering to -velocityat(ship,nodetime):orbit.  \n\t\tSet TargetAlt to Ship:periapsis.\n\t\twait until vang(ship:facing:vector,-velocityat(ship,nodetime):orbit)\u0026lt;1.\t\t\t\n\t}else{\n\t\tprint \u0022Error, not selected Ap or Pe for circularization\u0022.\n\t}\n\tPrint \u0022Circularizing at : \u0022 \u002B TargetAlt \u002B \u0022 meters\u0022.\t\n\tset nodespd to velocityat(ship,nodetime):orbit:mag.\n\tSet BurnTime to abs((OrbSpd-nodespd)/(Ship:Maxthrust/Ship:mass)).\n\tif nodetime-time:seconds\u0026gt;300{\n\t\tSet Warp to 4.\n\t}else{\n\t\tset warp to 1.\n\t}\n\twait until nodetime-time:seconds \u0026lt;60 \u002B Burntime.\n\tSet Warp to 1.\n\twait Until nodetime-time:seconds\u0026lt;Burntime\u002B10. \n\tset warp to 0.\t\n\twait 1.\t\n\tset dVel to ship:facing:vector.\n\t\n\t//Set StartTime to Burntime * 2 * vxcl(up:vector,velocity:orbit):mag / (sqrt(body:mu/(body:radius\u002BShip:altitude))\u002Bvxcl(up:vector,velocity:orbit):mag).\n\t\n\tPrint \u0022Start circularization burn at node minus \u0022\u002Bburntime\u002B \u0022 seconds\u0022.\n\tSet shipheading to ship:facing:vector.\n\tlock steering to shipheading. \n\n\tuntil dVel:mag\u0026lt;0.1 {\n\t\tif dVel:mag\u0026lt;50{\n\t\t\tSet Reqspeed to sqrt(body:mu/(body:radius\u002BShip:altitude)).\n\t\t} else {\n\t\t\tSet Reqspeed to sqrt(body:mu/(body:radius\u002BTargetAlt)).\n\t\t}\t\t\n\t\tSet HorizVec to vxcl(up:vector,velocity:orbit):normalized.       \n\t\tSet dVel to ReqSpeed*HorizVec-velocity:orbit. \n\t\tSet GravAcc to (body:mu/(altitude \u002B body:radius)^2).\n\t\tSet CentripetalAcc to (vxcl(up:vector,velocity:orbit):mag^2)/(altitude \u002B body:radius).\n\t\tset VertAcc to GravAcc-CentripetalAcc.\n\t\tset dVangle to 90-vang(dVel,HorizVec).\n\t\tset ThrustAcc to ship:maxthrust/ship:mass.\n\t\tset OffAngle to arcsin(VertAcc*sin(dVangle)/ThrustAcc).\n\t\tSet ThrustAngle to 180-offangle-dVangle.\n\t\t\n\t\tSet ShipHeading to Heading (LaunchBearing,(90-ThrustAngle)):forevector.\n\n\t\t\n\t\t\n\t\tPrint \u0022   ReqSpeed: \u0022 \u002B ReqSpeed \u002B \u0022        \u0022 at (0,20).\n\t\tprint \u0022 HorizSpeed: \u0022 \u002B vxcl(up:vector,velocity:orbit):mag \u002B \u0022        \u0022 at (0,21).\n\t\tprint \u0022      Delta: \u0022 \u002B dVel:mag \u002B \u0022        \u0022 at (0,22).\n\t\tprint \u0022   Altitude: \u0022 \u002B ship:altitude \u002B \u0022        \u0022 at (0,23).\n\t\tprint \u0022   Apoapsis: \u0022 \u002B ship:apoapsis \u002B \u0022        \u0022 at (0,24).\n\t\tprint \u0022   Apo-Peri: \u0022 \u002B (ship:apoapsis-ship:periapsis) \u002B \u0022       \u0022 at (0,25).\n\t\tprint \u0022    ETA Apo: \u0022 \u002B eta:apoapsis \u002B \u0022         \u0022 at (0,26). \n\t\tprint \u0022 dVel Angle: \u0022 \u002B vang(up:vector,dVel) \u002B \u0022     \u0022 at (0,7).\n\t\tprint \u0022    GravAcc: \u0022 \u002B GravAcc \u002B \u0022     \u0022 at (0,28).\n\t\tprint \u0022Centripetal: \u0022 \u002B CentripetalAcc \u002B \u0022    \u0022 at (0,29).\n\t\tprint \u0022    dVangle: \u0022 \u002B dVangle \u002B \u0022    \u0022 at (0,30).\t\t\n\t\tprint \u0022  ThrustAcc: \u0022 \u002B ThrustAcc \u002B \u0022    \u0022 at (0,31).\t\t\n\t\tprint \u0022   OffAngle: \u0022 \u002B OffAngle \u002B \u0022    \u0022 at (0,32).\t\t\n\t\tprint \u0022ThrustAngle: \u0022 \u002B ThrustAngle \u002B \u0022    \u0022 at (0,33).\t\n\t\tprint \u0022   NodeTime: \u0022 \u002B (nodetime-time:seconds) at (0,34).\n\t\t\n\t\tif nodetime-time:seconds\u0026lt;BurnTime{\n\t\t\tSet Thrott to ThrottleDir(shipheading,0.25,dVel:mag/50,0.01).\n\t\t}\n\t}\t\n\tSet Thrott to 0.\n\tWait 1.\n\tprint \u0022Stable Orbit Achieved\u0022.\n\n\t\n}\n\n\nFunction ThrottleDir{\n\tParameter ReqVector.\n\tParameter Accuracy.\n\tParameter ThrottSet.\n\tParameter MinThrott.\n\tif vang(ship:facing:vector,ReqVector)\u0026lt;Accuracy{\n\t\tSet Thrott to max(minThrott,ThrottSet).\n\t}else{\n\t\tSet Thrott to 0.\n\t}\n\tReturn Thrott.\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-02-02T09:47:25Z\u0022 title=\u002202/02/2019 09:47  AM\u0022 data-short=\u00225 yr\u0022\u003EFebruary 2, 2019\u003C/time\u003E by RizzoTheRat\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jacke","CreatedById":103694,"CreatedDateTime":"2019-02-02T10:25:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223533464\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549100795\u0022 data-ipsquote-userid=\u0022123362\u0022 data-ipsquote-username=\u0022RizzoTheRat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 minutes ago, RizzoTheRat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI was starting the burn at\u00A0BurnTime =(RequiredSpeedAtApoapsis-PredictedSpeedAtApoapsis)/(Thrust/Mass) before the Apoapsis.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve modified that to StartTime =\u00A0BurnTime * 2 * CurrentSpeed / (CurrentSpeed \u002B RequiredSpeed) , so the burn should finish about when it reaches the current Apoapsis location...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUnless your circularization \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E (in your terms \u0022RequiredSpeedAtApoapsis - PredictedSpeedAtApoapsis\u0022) is small leading to dm (change in the mass of the spacecraft) being small, the BurnTime can\u0027t be accurately figured from the linear equation.\u00A0 Use \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E = c ln (m0/m1), the Rocket Equation, and change it to determine m1, the spacecraft mass after the burn, with c being the effective exhaust velocity (= Isp g0, specific impulse times standard acceleration due to gravity) and m0 the spacecraft mass before the burn.\u00A0 Or\n\u003C/p\u003E\n\u003Cp\u003E\nm1 = m0\u00A0 exp(\u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E/c)\n\u003C/p\u003E\n\u003Cp\u003E\ndm = m0 - m1\n\u003C/p\u003E\n\u003Cp\u003E\ndm = mrate dt\n\u003C/p\u003E\n\u003Cp\u003E\nmrate = T / c\n\u003C/p\u003E\n\u003Cp\u003E\nT is the thrust and dt is the burn time.\u00A0 Solving for dt\n\u003C/p\u003E\n\u003Cp\u003E\ndt = ( m0 c / T) (1 - exp (- \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E / c)\n\u003C/p\u003E\n\u003Cp\u003E\nReplacing c with Isp and g0 which you have,\n\u003C/p\u003E\n\u003Cp\u003E\ndt = (m0 Isp g0 / T) (1 - exp ( - \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E / (Isp g0)))\n\u003C/p\u003E\n\u003Cp\u003E\nAnd that\u0027s your burn time, from constants g0 (9.81 m/s/s) and spacecraft initial mass (m0), engine specific impulse (Isp), engine Thrust (T), and the circularization \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nBut that\u0027s the linear size of the vector \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E.\u00A0 You have to do the vector math to get the angle to face down.\n\u003C/p\u003E\n"},{"CreatedByName":"MrSystems","CreatedById":195047,"CreatedDateTime":"2019-02-02T19:48:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223533464\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549100795\u0022 data-ipsquote-userid=\u0022123362\u0022 data-ipsquote-username=\u0022RizzoTheRat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, RizzoTheRat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBugger, I\u0027m starting the burn at the wrong time having failed to take in to account the increased speed getting me there sooner!\u00A0 KOS gives me a reading of time to Apoapsis and the velocity at a given time along my path.\u00A0\u00A0I was starting the burn at\u00A0BurnTime =(RequiredSpeedAtApoapsis-PredictedSpeedAtApoapsis)/(Thrust/Mass) before the Apoapsis.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere are two things wrong with that approach. First, you want to execute half your delta-V before the apoapsis and half after. Because the burn takes some time, the part of the burn that happens before apoapsis changes your apoapsis, but the part that happens after, assuming you\u0027re pointing along the correct vector the entire time, changes it back to where it was when you started.\n\u003C/p\u003E\n\u003Cp\u003E\nSecond, your thrust/mass will change as you burn rocket fuel. You\u0027ll need to take that into account in deciding a) how long the burn will take (it\u0027s less than what thrust_now / mass_now would predict) and b) when to start the burn (more than half of the burn goes before the apoapsis).\n\u003C/p\u003E\n\u003Cp\u003E\nRelevant code from my burn_node script, which I use every time I need to execute a node and not just for circularizing at the end of a launch, is:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E// calculate the weighted ISP of all active engines (not strictly necessary if you only ever use one engine)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ENGINES in \u003C/span\u003E\u003Cspan\u003EMyEngines\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E current_stage to stage\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enumber\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E thrust_multiplier to \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// if my burn takes less than 10 seconds, I have code elsewhere to lower the throttle\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E total_thrust to \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E total_flow to \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E loop_complete to FALSE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// gotta leave time to complete the FOR loop before proceeding? takes time to count the engines?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E engine_count to \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E eng in \u003C/span\u003E\u003Cspan\u003EMyEngines\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eeng\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estage \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E current_stage\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t  \u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E total_thrust TO total_thrust \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E eng\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eavailablethrust\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t  \u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E total_flow TO total_flow \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E eng\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eavailablethrust \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E eng\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eisp\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t  \u003C/span\u003E\u003Cspan\u003EPrint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Thrust=\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etotal_thrust\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022, mass flow=\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eround\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etotal_flow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 for \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E eng\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E engine_count to engine_count \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// total_flow is the rate at which mass flows through the engines\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E loop_complete to TRUE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nwait until loop_complete AND engine_count \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMyEngines\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ELENGTH\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// multi-threaded code...\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// need to multiply by 1000 (because thrust is kN) and divide by g to get mass flow rate.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E total_flow to thrust_multiplier \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E total_flow \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E9.80665\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nSET current_mass TO MASS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nSET current_accel TO thrust_multiplier \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E total_thrust \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E current_mass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E weighted_ISP TO \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etotal_thrust \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etotal_flow \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E thrust_multiplier\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E9.80665\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v_e  TO weighted_ISP \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E9.80665\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E future_mass TO MASS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Econstant\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ee\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)^(\u003C/span\u003E\u003Cspan\u003ENextNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan\u003EDeltaV\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Emag \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v_e\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// mass after burn is executed\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// mass and acceleration both change linearly with time, so average equals midpoint.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// also, time to burn is equal to change in mass divided by flow rate.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E burn_duration TO \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMASS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E future_mass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etotal_flow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003EIf\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E thrust_multiplier \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan\u003EPrint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Throttle-adjusted burn time is \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eburn_duration\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ELSE \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan\u003EPrint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Burn time: \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eround\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eburn_duration\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ECLOCK \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 (\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eburn_duration\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022s)\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                        \n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// for very long burns significantly more acceleration happens on the back half of the burn due to change in TWR\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// the first half of dV is achieved when remaining mass = EXP((ln(initial mass) - ln(final mass))/2)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// that happens at time (initial mass - remaining mass) / flow rate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E first_half_burn_mass TO \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Econstant\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ee\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)^((\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMASS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efuture_mass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))/\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E first_half_burn_time TO \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMASS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E first_half_burn_mass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)/(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etotal_flow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// total flow is in kg, MASS is in metric tons.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan\u003EPrint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Half-burn: \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eround\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efirst_half_burn_time\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ECLOCK \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 (\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efirst_half_burn_time\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022s)\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E target_burn_time to time\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eseconds \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eeta \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efirst_half_burn_time\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//nd:eta is the time until the burn node\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// if you\u0027re not using a node, it would be set target_burn_time to ETA:APOAPSIS - first_half_burn_time\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003EPrint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Burning in \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etarget_burn_time \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E time\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eclock \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 at \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etarget_burn_time \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E TIME\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eclock\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThat\u0027s just for calculating when and how long to burn. My code to execute the burn wouldn\u0027t help you with what you\u0027re trying to do because it relies on a maneuver node that you don\u0027t wish to create.\n\u003C/p\u003E\n\u003Cp\u003E\nMy process for putting ships into orbit, though, is:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nopen a terminal and type \u0027run launch\u0027\n\u003C/li\u003E\n\u003Cli\u003E\nwait about 4 minutes\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nMy \u0027launch\u0027 script is about 440 lines. At the end it calls my \u0027circularize\u0027 script (pasted in full in my previous reply) and then my \u0027burn_node\u0027 script.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-02T20:42:42Z","Content":"\n\u003Cp\u003E\nCheers both, I\u0027ll have a play with getting the burn timing right and see if that improves things.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223533697\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549136922\u0022 data-ipsquote-userid=\u0022195047\u0022 data-ipsquote-username=\u0022MrSystems\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n47 minutes ago, MrSystems said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMy process for putting ships into orbit, though, is:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nopen a terminal and type \u0027run launch\u0027\n\u003C/li\u003E\n\u003Cli\u003E\nwait about 4 minutes\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nMy \u0027launch\u0027 script is about 440 lines. At the end it calls my \u0027circularize\u0027 script (pasted in full in my previous reply) and then my \u0027burn_node\u0027 script.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat seems like a lot of effort, I just click the launch button from the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u00A0 \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nBoot script loads my functions to the onboard processor and tuns them, and then loads a script file of the same name as the vessel which\u00A0has the parameters like initial turn velocity and angle, and then calls the relevant functions for the flight.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI find KOS to be something that\u0027s alternately as frustrating as hell and very rewarding...then again I suppose I could say the same about KSP \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"MrSystems","CreatedById":195047,"CreatedDateTime":"2019-02-02T20:58:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223533725\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549140162\u0022 data-ipsquote-userid=\u0022123362\u0022 data-ipsquote-username=\u0022RizzoTheRat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 minutes ago, RizzoTheRat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCheers both, I\u0027ll have a play with getting the burn timing right and see if that improves things.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nLet us know if it works! I tried the vector addition method before I switched to just using orbital mechanics methods, and when I failed I assumed it was impossible.\n\u003C/p\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-03T11:14:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223533473\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549103113\u0022 data-ipsquote-userid=\u0022103694\u0022 data-ipsquote-username=\u0022Jacke\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/2/2019 at 11:25 AM, Jacke said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\ndt = (m0 Isp g0 / T) (1 - exp ( - \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E / (Isp g0)))\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nStill not got this quite right, I\u0027ve tried to do in steps a bit like \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/195047-mrsystems/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022195047\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/195047-mrsystems/\u0022 rel=\u0022\u0022\u003E@MrSystems\u003C/a\u003E\u00A0code, as I like to be able to follow code fairly easily, and then also done it by \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/103694-jacke/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022103694\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/103694-jacke/\u0022 rel=\u0022\u0022\u003E@Jacke\u003C/a\u003E\u0027s single equation.\n\u003C/p\u003E\n\u003Cp\u003E\nSlow method:\n\u003C/p\u003E\n\u003Cp\u003E\nVExhaust = \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E * 9.81\n\u003C/p\u003E\n\u003Cp\u003E\nMassFinal = Mass * e^(-\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E/VExhaust)\n\u003C/p\u003E\n\u003Cp\u003E\nMeanAcc = 2 * Thrust / (Mass \u002B MassFinal)\n\u003C/p\u003E\n\u003Cp\u003E\nBurnTime = \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E / MeanAcc\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOne step method:\n\u003C/p\u003E\n\u003Cp\u003E\ndT = (Mass * \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E * 9.81/Thrust) * (1-e^(\u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E / (\u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E*9.81)))\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nA test ship the pad is reporting 29.68 seconds for the slow method and 29.28\u00A0for the one step.\u00A0 I can\u0027t see a mistake in Jacke\u0027s workings, so is my assumption that the rate of change of change of mass, and therefore acceleration, is linear wrong?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m also not 100% sure about units here.\u00A0 MrSystems is multiplying by 1000 as thrust is in KN, but it appears mass is in tonnes, so that shouldn\u0027t be needed should it?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-02-03T11:15:58Z\u0022 title=\u002202/03/2019 11:15  AM\u0022 data-short=\u00225 yr\u0022\u003EFebruary 3, 2019\u003C/time\u003E by RizzoTheRat\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jacke","CreatedById":103694,"CreatedDateTime":"2019-02-03T12:23:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223534065\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549192448\u0022 data-ipsquote-userid=\u0022123362\u0022 data-ipsquote-username=\u0022RizzoTheRat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, RizzoTheRat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOne step method:\n\u003C/p\u003E\n\u003Cp\u003E\ndT = (Mass * \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E * 9.81/Thrust) * (1-e^(\u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E / (\u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E*9.81)))\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\ndT = (Mass * \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E * 9.81/Thrust) * (1-e^(\u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cstrong\u003E-\u003C/strong\u003E dv\u003C/abbr\u003E / (\u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E*9.81)))\n\u003C/p\u003E\n\u003Cp\u003E\nThat minus sign in the exponent is vital.\u00A0 Else the formula will return too low a value.\n\u003C/p\u003E\n\u003Cp\u003E\nThat\u0027s the scalar burn time.\u00A0 You have to do the vector math of the velocity subtraction to get the vector \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E and thus the angle down for the burn.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-02-03T12:23:23Z\u0022 title=\u002202/03/2019 12:23  PM\u0022 data-short=\u00225 yr\u0022\u003EFebruary 3, 2019\u003C/time\u003E by Jacke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-03T14:51:08Z","Content":"\n\u003Cp\u003E\nOops, that was a typo on here, the code has it negative, so I\u0027m still assuming I\u0027ve got an assumption wrong on the slow method.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe vector bit is what I originally started the thread for, but got sidetracked when we discovered I\u0027d messed up the burn time calculation \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m\u00A0subtracting the current velocity from the orbital velocity to get the required \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E, and the angle of that velocity below the horizon (alpha)\n\u003C/p\u003E\n\u003Cp\u003E\nThe ship is still suborbital at this point so\u00A0I assumed\u00A0its accelerating straight down at a rate of Gravity - Centripetal Acceleration, in which case I need to offset the thrust angle so that the sum of thrust, gravity and centripetal ends up at the angle alpha.\u00A0 Excuse the dodgy PowerPoint diagrams...\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022bSN4SdW.png\u0022 class=\u0022ipsImage\u0022 height=\u0022484\u0022 src=\u0022https://i.imgur.com/bSN4SdW.png\u0022 width=\u0022620\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nWith my current small test ship and the updated timing this gets me to within around 100m...but thrusting on the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E vector gets me to within 10m.\u00A0 I\u0027ve just tried it with a bigger ship and \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E vector go me about 800m low while the Gravity-Centripetal method got me about 1500m high.\n\u003C/p\u003E\n\u003Cp\u003E\nSo now I have no idea what\u0027s going on.\n\u003C/p\u003E\n"},{"CreatedByName":"Jacke","CreatedById":103694,"CreatedDateTime":"2019-02-03T15:51:17Z","Content":"\n\u003Cp\u003E\nAssuming you\u0027re trying to circularize at 100km, that\u0027s 700km semi-major axis (SMA), ie. the altitude of the desired orbit.\u00A0 So your \u002B800m high and 1500m low are about 0.1% to 0.2% error.\n\u003C/p\u003E\n\u003Cp\u003E\nI think to get closer, use the best estimates to get the start of burn, but then split the problem into components: the vertical SMA and velocity and the horizontal velocity.\u00A0 You want to zero the vertical velocity component at the desired SMA and change the horizontal velocity to the circular velocity at that SMA.\u00A0 That\u0027s why the spacecraft angles down, to decrease the vertical velocity to zero at the SMA altitude and increase the horizontal velocity to the circular velocity.\n\u003C/p\u003E\n\u003Cp\u003E\nFigure out the component accelerations to do that.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00270\u0027 indicating start of burn, \u00271\u0027 indicating end of burn, and \u0027d\u0027 indicating desired, given vertical velocity v0, altitude A0 and Ad,\u00A0 horizontal velocities h0 and hc, and burn time dt, find vertical acceleration av and horizontal acceleration ah\n\u003C/p\u003E\n\u003Cp\u003E\nav = v0^2 / (2 ( Ad - A0)) - g\n\u003C/p\u003E\n\u003Cp\u003E\nah = (hc - h0 ) / dt\n\u003C/p\u003E\n\u003Cp\u003E\nAnd\n\u003C/p\u003E\n\u003Cp\u003E\nav^2 \u002B ah^2 = ( (2 Thrust ) / ( m0 \u002B m1) )^2\n\u003C/p\u003E\n\u003Cp\u003E\nThe last is a linear approximation, but I think it\u0027ll get low error as long as the burn\u0027s not too long and the change in mass too much.\u00A0 Take all those and solve for A0, the altitude at which to start the burn.\n\u003C/p\u003E\n\u003Cp\u003E\nA0 = Ad - ( (v0^2) / 2 ) / sqrt ( (2 T / (m0 \u002B m1) )^2 -\u00A0 ( (hc - h0) / dt)^2 )\n\u003C/p\u003E\n\u003Cp\u003E\nCalculate av and ah and then get the angle from\n\u003C/p\u003E\n\u003Cp\u003E\nangle = arctan ( av / ah )\n\u003C/p\u003E\n\u003Cp\u003E\nYou perhaps should put in an override to cut throttle when vertical velocity is zero.\u00A0 The orbit is circular at that point.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-02-03T20:17:10Z\u0022 title=\u002202/03/2019 08:17  PM\u0022 data-short=\u00225 yr\u0022\u003EFebruary 3, 2019\u003C/time\u003E by Jacke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"adsii1970","CreatedById":89014,"CreatedDateTime":"2019-02-03T18:20:41Z","Content":"\n\u003Cp\u003E\nQuestion has been moved from Gameplay Questions and Tutorials to Science and Spaceflight.\n\u003C/p\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-03T19:03:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223534161\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549209077\u0022 data-ipsquote-userid=\u0022103694\u0022 data-ipsquote-username=\u0022Jacke\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n26 minutes ago, Jacke said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI think to get closer, use the best estimates to get the start of burn, but then split the problem into components: the vertical SMA and velocity and the horizontal velocity.\u00A0 You want to zero the vertical velocity component at the desired SMA and change the horizontal velocity to the circular velocity at that SMA.\u00A0 That\u0027s why the spacecraft angles down, to decrease the vertical velocity to zero at the SMA altitude and increase the horizontal velocity to the circular velocity.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is the bit I\u0027m struggling to get my head around. Left to it\u0027s own devices the vertical component will decrease to 0 at the \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E.\u00A0 By adding more horizontal velocity I\u0027m increasing the Centripetal acceleration, so I need to thrust below the horizontal to take that in to account.\u00A0 I just can\u0027t quite make up my mind if I\u0027m double counting it with the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E already pointing down, and the adding in the effect of gravity and centripetal acceleration.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Jacke","CreatedById":103694,"CreatedDateTime":"2019-02-03T20:24:35Z","Content":"\n\u003Cp\u003E\nI had to correct my approximate formula for A0 above.\u00A0 Forgot to square one term and square-root another.\n\u003C/p\u003E\n\u003Cp\u003E\nAll of this is very approximate.\u00A0 To solve this exactly, it\u0027s a power track--an accelerated trajectory--and to solve that to a high degree is best done with a Lagrangian method.\u00A0 Which I was introduced to reading Von Braun\u0027s \u003Cem\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/The_Mars_Project\u0022 rel=\u0022external nofollow\u0022\u003EThe Mars Project\u003C/a\u003E\u003C/em\u003E.\u00A0 (And even he only did it for the long burn in the Trans Mars Injection, to get the angle around the Earth of the burn to set the lead to get the right ejection angle.) That was a long time ago and I\u0027m quite rusty with the math.\u00A0 I think more approximate methods will work here.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223534265\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549220595\u0022 data-ipsquote-userid=\u0022123362\u0022 data-ipsquote-username=\u0022RizzoTheRat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, RizzoTheRat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis is the bit I\u0027m struggling to get my head around. Left to it\u0027s own devices the vertical component will decrease to 0 at the \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E.\u00A0 By adding more horizontal velocity I\u0027m increasing the Centripetal acceleration, so I need to thrust below the horizontal to take that in to account.\u00A0 I just can\u0027t quite make up my mind if I\u0027m double counting it with the \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E already pointing down, and the adding in the effect of gravity and centripetal acceleration.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSince we\u0027re working in the frame of the rocket, it\u0027s a rotating frame, so it means it\u0027s centrifugal acceleration.\u00A0 And you\u0027re right, it will be a factor.\n\u003C/p\u003E\n\u003Cp\u003E\nThink of the vertical acceleration component.\u00A0 We want that to change the vertical velocity to zero over the burn.\u00A0 In the rotating frame, there\u0027s the local acceleration of gravity down, g.\u00A0 And the centrifugal acceleration, ac, is up, h^2/(r0 \u002B A), where h is the instantaneous horizontal velocity, r0 is the radius of the planet, and A is the instantaneous altitude.\n\u003C/p\u003E\n\u003Cp\u003E\ng over the period of the burn will be roughly constant.\u00A0 (r0 \u002B A) will change little.\u00A0 The centrifugal acceleration will increase as h^2 increases.\n\u003C/p\u003E\n\u003Cp\u003E\nThe thrust of the craft will change, but hopefully not much.\u00A0 That means the total acceleration doesn\u0027t change much.\u00A0 And because the burn is at mostly shallow angles, that means the horizontal acceleration doesn\u0027t change much.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat will change is the vertical acceleration, as the centrifugal acceleration will increase.\u00A0 The plan for the burn is for that vertical acceleration to be about constant, which means as the centrifugal acceleration goes up the rocket will have to pitch down.\n\u003C/p\u003E\n\u003Cp\u003E\nI think the autopilot mods set this up and then use a PID to drive the numbers at a steady rate towards the goal values at the right time.\n\u003C/p\u003E\n\u003Cp\u003E\nFor your case I think you can calculate the angle at burn start and the angle at burn end and just pitch the spacecraft through that angle.\n\u003C/p\u003E\n\u003Cp\u003E\nangle start = arctan ( (av - g \u002B (h0^2 / (r0 \u002B A0))) / ah)\n\u003C/p\u003E\n\u003Cp\u003E\nangle end = arctan ( (av - g \u002B (hc^2 / (r0 \u002B Ad))) / ah)\n\u003C/p\u003E\n\u003Cp\u003E\nwhere av is the roughly constant desired vertical acceleration, g is the local acceleration due to gravity, h0 is the initial horizontal velocity, hc is the desired circular velocity, r0 is the radius of the planet, A0 is the initial altitude, Ad is the altitude of the desired orbit, and ah is the roughly constant desired horizontal velocity.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd here\u0027s how to calculate the local g, where g0 is the g at the surface of the planet.\n\u003C/p\u003E\n\u003Cp\u003E\ng = g0 ( r0 / (r0 \u002B A) )^2\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I hope this is a little less murky than muddy water. \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-02-03T20:35:51Z\u0022 title=\u002202/03/2019 08:35  PM\u0022 data-short=\u00225 yr\u0022\u003EFebruary 3, 2019\u003C/time\u003E by Jacke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-04T11:58:47Z","Content":"\n\u003Cp\u003E\nHelpfully KOS can extract the Standard Gravitational Parameter mu directly from KSP\u00A0so local\u00A0acceleration due to gravity is really easy at mu/(r0\u002BA)^2, and I can get the centripetal acceleration from HorizontalVelocity^2/(r0\u002BA).\u00A0 I think your angle calcs are a condensed version of current approach but I\u0027ll need to sit down and work it through to be sure.\u00A0 The beauty of KOS is it can calculate on every physics tick so you can update these things on the fly rather than need to calculate the start and end and interpolate in between.\n\u003C/p\u003E\n\u003Cp\u003E\nI was thinking last night about trying to burn in a direction to ensure the vertical component of acceleration is such that it hits 0m/s vertically at the end of the burn, but then it occurred to me there might be a simpler way.\u00A0 If I start the burn at \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E, I\u00A0could angle up slightly to counteract the effect of gravity-centripetal and keep the vertical acceleration to 0, this should mean the \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E stays at the target height as the ship accelerates.\u00A0 I think this would be a bit less efficient* though, and still doesn\u0027t solve the issue of working out exactly what the hell is going on.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n*efficiency is a pretty\u00A0useful thing, I\u0027ve managed to design an early\u00A0craft that can get a pilot and 2 tourists to an 80km orbit with something like 100m/s remaining \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E left when launched by my current script.\u00A0 I tried flying it manually and couldn\u0027t make orbit.\u00A0 It appears the most efficient launch trajectory is one where the fins overheat and\u00A0explode just before main engine cutoff.\u00A0\u003Cspan\u003E\u003Cspan\u003E\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-02-04T11:59:36Z\u0022 title=\u002202/04/2019 11:59  AM\u0022 data-short=\u00225 yr\u0022\u003EFebruary 4, 2019\u003C/time\u003E by RizzoTheRat\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jacke","CreatedById":103694,"CreatedDateTime":"2019-02-04T12:25:25Z","Content":"\n\u003Cp\u003E\nLooks like you\u0027ve got a good approach.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223534648\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549281527\u0022 data-ipsquote-userid=\u0022123362\u0022 data-ipsquote-username=\u0022RizzoTheRat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 minutes ago, RizzoTheRat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n..centripetal acceleration....\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s important to remember that centripetal acceleration is in the unrotated frame of reference, as in a frame of reference rigidly attached to the planet.\u00A0 There, the centripetal acceleration is due to gravity and the rate of angular rotation of the rockets velocity vector due to that is reduced by moving faster.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is case where I think with these methods, things are better understood in the rotating frame of reference, one attached to the spacecraft.\u00A0 There you have the centrifugal acceleration caused by the horizontal velocity of the spacecraft as well as the acceleration of gravity down opposing it.\u00A0 There\u0027s also the Coriolis force that provides sideways acceleration and the Euler force due to the change in angular velocity and in the opposite direction, but hopefully both of those will be small.\n\u003C/p\u003E\n\u003Cp\u003E\nMoving the viewpoint between the 2 frames during any investigation has to be done carefully, but this approach can help get simpler formulae to manipulate.\u00A0 Unfortunately, the Wikipedia articles are rather thick with vector math and thin on diagrams.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-04T13:51:57Z","Content":"\n\u003Cp\u003E\nI\u0027ve got about 6 approaches but I\u0027ve not managed to get any of them right yet \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nNot sure on the correct terminology but when I say Centripetal acceleration I just mean the acceleration away from Kerbin due to the ships velocity.\u00A0 I\u0027m subtracting that from gravity at the given altitude to get the total vertical acceleration\n\u003C/p\u003E\n\u003Cp\u003E\nThe rotating frame of reference thing is one cause of headaches.\u00A0 For example I\u0027m using the ships actual velocity vector\u00A0prior to Apoapsis, but for the target velocity I\u0027m using the orbital speed tangential to the planet at the point where the space craft currently is.\u00A0 In reality this is going to be\u00A0tilted down a bit as it\u0027s really the tangential velocity at a point further around the arc of the planet.\u00A0 Again I\u0027m not sure if I\u0027m double counting as the change in this velocity is caused by gravity and the centripetal acceleration.\u00A0 I\u0027m thinking I should have a go at estimating the angle at apoapsis.\u00A0 It\u0027s going to be pretty small unless it\u0027s a long burn time, but\u00A0in a previous game I did have the my original script doing multi pass burns for low \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E ships going interplanetary, I wasn\u0027t too bothered about the Periapsis getting higher if I was a bit out, but then again if I can keep it lower for more Oberth effect would make for a more efficient burn.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve not played KSP for a while but when I\u00A0first started playing with KOS a couple of versions ago I\u00A0found I\u0027d forgotten so much\u00A0maths I had to ask my\u00A0wife, a maths teacher,\u00A0for a crash course on vectors.\u00A0She thought I was after it for work to start with rather than for a computer game\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Jacke","CreatedById":103694,"CreatedDateTime":"2019-02-04T17:01:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223534680\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549288317\u0022 data-ipsquote-userid=\u0022123362\u0022 data-ipsquote-username=\u0022RizzoTheRat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, RizzoTheRat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot sure on the correct terminology but when I say Centripetal acceleration I just mean the acceleration away from Kerbin due to the ships velocity.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCentri\u003Cstrong\u003EF\u003C/strong\u003Eugal forces and accelerations \u003Cstrong\u003EF\u003C/strong\u003Eling away from the centre.\u00A0 Centri\u003Cstrong\u003EP\u003C/strong\u003Eetal forces and accelerations \u003Cstrong\u003EP\u003C/strong\u003Eull towards the centre.\n\u003C/p\u003E\n\u003Cp\u003E\nCentripetal forces in astrodynamics are gravitational forces, so they\u0027re in the non-rotating frame of reference, that of the planet if it wasn\u0027t rotating (or the distant stars).\n\u003C/p\u003E\n\u003Cp\u003E\nCentrifugal forces don\u0027t appear to have any source (let\u0027s no bring in \u003Ca href=\u0022https://en.wikipedia.org/wiki/Mach%27s_principle\u0022 rel=\u0022external nofollow\u0022\u003EMach\u0027s Principle\u003C/a\u003E, things are complicated enough already), so they\u0027re in the rotating frame of reference, that of the rocket itself.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m going to have to think on this one.\u00A0 Will have to go back to the basic problem and physics first principles.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat parameters of the coasting ellipse are available from KOS ?\n\u003C/p\u003E\n"},{"CreatedByName":"Ozymandias_the_Goat","CreatedById":159377,"CreatedDateTime":"2019-02-04T17:57:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223534749\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549299690\u0022 data-ipsquote-userid=\u0022103694\u0022 data-ipsquote-username=\u0022Jacke\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n52 minutes ago, Jacke said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCentri\u003Cstrong\u003EF\u003C/strong\u003Eugal\u003Cspan\u003E\uFEFF\u003Cspan\u003E\uFEFF\u003C/span\u003E\u003C/span\u003E forces and accelerations \u003Cstrong\u003EF\u003C/strong\u003Eling away from the centre.\u00A0 Centri\u003Cstrong\u003EP\u003C/strong\u003Eetal forces and a\u003Cspan\u003E\uFEFF\u003C/span\u003Eccelerations \u003Cstrong\u003EP\u003C/strong\u003Eull towards the centre.\u003Cspan\u003E\uFEFF\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nKeep in mind that centrifugal\u00A0forces are not a real force, they are merely a fictitious force that appears to justify the motion of an object in a circle, but in reality does not.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"RizzoTheRat","CreatedById":123362,"CreatedDateTime":"2019-02-04T18:27:26Z","Content":"\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223534749\u0022 data-ipsquote-contentid=\u0022181894\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221549299690\u0022 data-ipsquote-userid=\u0022103694\u0022 data-ipsquote-username=\u0022Jacke\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Jacke said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat parameters of the coasting ellipse are available from KOS ?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can get the current velocity and altitude,\u00A0Apo/Periapsis time and altitude, and the ships velocity vector at a given time on it\u0027s current path.\u00A0 Although the latter is tricky as the frame of reference is fixed in relation to thee sun, so rotates relative to the ship and the planet \u00A0so you if you get a vector at a future point it won\u0027t be correct by the time you get there.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve just discovered you can get ground speed and vertical speed which I usually calculate from the velocity vector, and it also seems to have angular velocity and angular momentum.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}