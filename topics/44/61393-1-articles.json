{"TopicId":61393,"ForumId":44,"TopicTitle":"Fuel consumption as a function of atmospheric pressure","CreatedByName":"stan-","CreatedById":102105,"CreatedDateTime":"2014-01-28T18:32:42Z","PageNum":1,"Articles":[{"CreatedByName":"stan-","CreatedById":102105,"CreatedDateTime":"2014-01-28T18:32:42Z","Content":"\n\u003Cp\u003EHello,\u003C/p\u003E\u003Cp\u003EI noticed that the fuel consumption of my engines drops as my ship rises higher, but the wiki does not state an explicit equation for the relation between consumption and height. I have some empirical evidence to believe that there is some kind of \u003Ca href=\u0022https://en.wikipedia.org/wiki/Sigmoid_function\u0022 rel=\u0022external nofollow\u0022\u003Esigmoidal relation\u003C/a\u003E, i.e. consumption = a * (1 - S(k * height)) \u002B b, where a and b are engine-specific parameters (derived from what is displayed in the engine description for fuel consumption), and k is a parameter of the game\u0027s physics engine.\u003C/p\u003E\u003Cp\u003EMy question is: am I even remotely right?\u003C/p\u003E\u003Cp\u003EThanks,\u003C/p\u003E\u003Cp\u003E - Stan\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2014-01-28T20:11:26Z","Content":"\n\u003Cp\u003EThis question might be better asked in the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/forums/15-Gameplay-Questions-and-Tutorials\u0022 rel=\u0022external nofollow\u0022\u003EGameplay Questions and Tutorials\u003C/a\u003E sub-forum, but I\u0027ll take a stab at it. I am sure someone will correct whatever I get wrong (and what I get right, for that matter...)\u003C/p\u003E\u003Cp\u003EAns: The Isp of engines in the game varies with atmospheric pressure, but the implementation is bass ackwards. In order to achieve the variable Isp, they\u0027ve held engine thrust constant over the full range of atmospheric pressures and varied fuel burn instead. In reality, you would expect engine thrust to vary with back pressure (i.e. atmospheric pressure) acting on the nozzle while fuel flow rate would be roughly constant for any given throttle setting. I recall seeing a post once from one of the devs that they were going to fix this, but I don\u0027t think it has been done yet.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-01-28T20:25:52Z","Content":"\n\u003Cp\u003EThe relationship is piecewise-linear. The way it works in code is via the following lines in the engine .cfg file.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EatmosphereCurve\u003Cbr\u003E {\u003Cbr\u003E  \t key = 0 370\u003Cbr\u003E \t key = 1 320\u003Cbr\u003E }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd the game just uses first order interpolation, which means I\u003Csub\u003ESP\u003C/sub\u003E is 370 at pressure of 0 bar (or bellow, but that\u0027s impossible), 320 at pressure of 1 bar or above, and for any pressure x between 0 and 1 bar, it is x*320 \u002B (1-x)*370.\u003C/p\u003E\u003Cp\u003EThis does, of course, have the general features of a sigmoid, but it\u0027s not a smooth curve. Similar code is used for I\u003Csub\u003ESP\u003C/sub\u003E and thrust of game\u0027s jet engines, but these use more key points. Interpolation is still linear, however.\u003C/p\u003E\u003Cp\u003ENaturally, knowing thrust and I\u003Csub\u003ESP\u003C/sub\u003E, you can compute fuel consumption.\u003C/p\u003E\u003Cp\u003EEdit: Small correction. For jet engines, thrust varies with velocity, not pressure. But again, using the same key-value interpolation. I\u003Csub\u003ESP\u003C/sub\u003E varies with pressure, same as rocket engines.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-28T20:37:54Z\u0022 title=\u002201/28/2014 08:37  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 28, 2014\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"stan-","CreatedById":102105,"CreatedDateTime":"2014-01-28T21:16:52Z","Content":"\n\u003Cp\u003EThank you both for the answers! What K^2 said was what I was after. Will add that to my computations.\u003C/p\u003E\u003Cp\u003EThanks!\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2014-01-29T07:43:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003ESimilar code is used for I\u003Csub\u003ESP\u003C/sub\u003E and thrust of game\u0027s jet engines, but these use more key points. Interpolation is still linear, however.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EInterpolation of Isp for jets is not actually linear. You\u0027ll notice for the turbojet for example you have\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\tatmosphereCurve\u003Cbr\u003E \t{\u003Cbr\u003E\t\tkey = 0 1200\u003Cbr\u003E\t\tkey = 0.3 2500\u003Cbr\u003E\t\tkey = 1 800\u003Cbr\u003E \t}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ebut the reported Isp in the right-click menu peaks at slightly higher than 2500, around 2525 or so. When there are more than 2 points in the curve it\u0027s some sort of spline or polynomial, not piecewise linear.\u003C/p\u003E\u003Cp\u003EAlso I only recently became aware of the fact that for jets in KSP, the reported specific impulse in the right-click menu is not accurate. The effective Isp, equal to thrust / (g0 * mdot), is currently scaled by the velocityCurve. I suspect that\u0027s a bug.\u003C/p\u003E\n"},{"CreatedByName":"KerbMav","CreatedById":70338,"CreatedDateTime":"2014-01-29T09:54:39Z","Content":"\n\u003Cp\u003EMaybe this mod - or the reading of its source code - can help you too?\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/52882-0-23-Kerbal-Isp-Difficulty-Scaler-v1-3-2-12-17\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/52882-0-23-Kerbal-Isp-Difficulty-Scaler-v1-3-2-12-17\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-01-29T16:53:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tavert\u0022 data-cite=\u0022tavert\u0022\u003E\u003Cdiv\u003EInterpolation of Isp for jets is not actually linear. You\u0027ll notice for the turbojet for example you have\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\tatmosphereCurve\u003Cbr\u003E \t{\u003Cbr\u003E\t\tkey = 0 1200\u003Cbr\u003E\t\tkey = 0.3 2500\u003Cbr\u003E\t\tkey = 1 800\u003Cbr\u003E \t}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ebut the reported Isp in the right-click menu peaks at slightly higher than 2500, around 2525 or so. When there are more than 2 points in the curve it\u0027s some sort of spline or polynomial, not piecewise linear.\u003C/p\u003E\u003Cp\u003EAlso I only recently became aware of the fact that for jets in KSP, the reported specific impulse in the right-click menu is not accurate. The effective Isp, equal to thrust / (g0 * mdot), is currently scaled by the velocityCurve. I suspect that\u0027s a bug.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOdd. Polynomial interpolation through these three points peaks at 0.47 bar with value 2,696. If you are saying that the maximum is above 2,500, but nowhere near as high as this, that excludes this particular possibility. On the other hand, something like Bezier can\u0027t exceed maximum key value. So that\u0027s me out of ideas. I guess I\u0027ll go and dig through the actual code now.\u003C/p\u003E\u003Cp\u003EEdit: Game uses Unity\u0027s AnimationCurve object for interpolation. It does use ClampForever option for end points. So the value at 1 bar is valid for any pressure above 1 bar. Apparently, AnimationCurve can look after tangents, so I tried using interpolating polynomial which has zero slope at the end points as well, but that gave me a maximum value that\u0027s even higher - 2,970. And I haven\u0027t been able to find more detailed documentation on AnimationCurve to find out exactly what it uses for interpolation.\u003C/p\u003E\u003Cp\u003EP.S. Here is the actual code from the ModuleEngines.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eprivate double RequiredPropellantMass(float throttleAmount)\u003Cbr\u003E{\u003Cbr\u003E    this.realIsp = this.atmosphereCurve.Evaluate((float)base.vessel.staticPressure);\u003Cbr\u003E    float single = this.realIsp * this.g;\u003Cbr\u003E    this.requestedThrust = Mathf.Lerp(this.minThrust, this.maxThrust, throttleAmount);\u003Cbr\u003E    return (double)(this.requestedThrust / single * TimeWarp.deltaTime);\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-29T17:21:25Z\u0022 title=\u002201/29/2014 05:21  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 29, 2014\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Idobox","CreatedById":80299,"CreatedDateTime":"2014-01-30T13:00:32Z","Content":"\n\u003Cp\u003EK^2, that formula can be simplified as 370 - 50x, it\u0027s an linear function, not a sigmoid.\u003C/p\u003E\u003Cp\u003EIt also means that for high enough pressures, the ISP could become negative (meaning negative fuel consumption?). I\u0027m surprised KSP uses such a simple function.\u003C/p\u003E\u003Cp\u003EDo you have any idea what it looks like for real engines?\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-01-30T17:08:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Idobox\u0022 data-cite=\u0022Idobox\u0022\u003E\u003Cdiv\u003EK^2, that formula can be simplified as 370 - 50x, it\u0027s an linear function, not a sigmoid.\u003Cp\u003EIt also means that for high enough pressures, the ISP could become negative (meaning negative fuel consumption?). I\u0027m surprised KSP uses such a simple function.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve said that it was \u003Cem\u003Epiecewise\u003C/em\u003E-linear. It only follows the above formula between 0 and 1. Even that might not be exactly right. See bellow. Outside of that range, however, behavior is very simple. It\u0027s a constant at whatever value the end point had. So for any pressure above 1 bar, it\u0027s going to be 320s.\u003C/p\u003E\u003Cp\u003EThe actual behavior of the AnimationCurve is more complicated. It seems to be piecewise-cubic, with the 4 fitting parameters being the 2 values and 2 tangents at either end. The problem is that you can define the curve without specifying the tangents. And I have not yet figured out what Unity substitutes for the tangent values in that case.\u003C/p\u003E\u003Cp\u003EThe cool thing is that even though none of the modules make use of it, KSP does allow you to specify a curve with custom tangents! So instead of using \u0022key pressure value\u0022, you can use \u0022key pressure value tangent_in tangent_out\u0022. This allows you to define almost any smooth curve you like for atmosphereCurve and the velocityCurve.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Idobox\u0022 data-cite=\u0022Idobox\u0022\u003E\u003Cdiv\u003EDo you have any idea what it looks like for real engines?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t, but I might know where to look this up, if you are interested. The thing, though, is that it very much depends on the bell. The actual bell shape depends on a few parameters, and is basically just designed to match the engine. But the point at which the curve of the bell is truncated depends on design operating pressure. The ideal nozzle for a rocket engine narrows at first to make the exhaust speed up. However, once the flow reaches speed of sound, the nozzle needs to start expanding. Hence the bell. The bell then keeps on expanding until either the pressure in the exhaust flow matches external pressure, or it no longer becomes worth it to increase the mass of the engine for the extra impulse you are going to get.\u003C/p\u003E\u003Cp\u003EConsequently, an engine designed for operating in atmosphere is going to have a short bell. It will perform a little better in atmosphere than an engine designed for vacuum, but the main benefit is a much lighter engine due to much shorter bell. The drawback is that it will gain almost nothing when operating at lower pressures than the pressure that it\u0027s designed for.\u003C/p\u003E\u003Cp\u003EEngine designed for vacuum is going to have a very long bell, since there is no external pressure that dictates a cutoff point. It\u0027s just as long as they can make it without making an engine too heavy. This engine will have its peak I\u003Csub\u003ESP\u003C/sub\u003E in vacuum, and will suffer significant penalties when operating in atmosphere.\u003C/p\u003E\u003Cp\u003EEdit: I think I worked out what the algorithm for AnimationCurve actually is. I\u0027ve used the key-value pairs for the jet engine posted earlier in the thread.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EatmosphereCurve\u003Cbr\u003E{\u003Cbr\u003E\tkey = 0 1200\u003Cbr\u003E\tkey = 0.3 2500\u003Cbr\u003E\tkey = 1 800\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd I replaced these with key-value-slope triplets.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E{{0, 1200, 4333.33}, {0.3, 2500, 952.381}, {1, 800, -2428.57}}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe way I got these is by taking slopes of lines connecting a key to its neighbors and averaging these. For end points, I\u0027ve averaged them with themselves. Once I had these, I used 3rd order polynomial to connect the keys, matching slopes at both end points. And this is the curve that I got.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://imagizer.imageshack.us/v2/360x238q90/833/8g4l.png\u0022 alt=\u00228g4l.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EWhy do I think this might be right? Because it peaks at 0.35 bar with a value of 2,524s. Which is very close to what tavert indicated, and I\u0027m strongly inclined to believe him.\u003C/p\u003E\u003Cp\u003ETrying to \u0022average\u0022 the end-points as well, assuming slope of 0 beyond end-points, results in a slightly different keys with a lower maximum. So it looks like end-points aren\u0027t averaged. That means that if the function is defined by just two keys, it will, indeed, be linear between the keys.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-30T23:36:05Z\u0022 title=\u002201/30/2014 11:36  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 30, 2014\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2014-01-30T22:10:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe cool thing is that even though none of the modules make use of it, KSP does allow you to specify a curve with custom tangents! So instead of using \u0022key pressure value\u0022, you can use \u0022key pressure value tangent_in tangent_out\u0022. This allows you to define almost any smooth curve you like for atmosphereCurve and the velocityCurve.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe velocityCurve\u0027s actually do specify tangents. Ferram also puts some nonzero tangents in some of his engine curves in FAR.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEdit: I think I worked out what the algorithm for AnimationCurve actually is.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood catch! That looks like the most accurate explanation I\u0027ve seen yet. I\u0027ll run this against numerobis\u0027 data here \u003Ca href=\u0022https://github.com/numerobis/KSP-scripts/commit/0b3fb888bb5ec7b10eaadccc6216aa30ad2c604e\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/numerobis/KSP-scripts/commit/0b3fb888bb5ec7b10eaadccc6216aa30ad2c604e\u003C/a\u003E and see how close it all lines up. He\u0027s been wanting to figure this out for a while, if he has already found the solution then his code doesn\u0027t reflect it yet.\u003C/p\u003E\u003Cp\u003EI was playing around yesterday with Catmull-Rom splines, but that\u0027s not quite what this is.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-30T22:14:36Z\u0022 title=\u002201/30/2014 10:14  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 30, 2014\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-01-30T23:32:19Z","Content":"\n\u003Cp\u003EPerfect fit. Magenta points are from the page you linked to, one with numerobis\u0027 data. Blue lines are my piecewise-cubic fits.\u003C/p\u003E\u003Cp\u003EJet Engine:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://imagizer.imageshack.us/v2/360x238q90/19/elmd.png\u0022 alt=\u0022elmd.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ETurbojet:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://imagizer.imageshack.us/v2/360x238q90/703/cx91.png\u0022 alt=\u0022cx91.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2014-01-30T23:43:28Z","Content":"\n\u003Cp\u003EYou beat me to it, I did the thrust curves first since they have tangents defined. Perfect fits there too:\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/hyuPE\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003EMathematica code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EAnimationCurve[Keys_, Values_, TangentsIn_, TangentsOut_] :=\u003Cbr\u003E Function[x, Piecewise[Join[\u003Cbr\u003E    {{Values[[Ordering[Keys][[1]]]], x \u0026lt;= Min[Keys]},\u003Cbr\u003E     {Values[[Ordering[Keys][[-1]]]], x \u0026gt;= Max[Keys]}},\u003Cbr\u003E    Table[{InterpolatingPolynomial[\u003Cbr\u003E       {{Keys[[i]], Values[[i]], TangentsOut[[i]]},\u003Cbr\u003E        {Keys[[i \u002B 1]], Values[[i \u002B 1]], TangentsIn[[i \u002B 1]]}}, x],\u003Cbr\u003E      Min[Keys[[i ;; i \u002B 1]]] \u0026lt;= x \u0026lt;= Max[Keys[[i ;; i \u002B 1]]]},\u003Cbr\u003E     {i, 1, Length[Keys] - 1}]]]]\u003Cbr\u003E\u003Cbr\u003EDefaultCurve[Keys_, Values_] :=\u003Cbr\u003E With[{TangentFirst = (Values[[2]] - Values[[1]])/\u003Cbr\u003E     (Keys[[2]] - Keys[[1]]),\u003Cbr\u003E   TangentLast = (Values[[-1]] - Values[[-2]])/\u003Cbr\u003E     (Keys[[-1]] - Keys[[-2]]),\u003Cbr\u003E   TangentMiddle = (Values[[2 ;; -1]] - Values[[1 ;; -2]])/\u003Cbr\u003E     (Keys[[2 ;; -1]] - Keys[[1 ;; -2]])},\u003Cbr\u003E  AnimationCurve[Keys, Values,\u003Cbr\u003E   Join[{TangentFirst}, (TangentMiddle[[1 ;; -2]] \u002B\u003Cbr\u003E       TangentMiddle[[2 ;; -1]])/2, {TangentLast}],\u003Cbr\u003E   Join[{TangentFirst}, (TangentMiddle[[1 ;; -2]] \u002B\u003Cbr\u003E       TangentMiddle[[2 ;; -1]])/2, {TangentLast}]]]\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-31T00:24:12Z\u0022 title=\u002201/31/2014 12:24  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 31, 2014\u003C/time\u003E by tavert\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-01-31T00:32:35Z","Content":"\n\u003Cp\u003EThere is one less mystery in the world. I almost feel sad.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2014-01-31T09:19:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EThere is one less mystery in the world. I almost feel sad.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould you feel any differently if a little dialog popped up saying \u0022You have earned 5 science points\u0022? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Idobox","CreatedById":80299,"CreatedDateTime":"2014-01-31T16:44:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI\u0027ve said that it was piecewise-linear\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESorry, I misunderstood your post.\u003C/p\u003E\u003Cp\u003EThanks for the amazing info\u003C/p\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2014-01-31T21:54:31Z","Content":"\n\u003Cp\u003EAh, great. I\u0027ll have to code this up now...\u003C/p\u003E\n"},{"CreatedByName":"antbin","CreatedById":22389,"CreatedDateTime":"2014-01-31T22:50:49Z","Content":"\n\u003Cp\u003EGreat work Talvert. Perfectly shows how the RAPIER is dominated by the turbojet under all conditions.\u003C/p\u003E\u003Cp\u003ECharts like these should give some insight into game design - what performance maps for different components would make for fun gameplay?\u003C/p\u003E\u003Cp\u003EIMHO a final basic jet / turbojet / ramjet (?) / RAPIER game balance design would be most fun if each engine had a different peak thrust speed. That would encourage building craft that had a mix of engines, and switching from one to the other on the way to orbit.\u003C/p\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2014-02-02T19:46:15Z","Content":"\n\u003Cp\u003EK2: How do you compute the tangent in and tangent out exactly? You\u0027re getting one number per point, whereas I would expect two -- the in tangent and the out tangent.\u003C/p\u003E\u003Cp\u003EI updated my scripts to get the thrust curves exactly right.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-02-02T20:47:29Z","Content":"\n\u003Cp\u003EIf the in/out tangents for key are specified, you just use the values that are there. If tangents are not specified, you compute what the in and out tangents would be in pieceweise-linear case. But then you set both of them to average, id est, t_in = t_out = (t_in \u002B t_out)/2. That gives you a smooth curve instead of a piecewise-linear one. Of course, for end points, you only have t_in or t_out, so you just use that value, rather than averaging it with zero or anything else.\u003C/p\u003E\u003Cp\u003EI\u0027ve written a C\u002B\u002B class that handles animation curves. So if you find it easier to reference code, feel free to take a look at it. I wasn\u0027t trying to code for clarity, though.\u003C/p\u003E\u003Cp\u003EOh, and if anyone wants to use the whole thing or any parts in their work, consider this an unconditional permission to do so.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://pastebin.com/PycHEXhB\u0022 rel=\u0022external nofollow\u0022\u003Ecurve.h\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://pastebin.com/5kh7A2tU\u0022 rel=\u0022external nofollow\u0022\u003Ecurve.cpp\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EBe warned that I have not tested DropKey methods, and there is no clean destructor. (Keys will be lost in memory if you delete parent curve.)\u003C/p\u003E\n"},{"CreatedByName":"numerobis","CreatedById":62016,"CreatedDateTime":"2014-02-04T01:27:22Z","Content":"\n\u003Cp\u003Et_in = t_out is the part I was derping on. Thanks!\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2014-02-04T02:03:08Z","Content":"\n\u003Cp\u003EOne thing I\u0027m not certain on since none of our tests had nonzero tangents provided in the curves, was whether column 3 is the in tangent and column 4 is the out tangent, or the other way around. Until someone points to where the part.cfg data gets turned into an AnimationCurve in the code, or collects some conclusive test data for an engine with some nonzero tangents, I think we\u0027re all still guessing on this detail. Doesn\u0027t yet matter for any of the stock engines, but worth noting.\u003C/p\u003E\u003Cp\u003EAlso K^2, where/how did you get that ModuleEngines code snippet from?\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-02-04T02:34:46Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid FloatCurve::Add(float time, float value, float inTangent, float outTangent)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ethis.Add(float.Parse(strArrays[0]), float.Parse(strArrays[1]), float.Parse(strArrays[2]), float.Parse(strArrays[3]));\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo the order in the config file is key, value, inTangent, outTangent. The in tangent is on the left, while the out tangent is on the right of the key.\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2014-03-06T05:27:38Z","Content":"\n\u003Cp\u003EThis was a very informative thread as I\u0027m doing some curve work but I\u0027m still not clear on the tangents.\u003C/p\u003E\u003Cp\u003EI thought I had a method worked out for calculating them but when I tried them out using the Mathematica code provided in this thread I got a nasty collection of spikes.\u003C/p\u003E\u003Cp\u003EWhat I did was this basically...\u003C/p\u003E\u003Cp\u003EdeltaY = P2_y - P1_y\u003C/p\u003E\u003Cp\u003EdeltaX = P2_x - P1_x\u003C/p\u003E\u003Cp\u003Eatan2(deltaY, deltaX) \u003C/p\u003E\u003Cp\u003EWhat I\u0027ve learned from this experience is that apparently I don\u0027t know a tangent from a poptart. \u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#D3D3D3;\u0022\u003E(actually that\u0027s not true... poptarts are frosted)\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-03-06T14:07:02Z","Content":"\n\u003Cp\u003Eatan2 will give you the angle of the tangent. You don\u0027t need that. You just need the actual slope at each point. Then you construct a 3rd degree polynomial that matches the two end points and the two slopes at either end of the interval between the two keys.\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2014-03-06T18:48:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003Eatan2 will give you the angle of the tangent. You don\u0027t need that. You just need the actual slope at each point. Then you construct a 3rd degree polynomial that matches the two end points and the two slopes at either end of the interval between the two keys.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, I\u0027ll try that. Big question though, will that leave the defined values intact when the curve is evaluated? For instance, if I\u0027m defining a pressureCurve to match Earth and it says that at 5.5 km (key) the pressure will be 0.48 (value) will I still get that value when it\u0027s evaluated for 5.5 km? Or will there be unwanted smoothing?\u003C/p\u003E\n"}]}