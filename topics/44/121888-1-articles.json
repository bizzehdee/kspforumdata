{"TopicId":121888,"ForumId":44,"TopicTitle":"C, C\u002B\u002B, C# Programming - what is the sense in this","CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2015-09-28T14:21:11Z","PageNum":1,"Articles":[{"CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2015-09-28T14:21:11Z","Content":"\n\u003Cp\u003EI am really making a push now to learn C and all its variants. I have may Linux system finally stable and a dual boot system and I am managing (arduously) to learn the language.\u003C/p\u003E\u003Cp\u003ELearning basic was easy, visual basic without a course was arduous, but I eventually became proficient at it in both Prof and VBA (which I mostly use). I came at MS-basic from basically programming an Apple IIe in machine language, I used an assembly language editor for a time but eventually found I could code directly in hexadecimal. \u003C/p\u003E\u003Cp\u003ESo this is a computer science question. With C what is the sense? if it is supposed to be faster or more powerful, I find many of the functions you have to sort through types, or convert types. And I have been reading online that some of the System.Math functions are really not that efficient, that you could write more efficient classes in your own program. So why doesn\u0027t the standard just give the algorhythm and let folks create their own functional classes. Suppose I don\u0027t need an answer that is accurate to 20 decimal places, suppose 4 is good enough, why do I want to waste the clock cycles trying to achieve 20 places. \u003C/p\u003E\u003Cp\u003EOne of the functions is you have to take a float, convert it to double, run the math function, when done convert it back to float again. That\u0027s very efficient. \u003C/p\u003E\u003Cp\u003EThe other thing, from a Visual basic point of view, the language itself is sort of archane in its structure. For example loops closures go unidentified, I find my self counting closed brackets and things like this.\u003C/p\u003E\u003Cp\u003EWhat really is the basis of C\u0027s popularity, couldn\u0027t we just have a basic portable across many platforms.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-09-28T14:58:17Z","Content":"\n\u003Cp\u003EFirst of all, C, C\u002B\u002B, and C# are three completely different languages with similarity in syntax and some historical parallels. They serve completely different purposes and should not be lumped together. Modern C and C\u002B\u002B compile directly to machine code, for example, while C# compiles to byte code that runs on CLR. Which means that even with JIT, C# should not be used for performance-critical tasks.\u003C/p\u003E\u003Cp\u003EBASIC, in contrast, takes its roots as an interpreted language. While VB also compiles to CLR, it still has a lot of the problems common to interpreted languages. Abysmal performance is just tip of the iceberg. It has poor type-safety, bad garbage collection, and object-oriented features that are bolted onto an outdated language.\u003C/p\u003E\u003Cp\u003EThe most important thing to understand about a real programming language is that it\u0027s not about built-in functions. C has almost none. It comes with a pretty broad spectrum of standard libraries, for sure, but they are not really part of the language. More importantly, every single one of them can be replaced to fit a specific need. A good language is not a set of functions. It\u0027s a tool kit. Why is C a particularly good language? Because it translates almost directly to machine code. Which means you always have an idea how well your code is actually going to perform. If you cannot look at your code and tell what instructions it\u0027s going to turn into, you cannot write efficient code. And this is absolutely impossible to do with the languages like VB.\u003C/p\u003E\u003Cp\u003EBut yes, C is archaic, which makes it unsuitable for a lot of modern tasks. That\u0027s why C\u002B\u002B exists. C\u002B\u002B has all of the features expected of a modern language, starting with objects and ending with meta-programming. That does, however, come at a cost of performance. Optimization of C\u002B\u002B code is nowhere near as straight forward, and takes much longer for compiler to perform. Which is why C has not been phased out. A high performance high complexity application will be written in a mix of C and C\u002B\u002B. Fortunately, C-style linking is part of the C\u002B\u002B standard.\u003C/p\u003E\u003Cp\u003EFinally, C# is a completely different breed of languages. It is much closer to Java than C in almost every way. From code organization, to execution, to memory management. However, it also comes with a compatibility feature allowing it to call native code with C-style syntax. In that case, C/C\u002B\u002B code can effectively become a library for C# code to tap into for performance-intensive operations, while maintaining organization and safety of a higher level language.\u003C/p\u003E\u003Cp\u003ESo even if we look at C#, which is a .NET language, just like VB, VB has not a fraction of the features, while performing far, far worse than C#. The only redeeming feature of VB is that you don\u0027t need to know anything about programming to write some simple code in it. But it is absolutely unsuitable for anything serious.\u003C/p\u003E\n"},{"CreatedByName":"cicatrix","CreatedById":120831,"CreatedDateTime":"2015-09-28T14:58:46Z","Content":"\n\u003Cp\u003EIt\u0027s history. There were Bell Labs, there was Unix and there was C (early 70s). Mainly, C became popular since Unix itself was re-written from the assembly language into C and Unix was pretty common these days.\u003C/p\u003E\u003Cp\u003EGenerally, there were also ALGOL, FORTRAN, PASCAL, etc but they were not universal enough and there were many dialects varying from one platform to another, from one compiler to another. So, the fact that there was a commonly accepted language standard added to the popularity of C.\u003C/p\u003E\u003Cp\u003EThen came C\u002B\u002B (mainly \u0027C with classes\u0027 and many new adepts followed the OOP paradigm). The language was adapted for IBM PC platform (now known as x86) and quickly become popular together with the platform itself. Certainly there were other languages but C\u002B\u002B compilers generated native code unlike their many counterparts that required runtime libraries. Thus C/C\u002B\u002B became the main tool for application development for x86.\u003C/p\u003E\u003Cp\u003EIt all runs along the same rails even now. Young people grow up with the knowledge that C\u002B\u002B is a \u0027must have\u0027 language in their portfolio, then they write applications and then there\u0027s another generation of programmers grows up with this knowledge.\u003C/p\u003E\u003Cp\u003ENow fortunately the CPU speeds and memory are huge and there\u0027s no need to count every CPU tick and every memory byte. This situation allowed creating huge frameworks that encapsulated many standard tasks in its classes. Java c C# were born. \u003C/p\u003E\u003Cp\u003EC#/Java allows you to quickly develop some tools you need without thinking of memory management, garbage collection, I/O, etc. They allow you to concentrate on the task you really need to solve. But everything comes at a price - you\u0027ve got .Net Framework or Java VM, you\u0027ve got slower execution performance and larger memory requirements.\u003C/p\u003E\u003Cp\u003EEvery task require an adequate tool, that\u0027s all. If you need performance or low system requirements use assembly / C / C\u002B\u002B. If you need simply to draw a window with a button without any particular requirements - use modern languages because it\u0027s simpler.\u003C/p\u003E\u003Cp\u003EAs for the brace matching - here\u0027s my advice - comment any closing brace:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Enamespace MyNamespace\u003Cbr\u003E{\u003Cbr\u003E    class MyClass\u003Cbr\u003E    {\u003Cbr\u003E\u003Cbr\u003E         while (someCondition)\u003Cbr\u003E         {\u003Cbr\u003E             try\u003Cbr\u003E             {\u003Cbr\u003E             } // try\u003Cbr\u003E             catch\u003Cbr\u003E             {\u003Cbr\u003E             } // catch\u003Cbr\u003E         } // while   \u003Cbr\u003E\u003Cbr\u003E    } // myClass\u003Cbr\u003E} // namespace MyNamespace\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ethis way you won\u0027t lose anything.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-28T15:01:11Z\u0022 title=\u002209/28/2015 03:01  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 28, 2015\u003C/time\u003E by cicatrix\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-09-28T15:06:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022cicatrix\u0022 data-cite=\u0022cicatrix\u0022\u003E\u003Cdiv\u003ENow fortunately the CPU speeds and memory are huge and there\u0027s no need to count every CPU tick and every memory byte.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI can tell you\u0027ve never had to write a game engine for modern consoles.\u003C/p\u003E\n"},{"CreatedByName":"Shpaget","CreatedById":45577,"CreatedDateTime":"2015-09-28T15:14:32Z","Content":"\n\u003Cp\u003EAlso, not all programming is done for modern computers with tens of GBs of RAM.\u003C/p\u003E\u003Cp\u003EPick up an Arduino or a PIC and you\u0027ll be counting those bytes soon enough.\u003C/p\u003E\n"},{"CreatedByName":"lukethecoder64","CreatedById":148786,"CreatedDateTime":"2015-09-28T15:18:56Z","Content":"\n\u003Cp\u003EC originated at bell labs. It was called C because it was based off the language \u0022B\u0022. C\u002B\u002B is based off of C. It was originally was going to be called \u0022C with classes\u0022 (so you can do stuff like potato.explode()\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E but they went with C\u002B\u002B as a reference to the new function [vaiable]\u002B\u002B; (e.g. n\u002B\u002B\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E. I don\u0027t know how C# came into existence. I think Microsoft was involved.\u003C/p\u003E\u003Cp\u003ESouce: Several code books I have read.\u003C/p\u003E\u003Cp\u003EHope this helps.\u003C/p\u003E\u003Cp\u003ELuke\u003C/p\u003E\u003Cp\u003E--updated--\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Shpaget\u0022 data-cite=\u0022Shpaget\u0022\u003E\u003Cdiv\u003EAlso, not all programming is done for modern computers with tens of GBs of RAM.\u003Cp\u003EPick up an Arduino or a PIC and you\u0027ll be counting those bytes soon enough.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh god. I still have nightmares about my arduino. (the old ones, with only 16kb of code space)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-28T15:22:57Z\u0022 title=\u002209/28/2015 03:22  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 28, 2015\u003C/time\u003E by lukethecoder64\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Darnok","CreatedById":85708,"CreatedDateTime":"2015-09-28T15:57:32Z","Content":"\n\u003Cp\u003EI can\u0027t see sense in learning C, C\u002B\u002B and C#.\u003C/p\u003E\u003Cp\u003EC and C\u002B\u002B is used for example to code linux kernel, while C# is Microsoft invention and it has nothing to do with those two. C# is more like Java and most of its features was invented to take market share of Java, so learning C# at same time as C and C\u002B\u002B is mistake IMO.\u003C/p\u003E\u003Cp\u003EIf you are looking for language for your self it would be reasonable to pick most popular first \u003Ca href=\u0022http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.tiobe.com/index.php/content/paperinfo/tpci/index.html\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-09-28T16:32:24Z","Content":"\n\u003Cp\u003EAny serious C# project will feature C/C\u002B\u002B integration. So yes, learning all three is valuable. And yes, if you want to have a boring job with a five figure salary, go ahead and learn just Java. Unless you know how to write C plugins for it, you won\u0027t be working on anything more exciting than app UI.\u003C/p\u003E\n"},{"CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2015-09-28T16:43:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003ESo even if we look at C#, which is a .NET language, just like VB, VB has not a fraction of the features, while performing far, far worse than C#. The only redeeming feature of VB is that you don\u0027t need to know anything about programming to write some simple code in it. But it is absolutely unsuitable for anything serious.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually the creators of C# claim that this \u003Cem\u003Eopinion that C# is just an iteration of Java\u003C/em\u003E, they claim that it was patterned off of C\u002B\u002B. \u003C/p\u003E\u003Cp\u003EThe reason why I selected C hash was that I want to create high efficiency routines that I can run from VB or VBA, basically, so the efficiency issue is the issue. But exactly to the point, I wanted to tailor structures and classes to the efficiency and accuracy that I needed. The problem is that this has proven to be rather archaic process in either C\u002B\u002B or C#. Microsoft claims that both VB and C# are converted to essentially the same product before finally being converted to assembly language at runtime (Runtime implimentation). Also C hash runs in linux, which means If I have to I can run any vb app in linux as long as I can convert it to C#. Since these are the most similar it seems logical. \u003C/p\u003E\u003Cp\u003ESo let me opinion about the problems of VB in principle and compare with C.\u003C/p\u003E\u003Cp\u003E1VB. The If ...... End If structures, unlike For and Next do not have identifiers. For example hypothetically If-1 End If-1. When you have left out a next or end statement, the computer does not recognize that it was missing for an end or next statement, and proclaims that an End if is missing even though it might be a Next.\u003C/p\u003E\u003Cp\u003E 1C The { ....... } covers not only If and For and while and For each and . . . . . but also covers subroutines, class definitions. so a problem that is bad in VB is a magnitude worse in C. Seriously code segment identifiers are not compiled, they are freebees. 1{ }1 2{ }2 3{ }3 4{ }4 So that if you messed up one of your brackets the programs can tell you \u0027hey bracket 1 is missing it closing bracket\u0027 \u003C/p\u003E\u003Cp\u003E2VB. \u003Cstrong\u003EFunction\u003C/strong\u003E definitions. If you are running a function within a module of basic, you simply need to declare the function and variable and a few lines of code. Its relatively simple. For the most part you don\u0027t want to run a function except if it will clear several lines of code up. So for example I want to evaluate non-normality, I can create a Skewing function and a Kurtosis function, or combine both into a single function (the output would have to be a string in that case)\u003C/p\u003E\u003Cp\u003E2C. Jeeze Louise, lol. Static, Public, Private, implementation requires a new statement for multiple iterations. Why do I need to create a new class exactly to have multiple iterations. The simplest functional math statement and I have run into errors with just about every character of code. Is this really saving clock cycles, calling subroutines as separate classes? In C a function definition is not just a function, it is literally everything, whereas in VB functions are Functions (return calls) and everything else is subroutine, or even a defined type in VB6 (the equivilant of a struct in C). Because the functions are not set apart what has happened (as I see it) every single identifier in a class becomes very context sensitive, so any minor deviation from what the computer expects will generate an error. The problem in C is that class and function are muddled, a function should be something with a return value, it is not it can be any routine called in a class, if a static is not given it runs pretty much like the pi() function, if the \u003Cem\u003Estatic\u003C/em\u003E is not given you have to call a new instance of the function (an pray that its going to work). \u003C/p\u003E\u003Cp\u003ESo it seems to me, that say if I am going to need several routines running simultaneously in C, I am going to have to create a whole new class for each, to make sure that the other might-be functions in that class are not going to be carried on for the ride. This makes sense if you need to build really big classes, such as an employee class or product class, but if the function of the iteration is to process some basic parameters. \u003C/p\u003E\u003Cp\u003EHere\u0027s an example:\u003C/p\u003E\u003Cp\u003ESuppose I need 30 classes (types of objects in a solar system, types of diseases, whatever)\u003C/p\u003E\u003Cp\u003ESome of these are so simple that I can create structures (which apparently are not used anymore in C) but most will be defined as a class, so, unless I combine them into a dynamic linked library, I\u0027m going to have 30 class files for the program. Not only this I am going to have to be tracking all of these things in memory. \u003C/p\u003E\u003Cp\u003ESo for example suppose I have finished a sector. Even if I create a model without a given class (less say a lessor companion in a binary star system), I am still loading the class. IF I combine functions into classes, then every time I call the celestial routine, I am also pulling a routine for a fluffball which I would not use since a celestial is gravitationally flattened. So in this case fluffball I could run as a structure (struct) and it would not need to process the effects of its own gravity (since this could be handled collectively) on all surrounding gravities, but a celestials gravity would need to be assessed (for example it can toss a fluffball out of the system or tear it apart and eat the fragments), so I would be pulling class routines for doing assessment of gravity effects. In VB6 I would simply define at type fluffer and set variables in a type, then dimension fluffballs\u003C/p\u003E\u003Cp\u003EDim fluffball() as fluffer. And in the programm\u003C/p\u003E\u003Cp\u003Efluffballcount \u002B= 1\u003C/p\u003E\u003Cp\u003ERedim Preserve fluffball(fluffballcount)\u003C/p\u003E\u003Cp\u003EWith fluffball(fluffballCount) \u003C/p\u003E\u003Cp\u003E .mass = RND(K): .X = xPos: .Y = yPos: .Z = xPos: .density = 0.01: .velX = 1000: .velY = 2000: .velZ = 10000: .sector = sectorNumber\u003C/p\u003E\u003Cp\u003EEnd With\u003C/p\u003E\u003Cp\u003ESector fluffball(fluffballcount).sector (parameter list) \u0027 An object its going to examine to see if fluffball interacted with anything, or how is shifted mass or gravity in its space. \u003C/p\u003E\u003Cp\u003E . . . . . . \u003C/p\u003E\u003Cp\u003ESo now in C, fluffball is now an instance of a class and all its parameters will have to be shipped to the object to be updated, this essentially means making an expensive call for essentially routine equivalencies.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022cicatrix\u0022 data-cite=\u0022cicatrix\u0022\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Enamespace MyNamespace\u003Cbr\u003E{\u003Cbr\u003E    class MyClass\u003Cbr\u003E    {\u003Cbr\u003E\u003Cbr\u003E         while (someCondition)\u003Cbr\u003E         {\u003Cbr\u003E             try\u003Cbr\u003E             {\u003Cbr\u003E             } // try\u003Cbr\u003E             catch\u003Cbr\u003E             {\u003Cbr\u003E             } // catch\u003Cbr\u003E         } // while   \u003Cbr\u003E\u003Cbr\u003E    } // myClass\u003Cbr\u003E} // namespace MyNamespace\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ethis way you won\u0027t lose anything.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood idea, didn\u0027t think of that but I should have.\u003C/p\u003E\u003Cp\u003EThe /// section of definitions I have tried to use this but it doesn\u0027t seem to work, it works in the You Tube but not on my computer.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-28T16:40:14Z\u0022 title=\u002209/28/2015 04:40  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 28, 2015\u003C/time\u003E by PB666\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Darnok","CreatedById":85708,"CreatedDateTime":"2015-09-28T16:57:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EAny serious C# project will feature C/C\u002B\u002B integration. So yes, learning all three is valuable. And yes, if you want to have a boring job with a five figure salary, go ahead and learn just Java. Unless you know how to write C plugins for it, you won\u0027t be working on anything more exciting than app UI.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EC# integration with C/C\u002B\u002B in what project? \u003C/p\u003E\u003Cp\u003EYou have very narrow experience in Java then... Java is multiplatform, so you can use it under windows, linux or mac, while adding your C plugin would mean you have to write and maintain 3 different versions of this plugin. Of course not every software needs to be multiplatform software, but it is one of main Java features.\u003C/p\u003E\n"},{"CreatedByName":"wumpus","CreatedById":133850,"CreatedDateTime":"2015-09-28T17:12:34Z","Content":"\n\u003Cp\u003EI\u0027ll bite the trollbait:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u0022\u003C/strong\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E C and all its variants\u0022\u003C/span\u003E\u003C/strong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E. As stated above, C# is not a variant of C at all, but merely Java once it has been \u0022embraced and extended\u0022 (Sun/Oracle is doing its part on the \u0022extinguish\u0022 part).\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E\u0022So this is a computer science question. With C what is the sense?\u0022\u003C/span\u003E\u003C/strong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E C is handy way of writing/reading (the reading turns out to be much more important) assembler code written for PDP-7 and PDP-11 microcomputers. It also had great documentation: \u0022The C programming language by Kernigham and Ritchie\u0022, this book was short and complete, and allowed new hackers to learn the language. Once established, most compiler effort went into C, most required programs were written in C (or FORTRAN) so that the speed of a computer was effectively \u0022how fast can it run C programs\u0022. C\u002B\u002B extends this lead. Note that C\u002B\u002B isn\u0027t just \u0022C with classes\u0022. It is \u0022C with the kitchen sink, but allows pure C to compile on C\u002B\u002B compilers\u0022. I\u0027d avoid C\u002B\u002B unless you really want to learn a ton of arcane details on exactly what each command does. Hint: the way classes are defined in all the \u0022learn C\u002B\u002B in fixnum days\u0022 at my local library never bothered to mention that it couldn\u0027t be used in non-trivial cases. You either have to use the \u0022new\u0022 keyword or have some other means of keeping the object off the stack or it dies with the subroutine (the \u0022object\u0022 remains as a pointer, just all the data gets swept up in the stack). Note there isn\u0027t any C\u002B\u002B in the Linux kernal. Officially this is because of the difficulty of tracking down C\u002B\u002B memory use, but likely has to do with Linus\u0027s views of C\u002B\u002B and C\u002B\u002B programmers.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E\u0022\u003C/span\u003E\u003C/strong\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EOne of the functions is you have to take a float, convert it to double, run the math function, when done convert it back to float again. That\u0027s very efficient. \u0022\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EI\u0027m willing to bet that isn\u0027t \u0022because C\u0022, that is \u0022the way that function is defined by ieee-754\u0022 (the official standard of floating point). You could write your own, but it wouldn\u0027t be standard and would be considered buggy. It also wouldn\u0027t be any faster on anything made since the 486, any modern CPU (but not GPU) will multiply and add doubles just as fast as floats (although you can obviously maker arrays of more floats in things like SSEn). To really rub salt in your wounds, per ieee-754 when the computer multiplies two doubles together it needs the full 98 bit mantissa and then rounds it to 53 bits for the final answer (3/4 of the work is then thrown away). Look up rounding errors to find out why (or just listen to a sound sample that has a 64k point IFFT(FFT(x)) done on it).\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E\u0022\u003C/span\u003E\u003C/strong\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EWhat really is the basis of C\u0027s popularity, couldn\u0027t we just have a basic portable across many platforms.\u0022\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://xkcd.com/927/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://xkcd.com/927/\u003C/a\u003E [standards]\u003C/p\u003E\u003Cp\u003EThen you don\u0027t want C. You want Java: write once debug everywhere. As mentioned above, the amount of C that is standard is vanishingly small. Some of that (the string library) is insecure and deprecated (without an official replacement). You should be able to make a portable backend in C (assuming that you aren\u0027t dependent on *any* libraries), but C has zero user interface functions beyond the mentioned (and broken) string [printing] functions.\u003C/p\u003E\n"},{"CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2015-09-28T17:34:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Darnok\u0022 data-cite=\u0022Darnok\u0022\u003E\u003Cdiv\u003EC# integration with C/C\u002B\u002B in what project? \u003Cp\u003EYou have very narrow experience in Java then... Java is multiplatform, so you can use it under windows, linux or mac, while adding your C plugin would mean you have to write and maintain 3 different versions of this plugin. Of course not every software needs to be multiplatform software, but it is one of main Java features.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESometimes you want a barebones stripped application of all its bells and whistles that just crunches massive amount of data. I have 200Gbyte of Desinovan genome that I want to process. I know how to do in in VBasic relatively logically an easily, now I need to get into a version of C that can make it go fast, barring that I will probably never be able to hex code on an i586 processor, i need the next best thing, ergo on linux and learning C. The logic is, if I can port it to C# and work out all the bugs there I can create a C\u002B\u002B application and run it on the console. In response to what one of the other posters says, efficiency is very important, still. \u003C/p\u003E\u003Cp\u003ETried running barebones sequence alignment on mtDNA sequences from all Eutherians, and will need to repeat soon, the last time I ran the alignment it took just over 3 days.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022wumpus\u0022 data-cite=\u0022wumpus\u0022\u003E\u003Cdiv\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003ETo really rub salt in your wounds, per ieee-754 when the computer multiplies two doubles together it needs the full 98 bit mantissa and then rounds it to 53 bits for the final answer (3/4 of the work is then thrown away). Look up rounding errors to find out why (or just listen to a sound sample that has a 64k point IFFT(FFT(x)) done on it).\u003C/span\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EWhich contradicts your previous point. As per say calculating a log or a square root, all I need for certain comparisons is 3 digits, many of these are statistical so if I am off by 0.001 P at the threshold of 0.05 p it doesn\u0027t really matter since I will have to reprocess all the positives anyway. It could for a SquareRoot take Newton\u0027s shortcut and it would work. \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022wumpus\u0022 data-cite=\u0022wumpus\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EWhat really is the basis of C\u0027s popularity, couldn\u0027t we just have a basic portable across many platforms.\u0022\u003C/span\u003E\u003C/strong\u003E\u003Cp\u003E\u003Ca href=\u0022https://xkcd.com/927/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://xkcd.com/927/\u003C/a\u003E \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI moved to Linux simply to get away from the OS overhead with windows 10.\u003C/p\u003E\n"},{"CreatedByName":"InterCity","CreatedById":98462,"CreatedDateTime":"2015-09-28T17:43:15Z","Content":"\n\u003Cp\u003EC is popular because history and usability. Even with all its flaws and cumbersome features (Memory leaks on a regular basis even in simple code), it\u0027s still a robust and well-rounded programming language for all your lower-level programming needs (even though it\u0027s technically a high-level language). C\u002B\u002B/C# are variations of C that make object-oriented programming available (C# is imo just revamped C\u002B\u002B with more emphasis on end-user applications). I\u0027d agree with those telling you that java is better, it\u0027s easier and does all the pesky stuff like garbage collection for you, but if you really want to control your code, use C and its variants. \u003C/p\u003E\u003Cp\u003EOh, and Bruce Eckel has written very good books called Thinking in C\u002B\u002B, available for free \u003Ca href=\u0022http://www.mindview.net/Books/\u0022 rel=\u0022external nofollow\u0022\u003Eat his website.\u003C/a\u003E They\u0027re kinda dated, but you\u0027ll get the point, and you\u0027ll know what to ask on Stack Overflow or Google.\u003C/p\u003E\n"},{"CreatedByName":"cicatrix","CreatedById":120831,"CreatedDateTime":"2015-09-28T17:48:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EI can tell you\u0027ve never had to write a game engine for modern consoles.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENah, I only had this to play with: \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://bigmuseum.ru/img/evm-pk-komplektuyushhie/vneshnij-vid-mikrokalkulyatora-elektronika-mk-61.jpg\u0022 alt=\u0022vneshnij-vid-mikrokalkulyatora-elektronika-mk-61.jpg\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Darnok","CreatedById":85708,"CreatedDateTime":"2015-09-28T17:51:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003ESometimes you want a barebones stripped application of all its bells and whistles that just crunches massive amount of data. I have 200Gbyte of Desinovan genome that I want to process. I know how to do in in VBasic relatively logically an easily, now I need to get into a version of C that can make it go fast, barring that I will probably never be able to hex code on an i586 processor, i need the next best thing, ergo on linux and learning C. The logic is, if I can port it to C# and work out all the bugs there I can create a C\u002B\u002B application and run it on the console. In response to what one of the other posters says, efficiency is very important, still. \u003Cp\u003ETried running barebones sequence alignment on mtDNA sequences from all Eutherians, and will need to repeat soon, the last time I ran the alignment it took just over 3 days.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFew questions:\u003C/p\u003E\u003Cp\u003E1. Does your app have to process data in chain or you can split processing in multiple threads?\u003C/p\u003E\u003Cp\u003E2. Do you have access to many computers?\u003C/p\u003E\u003Cp\u003E3. Do you need multiplatform app? (all you computers are running linux or there are many different systems?)\u003C/p\u003E\u003Cp\u003E4. Problem is CPU power or I/O of your hard drive (you mentioned 200GB of data)?\u003C/p\u003E\u003Cp\u003EIf your app have to process many loops with exact same code you could use Java, I don\u0027t remember now how it is called, since I wasn\u0027t using Java for last few years, but there was some really great feature in that language. It could compile parts of your Java code into native code for your OS, so it was running as fast as C code \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EOhh and if someone is saying to you that you have to know C to write plugins for Java ask him in what language is written Java virtual machine (that is key for multiple platform app)...\u003C/p\u003E\u003Cp\u003ESpoiler alert it is C\u002B\u002B \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"cicatrix","CreatedById":120831,"CreatedDateTime":"2015-09-28T17:59:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JebKerboom\u0022 data-cite=\u0022JebKerboom\u0022\u003E\u003Cdiv\u003EMemory leaks on a regular basis even in simple code)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou may call me crazy, but C/C\u002B\u002B are very great for LEARNING how to program. I started learning with MSX-Basic on Z80 processor and it allowed me so much that wasn\u0027t probably wise. Memory leaks teach you humility and discipline.\u003C/p\u003E\n"},{"CreatedByName":"InterCity","CreatedById":98462,"CreatedDateTime":"2015-09-28T19:44:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022cicatrix\u0022 data-cite=\u0022cicatrix\u0022\u003E\u003Cdiv\u003EYou may call me crazy, but C/C\u002B\u002B are very great for LEARNING how to program. I started learning with MSX-Basic on Z80 processor and it allowed me so much that wasn\u0027t probably wise. Memory leaks teach you humility and discipline.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am not saying the contrary. On the opposite, I think that C/C\u002B\u002B are great languages. I\u0027m just saying that once you go past the learning phase, it\u0027s good to move on to Java and such, the concept is the same but it makes your life simpler. From my own experience, I can tell how annoying is to find the one pesky memory leak in 1000\u002B line code (OpenCV \u002B RaspBerry Pi). \u003C/p\u003E\u003Cp\u003EI still consider memory leaks extremely annoying and useless, but again, that might have something to do with my overachieving nature and inability to handle defeat in general.\u003C/p\u003E\n"},{"CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2015-09-28T20:08:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Darnok\u0022 data-cite=\u0022Darnok\u0022\u003E\u003Cdiv\u003EFew questions:\u003Cp\u003E1. Does your app have to process data in chain or you can split processing in multiple threads?\u003C/p\u003E\u003Cp\u003E2. Do you have access to many computers?\u003C/p\u003E\u003Cp\u003E3. Do you need multiplatform app? (all you computers are running linux or there are many different systems?)\u003C/p\u003E\u003Cp\u003E4. Problem is CPU power or I/O of your hard drive (you mentioned 200GB of data)?\u003C/p\u003E\u003Cp\u003EIf your app have to process many loops with exact same code you could use Java, I don\u0027t remember now how it is called, since I wasn\u0027t using Java for last few years, but there was some really great feature in that language. It could compile parts of your Java code into native code for your OS, so it was running as fast as C code \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EOhh and if someone is saying to you that you have to know C to write plugins for Java ask him in what language is written Java virtual machine (that is key for multiple platform app)...\u003C/p\u003E\u003Cp\u003ESpoiler alert it is C\u002B\u002B \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOK, so in preparation I have two SSD drives, one is 500 GB and the other is 120 GB, some of the sequence files I parsed with VB because they were too large for a single 64 GB memory pen. They will have to be recombined. I need basically i386 compatibility and I already have it with windows/linux C#. But the thing is that I have techniques in VB developed that really I will need to get the logic to work, so that it needs to be portable with VB.net into something else with minimal amount of work. The process is that in Studio.Net I can start shaving portions of the VB code into C#. That\u0027s a big plus but the structure has to be compatible. Parallel processing would be great, sequence is randomly placed in the file, and I have already split the file into binary code for transport. I have access to 2 computers, but only 6 total processors. (Win 7, Win 10, Ubuntu 14.0.4) Technically speaking I could recombined all the sequence into a single file, and then carve it into 8 smaller files that could be processed individually. The end product will be a text files.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EFinally, lol .......\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[FONT=Monospace] [COLOR=#009695]using[/COLOR][COLOR=#333333] System[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E[COLOR=#009695]namespace[/COLOR][COLOR=#333333] Trial[/COLOR]\u003Cbr\u003E  [COLOR=#333333]{[/COLOR]\u003Cbr\u003E  [COLOR=#009695]public [/COLOR][COLOR=#009695]class [/COLOR][COLOR=#3364a4]Class_AddNumbers[/COLOR]\u003Cbr\u003E      [COLOR=#333333]{[/COLOR]\u003Cbr\u003E      [COLOR=#009695]public [/COLOR][COLOR=#009695]int [/COLOR][COLOR=#333333]AddNumbers[/COLOR][COLOR=#333333]([/COLOR][COLOR=#009695]int[/COLOR][COLOR=#333333]number1[/COLOR][COLOR=#333333],[/COLOR][COLOR=#009695]int[/COLOR][COLOR=#333333]number2[/COLOR][COLOR=#333333],[/COLOR][COLOR=#009695]int[/COLOR][COLOR=#333333]number3[/COLOR][COLOR=#333333])[/COLOR]\u003Cbr\u003E          [COLOR=#333333]{[/COLOR]\u003Cbr\u003E              [COLOR=#009695]return[/COLOR][COLOR=#333333] number1[/COLOR][COLOR=#333333] \u002B [/COLOR][COLOR=#333333]number2 [/COLOR][COLOR=#333333]\u002B [/COLOR][COLOR=#333333]number3[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E          [COLOR=#333333]}[/COLOR][COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I]function[/I][/COLOR][COLOR=#888888][I] AddNumbers[/I][/COLOR]\u003Cbr\u003E    [COLOR=#333333]}[/COLOR][COLOR=#888888][I]//Class_AddNumbers[/I][/COLOR]\u003Cbr\u003E[COLOR=#333333]}[/COLOR][COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I]namespace[/I][/COLOR][COLOR=#888888][I] Trial[/I][/COLOR][/FONT]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[FONT=Monospace] [COLOR=#009695]\u003Cbr\u003Eusing[/COLOR][COLOR=#333333] System[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E\u003Cbr\u003E[COLOR=#009695]namespace[/COLOR][COLOR=#333333] Trial[/COLOR]\u003Cbr\u003E  [COLOR=#333333]{[/COLOR]\u003Cbr\u003E  [COLOR=#009695]class[/COLOR][COLOR=#3364a4] MainClass[/COLOR]\u003Cbr\u003E     [COLOR=#333333]{[/COLOR]\u003Cbr\u003E     [COLOR=#009695]public [/COLOR][COLOR=#009695]static[/COLOR][COLOR=#009695] void[/COLOR][COLOR=#333333]Main[/COLOR][COLOR=#333333]([/COLOR][COLOR=#009695]string[/COLOR][COLOR=#333333][][/COLOR][COLOR=#333333] args[/COLOR][COLOR=#333333])[/COLOR]\u003Cbr\u003E         [COLOR=#333333]{[/COLOR]\u003Cbr\u003E         [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I]string[/I][/COLOR][COLOR=#888888][I]EndKey[/I][/COLOR][COLOR=#888888][I];[/I][/COLOR]\u003Cbr\u003E         [COLOR=#009695]int [/COLOR][COLOR=#333333]Looper1[/COLOR][COLOR=#333333]=[/COLOR][COLOR=#f57d00]0[/COLOR][COLOR=#333333], [/COLOR][COLOR=#333333]Looper2[/COLOR][COLOR=#333333]=[/COLOR][COLOR=#f57d00]0[/COLOR][COLOR=#333333], [/COLOR][COLOR=#333333]Looper3[/COLOR][COLOR=#333333]=[/COLOR][COLOR=#f57d00]0[/COLOR][COLOR=#333333], [/COLOR][COLOR=#333333]Maxloops[/COLOR][COLOR=#333333]=[/COLOR][COLOR=#f57d00]15[/COLOR][COLOR=#333333], [/COLOR][COLOR=#333333]CummLoop[/COLOR][COLOR=#333333]=[/COLOR][COLOR=#f57d00]0[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E         [COLOR=#009695]for[/COLOR][COLOR=#333333]([/COLOR][COLOR=#333333]Looper1[/COLOR][COLOR=#333333]=[/COLOR][COLOR=#f57d00]1[/COLOR][COLOR=#333333];[/COLOR][COLOR=#333333] Looper1[/COLOR][COLOR=#333333]\u0026lt;[/COLOR][COLOR=#333333]Maxloops[/COLOR][COLOR=#333333]-[/COLOR][COLOR=#f57d00]1[/COLOR][COLOR=#333333]; [/COLOR][COLOR=#333333]Looper1[/COLOR][COLOR=#333333]\u002B\u002B[/COLOR][COLOR=#333333])\u003Cbr\u003E             [/COLOR][COLOR=#333333]{[/COLOR]\u003Cbr\u003E             [COLOR=#3364a4]Console[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]WriteLine[/COLOR][COLOR=#333333]([/COLOR][COLOR=#333333]Looper1[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E             [COLOR=#009695]for[/COLOR][COLOR=#333333]([/COLOR][COLOR=#333333]Looper2[/COLOR][COLOR=#333333]=[/COLOR][COLOR=#333333]Looper1[/COLOR][COLOR=#333333]\u002B[/COLOR][COLOR=#f57d00]1[/COLOR][COLOR=#333333];[/COLOR][COLOR=#333333]Looper2[/COLOR][COLOR=#333333]\u0026lt;[/COLOR][COLOR=#333333]Maxloops[/COLOR][COLOR=#333333];[/COLOR][COLOR=#333333]Looper2[/COLOR][COLOR=#333333]\u002B\u002B[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333]\u003Cbr\u003E                  {[/COLOR]\u003Cbr\u003E                  [COLOR=#3364a4]Console[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]Write[/COLOR][COLOR=#333333]([/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR][COLOR=#3364a4]Console[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]WriteLine[/COLOR][COLOR=#333333]([/COLOR][COLOR=#333333]Looper2[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E                  [COLOR=#009695]for[/COLOR][COLOR=#333333]([/COLOR][COLOR=#333333]Looper3[/COLOR][COLOR=#333333]=[/COLOR][COLOR=#333333]Looper2[/COLOR][COLOR=#333333]\u002B[/COLOR][COLOR=#f57d00]1[/COLOR][COLOR=#333333];[/COLOR][COLOR=#333333]Looper3[/COLOR][COLOR=#333333]\u0026lt;[/COLOR][COLOR=#333333]Maxloops[/COLOR][COLOR=#333333]\u002B[/COLOR][COLOR=#f57d00]1[/COLOR][COLOR=#333333]; [/COLOR][COLOR=#333333]Looper3[/COLOR][COLOR=#333333]\u002B\u002B[/COLOR][COLOR=#333333])[/COLOR]\u003Cbr\u003E                       [COLOR=#333333]{[/COLOR]\u003Cbr\u003E                       [COLOR=#3364a4]Class_AddNumbers [/COLOR][COLOR=#333333]AddTheseNumbers[/COLOR][COLOR=#333333] = [/COLOR][COLOR=#009695]new [/COLOR][COLOR=#3364a4]Class_AddNumbers[/COLOR][COLOR=#333333]()[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E                       [COLOR=#333333]CummLoop[/COLOR][COLOR=#333333] =[/COLOR][COLOR=#333333] AddTheseNumbers[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]AddNumbers[/COLOR][COLOR=#333333] ([/COLOR][COLOR=#333333]Looper1[/COLOR][COLOR=#333333],[/COLOR][COLOR=#333333] Looper2[/COLOR][COLOR=#333333],[/COLOR][COLOR=#333333] Looper3[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E                       [COLOR=#3364a4]Console[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]Write[/COLOR][COLOR=#333333]([/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333]; [/COLOR][COLOR=#3364a4]Console[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]Write[/COLOR][COLOR=#333333]([/COLOR][COLOR=#333333]Looper3[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR][COLOR=#3364a4] Console[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]WriteLine[/COLOR][COLOR=#333333]([/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#f57d00]-[/COLOR][COLOR=#ff0000]{[/COLOR][COLOR=#ff0000]0[/COLOR][COLOR=#ff0000]}[/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#333333],[/COLOR][COLOR=#333333]CummLoop[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E                       [COLOR=#333333]}[/COLOR]\u003Cbr\u003E                  [COLOR=#333333]}[/COLOR]\u003Cbr\u003E            [COLOR=#333333]}[/COLOR]\u003Cbr\u003E            [COLOR=#3364a4]Console[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]ReadLine[/COLOR][COLOR=#333333]()[/COLOR][COLOR=#333333];[/COLOR]\u003Cbr\u003E       [COLOR=#333333]}[/COLOR]\u003Cbr\u003E   [COLOR=#333333]}[/COLOR]\u003Cbr\u003E[COLOR=#333333]}\u003Cbr\u003E[/COLOR][/FONT]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#3364a4;\u0022\u003E\u003Cspan style=\u0022font-family:Monospace;\u0022\u003EClass_AddNumbers \u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EAddTheseNumbers\u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E = \u003C/span\u003E\u003Cspan style=\u0022color:#009695;\u0022\u003Enew \u003C/span\u003E\u003Cspan style=\u0022color:#3364a4;\u0022\u003EClass_AddNumbers\u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E()\u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E;\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EOf all the statements this gave me the most trouble, it won\u0027t work with a static declaration in the called functional. The archane function here is that you have to assign the type (Class_AddNumbers) and then tell C that also by the way its going to be a new Class_AddNumbers. Lol, no kidding I am defining a type as one thing and then saying by the way its also a new the same thing. \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EI am not trying to be insultive here really, I am going to learn the C# and C\u002B\u002B but just to point out......\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Ein basic\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EDim X as integer\u003C/span\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EFunction AddNumbers (Number1 as integer, Number2 as Integer, Number3 as Integer) as Integer\u003C/span\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E            If (Number1 \u002B Number2 \u002B Number3) \u0026gt; 32768 Then AddNumbers = 0 Else AddNumbers = Number1 \u002B Number2 \u002B Number3 \u0027note also added a overrun protection. \u003C/span\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EEnd Function\u003C/span\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003ESub Main\u003C/span\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E         [Rest of program]\u003C/span\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E    x = AddNumbers(L1, L2, L3)\u003C/span\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E         [Rest of rest of program]\u003C/span\u003E\u003Cbr\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EEnd Sub\u003C/span\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E \u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-09-28T20:20:13Z","Content":"\n\u003Cp\u003EPB666, your basic complaint is that you write bad code, and C# makes it more difficult to do so than VB. Don\u0027t feel bad, this is a common problem for VB programmers. I was the same way when I used to write in VB two decades ago. In the words of one comp-sci professor, \u0022It\u0027s alright if some of you never programmed before. It\u0027s much worse if you know BASIC.\u0022\u003C/p\u003E\u003Cp\u003EThese are bad programming practices, and you should get rid of them. You\u0027ll code better in \u003Cem\u003Eeither\u003C/em\u003E language once you do.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003EActually the creators of C# claim that this \u003Cem\u003Eopinion that C# is just an iteration of Java\u003C/em\u003E, they claim that it was patterned off of C\u002B\u002B. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn style. But not in how it works. Again, C/C\u002B\u002B compile to native binaries. C# compiles to byte code. So does Java. C/C\u002B\u002B do not do garbage collection. C#/Java do. List goes on. But stylistic similarities between C# and C\u002B\u002B do mean that a lot of optimization techniques work for both, which is part of the reason why C# is pretty decent in speed. The other part is JIT in CLR, which is much better than JVM\u0027s JIT. But I\u0027m getting off topic.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003EThe reason why I selected C hash was that I want to create high efficiency routines that I can run from VB or VBA, basically, so the efficiency issue is the issue. But exactly to the point, I wanted to tailor structures and classes to the efficiency and accuracy that I needed. The problem is that this has proven to be rather archaic process in either C\u002B\u002B or C#. Microsoft claims that both VB and C# are converted to essentially the same product before finally being converted to assembly language at runtime (Runtime implimentation). Also C hash runs in linux, which means If I have to I can run any vb app in linux as long as I can convert it to C#. Since these are the most similar it seems logical.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo first of all, C# runs on CLR. So does VB. You can actually run VB binaries on Linux. There are ways to do that. I don\u0027t know how good Mono\u0027s JIT, though. (You are talking about running C# via Mono, right?) So performance could be a problem. But again, secondary concern.\u003C/p\u003E\u003Cp\u003EBiggest issue here is that it\u0027s the wrong choice of language. If you\u0027re after performance, performance, and performance, your code should be written in C. Not C#, not C\u002B\u002B. Plain old C. There are ways to incorporate C sub-routines in a VB program. That\u0027s your best bet for staying with familiar VB for high level logic and still getting performance of a C program.\u003C/p\u003E\u003Cp\u003EAlso, if your C sub-routines have platform-dependent code, you\u0027re doing it wrong. Your C portions should be written to be platform-independent. That way the same binaries will run on Windows or Linux machine. And if you ever need to compile for Android, or what have you, it will be up to compiler to take care of these differences.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003ESo let me opinion about the problems of VB in principle and compare with C.\u003Cp\u003E1VB. The If ...... End If structures, unlike For and Next do not have identifiers. For example hypothetically If-1 End If-1. When you have left out a next or end statement, the computer does not recognize that it was missing for an end or next statement, and proclaims that an End if is missing even though it might be a Next.\u003C/p\u003E\u003Cp\u003E 1C The { ....... } covers not only If and For and while and For each and . . . . . but also covers subroutines, class definitions. so a problem that is bad in VB is a magnitude worse in C. Seriously code segment identifiers are not compiled, they are freebees. 1{ }1 2{ }2 3{ }3 4{ }4 So that if you messed up one of your brackets the programs can tell you \u0027hey bracket 1 is missing it closing bracket\u0027 \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou should be indenting your code. It\u0027s absolutely impossible to miss a matching brace if you properly indent. And yeah, sometimes it helps to comment the closing brace to remember exactly what you are closing. Some times it matters. But simply remembering to indent each time you open a brace will already resolve almost all of your problems.\u003C/p\u003E\u003Cp\u003ECode segments actually have compilation effect. They define scope, and scope defines what\u0027s happening to your stack. If you are writing deeply recursive code, these unqualified {} blocks can save you a ton of stack, allowing deeper recursion without a crash.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003E2VB. \u003Cstrong\u003EFunction\u003C/strong\u003E definitions. If you are running a function within a module of basic, you simply need to declare the function and variable and a few lines of code. Its relatively simple. For the most part you don\u0027t want to run a function except if it will clear several lines of code up. So for example I want to evaluate non-normality, I can create a Skewing function and a Kurtosis function, or combine both into a single function (the output would have to be a string in that case)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is how functions work in C and C\u002B\u002B. It\u0027s only C# that does that messed up thing with everything requiring a class. That does provide better type-safety, but I don\u0027t like it either.\u003C/p\u003E\u003Cp\u003EAlso, if you\u0027re worried about performance, using strings for function input/output is NOT the way to go. When you create a string, it\u0027s allocated on the heap, which requires a few hundred cycles in the best case. That can easily run into thousands if heap needs to be expanded. And then you have to generate the actual string, which is thousands more cycles. And that\u0027s without the overhead of garbage collection on top of this if you\u0027re doing VB/C#/Java. Of course, if you\u0027re writing this in C, absolutely all of this is explicit, so you know precisely what you\u0027re wasting your cycles on. Also, there are far, far better ways of handling multiple outputs. C\u0027s favorite way is passing in references to output variables. C\u002B\u002B can return structs. How the later is handled depends on implementation and optimization options.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003E2C. Jeeze Louise, lol. Static, Public, Private, implementation requires a new statement for multiple iterations. Why do I need to create a new class exactly to have multiple iterations. The simplest functional math statement and I have run into errors with just about every character of code. Is this really saving clock cycles, calling subroutines as separate classes? In C a function definition is not just a function, it is literally everything, whereas in VB functions are Functions (return calls) and everything else is subroutine, or even a defined type in VB6 (the equivilant of a struct in C). Because the functions are not set apart what has happened (as I see it) every single identifier in a class becomes very context sensitive, so any minor deviation from what the computer expects will generate an error. The problem in C is that class and function are muddled, a function should be something with a return value, it is not it can be any routine called in a class, if a static is not given it runs pretty much like the pi() function, if the \u003Cem\u003Estatic\u003C/em\u003E is not given you have to call a new instance of the function (an pray that its going to work). \u003Cp\u003ESo it seems to me, that say if I am going to need several routines running simultaneously in C, I am going to have to create a whole new class for each, to make sure that the other might-be functions in that class are not going to be carried on for the ride. This makes sense if you need to build really big classes, such as an employee class or product class, but if the function of the iteration is to process some basic parameters.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAgain, just one more reason to go with C/C\u002B\u002B. You can create a bare function in these languages, which will exist on the stack only, meaning it can be called in parallel from as many threads as you like without fretting over race conditions.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003ESo now in C, fluffball is now an instance of a class and all its parameters will have to be shipped to the object to be updated, this essentially means making an expensive call for essentially routine equivalencies.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn C, there is no such thing as a class, much less an instance of it. In C\u002B\u002B, you\u0027d have a choice how to do this. In C#, you can actually make sure that all of the parameters you are interested in are passed in as actual parameters, or ride on top of a struct you pass in by reference. Believe it or not, you actually have way \u003Cem\u003Emore\u003C/em\u003E control in C/C\u002B\u002B/C# than VB. You are just used to having \u003Cem\u003Eno\u003C/em\u003E control, and so your complaints are all of the type, \u0022Why doesn\u0027t it just do what I want it to do.\u0022 The answer is, you haven\u0027t told it to.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003EThe /// section of definitions I have tried to use this but it doesn\u0027t seem to work, it works in the You Tube but not on my computer.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat do you mean they don\u0027t work? The comments? Or are you trying to have them do something other than just being comments?\u003C/p\u003E\u003Cp\u003EP.S. And we haven\u0027t even gotten to the meat of the problem. How do you make your C code run fast, especially with multiple threads on multiple machines? This is a whole separate topic, and part of the answer is, \u0022By not writing it like you do in VB.\u0022\u003C/p\u003E\n"},{"CreatedByName":"Kerbart","CreatedById":78303,"CreatedDateTime":"2015-09-28T20:34:34Z","Content":"\n\u003Cp\u003EProgramming languages are tools. For certain applications C will be better, for others not. It\u0027s hard to hammer nails into wood using a saw.\u003C/p\u003E\u003Cp\u003EFor code that needs to run fast, C or C\u002B\u002B is usually the best choice. But keep in mind that depending on the complexity of your problem you\u0027ll gain more \u0022performance\u0022 from improving the algorithm than from writing faster code. A high level language that makes it easy to implement such an algorithm might be a better solution. For many problems optimizing the algorithm yields improvements magnitudes better than concentrating on writing \u0022optimized code.\u0022\u003C/p\u003E\u003Cp\u003EThat\u0027s not saying that your solution should or should not be written in C; merely that when you\u0027re looking to improve processing time, looking for a \u0022fast language\u0022 might not be the most effective choice.\u003C/p\u003E\n"},{"CreatedByName":"Darnok","CreatedById":85708,"CreatedDateTime":"2015-09-28T21:10:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PB666\u0022 data-cite=\u0022PB666\u0022\u003E\u003Cdiv\u003EOK, so in preparation I have two SSD drives, one is 500 GB and the other is 120 GB, some of the sequence files I parsed with VB because they were too large for a single 64 GB memory pen. They will have to be recombined. I need basically i386 compatibility and I already have it with windows/linux C#. But the thing is that I have techniques in VB developed that really\u003Cstrong\u003E I will need to get the logic to work\u003C/strong\u003E, so that it needs to be portable with VB.net into something else with minimal amount of work. The process is that in Studio.Net I can start shaving portions of the VB code into C#. That\u0027s a big plus but the structure has to be compatible. Parallel processing would be great, sequence is randomly placed in the file, and I have already split the file into binary code for transport. I have access to 2 computers, but only 6 total processors. (Win 7, Win 10, Ubuntu 14.0.4) Technically speaking I could recombined all the sequence into a single file, and then carve it into 8 smaller files that could be processed individually. The end product will be a text files.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHere are some tests, they are from 2009 \u003Ca href=\u0022https://reverseblade.blogspot.com/2009/02/c-versus-c-versus-java-performance.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://reverseblade.blogspot.com/2009/02/c-versus-c-versus-java-performance.html\u003C/a\u003E but my point in here is not how much faster is \u0022my fav lang over someone else fav lang\u0022 you have there nice chart showing in what algorithms one language is better than the other.\u003C/p\u003E\u003Cp\u003EI don\u0027t know what is your app main \u0022logic\u0022, so you have to decide on your own, what kind of algorithms you are using most and pick best solution for that.\u003C/p\u003E\u003Cp\u003EHere is also nice benchmark for linux and many languages and many algorithms \u003Ca href=\u0022http://benchmarksgame.alioth.debian.org/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://benchmarksgame.alioth.debian.org/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EYou can think about your app structure on many different layers.\u003C/p\u003E\u003Cp\u003EMultithreading is one way and it is good if you have multiple cores and multiple computers, but it won\u0027t save you from issues like:\u003C/p\u003E\u003Cp\u003Eload large data chunk from disk (disk usage 100%, CPU usage 0%)\u003C/p\u003E\u003Cp\u003Erun logic (disk 0%, CPU 100%)\u003C/p\u003E\u003Cp\u003Ewrite data to disk (disk 100%, cpu 0%)\u003C/p\u003E\u003Cp\u003EYou have to pick right size of chunk you read and write, so you wouldn\u0027t waste lots of time doing that part of your code.\u003C/p\u003E\u003Cp\u003EYou can also try to make buffer for loaded chunks and load next portion of data while \u0022run logic\u0022 step your CPU is used at 100%, but disk is free to load next part of file.\u003C/p\u003E\u003Cp\u003EIt all depends what is your logic if and how it can be sliced... yes logic not only data can be sliced in some algorithms, for example standard logic:\u003C/p\u003E\u003Cp\u003Eload input data -\u0026gt; process logic -\u0026gt; write output\u003C/p\u003E\u003Cp\u003Ein some cases you can use mid-points, it all depends what are you doing:\u003C/p\u003E\u003Cp\u003Einput data -\u0026gt; process 1st part of logic -\u0026gt; temp file -\u0026gt; 2nd part of logic -\u0026gt; output data\u003C/p\u003E\u003Cp\u003Enow if you would want to repeat lots of time 2nd step of your logic you can safe some time just by reading input data from temporary files.\u003C/p\u003E\u003Cp\u003EYou can even try alternative method and not using any programming language \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E just put your data in database engine and create SQL query... databases are great if you need to find patterns, sort, count or aggregate your data and I am sure they are going to run very fast and you can split them on multiple computers \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThere is no single \u0022best scenario, best language or best algorithm\u0022 it depends what are you doing:\u003C/p\u003E\u003Cp\u003E- if you need to repeat execution of your app multiple time with same data, but you put different parameters in your logic\u003C/p\u003E\u003Cp\u003E- repeat execution of app every time with different data set and same parameters in logic\u003C/p\u003E\u003Cp\u003E- or else \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-28T21:13:21Z\u0022 title=\u002209/28/2015 09:13  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 28, 2015\u003C/time\u003E by Darnok\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-09-28T21:18:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kerbart\u0022 data-cite=\u0022Kerbart\u0022\u003E\u003Cdiv\u003EBut keep in mind that depending on the complexity of your problem you\u0027ll gain more \u0022performance\u0022 from improving the algorithm than from writing faster code. A high level language that makes it easy to implement such an algorithm might be a better solution. For many problems optimizing the algorithm yields improvements magnitudes better than concentrating on writing \u0022optimized code.\u0022\u003Cp\u003EThat\u0027s not saying that your solution should or should not be written in C; merely that when you\u0027re looking to improve processing time, looking for a \u0022fast language\u0022 might not be the most effective choice.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, this is why when you wish to build something really complex, you never use just one language. For example, the games in the studio I work at are written primarily in C. But some of the more abstract libs have to be C\u002B\u002B or it\u0027d just be too crazy to work with. (Primary reason for C over C\u002B\u002B is compiler time, btw, not so much performance.) On the other hand, most of the code I work with is low level engine stuff. So I write a lot of code with intrinsics, which is very close to writing Assembler code.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Darnok\u0022 data-cite=\u0022Darnok\u0022\u003E\u003Cdiv\u003EHere are some tests, they are from 2009 \u003Ca href=\u0022https://reverseblade.blogspot.com/2009/02/c-versus-c-versus-java-performance.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://reverseblade.blogspot.com/2009/02/c-versus-c-versus-java-performance.html\u003C/a\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEither VC greatly improved since 2009, or somebody did not know how to configure the optimization settings.\u003C/p\u003E\u003Cp\u003EAnd yes, these simple test algorithms tend to perform pretty close, because your limiting factor is branch prediction, which will be just about the same between native and good JIT. I would have liked to see them try running skeletal animation and ragdolls on C#/Java, though. Among common use algorithms, it\u0027s the most brutal abuse of branching, cache, and raw computational performance, which typically makes JIT cry.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-28T21:23:40Z\u0022 title=\u002209/28/2015 09:23  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 28, 2015\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"PB666","CreatedById":107380,"CreatedDateTime":"2015-09-28T21:51:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EPB666, your basic complaint is that you write bad code, and C# makes it more difficult to do so than VB. Don\u0027t feel bad, this is a common problem for VB programmers. I was the same way when I used to write in VB two decades ago. In the words of one comp-sci professor, \u0022It\u0027s alright if some of you never programmed before. It\u0027s much worse if you know BASIC.\u0022\u003Cp\u003EThese are bad programming practices, and you should get rid of them. You\u0027ll code better in \u003Cem\u003Eeither\u003C/em\u003E language once you do.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E I wouldn\u0027t call them bad, VB works very well if some one is handing you data on an excel worksheet, as is the lingua franca for most people who process data but don\u0027t program. Its only when you have a serial stream of data and you need to do strait line processing, lets not use the word bad, lets call it weak. Here is the basic problem and believe me I have worked it down as small as I can, the variable definition in basic is not very good, in fact it stinks, but C# goes overboard particularly in creating instances. Every Basic function assumes that it has no idea what you are going to send it so it is going to try to convert everything to what it wants to process, then convert it back to what you want. If you know in advance you would convert in advance that long integer into a double if you are doing precision multiplication. I use integers for counters and pointers and try not to mix it into the floating point stuff. But I cannot control the fact that basic doesn\u0027t know if its going to be using a single or a integer as a counter. \u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ESo first of all, C# runs on CLR. So does VB. You can actually run VB binaries on Linux. There are ways to do that. I don\u0027t know how good Mono\u0027s JIT, though. (You are talking about running C# via Mono, right?) So performance could be a problem. But again, secondary concern.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe CLR is clearly and advantage of studio.net, it comes with an enormous overhead. But it makes crossing between the two programming languages easier. I should make a point that a couple of decades ago I purchased Visual C\u002B\u002B and was attempting to cross over, the problem was the next version of Visual basic added most of the features that C\u002B\u002B was strong in, except the speed. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EBiggest issue here is that it\u0027s the wrong choice of language. If you\u0027re after performance, performance, and performance, your code should be written in C. Not C#, not C\u002B\u002B. Plain old C. There are ways to incorporate C sub-routines in a VB program. That\u0027s your best bet for staying with familiar VB for high level logic and still getting performance of a C program.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E I agree. OK so the problem that I have had with doing the good old fashion hard run was upper level control. Even in VB its hard to plan break points, in dos you never worried about it, you had no control, once you allowed the processor to run a function it simply ran until in finished or you hit the reset button. What I plan to hand off to C is going to be some pretty intense processing, so I need the higher level OS breakpoints. But if I want to run C based dll, then basically I need something like C# or VB to hand off once the data is in the machine and needs heavy processing. I believe that MonoDevelope can create C routines, I know it can create C\u002B\u002B. \u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAlso, if your C sub-routines have platform-dependent code, you\u0027re doing it wrong. Your C portions should be written to be platform-independent. That way the same binaries will run on Windows or Linux machine. And if you ever need to compile for Android, or what have you, it will be up to compiler to take care of these differences.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIts going to have to be platform specific in one regard I need to have make-file and open file, append file, and close file command. At least multiple times. So if its on linux it needs to be linux compatible filing system. Don\u0027t care about android, not care about IPAD, don\u0027t care about apple. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EYou should be indenting your code. It\u0027s absolutely impossible to miss a matching brace if you properly indent. And yeah, sometimes it helps to comment the closing brace to remember exactly what you are closing. Some times it matters. But simply remembering to indent each time you open a brace will already resolve almost all of your problems.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E \u003Cp\u003EThe MonoDevelop was automatically indenting and not particularly where I would choose to. In VB I always indent, always manually and always remember the consequences, 2 for each level except the If then Else End If in which else is always 1 outdent. I tend not to run recursive code, although I have played with it. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWhat do you mean they don\u0027t work? The comments? Or are you trying to have them do something other than just being comments?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u0022///\u0022 on the you tube immediately filled out 5 lines with each element in the definitions passed variables, basically you could describe the types used in the function. I tried the same thing and nothing happened. I don\u0027t need these but they are a nice feature.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-09-28T22:03:53Z","Content":"\n\u003Cp\u003EIf a plugin has to be in C\u002B\u002B, just roll with it. There are some nuances, but for your purposes, you can write C code in C\u002B\u002B and it will compile, execute, and probably run either just as fast or close enough. Plus, you can use some of the neat C\u002B\u002B features, like new operator instead of malloc. On the other hand, you don\u0027t have to. So if you don\u0027t want to declare a single class, don\u0027t.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u0022///\u0022 on the you tube immediately filled out 5 lines with each element in the definitions passed variables, basically you could describe the types used in the function.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh, that could be a plugin to dev environment.\u003C/p\u003E\n"},{"CreatedByName":"Z-Man","CreatedById":96549,"CreatedDateTime":"2015-09-28T22:05:12Z","Content":"\n\u003Cp\u003EPB666: Declare your AddNumbers method static. Then you can call it without creating an object for it, like so:\u003C/p\u003E\u003Cp\u003EClass_AddNumbers.AddNumbers(...);\u003C/p\u003E\u003Cp\u003EThe closest analoge to your methods/functions in VB that you just write and call in a single module probably would just be private static functions in C#. Callable without an object, but only from other functions from the same class. Same in C\u002B\u002B, only there, you can also just have static functions in the .cpp file without declaring them in the class header. Note: \u0027static\u0027 means about seven different things in C\u002B\u002B depending on context. And even though the two \u0027static\u0027s here work towards the same goal, they\u0027re totally different.\u003C/p\u003E\n"}]}