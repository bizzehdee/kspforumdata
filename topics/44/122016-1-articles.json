{"TopicId":122016,"ForumId":44,"TopicTitle":"Making every picture in the world","CreatedByName":"ToukieToucan","CreatedById":150771,"CreatedDateTime":"2015-09-30T04:56:45Z","PageNum":1,"Articles":[{"CreatedByName":"ToukieToucan","CreatedById":150771,"CreatedDateTime":"2015-09-30T04:56:45Z","Content":"\n\u003Cp\u003ESo a friend and I have seen a video from vsauce\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/GDrBIKOR01c?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E where he explains something about a website called \u0022library of babel\u0022 where every possible combination of letters, periods and commas are used within 3200 characters. Now we thought, what if we could do the same with pictures, instead of letters uses pixels.\u003Cp\u003EWe have about 2 years to solve and some help might be nice since we dont really know where to start.\u003C/p\u003E\u003Cp\u003Emy general idea is somethibg like this:\u003C/p\u003E\u003Cp\u003Euse a random pixel generator \u003C/p\u003E\u003Cp\u003Eadd a algorithm\u003C/p\u003E\u003Cp\u003E???\u003C/p\u003E\n"},{"CreatedByName":"RainDreamer","CreatedById":129077,"CreatedDateTime":"2015-09-30T05:40:27Z","Content":"\n\u003Cp\u003EYeah, we talked about that a few days ago here: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/135154-Everything-Ever-Written\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/135154-Everything-Ever-Written\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThere is one user who wanted to do what you said: \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DundraL\u0022 data-cite=\u0022DundraL\u0022\u003E\u003Cdiv\u003EHaha, a while back I wanted to do something similar with the pixels on a computer screen. With reduced resolution and color count, it is possible to systematically display every single possible combination of pixels on the screen... in a lifetime.\u003Cp\u003EThink about it.... Though the would mostly be random garbage on screen at some point there would be a picture of:\u003C/p\u003E\u003Cp\u003EEarth from space.\u003C/p\u003E\u003Cp\u003EA cartoon of you eating a tire.\u003C/p\u003E\u003Cp\u003EA picture of your mother holding a burning ketchup bottle.\u003C/p\u003E\u003Cp\u003EA blueprint for an undiscovered technology.\u003C/p\u003E\u003Cp\u003EConsider that text can be part of a picture....\u003C/p\u003E\u003Cp\u003EThe text of any national anthem, past current or future.\u003C/p\u003E\u003Cp\u003ELyric to an unwritten song.\u003C/p\u003E\u003Cp\u003EA correct (and incorrect) text explaining about how the last human dies.\u003C/p\u003E\u003Cp\u003Eetc.... every picture you can think of... yea you prb get the idea.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-09-30T06:37:57Z","Content":"\n\u003Ca href=\u0022https://babelia.libraryofbabel.info/\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EYou mean like this?\u003C/span\u003E\u003C/a\u003E\n"},{"CreatedByName":"Shpaget","CreatedById":45577,"CreatedDateTime":"2015-09-30T06:40:36Z","Content":"\n\u003Cp\u003EYou don\u0027t want a random generator, you want the pictures to be generated according to an algorithm.\u003C/p\u003E\u003Cp\u003EYou need to decide on the resolution and color depth.\u003C/p\u003E\u003Cp\u003EFor the number of possible combinations, the resolution is not a significant factor, but it skyrockets with the increase in color depth.\u003C/p\u003E\u003Cp\u003EA modest VGA resolution of 640x480 rendered at very modest 8-bit color depth of 256 different colors will give you a whooping 6x10^1404 combinations.\u003C/p\u003E\u003Cp\u003EIf you dare to increase the color depth to \u0022true color\u0022 24 bit, you\u0027re already in the ballpark of 1x10^10^7.\u003C/p\u003E\u003Cp\u003EHDMI specifications allow for up to 48 bits, or 1x10^10^15.\u003C/p\u003E\u003Cp\u003EThat\u0027s all nice and theoretically doable, but before you decide on that, I\u0027ll ask you one question.\u003C/p\u003E\u003Cp\u003EHow do you plan on browsing/searching the pictures?\u003C/p\u003E\u003Cp\u003EIt\u0027s easy with text, pictures are quite different.\u003C/p\u003E\n"},{"CreatedByName":"YNM","CreatedById":98447,"CreatedDateTime":"2015-09-30T08:35:05Z","Content":"\n\u003Cp\u003EYou can start with shapes. I mean, well, Google image search is an example of these things in work. It tries to associate the values in an image then finding something similar. Maybe we can test it with a black-white 640*640 px image - then trying to search for a set of shapes supposedly giving close enough real-life image recreation. A tree maybe can be simplified to a rectangle and two ellipse. A face can be a set of ellipses. Earth is picky, but having Australia in the image is easy (just ellipse over a circle). And so on. But the hard part is that you actually needs to store all the possible images first.\u003C/p\u003E\n"},{"CreatedByName":"ToukieToucan","CreatedById":150771,"CreatedDateTime":"2015-09-30T14:56:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Shpaget\u0022 data-cite=\u0022Shpaget\u0022\u003E\u003Cdiv\u003EYou don\u0027t want a random generator, you want the pictures to be generated according to an algorithm.\u003Cp\u003EYou need to decide on the resolution and color depth.\u003C/p\u003E\u003Cp\u003EFor the number of possible combinations, the resolution is not a significant factor, but it skyrockets with the increase in color depth.\u003C/p\u003E\u003Cp\u003EA modest VGA resolution of 640x480 rendered at very modest 8-bit color depth of 256 different colors will give you a whooping 6x10^1404 combinations.\u003C/p\u003E\u003Cp\u003EIf you dare to increase the color depth to \u0022true color\u0022 24 bit, you\u0027re already in the ballpark of 1x10^10^7.\u003C/p\u003E\u003Cp\u003EHDMI specifications allow for up to 48 bits, or 1x10^10^15.\u003C/p\u003E\u003Cp\u003EThat\u0027s all nice and theoretically doable, but before you decide on that, I\u0027ll ask you one question.\u003C/p\u003E\u003Cp\u003EHow do you plan on browsing/searching the pictures?\u003C/p\u003E\u003Cp\u003EIt\u0027s easy with text, pictures are quite different.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was planning to put all the possible pictures next to each other so they form a square and that square is divived in 4 invisible square which you can click on to render the pictures, then there are again 4 squares and so on. \u003C/p\u003E\u003Cp\u003EAbout searching, we where planning to have a box where you can add your picture and it could compare it to all the pictures (surely theres a faster way but this is just an idea) and then it could tell its location (1,2,1,4,3,2,1,4,3,2,1,3,4,3,1,2) now that is far from being zoomed in all the way but all the small pictures could make a bigger picture (maybe).\u003C/p\u003E\u003Cp\u003Eill make a sketch soon.\u003C/p\u003E\u003Cp\u003EAlso this is an \u0027honors\u0027 project so we can take 2 years and ask people who know a lot about algorithms and some good coders.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i57.tinypic.com/28v7nkh.jpg\u0022 alt=\u002228v7nkh.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003Ethis is how you\u0027d browse it:\u003C/p\u003E\u003Cp\u003E4 invisible sections, each section has 4 section which has 4 sections etc etc.\u003C/p\u003E\u003Cp\u003E@YNM if you have a good algorithm each time the outcome will be the same so you\u0027ll only have to render 2 layers beneath the current layer to make it look smooth.\u003C/p\u003E\u003Cp\u003EAll tips are welcome.\u003C/p\u003E\n"},{"CreatedByName":"Shpaget","CreatedById":45577,"CreatedDateTime":"2015-09-30T15:16:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ToukieToucan\u0022 data-cite=\u0022ToukieToucan\u0022\u003E\u003Cdiv\u003EAbout searching, we where planning to have a box where you can add your picture and it could compare it to all the pictures (surely theres a faster way but this is just an idea)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou better find a faster way, because comparing it to all possible pictures will take a while (vastly understated and on cosmological timescale).\u003C/p\u003E\u003Cp\u003EYour algorithm has to be reversible, meaning you have to be able to generate a picture from the address (your four sections) and in reverse be able to produce the address from that picture.\u003C/p\u003E\u003Cp\u003EYour 4 sections per image will require many, \u003Cem\u003Emany\u003C/em\u003E layers to be clicked through to get to the final image, around 6x10^351 of them (at 256 colors per pixel).\u003C/p\u003E\u003Cp\u003EJust writing down that address in the form of ((1,2,1,4,3,2,1,4,3,2,1,3,4,3,1,2)....) is impossible.\u003C/p\u003E\n"},{"CreatedByName":"ToukieToucan","CreatedById":150771,"CreatedDateTime":"2015-09-30T15:30:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Shpaget\u0022 data-cite=\u0022Shpaget\u0022\u003E\u003Cdiv\u003EYou better find a faster way, because comparing it to all possible pictures will take a while (vastly understated and on cosmological timescale).\u003Cp\u003EYour algorithm has to be reversible, meaning you have to be able to generate a picture from the address (your four sections) and in reverse be able to produce the address from that picture.\u003C/p\u003E\u003Cp\u003EYour 4 sections per image will require many, \u003Cem\u003Emany\u003C/em\u003E layers to be clicked through to get to the final image, around 6x10^351 of them (at 256 colors per pixel).\u003C/p\u003E\u003Cp\u003EJust writing down that address in the form of ((1,2,1,4,3,2,1,4,3,2,1,3,4,3,1,2)....) is impossible.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmmm how about using coordination like (2958214, \u003Ca rel=\u0022external nofollow\u0022\u003E4738582938\u003C/a\u003E) perhaps each picture could be one x and one y. This would be easier to look for pictures if you know where to look at least... knowing where to look would be the challenge for navigation.\u003C/p\u003E\u003Cp\u003EOr split every section up in 100(0) pieces instead of 4 (still a lot of layers needed but less than 4.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-30T15:37:34Z\u0022 title=\u002209/30/2015 03:37  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 30, 2015\u003C/time\u003E by ToukieToucan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Shpaget","CreatedById":45577,"CreatedDateTime":"2015-09-30T15:47:56Z","Content":"\n\u003Cp\u003EThat\u0027s something you\u0027ll need to figure out, keeping in mind the usability.\u003C/p\u003E\n"},{"CreatedByName":"justidutch","CreatedById":99185,"CreatedDateTime":"2015-09-30T18:26:39Z","Content":"\n\u003Cp\u003EYou could always find the random monkey that ended up rewriting Hamlet, give it a box of crayons and blank sheets of paper...\u003C/p\u003E\n"},{"CreatedByName":"ToukieToucan","CreatedById":150771,"CreatedDateTime":"2015-10-01T04:47:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022justidutch\u0022 data-cite=\u0022justidutch\u0022\u003E\u003Cdiv\u003EYou could always find the random monkey that ended up rewriting Hamlet, give it a box of crayons and blank sheets of paper...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA box of 255 crayons?\u003C/p\u003E\n"},{"CreatedByName":"Waterlimon","CreatedById":16829,"CreatedDateTime":"2015-10-01T16:06:21Z","Content":"\n\u003Cp\u003EAh yes, your quadtree coding idea is easy to do (at a high level, dont know about implementation):\u003C/p\u003E\u003Cp\u003E1. Take picture\u003C/p\u003E\u003Cp\u003E2. Interpret as bits\u003C/p\u003E\u003Cp\u003E3. Split in half in some way (so theres two sets of bits)\u003C/p\u003E\u003Cp\u003E4. Interpret the halves as big integer x,y coordinates.\u003C/p\u003E\u003Cp\u003E5. This is unique location of image in that rectangle of yours.\u003C/p\u003E\u003Cp\u003EThe sequence of choices to find the image is trivially computable from the integer x,y coordinates. (first step is given by first bit of x and y coords, second step given by second bit, and so on)\u003C/p\u003E\u003Cp\u003EI assume you want the images to get \u0022closer and closer\u0022 as you go deeper. Not sure how to do this, but I would begin by optimally choosing how to order the bits of the image when interpreting it as x,y integer coords. (you want the most significant bits to have most effect on the image - perhaps the image should be encoded as fourier transform, or maybe something like gray code where one bit at a time it goes toward the target, idk)\u003C/p\u003E\n"},{"CreatedByName":"ToukieToucan","CreatedById":150771,"CreatedDateTime":"2015-10-02T04:28:03Z","Content":"\n\u003Cp\u003ESeems like coordination would work, though now we still need a way to manually find it like by clicking and such.\u003C/p\u003E\n"}]}