{"TopicId":163802,"ForumId":70,"TopicTitle":"Are Tiny Floating-Point Numbers Hurting Game Performance?","CreatedByName":"mangosprout","CreatedById":180200,"CreatedDateTime":"2017-07-28T13:49:08Z","PageNum":1,"Articles":[{"CreatedByName":"mangosprout","CreatedById":180200,"CreatedDateTime":"2017-07-28T13:49:08Z","Content":"\n\u003Cp\u003E\nHi friends,\n\u003C/p\u003E\n\u003Cp\u003E\nAre non-round numbers and tiny floating point numbers hurting performance? Or is this a non-issue?\n\u003C/p\u003E\n\u003Cp\u003E\nI just looked into one of my save files today, and to my utter horror, I saw many, many, many floating point numbers close to 0, 0.5, and 1 that seem completely unnecessary, especially for vessel part positioning.\u00A0I wonder if this impact performance during calculations in the black box of the KSP engine. Is this indicative of a systemic problem, or is it a non-issue?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EFrom stock saves:\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EFig. 1: \u003C/strong\u003Eunnecessarily small floating-point numbers that might as well be zero:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\t\t\tPART\n\t\t\t{\n\t\t\t\tname = longAntenna\n\t\t\t\t// ...\n\t\t\t\tposition = 1.1920930376163597E-07,-0.59675884246826172,0.25907167792320251\n\t\t\t\trotation = 0.710125268,-1.26440568E-07,8.42937098E-08,0.704075754\n\t\t\t\tmirror = 1,1,1\n\t\t\t\t// ...\n\t\t\t}\n\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EFig. 2a\u003C/strong\u003E: more unnecessarily precise numbers that might as well be one\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\t\t\tPART\n\t\t\t{\n\t\t\t\tname = probeCoreOcto\n\t\t\t\t// ... \n\t\t\t\tposition = -5.2240800130221032E-08,-1.1970952749252319,2.8651722772110588E-08\n\t\t\t\trotation = 1.00000012,0,-7.89703385E-19,0\n\t\t\t\tmirror = 1,1,1\n\t\t\t}\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EFig. 2b\u003C/strong\u003E: yet more\u00A0unnecessarily precise numbers that might as well be one (and more bonus zeroes)\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\t\t\tPART\n\t\t\t{\n\t\t\t\tname = solarPanels5\n\t\t\t\t// ...\n\t\t\t\tposition = -2.980232949312267E-08,-1.7227878570556641,-0.37164053320884705\n\t\t\t\trotation = 0,0.999964118,-0.00851761177,0\n\t\t\t\t// ...\n\t\t\t}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cstrong\u003EFrom Modded Saves\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I looked at a craft made using procedural parts, the problem gets a lot worse. I wonder if this might have contributed to a huge FPS drop when flying planes made with procedural wings.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EFig 3\u003C/strong\u003E: An excerpt from a\u00A0B9 Procedural Wing\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nPART\n{\n\tpart = B9.Aero.Wing.Procedural.TypeA_4293943466\n\t// ...\n\tattPos = 0,-0.0103091002,0\n\tattPos0 = 2.00000405,-0.484342158,0\n\trot = 0.706864536,-0.0185098294,-0.0185098201,0.706864476\n\tattRot = 0,-0.0436194316,0,-0.999048233\n\tattRot0 = 0,0.0436194241,0,0.999048293\n\tmir = 1,1,1\n\t// ...\n\tMODULE\n\t{\n\t\tname = WingProcedural\n\t\t// ...\n\t\tsharedBaseLength = 2.625\n\t\tsharedBaseWidthRoot = 1.125\n\t\tsharedBaseWidthTip = 0.250100017\n\t\tsharedBaseOffsetRoot = 0\n\t\tsharedBaseOffsetTip = 1.25\n\t\tsharedBaseThicknessRoot = 0.239999995\n\t\tsharedBaseThicknessTip = 0.199999988\n\t\tsharedEdgeTypeLeading = 2\n\t\tsharedEdgeWidthLeadingRoot = 0.239999995\n\t\tsharedEdgeWidthLeadingTip = 0.239999995\n\t\tsharedEdgeTypeTrailing = 3\n\t\tsharedEdgeWidthTrailingRoot = 0.479999989\n\t\tsharedEdgeWidthTrailingTip = 0.199999988\n\t\tsharedMaterialST = 1\n\t\tsharedColorSTOpacity = 0\n\t\tsharedColorSTHue = 0.100000001\n\t\tsharedColorSTSaturation = 0.75\n\t\tsharedColorSTBrightness = 0.600000024\n\t\tsharedMaterialSB = 4\n\t\tsharedColorSBOpacity = 0\n\t\tsharedColorSBHue = 0.100000001\n\t\tsharedColorSBSaturation = 0.75\n\t\tsharedColorSBBrightness = 0.600000024\n\t\tsharedMaterialET = 4\n\t\tsharedColorETOpacity = 0\n\t\tsharedColorETHue = 0.100000001\n\t\tsharedColorETSaturation = 0.75\n\t\tsharedColorETBrightness = 0.600000024\n\t\tsharedMaterialEL = 4\n\t\tsharedColorELOpacity = 0\n\t\tsharedColorELHue = 0.100000001\n\t\tsharedColorELSaturation = 0.75\n\t\tsharedColorELBrightness = 0.600000024\n\t\t// ...\n\t}\n\t// ...\n}\n\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EIs this a non-issue?\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI have enough systems programming experience to know that floating point numbers are never integers anyways. The entire game engine deals with messy decimal approximations of rational numbers with odd number denominators (1/7th, 1/9th, etc), not to mention sine/cosine calcs, but I wonder if the processors might benefit from a little bit of rounding 0\u0027s and 1\u0027s, especially right out of the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E or \u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance for your thoughts. I just used regex to round some of these numbers for parts positioning. Maybe I\u0027ll see a performance gain, but I\u0027m not serious enough a player to have benchmarking tools to verify if rounding out part positioning numbers will reduce computational load in any meaningful way. I\u0027m probably better off using 32-bit mode. \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-28T13:50:41Z\u0022 title=\u002207/28/2017 01:50  PM\u0022 data-short=\u00226 yr\u0022\u003EJuly 28, 2017\u003C/time\u003E by mangosprout\u003C/strong\u003E\n\u003Cbr\u003Etypoes\n\u003C/span\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2017-07-28T15:52:43Z","Content":"\n\u003Cp\u003E\nHello, and welcome to the forums!\u00A0 \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223133478\u0022 data-ipsquote-contentid=\u0022163802\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221501249748\u0022 data-ipsquote-userid=\u0022180200\u0022 data-ipsquote-username=\u0022mangosprout\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, mangosprout said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nre non-round numbers and tiny floating point numbers hurting performance? Or is this a non-issue?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, if you really want to know, you could always take a craft with a bunch of numbers like that, save an alternate version in which you manually clean up the \u0022untidy\u0022 numbers, then try flying one and then the other to see if there\u0027s any observable difference whatsoever.\n\u003C/p\u003E\n\u003Cp\u003E\nBut honestly, I\u0027d \u003Cem\u003E\u003Cu\u003Estrongly\u003C/u\u003E\u003C/em\u003E suspect that it\u0027s a complete non-issue.\u00A0 Everything\u0027s just a floating-point number (even zero), and the CPU knows how to add and subtract and multiply and divide them, and it can perform a binary operation on pretty much any two floating-point numbers, zero or otherwise.\u00A0 It\u0027s its \u003Cem\u003E\u003Cu\u003Ejob\u003C/u\u003E\u003C/em\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027d guess that any effect here would be either zero or so darn close to it that it might as well be.\u00A0 On the list of potential performance optimizations to KSP, I\u0027d guess that this one is not even on the map.\n\u003C/p\u003E\n\u003Cp\u003E\nJust my two cents-- it\u0027s not as though I\u0027m privy to the particular calculations that KSP goes through in its internals.\n\u003C/p\u003E\n"},{"CreatedByName":"TheRagingIrishman","CreatedById":165004,"CreatedDateTime":"2017-07-28T17:08:10Z","Content":"\n\u003Cp\u003E\nI agree with \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/125662-snark/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022125662\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/125662-snark/\u0022 rel=\u0022\u0022\u003E@Snark\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"mangosprout","CreatedById":180200,"CreatedDateTime":"2017-07-28T18:08:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223133574\u0022 data-ipsquote-contentid=\u0022163802\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221501257163\u0022 data-ipsquote-userid=\u0022125662\u0022 data-ipsquote-username=\u0022Snark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Snark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell, if you really want to know, you could always take a craft with a bunch of numbers like that, save an alternate version in which you manually clean up the \u0022untidy\u0022 numbers, then try flying one and then the other to see if there\u0027s any observable difference whatsoever.\n\u003C/p\u003E\n\u003Cp\u003E\nBut honestly, I\u0027d \u003Cem\u003E\u003Cu\u003Estrongly\u003C/u\u003E\u003C/em\u003E suspect that it\u0027s a complete non-issue.\u00A0 Everything\u0027s just a floating-point number (even zero), and the CPU knows how to add and subtract and multiply and divide them, and it can perform a binary operation on pretty much any two floating-point numbers, zero or otherwise.\u00A0 It\u0027s its \u003Cem\u003E\u003Cu\u003Ejob\u003C/u\u003E\u003C/em\u003E.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy silly aesthetically attuned human brain just did exactly that, and yup. zippo noticeable difference! I did feel better knowing that my parts were perfectly aligned however. \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAlthough I\u0027m absolutely sure that given a sensitive enough benchmarking tool, the game loaded microsecondsfaster because it had fewer bytes to parse in the text file. \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"HebaruSan","CreatedById":156657,"CreatedDateTime":"2017-07-28T18:43:00Z","Content":"\n\u003Cp\u003E\nHere\u0027s a (horribly-titled) video explaining conventional floating point representation in computers:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo ipsEmbeddedVideo_limited\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/pQs_wx8eoQ8?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhat you see in the text file is a decimal (base 10) representation, but the value in memory is stored in base 2. This is simple enough for whole numbers, but for fractions there are numbers that are exactly representable in a finite number of digits in one system but not the other. Usually that\u0027s where the extra decimal digits come from; an exact base 2 value that the program is using doesn\u0027t have a short representation in base 10. Base 10 fractions (1/10, 3/10, etc.) are especially susceptible to this:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://www.exploringbinary.com/why-0-point-1-does-not-exist-in-floating-point/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.exploringbinary.com/why-0-point-1-does-not-exist-in-floating-point/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nConsider\u00A00.600000024 from one of your files. This probably started life as \u00220.6\u0022 in some modder\u0027s config file. When the computer tried to load \u00220.6\u0022 into a binary representation, it wasn\u0027t able to convert it exactly, but it got as close as possible; it generated a number that worked just like 0.6 in practice, but wasn\u0027t quite exactly equal to it. Then later it was time to write it out to disk again, so that near-0.6 binary value was converted to base 10, again with some errors, and it ended up 0.000000024 away from where it started.\n\u003C/p\u003E\n\u003Cp\u003E\n0.6 \u2192 [binary mess close to 0.6] \u2192\u00A00.600000024\n\u003C/p\u003E\n\u003Cp\u003E\nSometimes writing out \u003Ci\u003Efewer\u003C/i\u003E\u00A0decimal digits can force the computer to round back to the original value, but this is really just a convenience for human readers rather than a way of making it more accurate.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd no, none of this has any performance implications. Floating point operations take the same amount of time regardless of the value of the arguments when converted to base 10.\n\u003C/p\u003E\n"},{"CreatedByName":"Jas0n","CreatedById":57441,"CreatedDateTime":"2017-07-29T05:50:54Z","Content":"\n\u003Cp\u003E\nAlso even if you tidied it up in base 10, it might still be untidy in binary. Also, the number exists as a 64-bit floating point anyways so shouldn\u0027t affect calculation anyways.\n\u003C/p\u003E\n"},{"CreatedByName":"mangosprout","CreatedById":180200,"CreatedDateTime":"2017-08-04T01:31:23Z","Content":"\n\u003Cp\u003E\nThat was such a cogent explanation! Thanks for taking the time to write all that out \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0The PBS vid was always illuminating. I hope it\u0027s useful to other aesthetes out there. And math teachers. 50\u002B\u00A0base-2 bits for a mantissa?!. WOW.\n\u003C/p\u003E\n\u003Cp\u003E\nThe last time I learned about data types was in 2000, when I thought that\u00A08-character variable names were used instead of 16 or longer strings because the bigger the text file, the more the C-compiler had to parse. hehe.\n\u003C/p\u003E\n\u003Cp\u003E\nps. I \u0026lt;3 Astrogator. Even if I don\u0027t use the transfers your algorithms give me, it\u0027s still the base from which I start all my interplanetary transfers.\u00A0\n\u003C/p\u003E\n"}]}