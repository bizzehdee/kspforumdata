{"TopicId":52023,"ForumId":44,"TopicTitle":"Trajectory Plotting Algorithm","CreatedByName":"steel999","CreatedById":61533,"CreatedDateTime":"2013-11-05T21:48:01Z","PageNum":1,"Articles":[{"CreatedByName":"steel999","CreatedById":61533,"CreatedDateTime":"2013-11-05T21:48:01Z","Content":"\n\u003Cp\u003EI was looking into a way to plot a space trajectory (like KSP does) for a project of mine but was unable to find anything other than complex physics writings.\u003C/p\u003E\u003Cp\u003EIs there any chance I could get a push in the right direction?\u003C/p\u003E\u003Cp\u003EHow did the developers for KSP research this?\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-11-06T01:01:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022steel999\u0022 data-cite=\u0022steel999\u0022\u003E\u003Cdiv\u003EI was looking into a way to plot a space trajectory (like KSP does) for a project of mine but was unable to find anything other than complex physics writings.\u003Cp\u003EIs there any chance I could get a push in the right direction?\u003C/p\u003E\u003Cp\u003EHow did the developers for KSP research this?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not sure that this is entirely the right sub-forum. A mod may want to move it.\u003C/p\u003E\u003Cp\u003EIn short, you need to look up \u003Ca href=\u0022https://en.wikipedia.org/wiki/Orbital_mechanics\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003Eorbital mechanics\u003C/strong\u003E\u003C/a\u003E. Watch a few videos, read a few articles, and you should eventually get the hang of it. I can explain the gist of it and how it fits into KSP below, with lots of links you can look up on Wikipedia (though I recommend searching for beginners\u0027 tutorials for these subjects as well). There\u0027s no real way to avoid the physics, as it \u003Cem\u003Eis\u003C/em\u003E physics, though hopefully the perceived complexity can be reduced.\u003C/p\u003E\u003Cp\u003EIgnoring \u003Ca href=\u0022https://en.wikipedia.org/wiki/General_relativity\u0022 rel=\u0022external nofollow\u0022\u003Egeneral relativity\u003C/a\u003E, the motion of bodies in space, such as planets, moons, stars, spacecraft etc. can be described by \u003Ca href=\u0022https://en.wikipedia.org/wiki/Newtons_law_of_universal_gravitation\u0022 rel=\u0022external nofollow\u0022\u003ENewton\u0027s law of gravitation\u003C/a\u003E. This is where the force between any two \u003Ca href=\u0022https://en.wikipedia.org/wiki/Point_mass#Point_mass\u0022 rel=\u0022external nofollow\u0022\u003Epoint masses\u003C/a\u003E (or spherical bodies, which is a good enough approximation in most cases for real objects) of mass \u003Cstrong\u003E\u003Cem\u003Em\u003C/em\u003E\u003C/strong\u003E and \u003Cstrong\u003E\u003Cem\u003EM\u003C/em\u003E\u003C/strong\u003E is\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cem\u003EF\u003C/em\u003E\u003C/strong\u003E = (\u003Cem\u003E\u003Cstrong\u003EG\u003C/strong\u003E\u003C/em\u003E x \u003Cem\u003E\u003Cstrong\u003EM\u003C/strong\u003E\u003C/em\u003E x \u003Cem\u003E\u003Cstrong\u003Em\u003C/strong\u003E\u003C/em\u003E)/(\u003Cstrong\u003E\u003Cem\u003Er\u003C/em\u003E\u003C/strong\u003E^2)\u003C/p\u003E\u003Cp\u003Ewhere \u003Cstrong\u003E\u003Cem\u003EF\u003C/em\u003E\u003C/strong\u003E is the force you apply to both bodies in the direction of the other body, \u003Cstrong\u003E\u003Cem\u003EG\u003C/em\u003E\u003C/strong\u003E is the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Gravitational_constant\u0022 rel=\u0022external nofollow\u0022\u003Egravitational constant\u003C/a\u003E, \u003Cstrong\u003E\u003Cem\u003Em\u003C/em\u003E\u003C/strong\u003E is the mass of one body, \u003Cstrong\u003E\u003Cem\u003EM\u003C/em\u003E\u003C/strong\u003E is the mass of the other, and \u003Cstrong\u003E\u003Cem\u003Er\u003C/em\u003E\u003C/strong\u003E is the distance between their \u003Ca href=\u0022https://en.wikipedia.org/wiki/Centre_of_mass\u0022 rel=\u0022external nofollow\u0022\u003Ecentres of mass\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EHere is another visualisation from Wikipedia with different names for the variables (note that \u003Cem\u003E\u003Cstrong\u003EF\u003C/strong\u003E\u003C/em\u003E = \u003Cem\u003E\u003Cstrong\u003EF\u003C/strong\u003E\u003C/em\u003E\u003Csub\u003E\u003Cem\u003E\u003Cstrong\u003E1\u003C/strong\u003E\u003C/em\u003E\u003C/sub\u003E = \u003Cem\u003E\u003Cstrong\u003EF\u003C/strong\u003E\u003C/em\u003E\u003Csub\u003E\u003Cem\u003E\u003Cstrong\u003E2\u003C/strong\u003E\u003C/em\u003E\u003C/sub\u003E):\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/wikipedia/commons/0/0e/NewtonsLawOfUniversalGravitation.svg\u0022 alt=\u0022NewtonsLawOfUniversalGravitation.svg\u0022\u003E\u003C/p\u003E\u003Cp\u003ETo calculate the motion of a spacecraft, you therefore have to \u003Ca href=\u0022https://en.wikipedia.org/wiki/Integral\u0022 rel=\u0022external nofollow\u0022\u003Eintegrate\u003C/a\u003E this force over time between the spacecraft and every other body in the universe. In general this is impossible to solve \u003Ca href=\u0022https://en.wikipedia.org/wiki/Analytical_solution\u0022 rel=\u0022external nofollow\u0022\u003Eanalytically\u003C/a\u003E, \u003Ca href=\u0022https://en.wikipedia.org/wiki/N-body_problem#Three-body_problem\u0022 rel=\u0022external nofollow\u0022\u003Eeven if the universe only contained 3 objects\u003C/a\u003E. KSP simplifies this a lot by only considering one body other than the spacecraft - this is known as the \u003Ca href=\u0022https://en.wikipedia.org/wiki/2-body_problem\u0022 rel=\u0022external nofollow\u0022\u003E2 body problem\u003C/a\u003E. In this setting the evolution of the motion of the spacecraft over time due to Newton\u0027s law can be solved exactly. You can simplify this further because since the planet/moon etc. is normally much more massive than the spacecraft, the tiny forces involved will not affect it much, so you only need to consider the forces on the spacecraft. The result is that it will always follow what is known as a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Conic_section\u0022 rel=\u0022external nofollow\u0022\u003Econic\u003C/a\u003E trajectory, relative to the body, with the body at one of the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Focus_(geometry)\u0022 rel=\u0022external nofollow\u0022\u003Efoci\u003C/a\u003E. This trajectory, known as an \u003Ca href=\u0022https://en.wikipedia.org/wiki/Orbit\u0022 rel=\u0022external nofollow\u0022\u003Eorbit\u003C/a\u003E, forms the shape of either a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Circular_orbit\u0022 rel=\u0022external nofollow\u0022\u003Ecircle\u003C/a\u003E, an \u003Ca href=\u0022https://en.wikipedia.org/wiki/Elliptical_orbit\u0022 rel=\u0022external nofollow\u0022\u003Eellipse\u003C/a\u003E, a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Parabolic_orbit\u0022 rel=\u0022external nofollow\u0022\u003Eparabola\u003C/a\u003E or a \u003Ca href=\u0022https://en.wikipedia.org/wiki/Hyperbolic_orbit\u0022 rel=\u0022external nofollow\u0022\u003Ehyperbola\u003C/a\u003E, as pictured below:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/OrbitalEccentricityDemo.svg/200px-OrbitalEccentricityDemo.svg.png\u0022 alt=\u0022200px-OrbitalEccentricityDemo.svg.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe body is at the point F, and the spacecraft follows one of the coloured lines. A circular orbit is shown in grey, an elliptical one in red, a parabolic one in green and a hyperbolic one in blue.\u003C/p\u003E\u003Cp\u003EKSP takes advantage of this exact solution by using it instead of calculating the forces on the spacecraft, which allows you to predict the motion of the spacecraft into the far future with little to no extra computation. This is why KSP\u0027s calculations are so robust. The downside, of course, is that the result is only absolutely correct for a system with only one major body. It can approximate more heavily populated systems (like in KSP) by limiting the active range of the gravitational pull of bodies depending on the strength of their gravity compared to their surroundings. This active range forms a region known as the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Sphere_of_influence_(astrodynamics)\u0022 rel=\u0022external nofollow\u0022\u003ESphere of Influence\u003C/a\u003E (SoI). This provides a means for determining which single body to choose as the other body in the 2-body problem with the spacecraft, as you have no doubt experienced when crossing into the Mun\u0027s SoI, for example. What is (approximately) happening is the game is always checking which body has the most effect on the motion of the spacecraft, and it switches to whichever that is as necessary.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-06T01:11:11Z\u0022 title=\u002211/06/2013 01:11  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 6, 2013\u003C/time\u003E by ZRM\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Specialist290","CreatedById":58489,"CreatedDateTime":"2013-11-06T04:12:15Z","Content":"\n\u003Cp\u003EMoving to the Science Labs, where it might get a little more attention from the right people.\u003C/p\u003E\n"},{"CreatedByName":"Moach","CreatedById":9,"CreatedDateTime":"2013-11-07T17:06:12Z","Content":"\n\u003Cp\u003Ewhat do you mean by \u0022plot\u0022 exactly?\u003C/p\u003E\u003Cp\u003Eare you asking about the physics aspect of figuring out a trajectory over time? or do you mean drawing in onto 3d space?\u003C/p\u003E\u003Cp\u003Eshould you mean the latter, KSP uses this thing called \u003Ca href=\u0022http://forum.unity3d.com/threads/49941-Vectrosity-fast-and-easy-line-drawing\u0022 rel=\u0022external nofollow\u0022\u003EVectrosity\u003C/a\u003E for doing that... \u003C/p\u003E\u003Cp\u003EOtherwise, there are few ways of answering your question other than a big ball of math \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 alt=\u0022:rolleyes:\u0022\u003E -- It\u0027s not really all that complicated, it just looks that way at first, tho.\u003C/p\u003E\u003Cp\u003Echeers\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-11-07T20:52:16Z","Content":"\n\u003Cp\u003Eyou can integrate as many objects as you have cpu time for. just get the vector sum of all the forces you want to account for and use that for your current integration step. for a spacecraft you dont have to account for mutual attraction for planetary objects, because the effect by a spacecraft on large bodies is infinitesimal, and you get a result that is close enough. for objects with large amounts of gravity, you must account for the effect of that object on all other objects (and those objects on eachother), and thats where the impossibility comes from, an endless recursive loop.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2013-11-08T01:05:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nuke\u0022 data-cite=\u0022Nuke\u0022\u003E\u003Cdiv\u003Eyou can integrate as many objects as you have cpu time for. just get the vector sum of all the forces you want to account for and use that for your current integration step.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot that simple. The problem is that the integration method matters a lot. Euler just isn\u0027t going to cut it. In fact, any explicit Runge Kutta method, including Verlet which is so popular for physics simulation, are going to give you very poor results. The 1/R potential of gravity is very tough to integrate over. Any explicit method is going to end up accumulating kinetic energy errors. And because solution is \u003Cem\u003Every\u003C/em\u003E sensitive to object\u0027s velocity, you are going to end up with a very large error in trajectory.\u003C/p\u003E\u003Cp\u003EUnfortunately, the only way to get a good trajectory computation for a ship affected by many attractors, even if later are assumed to be on rails, is to run an implicit method. Typically, 2nd or 3rd order Gauss-Legendre method is used.\u003C/p\u003E\u003Cp\u003EI did some tests a while ago when the news of the comet heading for Mars first appeared. I managed to pull NASA data for the comet and all of the important massive bodies in the Solar system to see if I can run my own integration routine for predicting the closest approach. Even using Verlet with 1 second steps, after just a few months, the trajectory was off by enough to make it useless, and velocity was off by a few percent.\u003C/p\u003E\u003Cp\u003EIf you are going to make a video game, it\u0027s not such a bit deal. You can go ahead and just Verlet the whole thing. But you\u0027ll end up with precession of orbits, overly energetic fly-bys and many other artifacts of poor computation. If there is no need for player to do any super-precise trajectory estimates, that\u0027s not too bad. But if you want to have any predictive power at all in your simulation, you have to spend a lot of effort on that integration method.\u003C/p\u003E\n"},{"CreatedByName":"voneiden","CreatedById":38803,"CreatedDateTime":"2013-11-08T11:36:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022steel999\u0022 data-cite=\u0022steel999\u0022\u003E\u003Cdiv\u003EI was looking into a way to plot a space trajectory (like KSP does) for a project of mine but was unable to find anything other than complex physics writings.\u003Cp\u003EIs there any chance I could get a push in the right direction?\u003C/p\u003E\u003Cp\u003EHow did the developers for KSP research this?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWelcome to the forums, there are a few solid books on the matter. A pretty sound choice is \u0022Fundamentals of astrodynamics and applications\u0022 by David Vallado. Books like this might be pretty hard to find though. Could you perhaps clarify if you\u0027re interested (as ZRM mentioned) in plotting the trajectory through physical simulation or through the 2-body problem (\u0022rails\u0022)? The former is quite trivial with basic physics equations.\u003C/p\u003E\u003Cp\u003EThe latter has many different methods which do involve somewhat complicated mathematics. Presume your project involves programming? If yes, what language?\u003C/p\u003E\n"}]}