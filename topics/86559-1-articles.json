{"TopicId":86559,"ForumId":29,"TopicTitle":"Howto -- Animation.AddClip and Playing the Clip","CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2014-10-08T22:47:59Z","PageNum":1,"Articles":[{"CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2014-10-08T22:47:59Z","Content":"\n\u003Cp\u003EIn the following, I\u0027m attempting to create a Clip and play it. I\u0027m successfully instantiating the animation object (anim). I verified that \u0022openClip\u0022 is not null. However, when I execute \u0022anim.Play(\u0022openScreen\u0022)\u0022 for the clip, the clip does not play. I verified the return value, which is TRUE. That is, Unity thinks it played the clip. The model has a single baked animation \u0022Scene\u0022, which is from frames 1 through 89. Scene will eventually have other clips.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        private Animation anim;\u003Cbr\u003E        private AnimationClip openClip;\u003Cbr\u003E\u003Cbr\u003E        public override void OnStart(PartModule.StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            anim = part.FindModelAnimators(\u0022Scene\u0022)[0];\u003Cbr\u003E            openClip = new AnimationClip();\u003Cbr\u003E            anim.AddClip(openClip, \u0022openScreen\u0022, 1, 89, false);\u003Cbr\u003E            anim.Play(\u0022openScreen\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI could create the clips in the Unity Editor. However, I want to attach AnimationEvents to the clips. Specifically, I want to know when each clip has finished playing.\u003C/p\u003E\u003Cp\u003ESo:\u003C/p\u003E\u003Cp\u003E1) what is incorrect in my method of creating and playing clips in the script?\u003C/p\u003E\u003Cp\u003E2) can I attach an AnimationEvent to a clip I define in the Unity Editor versus doing it in the compiled script?\u003C/p\u003E\u003Cp\u003EBonus question: How can I play a clip backwards? That is, is this legal: anim.AddClip(closeClip, \u0022closeScreen\u0022, 89, 1, false);\u003C/p\u003E\u003Cp\u003Enote that the Start frame is greater than the End frame\u003C/p\u003E\n"},{"CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2014-10-09T04:53:49Z","Content":"\n\u003Cp\u003EI displayed the clip length (openClip.length); it showed a length of 1. However, the clip is really 3 seconds long.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-10-09T18:09:00Z","Content":"\n\u003Cp\u003EI\u0027m not sure about the animationclip parts. But to get the animation to play you should just need to set the speed, and maybe the time, and use Play.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eanim[\u0022scene\u0022].speed = 1f;\u003Cbr\u003Eanim[\u0022scene\u0022].normalizedTime = 0f;\u003Cbr\u003Eanim.Play(\u0022scene\u0022);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo play it backwards you would just set the speed to -1f, and the time to 1f, you can also use regular time (in seconds) instead of normalized time.\u003C/p\u003E\n"},{"CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2014-10-09T21:46:47Z","Content":"\n\u003Cp\u003EThanks for the info about playing it backwards. I do want to be able to play clips, i.e., not the entire Scene. Also NEED to add AnimationEvents which can be added to only AnimationClips. Also, I can play the entire Scene without any setup. I just use: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eanim.Play();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHere is the code block:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            private AnimationEvent openEvt;\u003Cbr\u003E\u003Cbr\u003E            openEvt = new AnimationEvent();\u003Cbr\u003E            openEvt.functionName = \u0022ModifyScreen\u0022;\u003Cbr\u003E            openEvt.time = 89;\u003Cbr\u003E            openEvt.stringParameter = \u0022open\u0022;\u003Cbr\u003E\u003Cbr\u003E            openClip = new AnimationClip();\u003Cbr\u003E//            openClip.AddEvent(openEvt);\u003Cbr\u003E            anim.AddClip(openClip, \u0022openScreen\u0022, 1, 89);\u003Cbr\u003E            anim.Play(\u0022openScreen\u0022);\u003Cbr\u003E            Debug.Log(\u0022length=\u0022 \u002B openClip.length);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhen I\u0027ve got the clip playing, then I\u0027ll uncomment the AddEvent. And, as I mention above, the clip is three seconds. However, openClip.length shows it as only one second.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-09T22:03:08Z\u0022 title=\u002210/09/2014 10:03  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 9, 2014\u003C/time\u003E by Apollo13\u003C/strong\u003E\n\u003C/span\u003E\n"}]}