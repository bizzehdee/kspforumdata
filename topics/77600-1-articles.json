{"TopicId":77600,"ForumId":16,"TopicTitle":"How to calculate the Delta-v to counteract the athmosferic drag","CreatedByName":"sirmatthew","CreatedById":114876,"CreatedDateTime":"2014-07-14T15:08:50Z","PageNum":1,"Articles":[{"CreatedByName":"sirmatthew","CreatedById":114876,"CreatedDateTime":"2014-07-14T15:08:50Z","Content":"\n\u003Cp\u003EThe question is simple: i want to do some math to get the required Delta-v to get a Low orbit on Kerbin. The problem is that i have to calculate not only the basic Delta-v to lift-off, and the delta-v to win gravitational drag, but also the delta-v required to win the athmosferic drag. How can I do it? \u003C/p\u003E\u003Cp\u003E(and obviously i don\u0027t want to look at a delta-v map...)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-14T20:00:03Z\u0022 title=\u002207/14/2014 08:00  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 14, 2014\u003C/time\u003E by sirmatthew\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xcorps","CreatedById":96531,"CreatedDateTime":"2014-07-14T15:16:42Z","Content":"\n\u003Cp\u003EHere you, found it with a search.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Amagi82\u0022 data-cite=\u0022Amagi82\u0022\u003E\u003Cdiv\u003E// Delta V to reach orbit around a body with no atmosphere, from sea level, r1 is the equatorial radius\u003Cp\u003E public static double getToOrbit(double gravParameter, double r1, double orbitHeight, double siderealRotationVelocity) {\u003C/p\u003E\u003Cp\u003E double r2 = r1 \u002B orbitHeight;\u003C/p\u003E\u003Cp\u003E return Math.sqrt(gravParameter / r1) * Math.sqrt((2 * r2) / (r1 \u002B r2))\u003C/p\u003E\u003Cp\u003E \u002B (Math.sqrt(gravParameter / r2) * (1 - (Math.sqrt((2 * r1) / (r1 \u002B r2))))) - siderealRotationVelocity;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Additional Delta V to reach orbit around a body with an atmosphere\u003C/p\u003E\u003Cp\u003E public static double getToOrbitAtmo(double surfaceGravity, double scaleHeight, double terminalVelocity) {\u003C/p\u003E\u003Cp\u003E return (4 * surfaceGravity * scaleHeight) / terminalVelocity;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E // Get terminal velocity at a specific altitude.\u003C/p\u003E\u003Cp\u003E public static double getTerminalVelocity(double surfacePressure, double altitude, double scaleHeight, double planetMass, double equatorialRadius) {\u003C/p\u003E\u003Cp\u003E double G = 6.67e-11; // Gravitational constant\u003C/p\u003E\u003Cp\u003E double r = equatorialRadius \u002B altitude;\u003C/p\u003E\u003Cp\u003E double atmosphericDensity = 1.2230948554874 * surfacePressure * Math.exp(-altitude / scaleHeight);\u003C/p\u003E\u003Cp\u003E return Math.sqrt((1250 * G * planetMass) / (r * r * atmosphericDensity));\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003EFor Kerbin:\u003C/p\u003E\u003Cp\u003EDouble toOrbit4 = (getToOrbit(3.5316000e12, 600000, 69078 \u002B mClearanceValue, 174.53) \u002B getToOrbitAtmo(9.81, 5000, 100.2));\u003C/p\u003E\u003Cp\u003EFor a 69,079m orbit, the absolute minimum possible with a flawless ascent, this returns just over \u003Cstrong\u003E4,338.2 dV\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EFor a 100km orbit, mClearanceValue = 30922, so with a perfect ascent, to a circular 100km orbit, this returns: \u003Cstrong\u003E4389.4 dV\u003C/strong\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"UmbralRaptor","CreatedById":2767,"CreatedDateTime":"2014-07-14T15:34:12Z","Content":"\n\u003Cp\u003EAny idea where Amagi82 got the values for drag?\u003C/p\u003E\n"},{"CreatedByName":"xcorps","CreatedById":96531,"CreatedDateTime":"2014-07-14T15:46:40Z","Content":"\n\u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Atmosphere\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Atmosphere\u003C/a\u003E\n"},{"CreatedByName":"UmbralRaptor","CreatedById":2767,"CreatedDateTime":"2014-07-14T16:01:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022xcorps\u0022 data-cite=\u0022xcorps\u0022\u003E\u003Cdiv\u003E\u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Atmosphere\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Atmosphere\u003C/a\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat page doesn\u0027t seem to cover the (4 * surfaceGravity * scaleHeight) / terminalVelocity, though.\u003C/p\u003E\u003Cp\u003EMaybe if I try integrating the drag over a distance with some sketchy path length assumptions...?\u003C/p\u003E\n"},{"CreatedByName":"sirmatthew","CreatedById":114876,"CreatedDateTime":"2014-07-14T19:58:47Z","Content":"\n\u003Cp\u003Eok thank you!\u003C/p\u003E\n"},{"CreatedByName":"Mr Shifty","CreatedById":68146,"CreatedDateTime":"2014-07-14T20:48:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022UmbralRaptor\u0022 data-cite=\u0022UmbralRaptor\u0022\u003E\u003Cdiv\u003EThat page doesn\u0027t seem to cover the (4 * surfaceGravity * scaleHeight) / terminalVelocity, though.\u003Cp\u003EMaybe if I try integrating the drag over a distance with some sketchy path length assumptions...?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EK^2 posted his quick and dirty derivation about a year ago here (and further on in the same thread.)\u003C/p\u003E\n"},{"CreatedByName":"UmbralRaptor","CreatedById":2767,"CreatedDateTime":"2014-07-15T03:43:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mr Shifty\u0022 data-cite=\u0022Mr Shifty\u0022\u003E\u003Cdiv\u003EK^2 posted his quick and dirty derivation about a year ago here (and further on in the same thread.)\u003C/div\u003E\u003C/blockquote\u003EExcellent, thank you.\n"}]}