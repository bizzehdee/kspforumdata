{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":5,"Articles":[{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-18T19:56:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EBut the other thing is that being able to treat docking operations with vectors would open up a lot of useful things like using dot and cross products to help you calculate docking moves. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI kind of figured the same, though I am also not sure whether confronting people with vectors might easily throw them off. When you get the hang of it it is fine, but it might be confusing that adding \u003Cem\u003E1 (, 0, 0)\u003C/em\u003E to \u003Cem\u003E1, 1, 1\u003C/em\u003E suddenly means that you have effectively got \u003Cem\u003E1, 0.5, 0.5\u003C/em\u003E. My guess would be that an absolute domain is easier to understand than a relative domain. No idea how relevant that difference is though.\u003C/p\u003E\u003Cp\u003EBefore, you only needed to touch vectors if you wanted to. If this makes it into kOS, they will play a much bigger role - pretty much everyone writing a script will have to deal with it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-18T22:45:48Z\u0022 title=\u002202/18/2014 10:45  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 18, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-19T08:02:39Z","Content":"\n\u003Cp\u003EAlright people, new pre-release is out\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/erendrake/KOS/releases/tag/v0.11.1P1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/releases/tag/v0.11.1P1\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThis adds \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Direct Flight control\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E vessel load distance\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E random number generator\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E More engine stats\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOff to bed.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-20T04:02:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EAlright people, new pre-release is out\u003Cp\u003E\u003Ca href=\u0022https://github.com/erendrake/KOS/releases/tag/v0.11.1P1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/releases/tag/v0.11.1P1\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThis adds \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Direct Flight control\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E vessel load distance\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E random number generator\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E More engine stats\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOff to bed.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAdjust load distance? The KSP API lets you do that?? On a per-ship basis???? (i.e. some ships staying loaded farther away than other ships?) Then why haven\u0027t more mods made use of it? I\u0027d love to hear more about how that works and how you use it. If it does what it sounds like it does I might want to go back to trying my orbital missile platform again.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-20T05:10:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EAlright people, new pre-release is out\u003Cp\u003E[...]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat looks lovely \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-20T05:12:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAdjust load distance? The KSP API lets you do that?? On a per-ship basis???? (i.e. some ships staying loaded farther away than other ships?) Then why haven\u0027t more mods made use of it? I\u0027d love to hear more about how that works and how you use it. If it does what it sounds like it does I might want to go back to trying my orbital missile platform again.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt doesnt let you adjust it per ship, Only globally so far \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E I was looking for a way for KOS to allow for a grasshopper style booster return. Saw the load distance and thought \u0022why not!\u0022 I actually havent tested it yet but it looks pretty fun \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI did find a \u0022Pack\u0022 distance that is adjustable per vessel and addeded it, thinking that maybe we could prevent vessels from getting unloaded? Again i havent really tested it yet \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-20T05:25:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI was looking for a way for KOS to allow for a grasshopper style booster return.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGrasshopper style should be feasible. There are other mods out there that let you adjust loading distance. When you set it to, say, 200 kilometer, you can get all the way to orbit (including lateral movement) without ships unloading. I think the dropped parts should be fine as soon as they have landed, though I never confirmed that. Running a dedicated save would probably be smart though, to prevent massive lag when other parts come within the large loading range.\u003C/p\u003E\u003Cp\u003EI have, however, observed strange behaviour when running multiple but seperate kOS units side by side. Sometimes the non focussed kOS unit just goes haywire, gets deleted or somehow influences the focussed unit. I have only seen this behaviour in Kevin\u0027s versions though (and played a lot less since), so I have no idea whether this is still the case.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-20T05:47:17Z","Content":"\n\u003Cp\u003EI was just playing around with typing commands on the terminal and I was trying to use Fore, Starboard, and Top to translate, and the behavior of this seems really weird and off:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Esas off.\u003Cbr\u003Ercs off.\u003Cbr\u003Eset f to facing.\u003Cbr\u003Elock steering to f.\u003Cbr\u003E\u003Cbr\u003Ercs on. // getting ready for translation.\u003Cbr\u003E\u003Cbr\u003E// At this point it seems right.  It rigidly stays in the current orientation like I\u0027d expect, using kOS instead of SAS to do it, and it\u0027s not using RCS fuel because it\u0027s settled down into the fixed orientation.\u003Cbr\u003E\u003Cbr\u003Eset ship:control:fore to 1.0. // attempting to translate forward.\u003Cbr\u003E\u003Cbr\u003E// Instead of moving in a straight line, it activates the RCS thrust blocks asymmetrically and tries to rotate me.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe problem seems to be triggered by trying to use LOCK STEERING. If I try it by unlocking the steering and instead using SAS to lock my orientation, then it behaves as you\u0027d expect. Something about using LOCK STEERING and using FORE for translation at the same time makes kOS try to rotate the craft even when the current orientation is already the one that the steering is locked to.\u003C/p\u003E\u003Cp\u003E(EDIT: Additionally, another problem seems to be the inability to unlock the translation controls and give them back to my manual control. You know how if you don\u0027t UNLOCK STEERING, you can\u0027t steer manually? Well after I played with \u0022ship:control:fore\u0022 and then set it back to zero again, from then on there was no way to make the H and N keys work again to move the RCS translation manually. They were locked out. Even toggling power on the SCS module didn\u0027t give me control back.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-20T05:55:49Z\u0022 title=\u002202/20/2014 05:55  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 20, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-20T06:27:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E(EDIT: Additionally, another problem seems to be the inability to unlock the translation controls and give them back to my manual control. You know how if you don\u0027t UNLOCK STEERING, you can\u0027t steer manually? Well after I played with \u0022ship:control:fore\u0022 and then set it back to zero again, from then on there was no way to make the H and N keys work again to move the RCS translation manually. They were locked out. Even toggling power on the SCS module didn\u0027t give me control back.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have not tried the new release yet, but maybe you locked your controls to 0 instead of releasing them?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-20T06:36:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI was just playing around with typing commands on the terminal and I was trying to use Fore, Starboard, and Top to translate, and the behavior of this seems really weird and off:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Esas off.\u003Cbr\u003Ercs off.\u003Cbr\u003Eset f to facing.\u003Cbr\u003Elock steering to f.\u003Cbr\u003E\u003Cbr\u003Ercs on. // getting ready for translation.\u003Cbr\u003E\u003Cbr\u003E// At this point it seems right.  It rigidly stays in the current orientation like I\u0027d expect, using kOS instead of SAS to do it, and it\u0027s not using RCS fuel because it\u0027s settled down into the fixed orientation.\u003Cbr\u003E\u003Cbr\u003Eset ship:control:fore to 1.0. // attempting to translate forward.\u003Cbr\u003E\u003Cbr\u003E// Instead of moving in a straight line, it activates the RCS thrust blocks asymmetrically and tries to rotate me.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe problem seems to be triggered by trying to use LOCK STEERING. If I try it by unlocking the steering and instead using SAS to lock my orientation, then it behaves as you\u0027d expect. Something about using LOCK STEERING and using FORE for translation at the same time makes kOS try to rotate the craft even when the current orientation is already the one that the steering is locked to.\u003C/p\u003E\u003Cp\u003E(EDIT: Additionally, another problem seems to be the inability to unlock the translation controls and give them back to my manual control. You know how if you don\u0027t UNLOCK STEERING, you can\u0027t steer manually? Well after I played with \u0022ship:control:fore\u0022 and then set it back to zero again, from then on there was no way to make the H and N keys work again to move the RCS translation manually. They were locked out. Even toggling power on the SCS module didn\u0027t give me control back.)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECrap i forgot to look at LOCK STEERING and this new flight control at the same time. That will have to get fixed!\u003C/p\u003E\u003Cp\u003EAbout letting go of these new controls, I added ship:control:neutralize that should set everything to 0 and then release control. I was trying to figure out how to let go without a \u0022turn me off\u0022 command and i couldn\u0027t quite figure it out.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-20T06:41:35Z","Content":"\n\u003Cp\u003EAlright, now that people are starting to find bugs its time for another pre-release. Im thinking that i want to feature lock 0.11.1 with these features, get it tested and out. Then get the rest of the docking milestone finished\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/erendrake/KOS/releases/tag/v0.11.1P2\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/releases/tag/v0.11.1P2\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThis adds \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E New Vector math\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Disk Space is now defined in the kos part module, new hard cap is 655360 bytes\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eas well as everything from the first pre-release\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-20T06:51:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI have not tried the new release yet, but maybe you locked your controls to 0 instead of releasing them?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe problem is that the new manuevers used SET rather than LOCK, but despite being called \u0022set\u0022 it still locks the controls, and there\u0027s no way to unlock them. I haven\u0027t tried the new \u0027neutralize\u0027 that erendrake just made to see if that fixes it.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-20T07:09:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EAbout letting go of these new controls, I added ship:control:neutralize that should set everything to 0 and then release control. I was trying to figure out how to let go without a \u0022turn me off\u0022 command and i couldn\u0027t quite figure it out.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs that not what \u003Cem\u003Eunlock\u003C/em\u003E was for?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-20T07:48:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EIs that not what \u003Cem\u003Eunlock\u003C/em\u003E was for?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELOCK has two important differences from SET:\u003C/p\u003E\u003Cp\u003E1. The fact that it overrides user control.\u003C/p\u003E\u003Cp\u003E2. The other effect is that the value can be a re-executable expression that is re-run each time the value is checked, rather than a flat value.\u003C/p\u003E\u003Cp\u003ESo if you want effect #1 without also having effect #2 there wasn\u0027t really a way to do that in the language. What happened with this SET is that it gives you effect #1 without effect #2, but then didn\u0027t have a corresponding UNLOCK to release it because it wasn\u0027t a LOCK in the first place. (And I did try it with LOCK first. It actually returns an error when you try to use it with LOCK. It only works with SET.)\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-20T08:03:55Z","Content":"\n\u003Cp\u003EHmm, I see. This could be terribly confusing, apart from that it still does not allow to set a value while still allowing user input.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-20T15:16:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe problem is that the new manuevers used SET rather than LOCK, but despite being called \u0022set\u0022 it still locks the controls, and there\u0027s no way to unlock them. I haven\u0027t tried the new \u0027neutralize\u0027 that erendrake just made to see if that fixes it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt does appear that I have some work to do on these controls. It shouldn\u0027t be hard to change the behaviour to set. Steering helper fighting the direct method for control is going to be tougher but still shouldn\u0027t take long.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-20T15:27:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003E.\u003Cp\u003EI have, however, observed strange behaviour when running multiple but seperate kOS units side by side. Sometimes the non focussed kOS unit just goes haywire, gets deleted or somehow influences the focussed unit. I have only seen this behaviour in Kevin\u0027s versions though (and played a lot less since), so I have no idea whether this is still the case.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMost of the time they should be totally seperate. There are some static classes/members around that might cause commands to bleed over in strange ways. I\u0027ll have to audit these to make sure they are safely used\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-21T00:39:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EMost of the time they should be totally seperate. There are some static classes/members around that might cause commands to bleed over in strange ways. I\u0027ll have to audit these to make sure they are safely used\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe most notable example I can offer from the 0.7 era is one kOS controlled craft hovering rock steady. I switch to another vessel, order it up and attempt a similar hover. Not only does the second unit exhibit a large unexplained oscillation, the stability of the first unit seems to decay alongside the second one (albeit slightly less severe). The really strange thing is that when I switched vehicles on the fly, the first oscillating craft seemed rock steady again. Switching back to the second craft showed the oscillation in the first craft again.\u003C/p\u003E\u003Cp\u003EI saw this happen a couple of times, but far from always. I could never quite replicate it reliably. For now it would proably be best to assume this behaviour does not exist, until I can find some prove of it in newer versions and preferably record or replicate it.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-22T21:46:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EThe most notable example I can offer from the 0.7 era is one kOS controlled craft hovering rock steady. I switch to another vessel, order it up and attempt a similar hover. Not only does the second unit exhibit a large unexplained oscillation, the stability of the first unit seems to decay alongside the second one (albeit slightly less severe). The really strange thing is that when I switched vehicles on the fly, the first oscillating craft seemed rock steady again. Switching back to the second craft showed the oscillation in the first craft again.\u003Cp\u003EI saw this happen a couple of times, but far from always. I could never quite replicate it reliably. For now it would proably be best to assume this behaviour does not exist, until I can find some prove of it in newer versions and preferably record or replicate it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is a very good chance that KSP doesn\u0027t update the physics as often on the non-active craft.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-23T21:11:15Z","Content":"\n\u003Cp\u003EHave you seen the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/70454-PLUGIN-WIP-0-23-kRISC-kOS-with-a-RISC-heart\u0022 rel=\u0022external nofollow\u0022\u003ERISC version of kOS\u003C/a\u003E? It seems that might be a good way of increasing performance - or decreasing load. Do you think this will be useful to this version of kOS, or does that mean too much of a rewrite?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EThere is a very good chance that KSP doesn\u0027t update the physics as often on the non-active craft.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe weird thing is is that it is not very consistent. Stuff will go haywire sometimes and work perfectly fine at other times, with apparently the same starting conditions.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-23T21:25:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EHave you seen the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/70454-PLUGIN-WIP-0-23-kRISC-kOS-with-a-RISC-heart\u0022 rel=\u0022external nofollow\u0022\u003ERISC version of kOS\u003C/a\u003E? It seems that might be a good way of increasing performance - or decreasing load. Do you think this will be useful to this version of kOS, or does that mean too much of a rewrite?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think its a great idea, My main goals have been to add new features to KOS to enable tasks like docking, science, Mod integration. I have also spent a bunch of time trying to make documentation that doesn\u0027t suck. I have spent very little time thinking about performance. \u003C/p\u003E\u003Cp\u003EIt looks like great work and i will see if marianoapp minds if i merge in his improvements \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-23T21:52:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EIt looks like great work and i will see if marianoapp minds if i merge in his improvements \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYour version of kOS is becoming a black hole for good ideas - in the good sense \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-23T21:56:58Z\u0022 title=\u002202/23/2014 09:56  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 23, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-23T22:19:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EYour version of kOS is becoming a black hole for good ideas - in the good sense \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy attitude is that none of us as as smart as all of us. Each of us has a focus and marianoapp\u0027s is clearly performance, Which we sorely need.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-23T23:00:55Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EIdea: Mission Control\u0027s Mainframe CPU back home.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThere is a a storage volume back home at KSC called \u0022archive\u0022, by why do the only CPUs that can run code off that volume exist out on remote vessels? Wouldn\u0027t they know how to build a bulky mainframe computer and house it in a room in a building on the ground long before they learn how to put a computer on a spaceship?\u003C/p\u003E\u003Cp\u003EWhat I\u0027m thinking of is this: Add one additional kOS SCS CPU that lives not inside a vessel part, but just lives \u0022in limbo\u0022. (Or, it does live in a \u0022part\u0022 but that \u0022part\u0022 isn\u0027t hooked into the rest of the structure for a vessel part. It\u0027s just a \u0022part\u0022 object that lives inside the kOS Mod\u0027s own head and isn\u0027t connected to anything.) It\u0027s not part of the KSP physics engine. It doesn\u0027t get unloaded when a vessel goes out of scope because it\u0027s not on a vessel at all. It represents the mainframe back home at KSC. It can run code. It\u0027s default Volume is 0, the archive, and it doesn\u0027t have a local volume. It just runs natively off the archive. Because it\u0027s not on a part it doesn\u0027t unload and can continue running no matter where the game is focused. kOS just makes sure that the list of currently active CPUs it needs to execute instructions for when KSP runs its update hook for kOS includes this phantom mainframe CPU as well as the CPUs attached to loaded parts.\u003C/p\u003E\u003Cp\u003EWhat the mainframe CPU could do:\u003C/p\u003E\u003Cp\u003EPresumably the mainframe can obtain data about any named vessel in comms range (where the meaning of \u0022in comms range\u0022 would vary depending on whether or not remote tech is being used, just like it does currently for seeing if a remote volume is reachable). Perhaps for realism, attempts to obtain telemetry about a vessel would generate a lightspeed delay in the execution of that command. Then the home mainframe could perform calculations without the limitations of lightspeed delay or small hard drives. For example: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Running on the mainframe:\u003Cbr\u003Eset ves to vessel(\u0022some name\u0022).\u003Cbr\u003Eset vesOrb to ves:orbit. // This command takes lightspeed-delayed minutes to finish.\u003Cbr\u003Erun calcTransfer( \u0022Duna\u0022, vesOrb ). // mainframe makes complex calculations instead of the vessel doing it.\u003Cbr\u003Elog burnStartTime to sendFile.\u003Cbr\u003Elog burnAim to sendFile.\u003Cbr\u003Elog burnDuration to sendFile.\u003Cbr\u003E// Now the vessel can \u0022copy sendfile from archive\u0022 to get the result.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe mainframe could also be responsible for storing its own database of really complex slingshot planetary transport network calculations that it can use to tell the vessel what to do. Or it could run the over-arching \u0022mission script\u0022 like I did in the Duna Challenge Mission 2 entry. That always felt a bit \u0022wrong\u0022 because in my head I was imagining that that global script was running at home, telling the craft how to initiate each of its smaller script steps, but I knew that\u0027s not really what was happening in the mod because the computer was on the vessel and just accessing the mission script from the archive, rather than the mission script *actually* running back home on the archive.\u003C/p\u003E\u003Cp\u003EIt could also be responsible for getting the vessel set up on the launchpad. Imagine an init script stored on the mainframe that you run from the mainframe to copy the code and initial settings onto the vessel\u0027s computer before launch.\u003C/p\u003E\u003Cp\u003EWhat to do with the mission control mainframe computer is really up to the player of course. I\u0027m just thinking of ways it could be useful.\u003C/p\u003E\u003Cp\u003EWhat it could not do:\u003C/p\u003E\u003Cp\u003EAnything involving current vessel velocity or position or orientation. The current SHIP, is essentially, null for the purposes of running mainframe code. This may be the trickiest change as it would mean having to trap that condition and make sure it doesn\u0027t bog up the mod when there is no current ship, and instead gives a pleasant error message about it.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-23T23:17:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003EIdea: Mission Control\u0027s Mainframe CPU back home.\u003C/strong\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThere is a a storage volume back home at KSC called \u0022archive\u0022, by why do the only CPUs that can run code off that volume exist out on remote vessels? Wouldn\u0027t they know how to build a bulky mainframe computer and house it in a room in a building on the ground long before they learn how to put a computer on a spaceship?\u003C/p\u003E\u003Cp\u003EWhat I\u0027m thinking of is this: Add one additional kOS SCS CPU that lives not inside a vessel part, but just lives \u0022in limbo\u0022. (Or, it does live in a \u0022part\u0022 but that \u0022part\u0022 isn\u0027t hooked into the rest of the structure for a vessel part. It\u0027s just a \u0022part\u0022 object that lives inside the kOS Mod\u0027s own head and isn\u0027t connected to anything.) It\u0027s not part of the KSP physics engine. It doesn\u0027t get unloaded when a vessel goes out of scope because it\u0027s not on a vessel at all. It represents the mainframe back home at KSC. It can run code. It\u0027s default Volume is 0, the archive, and it doesn\u0027t have a local volume. It just runs natively off the archive. Because it\u0027s not on a part it doesn\u0027t unload and can continue running no matter where the game is focused. kOS just makes sure that the list of currently active CPUs it needs to execute instructions for when KSP runs its update hook for kOS includes this phantom mainframe CPU as well as the CPUs attached to loaded parts.\u003C/p\u003E\u003Cp\u003EWhat the mainframe CPU could do:\u003C/p\u003E\u003Cp\u003EPresumably the mainframe can obtain data about any named vessel in comms range (where the meaning of \u0022in comms range\u0022 would vary depending on whether or not remote tech is being used, just like it does currently for seeing if a remote volume is reachable). Perhaps for realism, attempts to obtain telemetry about a vessel would generate a lightspeed delay in the execution of that command. Then the home mainframe could perform calculations without the limitations of lightspeed delay or small hard drives. For example: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Running on the mainframe:\u003Cbr\u003Eset ves to vessel(\u0022some name\u0022).\u003Cbr\u003Eset vesOrb to ves:orbit. // This command takes lightspeed-delayed minutes to finish.\u003Cbr\u003Erun calcTransfer( \u0022Duna\u0022, vesOrb ). // mainframe makes complex calculations instead of the vessel doing it.\u003Cbr\u003Elog burnStartTime to sendFile.\u003Cbr\u003Elog burnAim to sendFile.\u003Cbr\u003Elog burnDuration to sendFile.\u003Cbr\u003E// Now the vessel can \u0022copy sendfile from archive\u0022 to get the result.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe mainframe could also be responsible for storing its own database of really complex slingshot planetary transport network calculations that it can use to tell the vessel what to do. Or it could run the over-arching \u0022mission script\u0022 like I did in the Duna Challenge Mission 2 entry. That always felt a bit \u0022wrong\u0022 because in my head I was imagining that that global script was running at home, telling the craft how to initiate each of its smaller script steps, but I knew that\u0027s not really what was happening in the mod because the computer was on the vessel and just accessing the mission script from the archive, rather than the mission script *actually* running back home on the archive.\u003C/p\u003E\u003Cp\u003EIt could also be responsible for getting the vessel set up on the launchpad. Imagine an init script stored on the mainframe that you run from the mainframe to copy the code and initial settings onto the vessel\u0027s computer before launch.\u003C/p\u003E\u003Cp\u003EWhat to do with the mission control mainframe computer is really up to the player of course. I\u0027m just thinking of ways it could be useful.\u003C/p\u003E\u003Cp\u003EWhat it could not do:\u003C/p\u003E\u003Cp\u003EAnything involving current vessel velocity or position or orientation. The current SHIP, is essentially, null for the purposes of running mainframe code. This may be the trickiest change as it would mean having to trap that condition and make sure it doesn\u0027t bog up the mod when there is no current ship, and instead gives a pleasant error message about it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis sounds like a fun project! I would love to talk to you about how it would be implemented. Lets setup a group hangout and get some comments on it. It also seems like the mainframe would be responsible for switching active vessels? Spawning new ships on the pad?\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-23T23:34:11Z","Content":"\n\u003Cp\u003ESomewhat related: I would - someday - like to see kOS units have the ability to communicate. This might be in the form of networking like capabilities, or a more low level multithreading style mechanism. I think this is something for the far future, but having multiple units operating in concert should allow for some very funky and nifty schemes. I guess a mainframe computer would benefit from this too.\u003C/p\u003E\u003Cp\u003EStuff like building a super computer, neural networks or simulating the MSL landing sequence (with command being switched from the skycrane to the MSL) should all become a lot easier.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-23T23:36:32Z\u0022 title=\u002202/23/2014 11:36  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 23, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"}]}