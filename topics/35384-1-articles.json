{"TopicId":35384,"ForumId":29,"TopicTitle":"Dock/undock event?","CreatedByName":"tek_604","CreatedById":59699,"CreatedDateTime":"2013-06-30T15:10:14Z","PageNum":1,"Articles":[{"CreatedByName":"tek_604","CreatedById":59699,"CreatedDateTime":"2013-06-30T15:10:14Z","Content":"\n\u003Cp\u003EIs there someway to detect if a docking/undocking has been performed?\u003C/p\u003E\u003Cp\u003EI\u0027d like to check if one of my parts was docked/undocked to another one of my parts. I\u0027ve checked the \u0022current\u0022 KSP API, and can\u0027t find it, so, if it doesn\u0027t exist, what would be a nice workaround?\u003C/p\u003E\n"},{"CreatedByName":"tek_604","CreatedById":59699,"CreatedDateTime":"2013-07-01T09:29:37Z","Content":"\n\u003Cp\u003ELets try a slightly different question, but it would still meet my requirements...\u003C/p\u003E\u003Cp\u003EIs it possible to somehow check if a part is still part of the current vessel, without having to loop over all the parts again? I really want to avoid loops if at all possible...\u003C/p\u003E\n"},{"CreatedByName":"EndlessWaves","CreatedById":41302,"CreatedDateTime":"2013-07-01T17:02:05Z","Content":"\n\u003Cp\u003EThere\u0027s an OnUndock event in GameEvents but there doesn\u0027t seem to be a corresponding dock event, I\u0027m not sure what\u0027s fired solely on docking, although there are events like OnActive that are fired on docking as well as elsewhere.\u003C/p\u003E\n"},{"CreatedByName":"Razchek","CreatedById":62645,"CreatedDateTime":"2013-07-02T08:58:56Z","Content":"\n\u003Cp\u003EYou could hide the Couple method by replacing it with your own. This is bad design (the dispatches are not uniform), but it \u003Cem\u003Eshould\u003C/em\u003E work as long as you only execute the extra code in the situation you need it.. (e.g. both parts are what you desire).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    public class YourPlugin : DockingPort\u003Cbr\u003E    {\u003Cbr\u003E        public new void Couple(Part tgtPart)\u003Cbr\u003E        {\u003Cbr\u003E            base.Couple(tgtPart); // \u0026lt;- Do not remove.\u003Cbr\u003E\u003Cbr\u003E            // Your code.\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        //public new void decouple(float breakForce) calls:\u003Cbr\u003E        protected override void onDecouple(float breakForce)\u003Cbr\u003E        {\u003Cbr\u003E            //base.onDecouple(breakForce); // \u0026lt;- Safe to remove.\u003Cbr\u003E\u003Cbr\u003E            // Your code.\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOnce again, just keep in mind that the method wasn\u0027t designed to be overridden - your best solution at this moment would be to co-routine an enumerator to solve the situation (imo).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-02T09:03:24Z\u0022 title=\u002207/02/2013 09:03  AM\u0022 data-short=\u002211 yr\u0022\u003EJuly 2, 2013\u003C/time\u003E by Razchek\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"tek_604","CreatedById":59699,"CreatedDateTime":"2013-07-02T09:30:17Z","Content":"\n\u003Cp\u003EDoes anyone know if the pointer to a part remains valid if the part is no longer a part of the current vessel? This would seem to be the easiest way to check for a parts existance.\u003C/p\u003E\n"},{"CreatedByName":"Razchek","CreatedById":62645,"CreatedDateTime":"2013-07-02T09:48:12Z","Content":"\n\u003Cp\u003EonDecouple is called before the OnUndock GameEvent is.\u003C/p\u003E\u003Cp\u003E--\u003C/p\u003E\u003Cp\u003EWhile onDecouple is being executed the part is still connected and the attachJoint still remains.\u003C/p\u003E\u003Cp\u003EWith the OnUndock callback the above is not true and the part is no longer in the original vessel hierarchy.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-02T09:50:58Z\u0022 title=\u002207/02/2013 09:50  AM\u0022 data-short=\u002211 yr\u0022\u003EJuly 2, 2013\u003C/time\u003E by Razchek\u003C/strong\u003E\n\u003C/span\u003E\n"}]}