{"TopicId":142962,"ForumId":55,"TopicTitle":"Allow parts to be connected in a loop in the VAB","CreatedByName":"THX1138","CreatedById":113955,"CreatedDateTime":"2016-07-02T10:20:56Z","PageNum":1,"Articles":[{"CreatedByName":"THX1138","CreatedById":113955,"CreatedDateTime":"2016-07-02T10:20:56Z","Content":"\n\u003Cp\u003E\nAllow parts to be connected in loops in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E so the situation in the screenshot below doesn\u0027t happen. It\u0027s important for large asteroid redirects.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022xkvultM.png\u0022 class=\u0022ipsImage\u0022 height=\u0022562\u0022 src=\u0022http://i.imgur.com/xkvultM.png\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Rocket In My Pocket","CreatedById":154640,"CreatedDateTime":"2016-07-02T12:17:40Z","Content":"\n\u003Cp\u003E\nI\u0027m pretty sure the tree structure system would be a a lot of work to redesign or else they\u0027d have done it by now.\n\u003C/p\u003E\n\u003Cp\u003E\nI certainly feel your pain though, using struts is a messy work around that adds a lot of drag, extra mass, and most importantly a bunch of additional parts to your part count.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s definitely a problem but I\u0027m not sure it\u0027s one that will ever get fixed sadly.\n\u003C/p\u003E\n"},{"CreatedByName":"Kerbart","CreatedById":78303,"CreatedDateTime":"2016-07-02T12:25:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222658193\u0022 data-ipsquote-contentid=\u0022142962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467454856\u0022 data-ipsquote-userid=\u0022113955\u0022 data-ipsquote-username=\u0022THX1138\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, THX1138 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAllow parts to be connected in loops in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E so the situation in the screenshot below doesn\u0027t happen. It\u0027s important for large asteroid redirects.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInternally a ship is organized as a tree; each part (node) is connected to one\u2014and one\u00A0\u003Cem\u003Eonly\u003C/em\u003E\u2014parent node. The tree structure has many advantages; it allows unlimited (partwise) ship sizes, makes it easy to establish fuel flow and staging and most of all it\u0027s a well understood structure in computer science.\n\u003C/p\u003E\n\u003Cp\u003E\nThe downside is that loops in the ship topology are not allowed; this is not something that can easily be fixed. You will have to resort to struts and docking ports to close loops. To manage your expectations: it will likely never happen.\n\u003C/p\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2016-07-02T17:54:28Z","Content":"\n\u003Cp\u003E\nNot only would it be an \u003Cem\u003E\u003Cu\u003Eenormous\u003C/u\u003E\u003C/em\u003E job for Squad to change this, but it would also break lots and lots of mods.\u00A0 Certainly it would break pretty much every one of my own.\u00A0 Would require a substantial rewrite, it\u0027s not a simple one-line fix.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027d guess that this one\u0027s in the \u0022not gonna happen\u0022 category.\u00A0 I wouldn\u0027t say \u0022never,\u0022 just because that\u0027s an awfully strong word and I try to avoid using it... but I\u0027d say that at best it would be way, \u003Cem\u003E\u003Cu\u003Eway\u003C/u\u003E\u003C/em\u003E down the priority queue.\n\u003C/p\u003E\n"},{"CreatedByName":"THX1138","CreatedById":113955,"CreatedDateTime":"2016-07-02T20:05:59Z","Content":"\n\u003Cp\u003E\nOkay, but how come struts are able to overcome this? Doesn\u0027t a solution of a sort lie in the mechanism behind struts?\n\u003C/p\u003E\n"},{"CreatedByName":"swjr-swis","CreatedById":152460,"CreatedDateTime":"2016-07-02T20:10:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222658734\u0022 data-ipsquote-contentid=\u0022142962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467489959\u0022 data-ipsquote-userid=\u0022113955\u0022 data-ipsquote-username=\u0022THX1138\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, THX1138 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOkay, but how come struts are able to overcome this? Doesn\u0027t a solution of a sort lie in the mechanism behind struts?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBecause the \u0027stray\u0027 end of struts are not actually connected the way other parts do. The part description basically just says \u0027it points in that direction\u0027 and the game code \u0027makes\u0027 it connected to whatever it first touches in that direction.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-02T20:10:51Z\u0022 title=\u002207/02/2016 08:10  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 2, 2016\u003C/time\u003E by swjr-swis\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Megadeath","CreatedById":144236,"CreatedDateTime":"2016-07-03T01:46:52Z","Content":"\n\u003Cp\u003E\nYeah, I wish things were different on this front too. More for 1\u0026gt;3\u0026gt;1 connections and similar, but other reasons too.\n\u003C/p\u003E\n\u003Cp\u003E\nDoesn\u0027t sound feasible though. \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"JYNg","CreatedById":165975,"CreatedDateTime":"2016-07-03T02:02:07Z","Content":"\n\u003Cp\u003E\nSorry but I don\u0027t understand the post. Anyone mind explaining to me? Why is this loop structure important and how is it related to the screenshot?\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Jarin","CreatedById":71395,"CreatedDateTime":"2016-07-03T06:29:18Z","Content":"\n\u003Cp\u003E\nI understand that craft in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E are organized as a \u0022tree\u0022 for the .craft files, but how does the game handle it for craft in flight? Loops are perfectly doable via multidocking after launch, so how is THAT craft data stored?\n\u003C/p\u003E\n"},{"CreatedByName":"Stoney3K","CreatedById":139954,"CreatedDateTime":"2016-07-03T11:56:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222658742\u0022 data-ipsquote-contentid=\u0022142962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467490234\u0022 data-ipsquote-userid=\u0022152460\u0022 data-ipsquote-username=\u0022swjr-swis\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, swjr-swis said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBecause the \u0027stray\u0027 end of struts are not actually connected the way other parts do. The part description basically just says \u0027it points in that direction\u0027 and the game code \u0027makes\u0027 it connected to whatever it first touches in that direction.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAnd is there anything to prevent the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E code from just adding a \u0022pseudo-strut\u0022 to any part which has its attachment node close by another free node, or its node clipping inside the collider of another part?\n\u003C/p\u003E\n\u003Cp\u003E\nRight now the easy way to overcome this problem is to just manually stitch the open nodes to the neighbouring parts with struts, but I don\u0027t see why that can\u0027t be done automatically.\n\u003C/p\u003E\n\u003Cp\u003E\nMultidocking \u0022loops\u0022 are already done this way, one docking port makes the actual node connection where the other ports are just holding the ship together structurally through automatically added, invisible struts.\n\u003C/p\u003E\n"},{"CreatedByName":"swjr-swis","CreatedById":152460,"CreatedDateTime":"2016-07-03T19:52:20Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222659106\u0022 data-ipsquote-contentid=\u0022142962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467511327\u0022 data-ipsquote-userid=\u0022165975\u0022 data-ipsquote-username=\u0022JYNg\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, JYNg said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSorry but I don\u0027t understand the post. Anyone mind explaining to me? Why is this loop structure important and how is it related to the screenshot?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTo make a truss frame solid (or as solid as the stock game allows), as in the given picture, one end of the horizontal trusses between the longer vertical ones has to be \u0027fixed\u0027 with \u003Cs\u003Educt tape\u003C/s\u003E struts, because to actually close a square/loop the game would need to allow two (or more) nodes on any single part to be connected at once, where at this point, it only allows one node to connect.\n\u003C/p\u003E\n\u003Cp\u003E\nHaving to use struts (or docking ports) to overcome this adds more parts, more mass, more drag, is very hard to do without introducing small torque forces or imbalance... and is never quite as solid as it could be if the direct method of attaching were possible.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222659282\u0022 data-ipsquote-contentid=\u0022142962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467527358\u0022 data-ipsquote-userid=\u002271395\u0022 data-ipsquote-username=\u0022Jarin\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, Jarin said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nhow does the game handle it for craft in flight? Loops are perfectly doable via multidocking after launch, so how is THAT craft data stored?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe game makes a special case out of struts and docked ports, checking on their connected state (and presumably, calculating the forces) through a separate module.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222659441\u0022 data-ipsquote-contentid=\u0022142962\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467546994\u0022 data-ipsquote-userid=\u0022139954\u0022 data-ipsquote-username=\u0022Stoney3K\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Stoney3K said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd is there anything to prevent the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E code from just adding a \u0022pseudo-strut\u0022 to any part which has its attachment node close by another free node, or its node clipping inside the collider of another part?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOther than missing code to do so, no. Like you said, it\u0027s already done in the game for \u0027special\u0027 cases like struts, docked ports, and with invisible struts inside fairings (and bays?).\n\u003C/p\u003E\n\u003Cp\u003E\nPersonally I wouldn\u0027t want it done automatically, or only automatically: game defaults seem to frequently be at odds with my design goals/needs, so I would prefer it to be something I can do or override manually.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, holding a certain key in the editor makes attachment nodes visible even without holding a part... at which point the nodes become right-clickable, with the option menu showing an \u0027attach\u0027 button. Clicking that button then surface-attaches that node to any suitably nearby part (or to keep the tree structure as it is now, ray-cast a pseudo-strut, but then with the same attachment strength as a regular surface/node attachment). Alternatively, at clicking the button, let me highlight exactly which part I want to attach that node to (like how the stock root gizmo works) - this would probably work better for those cases where more than one part is nearby enough to be a candidate.\n\u003C/p\u003E\n\u003Cp\u003E\nIf it requires a separate module, call it ModuleCloseStructure or somesuch. All it needs to store is what other part it is attached to and at what location.\n\u003C/p\u003E\n\u003Cp\u003E\nA problem remains with what to do with fuel/EC routing, but this is solved for docking ports already as well, so code-wise that too can serve as an example.\n\u003C/p\u003E\n"}]}