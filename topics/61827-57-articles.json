{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":57,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-01T22:31:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022qwesr\u0022 data-cite=\u0022qwesr\u0022\u003E\u003Cdiv\u003EHuh, so lets say I pass a List type to another file as a parameter, will the same thing still apply or would a copy of the list be made locally in that file?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe file only stores the code prior to loading. Once its running, it\u0027s running in the same memory space as the program that called it. And yes, it\u0027s the same object passed by reference. It\u0027s following the same rules as Java and C# do. Primitives pass by value. Anything non-primitive passes by reference. I don\u0027t like this, as it\u0027s against the feel of how the rest of kOS works, being that kOS does not feel particularly object oriented on the surface of it. (I mean it doesn\u0027t even have local variables except for parameters).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-01T22:34:51Z\u0022 title=\u002209/01/2014 10:34  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 1, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-02T20:52:46Z","Content":"\n\u003Cp\u003EOw. Owowowow.\u003C/p\u003E\u003Cp\u003EI\u0027m trying to teach myself orbital mechanics between bughunts and operational firefights here at work, and it\u0027s very slow going. My interest is to create some scripts that will do things like: match a target\u0027s orbit (including inclination and eccentricity), intercept the target in its orbit (rescue/repair missions), and/or insert itself into the target\u0027s orbit at some fraction of its orbital period ahead of or behind the target (satellite deployment). Technically, that\u0027s really only two scripts, since an intercept would have the difference of the Mean Anomalies = 0. I was thinking I could use the first to get a solid basis for the next part, which would do straight prograde/retrograde burns to adjust the orbital/angular position of the ship to the target.\u003C/p\u003E\u003Cp\u003EIt seems (and I may be skimming over or outright missing a step here) that the :LAN, :MEANANOMALYATEPOCH, :ARGUMENTOFPERIAPSIS and I\u0027m sure a few other constants would be of great use. I\u0027m just having trouble gathering together enough concurrent cycles to put them together in a coherent fashion, rather than jotting down quick notes that I can barely decipher later...\u003C/p\u003E\u003Cp\u003EI\u0027m not looking for efficiency, just correctness. Can anyone help me understand what the heck I\u0027m doing? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Alternately, does anyone know offhand if the frames of reference for the various values I mentioned are compatible? I know that KSP plays fast and loose with coordinate systems, but I\u0027m hoping that they are at least consistent within the current view.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-03T04:10:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIt seems (and I may be skimming over or outright missing a step here) that the :LAN, :MEANANOMALYATEPOCH, :ARGUMENTOFPERIAPSIS and I\u0027m sure a few other constants would be of great use.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wouldn\u0027t call them \u0022constants\u0022, as they\u0027ll change the moment you do any thrust.\u003C/p\u003E\u003Cp\u003ELAN is probably the most useless one because to do anything with it you have to know what the arbitrary basis ray is that it\u0027s referring to. It always has to be defined in terms of something off outside the solar system that stays relatively still (nothing is totally still in the universe, but at least still enough to last for a few centuries before it has to be redefined). In the real world, it\u0027s referring to a ray drawn from Earth to a point in the constellation Ares. KSP does not have a constellation Ares, nor in fact does it have such a thing as \u0022outside the solar system\u0022. There\u0027s nothing for the basis vector to be pointing AT. LAN is therefore an arbitrary number based on something invisible inside the KSP code that we don\u0027t have access to.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-03T14:06:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI wouldn\u0027t call them \u0022constants\u0022, as they\u0027ll change the moment you do any thrust.\u003Cp\u003ELAN is probably the most useless one because to do anything with it you have to know what the arbitrary basis ray is that it\u0027s referring to. It always has to be defined in terms of something off outside the solar system that stays relatively still (nothing is totally still in the universe, but at least still enough to last for a few centuries before it has to be redefined). In the real world, it\u0027s referring to a ray drawn from Earth to a point in the constellation Ares. KSP does not have a constellation Ares, nor in fact does it have such a thing as \u0022outside the solar system\u0022. There\u0027s nothing for the basis vector to be pointing AT. LAN is therefore an arbitrary number based on something invisible inside the KSP code that we don\u0027t have access to.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETrue enough, but if it\u0027s consistent, then it doesn\u0027t really matter what it\u0027s pointing at. The key is being able to determine when we reach the ascending node (and by inference, the descending node), so we can suss out how to match inclination. But before doing that, we\u0027d want to use the argument of periapsis to match the eccentricity of our orbit. Not sure how, yet (the maths are confusing without being able to seriously focus on them due to work and... \u003Cstrong\u003ESQUIRREL!\u003C/strong\u003E), but there\u0027s bound to be a way to use the mean anomaly to help space out a network of satellites.\u003C/p\u003E\n"},{"CreatedByName":"Lilleman","CreatedById":112321,"CreatedDateTime":"2014-09-03T14:20:37Z","Content":"\n\u003Cp\u003EFor the inclination, you can take a look \u003Ca href=\u0022http://ksp.baldev.de/kos/mtkv3/incnode.txt\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E, it\u0027s a script from Mission Toolkit.\u003C/p\u003E\u003Cp\u003EFor the eccentricity however, I don\u0027t have any useful link, sorry.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-03T14:42:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Lilleman\u0022 data-cite=\u0022Lilleman\u0022\u003E\u003Cdiv\u003EFor the inclination, you can take a look \u003Ca href=\u0022http://ksp.baldev.de/kos/mtkv3/incnode.txt\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E, it\u0027s a script from Mission Toolkit.\u003Cp\u003EFor the eccentricity however, I don\u0027t have any useful link, sorry.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah... I use the toolkit, but the math is pretty dry, and I have trouble visualizing it. I may have to write it out myself, and work it out that way. I just keep thinking there\u0027s a simpler (script-wise) way of doing things. I mean, we\u0027ve got the inclinations of the orbits and the longitude of ascending node. It seems (again, without actually doing the maths, or being able to fire up KSP to do some field trials) that it should be straightforward to determine the maneuver node to match inclination. It\u0027s just been too long since I\u0027ve done any real work with vector math.\u003C/p\u003E\n"},{"CreatedByName":"skips","CreatedById":89142,"CreatedDateTime":"2014-09-03T23:04:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EOnce its running, it\u0027s running in the same memory space as the program that called it. And yes, it\u0027s the same object passed by reference.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe documentation should be very explicit about this issue. All of the programs that are running are sharing the same name space (i.e., the name \u0022myVariable\u0022 is common to all of the programs). This behavior can easily generate problems where a program runs another program that changes one of its variables. The following code demonstrates the behavior:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//  mission controller\u003Cbr\u003E//  edit this file to change the mission\u003Cbr\u003E//\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Begin mission.\u0022.\u003Cbr\u003Elegs on.\u003Cbr\u003Ewait 2.\u003Cbr\u003Eset landedHeight to alt:radar.\u003Cbr\u003Eprint \u0022Landed height set to \u0022 \u002B round( landedHeight, 3).\u003Cbr\u003E\u003Cbr\u003Edeclare myThrottle.\u003Cbr\u003Eset myThrottle to 0.\u003Cbr\u003Elock throttle to myThrottle.\u003Cbr\u003Eprint \u0022Throttle is \u0022 \u002B round( myThrottle, 2 ).\u003Cbr\u003E\u003Cbr\u003Eset missionParams to list().\u003Cbr\u003Eset missionParams:add to landedHeight.\u003Cbr\u003E\u003Cbr\u003Erun test1.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Landed height is now \u0022 \u002B round( landedHeight, 3).\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Mission complete.\u0022.\u003C/pre\u003E\u003Cp\u003E and \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//  test1 - for experimenting\u003Cbr\u003E//\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Mission parameters: \u0022.\u003Cbr\u003Efor item in missionParams {\u003Cbr\u003E    print item.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Landed height is now \u0022 \u002B round( landedHeight, 3).\u003Cbr\u003E\u003Cbr\u003Edeclare landedHeight.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Landed height in tst \u0022 \u002B round( landedHeight, 3).\u003Cbr\u003E\u003Cbr\u003Eset landedHeight to 0.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Landed height in tst \u0022 \u002B round( landedHeight, 3).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe output should be \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EBegin mission.\u003Cbr\u003ELanded height set to 4.604\u003Cbr\u003EThrottle is 0\u003Cbr\u003EMission parameters:\u003Cbr\u003E4.60407543182373\u003Cbr\u003ELanded height is now 4.604\u003Cbr\u003ELanded height in test 0\u003Cbr\u003ELanded height in test 0\u003Cbr\u003ELanded height is now 0\u003Cbr\u003EMission complete.\u003Cbr\u003EProgram ended.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EConcerning your documentation woes: you might consider implementing an info suffix for all of your structures that prints out the names of all of the properties and suffixes for that structure. Users can use this capability to determine what is in a structure from the interactive window rather than searching the documentation. Keeping that information up to date becomes part of the maintenance of the structure rather than a separate documentation task.\u003C/p\u003E\u003Cp\u003EFinally, it appears to me that the information that you can extract on the engines is woefully inadequate. It is difficult to build scripts that intelligently control the spacecraft when it is not possible to tell how much thrust a throttle setting will generate _and_ in which direction the thrust will be applied. I have tried several approaches and none of them have created usable results. So far the best that I can do is to throttle the engines on and then use the ship:maxthrust quantity with the assumption that it is applied in the ship:facing direction. This approach fails when there are multiple engines and one or more of them have been thrust limited or have no fuel. \u003C/p\u003E\u003Cp\u003EOtherwise the kOS has been a blast for writing mission controllers like those that are used for sounding rockets.\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-04T01:02:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003EThe documentation should be very explicit about this issue. All of the programs that are running are sharing the same name space (i.e., the name \u0022myVariable\u0022 is common to all of the programs). This behavior can easily generate problems where a program runs another program that changes one of its variables. The following code demonstrates the behavior:\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m sure the fact that all variables are global is mentioned in several places.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EConcerning your documentation woes: you might consider implementing an info suffix for all of your structures that prints out the names of all of the properties and suffixes for that structure. Users can use this capability to determine what is in a structure from the interactive window rather than searching the documentation. Keeping that information up to date becomes part of the maintenance of the structure rather than a separate documentation task.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s already a thing we\u0027ve thought of. Development of basic low-laying infrastructure (like local variables, and self-documenting structures) has been very slow largely because not everyone has had time to be involved of late. Major sweeping changes like would be required to implement such things throughout the C# code require buy-in from everyone, and a lot of the devs have been stuck in real life issues and unable to wrangle the free time for that sort of thing. Marianoapp - the one almost solely responsible for the script compiler that makes \u0022opcodes\u0022 and faster execution, has been off in end-of-grad-school crunch time for a while. It\u0027s very hard to make sweeping changes when key devs aren\u0027t around to get their OK on ripping their code apart and rebuilding it a different way.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EFinally, it appears to me that the information that you can extract on the engines is woefully inadequate. It is difficult to build scripts that intelligently control the spacecraft when it is not possible to tell how much thrust a throttle setting will generate _and_ in which direction the thrust will be applied.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat\u0027s the use case for building a ship where not all the engines thrust the same direction? I don\u0027t understand what you\u0027re trying to do from your description.\u003C/p\u003E\n"},{"CreatedByName":"penatololiy","CreatedById":51797,"CreatedDateTime":"2014-09-04T04:29:31Z","Content":"\n\u003Cp\u003EGreat mod =)\u003C/p\u003E\u003Cp\u003EChange default config in \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EGameData\\kOS\\Plugins\\PluginData\\kOS\\config.xml\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u0026lt;?xml version=\u00221.0\u0022 encoding=\u0022utf-8\u0022?\u0026gt;\u003Cbr\u003E\u0026lt;config\u0026gt;\u003Cbr\u003E    ...\u003Cbr\u003E    \u0026lt;bool name=\u0022StartOnArchive\u0022\u0026gt;1\u0026lt;/bool\u0026gt;\u003Cbr\u003E    ...\u003Cbr\u003E\u0026lt;/config\u0026gt;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Efor avoid \u0022switch to 0.\u0022\u003C/p\u003E\n"},{"CreatedByName":"skips","CreatedById":89142,"CreatedDateTime":"2014-09-04T19:35:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWhat\u0027s the use case for building a ship where not all the engines thrust the same direction? I don\u0027t understand what you\u0027re trying to do from your description\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThink VTOL craft.\u003C/p\u003E\u003Cp\u003EThat said, I have a fundamental issue with assuming that the facing of the spacecraft, which is presumably determined by the orientation of the controlling part, is the same as the orientation of the engine, which is a different part. There is nothing in the construction of KSP that requires any specific relationship between these two directions. I think that it would be wise if the mod took the same stance.\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2014-09-04T19:53:11Z","Content":"\n\u003Cp\u003EHi\u003C/p\u003E\u003Cp\u003EDoes any one know of a better way of doing independent throttle controls?\u003C/p\u003E\u003Cp\u003EI have tried changing the SET commands to LOCK and moving it out of the UNTIL loop but with lock i get a syntax error.\u003C/p\u003E\u003Cp\u003EThe action groups are just a temporary measure so that i can test this part independently.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET THROTTLE TO 1.\u003Cbr\u003ESET fl TO 0. // front left\u003Cbr\u003ESET fr TO 0. //front right\u003Cbr\u003ESET bl TO 0. //back left\u003Cbr\u003ESET br TO 0. //back right\u003Cbr\u003ESET aux TO 0.\u003Cbr\u003ELIST ENGINES IN engList.\u003Cbr\u003E\u003Cbr\u003E// input section not important; used for testing only.\u003Cbr\u003EON ag1 {\u003Cbr\u003E  SET fl TO fl \u002B 10.\u003Cbr\u003E   IF fl \u0026gt; 100 {\u003Cbr\u003E    SET fl TO 100.\u003Cbr\u003E  }.\u003Cbr\u003E  PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003EON ag2 {\u003Cbr\u003E  SET fl TO fl - 10.\u003Cbr\u003E  IF fl \u0026lt; 0 {\u003Cbr\u003E    SET fl TO 0.\u003Cbr\u003E  }.\u003Cbr\u003E  PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003EON ag3 {\u003Cbr\u003E  SET fr TO fr \u002B 10.\u003Cbr\u003E  IF fr \u0026gt; 100 {\u003Cbr\u003E    SET fr TO 100.\u003Cbr\u003E  }.\u003Cbr\u003E  PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003EON ag4 {\u003Cbr\u003E  SET fr TO fr - 10.\u003Cbr\u003E  IF fr \u0026lt; 0 {\u003Cbr\u003E    SET fr TO 0.\u003Cbr\u003E  }.\u003Cbr\u003E  PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003EON ag5 {\u003Cbr\u003E  SET bl TO bl \u002B 10.\u003Cbr\u003E  IF bl \u0026gt; 100 {\u003Cbr\u003E    SET bl TO 100.\u003Cbr\u003E  }.\u003Cbr\u003E  PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003EON ag6 {\u003Cbr\u003E  SET bl TO bl - 10.\u003Cbr\u003E  IF bl \u0026lt; 0 {\u003Cbr\u003E    SET bl TO 0.\u003Cbr\u003E  }.\u003Cbr\u003E  PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003EON ag7 {\u003Cbr\u003E  SET br TO br \u002B 10.\u003Cbr\u003E  IF br \u0026gt; 100 {\u003Cbr\u003E    SET br to 100.\u003Cbr\u003E  }.\u003Cbr\u003E  PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003EON ag8 {\u003Cbr\u003E  SET br TO br - 10.\u003Cbr\u003E  IF br \u0026lt; 0 {\u003Cbr\u003E    SET br TO 0.\u003Cbr\u003E  }.\u003Cbr\u003E  PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// this is the key part.\u003Cbr\u003EUNTIL 1 \u0026gt; 2 {  //again for demo purposes \u003Cbr\u003E  FOR ENG IN engList {\u003Cbr\u003E   IF ENG:STAGE = 2 {\u003Cbr\u003E      SET ENG:THRUSTLIMIT TO fl.\u003Cbr\u003E    }\u003Cbr\u003E    ELSE IF ENG:STAGE = 3 {\u003Cbr\u003E     SET ENG:THRUSTLIMIT TO fr.\u003Cbr\u003E    }\u003Cbr\u003E    ELSE IF ENG:STAGE = 4 {\u003Cbr\u003E     SET ENG:THRUSTLIMIT TO bl.\u003Cbr\u003E    }\u003Cbr\u003E   ELSE IF ENG:STAGE = 5 {\u003Cbr\u003E      SET ENG:THRUSTLIMIT TO br.\u003Cbr\u003E    }\u003Cbr\u003E    ELSE {\u003Cbr\u003E     IF ENG:THROTTLELOCK = FALSE {\u003Cbr\u003E        SET ENG:THRUSTLIMIT TO aux.\u003Cbr\u003E      }.\u003Cbr\u003E    }.\u003Cbr\u003E  }.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-04T19:56:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003EThink VTOL craft.\u003Cp\u003EThat said, I have a fundamental issue with assuming that the facing of the spacecraft, which is presumably determined by the orientation of the controlling part, is the same as the orientation of the engine, which is a different part. There is nothing in the construction of KSP that requires any specific relationship between these two directions. I think that it would be wise if the mod took the same stance.\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou may have to assume that engines face away from their direction of thrust, then iterate over all active engines, adding up their vectors, scaled by their maxthrust multiplied by their thrustlimit modifier. This would give you the effective vector of thrust. The unpleasant part would be determining the CoT, since I don\u0027t immediately see a way to determine the position of the engines. And that also doesn\u0027t take into account efficiency changes due to atmospheric density. That\u0027s if you wanted to precompute the value. But if you want the current thrust vector, it\u0027s even easier, since you can get the current thrust, and you don\u0027t have to worry about efficiency or thrust limiters.\u003C/p\u003E\u003Cp\u003EI don\u0027t know how much additional information is available from KSP, and just hasn\u0027t been exposed, and how much would have to be computed by the plugin.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-04T20:10:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TDW\u0022 data-cite=\u0022TDW\u0022\u003E\u003Cdiv\u003EHi\u003Cp\u003EDoes any one know of a better way of doing independent throttle controls?\u003C/p\u003E\u003Cp\u003EI have tried changing the SET commands to LOCK and moving it out of the UNTIL loop but with lock i get a syntax error.\u003C/p\u003E\u003Cp\u003EThe action groups are just a temporary measure so that i can test this part independently.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EI don\u0027t think you can set the thrustlimit in kerbscript. You might consider one of the throttle plugins that allows you to use action groups to control the throttles. Of course, then you\u0027re limited to the 10 default action groups (until/unless someone adds AGX support to kOS)...\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EI was wrong! \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// This DOES work (if ENGINE is a valid engine)\u003Cbr\u003ESET ENGINE:THRUSTLIMIT TO 0.5.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-17T13:53:30Z\u0022 title=\u002210/17/2014 01:53  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 17, 2014\u003C/time\u003E by madlemur\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2014-09-04T20:42:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EI don\u0027t think you can set the thrustlimit in kerbscript. You might consider one of the throttle plugins that allows you to use action groups to control the throttles. Of course, then you\u0027re limited to the 10 default action groups (until/unless someone adds AGX support to kOS)...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe scrip i posted works the issue i am having with it is that while i can set thrustlimit i cant find a way to lock it and would prefer not to loop it.\u003C/p\u003E\u003Cp\u003Ei have included the test craft file in the spoiler if you want to play with it. (ag10 starts the engines if you stage them on the script cant tell which is which)\u003C/p\u003E\u003Cp\u003EEDIT: \u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E does not seem to work and i didn\u0027t want to take up that much space. is there a way of attaching text files to a post here?\u003C/p\u003E\u003Cp\u003EEDIT 2: \u003Ca href=\u0022https://drive.google.com/uc?export=download\u0026amp;id=0B2X2pcwft9VddTA1eHhTLUZfcWc\u0022 rel=\u0022external nofollow\u0022\u003Ecraft file\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-05T12:42:13Z\u0022 title=\u002209/05/2014 12:42  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 5, 2014\u003C/time\u003E by TDW\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-05T09:19:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003EThink VTOL craft.\u003Cp\u003EThat said, I have a fundamental issue with assuming that the facing of the spacecraft, which is presumably determined by the orientation of the controlling part, is the same as the orientation of the engine, which is a different part. There is nothing in the construction of KSP that requires any specific relationship between these two directions. I think that it would be wise if the mod took the same stance.\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELOCK STEERING is based on where you are pointing on the navball. There is no additional problem kOS is introducing that wasn\u0027t already there in the game in the first place. If you\u0027re trying to travel in a direction perpendicular to your navball facing you still get the exact same problem in manual piloting - the direction the game thinks you\u0027re pointed isn\u0027t the direction you\u0027re actually going.\u003C/p\u003E\u003Cp\u003EWhy a special exception for engines? Wouldn\u0027t it be sufficient to get the orientation of any part, and not care if said part was an engine or some other sort of part? That is in the vague future plans.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-05T09:23:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TDW\u0022 data-cite=\u0022TDW\u0022\u003E\u003Cdiv\u003EEDIT: \u003C/div\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cdiv\u003E does not seem to work and i didn\u0027t want to take up that much space. is there a way of attaching text files to a post here?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs there some reason people seem to want to post their raw unformatted ascii text (like kos code) in spoiler blocks instead of in [ code ] [ /code ] blocks? I see that on a lot of forums and I just don\u0027t understand it.\u003C/p\u003E\u003Cp\u003E[ code ] (without the spaces) works.\u003C/p\u003E\n"},{"CreatedByName":"beelzebub","CreatedById":49518,"CreatedDateTime":"2014-09-05T13:41:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022beelzebub\u0022 data-cite=\u0022beelzebub\u0022\u003E\u003Cdiv\u003EThanks, Steve - I\u0027ll have a fiddle and report back \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EJust posting to report complete success with Steve\u0027s approach to controlling the pitch and yaw of a rocket independently of its roll. Also the use of the vecdrawargs makes life a lot easier when it comes to debugging. This is a lot more satisfying than lock steering to up!.\u003C/p\u003E\u003Cp\u003EFor the benefit of others...\u003C/p\u003E\u003Cp\u003EFirst decide where you want to go:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset desiredHeading to heading(90,90).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen get a vector for the directions along your current pitch and yaw axes:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elock pitchAxis to ship:facing*R(-90,0,0).\u003Cbr\u003Elock pitchVector to pitchAxis:Vector.\u003Cbr\u003Elock yawAxis to ship:facing*R(0,90,0).\u003Cbr\u003Elock yawVector to yawAxis:Vector.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen get the dot product of this vector and your desired pitch/yaw. The *90 is to convert it to degrees (error of 1 = 90 degrees...)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elock pitchError to 90*VDOT(desiredHeading:vector,pitchVector).\u003Cbr\u003Elock yawError to 90*VDOT(desiredHeading:vector,yawVector).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EYou can get roll error by the obvious way, plus a non-obvious -180:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elock rollTarget to desiredHeading:Roll - 180.\u003Cbr\u003Elock rollError to max(facing:Roll,rTarget) - min(facing:Roll,rollTarget).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFeed these into a PID controller and you\u0027re good to go!\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-05T15:14:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TDW\u0022 data-cite=\u0022TDW\u0022\u003E\u003Cdiv\u003EThe scrip i posted works the issue i am having with it is that while i can set thrustlimit i cant find a way to lock it and would prefer not to loop it.\u003Cp\u003Ei have included the test craft file in the spoiler if you want to play with it. (ag10 starts the engines if you stage them on the script cant tell which is which)\u003C/p\u003E\u003Cp\u003EEDIT: \u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E does not seem to work and i didn\u0027t want to take up that much space. is there a way of attaching text files to a post here?\u003C/p\u003E\u003Cp\u003EEDIT 2: \u003Ca href=\u0022https://drive.google.com/uc?export=download\u0026amp;id=0B2X2pcwft9VddTA1eHhTLUZfcWc\u0022 rel=\u0022external nofollow\u0022\u003Ecraft file\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EInteresting. Sounds like the documentation needs to be updated. It shows \u0026lt;ENGINE\u0026gt;:THRUSTLIMIT as read-only.\u003C/p\u003E\u003Cp\u003EOne thing I would do is put a WAIT 0.001. at the end of your UNTIL loop. What may be happening is the loop is executing several times per tick, and something is going sideways. If you put a teeny-tiny WAIT in there, it will wait until the next tick, and cap out at one run-through per tick.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-05T17:50:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022beelzebub\u0022 data-cite=\u0022beelzebub\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThen get the dot product of this vector and your desired pitch/yaw. The *90 is to convert it to degrees (error of 1 = 90 degrees...)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETechnically, if you want to get degrees you should use inverse trig functions (arccos, arcsin) of the dot product rather than 90*the_dot_product.\u003C/p\u003E\u003Cp\u003EThe dot product will vary from 0 to 1, and thus you will get a number that varies from 0 to 90 by doing what you\u0027re doing, but if you graph the curve of how it varies from 0 to 90, it shouldn\u0027t be a straight line like that. It should be a quadrant of a circle.\u003C/p\u003E\n"},{"CreatedByName":"skips","CreatedById":89142,"CreatedDateTime":"2014-09-05T20:46:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003ELOCK STEERING is based on where you are pointing on the navball. There is no additional problem kOS is introducing that wasn\u0027t already there in the game in the first place. If you\u0027re trying to travel in a direction perpendicular to your navball facing you still get the exact same problem in manual piloting - the direction the game thinks you\u0027re pointed isn\u0027t the direction you\u0027re actually going.\u003Cp\u003EWhy a special exception for engines? Wouldn\u0027t it be sufficient to get the orientation of any part, and not care if said part was an engine or some other sort of part? That is in the vague future plans.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you for your comments. It is clear to me that you and I have very different expectations for this mod. Given that it is your mod, I will back out of the discussion at this time.\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-09-05T21:32:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003EThink VTOL craft.\u003Cp\u003EThat said, I have a fundamental issue with assuming that the facing of the spacecraft, which is presumably determined by the orientation of the controlling part, is the same as the orientation of the engine, which is a different part. There is nothing in the construction of KSP that requires any specific relationship between these two directions. I think that it would be wise if the mod took the same stance.\u003C/p\u003E\u003Cp\u003Eskips\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003EThank you for your comments. It is clear to me that you and I have very different expectations for this mod. Given that it is your mod, I will back out of the discussion at this time.\u003Cp\u003Eskips\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETell us more about your \u0022expectations\u0022. So far you havent mentioned anything that sounds impossible or out of line with our vision for the mod.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-05T21:38:07Z","Content":"\n\u003Cp\u003ESo far, I think the core of any expectations mismatch is how much of the underlying KSP data is surfaced in kerbscript. (Well, and I suppose some linguistic theory surrounding how kerbscript is defined; it\u0027s no Kerbighan \u0026amp; Kritchie...)\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-05T21:44:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skips\u0022 data-cite=\u0022skips\u0022\u003E\u003Cdiv\u003EThank you for your comments. It is clear to me that you and I have very different expectations for this mod. Given that it is your mod, I will back out of the discussion at this time.\u003Cp\u003Eskips\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think it\u0027s more accurate to say that I don\u0027t understand what you\u0027re asking for, and how it would differ from the more generic solution of just getting the orientation of any part (which would cover engines, fuel tanks, whatever), which admittedly doesn\u0027t exist yet but we want it to.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-09-05T21:46:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003ESo far, I think the core of any expectations mismatch is how much of the underlying KSP data is surfaced in kerbscript. (Well, and I suppose some linguistic theory surrounding how kerbscript is defined; it\u0027s no Kerbighan \u0026amp; Kritchie...)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would argue semantics around the word \u0022expectation\u0022. If there is useful data about craft and parts that isnt exposed no one is more serious than Steven and I about exposing it to you guys. From skips last few posts I cannot tell what he wants let alone what data is missing for him to accomplish his goal. I am seriously asking him for more information so we can resolve his issues.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-09-05T21:51:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003ESo far, I think the core of any expectations mismatch is how much of the underlying KSP data is surfaced in kerbscript. (Well, and I suppose some linguistic theory surrounding how kerbscript is defined; it\u0027s no Kerbighan \u0026amp; Kritchie...)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is certainly a part of any problem. There\u0027s a lot of things that would *in principle* be possible but *in practice* given the way the KSP API is structured are very hard to do quickly with limited spare time, using a poorly documented API that often doesn\u0027t do what you assumed it would when you start working on a feature.\u003C/p\u003E\u003Cp\u003EI remember spending about 8 hours of programming trying to figure out how to the use API to work out how to calculate STAGE:LIQUIDFUEL better when it kept returning wrong numbers. It turns out the API for \u0022find all parts that hold resources that this engine can consume\u0022 is a royal mess because theres 3 utterly unrelated things to test for, and also the yellow fuel hoses use a totally different API than every other part does for this, for no apparent reason.\u003C/p\u003E\u003Cp\u003ENone of this was doucmented -it was all found with trial and error, using a system that takes 5 minutes to run a test after each code change because you have to relaunch KSP and start flying the rocket again from the start sometimes.\u003C/p\u003E\n"}]}