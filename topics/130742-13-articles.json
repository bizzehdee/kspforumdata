{"TopicId":130742,"ForumId":34,"TopicTitle":"[1.12.x] kRPC: Control the game using C#, C\u002B\u002B, Java, Lua, Python, Ruby, Haskell, C (Arduino)... (v0.5.4)","CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2016-01-26T08:47:48Z","PageNum":13,"Articles":[{"CreatedByName":"katateochi","CreatedById":35181,"CreatedDateTime":"2017-07-22T19:33:09Z","Content":"\n\u003Cp\u003E\nThis has Ruby support!?! \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u00A0Amazing! definitely going to give this a go.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"plonk","CreatedById":116062,"CreatedDateTime":"2017-07-24T18:24:39Z","Content":"\n\u003Cp\u003E\nJava support, too! \u003Cimg alt=\u0022:cool:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 title=\u0022:cool:\u0022\u003E This is going to be fun. Got the connection test script from the tutorials working, and eagerly looking forward to port some badly slow kOS code containing two nested loops (100 steps each or more) to a kRPC client. Behold! so much possibilities! \u003Cimg alt=\u0022:o\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon2.png\u0022 title=\u0022:o\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThumbs up and thanks, this really made my day (and will do for some others coming). Great stuff.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-24T18:39:57Z\u0022 title=\u002207/24/2017 06:39  PM\u0022 data-short=\u00226 yr\u0022\u003EJuly 24, 2017\u003C/time\u003E by plonk\u003C/strong\u003E\n\u003Cbr\u003Erunning KSP 1.2.2 / kRPC 0.3.8\n\u003C/span\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-07-24T18:42:34Z","Content":"\n\u003Cp\u003E\n@cantab \u00A0- I hadn\u0027t done anything in Python until I started with KRPC - it\u0027s been a GREAT excuse to learn something that\u0027s been on my list for ages. \u00A0 I admit I\u0027ve still got a lot to learn about the philosophy of it - it turns out Python is half programming language and half religion, apparently? \u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWe\u0027ve started putting together this resource of examples - \u00A0\u003Ca href=\u0022https://github.com/krpc/krpc-library\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/krpc/krpc-library\u003C/a\u003E\u00A0 \u00A0 It\u0027s got a lot of room to grow, but in my folder I\u0027ve got fairly simple approaches to some fairly complicated tasks - you can see how to use a PID controller to manage throttle, then see how that gets applied in a complete ascent script... \u00A0or how the exact same PID controller gets used to steer the vessel\u0027s \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E thrusters for a totally automated docking, as an example.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have questions about anything... \u00A0I\u0027ve found this thread is frequented by smart and helpful people so don\u0027t hesitate to ask!\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"lushr","CreatedById":178578,"CreatedDateTime":"2017-07-26T03:58:28Z","Content":"\n\u003Cp\u003E\nIs it possible to get the transformation matrix to convert from one frame to another? Since I ran into issues with singularities in the default KRPC AutoPilot (need to apply forces close to the vertical axis), I\u0027ve been working on implementing\u00A0Wie, Weiss, and Araposthathis 1988\u0027s quaternion attitude controller, as well as a LQR attitude controller, both of which need the\u00A0\u003Cspan style=\u0022color:#404040;\u0022\u003Einertia tensor, which comes by default in the vessel frame (which doesn\u0027t work very well for attitude control...). I could implement what I need by deriving a rotation matrix from the vessel\u0027s pointing angle (since I know the relation between the frame axes), but this is somewhat of a kludge.\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-07-26T05:30:25Z","Content":"\n\u003Cp\u003E\n\u003Ca href=\u0022https://krpc.github.io/krpc/tutorials/reference-frames.html#converting-between-reference-frames\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.github.io/krpc/tutorials/reference-frames.html#converting-between-reference-frames\u003C/a\u003E\u00A0 \u00A0 \u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThat link may do what you need? \u00A0the space_center service has facilities for converting directions, forces, rotations, and positions from one reference frame to another?\n\u003C/p\u003E\n"},{"CreatedByName":"lushr","CreatedById":178578,"CreatedDateTime":"2017-07-26T06:29:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223131399\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221501047025\u0022 data-ipsquote-userid=\u0022118388\u0022 data-ipsquote-username=\u0022artwhaley\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n55 minutes ago, artwhaley said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://krpc.github.io/krpc/tutorials/reference-frames.html#converting-between-reference-frames\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.github.io/krpc/tutorials/reference-frames.html#converting-between-reference-frames\u003C/a\u003E\u00A0 \u00A0 \u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThat link may do what you need? \u00A0the space_center service has facilities for converting directions, forces, rotations, and positions from one reference frame to another?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe problem is that I need the entire inertia tensor matrix, which is a not-particularly-nice-in-the-general-case 3x3 matrix. While I could transform the (three) torque vectors to the vessel frame from my guidance frame and back, that\u0027s an additional 6 RPC calls per iteration I would rather avoid. If I can get a vessel to guidance frame transformation matrix, then all I have to do is multiply the inertia tensor by the vessel to guidance frame matrix, and then I have an inertia tensor in terms of the guidance frame.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSince I constructed the guidance frame, and can relate the vessel frame to the guidance frame with a rotation matrix based on the vessel\u0027s attitude, it\u0027s not an ideal solution (very complicated and application-specific, for one). \u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-07-26T06:38:10Z","Content":"\n\u003Cp\u003E\nAhhh. \u00A0 I don\u0027t believe that is built into the server. \u00A0 With everything you\u0027re trying to accomplish, and your obvious experience in programming... \u00A0have you thought about building your own KRPC service for the ingame C# side? \u00A0 KRPC makes it very easy to tie your own plugin into KRPC - this way you could offload what calculations and controls you wanted to your external script, but also create your own methods server side for items like this that would unduly tax the RPC link?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://krpc.github.io/krpc/extending.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.github.io/krpc/extending.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nhas the details on that. \u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"moritz31","CreatedById":155617,"CreatedDateTime":"2017-07-26T08:10:46Z","Content":"\n\u003Cp\u003E\nHey,\u003Cbr\u003E\u003Cbr\u003E\ndon\u0027t know if i can ask this here, but i have done some simple rocket launch scripts. But now in my vacations i want to go a bit further, with classes and maybe a system which is not only responsible for the active_vessel.\u003Cbr\u003E\nCan someone maybe give me some hints, regarding class structure and ideas about an system(you can pm me or something like that)\u003Cbr\u003E\nReally like kRPC \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\nRegards\u003Cbr\u003E\nMoritz\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-07-26T17:19:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223131481\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221501056646\u0022 data-ipsquote-userid=\u0022155617\u0022 data-ipsquote-username=\u0022moritz31\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, moritz31 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHey,\u003Cbr\u003E\u003Cbr\u003E\ndon\u0027t know if i can ask this here, but i have done some simple rocket launch scripts. But now in my vacations i want to go a bit further, with classes and maybe a system which is not only responsible for the active_vessel.\u003Cbr\u003E\nCan someone maybe give me some hints, regarding class structure and ideas about an system(you can pm me or something like that)\u003Cbr\u003E\nReally like kRPC \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\nRegards\u003Cbr\u003E\nMoritz\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can ask anything! \u00A0 And that\u0027s even the sort of thing that will get an answer! \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m going to assume you\u0027re working in Python? \u00A0Classes are handled like any class in python - you define them and then create an instance of them. \u00A0To my (rather new to python) mind, they\u0027re great for a couple of things - 1, when you have a set of related functions and variables that it makes sense to roll together, and 2 - when you\u0027re going to want multiple copies of the same code/variables at the same time. \u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs far as more advanced scripts go - Launches are a good place to start. \u00A0I know of three fully developed ones -\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe one on the documentation wiki you\u0027ve probably already found -\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://krpc.github.io/krpc/tutorials/launch-into-orbit.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.github.io/krpc/tutorials/launch-into-orbit.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78303-kerbart/\u0026amp;do=hovercard\u0022 data-mentionid=\u002278303\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78303-kerbart/\u0022 rel=\u0022\u0022\u003E@Kerbart\u003C/a\u003E\u0027s \u00A0which is a GREAT example of how python lets you organize a script into classes and make them all work together (though it\u0027s still a bit over my head!)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/bart-r-willems/krpc-launch/blob/master/launch.py\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bart-r-willems/krpc-launch/blob/master/launch.py\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nand mine - which is more linear and less pythonic, but handles most cases to get you to orbit. \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/artwhaley/krpc-library/blob/master/Art_Whaleys_KRPC_Demos/Simple_Launch_Script.py\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/artwhaley/krpc-library/blob/master/Art_Whaleys_KRPC_Demos/Simple_Launch_Script.py\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2017-07-26T17:42:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223131421\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221501050584\u0022 data-ipsquote-userid=\u0022178578\u0022 data-ipsquote-username=\u0022lushr\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, lushr said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe problem is that I need the entire inertia tensor matrix, which is a not-particularly-nice-in-the-general-case 3x3 matrix. While I could transform the (three) torque vectors to the vessel frame from my guidance frame and back, that\u0027s an additional 6 RPC calls per iteration I would rather avoid. If I can get a vessel to guidance frame transformation matrix, then all I have to do is multiply the inertia tensor by the vessel to guidance frame matrix, and then I have an inertia tensor in terms of the guidance frame.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSince I constructed the guidance frame, and can relate the vessel frame to the guidance frame with a rotation matrix based on the vessel\u0027s attitude, it\u0027s not an ideal solution (very complicated and application-specific, for one). \u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBy vessel to guidance frame transformation matrix, I assume you mean just a rotation matrix? I think you could use SpaceCenter.TransformRotation to get the rotation matrix you are after (but as a quaternion) by calling this method with the identity quaternion\u00A0(0,0,0,1), from\u00A0= vessel frame, to = guidance frame.\u00A0And all in one RPC call!\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I\u0027d be very interested in hearing about your experiences/code using LQR or Wie, Weiss, and Araposthathis quaternion attitude controllers. The current autopilot uses a PID based controller that I designed with a very limited knowledge of control theory...\u00A0and it could do with upgrading to something more fancy!\n\u003C/p\u003E\n"},{"CreatedByName":"lordcirth","CreatedById":137417,"CreatedDateTime":"2017-08-21T22:41:25Z","Content":"\n\u003Cp\u003E\nSo I\u0027m on Ubuntu 16.04, I\u0027ve run \u0027pip install --upgrade krpc\u0027 and pip3 as well.\u00A0 Installed kRPC v0.3.9 from \u003Cabbr title=\u0022Comprehensive Kerbal Archive Network (a KSP mod manager)\u0022\u003ECKAN\u003C/abbr\u003E into a clean KSP 1.3.0 install.\u00A0 In Python 2, any time I try to get anything from the vessel, I get this:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u0026gt;\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E krpc                           \n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u0026gt;\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E conn \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E krpc\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Econnect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u003Cabbr title=\u0022Single Stage to Orbit\u0022\u003Essto\u003C/abbr\u003E\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E      \n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u0026gt;\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ship \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E conn\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Espace_center\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eactive_vessel\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u0026gt;\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ship\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ename                                                                          \n\u003C/span\u003E\u003Cspan\u003ETraceback\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Emost recent call last\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                                           \n  \u003C/span\u003E\u003Cspan\u003EFile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u0026lt;stdin\u0026gt;\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Emodule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                                        \n  \u003C/span\u003E\u003Cspan\u003EFile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u0026lt;string\u0026gt;\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Elambda\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                                       \n  \u003C/span\u003E\u003Cspan\u003EFile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022/usr/local/lib/python2.7/dist-packages/krpc/client.py\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E85\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _invoke          \n    service\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E procedure\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E args\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E param_names\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E param_types\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E return_type\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                         \n  \u003C/span\u003E\u003Cspan\u003EFile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022/usr/local/lib/python2.7/dist-packages/krpc/client.py\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E119\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _build_request  \n    request\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Earguments\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eposition\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ei\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E value\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan\u003EEncoder\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eencode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Evalue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E typ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                      \n  \u003C/span\u003E\u003Cspan\u003EFile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022/usr/local/lib/python2.7/dist-packages/krpc/encoder.py\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E45\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E encode          \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cls\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_encode_value\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eobject_id\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cls\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_types\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eas_type\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027uint64\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                        \n  \u003C/span\u003E\u003Cspan\u003EFile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022/usr/local/lib/python2.7/dist-packages/krpc/encoder.py\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E87\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _encode_value   \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E getattr\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003E_ValueEncoder\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027encode_\u0027\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E typ\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprotobuf_type\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Evalue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                      \n  \u003C/span\u003E\u003Cspan\u003EFile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022/usr/local/lib/python2.7/dist-packages/krpc/encoder.py\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E154\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E encode_uint64  \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cls\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_encode_varint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Evalue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                                         \n  \u003C/span\u003E\u003Cspan\u003EFile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022/usr/local/lib/python2.7/dist-packages/krpc/encoder.py\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E line \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E123\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ein\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _encode_varint\n    protobuf_encoder\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003E_VarintEncoder\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ewrite\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E value\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                          \n\u003C/span\u003E\u003Cspan\u003ETypeError\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEncodeVarint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E takes exactly \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E arguments \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E given\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                \n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u0026gt;\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E                                                                                          \u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI\u0027m guessing I\u0027ve got some sort of version mismatch?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: It looks like it\u0027s a version mismatch between krpc and protobuf - except that the changelog at \u003Ca href=\u0022https://github.com/krpc/krpc/releases/tag/v0.3.9\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/krpc/krpc/releases/tag/v0.3.9 \u003C/a\u003Esays protobuf v3.3.0, I downgraded from 3.4.0 and it still doesn\u0027t work.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nprotobuf function: \u003Ca href=\u0022https://github.com/google/protobuf/blob/master/python/google/protobuf/internal/encoder.py#L375\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/google/protobuf/blob/master/python/google/protobuf/internal/encoder.py#L375\u003C/a\u003E\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-22T01:29:16Z\u0022 title=\u002208/22/2017 01:29  AM\u0022 data-short=\u00226 yr\u0022\u003EAugust 22, 2017\u003C/time\u003E by lordcirth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2017-08-22T17:44:35Z","Content":"\n\u003Cp\u003E\nThey changed the interface for the encoder function\u00A0in protobuf version 3.4.0\u00A0(unfortunately they don\u0027t expose the functionality as a public interface....)\n\u003C/p\u003E\n\u003Cp\u003E\nDowngrading to 3.3.0 should fix this. Are you sure you downgraded the package correctly? Maybe try isolating it using a virtualenv?\n\u003C/p\u003E\n"},{"CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-09-03T10:22:35Z","Content":"\n\u003Cp\u003E\nFirst of all, amazing addition to KSP! This is a joy to use.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m having trouble understand how I would go about checking if the current game scene is a certain game scene.\n\u003C/p\u003E\n\u003Cp\u003E\nHow would I do that?\n\u003C/p\u003E\n\u003Cp\u003E\n-FP\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-09-03T11:07:27Z\u0022 title=\u002209/03/2017 11:07  AM\u0022 data-short=\u00226 yr\u0022\u003ESeptember 3, 2017\u003C/time\u003E by Fillipuster\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TheRagingIrishman","CreatedById":165004,"CreatedDateTime":"2017-09-03T12:03:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223163804\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504434155\u0022 data-ipsquote-userid=\u0022146151\u0022 data-ipsquote-username=\u0022Fillipuster\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Fillipuster said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFirst of all, amazing addition to KSP! This is a joy to use.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m having trouble understand how I would go about checking if the current game scene is a certain game scene.\n\u003C/p\u003E\n\u003Cp\u003E\nHow would I do that?\n\u003C/p\u003E\n\u003Cp\u003E\n-FP\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhen writing plugins for KSP, it\u0027s HighLogic.LoadedScene which returns GameScenes.Loading or any of values in the table below. IDK if that applies in KPRC though.\n\u003C/p\u003E\n\u003Ctable style=\u0022background-color:#ffffff;border-spacing:0px;border:1px solid #a8b8d9;color:#000000;font-size:14px;\u0022\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\nLOADING\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003ELOADINGBUFFER\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003EMAINMENU\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003ESETTINGS\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003ECREDITS\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003ESPACECENTER\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003EEDITOR\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003EFLIGHT\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003ETRACKSTATION\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022border-bottom-color:#a8b8d9;border-bottom-style:solid;border-bottom-width:1px;padding:3px 7px 2px;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022border-bottom-style:none;border-right-color:#a8b8d9;border-right-style:solid;border-right-width:1px;padding:3px 7px 2px;vertical-align:top;\u0022\u003E\n\u003Ca style=\u0022color:#3d578c;\u0022 rel=\u0022\u0022\u003E\u003C/a\u003EPSYSTEM\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-09-03T22:06:04Z","Content":"\n\u003Cp\u003E\nI don\u0027t think he\u0027s trying to modify the plugin, I think he\u0027s trying to make a client... \u00A0if I understand right! \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m a novice too at c# - mostly learning as I hack at KRPC\u0027s server code for various reasons, and I haven\u0027t done a c# client yet, but I THINK what you\u0027re looking for are the classes in the client. \u00A0Now, spaceCenter() is accessed as a method, so you probably would need to use reflection to grab it... \u00A0and I hate reflection. \u00A0 BUTTTTT I think I can get you going without that.\n\u003C/p\u003E\n\u003Cp\u003E\nI haven\u0027t TESTED this code but it didn\u0027t throw errors in visual studio and SEEMS like it would work. \u00A0 You can explicitly define the type of a KRPC.Client.Connection object, and hold THAT in your user defined class... then access it\u0027s spaceCenter method when you need to. \u00A0A quick example would be -\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 KRPC.Client.Connection conn = connection;\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 KRPC.Client.Services.SpaceCenter.Vessel vessel = conn.SpaceCenter().ActiveVessel;\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I also explicitly defined the type for a vessel. \u00A0 There... \u00A0may WELL be a way to explicitly define the type for a spaceCenter object as well... but my five minutes of poking through the autocomplete suggestions didn\u0027t show it to me, and this SHOULD get you going until smarter people chime in and make it easier for you.\n\u003C/p\u003E\n"},{"CreatedByName":"TheKraken2000","CreatedById":170884,"CreatedDateTime":"2017-09-05T06:05:29Z","Content":"\n\u003Cp\u003E\nThanks djungelorm for this great mod!\n\u003C/p\u003E\n\u003Cp\u003E\nI used it for learning my first programming language (\u003Cu\u003E\u003Cstrong\u003EJava\u003C/strong\u003E\u003C/u\u003E). I created an library that could be seen as an extension to yours. Because this is the\u00A0first real software I have created, it could be that it is an over engineered clusterlove, but its working, which is nice. If someone wants to try it -\u0026gt; here is the \u003Ca href=\u0022https://github.com/Nik4053/KSP-AGuS-Automatic-Guidance-System\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E\u00A0to the source code and precomiled libraries and executables.\n\u003C/p\u003E\n\u003Cp\u003E\nIt basically is an \u0022autopilot\u0022 that can launch your vessel into an desired orbit around the planet.\u00A0It also can be used as a library for other projects providing\u00A0methods for getting the deltaV of any given stage,\u00A0saving the current orbit of the vessel, automatic staging, formulas for calculating transfers, the mass, parts, burntime, and switching between true, mean and ecc anomaly and a lot more.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor me it was just about testing what I could do, but in the end it\u0027s gotten bigger and bigger.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf anybody has improvements or tips for me how I can improve my coding skills\u00A0your feedback will be deeply\u00A0appreciated!!!\n\u003C/p\u003E\n"},{"CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-09-05T17:20:55Z","Content":"\n\u003Cp\u003E\nThanks for the suggestion \u003Cspan\u003E@TheRagingIrishman, I worked around it by saving a reference to the active vessel instead of the SpaceCenter.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u003Cspan style=\u0022color:#dddddd;\u0022\u003ENow, I\u0027ve run in to another conundrum. I\u0027m wanting to reference the latest 3.9 kRPC dll in a Unity project, but I\u0027m having trouble. Supposedly, it\u0027s a straight forward procedure to add external dlls, you simply drag-n-drop them. The problem arises with the fact that kRPC 3.9 uses .NET 4, which is not supported by Unity. I\u0027d love if there was a way to work around this, hence me writing a reply to this thread. Can you somehow \u0022downgrade\u0022 to .NET3.5 (which Unity supports)? Can you somehow make Unity eat the kRPC3.9 even though it\u0027s .NET4?\u003C/span\u003E\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u003Cspan style=\u0022color:#dddddd;\u0022\u003EAny input is much appreciated \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/span\u003E\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI figured it out myself. In case anyone is interested in adding kRPC to a Unity project, do the following:\n\u003C/p\u003E\n\u003Cp\u003E\n1. Get the kRPC client dll from here: \u003Ca href=\u0022https://github.com/krpc/krpc/releases/download/v0.3.9/krpc-csharp-0.3.9.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/krpc/krpc/releases/download/v0.3.9/krpc-csharp-0.3.9.zip\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n2. Unpack and place the dll file in the Unity project.\n\u003C/p\u003E\n\u003Cp\u003E\n3. Change the build settings by going to Files-\u0026gt;Build Settings-\u0026gt;Player Settings and changing Scripting Runtime Version to .NET4.x.\n\u003C/p\u003E\n\u003Cp\u003E\n4. Simply use kRPC in Unity scripts like you would any other C# project.\n\u003C/p\u003E\n\u003Cp\u003E\n-FP\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-09-05T17:47:08Z\u0022 title=\u002209/05/2017 05:47  PM\u0022 data-short=\u00226 yr\u0022\u003ESeptember 5, 2017\u003C/time\u003E by Fillipuster\u003C/strong\u003E\n\u003Cbr\u003EFound Solution\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2017-09-05T17:38:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223163804\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504434155\u0022 data-ipsquote-userid=\u0022146151\u0022 data-ipsquote-username=\u0022Fillipuster\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 03/09/2017 at 11:22 AM, Fillipuster said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFirst of all, amazing addition to KSP! This is a joy to use.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m having trouble understand how I would go about checking if the current game scene is a certain game scene.\n\u003C/p\u003E\n\u003Cp\u003E\nHow would I do that?\n\u003C/p\u003E\n\u003Cp\u003E\n-FP\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can get this from a client script by calling KRPC.CurrentGameScene (\u003Ca href=\u0022http://krpc.github.io/krpc/csharp/api/krpc.html#property-KRPC.Client.Services.KRPC.KRPC.CurrentGameScene\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://krpc.github.io/krpc/csharp/api/krpc.html#property-KRPC.Client.Services.KRPC.KRPC.CurrentGameScene\u003C/a\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, in python:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eimport krpc\nconn = krpc.connect()\nprint conn.krpc.current_game_scene\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAlso, it returns an enum (see the docs at the link above for all the possible values)\n\u003C/p\u003E\n"},{"CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-09-05T17:45:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223165632\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504633117\u0022 data-ipsquote-userid=\u002276528\u0022 data-ipsquote-username=\u0022djungelorm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, djungelorm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can get this from a client script by calling KRPC.CurrentGameScene (\u003Ca href=\u0022http://krpc.github.io/krpc/csharp/api/krpc.html#property-KRPC.Client.Services.KRPC.KRPC.CurrentGameScene\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://krpc.github.io/krpc/csharp/api/krpc.html#property-KRPC.Client.Services.KRPC.KRPC.CurrentGameScene\u003C/a\u003E)\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, in python:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E krpc\nconn \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E krpc\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Econnect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E conn\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ekrpc\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecurrent_game_scene\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAlso, it returns an enum (see the docs at the link above for all the possible values)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAh, nice! Thanks man.\n\u003C/p\u003E\n\u003Cp\u003E\nNow that I see you\u0027re online, may I just compliment you on kRPC. It\u0027s a complete game-changer for simpit/physical control panel makers! Without kRPC, me and my uncle wouldn\u0027t be able to make the board we are making right now.\n\u003C/p\u003E\n\u003Cp\u003E\nThank you!\n\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2017-09-05T17:48:15Z","Content":"\n\u003Cp\u003E\nMy pleasure \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u00A0Glad you\u0027re enjoying it!!!\n\u003C/p\u003E\n\u003Cp\u003E\nRegarding .NET 3.5 support, I\u0027ve actually implemented\u00A0this for the upcoming v0.3.10\u00A0but haven\u0027t released it yet.\u00A0If you want to try it out now\u00A0you can\u00A0use this pre-release\u00A0version: \u00A0\u003Ca href=\u0022https://krpc.s3.amazonaws.com/deploy/master/966.1/krpc-0.3.10-58-gf0c66fe.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.s3.amazonaws.com/deploy/master/966.1/krpc-0.3.10-58-gf0c66fe.zip\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf you extract that archive, then look in the client folder, and extract the archive for the C# client there is a net35 folder containing the dll.\n\u003C/p\u003E\n\u003Cp\u003E\n(There is no easy way\u00A0to get the v0.3.9 library working with .NET 3.5 as it requires code changes - for example the System.Tuple class which it relies on is not available in .NET 3.5)\n\u003C/p\u003E\n"},{"CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-09-05T17:56:04Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223165640\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504633695\u0022 data-ipsquote-userid=\u002276528\u0022 data-ipsquote-username=\u0022djungelorm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, djungelorm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMy pleasure \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u00A0Glad you\u0027re enjoying it!!!\n\u003C/p\u003E\n\u003Cp\u003E\nRegarding .NET 3.5 support, I\u0027ve actually implemented\u00A0this for the upcoming v0.3.10\u00A0but haven\u0027t released it yet.\u00A0If you want to try it out now\u00A0you can\u00A0use this pre-release\u00A0version: \u00A0\u003Ca href=\u0022https://krpc.s3.amazonaws.com/deploy/master/966.1/krpc-0.3.10-58-gf0c66fe.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://krpc.s3.amazonaws.com/deploy/master/966.1/krpc-0.3.10-58-gf0c66fe.zip\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf you extract that archive, then look in the client folder, and extract the archive for the C# client there is a net35 folder containing the dll.\n\u003C/p\u003E\n\u003Cp\u003E\n(There is no easy way\u00A0to get the v0.3.9 library working with .NET 3.5 as it requires code changes - for example the System.Tuple class which it relies on is not available in .NET 3.5)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI see. Although not tested fully yet, it seems to work by using Unity\u0027s experimental .NET4.6 script runtime environment.\n\u003C/p\u003E\n\u003Cp\u003E\nSidenote: you should make a serial communication API to talk to Arduinos directly via kRPC (or other serial connections), and an Arduino sketch to go along with it :3\n\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2017-09-05T18:10:12Z","Content":"\n\u003Cp\u003E\nI should! I\u0027ve been working on a major update the the underlying workings of kRPC that would make adding more communication protocols quite simple. Hoping to get it released \u0022soon\u0022 - although I think I said the same something similar\u00A0over\u00A0a year ago... I guess that\u0027s the problem with hobby projects!\n\u003C/p\u003E\n"},{"CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-09-05T18:15:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223165656\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504635012\u0022 data-ipsquote-userid=\u002276528\u0022 data-ipsquote-username=\u0022djungelorm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, djungelorm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI should! I\u0027ve been working on a major update the the underlying workings of kRPC that would make adding more communication protocols quite simple. Hoping to get it released \u0022soon\u0022 - although I think I said the same something similar\u00A0over\u00A0a year ago... I guess that\u0027s the problem with hobby projects!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI feel you man. Same deal for my controller project.\n\u003C/p\u003E\n\u003Cp\u003E\nAnother sidenote: Being the creator of kRPC; would you happen to know of anyone who has made standalone map-views or navball displays using kRPC? I\u0027ve been looking for both for ages, but no one seem to have made something like it. I\u0027d preferably not have to make a map view and navball view from scratch in Unity \u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nAlas, I\u0027m just using you as a hotline now xD sorry...\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know if you\u0027ve ever done serial stuff with Arduino, but it\u0027s quite simple. A system like it directly integrated in to kRPC would significantly up the game-changeification factor of kRPC!\n\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2017-09-05T19:05:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223165662\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504635355\u0022 data-ipsquote-userid=\u0022146151\u0022 data-ipsquote-username=\u0022Fillipuster\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n42 minutes ago, Fillipuster said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnother sidenote: Being the creator of kRPC; would you happen to know of anyone who has made standalone map-views or navball displays using kRPC? I\u0027ve been looking for both for ages, but no one seem to have made something like it. I\u0027d preferably not have to make a map view and navball view from scratch in Unity \u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUnfortunately I\u0027ve not heard of such a project (although, maybe check if Telemachus does something like that,\u00A0Although off the top of my head I don\u0027t think it does...)\n\u003C/p\u003E\n\u003Cp\u003E\nIf you do build your own, you could probably use an open source library to do the actual visualization part. I imagine there are lots of options out there. You\u0027d just need to tie it to kRPC as the data source which shouldn\u0027t be too hard. I guess it won\u0027t look exactly like the KSP map view though.\u00A0I did a quick google and found this, for example:\u00A0\u003Ca href=\u0022http://jat.sourceforge.net/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://jat.sourceforge.net/\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Fillipuster","CreatedById":146151,"CreatedDateTime":"2017-09-05T19:10:35Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223165698\u0022 data-ipsquote-contentid=\u0022130742\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221504638358\u0022 data-ipsquote-userid=\u002276528\u0022 data-ipsquote-username=\u0022djungelorm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, djungelorm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUnfortunately I\u0027ve not heard of such a project (although, maybe check if Telemachus does something like that,\u00A0Although off the top of my head I don\u0027t think it does...)\n\u003C/p\u003E\n\u003Cp\u003E\nIf you do build your own, you could probably use an open source library to do the actual visualization part. I imagine there are lots of options out there. You\u0027d just need to tie it to kRPC as the data source which shouldn\u0027t be too hard. I guess it won\u0027t look exactly like the KSP map view though.\u00A0I did a quick google and found this, for example:\u00A0\u003Ca href=\u0022http://jat.sourceforge.net/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://jat.sourceforge.net/\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInteresting... I\u0027ll have to consider using JAT for the map-view clone. Somehow I do feel that it would be easier to do in Unity. I\u0027m more familiar with Unity and C#. I just have to crack the code of drawing elliptical lines using the orbital data from kRPC. No easy task \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E...\n\u003C/p\u003E\n"}]}