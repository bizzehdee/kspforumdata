{"TopicId":170898,"ForumId":36,"TopicTitle":"[WIP] Infernal Robotics - Next","CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-14T17:20:26Z","PageNum":2,"Articles":[{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-20T12:19:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299822\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519126999\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 minutes ago, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThose values in original IR control the internal spring of the joint. By default we only ever used values that meant the spring was at it\u0027s extreme (so the servo always matched its target) or at its minimum (so it became uncontrolled). Members did do tested thought of other values and it made things like shock absorbers possible. One idea kcs123 and I discussed was variable elastic actuators, which are special servos IRL that can dynamically adjust their stiffness, hence his suggestion of having the spring values exposed in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E (either for all parts or a specific subset)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nok... but then we use those without the limits? and therfor\u00A0only for uncontrolled 360\u00B0 joints\u00A0...\n\u003C/p\u003E\n\u003Cp\u003E\nthe\u00A0problem is\u00A0this: the spring\u00A0values... that\u0027s clear, those are related to the \u0022targetPosition\u0022... and the\u00A0damping is related\u00A0to the current movement. What this means is, that if you apply a force, you can pull/push the joint away from the targetPosition... now, if you allow this, then it\u0027s possible (with enough force) to move them over the limits we want for this joint... and since we cannot set those limits on the unity joint itself\u00A0(as explained in an other post), then... what do we do? ignore it? break the joint when it\u0027s moving too far? ... one idea in the old code was to adjust those spring forces while the joint is moving and try to simulate limits like that (but it is almost impossible to get good results from that)... or we\u0027d have to recreate the joint when a scene is reloaded (like this we can somehow \u0022reset\u0022 the zero-position and then set the limits... well... not the way we want them, but almost) ... I tryed that, but... I\u0027m not convinced that this is a good idea\n\u003C/p\u003E\n\u003Cp\u003E\nthe easiest would be if unity would allow limits from -360 to \u002B360 and add also negative limits for translational joints... but... that\u0027s not going to happen soon...\n\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2018-02-20T12:27:10Z","Content":"\n\u003Cp\u003E\nMaybe you can have a setting for rotational parts that lets these values be set if no limits are specified in their config, as I see the value of having both controlled and uncontrolled versions (and adjustable ingame). I remember Ziw doing the code you mention and not getting great results, so I doubt having them for translational parts is viable.\n\u003C/p\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-20T13:05:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299838\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519129630\u0022 data-ipsquote-userid=\u002276163\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n36 minutes ago, ZodiusInfuser said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMaybe you can have a setting for rotational parts that lets these values be set if no limits are specified in their config, as I see the value of having both controlled and uncontrolled versions (and adjustable ingame). I remember Ziw doing the code you mention and not getting great results, so I doubt having them for translational parts is viable.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCurrently that\u0027s the only option I see... because even programing it myself wouldn\u0027t work... I cannot read out the applied force to a joint or the current speed... stuff like that... I\u0027m searching other options right now. Maybe stuff like attaching additional joints or whatever. But I don\u0027t think that\u0027s possible...\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-20T13:34:01Z","Content":"\n\u003Cp\u003E\nWhat about straight up IR shock absorbers? Doesn\u0027t look like any mod currently exists and I think they would be super useful.\n\u003C/p\u003E\n\u003Cp\u003E\nI know I would have uses for them.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022Shocks-Struts.png\u0022 class=\u0022ipsImage\u0022 height=\u0022518\u0022 src=\u0022https://www.vehiclemd.com/wp-content/uploads/Shocks-Struts.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-20T13:39:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299875\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519133641\u0022 data-ipsquote-userid=\u002292196\u0022 data-ipsquote-username=\u0022VR_Dev\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, VR_Dev said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat about straight up IR shock absorbers? Doesn\u0027t look like any mod currently exists and I think they would be super useful.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m not sure if they can be made... in unity it should be possible, but in combination with how KSP loads joints this is probably not working... I don\u0027t know how they load their robotic wheels (those seem to have dampers too)... maybe I should look at this code... *hmm* ...\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-20T13:46:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299879\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519133957\u0022 data-ipsquote-userid=\u0022176740\u0022 data-ipsquote-username=\u0022Rudolf Meier\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, Rudolf Meier said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m not sure if they can be made... in unity it should be possible, but in combination with how KSP loads joints this is probably not working... I don\u0027t know how they load their robotic wheels (those seem to have dampers too)... maybe I should look at this code... *hmm* ...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCouldn\u0027t it just be an uncontrolled extender with spring\\damping?\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-20T13:56:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299882\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519134377\u0022 data-ipsquote-userid=\u002292196\u0022 data-ipsquote-username=\u0022VR_Dev\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, VR_Dev said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCouldn\u0027t it just be an uncontrolled extender with spring\\damping?\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe problem is, when you save/load a sceene with non-relaxed dampers... then it won\u0027t work anymore (the \u0022zero\u0022-position is wrong then and you cannot set those). At least not if you don\u0027t do anything... and at the moment I don\u0027t know what I\u0027d have to do to make them work again (means: to set the \u0022zero\u0022-position).\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-20T14:01:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299893\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519135007\u0022 data-ipsquote-userid=\u0022176740\u0022 data-ipsquote-username=\u0022Rudolf Meier\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, Rudolf Meier said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe problem is, when you save/load a sceene with non-relaxed dampers... then it won\u0027t work anymore (the \u0022zero\u0022-position is wrong then and you cannot set those). At least not if you don\u0027t do anything... and at the moment I don\u0027t know what I\u0027d have to do to make them work again (means: to set the \u0022zero\u0022-position).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSave damping value to a text file OnDestroy?\n\u003C/p\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-20T14:08:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299897\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519135267\u0022 data-ipsquote-userid=\u002292196\u0022 data-ipsquote-username=\u0022VR_Dev\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 minutes ago, VR_Dev said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSave damping value to a text file OnDestroy?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s not the problem... the problem is, that after loading, the current (compressed) state is loaded as \u0022initial-zero\u0022 point (as relaxed) ... and then it compresses again from this point (e.g. due to the weight of a rover) and shift\u0027s further until it\u0027s out of the limits. And this behaviour is part of unity/ksp that cannot be changed that easily... maybe I can figure out a way to work around this problem.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-20T14:10:37Z\u0022 title=\u002202/20/2018 02:10  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 20, 2018\u003C/time\u003E by Rudolf Meier\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-20T14:41:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299903\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519135701\u0022 data-ipsquote-userid=\u0022176740\u0022 data-ipsquote-username=\u0022Rudolf Meier\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n24 minutes ago, Rudolf Meier said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s not the problem... the problem is, that after loading, the current (compressed) state is loaded as \u0022initial-zero\u0022 point (as relaxed) ... and then it compresses again from this point (e.g. due to the weight of a rover) and shift\u0027s further until it\u0027s out of the limits. And this behaviour is part of unity/ksp that cannot be changed that easily... maybe I can figure out a way to work around this problem.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nyeah ok I got it now I think.\u00A0So at first launch it compresses itself to the correct position, but if you go to the space center and back to the vessel the compressed state becomes the new default. Do you know if it is specifically built in Unity or custom Ksp that controls this behavior?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m pretty excited for this idea now. It would be amazing to have some damping when placing a mech foot on the ground. Right now the servo speed PID is the only thing that slows the foot down as it gets close to the surface. Too fast and the foot part just explodes on contact. But a suspension part between the knee and the foot to dampen the impact. That opens up a whole new world of performance.\n\u003C/p\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-20T14:46:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299929\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519137708\u0022 data-ipsquote-userid=\u002292196\u0022 data-ipsquote-username=\u0022VR_Dev\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, VR_Dev said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDo you know if it is specifically built in Unity or custom Ksp that controls this behavior?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s unity... you cannot set the default values. They are set when you create the joint (or set the axis) to the current value. So, if you want to set it to -1 you have to destroy the joint or move it, then recrate or set the axis and move back... stuff like that... most of the time it ends in huge problems. But maybe it\u0027s still possible...\n\u003C/p\u003E\n\u003Cp\u003E\nThe wheels of KSP seem to do this... I\u0027ll try to find out how they do it...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-20T15:44:07Z\u0022 title=\u002202/20/2018 03:44  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 20, 2018\u003C/time\u003E by Rudolf Meier\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2018-02-20T16:09:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299837\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519129184\u0022 data-ipsquote-userid=\u0022176740\u0022 data-ipsquote-username=\u0022Rudolf Meier\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Rudolf Meier said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nthe\u00A0problem is\u00A0this: the spring\u00A0values... that\u0027s clear, those are related to the \u0022targetPosition\u0022... and the\u00A0damping is related\u00A0to the current movement. What this means is, that if you apply a force, you can pull/push the joint away from the targetPosition... now, if you allow this, then it\u0027s possible (with enough force) to move them over the limits we want for this joint... and since we cannot set those limits on the unity joint itself\u00A0(as explained in an other post), then... what do we do? ignore it? break the joint when it\u0027s moving too far? ... one idea in the old code was to adjust those spring forces while the joint is moving and try to simulate limits like that (but it is almost impossible to get good results from that)... or we\u0027d have to recreate the joint when a scene is reloaded (like this we can somehow \u0022reset\u0022 the zero-position and then set the limits... well... not the way we want them, but almost) ... I tryed that, but... I\u0027m not convinced that this is a good idea\n\u003C/p\u003E\n\u003Cp\u003E\nthe easiest would be if unity would allow limits from -360 to \u002B360 and add also negative limits for translational joints... but... that\u0027s not going to happen soon...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nZodiusinfuser already covered it, why I asked for request to expose those values to \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, in flight scene on rigtht click menu. So far we know it can work on rotational free moving parts. It should be allowed for free moving parts to exceed limits -360 to \u002B360 due to game engine limits, as much as unity game engine \u0022see\u0022 that. However, we might set limit values in part config file in different way. Let say, we set limit of movement from 0 to 300 degree and from 0 to -300 degree for inverse movement.\n\u003C/p\u003E\n\u003Cp\u003E\nInside allowed limits of movement, values for spring and damper are linear like it is set in config file or trough right click menu. As soon as limit is exceeded, joint spring forces become exponentially stronger. Hopefully, strong enough to produce feeling like it is colided on something.\u003Cbr\u003E\nI wrote some thoughts how it might be possible to do it in following posts from one that I linked earlier:\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nTo get around of that issue, would be possible to change how \u0022\u003Cstrong\u003EjointSpring\u003C/strong\u003E\u0022 and \u0022\u003Cstrong\u003EjointDamping\u003C/strong\u003E\u0022 behave in game ? As much as I was able to understand trough observation in game and in config file, those numbers are linear coefficient that are passe dto KSP game engine. Would be possible to make it \u003Cstrong\u003Enon linear\u003C/strong\u003E trough IR plugin ? For example, when offset from setpoint is within range of movement, spring and damping forces are linear, like it is now, but when limit is exceeded, it start to be exponentially stronger, trough function\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Eforce * exp(range)\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nor if that would not be enough then 10\u003Cstrong\u003E\u003Csup\u003Erange\u003C/sup\u003E\u003C/strong\u003Efunction could be used, or something like that. It would not ultimatelly prevent parts to move, but if force is strong enough, it could behave like parts are collided, while they actually were not collided. Some kind of hacky way to get around of game engine limits.\n\u003C/p\u003E\n\u003Cp\u003E\nSome other ideas were also poping up as I write this post. If I have understand properly how extendratron is created, it have two joints. One joint attached to craft that is fixed and to one part of mesh, while other can be translated and have second part of mesh. On that translated part you can attach some other parts of craft. So, I come up with idea, if it is possible to create extendratron with three joints instead of just two ?\n\u003C/p\u003E\n\u003Cp\u003E\nFirst joint would be fixed with fixed part of mesh, it is connected to second fixed joint. After that joint comes joint and mesh that can be translated. What IR plugin should do is, when it is time to translate joint (trough user input), it disable middle fixed joint (it\u0027s forces) and after that translate movable joint. Once translation is done, it re-enable middle joint again. That middle joint should always be on fixed position relative to first, unmovable joint.\n\u003C/p\u003E\n\u003Cp\u003E\nNow fun part may be possible. To make only that middle joint with spring flexible forces. Joint at outher end of extendratron should have stiff joint as much as possible.\u003Cbr\u003E\nFrom game engine side of view, it would act as two fixed parts attached together, while you as user can see only one.\n\u003C/p\u003E\n\u003Cp\u003E\nCan something like that work ? You will be always able to know where outher joints need to be, they should not be able to drift anywhere where they should not be able to do, while they would still have some kind of \u0022magnetic\u0022 spring connection between.\n\u003C/p\u003E\n\u003Cp\u003E\nThinking of it more, would be possible to create such mesh with 3 joints ? It should be short and wide enough, though, to be able to hide any possible misalignment of two moving parts.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFor now, in first beta version of mod it would be enough to have additional variables in part config file:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Cstrong\u003EjointSpringDampingExposed\u003C/strong\u003E - true/false\u00A0 - to allow user to change value in \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E and maybe in flight scene too\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EnullPoint\u003C/strong\u003E\u00A0 - 0 degree in above example or angle where jointSpring/Damping are equal, or resting point\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ErotateMinForce\u003C/strong\u003E and \u003Cstrong\u003ErotateMaxForce\u003C/strong\u003E - not true limit, but point where jointSpring force start to rise exponentially\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nIt might not be possible to prevent strange behaviour in all situations, where part rotaqte above desired limits, but it can help a lot if used properly.\u003Cbr\u003E\nCurrently with only adjusting spring and damping values it is possible to set how far some part can move, on picture below, tubes are placed horizontally in \u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E and since one tube is larger and heavier it fall down and rotate free moving rotatron. However, it does not get to 90 degree of rotation due to spring joint forces:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://imgur.com/a/GlGgo\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u0022ZfCMjyi.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022576\u0022 src=\u0022https://i.imgur.com/ZfCMjyi.jpg\u0022 width=\u00221024\u0022\u003E\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhile currently is not possible to have true limits of movement, it might become after releasing of additional WIP mod:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed5619537188\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/169614-anyone-care-to-make-some-simple-models/\u0026amp;do=embed\u0022 style=\u0022height:214px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\nWith that one it might be even possible to create linear shock absorbers, but for now it will be of huge help if you can just expose required things to right click menu. That will allow more experiments and future development while not breaking anything that we know that works for sure. Proper mesh parts and gamebalancing can be done later down the road of development.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2018-02-20T16:29:53Z","Content":"\n\u003Cp\u003E\nJust additional note/reminder, as there is still minor issues with IR GUIs and clicktroughs. In case that some of those old issues still exist, new mod from linuxgamer may help with it:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed4346239373\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/170747-131-click-through-blocker/\u0026amp;do=embed\u0022 style=\u0022height:214px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Ziw","CreatedById":135292,"CreatedDateTime":"2018-02-20T16:40:42Z","Content":"\n\u003Cp\u003E\nI fiddled with jointSpring and jointDamping in a separate branch of IR. Major problem is the way KSP saves the state of the parts in the ship when you change scenes/load ship. In order to make IR springy joints you\u0027d have to go really deep into ship loading routines and override positions of adjacent parts, otherwise you\u0027ll get the infamous \u0022IR part drift\u0022 on save/reload. I tried that but it introduced even more bugs, but you are welcome to try.\n\u003C/p\u003E\n\u003Cp\u003E\nI tried reading the code, but all comments are in German, so I cannot understand them.Feel free to ask about UI parts, they look intimidating at first, but actually quite simple once you figure them out.\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-20T16:53:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223299837\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519129184\u0022 data-ipsquote-userid=\u0022176740\u0022 data-ipsquote-username=\u0022Rudolf Meier\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Rudolf Meier said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nok... but then we use those without the limits? and therfor\u00A0only for uncontrolled 360\u00B0 joints\u00A0...\n\u003C/p\u003E\n\u003Cp\u003E\nthe\u00A0problem is\u00A0this: the spring\u00A0values... that\u0027s clear, those are related to the \u0022targetPosition\u0022... and the\u00A0damping is related\u00A0to the current movement. What this means is, that if you apply a force, you can pull/push the joint away from the targetPosition... now, if you allow this, then it\u0027s possible (with enough force) to move them over the limits we want for this joint... and since we cannot set those limits on the unity joint itself\u00A0(as explained in an other post), then... what do we do? ignore it? break the joint when it\u0027s moving too far? ... one idea in the old code was to adjust those spring forces while the joint is moving and try to simulate limits like that (but it is almost impossible to get good results from that)... or we\u0027d have to recreate the joint when a scene is reloaded (like this we can somehow \u0022reset\u0022 the zero-position and then set the limits... well... not the way we want them, but almost) ... I tryed that, but... I\u0027m not convinced that this is a good idea\n\u003C/p\u003E\n\u003Cp\u003E\nthe easiest would be if unity would allow limits from -360 to \u002B360 and add also negative limits for translational joints... but... that\u0027s not going to happen soon...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhy not just destroy the part when an outside force pushes it past its limit?\u00A0That\u0027s what would happen in real life anyway. It would just mean you have one more realistic thing to consider when engineering robotic structures.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit:\n\u003C/p\u003E\n\u003Cp\u003E\nRight after i posted this I realized if the limit where 60 and the servo were at 60, any tiny force would break it, which isn\u0027t what we want. I was only considering if the servo were at 30, and something forced it 30 degrees past its limit.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223300038\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519144842\u0022 data-ipsquote-userid=\u0022135292\u0022 data-ipsquote-username=\u0022Ziw\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 minutes ago, Ziw said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI fiddled with jointSpring and jointDamping in a separate branch of IR. Major problem is the way KSP saves the state of the parts in the ship when you change scenes/load ship. In order to make IR springy joints you\u0027d have to go really deep into ship loading routines and override positions of adjacent parts, otherwise you\u0027ll get the infamous \u0022IR part drift\u0022 on save/reload. I tried that but it introduced even more bugs, but you are welcome to try.\n\u003C/p\u003E\n\u003Cp\u003E\nI tried reading the code, but all comments are in German, so I cannot understand them.Feel free to ask about UI parts, they look intimidating at first, but actually quite simple once you figure them out.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe more I learn about the springy joints the more I understand why they don\u0027t exist yet. I\u0027m committed to trying to figure it out though. Unfortunately I think the only option is to mess with the loading sequence however.\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe the moduleLandingGear is the key. Having trouble finding documentation though. Also I\u0027m curious as to their loading behavior. I\u0027ll take a look tonight how landing gear/wheels react on a flight state reload.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-20T16:55:58Z\u0022 title=\u002202/20/2018 04:55  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 20, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-20T17:02:03Z","Content":"\n\u003Cp\u003E\nok... I can tell you how they do it... they don\u0027t use unity\u0027s joints... they are doing it by hand... suspensionCompression is calculated from the vessel mass and the ground-hits and things like that...\n\u003C/p\u003E\n\u003Cp\u003E\nwe could do this too... but that\u0027s not done in 5 minutes... could be an interesting project, but I don\u0027t know if I\u0027d like to do it now... I think that\u0027s something for a little bit later in the project, since my first goal was to build IR without the problems we had in the past... extending the capabilities comes later\n\u003C/p\u003E\n\u003Cp\u003E\n... oh no... wait... they do use JointSprings. *hmm* ... and somehow they can set the ... *hmm* ... sorry... I\u0027ve to investigate this further... :-) I\u0027ll be back with more info later...\n\u003C/p\u003E\n\u003Cp\u003E\nah... that\u0027s what I did misinterpret... they use the unity\u0027s WheelCollider and those do have a spring/suspention thing built in... they don\u0027t use ConfigurableJoint\u0027s for this\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-20T17:22:17Z\u0022 title=\u002202/20/2018 05:22  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 20, 2018\u003C/time\u003E by Rudolf Meier\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-20T17:06:05Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223300053\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519146123\u0022 data-ipsquote-userid=\u0022176740\u0022 data-ipsquote-username=\u0022Rudolf Meier\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n23 minutes ago, Rudolf Meier said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nok... I can tell you how they do it... they don\u0027t use unity\u0027s joints... they are doing it by hand... suspensionCompression is calculated from the vessel mass and the ground-hits and things like that...\n\u003C/p\u003E\n\u003Cp\u003E\nwe could do this too... but that\u0027s not done in 5 minutes... could be an interesting project, but I don\u0027t know if I\u0027d like to do it now... I think that\u0027s something for a little bit later in the project, since my first goal was to build IR without the problems we had in the past... extending the capabilities comes later\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah that\u0027s definitely how it should be done.\n\u003C/p\u003E\n\u003Cp\u003E\nDidn\u0027t mean to start a whole suspension discussion. I assumed they fell under the Unity Joint umbrella and would be pretty straightforward to implement in this project.\u00A0 You stick with IR and I can look into suspension.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-20T17:25:43Z\u0022 title=\u002202/20/2018 05:25  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 20, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-20T20:25:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223300038\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519144842\u0022 data-ipsquote-userid=\u0022135292\u0022 data-ipsquote-username=\u0022Ziw\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Ziw said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI fiddled with jointSpring and jointDamping in a separate branch of IR. Major problem is the way KSP saves the state of the parts in the ship when you change scenes/load ship. In order to make IR springy joints you\u0027d have to go really deep into ship loading routines and override positions of adjacent parts, otherwise you\u0027ll get the infamous \u0022IR part drift\u0022 on save/reload. I tried that but it introduced even more bugs, but you are welcome to try.\n\u003C/p\u003E\n\u003Cp\u003E\nI tried reading the code, but all comments are in German, so I cannot understand them.Feel free to ask about UI parts, they look intimidating at first, but actually quite simple once you figure them out.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou are right about the save/load. The only way it could work is to destroy and recreate every joint when it is not loaded in the correct orientation (at least the only I found) ... but it\u0027s difficult. You have to destroy it, rotate the part, re-create and re-rotate the part. And even then you cannot have other limits than from 3\u00B0 to 177\u00B0 (positive and negative) ... I don\u0027t like the idea. It\u0027s a lot of work for almost no result.\n\u003C/p\u003E\n\u003Cp\u003E\nAbout the code... yup... part\u0027s are in german. But those are mostly for the IK-tests I\u0027m doing. The \u0022normal\u0022 code is almost free of german comments and I\u0027m cleaning this even further now... I will release another version soon... there are still a lot of little bugs (e.g. you can move the servos without electric power and stuff like that).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-21T13:56:20Z","Content":"\n\u003Cp\u003E\nDarn! ... now that you said it\u0027s impossible to build that I want to do it... limits for non controlled joints and shock absorbers...\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2018-02-21T17:23:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223300795\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519221380\u0022 data-ipsquote-userid=\u0022176740\u0022 data-ipsquote-username=\u0022Rudolf Meier\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Rudolf Meier said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDarn! ... now that you said it\u0027s impossible to build that I want to do it... limits for non controlled joints and shock absorbers...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHmm, I did some testing when you said that parts drift and you are right. But from my observation in game it is not too bad.\u003Cbr\u003E\nWhat i did is that I created craft with free rotate rotatron, but with some force on jointSpring and dampers. Part is rotated 2-3 degree due to uneven weight of parts attached on left and right side of rotatron. I saved and reloaded game.\n\u003C/p\u003E\n\u003Cp\u003E\nAfter reloading, parts on crafts seems to be in exact position as I saved, except that rotatron shows 2X more degree of rotation than it is saved. It\u0027s not issue for free rotating parts as those don\u0027t have any limits, so that kind of thing is hard to notice in game that some bug is present.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyhow, I was able to fix that trough existing button on right click menu that \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/135292-ziw/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022135292\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/135292-ziw/\u0022 rel=\u0022\u0022\u003E@Ziw\u003C/a\u003E created some time ago \u0022Reattach Fixed Mesh\u0022. It didn\u0027t produce any wild behaviour on craft (parts moving/jumping due to spring forces or something similar). After that, rotatron in question showed again proper 2-3 degree offset as it was when I saved game for first time.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, while not ultimate solution, some workaround might be possible. Again, it might be good to have additional variable in part config file to do following only on certain parts that is safe to do:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nafter loading check for parts that have variable \u0022ForceReattachingFixedMesh\u0022 to true\n\u003C/li\u003E\n\u003Cli\u003E\nexacute piece of code from button \u0022Reattach Fixed Mesh\u0022 only on those parts to set proper nullpoint position\n\u003C/li\u003E\n\u003Cli\u003E\nlet the game engine physics do the rest of stuff\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nAnother possible solution might be observed after \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/167015-whale_2/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022167015\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/167015-whale_2/\u0022 rel=\u0022\u0022\u003E@whale_2\u003C/a\u003E publish his WIP mod, to enable collision on certain craft parts. In video he already showed that part drifting issue is solved with his mod by locking certain parts.\n\u003C/p\u003E\n\u003Cp\u003E\nHope that my rantling is of some help, not much more I\u0027m able to do right now.\n\u003C/p\u003E\n"},{"CreatedByName":"Vince_K","CreatedById":105780,"CreatedDateTime":"2018-02-21T17:24:25Z","Content":"\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#212121;font-size:16px;text-align:left;\u0022\u003EI do not know the modding but maybe it can help. there is a motor module in ksp. why not make two pieces that move together instead of one?\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed707890195\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/102956-102-spin-o-tron-motors-finally-updated/\u0026amp;\u0026amp;do=embed\u0022 style=\u0022height:211px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-21T19:12:46Z","Content":"\n\u003Cp\u003E\nI was testing my new joint and... when you set the spring\u00A0force to extreme values (1e38) then you can destroy the sun :-)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"VR_Dev","CreatedById":92196,"CreatedDateTime":"2018-02-21T19:13:53Z","Content":"\n\u003Cp\u003E\nDid some simple tests with\u00A0ModuleWheelSuspension. Duplicated a wheel and took out everything but that module. Also\u00A0gave it two\u00A0attachment nodes. Hard to tell if it\u0027s working though. Maybe it isn\u0027t designed to use with nodes, or I don\u0027t fully understand the module settings.\n\u003C/p\u003E\n\u003Cp\u003E\nSeems like the model just needs a\u00A0suspensionTransformName in the mesh. This is the documentation. Seems like they already have the re-load situation figured out.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://kerbalspaceprogram.com/api/class_module_wheels_1_1_module_wheel_suspension.html#ac0274b5c097adaa599a366a0240fb8e8\u0022 rel=\u0022\u0022\u003Ehttps://kerbalspaceprogram.com/api/class_module_wheels_1_1_module_wheel_suspension.html#ac0274b5c097adaa599a366a0240fb8e8\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022852Au28.png\u0022 class=\u0022ipsImage\u0022 height=\u002278\u0022 src=\u0022https://i.imgur.com/852Au28.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022OG2IoKd.png\u0022 class=\u0022ipsImage\u0022 height=\u0022432\u0022 src=\u0022https://i.imgur.com/OG2IoKd.png\u0022 width=\u0022241\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-21T19:15:10Z\u0022 title=\u002202/21/2018 07:15  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 21, 2018\u003C/time\u003E by VR_Dev\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-21T19:21:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223300795\u0022 data-ipsquote-contentid=\u0022170898\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221519221380\u0022 data-ipsquote-userid=\u0022176740\u0022 data-ipsquote-username=\u0022Rudolf Meier\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Rudolf Meier said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDarn! ... now that you said it\u0027s impossible to build that I want to do it... limits for non controlled joints and shock absorbers...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nok... the uncontrolled joint with limits seems to be way easier to build than I thought...\u00A0this morning,\u00A0when I was drinking my coffee, I had an idea and... I first thought \u0022that\u0027s too easy, that cannot work\u0022 ... but, I tried and... works! ... perfectly\n\u003C/p\u003E\n\u003Cp\u003E\n... now, the spring-stuff... that\u0027s something I\u0027d have to look at. But at least we do have limits now.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m now preparing the next alpha-release...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-02-21T19:25:30Z\u0022 title=\u002202/21/2018 07:25  PM\u0022 data-short=\u00226 yr\u0022\u003EFebruary 21, 2018\u003C/time\u003E by Rudolf Meier\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Rudolf Meier","CreatedById":176740,"CreatedDateTime":"2018-02-21T19:34:42Z","Content":"\n\u003Cp\u003E\n\u0022rotational shock absorber\u0022 do work as well... *hmm* should also be no problem to build translational ones I guess...\n\u003C/p\u003E\n\u003Cp\u003E\nanyway... I will show you those things in the next upload...\n\u003C/p\u003E\n"}]}