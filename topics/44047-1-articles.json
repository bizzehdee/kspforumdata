{"TopicId":44047,"ForumId":29,"TopicTitle":"PartModules, Required Inputs and isAlwaysActive only for ModuleGenerator?","CreatedByName":"Roboto","CreatedById":79154,"CreatedDateTime":"2013-08-27T14:33:21Z","PageNum":1,"Articles":[{"CreatedByName":"Roboto","CreatedById":79154,"CreatedDateTime":"2013-08-27T14:33:21Z","Content":"\n\u003Cp\u003ERegarding calls to requiresAllInputs and the associated INPUT and OUTPUT_RESOURCE, as well as isAlwaysActive, are they specific to the ModuleGenerator, or can we use them in modules that are not declared as ModuleGenerator? \u003C/p\u003E\u003Cp\u003ESorry if this has been covered before, I have done a few searches and was unable to find anything on that topic.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-09-01T05:57:00Z","Content":"\n\u003Cp\u003EOk so let\u0027s take a step back.\u003C/p\u003E\u003Cp\u003Esince KSP 0.20.0 everything in a cfg file is either a config node, or in a config node, in most cases where addons are involved that\u0027s PART{}\u003C/p\u003E\u003Cp\u003EEverything inside a config node defines information about that config node.\u003C/p\u003E\u003Cp\u003ESo when you say PART{name = bedazzle}, you\u0027re setting the variable \u0022name\u0022 in that particular instance of PART{} to \u0022bedazzle\u0022\u003C/p\u003E\u003Cp\u003EHere\u0027s the trick. You can set any variable you want, and you can set it to anything you want to.\u003C/p\u003E\u003Cp\u003EBut if the code associated with the confignode you do it in does not know to use that variable, it won\u0027t do anything.\u003C/p\u003E\u003Cp\u003EPART{bandana = banana} is totally valid and won\u0027t throw any errors at all.\u003C/p\u003E\u003Cp\u003EPART{}, INTERNAL{}, PROP{}, ATTACH{}, MODEL{}, RESOURCE_DEFINITION{} and RESOURCE{}, all have specific code associated with them, but MODULE{} doesn\u0027t, the code associated with MODULE{}, and thus the code that uses the variables you set in it, is determined by MODULE{name}\u003C/p\u003E\u003Cp\u003ESo yes, you can set requiresAllInputs, input_resource, output_resource, and isAlwaysActive literally anywhere you want.\u003C/p\u003E\u003Cp\u003E\u0027S\u0027not gonna do anything most of the time.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-01T05:59:37Z\u0022 title=\u002209/01/2013 05:59  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 1, 2013\u003C/time\u003E by Greys\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Roboto","CreatedById":79154,"CreatedDateTime":"2013-09-06T20:30:34Z","Content":"\n\u003Cp\u003EOk thanks, Greys, that\u0027s what I was getting at... I wasn\u0027t sure if they actually were usable with all partmodules or not. I see now that they are not, and have to be defined properly. Now that I\u0027m looking at monodev and plugin development, I\u0027m beginning to see how I can actually build out what I\u0027m looking for.\u003C/p\u003E\u003Cp\u003EThanks for the help.\u003C/p\u003E\n"}]}