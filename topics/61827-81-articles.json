{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":81,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-14T08:32:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ouch\u0022 data-cite=\u0022ouch\u0022\u003E\u003Cdiv\u003EYeah there is definitely a problem here.\u003Cp\u003Etake a look at this:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://cloud-4.steampowered.com/ugc/53243610307866655/3A13CFB12778276D3DA2E6BA7CAEAB881E1EBA07/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://cloud-4.steampowered.com/ugc/53243610307866655/3A13CFB12778276D3DA2E6BA7CAEAB881E1EBA07/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIn this picture I have 3 rovers pointing to the exact position where KOS thinks all objects in the world are.\u003C/p\u003E\u003Cp\u003EAs you can see all 3 rovers thinks Enmy Kerman is in a different position. These positions seem to change depending on the rovers orientation in the world.\u003C/p\u003E\u003Cp\u003EHere is the code each rover is running: (note only the color was changed for each rover.)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003Elist targets.\u003Cbr\u003Elist targets in tar.\u003Cbr\u003Eset arrows to list().\u003Cbr\u003Eset x to 0.\u003Cbr\u003Efor t in tar\u003Cbr\u003E{\u003Cbr\u003E    SET arrows:add TO VECDRAWARGS(v(0,0,0), t:position-ship:position, rgb(1,0,0), t:name, 1.0, true).\u003Cbr\u003E}\u003Cbr\u003Euntil abort\u003Cbr\u003E{\u003Cbr\u003E    for t in tar\u003Cbr\u003E    {\u003Cbr\u003E        set arrows[x]:vector to t:position-ship:position.\u003Cbr\u003E        set x to x \u002B 1.\u003Cbr\u003E    }.\u003Cbr\u003E    set x to 0.\u003Cbr\u003E}.\u003Cbr\u003Efor arrow in arrows\u003Cbr\u003E{\u003Cbr\u003E    set arrow to \u0022\u0022.\u003Cbr\u003E}.\u003Cbr\u003Eset arrow to arrows:clear.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI know you said you guys are working on new stuff right now but, won\u0027t this throw off orbital projections and well... Just about everything else? Knowing where stuff is, is pretty important...\u003C/p\u003E\u003Cp\u003EDo you guys an updated version of KOS that I can test out for you?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027d probably need a full compile suite to take the source code and make it into a DLL. I could compile a DLL and try to give it to you but it\u0027s literally changing about 10 times per night as we fiddle with the final debug tests.\u003C/p\u003E\u003Cp\u003EWhen this problem appeared before it was always only off by a few meters, in a way that *didn\u0027t* scale with magnitide. It was always only a few meters even when talking about distances to the moon, which is why it\u0027s not detectable when doing orbital calculations. The problem (in the past which I thought was fixed, darn it), really only was noticed over very short distances because that\u0027s where being a few meters off is relevant.\u003C/p\u003E\n"},{"CreatedByName":"Trewor007","CreatedById":101021,"CreatedDateTime":"2014-11-14T09:46:04Z","Content":"\n\u003Cp\u003Ethere is one thing that\u0027s buging me about this bug. all the drawn vectors are pointing in a good directions, and they are precise on target. So that means they \u0022know\u0022 where Enmy Kerman is, also they know where ate the other rovers. So i suspect the problem is somewhere else. Maybe the controlled rover has a unnecessary \u0022round()\u0022 somewhere in its positioning code. But that\u0027s just a theory.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-14T10:57:42Z","Content":"\n\u003Cp\u003ELet me give a few details about past problems the vecdraw had with this, to give a hint as to why I am suspecting this is an old bug resurfacing due to some code being lost along the way and not being merged in, rather than a new one.\u003C/p\u003E\u003Cp\u003EProblem 1: People routinely claim when talking about the space kraken problem that what SQUAD has done is to place the origin of the coordinate system on the current vessel. This is false. What they actually did is to put the origin NEAR the current vessel, but allowed it to drift away. I don\u0027t fully understand the reason for it, but early experiments showed that the position of the ship is never exactly 0,0,0, and that over time the active vessel drifts farther and farther away from the worldspace origin point the longer you stay in flight view at 1x speed. Going to time warp speed seems to cause the origin to reset when you come out of it, so the ships is once again back at the origin exactly, but then immediately starts drifting away from it.\u003C/p\u003E\u003Cp\u003ETherefore I made the decision that in order for the positions and vectors of kOS to be usable at all, they must shift the origin point to something you can see and relate to in-game. The actual origin is a magic invisible point you have no idea where it is. Therefore every single position kOS returns is in a coordinate system centered on whatever vessel is the one running the computer on which your script is executing. It\u0027s just a matter of subtracting the ship\u0027s position from the coordinates that KSP gives us under the hood.\u003C/p\u003E\u003Cp\u003EThat solved some of the problems.\u003C/p\u003E\u003Cp\u003EProblem 2: Under the hood, there are two methods to get the position of a vessel, and it was unclear what the difference between them is because the API is undocumented. (all the documentation comes from the user mod community). One is clearly named findWorldCenterOfMass, which is clear what that means, but the other is just the actual position of the ship.. well. the position of what part of the ship? (It turns out it\u0027s the position of the root part of the ship - the command core you used to start building it from, which might be quite far from the center of mass, but this wasn\u0027t mentioned and took trial and error to figure out.) The problem was that different parts of the code, written at different times, by different people, used a mix of both types, leading to inconsistencies that you\u0027ll only notice when in a context where the few meters of difference between rootpart and center of mass matter. I ran through and changed every one of them to a standard of using center of mass everywhere, and that got rid of the weird vector offsets.\u003C/p\u003E\u003Cp\u003EAt least it got rid of them... until NOW. Which is why I\u0027m baffled that this has come back again. It looks *exactly* the same as a problem I already fixed, which is why I started asking questions about which version number this was.\u003C/p\u003E\u003Cp\u003EI promise that as soon as 0.15 is out that this will be the next thing I look at for 0.15.1. I fully expect that once 0.15 hits the public, people will find stuff wrong with it that we haven\u0027t foreseen, that require a patch, just because it\u0027s impossible for two people to fully test every usage case. It\u0027s my goal to make the fix of this part of the first patch after 0.15.\u003C/p\u003E\n"},{"CreatedByName":"ouch","CreatedById":76361,"CreatedDateTime":"2014-11-14T11:56:27Z","Content":"\n\u003Cp\u003EThat makes sense as it seemed like the more the craft moved and rotated the farther off it got, almost like rounding errors were accumulating or something. But has anyone else confirmed? I have quite a few mods installed. one could be affecting it.\u003C/p\u003E\u003Cp\u003EOh, and I don\u0027t mean to add to your stress, I do realize your just doing this for free... So fix it if you want to fix it and when you want to fix it. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E I still need to develop a better target seeking pathing for the drone anyway.\u003C/p\u003E\n"},{"CreatedByName":"Amloris","CreatedById":32411,"CreatedDateTime":"2014-11-14T22:59:48Z","Content":"\n\u003Cp\u003EGreetings! I have picked up coding with KOS once again. I had stopped using it about a year ago to wait for further development as I felt that some essential features were lacking. Now that lists are available and the coding documentation has been updated it has unlocked many possibilities that were previously impossible. Furthermore, I\u0027m glad to see this mod has continued and that the developers are active on the forums. \u003C/p\u003E\u003Cp\u003EHowever, I have some questions that need to be answered and some suggestions that I would like to make. Most of my coding experience comes from using C\u002B\u002B for engineering iterative methods, or VBA and MatLab for control system analysis, so I may use inconsistent code oriented language as I talk about examples.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EQuestion #1\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EIs there a way to retrieve/store data from lists other than using FOR loops?\u003C/p\u003E\u003Cp\u003EIn most coding languages, lists come in the form of matrices that are used to store data in various forms. Users generally must define an array size (unless the are using scale-able vector arrays). To store and retrieve data, the program uses row and column integers to interact with the data matrix (if it is a 2-D array). Does KOS have any of this functionality? I know lists exist and can be stepped through with the use of FOR loops, but is there a more straightforward way to pull a specific point of data from matrix through the use of requesting rows and columns? Below is an example of some of my C\u002B\u002B code that performs RREF calculations on a data matrix and accurately portrays the functionality that I am talking about.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Edouble normalization(double A[NROW][NCOL], int mark)\u003Cbr\u003E{\u003Cbr\u003E\tint col;\u003Cbr\u003E\tdouble temp;\u003Cbr\u003E\u003Cbr\u003E\ttemp=A[mark][mark];\u003Cbr\u003E\u003Cbr\u003E\tfor (col=mark; col\u0026lt;NCOL; col\u002B\u002B)\u003Cbr\u003E\t{\u003Cbr\u003E\t\tA[mark][col]=((A[mark][col])/temp);\u003Cbr\u003E\t}\u003Cbr\u003E\treturn (0);\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIn this situation, A is a 2 dimensional array with \u0022m\u0022 rows and \u0022n\u0022 columns. So if I say X=A[row][column] where \u0022row\u0022 and \u0022column\u0022 are represented by integers, then X will equal the value pulled from the matrix at that point.\u003C/p\u003E\u003Cp\u003EUsing lists and matrices in this way is very intuitive and straight forward. FOR loops can still be used to store and retrieve data, but this structure also allows users to request a singular data point easily without FOR loops. The reason why I am asking about this feature is because I am attempting to program an inertial guidance system in C\u002B\u002B that will take the initial conditions of the craft and information about the type of orbit you would like to achieve with said craft. This program will then use an iterative Runge-Kutta procedure, coupled with a Monte-Carlo method to find an optimal ascent profile and store the final trajectory data in the form of a txt file that can be read by KOS. At the end of the day, I want to be able to say \u0022At mission time 53, look at matrix row 53 and pull pitch, yaw, and throttle info from the matrix and implement it with the rocket\u0022. Is this currently possible with KOS, or is it a potential feature in the future?\u003C/p\u003E\u003Cp\u003EDue to the long-winded nature of my first question I will abstain from asking the rest of my questions in this post to prevent information overload. Thanks in advance for any information that anyone can provide!\u003C/p\u003E\u003Cp\u003ERegards,\u003C/p\u003E\u003Cp\u003EAmloris\u003C/p\u003E\n"},{"CreatedByName":"ouch","CreatedById":76361,"CreatedDateTime":"2014-11-15T00:28:23Z","Content":"\n\u003Cp\u003ESounds like you might not have seen the new, updated wiki. Check it out here: \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EBut yes you can actually create multi-dimensional arrays and step through them just like c\u002B\u002B.\u003C/p\u003E\u003Cp\u003ESo:\u003C/p\u003E\u003Cp\u003ESet mything to stuff[2][5].\u003C/p\u003E\u003Cp\u003EIs valid kos code.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-15T04:56:00Z","Content":"\n\u003Cp\u003E@Almoris, What @ouch said.\u003C/p\u003E\u003Cp\u003EWhat do all of you, the users of kOS, think of the possibility of implementing implicitly expanded lists based on usage? In a lot of languages designed for quick and easy prototyping, they have this rule:\u003C/p\u003E\u003Cp\u003E* If the program attempts to assign a value into array[idx], where idx is larger than the array\u0027s current size, then instead of bombing out, take this as an implicit desire by the programmer to want to grow the array to become big enough to have an index of idx.\u003C/p\u003E\u003Cp\u003ESo, for example, if you did this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset mylist to list().\u003Cbr\u003Eset mylist[2][3] to \u0022hello\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen you\u0027d now have a list that looks like this:\u003C/p\u003E\u003Cp\u003Emylist[0] = list of size zero.\u003C/p\u003E\u003Cp\u003Emylist[1] = list of size zero.\u003C/p\u003E\u003Cp\u003Emylist[2] = list containing: list [0] = null, list [1] = null, list [2] = null, list [3] = \u0022hello\u0022.\u003C/p\u003E\u003Cp\u003EIt grows the list at the minimum necessary to hold the index given.\u003C/p\u003E\u003Cp\u003EThere are some languages, like Perl, that operate this way. It\u0027s an idea I had rattling in my head a while. It makes for very easy to read code when you are trying to populate a matrix of data, but it does have the following pitfall: If you try to do mylist[x], where by accident you had an enormous x, like 9999999, you end up carving out a gigantic chunk of memory and perhaps crashing because there\u0027s not enough. I consider that an acceptable programmer error the language shouldn\u0027t try to prevent, akin to getting stuck in an infinite loop, but not everyone agrees.\u003C/p\u003E\u003Cp\u003EAlso, that would require that we have the ability to handle user variables that contain NULL, which up till now has been avoided, in order to let people deal with an array which contains nulls for some of its values.\u003C/p\u003E\n"},{"CreatedByName":"ouch","CreatedById":76361,"CreatedDateTime":"2014-11-15T05:15:58Z","Content":"\n\u003Cp\u003EWell in my experience the word \u0022NULL\u0022 tends to scare away non-programmers. They seem to have a hard time figuring out that NULL and a 0 length string or \u0022\u0022 are two separate values. And while I definitely think being able to resize lists like that would make lists easier to use for both non-programmers and programmers, it also comes at a risk of alienating the non-programmers. To solve this I think you could get away with making null and \u0022\u0022 mean the same thing according to KOS.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-15T05:16:44Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022color:#b06400;\u0022\u003EJust a general warning about some breaking changes upcoming in v0.15:\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOne of the reasons for the delay of releasing v0.15 has been the fact that we\u0027ve been stretching the language past some limitations of its original design, and hitting a wall caused by our desire not to break old scripts you\u0027ve all written. There are a few cases where the original language spec is quite limiting and trying to make old code work without any edits despite adding new functionality was forcing us to implement the new features in rather convoluted and bug-prone ways just to shoehorn them into the old syntax of things. It hit the point where we just decided that what we were trying to do would probably cause *more* user headaches than just telling people to make some edits to their scripts in small places here and there. By breaking with tradition in a few places we gain the ability to actually implement things the right way. And it\u0027s actually a lot easier than the messy hacks we were in the middle of trying to make.\u003C/p\u003E\u003Cp\u003ESo when the release announcement is eventually made (RSN?), please \u003Cstrong\u003Epay special attention\u003C/strong\u003E to the section of the release notes that tells you what the \u003Cstrong\u003Ebreaking features\u003C/strong\u003E are. It\u0027s going to be important in this particular release. But when you all see it I think (hope?) you\u0027ll agree that the breaking changes were worth it to allow the new features.\u003C/p\u003E\u003Cp\u003E(I\u0027m just trying to manage expectations here.)\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-11-15T06:03:05Z","Content":"\n\u003Cp\u003EI personally don\u0027t mind recoding anything for the sake of progress! As considerate as it is to keep old code functional, at some point yea you\u0027re just going to be hamstringing the whole project. So thanks for the heads up but IMO keep breaking what you need to moving forward...\u003C/p\u003E\n"},{"CreatedByName":"steddyj","CreatedById":80288,"CreatedDateTime":"2014-11-15T07:59:16Z","Content":"\n\u003Cp\u003EAfter watching kOS for a while now I\u0027ve finally decided to take the plunge, in part because I\u0027ve been very impressed by the recent progress of the mod. While the documentation is leaps and bounds from what it was the last time I thought about adding kOS to my modlist, I\u0027m still getting a bit stuck on a few things.\u003C/p\u003E\u003Cp\u003EFor my first useful script I wanted to have something that will deploy a satellite for me after the lifter has coasted out of atmo. I\u0027m using RT, and the antenna on the satellite would face into the lifter if deployed before the payload is decoupled. Functionally this would work fine, but it was a good excuse to give kOS a try.\u003C/p\u003E\u003Cp\u003ESo I have my basic script working fine, it decouples the satellite, fires RCS forward a few bursts, waits a few seconds, then hits an AG deploying comms and solar panels. Now I\u0027m trying to refine it a bit, I\u0027d like it to make sure it gets at least 10m or so from the lifter before deploying. Logically I have this all worked out - target the lifter, get the distance, is it far enough? ok deploy. The issue I\u0027m running into is how to set the target specifically to the lifter, since it\u0027s named \u0022Vessel Debris\u0022 along with the fairings I just jettisoned and the launch clamps back at the KSC, which is what I end up with if I try to target it by name. I tried the following script:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elist targets in targs.\u003Cbr\u003Efor this in targs {\u003Cbr\u003E\tif this:distance \u0026lt; 100 {\u003Cbr\u003E\t\tset target to this.\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand I get \u0022Vessel \u0027SHIP(\u0022Vessel Debris\u0022)\u0027 not found\u0022\u003C/p\u003E\u003Cp\u003EI figured maybe I need to set target to this:vesselname and that just gets me back to a docking clamp. \u003C/p\u003E\u003Cp\u003EWhat am I missing here? Is there a unique identifier that can be queried in the orbital structure that will help me make sure I\u0027m setting the right target?\u003C/p\u003E\u003Cp\u003EThanks for the help, and sorry for the wall of text.\u003C/p\u003E\n"},{"CreatedByName":"Trewor007","CreatedById":101021,"CreatedDateTime":"2014-11-15T08:12:49Z","Content":"\n\u003Cp\u003EHi is there, a way to check in KOS, the rotation of my rover around, a axis made of a vector?\u003C/p\u003E\n"},{"CreatedByName":"ouch","CreatedById":76361,"CreatedDateTime":"2014-11-15T09:18:32Z","Content":"\n\u003Cp\u003Esteddyj: you want to use just :name for targeting, not :vesselname But to save you time I wouldn\u0027t bother targeting the ship. There can only be one target regardless of what ship your in. So if you want to say run the script on one ship and dock with another you can\u0027t change your target because it will break your kos script. Not targeting something first will likely save you time down the road. Secondly to pick a specific object out of a bunch of the same name then, it\u0027s best to use list to look through all the objects parts till you find an object that has the parts your interested in. you can look here for more info on how to do that: \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/command/list/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/command/list/index.html\u003C/a\u003E (specifically #4)\u003C/p\u003E\u003Cp\u003ETrewor007: what do you mean exactly? if you have a vector and want to look at a specific axis than you can just specify that axis like so:\u003C/p\u003E\u003Cp\u003Eprint \u0022myvector x axis: \u0022 \u002B myvector:x.\u003C/p\u003E\u003Cp\u003Eprint \u0022myvector y axis: \u0022 \u002B myvector:y.\u003C/p\u003E\u003Cp\u003Eprint \u0022myvector z axis: \u0022 \u002B myvector:z.\u003C/p\u003E\u003Cp\u003EA direction has it\u0027s own suffixes:\u003C/p\u003E\u003Cp\u003Eprint \u0022mydirection pitch axis: \u0022 \u002B mydirection:pitch.\u003C/p\u003E\u003Cp\u003Eprint \u0022mydirection yaw axis: \u0022 \u002B mydirection:yaw.\u003C/p\u003E\u003Cp\u003Eprint \u0022mydirection roll axis: \u0022 \u002B mydirection:roll.\u003C/p\u003E\n"},{"CreatedByName":"Trewor007","CreatedById":101021,"CreatedDateTime":"2014-11-15T14:27:18Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E ouch\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m trying to write a code that will check the slope angle of the current rover position. I\u0027ve managed to make an accurate measurement witch the code below . But it works only if the slope is right in front (or back) of the rover, when the slope is on the side (left wheels higher/lover than the right ones) the program does not \u0022see\u0022 the slope because of how ship:facing:vector works. \u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset line0 to ship:body:position:vec:normalized.\u003Cbr\u003Eset line1 to ship:facing:vector:normalized.\u003Cbr\u003Eset katprzod to 90-vang(line0,line1). \u003Cbr\u003Eprint katprzod at(0,24).\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ethat why Im interested in measuring rotation around a vector. I thing that can help me check the side slope angle\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-15T14:30:30Z\u0022 title=\u002211/15/2014 02:30  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 15, 2014\u003C/time\u003E by Trewor007\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"steddyj","CreatedById":80288,"CreatedDateTime":"2014-11-15T16:02:54Z","Content":"\n\u003Cp\u003EOuch:\u003C/p\u003E\u003Cp\u003EI appreciate the help. I\u0027m not sure what gave you the impression that I\u0027m trying to set multiple targets, perhaps because I don\u0027t have a break in the target code I posted. It\u0027s not very elegant (yet, its a POC script) but the IF statement will only be true to the lifter debris, and I\u0027ve debugged it to confirm that it is indeed trying to target the correct object.\u003C/p\u003E\u003Cp\u003EUsing this:name instead of this:vesselname did correct the error that I was experiencing when trying to set the target, however the result is still the same. I end up targeting the first object of the name that appears in LIST TARGETS even though my target code is executing against the correct instance since ORBITAL:NAME is not required to be unique. Is there a value in the structure which is used to uniquely identifying an orbital which can be used to set the target?\u003C/p\u003E\u003Cp\u003EAlternatively, were you suggesting I target a specific part on the lifter?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-15T17:24:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trewor007\u0022 data-cite=\u0022Trewor007\u0022\u003E\u003Cdiv\u003EI\u0027m trying to write a code that will check the slope angle of the current rover position. I\u0027ve managed to make an accurate measurement witch the code below . But it works only if the slope is right in front (or back) of the rover, when the slope is on the side (left wheels higher/lover than the right ones) the program does not \u0022see\u0022 the slope because of how ship:facing:vector works. \u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESHIP:FACING is in fact just a \u0022rotation\u0022 operator, and SHIP:FACING:VECTOR is really just giving you the result of rotating the Z-axis by SHIP:FACING.\u003C/p\u003E\u003Cp\u003ESo these three:\u003C/p\u003E\u003Cp\u003E\u0060\u0060\u0060\u003C/p\u003E\u003Cp\u003Eset shipXvec to ship:facing * V(1,0,0).\u003C/p\u003E\u003Cp\u003Eset shipYVec to ship:facing * V(0,1,0).\u003C/p\u003E\u003Cp\u003Eset shipZVec to ship:facing * V(0,0,1).\u003C/p\u003E\u003Cp\u003E\u0060\u0060\u0060\u003C/p\u003E\u003Cp\u003EWill give you 3 basis vectors aligned with the ship\u0027s starboard direction, roof direction, and nose direction, respectively.\u003C/p\u003E\u003Cp\u003EIn fact one of those three (I believe it\u0027s shipZVec but I\u0027m saying this from memory so I may be wrong) will be identical to saying ship:facing:vector.\u003C/p\u003E\u003Cp\u003ESo you can use VANG, VDOT, and VCRS to get your rotated angles around various different things.\u003C/p\u003E\u003Cp\u003EIt sounds like what you want is the VANG between ship:body:position and the shipYVec I described above. If 180, you are pointed up directly away from gravity.\u003C/p\u003E\u003Cp\u003E(hint. SHIP:UP is a unit vector always pointing away from that ship\u0027s body\u0027s position, right at the center of the blue half of the navball. This may be easier for you to work with than ship:body:position:vec:normalized).\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-11-15T17:39:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trewor007\u0022 data-cite=\u0022Trewor007\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E ouch\u003C/strong\u003E\u003Cp\u003EI\u0027m trying to write a code that will check the slope angle of the current rover position.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHere is the code Steven wrote up for me a few months ago:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset upvec to up:vector.\u003Cbr\u003Eset velvec to ship:velocity:surface:normalized.\u003Cbr\u003Eset dp to vdot(velvec,upvec).\u003Cbr\u003Eset currentSlopeAngle to 90 - arccos(dp).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that this is done with the RoverBrain part from RoverScience mod to give the rover a proper horizontal attitude when moving. You can find out more by checking our my rover driver script (see sig)\u003C/p\u003E\n"},{"CreatedByName":"Trewor007","CreatedById":101021,"CreatedDateTime":"2014-11-15T18:33:51Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E Steven Mading\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThanks Man as always You are saving my day. The \u0022ship:body:position:vec:normalized\u0022 is a relict copied from my old code I\u0027ve never bothered to change that.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E Gaiiden\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve seen Your code this morning, and I was very impress by it, but when i tried that code it wasn\u0027t working properly probably due the orientation of the control part.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-11-15T19:06:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trewor007\u0022 data-cite=\u0022Trewor007\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E ...\u003C/strong\u003E probably due the orientation of the control part.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYup if the navball isn\u0027t showing a horizon to show that the rover control is oriented horizontally you\u0027re gunna get some weird results.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-15T19:21:19Z","Content":"\n\u003Cp\u003EYou could probably now replace the two steps:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset dp to vdot(velvec,upvec).\u003Cbr\u003Eset currentSlopeAngle to 90 - arccos(dp).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewith just this step now that the language has the VANG operator:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset currentSlopeAngle to 90 - vang(velvec,upvec).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETaking the dot product and then taking its arc cosine, under the assumption that the two vectors it was made of were both unit vectors, was a sort of hack to get around the lack of a VANG operator.\u003C/p\u003E\n"},{"CreatedByName":"ouch","CreatedById":76361,"CreatedDateTime":"2014-11-15T22:50:33Z","Content":"\n\u003Cp\u003Esteddyj, I was just trying to point out that setting a target and basing your code off doing things to said target can cause quite a few issues and should be avoided. For instance, if you have a craft that deploys a probe with kos on it. If your still in control of the main vessel and the probe tries to target the main vessel it can\u0027t because you can\u0027t target yourself. So it\u0027s best to store the object from the list command as a variable and work with it that way.\u003C/p\u003E\u003Cp\u003EFor the other thing, since each object your targeting is not going to be an exact copy of an another object then you can compare parts between the two so that you can select the one your looking for. Using the parts list is kinda like a unique finger print. So for instance if you have a main vessel and a probe then you can look for a part one has that the other does not. It might be enough to just look at how many parts are on each object a well.\u003C/p\u003E\n"},{"CreatedByName":"Veelay","CreatedById":122147,"CreatedDateTime":"2014-11-15T23:04:23Z","Content":"\n\u003Cp\u003EI\u0027ve been having a bit of an issue. When I use the script editor, commands still get through to my ship, making it near impossible to use. Does anyone know the cause of this?\u003C/p\u003E\u003Cp\u003EEDIT: Nevermind, it was deselecting the main KOS window when I brought it up. But I\u0027m having another issue where there is only one line in the editor, and the enter button does not add a new line.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-15T23:06:28Z\u0022 title=\u002211/15/2014 11:06  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 15, 2014\u003C/time\u003E by Veelay\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"steddyj","CreatedById":80288,"CreatedDateTime":"2014-11-16T01:54:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ouch\u0022 data-cite=\u0022ouch\u0022\u003E\u003Cdiv\u003Esteddyj, I was just trying to point out that setting a target and basing your code off doing things to said target can cause quite a few issues and should be avoided. For instance, if you have a craft that deploys a probe with kos on it. If your still in control of the main vessel and the probe tries to target the main vessel it can\u0027t because you can\u0027t target yourself. So it\u0027s best to store the object from the list command as a variable and work with it that way.\u003Cp\u003EFor the other thing, since each object your targeting is not going to be an exact copy of an another object then you can compare parts between the two so that you can select the one your looking for. Using the parts list is kinda like a unique finger print. So for instance if you have a main vessel and a probe then you can look for a part one has that the other does not. It might be enough to just look at how many parts are on each object a well.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERegarding targeting - got it, I\u0027ll keep that in mind if I\u0027m scripting to deploy from the live craft. In this case, the lifter is dumb, deployment occurs on a suborbital trajectory and the lifter will return to key in ballistically. All control is on the satellite, so that should not be an issue here.\u003C/p\u003E\u003Cp\u003ERegarding selecting the correct object. I get what you\u0027re saying, but I already have the right object in my variable when I try to set it to the target. Using a parts list instead of target lists may make the script more elegant, and honestly I\u0027ll probably recode that way for future use. It still won\u0027t solve my issue, however, because I would still be identifying the object, trying to set the target to its name, and failing because there are multiple objects of the same name.\u003C/p\u003E\u003Cp\u003EHowever, I think see the solution that you\u0027re trying to present. Don\u0027t target, once I have it identified I can use this:distance rather than trying to target, which will actually work better in this case.\u003C/p\u003E\u003Cp\u003ENow my question is more academic, though. I\u0027d still like to know how you can set a target when presenting multiple objects of the same name? Is there currently a way, or do you need to make sure that you never forget to rename your comm satellites?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-16T07:21:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Veelay\u0022 data-cite=\u0022Veelay\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEDIT: Nevermind, it was deselecting the main KOS window when I brought it up. But I\u0027m having another issue where there is only one line in the editor, and the enter button does not add a new line.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s truly weird because the internals of that text editing widget are mostly just up to Unity itself. We\u0027re just calling out to a stock Unity widget tool. If it doesn\u0027t respond right to the return key, then I don\u0027t know what to do. What particular OS platform (including bitness) are you on?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-16T07:31:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022steddyj\u0022 data-cite=\u0022steddyj\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ENow my question is more academic, though. I\u0027d still like to know how you can set a target when presenting multiple objects of the same name? Is there currently a way, or do you need to make sure that you never forget to rename your comm satellites?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot currently, but in 0.15 we have a new \u0022nametag\u0022 feature where you can manually assign whatever names you feel like to any part of the ship, and then in the code use those names as your means of selecting parts. you can then just name the root parts (the command cores) of your vessels whatever you like with the rightclick menu. The part will not require power to do so.\u003C/p\u003E\u003Cp\u003E(I always thought it was utterly ridiculous that stock KSP requires you to have the craft powered up to change its name. Did the moons choose their own names? Did the asteroids choose their own designations? No, the names are decided by ground control, so even a dead ship that\u0027s not responding should still be rename-able.)\u003C/p\u003E\u003Cp\u003EI have to ask why you can\u0027t rename the ship in flight. Is it out of power?\u003C/p\u003E\u003Cp\u003EAs to the problem of only having one global ship at a time called \u0022Target\u0022, that\u0027s a problem inherited from KSP itself. KSP was written to assume it\u0027s not possible to control more than one ship at a time, so it was good enough to just have one global target at a time, and then switch what it is as you swap which vessel you\u0027re controlling. (each vessel does *REMEMBER* what ship it was targetting, so when you switch to it it will reset the global target to what it remembered, but the rest of the high level logic that goes with having a currently targeted ship doesn\u0027t work except on the current active vessel.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-16T07:35:35Z\u0022 title=\u002211/16/2014 07:35  AM\u0022 data-short=\u00229 yr\u0022\u003ENovember 16, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"}]}