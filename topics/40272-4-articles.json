{"TopicId":40272,"ForumId":55,"TopicTitle":"The war against lag: Anti-lag fairings","CreatedByName":"Psycix","CreatedById":76916,"CreatedDateTime":"2013-07-31T13:31:02Z","PageNum":4,"Articles":[{"CreatedByName":"Rassa Farlander","CreatedById":63627,"CreatedDateTime":"2013-08-18T03:52:11Z","Content":"\n\u003Cp\u003EI like this idea \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Not sure if the devs would implement a thing like this but Im all for something that combats lag \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Psycix","CreatedById":76916,"CreatedDateTime":"2013-08-18T16:41:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SyberSmoke\u0022 data-cite=\u0022SyberSmoke\u0022\u003E\u003Cdiv\u003EPhycix, if Procedural Fairings is still current and in development, why not talk to the person developing it to see if a \u0022proof of concept\u0022 can be made. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWas thinking that as well. I\u0027ll send him a PM.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EFine, that works then. But what prevents someone from strutting the fairing to hell to prevent it from failing and physics suddenly being enabled on the payload?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t think you\u0027re supposed to be able strut the fairing. Is that even possible with the current procedural fairings mod?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EWhy would two payloads, with the same sizes, have different masses? \u003Cp\u003EAnd if we did this, if there are fuel tanks in there do we base the fairing mass on the full mass or empty mass?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood question.\u003C/p\u003E\u003Cp\u003EAlthough the volume might be the same, I\u0027d say that a heavier payload comes with a heavier support structure to support the weight. Think of the fairings being custom made for both payload volume and mass.\u003C/p\u003E\u003Cp\u003EOf course the fairing weight is then based on the mass it starts with. The fairing base doesn\u0027t crossfeed, and fuel lines should not be able to cross the fairing hull. Moreover engines aren\u0027t operable while within the fairing since their physics are frozen anyway. Actually, perhaps no component should be accessible at all.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EEither the fairing would allow you to launch that flimsy payload without the huge girder mess, at which my \u0022inconsistency\u0022 complaint still stands, or it would break, at which point we\u0027re back to where we are now.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027re forgetting that the root purpose of this whole fairing idea is not to support the payload, but to greatly enhance the performance of the game.\u003C/p\u003E\u003Cp\u003EThe main reason the fairings have to work this way is a result of freezing physics without gameplay consequences that can be used to cheat or exploit.\u003C/p\u003E\u003Cp\u003E-The fairing supports the payload, because that\u0027s what freezing physics will practically do.\u003C/p\u003E\u003Cp\u003E-The fairing has extra mass, this is for balancing reasons, because that\u0027s what the weight of the support structure you\u0027d otherwise have in the form of girders and struts.\u003C/p\u003E\u003Cp\u003E-The fairing is breakable, because that is realistic, balances compared to conventionally strutted payloads and in general prevents the problem of abuse as invulnerability capsules.\u003C/p\u003E\u003Cp\u003EI think that this approach will make sure that the anti-lag-fairings cannot be used to cheat structural physics and allow us to enjoy massive FPS improvements during launch.\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-08-18T20:24:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EI don\u0027t think you\u0027re supposed to be able strut the fairing. Is that even possible with the current procedural fairings mod?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep! The way struts are currently coded, while you can\u0027t start them from the fairing and then attach to whatever else, you certainly can do it the other way around. You\u0027ll still have the lag situation going on, just with people strutting the payload fairing to hell rather than the payload itself. You could argue that it\u0027s entirely their own fault in that case, that they could launch a smaller payload with a smaller fairing on a more gentle launch vehicle and use docking to put it together in orbit, but the same argument can be used for the current strut-monsters people insist on launching.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EGood question.\u003Cp\u003EAlthough the volume might be the same, I\u0027d say that a heavier payload comes with a heavier support structure to support the weight. Think of the fairings being custom made for both payload volume and mass.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPayload fairings (at least in real life) are just aerodynamic shells that can only support the aerodynamic loads on them; their mass shouldn\u0027t vary with anything other than size, since they only need to support themselves and aerodynamic forces. The payload fairing \u003Cem\u003Ebase\u003C/em\u003E could vary in mass since that would be responsible for supporting the payload.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EOf course the fairing weight is then based on the mass it starts with. The fairing base doesn\u0027t crossfeed, and fuel lines should not be able to cross the fairing hull. Moreover engines aren\u0027t operable while within the fairing since their physics are frozen anyway. Actually, perhaps no component should be accessible at all.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI guess this is reasonable, especially since if you didn\u0027t do that you\u0027d have to recalculate the mass and MOIs of the payload every physics frame as the mass distribution changes.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EYou\u0027re forgetting that the root purpose of this whole fairing idea is not to support the payload, but to greatly enhance the performance of the game.\u003Cp\u003EThe main reason the fairings have to work this way is a result of freezing physics without gameplay consequences that can be used to cheat or exploit.\u003C/p\u003E\u003Cp\u003E-The fairing supports the payload, because that\u0027s what freezing physics will practically do.\u003C/p\u003E\u003Cp\u003E-The fairing has extra mass, this is for balancing reasons, because that\u0027s what the weight of the support structure you\u0027d otherwise have in the form of girders and struts.\u003C/p\u003E\u003Cp\u003E-The fairing is breakable, because that is realistic, balances compared to conventionally strutted payloads and in general prevents the problem of abuse as invulnerability capsules.\u003C/p\u003E\u003Cp\u003EI think that this approach will make sure that the anti-lag-fairings cannot be used to cheat structural physics and allow us to enjoy massive FPS improvements during launch.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI understand that it would enhance the performance of the game, but optimizations come at a cost: we could greatly improve the game\u0027s performance by combining every rocket stage into a single rigid body, but it would be at the cost of removing the current part failure mechanics (which would probably require a lot of code to re-implement in that situation), which is probably one of the best game mechanics KSP has. I still have reservations about how strutting the fairing to hell could be used to make invulnerability capsules.\u003C/p\u003E\u003Cp\u003EThen there are the glitches this would cause. Do you remember the bug where rockets would lose parts when coming out of timewarp due to how physics restarted? You\u0027re essentially proposing a situation where a bug similar to that is \u003Cem\u003Every\u003C/em\u003E like to occur.\u003C/p\u003E\u003Cp\u003EHere\u0027s the most common failure I see happening for a standard rocket using this: the rocket has a payload that is somewhat flexible; not very flexible, not flimsy, but it does deform a little under thrust. The flight scene loads, and its physics are frozen while it is in an un-deformed state. The rocket launches, and once out of the majority of the atmosphere, the player detaches the fairing; however the thrusters are still running. Physics restarts on the payload, and now one of two things happens: 1) the payload glitches on physics start and the rocket suffers spontaneous disintegration; 2) the payload suddenly deforms under this new load and it springs around a bit; the rocket becomes difficult to control until this settles down, possibly losing control in the process. The larger and more flexible the payload, the more problematic option 2 will be; it may even turn into a problem if the throttle is off for large enough payloads.\u003C/p\u003E\u003Cp\u003EI really worry about how the inconsistency in handling the payload\u0027s physics would work out in-game.\u003C/p\u003E\n"},{"CreatedByName":"e-dog","CreatedById":73796,"CreatedDateTime":"2013-08-18T20:37:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EWas thinking that as well. I\u0027ll send him a PM.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI decided to reply here.\u003C/p\u003E\u003Cp\u003ECalculating mass, center of mass and inertia tensor to replace a bunch of bodies with a single one is easy.\u003C/p\u003E\u003Cp\u003EDisabling/removing part rigid bodies is problematic. Setting them to kinematic and disabling collisions might work, but I didn\u0027t try that.\u003C/p\u003E\u003Cp\u003ERemoving them will cause a lot more problems, because they must be recreated, and all their parameters must be stored, saved to persistence etc.\u003C/p\u003E\u003Cp\u003ERemoving parts is likely no go. If you know how to create parts dynamically in flight, tell me. I don\u0027t know how to do it.\u003C/p\u003E\u003Cp\u003ESo even if disabling rigid bodies and hiding models will work, it\u0027s still a question how it will affect performance.\u003C/p\u003E\u003Cp\u003EBut parts aren\u0027t just physics, a lot of code is run processing them. Some, like fuel tanks, change their mass as the result, which should cause recalculation of the total mass parameters used to replace them, adding more processing too.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure that all stock parts will work properly if their rigid bodies are disabled. Needs testing.\u003C/p\u003E\u003Cp\u003EThen, there are mods. Some like Damned/Infernal Robotics won\u0027t work because they move rigid bodies. Others might break too for various reasons.\u003C/p\u003E\u003Cp\u003EAll in all, I\u0027d rather see someone first make a proof of concept code that replaces a bunch of parts with a single rigid body and restores them later.\u003C/p\u003E\u003Cp\u003EMy estimate is it\u0027s a lot of work. I\u0027m fine with how it works now (it won\u0027t help my huge space stations anyway), and I have a lot of other stuff to do to try it anytime soon myself.\u003C/p\u003E\u003Cp\u003EThat said, I\u0027d like Squad to join most (if not all) rigid bodies of a vessel together into a single body and simulate internal stresses from collisions and external forces like thrust and gravity. That\u0027ll eliminate wobble completely and improve performance of vessels with many parts (just try timewarping a large space station to switch off physics and compare frame rate). And you\u0027ll still be able to break ships.\u003C/p\u003E\u003Cp\u003EBut that\u0027s a lot of work too, and it\u0027ll break some mods.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-08-18T23:31:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEither the fairing would allow you to launch that flimsy payload without the huge girder mess, at which my \u0022inconsistency\u0022 complaint still stands, or it would break, at which point we\u0027re back to where we are now.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, we would emphatically NOT be \u0022where we are now\u0022. You are (perhaps deliberately) forgetting that the goal here is to reduce FPS lag, NOT to reduce breakability. Others including you brought up the potential to change the breakability of the craft as an argument against the idea, but to pretend that it was the original intent is to argue against a dishonestly caricatured strawman of the position. Your last sentence there claims (read it again) that \u0022it would break, at which point we\u0027re back where we are now\u0022. That\u0027s a claim that presumes the goal here was to prevent breakage when it wasn\u0027t. If someone has come up with a way to do it that does in fact preserve the exact same breakability, but with faster FPS, then it would be exactly what the suggester WANTED.\u003C/p\u003E\u003Cp\u003EArguing that making fairings that preserve the exact same breakability with less FPS lag is just not possible, and arguing why, is a fine argument, and you\u0027ve been making that argument fairly well here in the thread. But then at times you edged over into pretending that less breakability was the intended GOAL and when you do that you start arguing against a strawman, which is not being fair.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-18T23:40:38Z\u0022 title=\u002208/18/2013 11:40  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 18, 2013\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-08-19T03:57:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003ENo, we would emphatically NOT be \u0022where we are now\u0022. You are (perhaps deliberately) forgetting that the goal here is to reduce FPS lag, NOT to reduce breakability. Others including you brought up the potential to change the breakability of the craft as an argument against the idea, but to pretend that it was the original intent is to argue against a dishonestly caricatured strawman of the position. Your last sentence there claims (read it again) that \u0022it would break, at which point we\u0027re back where we are now\u0022. That\u0027s a claim that presumes the goal here was to prevent breakage when it wasn\u0027t. If someone has come up with a way to do it that does in fact preserve the exact same breakability, but with faster FPS, then it would be exactly what the suggester WANTED.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy \u0022we would be back where we are now\u0022 quote referred to the fact that suddenly, with the fairing broken, the physics of the payload has to be simulated again; whatever fps benefits that would be gained from freezing it would instantly be negated the second physics started again. I appear to be failing to be coherent, and I apologize for any confusion there. It should have read something closer to, \u0022Either the fairing would allow you to launch that flimsy payload without the huge girder mess, at which point my \u0022inconsistency\u0022 complain still stands, or the fairing would break, at which point we\u0027re back to where we are now with respect to the physics-based framerate issues.\u0022 I suppose I should note that I\u0027m making the assumption that the fairing strength isn\u0027t based on the payload \u0022strength\u0022 in any way, since two similar payload fairings failing at different loads entire based on how overbuilt the payload is would be incredibly strange.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EArguing that making fairings that preserve the exact same breakability with less FPS lag is just not possible, and arguing why, is a fine argument, and you\u0027ve been making that argument fairly well here in the thread. But then at times you edged over into pretending that less breakability was the intended GOAL and when you do that you start arguing against a strawman, which is not being fair.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFine, so then the mess of girders and struts around the payload will need to be required for the payload fairing to freeze physics properly, correct? Or some type of similar structural reinforcement, right? Every argument here has focused around reducing lag by reducing the number of parts simulated and \u003Cem\u003Ethe number of struts needed\u003C/em\u003E. It always comes down to the number of struts needed; why else would Psycix have brought up \u003Ca href=\u0022http://i.imgur.com/5phhGoQ.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ethis picture\u003C/a\u003E of what he doesn\u0027t want to have to do if the goal isn\u0027t to remove the need to structurally reinforce the payload to the necessary degree to launch it? Further, I would quote this from the OP:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E-The fairing \u0022protects\u0022 the part from structural failure as a result of wobbling or G-forces. (For realism, you can think of the parts being structurally attached to and supported by the fairing.)\u003Cp\u003E-Less flailing, wobbling, wiggling and whatnot that makes attitude control a PITA. (We can actually steer.)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis implies that an intended benefit of this is that a structural weak payload can be launched when it otherwise couldn\u0027t; that part of the plan was to reduce breakability, you know, what you called a strawman? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EFurther, I would argue that even if the reduced breakability did not appear to be an intended goal, it would be a consequence of implementation. Further, I would argue that if a feature can be exploited, it \u003Cem\u003Ewill\u003C/em\u003E be exploited by the userbase, and as far as I can see, there is no reason why any of these fairings could not be strutted until they had effectively infinite strength, creating a magical cocoon of protection from forces that could cause the payload to break. I see no reason to separate intended and unintended consequences since, in the final analysis, intent doesn\u0027t change how the code runs.\u003C/p\u003E\u003Cp\u003EMy argument isn\u0027t based on just what is proposed, but on what the consequences of that implementation would be. This strikes me as the type of system that can be very easily exploited and that would be exploited very quickly since the potential gains in protection from structural failure are incredible. I also have concerns that the suggestions made to try and fix the proposal are a little too band-aid-like and will start to inspire fridge logic in players and might break immersion and cause frustration.\u003C/p\u003E\n"},{"CreatedByName":"Kerbin Dallas Multipass","CreatedById":79477,"CreatedDateTime":"2013-08-19T06:04:20Z","Content":"\n\u003Cp\u003EJust a thought, no idea if this is in any way feasible:\u003C/p\u003E\u003Cp\u003EWe have subassemblies coming, right?\u003C/p\u003E\u003Cp\u003EWhy not have a \u0022certification process\u0022 for payloads that travel inside fairings? The subassembly gets taken to a kerbal test facility where it is rattled around by all sorts of g forces. If it breaks you are not able to transport it within the fairings.\u003C/p\u003E\u003Cp\u003EPerhaps the game could work out center of mass, \u0022wobblyness\u0022 and so on in that test to generate a simplified representation of the payload.\u003C/p\u003E\u003Cp\u003EThis process would make sense from a gaming perspective, would avoid cheating and the engine would not have to simulate the wobbling of each individual rear view mirror of each rover during launch.\u003C/p\u003E\n"},{"CreatedByName":"arq","CreatedById":71084,"CreatedDateTime":"2013-08-19T06:15:24Z","Content":"\n\u003Cp\u003EI like the OP\u0027s idea. Using a part with the proper mass, CoM, Rotational Intertia, Drag, and CoD for the innards would indeed allow identical physics. If something doesn\u0027t hold together in this game you can always just strut the #*% out of it and it will (and struts are currently weightless anyway), so the \u0027internal structural stability\u0027 argument is not a big issue IMO (just pretend there is a spiderweb of struts inside that get jettisoned with the fairings). Disabling the physics on those parts would be a massive computational saving on its own (and is the current bottleneck), so disabling rendering is probably unnecessary. The only issue I see is at the instant that the fairings are jettisoned and physics are enabled (stuff might explode unexpectedly), but maybe they could only be staged when the engines are off.\u003C/p\u003E\n"},{"CreatedByName":"Zaeo","CreatedById":52597,"CreatedDateTime":"2013-08-19T06:52:50Z","Content":"\n\u003Cp\u003EComing from a standpoint behind making ksp more \u0022part friendly..\u0022 \u003C/p\u003E\u003Cp\u003EUnrendering parts before launching, it is a fools dream for the scale you desire. However, for things like engine fairings, it actually is a decent idea.\u003C/p\u003E\u003Cp\u003EUnrendering, but not disabling physics. This lets you cut down on the Face count dramatically, as engines tend to be rather high poly. It helps the low end pc guys out, and generally improves performance of multi-stage vehicles.\u003C/p\u003E\u003Cp\u003EMultiple parts under the fairings would be excessive, and require more than you think to do coding wise, which is a BIG step backwards in terms of productivity, and would have one major drawback.\u003C/p\u003E\u003Cp\u003EIf you didn\u0027t lag launching it, as soon as you jettison the fairings, you will experience extreme lag as all the parts render, Plus physics would freak out and rip the craft apart 9 times out of 10. Sure, you might have a stable orbit, but at the cost of \u0022loosing things to do\u0022 because you are able to launch whole pre-fab\u0027ed structures without effort, thus resulting in loss of interest, and the relentless \u0022When is the next patch\u0022 cycle will become that much more vicious.\u003C/p\u003E\u003Cp\u003EMy vote? Yes and no.\u003C/p\u003E\u003Cp\u003EYes for simple existing fairings to unrender excessive faces of an engine.\u003C/p\u003E\u003Cp\u003ENo for the \u0022almighty procedural fairing\u0022.\u003C/p\u003E\n"},{"CreatedByName":"Psycix","CreatedById":76916,"CreatedDateTime":"2013-08-19T14:58:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EMy \u0022we would be back where we are now\u0022 quote referred to the fact that suddenly, with the fairing broken, the physics of the payload has to be simulated again; whatever fps benefits that would be gained from freezing it would instantly be negated the second physics started again.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA crash will indeed be as laggy as before.\u003C/p\u003E\u003Cp\u003ESuccesfull launch will not be, as by the time the fairing separates and the payload starts to simulate, most of the rocket is already gone. We all know rockets get wider towards the bottom.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EThis implies that an intended benefit of this is that a structural weak payload can be launched when it otherwise couldn\u0027t\u003Cstrong\u003E*\u003C/strong\u003E;\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003E*\u003C/strong\u003Ewithout strutting it to hell that is.\u003C/p\u003E\u003Cp\u003EStill could if strutpocalypsed of course. (Which I\u0027d rather not have to do because I like to play my games with more than 1 frame per second. I\u0027d be fine with strutting if the game ran on a quantum computer.)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003Eas far as I can see, there is no reason why any of these fairings could not be strutted until they had effectively infinite strength\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EReason: Fairing base gets a force greater than X -\u0026gt; it breaks.\u003C/p\u003E\u003Cp\u003EYou can attach a million struts to it, but it still wouldn\u0027t be able to handle a certain jerk or acceleration.\u003C/p\u003E\u003Cp\u003EThe fairings itself wouldn\u0027t be struttable, and even if, it wouldn\u0027t help as the base is what carries the load.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003Ethe suggestions made to try and fix the proposal are a little too band-aid-like and will start to inspire fridge logic in players and might break immersion and cause frustration.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe proposal was not a fully worked out concept the moment it was posted (and still isn\u0027t). Throughout the the thread people discover new problems, which are then addressed. This develops the concept until it is accepted by all parties (aside from the people who think it is \u0022simply unethical\u0022 because that is a matter of opinion)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kerbin Dallas Multipass\u0022 data-cite=\u0022Kerbin Dallas Multipass\u0022\u003E\u003Cdiv\u003EJust a thought, no idea if this is in any way feasible:\u003Cp\u003EWe have subassemblies coming, right?\u003C/p\u003E\u003Cp\u003EWhy not have a \u0022certification process\u0022 for payloads that travel inside fairings? The subassembly gets taken to a kerbal test facility where it is rattled around by all sorts of g forces. If it breaks you are not able to transport it within the fairings.\u003C/p\u003E\u003Cp\u003EPerhaps the game could work out center of mass, \u0022wobblyness\u0022 and so on in that test to generate a simplified representation of the payload.\u003C/p\u003E\u003Cp\u003EThis process would make sense from a gaming perspective, would avoid cheating and the engine would not have to simulate the wobbling of each individual rear view mirror of each rover during launch.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was thinking something like this as well, and while it would be cool, implementation would have to modify the game quite a bit.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EHere\u0027s the most common failure I see happening for a standard rocket using this: the rocket has a payload that is somewhat flexible; not very flexible, not flimsy, but it does deform a little under thrust. The flight scene loads, and its physics are frozen while it is in an un-deformed state. The rocket launches, and once out of the majority of the atmosphere, the player detaches the fairing; however the thrusters are still running. Physics restarts on the payload, and now one of two things happens: 1) the payload glitches on physics start and the rocket suffers spontaneous disintegration; 2) the payload suddenly deforms under this new load and it springs around a bit; the rocket becomes difficult to control until this settles down, possibly losing control in the process. The larger and more flexible the payload, the more problematic option 2 will be; it may even turn into a problem if the throttle is off for large enough payloads.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe solution to number 2 is simple, throttle down while separating or do it right after separating a stage. (TWR is generally lowest after stage sep when the current stage is full) You could jettison the fairings together with a stage sep since MECO puts the craft in microgravity anyway. Or separate them while in orbit.\u003C/p\u003E\u003Cp\u003EOption 1) would not happen with any sensible payload which does not glitch out and explode if deployed on the launchpad. On the pad an \u003Cem\u003Eentire rocket\u0027s physics\u003C/em\u003E unfreeze from a neutral state as well, and most of the time this works fine!\u003C/p\u003E\u003Cp\u003E@Zaeo\u003C/p\u003E\u003Cp\u003ERendering cost is nothing compared to physics calculations. While I think it is indeed a sensible thing to be implemented, the effectiveness of your proposal is like adding a bottle rocket to the first stage of a Saturn V.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-19T15:01:49Z\u0022 title=\u002208/19/2013 03:01  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 19, 2013\u003C/time\u003E by Psycix\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-08-19T20:23:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EMy \u0022we would be back where we are now\u0022 quote referred to the fact that suddenly, with the fairing broken, the physics of the payload has to be simulated again; whatever fps benefits that would be gained from freezing it would instantly be negated the second physics started again.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOkay fair enough, but that FPS lag would only apply when the break happens. Right now the lag happens ALL the time whether its a good successful launch or not.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EFine, so then the mess of girders and struts around the payload will need to be required for the payload fairing to freeze physics properly, correct? Or some type of similar structural reinforcement, right? Every argument here has focused around reducing lag by reducing the number of parts simulated and \u003Cem\u003Ethe number of struts needed\u003C/em\u003E. It always comes down to the number of struts needed; why else would Psycix have brought up\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBy reducing the number of struts RENDERED, not the number NEEDED. But again, the weakest parts in the game, the struts, being the only allowed way to break tree structure is a secondary problem. If you could break tree structure with more formidable parts then the need to superstrut would be reduced. The idea that its being realistic that you can\u0027t have two girders attached to the same part is ridiculous. No that\u0027s not realistic at all. The need for the excessive number of parts because struts are the only way to make a loop structure is an artificial simulation artifact *in the first place*.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThis implies that an intended benefit of this is that a structural weak payload can be launched when it otherwise couldn\u0027t; that part of the plan was to reduce breakability, you know, what you called a strawman? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIncorrect. The inability to launch being talked about was due to CPU lag not due to breakability.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EFurther, I would argue that even if the reduced breakability did not appear to be an intended goal, it would be a consequence of implementation.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd that\u0027s an okay argument to make, but please stop lying about intent. Telling people they are trying to cheat when they\u0027re not is an insult that will make them not listen to you.\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-08-20T00:19:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EReason: Fairing base gets a force greater than X -\u0026gt; it breaks.\u003Cp\u003EYou can attach a million struts to it, but it still wouldn\u0027t be able to handle a certain jerk or acceleration.\u003C/p\u003E\u003Cp\u003EThe fairings itself wouldn\u0027t be struttable, and even if, it wouldn\u0027t help as the base is what carries the load.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf that comes with similar crush / tensile failure forces for all parts, then I\u0027m fine with it (which I would actually like a lot). \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E If it\u0027s a special workaround for the fairing base only, then it begs the question of why the fairing base needs special failure criteria, above and beyond any of the other parts carrying loads.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EThe solution to number 2 is simple, throttle down while separating or do it right after separating a stage. (TWR is generally lowest after stage sep when the current stage is full) You could jettison the fairings together with a stage sep since MECO puts the craft in microgravity anyway. Or separate them while in orbit.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDoesn\u0027t this essentially require the player to be aware of an issue in the games code an make decisions to try and avoid it? When the \u0022parts separating off of ships coming out of timewarp\u0022 bug occurred, the problem could be gotten around by slowly coming down from timewarp, but that didn\u0027t justify leaving the issue unsolved. Why is it the player\u0027s job to avoid issues caused by code implementation?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Psycix\u0022 data-cite=\u0022Psycix\u0022\u003E\u003Cdiv\u003EOption 1) would not happen with any sensible payload which does not glitch out and explode if deployed on the launchpad. On the pad an \u003Cem\u003Eentire rocket\u0027s physics\u003C/em\u003E unfreeze from a neutral state as well, and most of the time this works fine!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFirst, the bug I mentioned above had the entire rocket\u0027s physics unfreezing coming out of timewarp and things still went wrong. Second, dealing with the entire rocket\u0027s physics unfreezing is probably easier than dealing with trying to connect a new group of physics objects to a group of currently active physics objects.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EBy reducing the number of struts RENDERED, not the number NEEDED. But again, the weakest parts in the game, the struts, being the only allowed way to break tree structure is a secondary problem. If you could break tree structure with more formidable parts then the need to superstrut would be reduced. The idea that its being realistic that you can\u0027t have two girders attached to the same part is ridiculous. No that\u0027s not realistic at all. The need for the excessive number of parts because struts are the only way to make a loop structure is an artificial simulation artifact *in the first place*.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t think that rendering is actually any significant part of the lag in-game, unless you misspoke there. I know the requirement of a tree structure isn\u0027t realistic, but I\u0027d rather the unrealistic requirements be consistent rather than change based on whether the parts are in a fairing or not.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIncorrect. The inability to launch being talked about was due to CPU lag not due to breakability.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThen perhaps Psycix could explicitly state what his statement in the first post (\u0022The fairing \u0027protects\u0027 the part from structural failure as a result of wobbling or g-forces\u0022) referred to: being able to launch payloads (that otherwise couldn\u0027t be launched) without needing to consider the structure necessary to keep them from falling part \u003Cem\u003Eor\u003C/em\u003E wobbling and phantom forces caused by simulation errors due to huge lag. If it is the latter one, then you are correct.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAnd that\u0027s an okay argument to make, but please stop lying about intent. Telling people they are trying to cheat when they\u0027re not is an insult that will make them not listen to you.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis feature effectively implements the inertial dampers from Star Trek as a consequence of how it functions. Wondering whether inertial dampers are a part of the plan is one of the first things I think about, since my first thought about features is \u0022how can this be exploited?\u0022 \u0022how can I twist this to my advantage?\u0022 \u0022how can I break this so it works in my favor?\u0022 If anything, I\u0027m thinking about how \u003Cem\u003EI\u003C/em\u003E would use this to cheat and get things to orbit far more easily than could otherwise be done.\u003C/p\u003E\n"},{"CreatedByName":"iueras","CreatedById":76413,"CreatedDateTime":"2013-08-20T03:25:05Z","Content":"\n\u003Cp\u003EJust so I am clear, the biggest argument against this massive FPS gaining feature is that some people might purposefully try to break it and \u0022cheat\u0022 by launching bigger payloads than they would be able to otherwise... in a SINGLE player game, right?\u003C/p\u003E\u003Cp\u003EFerram, don\u0027t get me wrong, I LOVE the work you have done, and for what it is worth I am more on the realism side of things... but denying a feature that would help many tremendously improve performance because someone else might want to use it to break realism in their own single player universe seems a little silly. You could always just not put payloads in it that wouldn\u0027t work otherwise.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-20T03:27:29Z\u0022 title=\u002208/20/2013 03:27  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 20, 2013\u003C/time\u003E by iueras\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-08-20T04:10:32Z","Content":"\n\u003Cp\u003EThe single biggest argument is that it results in different physical laws inside and outside the fairing; the possibility of launching otherwise unlaunchable payloads is a possible consequence of this. Unless the fairing is set up so that its strength is directly proportional to that of the payload, so that a force that would cause the payload to break breaks the fairing, causing physics to start acting on the payload, the world is inconsistent.\u003C/p\u003E\u003Cp\u003EThen, though it\u0027s more mundane, is the issue of how the physics engine reacts to a single payload \u0022part\u0022 being replaced with the assembly of parts that the payload is made up of; this is an opportunity for incredibly nasty physics glitches to occur, which could range from the rocket merely twitching as the payload physics start to it being spun around like mad or exploding if things glitch enough.\u003C/p\u003E\u003Cp\u003EFinally, yes, it is a single player game, but that doesn\u0027t mean that we should argue that exploits should be left in the final product because \u0022you can just not use it.\u0022 What if I\u0027d like to have a version of anti-lag fairings that doesn\u0027t allow payloads like that to be launched? What if I want fairings at all? I wouldn\u0027t expect any of the devs to code two different fairing types, one that packs the payload so that physics is run on it and another that doesn\u0027t but blocks aerodynamics code from running on it.\u003C/p\u003E\u003Cp\u003EIf this was a mod, the \u0022single player\u0022 argument would have a point, but it\u0027s not; it\u0027s proposed as code for the stock game, so the fact that it could be exploited, perhaps unintentionally (since the most common way to find out your payload isn\u0027t strong enough is that it breaks on the way up) makes this a problem I\u0027ll have to face to. It\u0027ll be like trying to design planes with the infiniglide bug; your ability to design things properly runs into the issue of just being able to twitch the control surfaces to go faster. In stock KSP we can\u0027t get around that bug; why wouldn\u0027t freezing the payload\u0027s physics have a similar effect of a positive benefit that should definitely not be there?\u003C/p\u003E\n"},{"CreatedByName":"Artophwar","CreatedById":65084,"CreatedDateTime":"2013-08-20T10:26:10Z","Content":"\n\u003Cp\u003EI am pretty certain that parts are already not rendered when inside a fairing using UNITY\u0027s built in Occlusion Culling as they are blocked from the camera by the fairing it self. So if you use fairings you already have reduced the amount objects rendered to only each side of the fairing, which is usually only two parts. It is the physics that cause the lag, and it is the physics that make the other part of the idea just not feasible. As many others have pointed out, you cant just suddenly activate the physics on all these objects as crazy glitches will happen.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-20T10:28:34Z\u0022 title=\u002208/20/2013 10:28  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 20, 2013\u003C/time\u003E by Artophwar\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pizzaoverhead","CreatedById":26349,"CreatedDateTime":"2013-08-20T10:42:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Artophwar\u0022 data-cite=\u0022Artophwar\u0022\u003E\u003Cdiv\u003EAs many others have pointed out, you can\u0027t just suddenly activate the physics on all these objects as crazy glitches will happen.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo we know this? The only way to be sure without a dev joining the conversation is for a modder to try it. \u0022There could be bugs\u0022 is a poor reason not to try something.\u003C/p\u003E\n"},{"CreatedByName":"Zaeo","CreatedById":52597,"CreatedDateTime":"2013-08-20T23:20:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pizzaoverhead\u0022 data-cite=\u0022pizzaoverhead\u0022\u003E\u003Cdiv\u003EDo we know this? The only way to be sure without a dev joining the conversation is for a modder to try it. \u0022There could be bugs\u0022 is a poor reason not to try something.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe know this from several other physics simulators that are out there.\u003C/p\u003E\u003Cp\u003ETake for example, Universe sandbox.\u003C/p\u003E\u003Cp\u003EThe faster time goes, the more calculations have to be crammed into a shorter period of time, resulting in a loss of physics accuracy.\u003C/p\u003E\u003Cp\u003ETake for example, take two galaxies roughly 400 million light years from eachother*relatively close, in terms of galactic distances goes* As you accelerate time to 1,000 years a second and beyond, they begin to look like giant solar systems in real time, you see the particles rotating around the center of gravity*galactic core*.\u003C/p\u003E\u003Cp\u003EThe faster time goes, you begin to see some strange things occur... As star *particles* get a close approach to the galactic core, it accelerates FAR beyond the speed of light, and increased further, even the galactic cores begin to break down and get slungshot from eachother at several times the speed of light, leaving the outer rings to drift endlessly without anything to rotate around but themselves.\u003C/p\u003E\u003Cp\u003EThe point that I\u0027m trying to get at, is the \u0022faster\u0022 you are forced to do physics calculations, the more inaccurate they become. shutting off physics of everything in this \u0022magical fairing\u0022, then suddenly enabling them, WILL rip the monstrosities apart that it hides, completely and utterly nullifying any \u0022reduced lag\u0022 benefit you get for actually launching it to space, dealing with the \u0022cruddy\u0022 launch lag over an extended period of time.\u003C/p\u003E\u003Cp\u003ECertainly, under a certain number of part counts, the effect is less and less noticeable, but it still exists. More parts just amplifies it immensely.\u003C/p\u003E\u003Cp\u003ETo this day, the best way to reduce lag would be for unity to support x64 without the game breaking bugs that their current release has.\u003C/p\u003E\u003Cp\u003E4 cores calculating physics \u002B*4 threads* vs 1 core, and up to 64 gigs of ram supported will fix almost ALL of the lag issues up to a point of maybe...3000 part behemouths? of course, old hardware is old hardware. *i know it is more involved than that, but these two things will seriously help*\u003C/p\u003E\u003Cp\u003EUnderstand now?\u003C/p\u003E\u003Cp\u003EPS: never underestimate the diversity of the internet. you have fools who play video games, but there are also quite a few tech-savvy gamers out there as well. don\u0027t rely on \u0022Devs\u0022 and \u0022modders\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_happy.png\u0022 alt=\u0022^_^\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-20T23:29:38Z\u0022 title=\u002208/20/2013 11:29  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 20, 2013\u003C/time\u003E by Zaeo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pizzaoverhead","CreatedById":26349,"CreatedDateTime":"2013-08-21T11:07:46Z","Content":"\n\u003Cp\u003EThe theory being suggested is that resuming physics would have an effect similar to the Kraken, moving and detaching parts or similar. I hypothesise that slowdown due to extra processing during resuming physics would be dealt with the same as slowdown due to part-heavy craft; using the physics delta time. Any glitches should be visible under regular heavy load, unless the effect is due to resuming physics. As we are potentially dealing with situation-specific effects, comparison with other physics simulations is unhelpful.\u003C/p\u003E\u003Cp\u003EWe have exactly one example of suddenly resuming physics, acting on the whole craft at once: Leaving on-rails physics, when leaving time warp for example.\u003C/p\u003E\u003Cp\u003EIf there is any evidence of the Kraken effect, I would like to see it.\u003C/p\u003E\u003Cp\u003EThis is why we need real-world data from experimentation by either the devs or modders.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-21T11:11:40Z\u0022 title=\u002208/21/2013 11:11  AM\u0022 data-short=\u002210 yr\u0022\u003EAugust 21, 2013\u003C/time\u003E by pizzaoverhead\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Cannibal","CreatedById":77789,"CreatedDateTime":"2013-08-21T11:55:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woppeldopple\u0022 data-cite=\u0022woppeldopple\u0022\u003E\u003Cdiv\u003EVery bad idea. You want to disable all the phyics within your magic bobble leading to the ability to launch the most rediculous constructs to space that normally would completely distort the rocket and everything else?\u003Cp\u003EWhat about torsion forces and inertia of your giant part? The fact its stable in space doesn\u0027t mean it is stable during launch with high G-stress. \u003C/p\u003E\u003Cp\u003EThis would completely destroy the idea of KerbalSpaceProgram.\u003C/p\u003E\u003Cp\u003EWhat you want is a magic cheat box to bring your too big constructs with a too slow computer in orbit - the thread should be renamed accordingly.\u003C/p\u003E\u003Cp\u003EJust use docking!\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EYou cannot launch \u003C/span\u003E\u003Cem\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003Eanything\u003C/span\u003E\u003C/em\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E.\u003C/span\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 alt=\u0022:sticktongue:\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have to disagree with your assessment. The game suffers badly from structural stability problems (attach main sail --\u0026gt; small silver tank --\u0026gt; other tank --\u0026gt; command pod and watch the rocket bend and flex like jelly at the connection between the silver and other tank), and will suffer bigtime from aerodynamic problems with the 10\u0027s of struts needed to stabilize a naked/rough edged payload since we don\u0027t have a stock way of putting a custom launch fairing around a payload.\u003C/p\u003E\u003Cp\u003EA proposal like this looks good now and will be an absolute necessity once realistic aerodynamics come in.\u003C/p\u003E\u003Cp\u003ESome real world examples of why flexible fairings are a necessity if realistic aerodynamics come in:\u003C/p\u003E\u003Cp\u003E1) Proton rocket configured to launch a single dense object smaller than the central column (big diameter)\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://defense-update.com/wp-content/uploads/2013/07/protonm.jpg\u0022 alt=\u0022protonm.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E2) Proton rocket configured to launch 3 GLONASS M satellites side by side has a fairing slightly larger than the rocket body, but shown here wrapped in a thermal management sheath.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://www.spacedaily.com/images-lg/proton-m-rocket-glonass-m-nav-satellite-lg.jpg\u0022 alt=\u0022proton-m-rocket-glonass-m-nav-satellite-lg.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E3) Proton rocket diagram showing it with an optional very large diameter fairing for a very wide payload\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://02varvara.files.wordpress.com/2013/07/00-ria-novosti-infographics-technical-specifications-of-the-proton-m-carrier-rocket-2013.jpg?w=1200\u0026amp;h=1460\u0022 alt=\u002200-ria-novosti-infographics-technical-specifications-of-the-proton-m-carrier-rocket-2013.jpg?w=1200\u0026amp;h=1460\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Psycix","CreatedById":76916,"CreatedDateTime":"2013-08-21T12:56:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zaeo\u0022 data-cite=\u0022Zaeo\u0022\u003E\u003Cdiv\u003EWe know this from several other physics simulators that are out there.\u003Cp\u003ETake for example, Universe sandbox.\u003C/p\u003E\u003Cp\u003EThe faster time goes, the more calculations have to be crammed into a shorter period of time, resulting in a loss of physics accuracy.\u003C/p\u003E\u003Cp\u003ETake for example, take two galaxies roughly 400 million light years from eachother*relatively close, in terms of galactic distances goes* As you accelerate time to 1,000 years a second and beyond, they begin to look like giant solar systems in real time, you see the particles rotating around the center of gravity*galactic core*.\u003C/p\u003E\u003Cp\u003EThe faster time goes, you begin to see some strange things occur... As star *particles* get a close approach to the galactic core, it accelerates FAR beyond the speed of light, and increased further, even the galactic cores begin to break down and get slungshot from eachother at several times the speed of light, leaving the outer rings to drift endlessly without anything to rotate around but themselves.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat do inaccuracies in sped up physics have to do with this? We\u0027re freezing it, not speeding it up. \u003C/p\u003E\u003Cp\u003EActually, we\u0027re saving CPU so that the rest of the rocket can simulate lagless AND accurately.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zaeo\u0022 data-cite=\u0022Zaeo\u0022\u003E\u003Cdiv\u003EThe point that I\u0027m trying to get at, is the \u0022faster\u0022 you are forced to do physics calculations, the more inaccurate they become. shutting off physics of everything in this \u0022magical fairing\u0022, then suddenly enabling them,\u003Cstrong\u003E WILL rip the monstrosities apart that it hides\u003C/strong\u003E, completely and utterly nullifying any \u0022reduced lag\u0022 benefit you get for actually launching it to space, dealing with the \u0022cruddy\u0022 launch lag over an extended period of time.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESpeculation.\u003C/p\u003E\u003Cp\u003EAn entire rocket can go from frozen to an acceleration of 9.81 without spazzing out.\u003C/p\u003E\u003Cp\u003EWhy would a part of a rocket not be able to unfreeze, especially in zero-G?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zaeo\u0022 data-cite=\u0022Zaeo\u0022\u003E\u003Cdiv\u003ECertainly, under a certain number of part counts, the effect is less and less noticeable, but it still exists. More parts just amplifies it immensely.\u003Cp\u003ETo this day, the best way to reduce lag would be for unity to support x64 without the game breaking bugs that their current release has.\u003C/p\u003E\u003Cp\u003E4 cores calculating physics \u002B*4 threads* vs 1 core, and up to 64 gigs of ram supported will fix almost ALL of the lag issues up to a point of maybe...3000 part behemouths? of course, old hardware is old hardware. *i know it is more involved than that, but these two things will seriously help*\u003C/p\u003E\u003Cp\u003EUnderstand now?\u003C/p\u003E\u003Cp\u003EPS: never underestimate the diversity of the internet. you have fools who play video games, but there are also quite a few tech-savvy gamers out there as well. don\u0027t rely on \u0022Devs\u0022 and \u0022modders\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_happy.png\u0022 alt=\u0022^_^\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESuch a fundamental engine change is not gonna happen.\u003C/p\u003E\u003Cp\u003EI completely agree that KSP would be better off running on a more powerful engine where physics run in a multi-threaded, GPU-accelerated environment. The fastest way to achieve this is to rebuild the game from scratch on a different engine.\u003C/p\u003E\u003Cp\u003EWe are stuck to 1 CPU core, and there is no way around this. If we want to get the most out of it, sacrifice is required: part count limitation, slow gameplay and lag, inaccurate physics, or tricks that lower the load on the simulation like physics-freezing fairings. Pick your poison.\u003C/p\u003E\u003Cp\u003EThe fairing is not a perfect solution, but it\u0027s as good as it gets in this non-perfect engine.\u003C/p\u003E\n"},{"CreatedByName":"allmappedout","CreatedById":57281,"CreatedDateTime":"2013-08-21T13:31:57Z","Content":"\n\u003Cp\u003EFor my 2c, having a sudden loading of physics impacts a craft - we can see this on the launchpad. A craft that is put together in the VAB may all of a sudden just collapse in on itself \u003Cem\u003Esometimes\u003C/em\u003E, and then other times it may be okay to launch. The physics calcs aren\u0027t perfect, and loading an amount of physics all of a sudden (as is the case from purple light to green light pre-launch) can cause spikes in the calculation which can cause issues.\u003C/p\u003E\u003Cp\u003ENot saying this would definitely happen, but also not saying it definitely wouldn\u0027t, and if it ever did, I\u0027d be a bit frustrated that my vehicle tears itself apart after getting it up there (I prefer it to fall apart on the pad \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E )\u003C/p\u003E\n"},{"CreatedByName":"Winter Man","CreatedById":11358,"CreatedDateTime":"2013-08-21T14:52:38Z","Content":"\n\u003Cp\u003EEven if ejecting a hidden thingymabob from a fairing induced a little temporary lag, you could hide it with an animation of the fairing slowly detaching and locking out controls for a couple of seconds.\u003C/p\u003E\n"},{"CreatedByName":"Rascal Nag","CreatedById":9451,"CreatedDateTime":"2013-08-21T16:07:04Z","Content":"\n\u003Cp\u003EI don\u0027t think I can get past the fact that this would make things inside fairings invincible. And as people said, once the fairing opens, the part count shoots up and all of it is wasted. It seems like less of a performance piece, and more of a \u0022make launches easier\u0022 piece. While that may not be the goal of the part, it certainly seems like the end result. My advice would be to break up payloads that are too big and awkward to lift in one launch and dock them later, or aim to make them as lean as possible.\u003C/p\u003E\u003Cp\u003EI still think fairings should be added, of course. And they still could make launches easier - but it would be through aerodynamics alone rather than through turning off physics for a payload.\u003C/p\u003E\n"},{"CreatedByName":"Psycix","CreatedById":76916,"CreatedDateTime":"2013-08-21T20:20:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rascal Nag\u0022 data-cite=\u0022Rascal Nag\u0022\u003E\u003Cdiv\u003EI don\u0027t think I can get past the fact that this would make things inside fairings invincible. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBut the fairing itself is vulnerable.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rascal Nag\u0022 data-cite=\u0022Rascal Nag\u0022\u003E\u003Cdiv\u003EAnd as people said, once the fairing opens, the part count shoots up and all of it is wasted. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBy which time at least the first (and by far the largest) stage of the rocket has already been separated.\u003C/p\u003E\u003Cp\u003EPeople somehow keep forgetting this, so I\u0027m going to run a simple thought experiment for you guys. The numbers are arbitrary but do help showing how the lag is kept under control through the fairings.\u003C/p\u003E\u003Cp\u003EAssume our CPU can simulate up to 300 parts smoothly.\u003C/p\u003E\u003Cp\u003EImagine this situation:\u003C/p\u003E\u003Cp\u003E-200 part lifter\u003C/p\u003E\u003Cp\u003E-200 part payload\u003C/p\u003E\u003Cp\u003E-100 part structural reinforcement which the payload would need to be reinforced with for launch.\u003C/p\u003E\u003Cp\u003ETogether they are 500 parts and would overstrain the CPU causing massive lag.\u003C/p\u003E\u003Cp\u003ESo now we slap on an anti-lag-fairing. The fairing freezes the payload. The structural reinforcement no longer needs to provide structural integrity for launch and is reduced to 10. The fairing base weighs a bit more than this reinforcement would.\u003C/p\u003E\u003Cp\u003EThe 200 part lifter \u002B fairing lies within the CPU budget and flies up smoothly. As stages separate, the lifter reduces to an upper stage of 50 parts.\u003C/p\u003E\u003Cp\u003ENow we separate the fairing where payload physics comes back into play. Let\u0027s see what we got: 50 part lifter \u002B 200 part payload \u002B 10 part structure = 260 parts. 260 parts are within our budget and therefor we can enjoy a lag-free flight while we circularize our orbit.\u003C/p\u003E\u003Cp\u003EYou can benefit even more by, for example, encapsulating a rover in it\u0027s own fairing, which is kept closed until the rover deploys and separates from the lander.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rascal Nag\u0022 data-cite=\u0022Rascal Nag\u0022\u003E\u003Cdiv\u003EMy advice would be to break up payloads that are too big and awkward to lift in one launch and dock them later, or aim to make them as lean as possible.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, yes, breaking things up in multiple pieces and docking them together is easy and effective. The problem is that once everything is assembled, the end result is wobbly, contains extra parts (docking ports), and perhaps even more if you need RCS on every module to dock.\u003C/p\u003E\u003Cp\u003EWant to use something like quantum struts to reinforce the docking connections? Part count goes through the roof.\u003C/p\u003E\u003Cp\u003EThis is the reason I attempt to send up as much as possible in one monolithic unit: No overhead parts and strong structural connections.\u003C/p\u003E\u003Cp\u003ESo while the split-up approach seems to be an answer to the lag, it is actually counter-effective after assembly!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-08-21T22:07:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rascal Nag\u0022 data-cite=\u0022Rascal Nag\u0022\u003E\u003Cdiv\u003EI don\u0027t think I can get past the fact that this would make things inside fairings invincible.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd I can\u0027t get past the fact that people keep claiming this as a \u0022fact\u0022 instead of actually reading what was proposed. The proposal does not call for the fairings to be invincible.\u003C/p\u003E\n"}]}