{"TopicId":142712,"ForumId":66,"TopicTitle":"Devnote Tuesday: Smashing Buttons","CreatedByName":"SQUAD","CreatedById":66485,"CreatedDateTime":"2016-06-28T21:18:12Z","PageNum":4,"Articles":[{"CreatedByName":"Monger","CreatedById":4143,"CreatedDateTime":"2016-06-29T13:23:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652184\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467149771\u0022 data-ipsquote-userid=\u002275006\u0022 data-ipsquote-username=\u0022NathanKell\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, NathanKell said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWe\u0027re converting them all to for loops.\n\u003C/p\u003E\n\u003Cp\u003E\nThe issue is that in Unity\u0027s mono, foreach creates garbage. And linq more or less _has_ to create garbage AIUI, and it does it in spades in Unity.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis sounds unhealthy. Have you considered overriding the Enumerator (which seems to create this mess) with a bug-free implementation?\n\u003C/p\u003E\n\u003Cp\u003E\nI can understand why you may want to avoid LINQ expressions, late evaluation can easily blow up in your face. But for-each loops are usually much, much safer and sometimes even faster than regular for loops. Rewriting half your code base because of one bug sounds not very reasonable.\n\u003C/p\u003E\n"},{"CreatedByName":"nightingale","CreatedById":119307,"CreatedDateTime":"2016-06-29T13:39:53Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652895\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467197404\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI wasn\u0027t aware of the issues with \u0022foreach\u0022. \u00A0I like it because it makes the code simpler, but if it contributes to the lagging, I\u0027ll be working on removing them from all my mods. \u00A0gonna take some time though\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://www.somasim.com/blog/2015/04/csharp-memory-and-performance-tips-for-unity/\u0022 rel=\u0022external nofollow\u0022\u003EHere\u003C/a\u003E\u0027s a pretty good article which compares a few different ways of doing things, and the performance implications in Unity/Mono. \u00A0Of particular interest is this summary:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// const SIZE = 16 * 1024 * 1024;\n// array is an int[]\n// list is a List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;int\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n1a. for (int i = 0; i \u0026lt; SIZE; i\u002B\u002B) { x \u002B= array[i]; }\n1b. for (int i = 0; i \u0026lt; SIZE; i\u002B\u002B) { x \u002B= list[i]; }\n2a. foreach (int val in array) { x \u002B= val; }\n2b. foreach (int val in list) { x \u002B= val; }\n 3. x = list.Sum(); // linq extension\n\n                              time   memory\n1a. for loop over array .... 35 ms .... 0 B\n1b. for loop over list ..... 62 ms .... 0 B\n2a. foreach over array ..... 35 ms .... 0 B\n2b. foreach over list ..... 120 ms ... 24 B\n 3. linq sum() ............ 271 ms ... 24 B\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nLINQ is the best from a code readability and maintainability perspective. \u00A0But the cost is just too darn high.\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-06-29T13:50:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653048\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467203426\u0022 data-ipsquote-userid=\u0022110351\u0022 data-ipsquote-username=\u0022marce\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, marce said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot the compiler, the runtime. And Unity is to blame (at least for a big part) because they keep using this stone-age version of Mono instead of paying Miguel (now that would be MS I suppose) for a new one.\u003Cbr\u003E\nAnyway, I think I read something about Unity working on a .NET Native like project to improve performance.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTo add to what \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/97386-padishar/\u0026amp;do=hovercard\u0022 data-mentionid=\u002297386\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/97386-padishar/\u0022 rel=\u0022\u0022\u003E@Padishar\u003C/a\u003E\u00A0said : Unity uses mono on many platforms. All the console/phone platform uses the mono code/binaries that Xamarin wrote. Those console/phone version were not open source and free, and you needed a licence from Xamarin to use them. Unity wanted to upgrade their runtimes but Xamarin asked too much money (Unity\u0027s version here, not mine) for the new license.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTo avoid paying for those high fee Unity developed their IL2CPP system (that also allow them to follow the \u0022no interpreted code\u0022 Apple guideline).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nNow Microsoft has released a open source .NET implementation (CoreCRL)\u00A0and\u00A0bought Xamarin. The whole Xamarin code base has been\u00A0opened and the\u00A0Mono also include a lot of the MS code (that is way better in some aspect). So no new licence needed.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nUnity now plan to upgrade their .NET runtimes. It may be that the Desktop will run on CoreCRL and all the other system in IL2PP in the future.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"joebopie","CreatedById":49911,"CreatedDateTime":"2016-06-29T13:52:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653032\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467202707\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBad implementaiton in the c# compiler, not unity.\n\u003C/p\u003E\n\u003Cp\u003E\nand instead of \u0022correct\u0022, I would say \u0022preferred\u0022 in terms of maintainability and readability.\n\u003C/p\u003E\n\u003Cp\u003E\nThat is an excellent explanation, thank you for putting it so clearly\n\u003C/p\u003E\n\u003Cp\u003E\nAre you looking at the KSP.log or the output_log.txt file?\n\u003C/p\u003E\n\u003Cp\u003E\nKSP.log doesn\u0027t show everything. \u00A0Check the KSP_Data/output_log.txt (for 32 bit) or KSP_x64_Data/output_log.txt (for 64 bit)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t think it is recording anything in that log ether. it looks like it normally\u00A0does if it doesn\u0027t crash. it seems unity is totaly crashing. i will keep investigating.it could be a specific mod.\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-06-29T13:53:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653161\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467207593\u0022 data-ipsquote-userid=\u0022119307\u0022 data-ipsquote-username=\u0022nightingale\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 minutes ago, nightingale said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://www.somasim.com/blog/2015/04/csharp-memory-and-performance-tips-for-unity/\u0022 rel=\u0022external nofollow\u0022\u003EHere\u003C/a\u003E\u0027s a pretty good article which compares a few different ways of doing things, and the performance implications in Unity/Mono. \u00A0Of particular interest is this summary:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022lit\u0022\u003E2a\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E foreach over array \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.....\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E35\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ms \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E....\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E B\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nLINQ is the best from a code readability and maintainability perspective. \u00A0But the cost is just too darn high.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nJust to avoid to confuse anyone : foreach over an array is the only foreach\u00A0case that does not use any memory.\n\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-06-29T13:56:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653133\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467206635\u0022 data-ipsquote-userid=\u00224143\u0022 data-ipsquote-username=\u0022Monger\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, Monger said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis sounds unhealthy. Have you considered overriding the Enumerator (which seems to create this mess) with a bug-free implementation?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat isn\u0027t possible. \u00A0The bug isn\u0027t in the enumerator, it is the Mono runtime that incorrectly allocates the struct returned from GetEnumerator on the heap.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653133\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467206635\u0022 data-ipsquote-userid=\u00224143\u0022 data-ipsquote-username=\u0022Monger\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, Monger said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI can understand why you may want to avoid LINQ expressions, late evaluation can easily blow up in your face. But for-each loops are usually much, much safer and sometimes even faster than regular for loops.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt isn\u0027t anything to do with late\u00A0evaluation, that part of LINQ is fine and can significantly improve some things like database access. \u00A0The real problem is that various LINQ constructs end up creating temporary arrays of results (on the heap regardless of runtime) and lots of enumerator objects\u00A0(also on the heap in Unity\u0027s Mono) resulting\u00A0in large quantities of garbage. \u00A0The editor parts list was doing a LINQ query to get the parts in the current category on every frame resulting in ~5 MB/s of garbage (at 60 fps, more at higher frame rates) when showing the largest stock category. \u00A0This was replaced in 1.1.3 which reduced the garbage creation to ~500 KB/s.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653178\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467208398\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nJust to avoid to confuse anyone : foreach over an array is the only foreach\u00A0case that does not use any memory.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIndeed, this is because of a specific optimisation in Mono that converts foreach over an array into a plain for loop. \u00A0That\u0027s why the time is also the same as the 1a\u00A0case.\n\u003C/p\u003E\n"},{"CreatedByName":"Navy2k","CreatedById":95246,"CreatedDateTime":"2016-06-29T13:57:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652256\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467152493\u0022 data-ipsquote-userid=\u002259329\u0022 data-ipsquote-username=\u0022Caelib\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Caelib said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI will admit it saddens me that 1.2 will not be a graphical update to the game, but I can wait \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCome to \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003E\u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E\u003C/abbr\u003E, we have cookies and RVE \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003Ca href=\u0022http://imgur.com/a/CR5Sh\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://imgur.com/a/CR5Sh\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBut not right now, right now is bad\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-29T13:58:59Z\u0022 title=\u002206/29/2016 01:58  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 29, 2016\u003C/time\u003E by Navy2k\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Terwin","CreatedById":139655,"CreatedDateTime":"2016-06-29T13:58:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652213\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467150827\u0022 data-ipsquote-userid=\u0022113764\u0022 data-ipsquote-username=\u0022Foxster\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Foxster said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOK, I\u0027ve got where you are coming from but the basic game with the solar system and the craft parts hasn\u0027t changed much in quite a while, apart from bits and pieces. I really think it\u0027s time to get creative with the amazing base platform you now have and take the game forward, rather than constantly polishing what you have.\n\u003C/p\u003E\n\u003Cp\u003E\nOtherwise you know someone is going to steal the basic idea and make a more engaging\u00A0product,\u00A0leading to the demise of KSP.\u00A0\u00A0\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCan you think of anything that should be added to the game that is not already available in a mod?\n\u003C/p\u003E\n\u003Cp\u003E\nThe only thing you cannot add via a mod is a rock-solid foundation, and that is what they are working on now.\n\u003C/p\u003E\n\u003Cp\u003E\nOnce that is in place, it will be quicker and easier to add new features and those that use mods will be able to support even more mods.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652232\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467151452\u0022 data-ipsquote-userid=\u0022146334\u0022 data-ipsquote-username=\u0022Glaran K\u0027erman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Glaran K\u0027erman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nGreat DevNotes! Just one thing missing, the poem.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cspan style=\u0022font-size:8px;\u0022\uu003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHey people who code, how\u00A0does it feel not understanding anything \u003Cem\u003Eyou\u003C/em\u003E\u00A0just read!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIn this day and age there are only 10\u00A0reasons not to understand something you are reading online:\n\u003C/p\u003E\n\u003Cp\u003E\n01: the content is actually meaningless giberish\n\u003C/p\u003E\n\u003Cp\u003E\n10: you do not consider the content worth the effort to decipher using the tools available to you.\n\u003C/p\u003E\n\u003Cp\u003E\nPersonally, my curiosity puts a pretty high bar on how much effort I am willing to go through to understand something.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652417\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467160627\u0022 data-ipsquote-userid=\u002281697\u0022 data-ipsquote-username=\u0022kiwi1960\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, kiwi1960 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBy restarts..... I mean having to restart my entire game from scratch... as is always the case, it seems.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy 1.1 game has transferred just fine to 1.1.3 (except for the modular fuel tanks mod not being updated last time I checked, leaving me with hundreds of units of oxidizer on a NERV powered ship, but I expect that will be fixed in time, or else I\u0027ll just recover it and launch a new one using different tanks)\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-06-29T13:59:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653133\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467206635\u0022 data-ipsquote-userid=\u00224143\u0022 data-ipsquote-username=\u0022Monger\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n33 minutes ago, Monger said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI can understand why you may want to avoid LINQ expressions, late evaluation can easily blow up in your face. But for-each loops are usually much, much safer and sometimes even faster than regular for loops. Rewriting half your code base because of one bug sounds not very reasonable.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis would be fine with a modern GC that allocate those short lived object in a specific memory zone to clean them up faster later. But we do not have it so even a 24 byte allocation manage to hurt performance. The article\u00A0nightingale linked is a good read on Unity memory \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-06-29T14:09:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653133\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467206635\u0022 data-ipsquote-userid=\u00224143\u0022 data-ipsquote-username=\u0022Monger\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Monger said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBut for-each loops are usually much, much safer and sometimes even faster than regular for loops.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe only way in which they can be safer is that they don\u0027t allow you to mess with the index in the loop body which is usually more of a hindrance than a help. \u00A0Can you provide an example of a foreach loop being faster than a (correctly written) for loop? \u00A0Given what the compiler and runtime does, I can\u0027t see any way that this could ever be the case.\n\u003C/p\u003E\n\u003Cp\u003E\nThe real killer with foreach is when you nest it, from a little further down that article listed:\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp style=\u0022color:rgb(0,0,0);font-family:Verdana;font-size:13px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;\u0022\u003E\nLet\u2019s try something else, this time the same number of elements only arranged in a 2D array, of 4K arrays or lists each 4K elements long, using\u00A0nested\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cem\u003Efor\u003C/em\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eloops vs nested\u00A0\u003Cem\u003Eforeach\u003C/em\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eloops:\n\u003C/p\u003E\n\u003Cpre style=\u0022color:rgb(0,0,0);font-size:13px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-indent:0px;text-transform:none;word-spacing:0px;\u0022\u003E\n\n                                      time    memory\n1a. for loops over array[][] ......  35 ms ..... 0 B\n1b. for loops over list\u0026lt;list\u0026lt;int\u0026gt;\u0026gt; . 60 ms ..... 0 B\n2a. foreach on array[][] ........... 35 ms ..... 0 B\n2b. foreach on list\u0026lt;list\u0026lt;int\u0026gt;\u0026gt; .... 120 ms .... 96 KB \u0026lt;-- \u003C/pre\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHere, there are 4097 temporary enumerator\u00A0objects being allocated, one for the outer loop and one for each time the inner loop is run. \u00A0It is easy to write that sort of code in KSP where there is a List\u0026lt;Vessel\u0026gt;, each\u00A0vessel contains a List\u0026lt;Part\u0026gt; and Part contains several other lists. \u00A0If you\u0027re not careful you can write a function that causes many megabytes of garbage every time it\u0027s run...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-29T17:53:30Z\u0022 title=\u002206/29/2016 05:53  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 29, 2016\u003C/time\u003E by Padishar\u003C/strong\u003E\n\u003Cbr\u003Etypo\n\u003C/span\u003E\n"},{"CreatedByName":"Speadge","CreatedById":145302,"CreatedDateTime":"2016-06-29T14:35:25Z","Content":"\n\u003Cp\u003E\nshouldnt we add this discussion to the Add-On-Forum and try to make sure as much as possible modders are going to rework their mods for that? =\u0026gt; Sticky, red highlighted blinking font?\n\u003C/p\u003E\n\u003Cp\u003E\nMost people suffering with the Garbage Problems use tons of mods and it might take much pressure from the devs to \u0022optimize the game\u0022, when all mods would be optimized as well..\u003Cbr\u003E\nThe Community would therefor add to the Optimization of the game as well as to the content as it is doing today.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-29T14:36:15Z\u0022 title=\u002206/29/2016 02:36  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 29, 2016\u003C/time\u003E by Speadge\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2016-06-29T14:39:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653187\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467208583\u0022 data-ipsquote-userid=\u002297386\u0022 data-ipsquote-username=\u0022Padishar\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n23 minutes ago, Padishar said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat isn\u0027t possible. \u00A0The bug isn\u0027t in the enumerator, it is the Mono runtime that incorrectly allocates the struct returned from GetEnumerator on the heap.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe bug\u0027s in the compiler used, not the runtime itself. The following, built in VS, doesn\u0027t generate any garbage in Update() because the emitted IL doesn\u0027t box the value type iterator before calling dispose on it like it would when built from Unity\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E[KSPAddon(KSPAddon.Startup.MainMenu, false)]\npublic class ExampleScript : MonoBehaviour\n{\n    private readonly List\u0026lt;List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;int\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\u0026gt; _list = new List\u0026lt;List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;int\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\u0026gt;();\n\n    private void Start()\n    {\n        for (int i = 0; i \u0026lt; 4096; \u002B\u002Bi)\n        {\n            _list.Add(new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;int\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(Enumerable.Repeat(1, 4096)));\n        }\n    }\n\n    public void Update()\n    {\n        int i = 0;\n\n        foreach (var list in _list)\n        {\n            foreach (var item in list)\n                i \u002B= item;\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Xavven","CreatedById":100398,"CreatedDateTime":"2016-06-29T15:13:08Z","Content":"\n\u003Cp\u003E\nI\u0027m an amateur vb.net programmer, and I still use For Each instead of For i wherever I can. It\u0027s \u003Cem\u003Eslightly \u003C/em\u003Emore readable, and the applications I make don\u0027t need to be optimized much because they serve such basic functions. I could see it being a huge deal in a video game, though, when you\u0027re trying to do 60 frames per second. And that said, the readability of this:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor i = 0 to MyList.Count - 1\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nDoStuff(MyList.item(i))\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\ni \u002B= 1\n\u003C/p\u003E\n\u003Cp\u003E\nLoop\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n...isn\u0027t \u003Cem\u003Ethat \u003C/em\u003Emuch harder to read than this:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor Each MyItem as fooType in MyList\n\u003C/p\u003E\n\u003Cp style=\u0022margin-left:40px;\u0022\u003E\nDoStuff(MyItem)\n\u003C/p\u003E\n\u003Cp\u003E\nLoop\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s good to have the options and know the strengths and drawback of each, though. Thanks for the info!\n\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-06-29T15:27:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653253\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467211148\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 minutes ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe bug\u0027s in the compiler used, not the runtime itself. The following, built in VS, doesn\u0027t generate any garbage in Update() because the emitted IL doesn\u0027t box the value type iterator before calling dispose on it like it would when built from Unity\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is true, the problem is supposedly in the compiler shipped with Unity (though I have seen a few odd behaviours\u00A0that seem to contradict this). \u00A0The replacement of foreach loops in mods should\u00A0not be\u00A0necessary from a garbage standpoint (assuming the object in question does return a struct from GetEnumerator and you\u00A0build your mod with a non-broken compiler)\u00A0though it will still make a small difference to the performance. \u00A0KSP does\u00A0use\u00A0the Unity compiler so it\u00A0does suffer from this and does benefit from removing foreach. \u00A0I am a bit surprised that they didn\u0027t investigate building their assemblies with the MS compiler (or a newer Mono one?) instead of replacing all the foreach loops, though they would still need to clean up a lot of LINQ stuff and other sources of garbage.\n\u003C/p\u003E\n"},{"CreatedByName":"TheKosanianMethod","CreatedById":163034,"CreatedDateTime":"2016-06-29T15:56:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652232\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467151452\u0022 data-ipsquote-userid=\u0022146334\u0022 data-ipsquote-username=\u0022Glaran K\u0027erman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, Glaran K\u0027erman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nGreat DevNotes! Just one thing missing, the poem.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cspan style=\u0022font-size:8px;\u0022\uu003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHey people who code, how\u00A0does it feel not understanding anything \u003Cem\u003Eyou\u003C/em\u003E\u00A0just read!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n54 68 65 49 6e 74 65 72 6e 65 74 49 73 41 6d 61 7a 69 6e 67\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-29T16:19:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652232\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467151452\u0022 data-ipsquote-userid=\u0022146334\u0022 data-ipsquote-username=\u0022Glaran K\u0027erman\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, Glaran K\u0027erman said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nGreat DevNotes! Just one thing missing, the poem.\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cspan style=\u0022font-size:8px;\u0022\uu003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHey people who code, how\u00A0does it feel not understanding anything \u003Cem\u003Eyou\u003C/em\u003E\u00A0just read!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHappens to me all the time\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653178\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467208398\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nJust to avoid to confuse anyone : foreach over an array is the only foreach\u00A0case that does not use any memory.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHmmm. \u00A0So the following two examples are essentially identical:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Estring[] sar = new string[1000];\n\nforeach (string s in sar)\n\nvs\n\nfor (int i = sar.Count - 1; i \u0026gt;= 0; i\u002B\u002B)\n\n\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis will help, I do a lot of foreach\u0027s over string arrays\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-29T16:25:35Z\u0022 title=\u002206/29/2016 04:25  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 29, 2016\u003C/time\u003E by linuxgurugamer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2016-06-29T16:42:54Z","Content":"\n\u003Cp\u003E\nCan we lay off the ASCII binary, etc? It violates rule 2.4b and makes the thread harder to read.\n\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-06-29T16:57:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653446\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467217166\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n33 minutes ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHmmm. \u00A0So the following two examples are essentially identical:\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, in terms of speed and memory use, yes. \u00A0The second one scans through them in the reverse order which could have a significant effect on what the code actually does.\n\u003C/p\u003E\n\u003Cp\u003E\nNote\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0026amp;do=hovercard\u0022 data-mentionid=\u002275857\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/75857-xevilreeperx/\u0022 rel=\u0022\u0022\u003E@xEvilReeperx\u003C/a\u003E\u0027s comment above (and my confirmation) that foreach only gives \u00A0garbage problems when the code is compiled with the compiler that is shipped as part of Unity. \u00A0If you use VisualStudio (or, probably, a recent version of MonoDevelop) then you don\u0027t really need to change foreach at all.\n\u003C/p\u003E\n"},{"CreatedByName":"marce","CreatedById":110351,"CreatedDateTime":"2016-06-29T17:18:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653171\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467208255\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n[...]\n\u003C/p\u003E\n\u003Cp\u003E\nUnity now plan to upgrade their .NET runtimes. It may be that the Desktop will run on CoreCRL and all the other system in IL2PP in the future.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nGood news! Thanks for the info.\n\u003C/p\u003E\n"},{"CreatedByName":"FullMetalMachinist","CreatedById":156531,"CreatedDateTime":"2016-06-29T17:29:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653482\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467218574\u0022 data-ipsquote-userid=\u002212858\u0022 data-ipsquote-username=\u0022Red Iron Crown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n43 minutes ago, Red Iron Crown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt \u003Cs\u003Eviolates rule 2.4b and\u003C/s\u003E makes the thread harder to read.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSame could be said for all the coding discussion. I know that it\u0027s on-topic for this particular dev notes, just saying that the depth and specifics of that probably deserves it\u0027s own thread in Add-on Discussions.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n(And yes, I know \u0022if you don\u0027t want to read about the code, ignore those posts.\u0022 I\u0027m just saying that the same could be said about the binary stuff.)\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Red Iron Crown","CreatedById":12858,"CreatedDateTime":"2016-06-29T17:32:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653543\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467221385\u0022 data-ipsquote-userid=\u0022156531\u0022 data-ipsquote-username=\u0022FullMetalMachinist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, FullMetalMachinist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSame could be said for all the coding discussion. I know that it\u0027s on-topic for this particular dev notes, just saying that the depth and specifics of that probably deserves it\u0027s own thread in Add-on Discussions.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n(And yes, I know \u0022if you don\u0027t want to read about the code, ignore those posts.\u0022 I\u0027m just saying that the same could be said about the binary stuff.)\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe binary stuff is deliberately obfuscated, which is what 2.4b is meant to prevent.\n\u003C/p\u003E\n\u003Cp\u003E\nThe coding talk is not deliberately obfuscated, it\u0027s written as clearly as it can be.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you wish to discuss it further please take it to PM with me or another moderator, as it\u0027s offtopic here.\n\u003C/p\u003E\n"},{"CreatedByName":"Madscientist16180","CreatedById":152769,"CreatedDateTime":"2016-06-29T17:42:39Z","Content":"\n\u003Cp\u003E\nOn my part, if 1.2 brings absolutly nothing else than making everything work as it should, i\u0027ll call it the best KSP update ever.\n\u003C/p\u003E\n\u003Cp\u003E\nTake ALL the time that will be needed, no point rushing release like 1.1if it is not 100% ready.\n\u003C/p\u003E\n\u003Cp\u003E\nCool new stuffs and moar boosters can wait for the next update, as long as everything now work as intended!\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-29T19:15:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653132\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467206618\u0022 data-ipsquote-userid=\u002295246\u0022 data-ipsquote-username=\u0022Navy2k\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Navy2k said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nGo on...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPersistent Dynamic Pod Names, hope to release in a few days. \u00A0Will be able to assign names to individual command pods, as well as having names generated using a predefined template\n\u003C/p\u003E\n"},{"CreatedByName":"RocketSquid","CreatedById":152665,"CreatedDateTime":"2016-06-29T19:42:20Z","Content":"\n\u003Cp\u003E\nNow for a poem people can read,:\n\u003C/p\u003E\n\u003Cp\u003E\n1.1.3 is done,\u003Cbr\u003E\nNow we\u0027re on to 1.2.\n\u003C/p\u003E\n\u003Cp\u003E\nSpring cleaning arrives,\u003Cbr\u003E\nEverybody\u0027s getting ready for new Unity\n\u003C/p\u003E\n\u003Cp\u003E\nTalking in devspeak,\u003Cbr\u003E\nThinking like devs think.\n\u003C/p\u003E\n\u003Cp\u003E\nBuilding foundations by tearing down walls,\u003Cbr\u003E\nBreaking linq\u0027s to take out the garbage.\n\u003C/p\u003E\n\u003Cp\u003E\nAsteroid day\u0027s being updated, not a moment too soon,\u003Cbr\u003E\nAntennae are comm-ing, not long, I assume.\u003Cbr\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-29T19:43:53Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653499\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467219421\u0022 data-ipsquote-userid=\u002297386\u0022 data-ipsquote-username=\u0022Padishar\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Padishar said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell, in terms of speed and memory use, yes. \u00A0The second one scans through them in the reverse order which could have a significant effect on what the code actually does.\n\u003C/p\u003E\n\u003Cp\u003E\nNote\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0026amp;do=hovercard\u0022 data-mentionid=\u002275857\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/75857-xevilreeperx/\u0022 rel=\u0022external\u0022\u003E@xEvilReeperx\u003C/a\u003E\u0027s comment above (and my confirmation) that foreach only gives \u00A0garbage problems when the code is compiled with the compiler that is shipped as part of Unity. \u00A0If you use VisualStudio (or, probably, a recent version of MonoDevelop) then you don\u0027t really need to change foreach at all.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI was referring to speed \u0026amp; memory use, thanks.\n\u003C/p\u003E\n\u003Cp\u003E\nBut, it seems that I don\u0027t have to do anything, since I\u0027m using VisualStudio, the compiler is already fixed.\n\u003C/p\u003E\n\u003Cp\u003E\ncool.\n\u003C/p\u003E\n"}]}