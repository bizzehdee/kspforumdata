{"TopicId":142712,"ForumId":66,"TopicTitle":"Devnote Tuesday: Smashing Buttons","CreatedByName":"SQUAD","CreatedById":66485,"CreatedDateTime":"2016-06-28T21:18:12Z","PageNum":5,"Articles":[{"CreatedByName":"Navy2k","CreatedById":95246,"CreatedDateTime":"2016-06-30T07:17:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653700\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467227749\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPersistent Dynamic Pod Names, hope to release in a few days. \u00A0Will be able to assign names to individual command pods, as well as having names generated using a predefined template\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThank squad for 64bit. =)\n\u003C/p\u003E\n\u003Cp\u003E\nSo I have my \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E Apollo style capsule called Hermes, and your mod could automatically name all launched ones Hermes 1 to Hermes n?\n\u003C/p\u003E\n"},{"CreatedByName":"Mr. Quark","CreatedById":156334,"CreatedDateTime":"2016-06-30T08:52:25Z","Content":"\n\u003Cp\u003E\nWhy can\u0027t ya\u0027ll have a constant alpha version for testing on steam? Not trying to be\u00A0someone who begs or wastes time, But isn\u0027t that a quick thing to do?\n\u003C/p\u003E\n\u003Cp\u003E\nAs in alpha etc,,, Like making the ability to test 1.2 just say a warning to only do it if you:\n\u003C/p\u003E\n\u003Cp\u003E\nA. Know what you are doing,\n\u003C/p\u003E\n\u003Cp\u003E\nB. Backup the game before,\n\u003C/p\u003E\n\u003Cp\u003E\nC. All of the above.\n\u003C/p\u003E\n\u003Cp\u003E\nDoes that lay it out nicely?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-30T08:56:14Z\u0022 title=\u002206/30/2016 08:56  AM\u0022 data-short=\u00228 yr\u0022\u003EJune 30, 2016\u003C/time\u003E by Mr. Quark\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-06-30T09:29:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222654661\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467276745\u0022 data-ipsquote-userid=\u0022156334\u0022 data-ipsquote-username=\u0022Mr. Quark\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 minutes ago, Mr. Quark said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhy can\u0027t ya\u0027ll have a constant alpha version for testing on steam?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere are some very good \u0022Developer Articles\u0022 by \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/26298-ted/\u0026amp;do=hovercard\u0022 data-mentionid=\u002226298\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/26298-ted/\u0022 rel=\u0022\u0022\u003E@Ted\u003C/a\u003E\u00A0describing how Squad\u0027s dev process works and a number of the recent devnotes have also talked about changes.\n\u003C/p\u003E\n\u003Cp\u003E\nIt appears to be mostly due to two main reasons. \u00A0First, no matter how many warnings and disclaimers are added you will always get people who either don\u0027t like something that\u0027s in development or can\u0027t accept that daily/weekly builds will sometimes have bugs that prevent it running at all or, even,\u00A0who lose their save, kicking up a fuss. \u00A0It really isn\u0027t worth the extra hassle and/or pressure on the stability of the community. \u00A0Secondly,\u00A0there isn\u0027t a version with all the work currently under development. \u00A0Changes only get merged into the \u0022main\u0022 branch once they work well enough by themselves which, certainly in the case of larger changes, means putting them through an internal QA cycle as a separate build. \u00A0Even if they pass QA that doesn\u0027t mean they will immediately get merged into the main branch.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-30T10:47:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222654600\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467271033\u0022 data-ipsquote-userid=\u002295246\u0022 data-ipsquote-username=\u0022Navy2k\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Navy2k said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThank squad for 64bit. =)\n\u003C/p\u003E\n\u003Cp\u003E\nSo I have my \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003E\u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E\u003C/abbr\u003E Apollo style capsule called Hermes, and your mod could automatically name all launched ones Hermes 1 to Hermes n?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nExactly, and that is the simplest case.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, let\u0027s say that you launch it on a standard rocket, but the number of stages varies depending on the cargo/destination. \u00A0You could define a template something like this:\n\u003C/p\u003E\n\u003Cp\u003E\nHermes-\u0026lt;numstages\u0026gt;\u00A0#hcnt#\n\u003C/p\u003E\n\u003Cp\u003E\nThen, looking at a series of launches\n\u003C/p\u003E\n\u003Cp\u003E\nFirst launch would be a single stage: \u00A0Hermes-1\u00A01\u003Cbr\u003E\nSecond launch would be three stages: Hermes-3 2\u003Cbr\u003E\nThird launch would be two stages: \u00A0Hermes-2 3\n\u003C/p\u003E\n\u003Cp\u003E\nEtc. \u00A0You will be able to do a lot with the templates.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Monger","CreatedById":4143,"CreatedDateTime":"2016-06-30T11:08:35Z","Content":"\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe only way in which they can be safer is that they don\u0027t allow you to mess with the index in the loop body which is usually more of a hindrance than a help.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, except that index errors are easily the no.1 source of bugs in any language that doesn\u0027t support enumerators natively...\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653206\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467209391\u0022 data-ipsquote-userid=\u002297386\u0022 data-ipsquote-username=\u0022Padishar\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n20 hours ago, Padishar said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCan you provide an example of a foreach loop being faster than a (correctly written) for loop? \u00A0Given what the compiler and runtime does, I can\u0027t see any way that this could ever be the case.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFirst of all, List\u0026lt;T\u0026gt; is heavily optimized for index searches, so accessing an index is cheap. Like all optimizations, this comes with a price. List\u0026lt;T\u0026gt; allocates\u00A0quite\u00A0a lot of memory, especially for big collections.\u00A0Indexed search has a cost of O(1) for List\u0026lt;t\u0026gt;, so iterating over a full list has O(n). But List\u0026lt;T\u0026gt; doesn\u0027t handle well insertion or removal operations.\n\u003C/p\u003E\n\u003Cp\u003E\nThere are collection types that can be iterated, but are not naturally indexed. For example, an ordered List is usually not indexed, but it is very fast when inserting elements. If you try to iterate such a list (e.g. via the Extension method ElementAt(int)), you end up with O(n\u00B2).\n\u003C/p\u003E\n\u003Cp\u003E\nSecond, the enumerator may have knowledge of the data source that you don\u0027t have in client code, and optimize accesses. For example, if you have a remote data source like a data base, fetching single items one after another may be very expensive. But an enumerator can optimize depending on the data source. E.g. , table.where(x =\u0026gt; x.Name == \u0022Monger\u0022) may decide instead of fetching all data base items, iterating over them and returning a filtered view, to ask the database directly for a filtered result by creating a proper SQL query. LinqToSQL makes heavy use of that.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you work against interfaces (like you should), you are usually not aware of the collection implementation. In some cases, accessing via index is slightly more efficient than via enumerator. In some cases, accessing via index is really, really bad.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\ntl;dr: Don\u0027t assume that all collections work like List\u0026lt;T\u0026gt;.\n\u003C/p\u003E\n"},{"CreatedByName":"Navy2k","CreatedById":95246,"CreatedDateTime":"2016-06-30T12:05:05Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222654741\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467283636\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nExactly, and that is the simplest case.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, let\u0027s say that you launch it on a standard rocket, but the number of stages varies depending on the cargo/destination. \u00A0You could define a template something like this:\n\u003C/p\u003E\n\u003Cp\u003E\nHermes-\u0026lt;numstages\u0026gt;\u00A0#hcnt#\n\u003C/p\u003E\n\u003Cp\u003E\nThen, looking at a series of launches\n\u003C/p\u003E\n\u003Cp\u003E\nFirst launch would be a single stage: \u00A0Hermes-1\u00A01\u003Cbr\u003E\nSecond launch would be three stages: Hermes-3 2\u003Cbr\u003E\nThird launch would be two stages: \u00A0Hermes-2 3\n\u003C/p\u003E\n\u003Cp\u003E\nEtc. \u00A0You will be able to do a lot with the templates.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSo in my case more like Hermes-17 1 \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThanks for the clarification, definitely on my watchlist then, so I can charge the according crews for removing their debris.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-30T13:22:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222654814\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467288305\u0022 data-ipsquote-userid=\u002295246\u0022 data-ipsquote-username=\u0022Navy2k\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Navy2k said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo in my case more like Hermes-17 1 \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThanks for the clarification, definitely on my watchlist then, so I can charge the according crews for removing their debris.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHope to release a beta on Sunday\n\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-06-30T14:46:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222654763\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467284915\u0022 data-ipsquote-userid=\u00224143\u0022 data-ipsquote-username=\u0022Monger\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Monger said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell, except that index errors are easily the no.1 source of bugs in any language that doesn\u0027t support enumerators natively...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s a rather\u00A0sweeping generalisation that certainly isn\u0027t true for me when writing in any language, whether it has native enumerators or not...\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222654763\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467284915\u0022 data-ipsquote-userid=\u00224143\u0022 data-ipsquote-username=\u0022Monger\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Monger said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFirst of all, List\u0026lt;T\u0026gt; is heavily... [snip]\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:rgb(39,42,52);font-family:\u0027Helvetica Neue\u0027, Helvetica, Arial, sans-serif;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:22.4px;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;background-color:rgb(255,255,255);\u0022\u003Etl;dr: Don\u0027t assume that all collections work like List\u0026lt;T\u0026gt;.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t need a lesson on collection data types, thanks. \u00A0We\u0027re not talking in the context of best practices for general collection datatypes, we\u0027re talking in the context of writing code for Unity (where the Unity compiler is used) and, more specifically, in the context of minimising the garbage created by code in KSP, where virtually every collection you ever see is either a List\u0026lt;T\u0026gt; or a class that indirects to a contained\u00A0List\u0026lt;T\u0026gt;. \u00A0Obviously, if the object has\u00A0an\u00A0index operator that has to count through the collection then the enumerator could well be faster but\u00A0it will always result in garbage so that type of collection really\u00A0wouldn\u0027t be a good idea for any sort of hot code in KSP.\n\u003C/p\u003E\n\u003Cp\u003E\nThe main point of this discussion is that, if you compile your code using the Unity compiler, every use of foreach, regardless of whether the enumerator is a struct or a class, will allocate memory from the heap. \u00A0To fix these issues in KSP, Squad have to either replace the uses of foreach or switch to a compiler that doesn\u0027t box struct enumerators to dispose of them. \u00A0I presume they didn\u0027t want to change compiler because it would probably mean some serious disruption to their build processes etc. and, besides, when talking about iterating through List\u0026lt;T\u0026gt;, a simple for loop is not a lot harder to read or maintain than a foreach and, as one of the Squad devs mentioned, also allows much greater flexibility over how the enumeration proceeds.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m certainly not recommending that all modders replace foreach with for. \u00A0If they don\u0027t use the Unity compiler then they shouldn\u0027t suffer from the garbage issue and the performance difference, with anything remotely complex in the loop, will be\u00A0negligible. \u00A0The thing most modders need to look out for is using the LINQ-like chaining\u00A0extensions (or actual LINQ queries), some of which result in the allocation of large amounts of garbage, especially when lambdas are used carelessly, resulting in the creation of closures.\n\u003C/p\u003E\n"},{"CreatedByName":"Rath","CreatedById":138223,"CreatedDateTime":"2016-07-01T02:12:33Z","Content":"\n\u003Cp\u003E\nMe reading about the coding: \u00A0Wut?\n\u003C/p\u003E\n"},{"CreatedByName":"bos","CreatedById":147353,"CreatedDateTime":"2016-07-02T00:01:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222655054\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467298015\u0022 data-ipsquote-userid=\u002297386\u0022 data-ipsquote-username=\u0022Padishar\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/30/2016 at 7:46 AM, Padishar said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m certainly not recommending that all modders replace foreach with for. \u00A0\u003Cstrong\u003EIf they don\u0027t use the Unity compiler\u003C/strong\u003E then they shouldn\u0027t suffer from the garbage issue and the performance difference, with anything remotely complex in the loop, will be\u00A0negligible.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFor mod authors, I take it this means\u00A0that foreach is fine when compiled with\u00A0Visual Studio or Xamarin Studio. And that these would be generally recommended over the old Unity monodevelop?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-02T00:04:50Z\u0022 title=\u002207/02/2016 12:04  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 2, 2016\u003C/time\u003E by bos\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-07-02T00:15:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222657719\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467417701\u0022 data-ipsquote-userid=\u0022147353\u0022 data-ipsquote-username=\u0022bos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, bos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFor mod authors, I take it this means\u00A0that foreach is fine when compiled with\u00A0Visual Studio or Xamarin Studio instead of the Unity monodevelop?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUsing foreach is slightly slower than using a plain for loop though it only really makes much of a difference if you are looping a huge number of times and/or the loop body is very small. \u00A0The most important thing is that foreach will not incorrectly allocate struct enumerators on the heap causing garbage. \u00A0If you look at the List\u0026lt;T\u0026gt;.GetEnumerator function you see it returns a List\u0026lt;T\u0026gt;.Enumerator struct, this is fine.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, some KSP classes that wrap a List\u0026lt;T\u0026gt; (e.g. PartModuleList) return an IEnumerator from their GetEnumerator function and, because that is an interface, the object returned gets allocated on the heap, causing garbage,\u00A0even though the enumerator object is actually\u00A0the same List\u0026lt;T\u0026gt;.Enumerator struct underneath. \u00A0Some other classes, most notably VesselCrewManifest, do some complex stuff in GetEnumerator that creates lots of garbage, even though it does return a struct that gets allocated on the stack. \u00A0I do expect that these sort of issues will be addressed during the code cleanup so there is probably no need to worry about them unduly.\n\u003C/p\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2016-07-02T01:29:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653253\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467211148\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/29/2016 at 10:39 AM, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe bug\u0027s in the compiler used, not the runtime itself.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222653499\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467219421\u0022 data-ipsquote-userid=\u002297386\u0022 data-ipsquote-username=\u0022Padishar\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/29/2016 at 0:57 PM, Padishar said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNote\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0026amp;do=hovercard\u0022 data-mentionid=\u002275857\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/75857-xevilreeperx/\u0022 rel=\u0022external\u0022\u003E@xEvilReeperx\u003C/a\u003E\u0027s comment above (and my confirmation) that foreach only gives \u00A0garbage problems when the code is compiled with the compiler that is shipped as part of Unity. \u00A0If you use VisualStudio (or, probably, a recent version of MonoDevelop) then you don\u0027t really need to change foreach at all.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThank you both (Yes, I needed to see this twice to understand it). You may have saved all the hair on my head.\n\u003C/p\u003E\n"},{"CreatedByName":"AlamoVampire","CreatedById":78020,"CreatedDateTime":"2016-07-02T03:47:03Z","Content":"\n\u003Cp\u003E\nhere is hoping the \u0022if stowed then do not allow use\u0022 or more famously known as: \u0022cannot deploy while stowed\u0022 or \u0022cannot activate engine while stowed\u0022 is removed in 1.2.X\n\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2016-07-02T15:41:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222657750\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467418543\u0022 data-ipsquote-userid=\u002297386\u0022 data-ipsquote-username=\u0022Padishar\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Padishar said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe most important thing is that foreach will not incorrectly allocate struct enumerators on the heap causing garbage. \u00A0If you look at the List\u0026lt;T\u0026gt;.GetEnumerator function you see it returns a List\u0026lt;T\u0026gt;.Enumerator struct, this is fine.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFurther to this, there are a number of classes in KSP that implement IEnumerable because they contain a standard collection type. \u00A0In the case of EditorPartListFilterList\u0026lt;T\u0026gt;, the GetEnumerator function is \u0022correctly\u0022 declared as returning a\u00A0 List\u0026lt;EditorPartListFilter\u0026lt;T\u0026gt;\u0026gt;.Enumerator struct so using foreach on it will not create garbage (with a decent compiler). \u00A0However, lots of the other classes\u00A0declare GetEnumerator\u00A0as returning an IEnumerator. \u00A0This is unfortunate as this is an interface, which follows the rules for classes and is allocated on the heap, so using foreach on these will create garbage, even with the very latest compilers. \u00A0The classes affected are:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nShipConstruct\n\u003C/li\u003E\n\u003Cli\u003E\nBaseFieldList\n\u003C/li\u003E\n\u003Cli\u003E\nPartModuleList\n\u003C/li\u003E\n\u003Cli\u003E\nPartResourceList\n\u003C/li\u003E\n\u003Cli\u003E\nPartResourceDefinitionList\n\u003C/li\u003E\n\u003Cli\u003E\nRUI.Algorithms.Graph\u0026lt;T\u0026gt;\n\u003C/li\u003E\n\u003Cli\u003E\nRUI.Algorithms.GraphList\u0026lt;T\u0026gt;\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nNote, while using foreach on these now does create garbage, they will almost certainly be fixed in the code cleanup for 1.2.\n\u003C/p\u003E\n\u003Cp\u003E\nThe VesselCrewManifest class is a bit of a strange case, it declares GetEnumerator \u0022correctly\u0022 as returning a\u00A0 List\u0026lt;PartCrewManifest\u0026gt;.Enumerator, but using foreach on it still generates a considerable amount of garbage, as does calling any of the public functions in the class. \u00A0It turns out there isn\u0027t any useful way to use this class without generating large amounts of garbage but, again, this will almost certainly be fixed in 1.2 (though the interface to the class may need to change).\n\u003C/p\u003E\n"},{"CreatedByName":"insert_name","CreatedById":150339,"CreatedDateTime":"2016-07-02T23:12:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222652180\u0022 data-ipsquote-contentid=\u0022142712\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221467149563\u0022 data-ipsquote-userid=\u0022113764\u0022 data-ipsquote-username=\u0022Foxster\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/28/2016 at 2:32 PM, Foxster said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022line-height:1.6;\u0022\u003EGreen alien dancing girls...\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou just need to drop a rocket or two on val\n\u003C/p\u003E\n"}]}