{"TopicId":22682,"ForumId":34,"TopicTitle":"[0.19\u002B] - Ferram\u0026#039;s Raycast Drag Experiment v0.1","CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-04-19T01:16:30Z","PageNum":1,"Articles":[{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-04-19T01:16:30Z","Content":"\n\u003Cp\u003EWhile the forums were down, I decided to try implementing an often-suggested but (IMO) foolish drag model; it uses raycasting and some fluid dynamics to attempt to model the effects on the entire vessel in flight. It\u0027s decent for rockets, terrible for planes, and maybe better than what\u0027s there by default; presenting:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EFerram\u0027s Raycast Drag Experiment\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003EA demonstration of the pros and cons of this model, and why it really won\u0027t work in KSP\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EDownload:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kerbalspaceprogram.com/ferrams-raycast-drag-experiment-v0-1/\u0022 rel=\u0022external nofollow\u0022\u003EGet v0.1 from KerbalSpacePort!\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www./download.php?1kb636g8u1gdaac\u0022 rel=\u0022external nofollow\u0022\u003EGet v0.1 from Mediafire!\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003ENote: this is not intended to be used as a serious, finalized plugin; it is simply a demonstration of the problems inherent in this type of drag modelling.\u003C/span\u003E\u003C/p\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWith respect to the current, stock model, here are the pros and cons of this one:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPros:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EDrag doesn\u0027t vary with mass \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDrag and lift vary with orientation \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDrag and lift are fairly accurate for very large speeds (V \u0026gt; 1,400 m/s) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERe-entering pods automatically orient themselves properly \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAutomatically handles payload fairings and cargo bays \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ECons:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EDrag and lift highly inaccurate at relatively low speeds (V \u0026lt; 500 m/s) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDiscrete modeling of incoming air requires large overhead or low raycasting resolution (and this is for only the focused vessel); at low resolutions strange effects may occur while at high resolutions there is a large amount of lag \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECannot account for angular velocity of the vehicle; this results in no aerodynamic damping; all airplanes are unstable as a result \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECan cause parts that \u003Cem\u003Eshould\u003C/em\u003E be affected by the airflow to be considered blocked, such as a plane\u0027s vertical stabilizer when the plane is at a high angle of attack \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe reason for this plugin\u0027s existence is to point out the unrealistic aerodynamic behavior of this model and as a counterpoint to the frequent suggestion that this be used to model aerodynamics in KSP. It is not intended to be a \u0022usable\u0022 or \u0022fun\u0022 plugin, but a technology demonstrator.\u003C/p\u003E\u003Cp\u003EThis plugin is not compatible with \u003Ca href=\u0022http://kerbalspaceprogram.com/ferram-aerospace-research/\u0022 rel=\u0022external nofollow\u0022\u003EFerram Aerospace Research (FAR)\u003C/a\u003E any consequences of combining the two are the user\u0027s problem.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-04-19T05:50:58Z\u0022 title=\u002204/19/2013 05:50  AM\u0022 data-short=\u002211 yr\u0022\u003EApril 19, 2013\u003C/time\u003E by ferram4\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Panichio","CreatedById":2858,"CreatedDateTime":"2013-04-19T03:44:26Z","Content":"\n\u003Cp\u003EYou did all this to prove some people wrong? Nice. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-04-19T03:54:07Z","Content":"\n\u003Cp\u003EIt was more \u0022I will now endeavor to prove myself wrong!\u0022\u003C/p\u003E\u003Cp\u003E*coding and testing interlude*\u003C/p\u003E\u003Cp\u003ENope, I was right, but here\u0027s what I made in the process of trying to prove myself wrong! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E It is quite fun if you\u0027re only playing with rockets, but anything more complicated won\u0027t work too well.\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-04-19T06:28:53Z","Content":"\n\u003Cp\u003EIt seems like it\u0027s still an improvement, if only for rockets and hypersonic flight. A different system would be needed for proper handling of airplanes though.\u003C/p\u003E\n"},{"CreatedByName":"CAPFlyer","CreatedById":8575,"CreatedDateTime":"2013-04-19T18:04:44Z","Content":"\n\u003Cp\u003EIs there any way of having some hybrid solution where you use raycasting for high speed flight and your current FAR system for others?\u003C/p\u003E\u003Cp\u003EHere\u0027s the problem I\u0027ve been having - I can\u0027t use FAR for the most part because I fly mainly rockets and even when built properly, because of the way KSP handles weight distribution and how FAR handles high speeds and payload fairings, the rockets become unrealistically unstable and require unrealistic fin stabilization that should not be required as the aerodynamics of the vehicle itself are not correct. However, it is essential for me to build a proper flying aircraft. Thus, I either have to have 2 implementations of KSP installed to work both ends of the spectrum, or I just have to resign myself to only fly rockets without FAR installed because I fly rockets much more than spaceplanes or airplanes and thus the advantages of FAR are essentially nil which means I miss out on what could be a very fun part of this program and that\u0027s unfortunate.\u003C/p\u003E\n"},{"CreatedByName":"Taverius","CreatedById":11815,"CreatedDateTime":"2013-04-20T05:24:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003ECons:\u003C/strong\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ECan cause parts that \u003Cem\u003Eshould\u003C/em\u003E be affected by the airflow to be considered blocked, such as a plane\u0027s vertical stabilizer when the plane is at a high angle of attack \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s actually accurate, you know better than me that\u0027s the reason double-engine fighter jets have twin stabilizers \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EP.S. Its also something I wish FAR would do, because I\u0027m a masochist.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-04-20T05:37:59Z","Content":"\n\u003Cp\u003Eas a proponent of the raycast drag model i must say that im actually rather impressed that you took the time to give it a decent testing run, dispite your previous assumptions that it probibly wouldnt work. you are indeed a true rocket scientist.\u003C/p\u003E\u003Cp\u003Ei guess this challenges everyone to tweak the code and see if we cant cross off some of them cons. of course im completely lazy and i dont want to have to code another *expletive* drag model.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-04-20T05:43:01Z\u0022 title=\u002204/20/2013 05:43  AM\u0022 data-short=\u002211 yr\u0022\u003EApril 20, 2013\u003C/time\u003E by Nuke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-04-20T21:18:51Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@Dragon01: \u003C/strong\u003EHaving a different system in place for airplanes would be incredibly wrong; physics shouldn\u0027t change based on what category your vehicle is in.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@CAPFlyer: \u003C/strong\u003EI\u0027ll see what I can do; I suspect most of the problems can simply be fixed by giving the FAR code a good once-over to fix everything.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@Taverius: \u003C/strong\u003EThat only happens at very, very high angles of attack and normally isn\u0027t a problem. The main reasons why fighters have twin stabilizers nowadays are:\u003C/p\u003E\u003Cp\u003E1. The rudder needs to be able to counteract the yaw moment created by having the maximum amount of unequal thrust between the engines, that is, one engine at maximum takeoff thrust while the other is shutdown. Often weight savings can come from using two smaller rudders for the job.\u003C/p\u003E\u003Cp\u003E2. Angling the stabilizers outwards (as it is on almost all modern fighters, see F-18, F-22, F-35) can reduce the radar cross-section of the plane.\u003C/p\u003E\u003Cp\u003EThe main problem is that this model is fundamentally inaccurate for anything other than approximating the case of Mach number and velocity going to infinity.\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2013-04-25T02:12:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022\\\u0022 data-cite=\u0022\\\u0022\u003E\u003Cdiv\u003EI would like you to consider a few things.\u003Cp\u003EFirst, look at this video: \u003Ca href=\u0022https://www.youtube.com/watch?v=XfK8NrM2nF4\u0026amp;feature=youtu.be\u0026amp;t=46m26s\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.youtube.com/watch?v=XfK8NrM2nF4\u0026amp;feature=youtu.be\u0026amp;t=46m26s\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E This clip (though the terminology could be better) demonstrates a real life example of what may be considered an unrealistic consequence of raycast drag.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m already aware of that type of situation, where raycast drag can model the effect of separated, recirculating air diminishing the aerodynamic effectiveness of lifting surfaces. And yes, it is nice to have that effect, to be able to model deep stall, etc. One of the few good things about this aerodynamic model.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ESecond. How much impact would there be if instead of using classical raycasting you used \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cconic casting\u00C3\u00A2\u00E2\u201A\u00AC\u00C2, where you projected a cone forward whose shape and length was a function of air pressure and velocity?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI really don\u0027t think that would work. Not only would this method probably suck on a lot of resources, it doesn\u0027t really have any solid basis in aerodynamic theory. Yes, there is the Mach cone in supersonic flow, but that just tells you the region of flow affected by a disturbance in that flow; the only way to use that would be to continue with the current method and then at every impact run another series of raycasts within that cone to see how the effect continues.\u003C/p\u003E\u003Cp\u003EI\u0027ll be honest and say that I\u0027m not exactly certain what you\u0027re thinking with this, would you mind elaborating on this idea and citing the aerodynamic theories you\u0027re basing it off of?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThird. Would it be possible to calculate the aerodynamic properties of each craft once for all possible configurations and roll/pitch/yaw states using \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cconic casting\u00C3\u00A2\u00E2\u201A\u00AC\u00C2, then apply the resulting mathematical models to the craft in a more traditional manner as to avoid the previously stated performance issues? I would gladly wait 2-4 minutes per new craft so that a more realistic aerodynamic model can be applied lag free during my flight.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENope. Think about it: losing any individual part changes the configuration. That means that the number of configurations is huge, being dependent on the number of parts and the vessel hierarchy. It would take a huge amount of time to try and calculate all those effects and then storing them in memory would be a pain; sure, you could drop the data into an external text file to try and save memory but then you\u0027ll have a bunch of huge text files to go with each vessel. Oh, and this has been assuming that the vehicle is rigid; once you start accounting for flexing under loading things get worse.\u003C/p\u003E\u003Cp\u003EAlso, waiting 2-4 minutes for each craft might seem like a short time, but how many planes have you built where you needed to make incremental tweaks? Waiting that long to calculate the effect of moving the wings forward a meter will annoy a lot of people, myself included.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EFourth. If I understand your description correctly what you are doing is not raycasting (drawing a line from source to part and determining occlusion), it is particle tracking (following a particle\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s path past the craft and determining its physical interactions).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENope, I\u0027m drawing a line from a source point in front of the vessel to a point behind it, moving in the opposite direction of its velocity. If I were doing particle tracking it would be a lot worse performance-wise. Also, considering the function I\u0027m using is called Physics.Raycast I think it\u0027s raycasting. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EFifth. \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201CCannot account for angular velocity of the vehicle; this results in no aerodynamic damping; all airplanes are unstable as a result.\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 If each part had a ray cast parallel to the surface velocity vector, this would not be true. Example: vertical stab. yaw would cause ray to be cast at an angle to the part\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s surface/plane, allowing lateral force to be calculated and applied in the same way as any other surface in this model.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow do I determine before hand which ray will hit which part of the vehicle? The raycasting is done per vessel, not per part. This is to try and keep things simpler.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ESixth. \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cand this is for only the focused vessel\u00C3\u00A2\u00E2\u201A\u00AC\u00C2. As it stands, drag is only applied to the active craft anyway (or craft within \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Coff rails\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 limit at most). If this would not downgrade the current model, I feel this should not be considered a major drawback.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt does not function on loaded, but not active, vessels. When you launch a rocket and detach those SRBs you slapped on the side this model doesn\u0027t apply drag to that debris. Why? It would require even more raycasting with multiple raycast systems being active at once, one for each loaded vessel. That would require either more lag or a reduction in the raycasting resolution.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ESeventh. \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201C\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6such as a plane\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s vertical stabilizer when the plane is at a high angle of attack\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 This happens in real aerodynamics as well. I agree that pure raycast would be rather inflexible in this situation, that\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s why I suggested the \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201Cconic cast\u00C3\u00A2\u00E2\u201A\u00AC\u00C2 technique.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile it is true that that happens in real life at say, an angle of attack of 20 degrees, it doesn\u0027t happen at an angle of attack of 2 degrees; that happens with this model if your plane\u0027s fuselage is too long. A vertical stabilizer can still be useful at an angle of attack of 10 degrees in real life while with this model in-game the plane will sideslip like crazy.\u003C/p\u003E\n"},{"CreatedByName":"adammada","CreatedById":29884,"CreatedDateTime":"2013-05-13T10:27:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIt would take a huge amount of time to try and calculate all those effects and then storing them in memory would be a pain; sure, you could drop the data into an external text file to try and save memory but then you\u0027ll have a bunch of huge text files to go with each vessel. Oh, and this has been assuming that the vehicle is rigid; once you start accounting for flexing under loading things get worse.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhen i was thinking about using such model (way before KSP was developed) I always wanted to check how many angles should be calculated, because rest can be interpolated. \u003C/p\u003E\u003Cp\u003ESo we have vessel. Theoretically we should count Cx from every direction ( 360 degress * 180 degrees ) but should step be like 0.1 or 10 or 30 ? \u003C/p\u003E\u003Cp\u003EThen we need to store it and be ready to interpolate. Best way to store AND interpolate would be to use:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Discrete_cosine_transform\u0022 rel=\u0022external nofollow\u0022\u003EDiscrete cosine transform\u003C/a\u003E \u003C/p\u003E\u003Cp\u003ESo there should be experiment:\u003C/p\u003E\u003Cp\u003E- lets calculate Cx with 0.1 step\u003C/p\u003E\u003Cp\u003E- lets calculate DCT function using using 0.1 step point\u003C/p\u003E\u003Cp\u003E- lets calculate DCT function using using 1 step point\u003C/p\u003E\u003Cp\u003E- lets calculate DCT function using using 10 step point\u003C/p\u003E\u003Cp\u003E- lets calculate DCT function using using 30 step point\u003C/p\u003E\u003Cp\u003EThen lets see what error we get between 0.1 and others. If error is small we can use bigger steps. \u003C/p\u003E\u003Cp\u003EAbout dropping things. In your current demo you count that in realtime, yes? So maybe model could use some lazy-count system. Its not like you need to count Cx from behind anytime soon. So you just count Cx once from current fly direction and fast count some more points, to do roughly interpolation. And then count rest points \u0022in background\u0022.\u003C/p\u003E\n"},{"CreatedByName":"cfds","CreatedById":82109,"CreatedDateTime":"2013-10-08T08:10:15Z","Content":"\n\u003Cp\u003ESorry to drag this Thread up form the grave, but I have some questions:\u003C/p\u003E\u003Cp\u003EWhy is \u0022Drag and lift highly inaccurate at relatively low speeds (V \u0026lt; 500 m/s)\u0022? Is this a problem of the raycasting algorithm? I don\u0027t see how the exposed area of a rocket should vary with the speed.\u003C/p\u003E\u003Cp\u003EI also don\u0027t get the problem with the lag. Essentially, you are taking a picture of the craft from the direction in which it is traveling. This should by in no way take longer than the actual drawing of the vessel (unless it is a problem with unity) on the screen and you probably don\u0027t have to recalculate the exposed area 25 times a second. What is the problem here?\u003C/p\u003E\n"},{"CreatedByName":"softweir","CreatedById":2795,"CreatedDateTime":"2013-10-08T09:02:26Z","Content":"\n\u003Cp\u003EThe exposed area of a vehicle doesn\u0027t vary with speed, but the way air flows over a vehicle DOES vary - enormously - and it is the shape of that flow which governs lift and drag. At low speeds, small changes of shape (such as the curve of a aerofoil) have massive effects on turbulence, the laminarity of airflow and hence the amount of drag and lift a wing produces. It is only towards the hypersonic range that shape becomes less significant than cross-section and a simple raycasting approach becomes realistic.\u003C/p\u003E\u003Cp\u003EI am guessing that the lag is because the CPU is doing the work, and at the same time the code is forced to use inefficient calls to determine shape. If you could use the GPU then that would be faster.\u003C/p\u003E\n"},{"CreatedByName":"cfds","CreatedById":82109,"CreatedDateTime":"2013-10-08T09:28:57Z","Content":"\n\u003Cp\u003EOk, so the reasons why it will not work are bsically the folowing:\u003C/p\u003E\u003Cp\u003E- It doesn\u0027t work for wings, canards and the like\u003C/p\u003E\u003Cp\u003E- It would be better than the stock implementation for basic rockets and generally non-wing parts but causes too much work for the CPU\u003C/p\u003E\n"},{"CreatedByName":"Galane","CreatedById":77949,"CreatedDateTime":"2014-02-21T07:01:27Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/OpenCL\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://en.wikipedia.org/wiki/OpenCL\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EOpenCL, cross platform, works with nVidia and ATi/AMD GPUs that are new enough. The problem there is the earlier GPUs capable of running OpenCL code are not so speedy at it. For example, a GeForce 9800GT can barely squeeze out 22 khash/second with an OpenCL cryptocoin miner program. (It doesn\u0027t fare any better with a miner written for CUDA, nVidia\u0027s hardware native GPU program environment.)\u003C/p\u003E\u003Cp\u003EGo a few generations farther, (and change to AMD) and a Radeon HD 6870 will grind out over 300 khash/second. That\u0027s 300,000 256 bit encryption keys per second, and compared to the latest GPUs is considered very slow. There have been special systems built with multiple video cards, capable of trying over a trillion passwords a second. One could crack any 12 character password in five minutes or less. Hollywood password cracking is now real, and with the latest GPUs would be even faster.\u003C/p\u003E\u003Cp\u003EA super accurate drag model could be done, but not many are going to want to buy a $500\u002B videocard to use it.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Sabre_dance_(aviation)\u0022 rel=\u0022external nofollow\u0022\u003ESabre Dance\u003C/a\u003E at only 2 degree angle of attack? Ouch.\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-02-21T07:26:26Z","Content":"\n\u003Cp\u003EOh, I\u0027m sure if everything could be pushed to the GPU things could go quite well. (Wow this topic is old; I need to get this old thing back to functioning.) The problem is that as for me, I\u0027m actually GPU limited in KSP more than CPU limited (mobile GPUs are the best!), so I have very little incentive to actually try to make it work on that. Also, given how much CPU power doesn\u0027t get used in KSP, it makes more logical sense to work towards CPU-based multithreading than trying to rope the GPU into things (at least from my perspective).\u003C/p\u003E\u003Cp\u003EBut there\u0027s still the problem that no matter how much power you throw at it, this particular drag model is highly flawed in that it treats air as a stream of particles that don\u0027t interact with each other until the hit and then slide along the vehicle, rather than as air. If a better aerodynamic model were set up using a more-advanced-than-FAR model the problem would inevitably devolve into trying to make the simulation robust and not want to explode in the face of whatever crazy thing a particular player comes up with. And at that point, the calculations you\u0027re doing to prevent that will end up slowing things down no matter how good the GPU ends up being.\u003C/p\u003E\n"},{"CreatedByName":"futrtrubl","CreatedById":77310,"CreatedDateTime":"2014-02-21T08:16:18Z","Content":"\n\u003Cp\u003EWhat if you were to run both the raycast and the standard (or FAR) models simultaneously but output an average of the 2 models weighted based on speed and pressure?\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-21T14:36:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022futrtrubl\u0022 data-cite=\u0022futrtrubl\u0022\u003E\u003Cdiv\u003EWhat if you were to run both the raycast and the standard (or FAR) models simultaneously but output an average of the 2 models weighted based on speed and pressure?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think that would result in the worst of both, with a double performance penalty added on top \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Surefoot","CreatedById":89084,"CreatedDateTime":"2014-02-21T22:10:43Z","Content":"\n\u003Cp\u003EFlawed raycast model aside, i would like to have the option of using the GPU to get the benefit of a more advanced aerodynamic model (maybe more calculations, more simulated shapes, smaller time interval ?) - having a SLI of GTX Titan\u0027s my GPU are pretty much sleeping the whole time and the CPU is the actual bottleneck in this game, at least for me. Should be an option though, i too have a laptop when i am travelling \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2014-02-22T01:55:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI think that would result in the worst of both, with a double performance penalty added on top \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWho knows? I think it\u0027s a very intelligent idea.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-22T02:04:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Azimech\u0022 data-cite=\u0022Azimech\u0022\u003E\u003Cdiv\u003EWho knows? I think it\u0027s a very intelligent idea.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMost of what is needed to test it is available \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-02-22T02:15:28Z","Content":"\n\u003Cp\u003EFAR already does most of what this particular model does at very high speeds, but at a much lower cost to performance. Further, the raycast model would \u003Cem\u003Estill\u003C/em\u003E drop completely bogus values for wings into the physics due to the way that it functions with colliders; wings won\u0027t be modeled as very thin flat plates like they should, they\u0027ll be modeled as barn doors due to the fact that any raycast that hits the edge of the wing will add a lot more drag to the wing than it should actually get.\u003C/p\u003E\u003Cp\u003EThis model is a lot more flawed than people want to accept; it will \u003Cem\u003Enever\u003C/em\u003E function as a proper aerodynamic model due to its drawbacks. If you try to merge it with another aerodynamic model the raycast model will simply make the combined model less accurate and more expensive to run.\u003C/p\u003E\n"}]}