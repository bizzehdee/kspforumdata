{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":31,"Articles":[{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-15T01:59:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022airbus a320\u0022 data-cite=\u0022airbus a320\u0022\u003E\u003Cdiv\u003Ethere is a way to pass a variable between them?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot yet...\u003C/p\u003E\n"},{"CreatedByName":"sirkut","CreatedById":57229,"CreatedDateTime":"2014-05-15T13:51:53Z","Content":"\n\u003Cp\u003EI was curious if the RegisterkOSExternalFunction would be implemented so I could see if I could resume work on getting Infernal Robotics working again with kOS. I did have success in using it except I didn\u0027t tackle specific groups or call individual robotic parts yet.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-15T16:09:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E@baloan: Anyway it could be possible to integrate kOS and kRPC so our virtual machine sends instructions to it instead of interfacing with KSP itself\u0027 date=\u0027 but it would be necessary to [b\u0027]evaluate the pros and cons of doing that.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUsing kRPC/Python puts whatever language and development environment you use right into the spacecraft (without time delay). This is very comfortable and productive for development though defeats the idea of an \u0022Apollo\u0022-like restricted environment. For me as an avid user of \u0022switch to 0.\u0022 when running kOS it does not make much of a difference - but for others who play with remote tech or similar it will be a con that the restriction features are not readily available (and maybe difficult to implement).\u003C/p\u003E\u003Cp\u003EI like the idea of using readily available packages with Python like vector math packages, Lambert solvers which allow for more consistent treatment of vector arithmetic and easier handling of a 3D approach to orbital mechanics. I am still fighting with the concept of pitch, yaw and roll and the continuously changing frames of reference in KSP/kOS.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-15T17:36:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003Eand the continuously changing frames of reference in KSP/kOS.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am forever annoyed that KSP keeps altering the XYZ frame of reference during play. I\u0027ve added a change (that I hope will make it into kOS soon) that lets you view the actual vectors drawn on the screen in 3D space to help make sense of it all. In so doing I discovered an annoying feature that was causing my attempts to make a simple inclination correction script (for the first step of doing a rendezvous for eventual docking) fail. What was making it fail is that I calculated the normal vector to my plane of orbit, and the normal vector to my target\u0027s plane of orbit, and stored them ahead of time and assumed that it doesn\u0027t change until you start thrusting. Because they aren\u0027t supposed to change. The normal vector should be the same direction no matter where in the orbit you are.\u003C/p\u003E\u003Cp\u003EBut it was changing, becoming as much as 4-5 degrees off by the time I hit the ascending or descending node to make the burn. It was using the normal vectors to calculate the position of the node wrong and missing it. I wasted a lot of time trying to figure out what was wrong with my math, checking and rechecking and not finding a thing wrong with it.\u003C/p\u003E\u003Cp\u003EIn the end, it turns out that what was wrong was this: Between the time when I calculated the normals and several minutes later when I used them, KSP had rotated the universe a few degrees around the Y axis, effectively changing the direction that any previously calculated XYZ tuple is pointing. The direction that V(1,0,0) was pointing a few minutes ago was a few degrees off from where V(1,0,0) was pointing now. Therefore I couldn\u0027t use the mathematically correct assumption that the normal to your plane of orbit doesn\u0027t change. It does change in KSP, effectively, because the axes won\u0027t stay in a fixed orientation. Therefore the fix was to continually recalculate the normal vectors in a lock so when the universal reference frame rotates, I get new normal vectors using the new orientation.\u003C/p\u003E\u003Cp\u003EI had the same problem when trying to draw vector arrows on the screen. I have to continually re-draw them because the damn universe keeps moving and rotating.\u003C/p\u003E\u003Cp\u003EAnd it\u0027s the underlying KSP system that does this, so you\u0027d get the same problem with all languages, not just KOS. You just need to be aware that any XYZ vector is only stable for a half a minute or so after you calculate it. If you need to read the vector and do something with it over a period of several minutes while you are drifting in orbit, you\u0027d better keep regenerating it just in case the universe has rotated a bit.\u003C/p\u003E\u003Cp\u003EI tend not to use R() rotations much but I suspect the same thing is true of them too, since they represent rotations from the Z axis direction, If you say this:\u003C/p\u003E\u003Cp\u003ESET DIR TO R(30,0,0).\u003C/p\u003E\u003Cp\u003EThen it\u0027s likely that a few minutes later DIR isn\u0027t pointing the same way it was before and it will be a few degrees different. Not enough to notice for crude operations but for precision operations (like trying to get the inclination down to less than 0.2 degrees) it matters and you need to make sure that DIR is a lock rather than a set.\u003C/p\u003E\u003Cp\u003ETo test what I\u0027m talking about, get your ship into a Kerbin orbit that goes from a periapsis of about 80km to an apopasis of about 120km. Then at the apopasis, issue the command LOCK STEERING to V(1,0,0). Make note of where that points to relative to the navball\u0027s orbital prograde marker. Then timewarp a bit, then come out of time warp for about 30 seconds, then timewarp a while, then come out of time warp for about 30 seconds, and so on until you\u0027ve make 3-4 orbits. Then wait until you get to exactly the apopasis again and look at what your LOCK STEERING TO V(1,0,0) is now doing. It will be pointing a little bit off from where it was before because the X axis isn\u0027t pointing the same way.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-15T17:47:07Z\u0022 title=\u002205/15/2014 05:47  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 15, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-15T18:16:56Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EI want to make a coordinate system document.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EMonths ago I wrote this up: \u003Ca href=\u0022http://kos.wikia.com/wiki/Tutorial_-_XYZ_system_of_KSP\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/Tutorial_-_XYZ_system_of_KSP\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI\u0027d like to put equivalent information on the more official KOS_DOC pages, but in the meantime since I wrote that I\u0027ve discovered a few other weird things that make it even more complex than I realized at the time, so I have to redo sections of that information.\u003C/p\u003E\u003Cp\u003EI\u0027d like to get user feedback on this:\u003C/p\u003E\u003Cp\u003E(1) When learning to write kOSscript, what did (or still do) you find most confusing about the coordinates and directions that you feel really would have helped to have been documented?\u003C/p\u003E\u003Cp\u003E(2) What support from kOS itself would have helped you, as a feature to add to the mod? \u003C/p\u003E\u003Cp\u003EFor (2), I\u0027m already thinking that I\u0027d like to provide direct conversions into different reference frames - for example a function call to transform XYZ vectors into an East,North,Up vector system, and visa versa (mostly useful for landing). Right now the only way to do it is with a block of matrix transformation math that you have to carry out manually in kosscript code. Another thing I\u0027d like to see is a way to transform any rotation into a unit vector, and visa versa, with a single function call. (Both of these are, essentially, cases of moving matrix math into the mod itself where it can use the Unity API to do it more quickly, and in some cases Unity will farm out the matrix math to the hardware GPU to do it even faster).\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-15T21:02:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI am forever annoyed that KSP keeps altering the XYZ frame of reference during play. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMaybe you fell victim to the changing frame of reference that happens in 100km altitude above Kerbin where KSP switches the origin from local ship reference frame to Earth reference frame. Below exactly 100km the moon reverses direction. \u003C/p\u003E\u003Cp\u003ESigh.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// display ship \u0026amp; mun coordinates\u003Cbr\u003E// note change in mun dv when ship is in kerbin orbit \u0026lt; 100km \u003Cbr\u003Eclearscreen.\u003Cbr\u003Eset trgt to Mun.\u003Cbr\u003Euntil 0 {\u003Cbr\u003E    set pm0 to trgt:position - body:position.\u003Cbr\u003E    set ps0 to V(0,0,0) - body:position.\u003Cbr\u003E    wait 1.\u003Cbr\u003E\u003Cbr\u003E    set pm to trgt:position - body:position.\u003Cbr\u003E    set ps to V(0,0,0) - body:position.\u003Cbr\u003E    set vm to pm - pm0.\u003Cbr\u003E    // print \u0022Mun: \u0022 \u002B pm.\u003Cbr\u003E    set pmu to (1/pm:mag)*pm.\u003Cbr\u003E    print trgt:name at (0,25).\u003Cbr\u003E    print \u0022   P(\u0022 \u002B round(pm:x/1000,4) \u002B \u0022,\u0022 \u002B round(pm:y/1000,4) \u002B \u0022,\u0022 \u002B round(pm:z/1000,4) \u002B \u0022)\u0022 at (0,26).\u003Cbr\u003E    print \u0022|p|: \u0022 \u002B round(sqrt(pm:x^2\u002Bpm:y^2\u002Bpm:z^2)/1000) at (30,26).\u003Cbr\u003E    print \u0022Pbar(\u0022 \u002B round(pmu:x,4) \u002B \u0022,\u0022 \u002B round(pmu:y,4) \u002B \u0022,\u0022 \u002B round(pmu:z,4) \u002B \u0022)\u0022 at (0,27).\u003Cbr\u003E    print \u0022   v(\u0022 \u002B round(vm:x,4) \u002B \u0022,\u0022 \u002B round(vm:y,4) \u002B \u0022,\u0022 \u002B round(vm:z,4) \u002B \u0022)\u0022 at (0,28).\u003Cbr\u003E    print \u0022|v|: \u0022 \u002B round(vm:mag) at (30,28).\u003Cbr\u003E    set ma to arctan(pmu:x/pmu:z).\u003Cbr\u003E    if pmu:z \u0026lt; 0 { set ma to ma \u002B 180. }\u003Cbr\u003E    print \u0022omg: \u0022 \u002B round(ma,3) at (30,27).\u003Cbr\u003E\u003Cbr\u003E    set vs to ps - ps0.\u003Cbr\u003E    // print \u0022Ship: \u0022 \u002B ps.\u003Cbr\u003E    set psu to (1/ps:mag)*ps.\u003Cbr\u003E    set sa to arctan2(psu:x,psu:z).\u003Cbr\u003E    if psu:z \u0026lt; 0 { set sa to sa \u002B 180. }\u003Cbr\u003E    print \u0022Ship\u0022 at (0,31).\u003Cbr\u003E    print \u0022   P(\u0022 \u002B round(ps:x/1000,4) \u002B \u0022,\u0022 \u002B round(ps:y/1000,4) \u002B \u0022,\u0022 \u002B round(ps:z/1000,4) \u002B \u0022)\u0022 at (0,32).\u003Cbr\u003E    print \u0022|p|: \u0022 \u002B round(ps:mag/1000) at (30,32).\u003Cbr\u003E    print \u0022Pbar(\u0022 \u002B round(psu:x,4) \u002B \u0022,\u0022 \u002B round(psu:y,4) \u002B \u0022,\u0022 \u002B round(psu:z,4) \u002B \u0022)\u0022 at (0,33).\u003Cbr\u003E    print \u0022   v(\u0022 \u002B round(vs:x,4) \u002B \u0022,\u0022 \u002B round(vs:y,4) \u002B \u0022,\u0022 \u002B round(vs:z,4) \u002B \u0022)\u0022 at (0,34).\u003Cbr\u003E    print \u0022|v|: \u0022 \u002B round(vs:mag) at (30,34).\u003Cbr\u003E    set sa to arctan(psu:x/psu:z).\u003Cbr\u003E    if psu:z \u0026lt; 0 { set sa to sa \u002B 180. }\u003Cbr\u003E    print \u0022omg: \u0022 \u002B round(sa,3) at (30,33).\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-15T22:21:20Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@baloan:\u003C/strong\u003E I understand the advantages, but if you want to program in python and talk directly to kRPC then there\u0027s no need to use kOS. Our mod being more tightly integrated with KSP fills a different niche.\u003C/p\u003E\u003Cp\u003EkOS is a computer that is IN the ship, you pause the game and the computer pauses too, if you loose power the computer shuts down. With kRPC you loose that, but as I said before is just a matter of preference.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-15T22:26:02Z\u0022 title=\u002205/15/2014 10:26  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 15, 2014\u003C/time\u003E by marianoapp\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-05-16T18:53:24Z","Content":"\n\u003Cp\u003EIs there a way for kOS to detect what engine belongs to what stage when the engine is disabled?\u003C/p\u003E\u003Cp\u003EEngines only seem to show up in \u0022list engines.\u0022 if they\u0027re enabled. But I\u0027m writing a program that numerically tries to find the optimal gravity turn, and I need to detect different stages and their individual TWR\u0027s for that.\u003C/p\u003E\n"},{"CreatedByName":"gsmurf","CreatedById":111061,"CreatedDateTime":"2014-05-17T02:53:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EI think you need to delineate with a colon.\u003Cp\u003Ebody:mun\u003C/p\u003E\u003Cp\u003EI\u0027m not sure though I\u0027ve never done this before.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnfortunately, I\u0027ve already tried this and it does not work. The error returned is \u003Cem\u003ESuffix MUN not found on object.\u003C/em\u003E Thanks anyway.\u003C/p\u003E\u003Cp\u003EDoes anyone else have a suggestion on proper syntax?\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-17T04:55:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022gsmurf\u0022 data-cite=\u0022gsmurf\u0022\u003E\u003Cdiv\u003EI seem to be having a problem targeting planetary bodies.\u003Cp\u003EThe command \u003Cem\u003Eset target to body(\u0022mun\u0022).\u003C/em\u003E returns the following error: \u003Cem\u003EVESSEL \u0027BODY(\u0022Mun\u0022)\u0027 not found.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EHas the syntax for targeting bodies been changed recently?\u003C/p\u003E\u003Cp\u003EI am using the 12.1 prerelease.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMmm that should work, I\u0027ll have to check it out. In the mean time you can use \u003Cem\u003Eset target to \u0022mun\u0022.\u003C/em\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-17T05:04:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003EMmm that should work, I\u0027ll have to check it out. In the mean time you can use \u003Cem\u003Eset target to \u0022mun\u0022.\u003C/em\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to Mun:name.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETrying to make docking scripts possible is current top priority, if I understand erendrake correctly. One problem is how TARGET needs to work seamlessly on three different types of object: Bodies, Vessels, and Docking Ports. Frustratingly, although all three of those things share a common C# Interface in the KSP API called ITargettable, not everything about them that they share in common is inside ITargettable.\u003C/p\u003E\n"},{"CreatedByName":"Trekky0623","CreatedById":21479,"CreatedDateTime":"2014-05-17T20:31:08Z","Content":"\n\u003Cp\u003EHi,\u003C/p\u003E\u003Cp\u003EThis is all new to me, but I have a question. Is there any way to write programs that return values? Like, say I want to write a program that calculates orbital velocity for a circular orbit at a given altitude. Can I run something like orbitv(100000) and have it return a value?\u003C/p\u003E\n"},{"CreatedByName":"Rosco P. Coltrane","CreatedById":61065,"CreatedDateTime":"2014-05-17T21:37:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trekky0623\u0022 data-cite=\u0022Trekky0623\u0022\u003E\u003Cdiv\u003EHi,\u003Cp\u003EThis is all new to me, but I have a question. Is there any way to write programs that return values? Like, say I want to write a program that calculates orbital velocity for a circular orbit at a given altitude. Can I run something like orbitv(100000) and have it return a value?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, kind of. You call the program and in that program you set a variable. All variables are accessible from any other program, so you can read it back from your original program. Like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//program_2\u003Cbr\u003Edeclare parameter Param1, Param2.\u003Cbr\u003Eset p2_output to Param1 \u002B Param2.\u003Cbr\u003E\u003Cbr\u003E//program_1\u003Cbr\u003Erun program_2(3, 5).\u003Cbr\u003Eprint p2_output.\u003Cbr\u003E\u003Cbr\u003E//Will print 8.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Vaporized Steel","CreatedById":108520,"CreatedDateTime":"2014-05-17T22:08:17Z","Content":"\n\u003Cp\u003EI\u0027m sorry if this was asked before. I tried finding it on the first 5 pages on this thread and quite naturally wont analyse 77 pages for it.\u003C/p\u003E\u003Cp\u003EBut can this autopilot be set up so that you can navigate a wheeled rover?\u003C/p\u003E\u003Cp\u003EI have 2 bases on the mun 200\u002B Km from each other.\u003C/p\u003E\u003Cp\u003EAnd I would always liked a surface transport connection if however a transport could be automated.\u003C/p\u003E\u003Cp\u003EIf this mod is capable of doing so I can finally succeed in this transport connection if only the mod also allows such complex preset maneouvres on rover vehicles.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-17T22:11:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Vaporized Steel\u0022 data-cite=\u0022Vaporized Steel\u0022\u003E\u003Cdiv\u003Ecan this autopilot be set up so that you can navigate a wheeled rover?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep! you can lock \u0022wheelsteering\u0022 and \u0022wheelthrottle\u0022 using kOS to drive rovers.\u003C/p\u003E\n"},{"CreatedByName":"Vaporized Steel","CreatedById":108520,"CreatedDateTime":"2014-05-17T22:46:42Z","Content":"\n\u003Cp\u003EThat\u0027s great:D\u003C/p\u003E\u003Cp\u003ESeems I got something to work on tommorow (couple of days perhaps \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E)\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-18T19:46:02Z","Content":"\n\u003Cp\u003ENew version v0.12.1 is up \u003C/p\u003E\u003Cp\u003EBREAKING: DOCKINGPORT:ORIENTATION is now DOCKINGPORT:FACING\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E* Fixed Terminal linewrap @ the bottom of the terminal\u003Cbr\u003E* Fixed \u0022Revert to Launch\u0022 button, it was blowing up the world and not allowing control before\u003Cbr\u003E* Fixed LOCK s in subprograms\u003Cbr\u003E* Fixed RemoteTech integration blowing up everything\u003Cbr\u003E* Fixed flight controls not releasing when they should\u003Cbr\u003E* Disabled RemoteTech Integration while RT development is stalled \u003Cbr\u003E* Fix exception when trying to type a multiline instruction in the interpreter\u003Cbr\u003E* srfprograde is available as a new shortcut\u003Cbr\u003E* BODY now has an OBT suffix\u003Cbr\u003E* Parts now have a SHIP suffix\u003Cbr\u003E* You can now work with your target if that target is a docking port\u003Cbr\u003E* Added a new PRESERVE keyword for repeating a trigger.\u003Cbr\u003E* all active triggers are removed when a script is finished.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-21T00:59:47Z","Content":"\n\u003Cp\u003ESomething I\u0027ve been working lately, because developing kOS is fun but using it is even more fun!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/yVtfD29WN9M?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-05-21T01:12:14Z","Content":"\n\u003Cp\u003EThat\u0027s damn cool, but how does the script run when the window says \u0022Program ended\u0022?\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-05-21T01:58:34Z","Content":"\n\u003Cp\u003ENeat! Do you have some links or literature on APN?\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-21T02:19:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EThat\u0027s damn cool, but how does the script run when the window says \u0022Program ended\u0022?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe program that ended is the one in the launcher, the missile is running a different program in its own core. The program in the missile is started by the launcher using the (still undocumented) \u0022RUN ... ON ...\u0022 command that let you start a program in a different core.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003ENeat! Do you have some links or literature on APN?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThese are some of the links I used while developing this: \u003Ca href=\u0022http://trajectorysolution.com/HomingGuidance.html\u0022 rel=\u0022external nofollow\u0022\u003EIntro\u003C/a\u003E, \u003Ca href=\u0022http://www.dtic.mil/dtic/tr/fulltext/u2/a556639.pdf\u0022 rel=\u0022external nofollow\u0022\u003EAdvanced\u003C/a\u003E, \u003Ca href=\u0022http://techdigest.jhuapl.edu/TD/td2901/Palumbo_Principles.pdf\u0022 rel=\u0022external nofollow\u0022\u003EWay too advanced (and math heavy)\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAnyway most of real life complexities arise from errors in the measurements and in a bunch of others things that have to be compensated, and that we don\u0027t have to worry about \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-21T04:34:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003E(still undocumented) \u0022RUN ... ON ...\u0022 command\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI saw that in the source code but didn\u0027t document it because I hadn\u0027t heard any official announcement about it so I thought it was still under development and not ready for public mention yet.\u003C/p\u003E\u003Cp\u003EIs it working well enough that I should mention it in the docs?\u003C/p\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-22T01:36:55Z","Content":"\n\u003Cp\u003EI wouldn\u0027t add it to the docs just yet, it still is very experimental and has its limitations (like not being able to pass parameters).\u003C/p\u003E\n"},{"CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2014-05-22T05:26:45Z","Content":"\n\u003Cp\u003EHello guys,\u003C/p\u003E\u003Cp\u003EWhile using Remote Tech, I found a desperate need to preprogramm my probes before they go out of sight of my comm network. Seems like this mod will fill the gap perfectly. But do I have to tweak something so the commands sent by the k-OS script override the \u0022No connection\u0022 remote tech status and actually make the probe do something while it is not connected to the Mission Control?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-22T05:32:58Z\u0022 title=\u002205/22/2014 05:32  AM\u0022 data-short=\u002210 yr\u0022\u003EMay 22, 2014\u003C/time\u003E by Enceos\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-22T05:44:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Enceos\u0022 data-cite=\u0022Enceos\u0022\u003E\u003Cdiv\u003EHello guys,\u003Cp\u003EWhile using Remote Tech, I found a desperate need to preprogramm my probes before they go out of sight of my comm network. Seems like this mod will fill the gap perfectly. But do I have to tweak something so the commands sent by the k-OS script override the \u0022No connection\u0022 remote tech status and actually make the probe do something while it is not connected to the Mission Control?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe current RemoteTech/kOS integration is very beta right now. you can turn it on in the kOS config file and try it out. It should allow you to issue a command and the script will continue to run and function while you are out of range.\u003C/p\u003E\u003Cp\u003Eknown issues include only having access to steering and throttle. No action groups or sas rcs toggles.\u003C/p\u003E\u003Cp\u003EI have been holding off a bit to see where RT development goes and we have a lot on our plate already. That being said i see RT and kOS as the peanut butter and jelly of mods and i want them to work very well together\u003C/p\u003E\n"}]}