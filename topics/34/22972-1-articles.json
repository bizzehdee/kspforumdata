{"TopicId":22972,"ForumId":34,"TopicTitle":"[0.90] ProgCom - CPU Emulator V0.11.1","CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-04-19T22:57:47Z","PageNum":1,"Articles":[{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-04-19T22:57:47Z","Content":"\n\u003Cp\u003EThis mod adds a CPU emulator to the game which you can program with the assembly language that is described in the included manual. It is able to control most aspects of the spacecraft such as throttle, actiongroups, pitch/yaw/roll, translation and staging.\u003C/p\u003E\u003Cp\u003EFor example, if you want to make a program that turns the throttle up to 100% after 10 seconds, you can do this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E.text\u003Cbr\u003E#include libLabel.txt\u003Cbr\u003E#global main\u003Cbr\u003Emain:\u003Cbr\u003Ewr r0, r0, GLOBAL_TIMER;reset timer\u003Cbr\u003Emovil r1, CPU_CLOCKRATE;ammount of cycles in a second\u003Cbr\u003Emuli r1, r1, 10\u003Cbr\u003Eloop:\u003Cbr\u003Erd r2, r0, GLOBAL_TIMER\u003Cbr\u003Ebl r2, r1, loop\u003Cbr\u003Emovi r3, 1024\u003Cbr\u003Ewr r3, r0, GLOBAL_MAINTHROTTLE\u003Cbr\u003Ehalt\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr, if you use the compiler, you can do this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Evar int# TIMER = 60;//pointer to timer\u003Cbr\u003Evar int# THROTTLE = 0;//pointer to throttle\u003Cbr\u003Evar int CLOCKRATE = 384000;//ammount of cycles in a second\u003Cbr\u003E\u003Cbr\u003Edef main : {\u003Cbr\u003ETIMER 0 \u0026lt;-;//reset timer\u003Cbr\u003Ewhile TIMER# CLOCKRATE 10 * \u0026lt;; ;//loop while the value of the timer is less than the ammount of cycles in a second times 10\u003Cbr\u003ETHROTTLE 1024 \u0026lt;-;//set throttle to max\u003Cbr\u003Ewhile 1;;//halt\u003Cbr\u003Ereturn;\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhen the code is run, it is first translated into binary and then loaded into the emulators memory, where it is interpreted one instruction at a time. More detailed information regarding the emulator is included in the documentation in the download.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kerbal.curseforge.com/ksp-mods/221218-progcom\u0022 rel=\u0022external nofollow\u0022\u003EYou can download it here \u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESource, documentation and example code are included in the download. Feel free to ask any questions you have in the forum thread.\u003C/p\u003E\u003Cp\u003EThere is also a \u003Ca href=\u0022https://github.com/Binamrad/ProgCom\u0022 rel=\u0022external nofollow\u0022\u003Egithub repository.\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EChangelog:\u003C/p\u003E\u003Cp\u003E0.11.1\u003C/p\u003E\u003Cp\u003EAdded some rudimentary documentation regarding the new features.\u003C/p\u003E\u003Cp\u003E0.11\u003C/p\u003E\u003Cp\u003EAdded some additional functionality to the monitor\u003C/p\u003E\u003Cp\u003EAdded a GUI for the tape drive, in the process changed how programs are loaded\u003C/p\u003E\u003Cp\u003EAdded some new instructions\u003C/p\u003E\u003Cp\u003EAdded an operating system and a BASIC interpreter based on the \u0022tiny BASIC\u0022 dialect\u003C/p\u003E\u003Cp\u003EDocumentation on new features is very lacking, might fix later\u003C/p\u003E\u003Cp\u003E0.10.4\u003C/p\u003E\u003Cp\u003ESeveral fairly major bugfixes, some further clarification of parts of the documentation.\u003C/p\u003E\u003Cp\u003E0.10.3\u003C/p\u003E\u003Cp\u003EMinor bugfixes and additional features.\u003C/p\u003E\u003Cp\u003EVersion 0.10.2\u003C/p\u003E\u003Cp\u003EFixed a minor bug, clarified parts of documentation.\u003C/p\u003E\u003Cp\u003EVersion 0.10.1\u003C/p\u003E\u003Cp\u003ELots of changes, see changelog for details.\u003C/p\u003E\u003Cp\u003EVersion 0.9:\u003C/p\u003E\u003Cp\u003EAdded a tape drive, as well as some bugfixes.\u003C/p\u003E\u003Cp\u003EFor more info, see the changelog in the download.\u003C/p\u003E\u003Cp\u003EVersion 0.8.2:\u003C/p\u003E\u003Cp\u003EAdded kellpossibles radial part.\u003C/p\u003E\u003Cp\u003EVersion 0.8.1:\u003C/p\u003E\u003Cp\u003ENew instructions, improved string handling, better constants, bug fixes.\u003C/p\u003E\u003Cp\u003EFor more info, see the changelog in the download.\u003C/p\u003E\u003Cp\u003EVersion 0.8:\u003C/p\u003E\u003Cp\u003EAdded a keyboard.\u003C/p\u003E\u003Cp\u003EVersion 0.7.2:\u003C/p\u003E\u003Cp\u003EFixed an issue that caused the emulator to not use the entire cache memory.\u003C/p\u003E\u003Cp\u003EVersion 0.7.1:\u003C/p\u003E\u003Cp\u003EFixed a bug that caused the monitor to be blurry at low texture resolutions.\u003C/p\u003E\u003Cp\u003EVersion 0.7:\u003C/p\u003E\u003Cp\u003EFixed some of the bugs that had been reported. I also added a monitor.\u003C/p\u003E\u003Cp\u003EFor more info, see the changelog in the download.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-03-16T15:02:53Z\u0022 title=\u002203/16/2015 03:02  PM\u0022 data-short=\u00229 yr\u0022\u003EMarch 16, 2015\u003C/time\u003E by SimplySimon\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"khyperia","CreatedById":25539,"CreatedDateTime":"2013-04-20T00:14:40Z","Content":"\n\u003Cp\u003EI\u0027ve been working on a C-like language compiler for ProgCom while the forums were down.\u003C/p\u003E\u003Cp\u003EIf anyone would like to help alpha-test it and submit bugs/feature requests to me, please do so! However, note that it IS in a very early alpha stage, and there will be a fair amount of glitches. I\u0027ve hit the point where I couldn\u0027t find any bugs by myself, though, so it should be relatively stable.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/18830644/ProgComC.zip\u0022 rel=\u0022external nofollow\u0022\u003EHere\u0027s the exe, the feeble documentation, and an example gibberish test program to show the features of the language.\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.assembla.com/code/progcomc/subversion/nodes\u0022 rel=\u0022external nofollow\u0022\u003EAnd here\u0027s the sourcecode repo, since that\u0027s probably required to be linked.\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EHow to use: Open up command prompt, CD to the directory ProgComC.exe is in, and run it while passing in a file to compile. For example, to compile the test.c file included (assuming it\u0027s in the same directory as ProgComC.exe is in), you would do \u0022ProgComC.exe test.c\u0022\u003C/p\u003E\u003Cp\u003EAlternatively, you can just name your C file \u0022program.c\u0022 and it will automatically use it if no filename is passed in - so you just need to run \u0022ProgComC.exe\u0022, or simply doubleclick on the exe.\u003C/p\u003E\u003Cp\u003EThe entire compiled unit will be written back to disk with the same filename as the source, with \u0022.txt\u0022 appended. So, in our test.c example, the output would be named test.c.txt. This is the file that you would put in the progcom directory and run the command \u0022load run test.c.txt\u0022 inside progcom.\u003C/p\u003E\u003Cp\u003EThe program is written in .NET 3.5, the same as KSP. Windows users should be fine, Linux users will need to install Mono, and I think Mac users also need to install Mono.\u003C/p\u003E\u003Cp\u003EPlease report any bugs or feature requests that you have!\u003C/p\u003E\n"},{"CreatedByName":"eyecikjou567","CreatedById":22618,"CreatedDateTime":"2013-04-20T13:02:09Z","Content":"\n\u003Cp\u003ESo I\u0027m currently working on the K-Compiler.\u003C/p\u003E\u003Cp\u003EIt has C-like syntax and has about the same power in program (pointers, etc)\u003C/p\u003E\u003Cp\u003EThe first version will include the any* feature, inline asm and functions but not namespaces.\u003C/p\u003E\u003Cp\u003EIf anyone wants to test this contact me over the forum.\u003C/p\u003E\u003Cp\u003EI will respond asap when the compiler is working and debugged...\u003C/p\u003E\n"},{"CreatedByName":"Luxmaster-CZ","CreatedById":21176,"CreatedDateTime":"2013-04-20T14:53:52Z","Content":"\n\u003Cp\u003ESomeone make a video of this showing highlights \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E plase\u003C/p\u003E\n"},{"CreatedByName":"Manesag","CreatedById":58720,"CreatedDateTime":"2013-04-20T16:09:19Z","Content":"\n\u003Cp\u003EHey. \u003C/p\u003E\u003Cp\u003ECould you explain how to use this. I tried and I just didnt understand what to do at all.\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-04-20T21:58:17Z","Content":"\n\u003Cp\u003EUpdated!\u003C/p\u003E\u003Cp\u003EFixed some of the bugs that were reported before the forums reset.\u003C/p\u003E\u003Cp\u003EI also added a monitor. Next up is a keyboard, probably.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Luxmaster-CZ\u0022 data-cite=\u0022Luxmaster-CZ\u0022\u003E\u003Cdiv\u003ESomeone make a video of this showing highlights \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E plase\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI could make a video, but it\u0027d probably just be a video of how the example code works. Would that be interesting to watch?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Manesag\u0022 data-cite=\u0022Manesag\u0022\u003E\u003Cdiv\u003EHey. \u003Cp\u003ECould you explain how to use this. I tried and I just didnt understand what to do at all.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI could try, but you\u0027ll have to be a little more specific. Did you have trouble installing it, could you not run any programs or was the assembly language too confusing?\u003C/p\u003E\n"},{"CreatedByName":"Manesag","CreatedById":58720,"CreatedDateTime":"2013-04-21T14:17:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003EUpdated!\u003Cp\u003EFixed some of the bugs that were reported before the forums reset.\u003C/p\u003E\u003Cp\u003EI also added a monitor. Next up is a keyboard, probably.\u003C/p\u003E\u003Cp\u003EI could make a video, but it\u0027d probably just be a video of how the example code works. Would that be interesting to watch?\u003C/p\u003E\u003Cp\u003EI could try, but you\u0027ll have to be a little more specific. Did you have trouble installing it, could you not run any programs or was the assembly language too confusing?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt just wasn\u0027t running any programs at all. And I would need to learn assembly so if possible could you explain those two I would love to use this\u003C/p\u003E\n"},{"CreatedByName":"Warringer","CreatedById":328,"CreatedDateTime":"2013-04-21T20:29:06Z","Content":"\n\u003Cp\u003EOkay, now that we got a C compiler for it...\u003C/p\u003E\u003Cp\u003EHow long until we can expect a Linux kernel?\u003C/p\u003E\u003Cp\u003E;-)\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-04-21T20:49:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Manesag\u0022 data-cite=\u0022Manesag\u0022\u003E\u003Cdiv\u003EIt just wasn\u0027t running any programs at all. And I would need to learn assembly so if possible could you explain those two I would love to use this\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you have installed the plugin and the plugindata folders correctly, you should be able to run a program by entering \u0022load run filename.txt\u0022 into the console.\u003C/p\u003E\u003Cp\u003EThe most interesting program in the example code at the moment is probably navigator.txt. So, to run it you just enter \u0022load run navigator.txt\u0022 into the console and turn it on. Then you enter the vertical speed you want the craft to hold multiplied by 16 into the numpad and press enter, so if you want the craft to go upwards at 1m/s you enter 16. Then you press the \u0022TTL\u0022 button to give the computer control over the throttle, and then the program should be running properly.\u003C/p\u003E\u003Cp\u003EThe assembly code is a bit more complicated to explain though, especially in a single forum post. There should be some places on the internet that explain the basic concepts of assembly programming, and if you know those and have some experience with a low level language like C you I think you be able to understand the basics of progcom assembly from the documentation and the example code. If you have any specific questions, feel free to ask here or when I\u0027m on the IRC.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-09T16:19:23Z\u0022 title=\u002206/09/2013 04:19  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 9, 2013\u003C/time\u003E by SimplySimon\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"eyecikjou567","CreatedById":22618,"CreatedDateTime":"2013-04-22T13:06:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Warringer\u0022 data-cite=\u0022Warringer\u0022\u003E\u003Cdiv\u003EOkay, now that we got a C compiler for it...\u003Cp\u003EHow long until we can expect a Linux kernel?\u003C/p\u003E\u003Cp\u003E;-)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENever.\u003C/p\u003E\u003Cp\u003ELinux does run on intel or intel-compatible cpus.\u003C/p\u003E\u003Cp\u003EThere are other linux compatible kernels for ppc and arm but\u003C/p\u003E\u003Cp\u003Ethis cpu has not enough power and the ISA is to low for a full kernel or\u003C/p\u003E\u003Cp\u003Eoperating system.\u003C/p\u003E\u003Cp\u003ENo offence to simplysimon, but this cpu (or better the envoirment) is designed for batch\u003C/p\u003E\u003Cp\u003Eprocessing and maybe a very very small disk os (dos).\u003C/p\u003E\n"},{"CreatedByName":"aquilux","CreatedById":23859,"CreatedDateTime":"2013-04-22T13:47:26Z","Content":"\n\u003Cp\u003EI\u0027m sure he was joking. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"aquilux","CreatedById":23859,"CreatedDateTime":"2013-04-22T18:19:57Z","Content":"\n\u003Cp\u003EOops, doubles.\u003C/p\u003E\n"},{"CreatedByName":"String","CreatedById":15978,"CreatedDateTime":"2013-04-25T18:31:39Z","Content":"\n\u003Cp\u003EI like!\u003C/p\u003E\u003Cp\u003EBeen messing aroud a bit with khyperia\u0027s c compiler for this, works pretty well.\u003C/p\u003E\u003Cp\u003EWould be nice to be able to put comments in the c code...\u003C/p\u003E\u003Cp\u003EAnother thing im realy missing is #define and maby #ifdef too.\u003C/p\u003E\n"},{"CreatedByName":"khyperia","CreatedById":25539,"CreatedDateTime":"2013-04-26T17:19:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022String\u0022 data-cite=\u0022String\u0022\u003E\u003Cdiv\u003EI like!\u003Cp\u003EBeen messing aroud a bit with khyperia\u0027s c compiler for this, works pretty well.\u003C/p\u003E\u003Cp\u003EWould be nice to be able to put comments in the c code...\u003C/p\u003E\u003Cp\u003EAnother thing im realy missing is #define and maby #ifdef too.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m currently in the process of completely rewriting it. (I tend to do that a lot, lol)\u003C/p\u003E\u003Cp\u003EThe new version has a much more robust preprocessor engine, so it will hopefully support #define and maybe, just maybe, #if/#ifdef/all the other #if things.\u003C/p\u003E\u003Cp\u003EThe new version is also incredibly flexible and portable, meaning it can accept/parse many different languages and emit many different output types, but obviously only if I implemented it. Right now, what\u0027s currently planned for the compiler is a KspC parser, a TI-Basic/Matlab-like language parser, ProgCom assembly output, a custom assembly output for an upcoming Minecraft cpu mod, and a direct interpreter. However, everything other than the KspC/ProgCom pipeline is kind of irrevelent to ksp, though, it\u0027s just all the features for all the different communities it\u0027s for.\u003C/p\u003E\n"},{"CreatedByName":"eyecikjou567","CreatedById":22618,"CreatedDateTime":"2013-05-01T14:15:04Z","Content":"\n\u003Cp\u003ESo I\u0027m about 74% though the process of writing the basic K compiler.\u003C/p\u003E\u003Cp\u003EFor the meantime:\u003C/p\u003E\u003Cp\u003EMODEMS \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt would be nice to be able to...\u003C/p\u003E\u003Cp\u003E... communicate with nearby ships within 200m (bandwidth about 800 Baud (200m) up to 1600 Baud (\u0026lt;10m))\u003C/p\u003E\u003Cp\u003E... communicate with any target (save cpu state when leaving?, about 80 Baud (\u002B 2 Mio. m) to 400 Baud (\u0026lt; 2 Mio. m)\u003C/p\u003E\u003Cp\u003E(remember 1 Baud is about 1 bit per seconds, so 8 Baud is 1 byte/s\u003C/p\u003E\u003Cp\u003Eand 800 Baud are 100 byte/s\u003C/p\u003E\u003Cp\u003Ethis speeds should be used to lower the real cpu usage.)\u003C/p\u003E\u003Cp\u003Eafter 1 Bio. m it should drop to about 8 to 4 baud.\u003C/p\u003E\u003Cp\u003EIt would allow inter-ship coms and docking manouvers with multiple ships at once and also coordination above great distances...\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-05-06T21:11:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eyecikjou567\u0022 data-cite=\u0022eyecikjou567\u0022\u003E\u003Cdiv\u003ESo I\u0027m about 74% though the process of writing the basic K compiler.\u003Cp\u003EFor the meantime:\u003C/p\u003E\u003Cp\u003EMODEMS \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003E...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile I want to add some sort of wireless communication between ships eventually, that is probably a long way off since there are a lot of things I feel I should do first.\u003C/p\u003E\u003Cp\u003EGood to hear you are making progress on your compiler though! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"betaking","CreatedById":58281,"CreatedDateTime":"2013-05-09T18:02:03Z","Content":"\n\u003Cp\u003EI think it would be nice if there was a model that was somewhat different looking than the model currently with the pack...\u003C/p\u003E\u003Cp\u003EI\u0027m just saying.\u003C/p\u003E\n"},{"CreatedByName":"String","CreatedById":15978,"CreatedDateTime":"2013-05-09T19:17:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022betaking\u0022 data-cite=\u0022betaking\u0022\u003E\u003Cdiv\u003EI think it would be nice if there was a model that was somewhat different looking than the model currently with the pack...\u003Cp\u003EI\u0027m just saying.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eif you got any ideas for a model let me know, I can make it(that is, of corse if simplysimon wants it)\u003C/p\u003E\n"},{"CreatedByName":"opteron123","CreatedById":65743,"CreatedDateTime":"2013-05-10T09:27:42Z","Content":"\n\u003Cp\u003EGreat work!!!!\u003C/p\u003E\u003Cp\u003EThis adds a whole new dimension.\u003C/p\u003E\u003Cp\u003EJust throwing ideas out here, would it be possible to have a CPU i/o addressable interface that is an xml socket server. This would then allow an uplink/downlink style interface with the xml structure simulating a radio packet, that way ProgCom remains a programmable device, it is up to the user on what they do with the raw data. This could allow for user designed:\u003C/p\u003E\u003Cp\u003EWeb based \u0022mission control\u0022 style telemetry interfaces.\u003C/p\u003E\u003Cp\u003EThe more adventurous users could develop a full fledged mission package written in the language of their choice to interface with the virtual probe via the limited command xml up/down link.\u003C/p\u003E\u003Cp\u003EProgrammable scientific payloads. Where ProgCom sends raw data and the user \u0022scientist\u0022 can do whatever they wished.\u003C/p\u003E\u003Cp\u003EOh man, the possibilities...\u003C/p\u003E\n"},{"CreatedByName":"eyecikjou567","CreatedById":22618,"CreatedDateTime":"2013-05-11T16:36:41Z","Content":"\n\u003Cp\u003EI think (just my thought) it would be the easiest to intergrate a interrupt to the cpu.\u003C/p\u003E\u003Cp\u003EFor example we call it 0xF00BA8\u003C/p\u003E\u003Cp\u003EThe connection should reside over UDP.\u003C/p\u003E\u003Cp\u003EThe cpu will recieve packets in 16 byte length.\u003C/p\u003E\u003Cp\u003EThe first 4 bytes will tell the CPU what data to send back (DATA_SRC)\u003C/p\u003E\u003Cp\u003EThe next 5 bytes will tell the CPU the data type and length (DATA_TYPE, first 3 is DATA_TYPE_FORMAT, last 2 is DATA_TYPE_LEN)\u003C/p\u003E\u003Cp\u003EThe next byte tells the CPU if it should handle it with default (internal) or by\u003C/p\u003E\u003Cp\u003Esending and interrupt to the program running. (MODE_SELECT)\u003C/p\u003E\u003Cp\u003EThe next 2 bytes will be send per interrupt to the program in r1 if the MODE_SELECT byte is not 0. If MODE_SELECT is 0 it will do nothing\u003C/p\u003E\u003Cp\u003EThe next 2 bytes will be send per interrupt to the program in r2 if the MODE_SELECT byte is not 0. If MODE_SELECT is 0 it will do nothing\u003C/p\u003E\u003Cp\u003EThe last byte is a checksum. To create it add up the first 14 bytes and multiply it with the 15th byte. Then take the modulus from 255.\u003C/p\u003E\u003Cp\u003EThis allows for 4 Billion Datas with about 4 Million Types with a length of total 16 kb.\u003C/p\u003E\u003Cp\u003EThe cpu should respond only with the raw data split up nicely to packets.\u003C/p\u003E\u003Cp\u003E(Just idea)\u003C/p\u003E\n"},{"CreatedByName":"eyecikjou567","CreatedById":22618,"CreatedDateTime":"2013-05-12T16:02:07Z","Content":"\n\u003Cp\u003ESo im almost finished with the compiler.\u003C/p\u003E\u003Cp\u003EI give you a link to the compiler plus a source file to compile.\u003C/p\u003E\u003Cp\u003EBut Problem is i didnt get the calculation system to work.\u003C/p\u003E\u003Cp\u003ESo currently you have to do that manually.\u003C/p\u003E\u003Cp\u003EAll variables are stored in memory 12 adresses after the base_adr label which is used to locate the variables.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/33521283/KCompiler%20Debug.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dl.dropboxusercontent.com/u/33521283/KCompiler%20Debug.zip\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt is still a debug version and requires Windows 7 or Vista.\u003C/p\u003E\u003Cp\u003EWindows 8 is not supported and will never be...\u003C/p\u003E\n"},{"CreatedByName":"Meatsauce","CreatedById":4499,"CreatedDateTime":"2013-05-13T05:32:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eyecikjou567\u0022 data-cite=\u0022eyecikjou567\u0022\u003E\u003Cdiv\u003ESo I\u0027m about 74% though the process of writing the basic K compiler.\u003Cp\u003EFor the meantime:\u003C/p\u003E\u003Cp\u003EMODEMS \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt would be nice to be able to...\u003C/p\u003E\u003Cp\u003E... communicate with nearby ships within 200m (bandwidth about 800 Baud (200m) up to 1600 Baud (\u0026lt;10m))\u003C/p\u003E\u003Cp\u003E... communicate with any target (save cpu state when leaving?, about 80 Baud (\u002B 2 Mio. m) to 400 Baud (\u0026lt; 2 Mio. m)\u003C/p\u003E\u003Cp\u003E(remember 1 Baud is about 1 bit per seconds, so 8 Baud is 1 byte/s\u003C/p\u003E\u003Cp\u003Eand 800 Baud are 100 byte/s\u003C/p\u003E\u003Cp\u003Ethis speeds should be used to lower the real cpu usage.)\u003C/p\u003E\u003Cp\u003Eafter 1 Bio. m it should drop to about 8 to 4 baud.\u003C/p\u003E\u003Cp\u003EIt would allow inter-ship coms and docking maneuvers with multiple ships at once and also coordination above great distances...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is getting close to a plugin that I wanted to build or inspire. \u003C/p\u003E\u003Cp\u003EBasically a line-of-sight communications system that uses packets to send/receive instructions or science data. The radio relay and remote tech plugins come close, but stop short of the real value in the experience. Yes, it is fun to build networks that draw blue lines across space, but I want to send/receive commands, telemetry, and other data from one scene, and have it influence / observe the vessel that is on rails. Even if it was simulated, it would still be fun. \u003C/p\u003E\u003Cp\u003EWould be cool to procedural generate RTTY or astronomical RF phenomena and \u0022listen\u0022 and/or track it. For example, I slew a dish to Jool to listen to my probe\u0027s transponder and decode image or science data.\u003C/p\u003E\n"},{"CreatedByName":"SimplySimon","CreatedById":18291,"CreatedDateTime":"2013-05-14T00:04:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022betaking\u0022 data-cite=\u0022betaking\u0022\u003E\u003Cdiv\u003EI think it would be nice if there was a model that was somewhat different looking than the model currently with the pack...\u003Cp\u003EI\u0027m just saying.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022String\u0022 data-cite=\u0022String\u0022\u003E\u003Cdiv\u003Eif you got any ideas for a model let me know, I can make it(that is, of corse if simplysimon wants it)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, I think I might need a custom model for the thing. The only reason it uses the asas model is that I am crap at modeling.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022opteron123\u0022 data-cite=\u0022opteron123\u0022\u003E\u003Cdiv\u003EGreat work!!!!\u003Cp\u003EThis adds a whole new dimension.\u003C/p\u003E\u003Cp\u003EJust throwing ideas out here, would it be possible to have a CPU i/o addressable interface that is an xml socket server. This would then allow an uplink/downlink style interface with the xml structure simulating a radio packet, that way ProgCom remains a programmable device, it is up to the user on what they do with the raw data. This could allow for user designed:\u003C/p\u003E\u003Cp\u003EWeb based \u0022mission control\u0022 style telemetry interfaces.\u003C/p\u003E\u003Cp\u003EThe more adventurous users could develop a full fledged mission package written in the language of their choice to interface with the virtual probe via the limited command xml up/down link.\u003C/p\u003E\u003Cp\u003EProgrammable scientific payloads. Where ProgCom sends raw data and the user \u0022scientist\u0022 can do whatever they wished.\u003C/p\u003E\u003Cp\u003EOh man, the possibilities...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat might be possible, I\u0027ll see what I can do. I had hoped to have a way for people to do their own extensions to progcom using a serial interface, but since the interface doesn\u0027t seem to show up in the final dll at the moment I don\u0027t know if I can get that working.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eyecikjou567\u0022 data-cite=\u0022eyecikjou567\u0022\u003E\u003Cdiv\u003ESo im almost finished with the compiler.\u003Cp\u003EI give you a link to the compiler plus a source file to compile.\u003C/p\u003E\u003Cp\u003EBut Problem is i didnt get the calculation system to work.\u003C/p\u003E\u003Cp\u003ESo currently you have to do that manually.\u003C/p\u003E\u003Cp\u003EAll variables are stored in memory 12 adresses after the base_adr label which is used to locate the variables.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/33521283/KCompiler%20Debug.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dl.dropboxusercontent.com/u/33521283/KCompiler%20Debug.zip\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt is still a debug version and requires Windows 7 or Vista.\u003C/p\u003E\u003Cp\u003EWindows 8 is not supported and will never be...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENeato! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve tried it out, and I found a few issues:\u003C/p\u003E\u003Cp\u003Efirst:\u003C/p\u003E\u003Cp\u003EIt seems like you are allocating all variables for all functions at fixed locations in the data section instead of on the stack. This means that recursive functions might not work as intended.\u003C/p\u003E\u003Cp\u003Esecond:\u003C/p\u003E\u003Cp\u003EWhile all variables are meant to be stored in the data section you don\u0027t actually allocate any space for them there. This means that you will be writing to the next section instead, which is the stack. This means that variables can change when something is pushed to the stack, and contents on the stack can be overwritten every time a variable is accessed.\u003C/p\u003E\u003Cp\u003Ethird:\u003C/p\u003E\u003Cp\u003EYou seem to use register a15 in some functions. This is probably a bad idea, since a14 and a15 are used in interrupts, which means that their contents can change to fairly arbitrary values at arbitrary intervals if interrupts are enabled.\u003C/p\u003E\n"},{"CreatedByName":"String","CreatedById":15978,"CreatedDateTime":"2013-05-14T08:08:14Z","Content":"\n\u003Cp\u003EI checked out the k compiler(didn\u0027t try to write anything in it yet) but I would really like a proper c compiler that we we could just port existing stuff like stdlib for use on ProgCom.\u003C/p\u003E\u003Cp\u003EI had a look at LLVM, it\u0027s a open source compiler infrastructure that can be used to make custom languages or compile existing languages to any platform that you define. I just don\u0027t have the understanding of how compilers work and don\u0027t really have the time to start learning it now.\u003C/p\u003E\u003Cp\u003EMaybe someone could try to use it to make a proper compiler that compiles basically any language you to ProgCom assembler(it could even make ProgCom binaries if loading them would be supported).\u003C/p\u003E\u003Cp\u003EIf we do get a good c compiler I\u0027d be happy to help porting a standard lib for it.\u003C/p\u003E\u003Cp\u003EGCC can also be customized to compile to a system you define but from what I have seen LLVM seems better and it can actually use GCC intermediate code to compile to its destination.\u003C/p\u003E\u003Cp\u003EIll try to think up a nice model for ProgCom, I was thinking to make 3 stack models(in different sizes) and one side mounted one.\u003C/p\u003E\n"},{"CreatedByName":"eyecikjou567","CreatedById":22618,"CreatedDateTime":"2013-05-14T16:41:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SimplySimon\u0022 data-cite=\u0022SimplySimon\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Efirst:\u003C/p\u003E\u003Cp\u003EIt seems like you are allocating all variables for all functions at fixed locations in the data section instead of on the stack. This means that recursive functions might not work as intended.\u003C/p\u003E\u003Cp\u003Esecond:\u003C/p\u003E\u003Cp\u003EWhile all variables are meant to be stored in the data section you don\u0027t actually allocate any space for them there. This means that you will be writing to the next section instead, which is the stack. This means that variables can change when something is pushed to the stack, and contents on the stack can be overwritten every time a variable is accessed.\u003C/p\u003E\u003Cp\u003Ethird:\u003C/p\u003E\u003Cp\u003EYou seem to use register a15 in some functions. This is probably a bad idea, since a14 and a15 are used in interrupts, which means that their contents can change to fairly arbitrary values at arbitrary intervals if interrupts are enabled.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Efirst:\u003C/p\u003E\u003Cp\u003Ethe lang is not intended to do real recursive stuff. Just basic counting and powering numbers.\u003C/p\u003E\u003Cp\u003Eseconds:\u003C/p\u003E\u003Cp\u003Eit is a vary basic compiler that actually allocates about 512bytes memory for variables and functions.\u003C/p\u003E\u003Cp\u003Ethe problem of the stack thingy is a user problem the lang is supposed to do nothing for the user.\u003C/p\u003E\u003Cp\u003EAlso the stack would make some things with variables very unconvinient.\u003C/p\u003E\u003Cp\u003EKISS principle.\u003C/p\u003E\u003Cp\u003Ethird:\u003C/p\u003E\u003Cp\u003Ea15 is used very shortly when calling with parameters.\u003C/p\u003E\u003Cp\u003Eotherwise it could only support 14 parameters.\u003C/p\u003E\u003Cp\u003Elast point:\u003C/p\u003E\u003Cp\u003Ei am about to face the GCSE (Realschul Abschluss Deutschland) so i cannot work on the compiler\u003C/p\u003E\u003Cp\u003Ei would be happy to see some mods for it.\u003C/p\u003E\u003Cp\u003Ethe principle is simple:\u003C/p\u003E\u003Cp\u003Ekeep the level very low so the users is almost at assembler but always remembre the c style.\u003C/p\u003E\u003Cp\u003ECopyright and License for the KCompiler:\u003C/p\u003E\u003Cp\u003EThe license for the KCompiler is the same as for any other mod for ksp (official mods in the forum)\u003C/p\u003E\u003Cp\u003E=\u0026gt; CC BY-SA-NC\u003C/p\u003E\u003Cp\u003EApplies for code and binary\u003C/p\u003E\n"}]}