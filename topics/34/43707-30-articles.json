{"TopicId":43707,"ForumId":34,"TopicTitle":"kOS Scriptable Autopilot System 0.9","CreatedByName":"KevinLaity","CreatedById":68050,"CreatedDateTime":"2013-08-24T14:28:17Z","PageNum":30,"Articles":[{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-09-14T17:36:35Z","Content":"\n\u003Cp\u003EWhere are the files saved in the 0.5 version? I can\u0027t seem to find my saved files from within the game, and it doesn\u0027t recognize the files I\u0027m placing in the \u0022Plugin/PluginData/Archive\u0022 folder.\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2013-09-14T17:41:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SolarLiner\u0022 data-cite=\u0022SolarLiner\u0022\u003E\u003Cdiv\u003EWhere are the files saved in the 0.5 version? I can\u0027t seem to find my saved files from within the game, and it doesn\u0027t recognize the files I\u0027m placing in the \u0022Plugin/PluginData/Archive\u0022 folder.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETry \u0022Plugin\u003Cstrong\u003Es\u003C/strong\u003E/PluginData/Archive\u0022\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-09-14T17:48:54Z","Content":"\n\u003Cp\u003EYeah, keyboard problem. I don\u0027t have any Plugin folder, only a Plugins one. But still kOS can\u0027t find the files put there, and it doesn\u0027t seem to save the files I create ingame.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-14T17:55:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SolarLiner\u0022 data-cite=\u0022SolarLiner\u0022\u003E\u003Cdiv\u003EYeah, keyboard problem. I don\u0027t have any Plugin folder, only a Plugins one. But still kOS can\u0027t find the files put there, and it doesn\u0027t seem to save the files I create ingame.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt doesn\u0027t natively use the archive folder as it\u0027s volume. If you want to edit things in there or run them then you will have to either copy it from the archive or switch to the archive volume.\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2013-09-14T18:34:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003EIt doesn\u0027t natively use the archive folder as it\u0027s volume. If you want to edit things in there or run them then you will have to either copy it from the archive or switch to the archive volume.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, it used to then... Thanks !\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-15T00:41:36Z","Content":"\n\u003Cp\u003EThere has been a lot of discussion lately about how to control your rocket\u0027s angle in an acceptable manner. Had this simple information been included in the read me, we could have avoided all the problems from the very beginning. Of course now that I have a handle on it, I fully expect the new update will come as I write this post. If not, then here is an example of how to use the V(,,) instead of the R(,,) system. You can use this until the new update rolls out to gain full and accurate control of your rocket. I\u0027m pretty sure there are a few people that actually knew this from the beginning. All I can say is shame on you. This took me five minutes once I actually found an accurate description of the formulas.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset yaw to 0.\u003Cbr\u003Eset pitch to 90.\u003Cbr\u003Eset x to 0.\u003Cbr\u003Eset y to 0.\u003Cbr\u003Eset z to 0.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eset q to 0.\u003Cbr\u003Eset tAngle to up \u002B V(x,y,z).\u003Cbr\u003Elock steering to tAngle.\u003Cbr\u003Eclearscreen.\u003Cbr\u003E\u003Cbr\u003Euntil q = 1\u003Cbr\u003E{\u003Cbr\u003Eon ag9 set q to 1.\u003Cbr\u003Eset pitch to pitch \u002B 5.\u003Cbr\u003Eset x to cos(yaw) * cos(pitch).\u003Cbr\u003Eset y to sin(yaw) * cos(pitch).\u003Cbr\u003Eset z to sin(pitch).\u003Cbr\u003Ewait 1.\u003Cbr\u003Eif pitch \u0026gt; 359 { set pitch to 0. }.\u003Cbr\u003Eif pitch \u0026lt; 0 { set pitch to 359. }.\u003Cbr\u003Eif yaw \u0026gt; 359 { set yaw to 0. }.\u003Cbr\u003Eif yaw \u0026lt; 0 { set yaw to 359. }.\u003Cbr\u003Eprint \u0022x \u0022 \u002B x at (0,1).\u003Cbr\u003Eprint \u0022y \u0022 \u002B y at (0,2).\u003Cbr\u003Eprint \u0022z \u0022 \u002B z at (0,3).\u003Cbr\u003Eprint \u0022Yaw \u0022 \u002B yaw at (0,5).\u003Cbr\u003Eprint \u0022Pitch \u0022 \u002B pitch at (0,7).\u003Cbr\u003Eset tAngle to up \u002B V(x,y,z).\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-15T00:49:58Z\u0022 title=\u002209/15/2013 12:49  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 15, 2013\u003C/time\u003E by Payload\u003C/strong\u003E\n\u003Cbr\u003EForgot pitch and yaw limits.\n\u003C/span\u003E\n"},{"CreatedByName":"Sma","CreatedById":67377,"CreatedDateTime":"2013-09-15T02:44:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euntil 0 {\u003Cbr\u003E  if RCS { print \u0022RCS on.\u0022 }.\u003Cbr\u003E  if SAS { print \u0022SAS on.\u0022 }.\u003Cbr\u003E  wait 1.\u003Cbr\u003E  clearscreen.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis works, so yes.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t even bother with SAS while running my orbit program, as when steering is locked, it\u0027s not really needed. I did find out the hardway that unless you unlock steering when the program ends, you can\u0027t seem to change direction. So what I do is at the end of my program, I lock steering to prograde, then unlock steering then turn sas on. It seems to work in the bits of testing I\u0027ve done.\u003C/p\u003E\n"},{"CreatedByName":"Sma","CreatedById":67377,"CreatedDateTime":"2013-09-15T02:48:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003EThere has been a lot of discussion lately about how to control your rocket\u0027s angle in an acceptable manner. Had this simple information been included in the read me, we could have avoided all the problems from the very beginning. Of course now that I have a handle on it, I fully expect the new update will come as I write this post. If not, then here is an example of how to use the V(,,) instead of the R(,,) system. You can use this until the new update rolls out to gain full and accurate control of your rocket. I\u0027m pretty sure there are a few people that actually knew this from the beginning. All I can say is shame on you. This took me five minutes once I actually found an accurate description of the formulas.\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset yaw to 0.\u003Cbr\u003Eset pitch to 90.\u003Cbr\u003Eset x to 0.\u003Cbr\u003Eset y to 0.\u003Cbr\u003Eset z to 0.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eset q to 0.\u003Cbr\u003Eset tAngle to up \u002B V(x,y,z).\u003Cbr\u003Elock steering to tAngle.\u003Cbr\u003Eclearscreen.\u003Cbr\u003E\u003Cbr\u003Euntil q = 1\u003Cbr\u003E{\u003Cbr\u003Eon ag9 set q to 1.\u003Cbr\u003Eset pitch to pitch \u002B 5.\u003Cbr\u003Eset x to cos(yaw) * cos(pitch).\u003Cbr\u003Eset y to sin(yaw) * cos(pitch).\u003Cbr\u003Eset z to sin(pitch).\u003Cbr\u003Ewait 1.\u003Cbr\u003Eif pitch \u0026gt; 359 { set pitch to 0. }.\u003Cbr\u003Eif pitch \u0026lt; 0 { set pitch to 359. }.\u003Cbr\u003Eif yaw \u0026gt; 359 { set yaw to 0. }.\u003Cbr\u003Eif yaw \u0026lt; 0 { set yaw to 359. }.\u003Cbr\u003Eprint \u0022x \u0022 \u002B x at (0,1).\u003Cbr\u003Eprint \u0022y \u0022 \u002B y at (0,2).\u003Cbr\u003Eprint \u0022z \u0022 \u002B z at (0,3).\u003Cbr\u003Eprint \u0022Yaw \u0022 \u002B yaw at (0,5).\u003Cbr\u003Eprint \u0022Pitch \u0022 \u002B pitch at (0,7).\u003Cbr\u003Eset tAngle to up \u002B V(x,y,z).\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m going to try putting this into my launch/orbit program, I suspect I may have some issues, mostly just wrapping my head around the numbers though lol \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I\u0027ve gotten by using R (just to get into a normal orbit) but it doesn\u0027t hurt to try something else....hopefully lol.\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2013-09-15T02:56:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sma\u0022 data-cite=\u0022Sma\u0022\u003E\u003Cdiv\u003EI don\u0027t even bother with SAS while running my orbit program, as when steering is locked, it\u0027s not really needed.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI pretty much only have \u0022SAS OFF.\u0022 lines in my programs. Pretty much any time there\u0027s a maneuver to be made, I turn it off, just to make sure. That\u0027s why I wrote a little program just to check if SAS could be used as a boolean condition.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sma\u0022 data-cite=\u0022Sma\u0022\u003E\u003Cdiv\u003EI did find out the hardway that unless you unlock steering when the program ends, you can\u0027t seem to change direction. So what I do is at the end of my program, I lock steering to prograde, then unlock steering then turn sas on. It seems to work in the bits of testing I\u0027ve done.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve never had a problem with not unlocking steering. I do turn SAS on at the end of most programs, but I don\u0027t think I\u0027ve ever used \u0022unlock steering\u0022 or \u0022unlock throttle\u0022. It appears to me that control is released when the program ends.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-15T03:37:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sma\u0022 data-cite=\u0022Sma\u0022\u003E\u003Cdiv\u003EI\u0027m going to try putting this into my launch/orbit program, I suspect I may have some issues, mostly just wrapping my head around the numbers though lol \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I\u0027ve gotten by using R (just to get into a normal orbit) but it doesn\u0027t hurt to try something else....hopefully lol.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s really easy. Just have your loop update the xyz values as shown. You may not need the limits for function. They are there for the print out. I haven\u0027t tested to see what happens when you go beyond the 360 limit. My program doesn\u0027t have limits. I assume most people will know that \u0026gt;360 and \u0026lt;0 are invalid. 90 degree yaw equates to North on the Nav Ball. I have wrapped my yaw value in a target heading. Which is just \u003Cstrong\u003E set yaw to 90 \u002B tHeading.\u003C/strong\u003E You can then set tHeading to whatever you wish and that corresponds to the Nav Ball heading. Pitch is 90 up so that works out. Pitch is set via heading.\u003C/p\u003E\u003Cp\u003EI set a heading of 45 at my first turn and ended up in an inclination of 44.6deg. I\u0027d say that\u0027s not too bad. I have not tested adding roll into the mix as of yet. I feel it might be the only thing R(,,) is good for.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-15T05:28:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nothke\u0022 data-cite=\u0022nothke\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOK now, I don\u0027t get this.. I am trying to make my space station always face UP and if I make a program with \u0022lock steering to UP.\u0022 the station starts constantly spinning indefinitely.. Adding R(...) or V(0,1,0) doesn\u0027t do anything either... \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe way the steering system works it seems to need a bit of time to find its own head when you first use a \u0022LOCK STEERING TO....\u0022 command. It will spin about all axes before settling on the direction you gave it. I suspect it\u0027s doing something to \u0022learn\u0022 its rotational controls by trying them out and seeing what happens. But after it\u0027s rotated through all three axes it will settle down and work right. It just means you need your program to take over the steering a good 5 to 10 seconds before it\u0027s actually needed.\u003C/p\u003E\n"},{"CreatedByName":"whaaw","CreatedById":69050,"CreatedDateTime":"2013-09-15T10:55:14Z","Content":"\n\u003Cp\u003EHello, i put this code together for my VTOL thrust controll and it works perfect for me.\u003C/p\u003E\u003Cp\u003Eis it possibel to lock steering but override it when i maually input controls? like SAS behavieor just with more lock force?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset currentbody to body.\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Aktiver Planet: \u0022 \u002B currentbody.\u003Cbr\u003Eprint \u0022Hovering..\u0022.\u003Cbr\u003E\u003Cbr\u003Eif currentbody = \u0022Kerbin\u0022 { set radiusplanet to 600000. set gplanet to 9.81. }.\u003Cbr\u003Eif currentbody = \u0022Mun\u0022 { set radiusplanet to 200000. set gplanet to 1.63. }.\u003Cbr\u003Eif currentbody = \u0022Minmus\u0022 { set radiusplanet to 60000. set gplanet to 0.491. }.\u003Cbr\u003Eif currentbody = \u0022Eve\u0022 { set radiusplanet to 700000. set gplanet to 16.7. }.\u003Cbr\u003Eif currentbody = \u0022Gilly\u0022 { set radiusplanet to 13000. set gplanet to 0.049. }.\u003Cbr\u003Eif currentbody = \u0022Moho\u0022 { set radiusplanet to 250000. set gplanet to 2.70. }.\u003Cbr\u003Eif currentbody = \u0022Duna\u0022 { set radiusplanet to 320000. set gplanet to 2.94. }.\u003Cbr\u003Eif currentbody = \u0022Ike\u0022 { set radiusplanet to 130000. set gplanet to 1.10. }.\u003Cbr\u003Eif currentbody = \u0022Dres\u0022 { set radiusplanet to 138000. set gplanet to 1.13. }.\u003Cbr\u003Eif currentbody = \u0022Laythe\u0022 { set radiusplanet to 500000. set gplanet to 7.85. }.\u003Cbr\u003Eif currentbody = \u0022Vall\u0022 { set radiusplanet to 300000. set gplanet to 2.31. }.\u003Cbr\u003Eif currentbody = \u0022Tylo\u0022 { set radiusplanet to 600000. set gplanet to 7.85. }.\u003Cbr\u003Eif currentbody = \u0022Bop\u0022 { set radiusplanet to 65000. set gplanet to 0.589. }.\u003Cbr\u003Eif currentbody = \u0022Pol\u0022 { set radiusplanet to 44000. set gplanet to 0.373. }.\u003Cbr\u003Eif currentbody = \u0022Eeloo\u0022 { set radiusplanet to 210000. set gplanet to 1.69. }.\u003Cbr\u003E\u003Cbr\u003Eset radius to radiusplanet.\u003Cbr\u003Eset g to gplanet.\u003Cbr\u003Eset TargetH to (ALT:RADAR)\u002B12.\u003Cbr\u003E\u003Cbr\u003Eset I to 0.\u003Cbr\u003Eset deactivateFlag to 0.\u003Cbr\u003Eon AG7 set deactivateFlag to 1.\u003Cbr\u003Esas on.\t\u003Cbr\u003E\u003Cbr\u003Euntil deactivateFlag=1 {\u003Cbr\u003E\u003Cbr\u003Eon AG4 set TargetH to (ALT:RADAR)\u002Bd.\u003Cbr\u003Eon AG5 set TargetH to (ALT:RADAR)\u002B20.\u003Cbr\u003E\u003Cbr\u003E\tset WTR to (mass*g*((radius/(radius\u002Baltitude))^2)/maxthrust).\u003Cbr\u003E\tset E to (TargetH - ALT:RADAR) - (verticalspeed*2).\u003Cbr\u003E\tset P to (0.1*(E))*WTR.\u003Cbr\u003E\tset I to (0.03*(E \u002B I))*WTR.\u003Cbr\u003E\tlock throttle to P\u002BI.\u003Cbr\u003E\tif verticalspeed \u0026lt; (((TargetH - alt:radar)/10)-20) { lock throttle to 1. }.\u003Cbr\u003E\tif verticalspeed \u0026gt; (((TargetH - alt:radar)/10)\u002B25) { lock throttle to 0. }.\u003Cbr\u003E\u003Cbr\u003E\tprint \u0022------------------------\u0022 at (10,4).\u003Cbr\u003E\tprint \u0022Alt: \u0022 \u002B alt:radar at (10,6).\u003Cbr\u003E\tprint \u0022Hover auf: \u0022 \u002B TargetH at (10,9).\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\tif alt:radar \u0026lt; 20 and currentbody = \u0022Kerbin\u0022 { \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tgear on. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tset d to 5. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t}.\u003Cbr\u003E\u003Cbr\u003E\tif alt:radar \u0026gt; 20 and currentbody = \u0022Kerbin\u0022 { \t\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tgear off.\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tset d to 0. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t}.\u003Cbr\u003E\u003Cbr\u003E\tif alt:radar \u0026lt; 12 and currentbody = \u0022Kerbin\u0022 {\t\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tset d to 5.6. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t}.\u003Cbr\u003E\u003Cbr\u003E\tif alt:radar \u0026lt; 1.7 and currentbody = \u0022Kerbin\u0022 {\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tset deactivateFlag to 1. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tlock throttle to 0. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t}.\u003Cbr\u003E\u003Cbr\u003E\tif alt:radar \u0026lt; 20 and currentbody = \u0022Mun\u0022 { \t\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\tgear on. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\tset d to -0.5. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t}.\u003Cbr\u003E\u003Cbr\u003E\tif alt:radar \u0026gt; 20 and currentbody = \u0022Mun\u0022 { \t\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\tgear on. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\tset d to -5. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\tif alt:radar \u0026gt; 3 and currentbody = \u0022Mun\u0022 { \t\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\tgear on. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\tset d to -0. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\tif alt:radar \u0026lt; 1.7 and currentbody = \u0022Mun\u0022 {\u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tset deactivateFlag to 1. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t\tlock throttle to 0. \u003Cbr\u003E\t\t\t\t\t\t\t\t\t\t\t\t}.\u003Cbr\u003E\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Exiting..\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-15T18:39:57Z\u0022 title=\u002209/15/2013 06:39  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 15, 2013\u003C/time\u003E by whaaw\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"check","CreatedById":71875,"CreatedDateTime":"2013-09-15T11:19:28Z","Content":"\n\u003Cp\u003ESo I was able to make a Curiosity\u002BSkycrane lik EDL system (minus the tether) , fully automated using kOS. Check out the video: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/noT7tllBSnE?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EIf starts by launching a rocket on a suborbital trajectory. It automatically adjusts the thrust of the rocket to match the terminal velocity, based on an empirical formula I got from a line of best fit from the table on the KSP wiki...\u003C/p\u003E\u003Cp\u003EIt throws the rover/skycrane up to about 113 km and then proceeds with a landing sequence (500 km away) which includes:\u003C/p\u003E\u003Cp\u003EDrogue chute deployment,\u003C/p\u003E\u003Cp\u003EHeatshield jettison.\u003C/p\u003E\u003Cp\u003EChute release.\u003C/p\u003E\u003Cp\u003EDeviation.\u003C/p\u003E\u003Cp\u003ENulling horizontal velocity.\u003C/p\u003E\u003Cp\u003ESlowing to -30 m/s, then -12 m/s/\u003C/p\u003E\u003Cp\u003ENulling horizontal velocity with pitch and rolls.\u003C/p\u003E\u003Cp\u003ESlowing velocity to ~ -1 m/s.\u003C/p\u003E\u003Cp\u003EDropping the rover at 2.5 m above the ground.\u003C/p\u003E\u003Cp\u003EDeviating and shooting off the skycrane into the distance.\u003C/p\u003E\u003Cp\u003EYaowzers!\u003C/p\u003E\u003Cp\u003EI love this mod.\u003C/p\u003E\u003Cp\u003EThe script:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003ESet ln to 0.\u003Cbr\u003ESet lt to 0.\u003Cbr\u003Eset flag1 to 0.\u003Cbr\u003Eset t to 1.\u003Cbr\u003EPrint \u0022EXECUTING PROGRAM...\u0022.\u003Cbr\u003EPrint \u0022Rover Landing by check.\u0022.\u003Cbr\u003EPrint \u0022\u0022.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Elock steering to up \u002B R(0,0,180).\u003Cbr\u003Elock throttle to 1.\u003Cbr\u003EPrint missiontime \u002B \u0022 Launching...\u0022.\u003Cbr\u003EStage.\u003Cbr\u003EWait until alt:radar \u0026gt; 200.\u003Cbr\u003ELock steering to up \u002B R(0,0,270).\u003Cbr\u003EPrint missiontime \u002B \u0022 ROLL Prog.\u0022.\u003Cbr\u003E\u003Cbr\u003EUntil altitude \u0026gt; 8000 {\u003Cbr\u003Eif verticalspeed \u0026gt; 102.9 * (1.0001005^altitude) {\u003Cbr\u003Eset t to t - 0.05.}.\u003Cbr\u003Eif verticalspeed \u0026lt; 102.9 * (1.0001005^altitude) {\u003Cbr\u003Eset t to t \u002B 0.05.}.\u003Cbr\u003EIf stage:liquidfuel \u0026lt; 450 AND flag1 = 0 {\u003Cbr\u003Estage.\u003Cbr\u003Eset t to 1.\u003Cbr\u003Eset flag1 to 1.\u003Cbr\u003EPrint missiontime \u002B \u0022 Booster Separation.\u0022.\u003Cbr\u003E}.\u003Cbr\u003EIf t \u0026lt; 0 {set t to 0.}.\u003Cbr\u003EIf t \u0026gt; 1 {set t to 1.}.\u003Cbr\u003ELock throttle to t.\u003Cbr\u003E}.\u003Cbr\u003ELock throttle to 1.\u003Cbr\u003ELock steering to up \u002B R(-45,1,180).\u003Cbr\u003EPrint missiontime \u002B \u0022 Gravity turn.\u0022.\u003Cbr\u003EWait until stage:liquidfuel = 0.\u003Cbr\u003EStage.\u003Cbr\u003ELock throttle to 0.\u003Cbr\u003EPrint missiontime \u002B \u0022 Stage 1 Sep.\u0022.\u003Cbr\u003EWait until verticalspeed \u0026lt; 0 AND altitude \u0026lt; 75000.\u003Cbr\u003ELock steering to retrograde \u002BR(0,0,180).\u003Cbr\u003EWait until altitude \u0026lt;8000.\u003Cbr\u003EStage.\u003Cbr\u003EPrint missiontime\u002B \u0022 Drogue Deployed\u0022.\u003Cbr\u003EUnlock steering.\u003Cbr\u003EWait until alt:radar \u0026lt; 2200 and alt:radar \u0026gt; -1.\u003Cbr\u003EStage.\u003Cbr\u003EPrint missiontime \u002B \u0022 HEATSHEILD Sep.\u0022.\u003Cbr\u003EWait until alt:radar \u0026lt; 1000.\u003Cbr\u003Estage.\u003Cbr\u003EPrint missiontime \u002B \u0022 BACKSHELL Sep.\u0022.\u003Cbr\u003EWait 1.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ELock steering to up \u002B R(10,45,180).\u003Cbr\u003EWait 1.\u003Cbr\u003ELock throttle to 0.3.\u003Cbr\u003EStage.\u003Cbr\u003EPrint missiontime \u002B \u0022 Deviation mnvr.\u0022.\u003Cbr\u003Ewait 2.\u003Cbr\u003E\u003Cbr\u003EUntil surfacespeed \u0026lt; 1 OR alt:radar \u0026lt; 510{\u003Cbr\u003E\u003Cbr\u003ESet long1 to longitude.\u003Cbr\u003ESet long2 to longitude.\u003Cbr\u003ESet lat1 to latitude.\u003Cbr\u003ESet lat2 to latitude.\u003Cbr\u003EIf long2 \u0026lt; long1 {set ln to -15.}.\u003Cbr\u003EIf long2 \u0026gt; long1 {set ln to 15.}.\u003Cbr\u003E\u003Cbr\u003EIf lat2 \u0026lt; lat1 {set lt to -15.}.\u003Cbr\u003EIf lat2 \u0026gt; lat1 {set lt to 15.}.\u003Cbr\u003E\u003Cbr\u003Eif abs(lat2-lat1) \u0026lt; 0.000005 {set lt to 0.}.\u003Cbr\u003Eif abs(long2-long1) \u0026lt; 0.000005 {set ln to 0.}.\u003Cbr\u003ELock steering to up \u002B R(lt,ln,180).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003ESet ln to 0.\u003Cbr\u003ESet lt to 0.\u003Cbr\u003E\u003Cbr\u003ELock throttle to 0.\u003Cbr\u003Elock steering to up \u002B R(0,0,180).\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EWait until alt:radar \u0026lt; 500.\u003Cbr\u003EPrint missiontime \u002B \u0022 Approach.\u0022. \u003Cbr\u003ELock throttle to (1.8 * 9.81 * mass/maxthrust).\u003Cbr\u003EWait until verticalspeed \u0026gt;-30.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EUntil alt:radar \u0026lt; 120 {\u003Cbr\u003EIf verticalspeed \u0026lt;-15 {Lock throttle to (1.7 * 9.81 * mass/maxthrust).}.\u003Cbr\u003EIf verticalspeed \u0026gt;-10 {Lock throttle to (9.81 * mass/maxthrust).}.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003EPrint missiontime \u002B \u0022 Final approach.\u0022. \u003Cbr\u003EUntil alt:radar \u0026lt; 2.5 {\u003Cbr\u003E\u003Cbr\u003ESet long1 to longitude.\u003Cbr\u003ESet long2 to longitude.\u003Cbr\u003ESet lat1 to latitude.\u003Cbr\u003ESet lat2 to latitude.\u003Cbr\u003EIf long2 \u0026lt; long1 {set ln to -2.}.\u003Cbr\u003EIf long2 \u0026gt; long1 {set ln to 2.}.\u003Cbr\u003E\u003Cbr\u003EIf lat2 \u0026lt; lat1 {set lt to -2.}.\u003Cbr\u003EIf lat2 \u0026gt; lat1 {set lt to 2.}.\u003Cbr\u003E\u003Cbr\u003Eif abs(lat2-lat1) \u0026lt; 0.000005 {set lt to 0.}.\u003Cbr\u003Eif abs(long2-long1) \u0026lt; 0.000005 {set ln to 0.}.\u003Cbr\u003E\u003Cbr\u003ELock steering to up \u002B R(lt,ln,180).\u003Cbr\u003E\u003Cbr\u003EIf verticalspeed \u0026lt;-3 {Lock throttle to (1.4 * 9.81 * mass/maxthrust).}.\u003Cbr\u003EIf verticalspeed \u0026gt;-1 {Lock throttle to (1.1* 9.81 * mass/maxthrust).}.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ELock steering to up\u002BR(-5,0,180).\u003Cbr\u003E\u003Cbr\u003ELock throttle to (2 * 9.81 * mass/maxthrust).\u003Cbr\u003EBrakes on.\u003Cbr\u003EStage.\u003Cbr\u003ELock throttle to 0.\u003Cbr\u003EUnlock throttle.\u003Cbr\u003EUnlock steering.\u003Cbr\u003EWait 5.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EToggle AG1.\u003Cbr\u003EPrint missiontime \u002B\u0022 Landed.\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-15T13:12:37Z\u0022 title=\u002209/15/2013 01:12  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 15, 2013\u003C/time\u003E by check\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Glaucus","CreatedById":14664,"CreatedDateTime":"2013-09-15T12:12:16Z","Content":"\n\u003Cp\u003Eany chance you can annotate it, im not sure what exactly you\u0027re doing with the lat/long and how you\u0027re minimising the horizontal velocity.\u003C/p\u003E\u003Cp\u003EGreat video by the way.\u003C/p\u003E\u003Cp\u003EAnd squad need to hire Kevin, this so needs to be baked into ksp, and be able to use g sensors, heat sensors, air density sensors etc.\u003C/p\u003E\n"},{"CreatedByName":"check","CreatedById":71875,"CreatedDateTime":"2013-09-15T12:42:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Glaucus\u0022 data-cite=\u0022Glaucus\u0022\u003E\u003Cdiv\u003Eany chance you can annotate it, im not sure what exactly you\u0027re doing with the lat/long and how you\u0027re minimising the horizontal velocity.\u003Cp\u003EGreat video by the way.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe program is checking to see if longitude and latitude are increasing/decreasing. If they are, it pitches and rolls in the opposite direction to compensate until the change between the two measured longitudes/latitudes is \u0026lt; 0.000005 degrees... which is kind of arbitrary because what velocity that corresponds to entirely depends on how quickly the program is executing..which varies all the time... but it puts it in roughly the 0.25 m/s range if theres a 200 ms delay between each command. (I\u0027ve found that it varies between 100 ms and 250 ms).\u003C/p\u003E\u003Cp\u003EAnyway, some hastily annotated code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003ESet ln to 0.\u003Cbr\u003ESet lt to 0.\u003Cbr\u003Eset flag1 to 0.\u003Cbr\u003Eset t to 1.\u003Cbr\u003EPrint \u0022EXECUTING PROGRAM...\u0022.\u003Cbr\u003EPrint \u0022Rover Landing by check.\u0022.\u003Cbr\u003EPrint \u0022\u0022.\u003Cbr\u003E\u003Cbr\u003E//Launch program\u003Cbr\u003E\u003Cbr\u003Elock steering to up \u002B R(0,0,180).\u003Cbr\u003Elock throttle to 1.\u003Cbr\u003EPrint missiontime \u002B \u0022 Launching...\u0022.\u003Cbr\u003EStage.\u003Cbr\u003E\u003Cbr\u003E// Rolls rocket 90 degrees... for fun. Useful in some situations\u003Cbr\u003E\u003Cbr\u003EWait until alt:radar \u0026gt; 200.\u003Cbr\u003ELock steering to up \u002B R(0,0,270).\u003Cbr\u003EPrint missiontime \u002B \u0022 ROLL Prog.\u0022.\u003Cbr\u003E\u003Cbr\u003E//While in flight, auto throttles based on current velocity vs ideal velocity. If current vertical speed\u003Cbr\u003E// \u0026gt; ideal velocity, throttle down, else throttle up.\u003Cbr\u003E// When boosters are drained, ditched them.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EUntil altitude \u0026gt; 8000 {\u003Cbr\u003Eif verticalspeed \u0026gt; 102.9 * (1.0001005^altitude) {\u003Cbr\u003Eset t to t - 0.05.}.\u003Cbr\u003Eif verticalspeed \u0026lt; 102.9 * (1.0001005^altitude) {\u003Cbr\u003Eset t to t \u002B 0.05.}.\u003Cbr\u003E\u003Cbr\u003E//So when the rocket has \u0026lt; 450 fuel, it means the boosters are dry, so stage. BUT you only want to stage once,\u003Cbr\u003E// so that\u0027s where the flag comes in. after you staged once, change the flag value so you don\u0027t stage again.\u003Cbr\u003E\u003Cbr\u003EIf stage:liquidfuel \u0026lt; 450 AND flag1 = 0 {\u003Cbr\u003Estage.\u003Cbr\u003Eset t to 1.\u003Cbr\u003Eset flag1 to 1.\u003Cbr\u003EPrint missiontime \u002B \u0022 Booster Separation.\u0022.\u003Cbr\u003E}.\u003Cbr\u003EIf t \u0026lt; 0 {set t to 0.}.\u003Cbr\u003EIf t \u0026gt; 1 {set t to 1.}.\u003Cbr\u003ELock throttle to t.\u003Cbr\u003E}.\u003Cbr\u003ELock throttle to 1.\u003Cbr\u003E\u003Cbr\u003E// Gravity turn\u003Cbr\u003E\u003Cbr\u003ELock steering to up \u002B R(-45,1,180).\u003Cbr\u003EPrint missiontime \u002B \u0022 Gravity turn.\u0022.\u003Cbr\u003EWait until stage:liquidfuel = 0.\u003Cbr\u003EStage.\u003Cbr\u003ELock throttle to 0.\u003Cbr\u003E// Ditch the booster when it\u0027s dry.\u003Cbr\u003E\u003Cbr\u003EPrint missiontime \u002B \u0022 Stage 1 Sep.\u0022.\u003Cbr\u003E\u003Cbr\u003E// Coast past apoapsis and reorient retrograde the craft when it\u0027s below 7500 m.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EWait until verticalspeed \u0026lt; 0 AND altitude \u0026lt; 75000.\u003Cbr\u003ELock steering to retrograde \u002BR(0,0,180).\u003Cbr\u003E\u003Cbr\u003E// deploy the chute at 8000m and unlock the steering\u003Cbr\u003E\u003Cbr\u003EWait until altitude \u0026lt;8000.\u003Cbr\u003EStage.\u003Cbr\u003EPrint missiontime\u002B \u0022 Drogue Deployed\u0022.\u003Cbr\u003EUnlock steering.\u003Cbr\u003E\u003Cbr\u003E// jettison the heatsheild at 2200m\u003Cbr\u003EWait until alt:radar \u0026lt; 2200 and alt:radar \u0026gt; -1.\u003Cbr\u003EStage.\u003Cbr\u003EPrint missiontime \u002B \u0022 HEATSHEILD Sep.\u0022.\u003Cbr\u003EWait until alt:radar \u0026lt; 1000.\u003Cbr\u003Estage.\u003Cbr\u003E// detach from chute/backshell at 1000m\u003Cbr\u003E\u003Cbr\u003EPrint missiontime \u002B \u0022 BACKSHELL Sep.\u0022.\u003Cbr\u003EWait 1.\u003Cbr\u003E// deviate by 10 degrees (yaw / roll?) \u002B 45 degrees pitch and fire engines. Numbers kind of arbitrary. mostly wanted\u003Cbr\u003E// to test the horizontal velocity killing technique.\u003Cbr\u003E// This is to move away from the parachute/backshell and not have it land on us later.\u003Cbr\u003E\u003Cbr\u003ELock steering to up \u002B R(10,45,180).\u003Cbr\u003EWait 1.\u003Cbr\u003ELock throttle to 0.3.\u003Cbr\u003EStage.\u003Cbr\u003EPrint missiontime \u002B \u0022 Deviation mnvr.\u0022.\u003Cbr\u003Ewait 2.\u003Cbr\u003E\u003Cbr\u003E// Measures horizontal \u0027velocity\u0027 direction (not magnitude) and pitches/rolls the craft to compensate.\u003Cbr\u003E// If longitude/latitude is increasing/decreasing, roll to fire engine in the opposite direction.\u003Cbr\u003E// orient UP when surface velocity is \u0026lt; 1m/s. \u003Cbr\u003E\u003Cbr\u003EUntil surfacespeed \u0026lt; 1 OR alt:radar \u0026lt; 510{\u003Cbr\u003E\u003Cbr\u003ESet long1 to longitude.\u003Cbr\u003ESet long2 to longitude.\u003Cbr\u003ESet lat1 to latitude.\u003Cbr\u003ESet lat2 to latitude.\u003Cbr\u003EIf long2 \u0026lt; long1 {set ln to -15.}.\u003Cbr\u003EIf long2 \u0026gt; long1 {set ln to 15.}.\u003Cbr\u003E\u003Cbr\u003EIf lat2 \u0026lt; lat1 {set lt to -15.}.\u003Cbr\u003EIf lat2 \u0026gt; lat1 {set lt to 15.}.\u003Cbr\u003E\u003Cbr\u003Eif abs(lat2-lat1) \u0026lt; 0.000005 {set lt to 0.}.\u003Cbr\u003Eif abs(long2-long1) \u0026lt; 0.000005 {set ln to 0.}.\u003Cbr\u003ELock steering to up \u002B R(lt,ln,180).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003ESet ln to 0.\u003Cbr\u003ESet lt to 0.\u003Cbr\u003E\u003Cbr\u003ELock throttle to 0.\u003Cbr\u003Elock steering to up \u002B R(0,0,180).\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// After 500 m, fire the throttle at 1.8 Gs.\u003Cbr\u003EWait until alt:radar \u0026lt; 500.\u003Cbr\u003EPrint missiontime \u002B \u0022 Approach.\u0022. \u003Cbr\u003ELock throttle to (1.8 * 9.81 * mass/maxthrust).\u003Cbr\u003E\u003Cbr\u003E// wait until veritcal speed \u0026gt;-30.... self explainitory.\u003Cbr\u003EWait until verticalspeed \u0026gt;-30.\u003Cbr\u003E\u003Cbr\u003E// Adjust throttle to either 1.7Gs or 1.0 Gs depending on if vertical speed is \u0026lt;-15 m/s or \u0026gt;-10 m/s until 120 m\u003Cbr\u003E\u003Cbr\u003EUntil alt:radar \u0026lt; 120 {\u003Cbr\u003EIf verticalspeed \u0026lt;-15 {Lock throttle to (1.7 * 9.81 * mass/maxthrust).}.\u003Cbr\u003EIf verticalspeed \u0026gt;-10 {Lock throttle to (9.81 * mass/maxthrust).}.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// Adjust throttle to either 1.4Gs or 1.1 Gs depending on if vertical speed is \u0026lt;-3 m/s or \u0026gt;-1 m/s until 2.5 m\u003Cbr\u003E// Adjust pitch/roll based on horizontal velocity direction, like in deviation mod but with finer adjustments\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EPrint missiontime \u002B \u0022 Final approach.\u0022. \u003Cbr\u003EUntil alt:radar \u0026lt; 2.5 {\u003Cbr\u003E\u003Cbr\u003ESet long1 to longitude.\u003Cbr\u003ESet long2 to longitude.\u003Cbr\u003ESet lat1 to latitude.\u003Cbr\u003ESet lat2 to latitude.\u003Cbr\u003EIf long2 \u0026lt; long1 {set ln to -2.}.\u003Cbr\u003EIf long2 \u0026gt; long1 {set ln to 2.}.\u003Cbr\u003E\u003Cbr\u003EIf lat2 \u0026lt; lat1 {set lt to -2.}.\u003Cbr\u003EIf lat2 \u0026gt; lat1 {set lt to 2.}.\u003Cbr\u003E\u003Cbr\u003Eif abs(lat2-lat1) \u0026lt; 0.000005 {set lt to 0.}.\u003Cbr\u003Eif abs(long2-long1) \u0026lt; 0.000005 {set ln to 0.}.\u003Cbr\u003E\u003Cbr\u003ELock steering to up \u002B R(lt,ln,180).\u003Cbr\u003E\u003Cbr\u003EIf verticalspeed \u0026lt;-3 {Lock throttle to (1.4 * 9.81 * mass/maxthrust).}.\u003Cbr\u003EIf verticalspeed \u0026gt;-1 {Lock throttle to (1.1* 9.81 * mass/maxthrust).}.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// At 2.5 m, pitch over 5 degrees, lock throttle to 2Gs, put the brakes on the rover wheels, jettison the skycrane.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ELock steering to up\u002BR(-5,0,180).\u003Cbr\u003E\u003Cbr\u003ELock throttle to (2 * 9.81 * mass/maxthrust).\u003Cbr\u003EBrakes on.\u003Cbr\u003EStage.\u003Cbr\u003ELock throttle to 0.\u003Cbr\u003EUnlock throttle.\u003Cbr\u003EUnlock steering.\u003Cbr\u003EWait 5.\u003Cbr\u003E\u003Cbr\u003E// After 5 seconds, open the com dish and extend the antennae.\u003Cbr\u003E\u003Cbr\u003EToggle AG1.\u003Cbr\u003EPrint missiontime \u002B\u0022 Landed.\u0022.\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAvailable here too: \u003Ca href=\u0022https://docs.google.com/file/d/0BwrMAqirhs-BZTlLWlFMTGF5UXM\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://docs.google.com/file/d/0BwrMAqirhs-BZTlLWlFMTGF5UXM\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Glaucus","CreatedById":14664,"CreatedDateTime":"2013-09-15T12:46:02Z","Content":"\n\u003Cp\u003EThank you, thats perfect.\u003C/p\u003E\n"},{"CreatedByName":"Senshi","CreatedById":57692,"CreatedDateTime":"2013-09-15T16:14:32Z","Content":"\n\u003Cp\u003EThanks for the skycrane example, check, some interesting applications in there. Very good motivation and inspiration for potential other usages. Can\u0027t wait for next weekend when I have time to play with kOS \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E .\u003C/p\u003E\n"},{"CreatedByName":"brienne","CreatedById":59216,"CreatedDateTime":"2013-09-15T16:37:33Z","Content":"\n\u003Cp\u003EHello,\u003C/p\u003E\u003Cp\u003EI check all mods i d like to use. Of course Kos is one of them. Thanks for this amazing work.\u003C/p\u003E\u003Cp\u003EI d like to get also RemoteTech Relay Network. Some say it s not compatible with Kos.\u003C/p\u003E\u003Cp\u003EBy the way, could it be possible to use Kos without RT transfer delay?\u003C/p\u003E\u003Cp\u003EA Kos probe doesn\u0027t use RT, so no reason to get a delay. No datas sent from Kerbal.\u003C/p\u003E\u003Cp\u003EDon\u0027t know if this fix depends on you. But now you know^^\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-09-15T17:07:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022check\u0022 data-cite=\u0022check\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIf starts by launching a rocket on a suborbital trajectory. It automatically adjusts the thrust of the rocket to match the terminal velocity, based on an empirical formula I got from a line of best fit from the table on the KSP wiki...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPretty awesome, I was thinking of doing exactely that, but basing it on a measured density of the atmosphere by barometer. Of course, kOS can not communicate with those kinds of instruments yet, but I think that would ensure it working optimally regardless of which planet you are on and thus which atmosphere you are in. \u003C/p\u003E\u003Cp\u003EI will refrain from looking at your code and build my own to compare them later \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-15T18:41:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EPretty awesome, I was thinking of doing exactely that, but basing it on a measured density of the atmosphere by barometer. Of course, kOS can not communicate with those kinds of instruments yet, but I think that would ensure it working optimally regardless of which planet you are on and thus which atmosphere you are in. \u003Cp\u003EI will refrain from looking at your code and build my own to compare them later \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThrottle limits are a great idea and it can really help keep you from wasting fuel. I have setup a TWR hold in my script. It works better than I could have imagined. I say go for it. It will only help. It doesn\u0027t have to be very elaborate to get the job done.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-09-15T19:38:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Payload\u0022 data-cite=\u0022Payload\u0022\u003E\u003Cdiv\u003EThrottle limits are a great idea and it can really help keep you from wasting fuel. I have setup a TWR hold in my script. It works better than I could have imagined. I say go for it. It will only help. It doesn\u0027t have to be very elaborate to get the job done.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve always paid quite some attention to ascent profiles and power/throttle control. I have been using empirical evidence pretty much from the start to get efficient launches and have been dreaming about better ways of doing this. kOS seems to provide the instrument for this, as MechJeb felt a bit too cheaty for my liking. What can be done is already amazing, but as soon as we can use input from instruments and modparts and can control modparts through kOS the sky will not even be the limit anymore.\u003C/p\u003E\u003Cp\u003EAlso, kOS provides a way of getting pretty much identical launches, increasing the accuracy and value of empirical testing once more. \u003C/p\u003E\u003Cp\u003EIf you lovely gentlemen would all please excuse me, I have a gaming rig to fix.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-15T20:14:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022check\u0022 data-cite=\u0022check\u0022\u003E\u003Cdiv\u003ESo I was able to make a Curiosity\u002BSkycrane lik EDL system (minus the tether) , fully automated using kOS. Check out the video: \u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh man, you beat me to it. It looks great.\u003C/p\u003E\u003Cp\u003EI\u0027m making a very similar skycrane deployment program and was trying to test it with different craft on different planets before posting it - it\u0027s supposed to work with any craft but the sticking point is that it only works on craft I designed. When I tried using it by attaching a KOS unit to the stock skycrane rover example that KSP comes with (and add a bit more fuel rings because of the KOS\u0027s weight), the crane\u0027s idea of which way is the \u0022top\u0022 of the craft suddenly flips upside down the moment the rover is dropped. I have no idea why (i wonder if the stock design is built with an upside down command module in the skycrane? When the rover decouples the upside down command module takes over?)\u003C/p\u003E\u003Cp\u003EI wish I had the full paid version of FRAPS because it really needed to be recorded. It\u0027s rather funny. The crane descends beautifully, nice and gentle, comes down and hovers just right, deposits the rover gently on the ground.... and then flips upside down and angrily slams itself as hard as it can into the rover at full throttle. (It\u0027s executing the safe escape sequence, but with an inverted idea of which end of the craft is the top.)\u003C/p\u003E\u003Cp\u003EAt any rate as part of this I have some code to get around the fact that there\u0027s no surface-based prograde vector. I found a solution to that problem that works that I\u0027ll probably post on the wiki\u0027s examples page.\u003C/p\u003E\n"},{"CreatedByName":"check","CreatedById":71875,"CreatedDateTime":"2013-09-15T20:47:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAh man, you beat me to it. It looks great.\u003Cp\u003EI\u0027m making a very similar skycrane deployment program and was trying to test it with different craft on different planets before posting it - it\u0027s supposed to work with any craft but the sticking point is that it only works on craft I designed. When I tried using it by attaching a KOS unit to the stock skycrane rover example that KSP comes with (and add a bit more fuel rings because of the KOS\u0027s weight), the crane\u0027s idea of which way is the \u0022top\u0022 of the craft suddenly flips upside down the moment the rover is dropped. I have no idea why (i wonder if the stock design is built with an upside down command module in the skycrane? When the rover decouples the upside down command module takes over?)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s bizarre about the skycrane flipping over. Is your kOS control pod on the skycrane or the rover?\u003C/p\u003E\u003Cp\u003EI think my code is robust enough to work on different designs. It \u0027mostly\u0027 adjust throttle settings to achieve specific TWR rather than an absolute value, so the same code should work on heavier and lighter landers. I haven\u0027t tried it out yet.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAt any rate as part of this I have some code to get around the fact that there\u0027s no surface-based prograde vector. I found a solution to that problem that works that I\u0027ll probably post on the wiki\u0027s examples page.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve been thinking of a workaround for this too, though not too seriously because I\u0027m sure a \u0027surfaceprograde\u0027 code is probably coming very soon. I suppose you could determine your surface prograde direction by subtracting your \u0027orbital velocity\u0027 from the rotation speed of kerbin, based on your latitude and extended up to your altitude... and then taking into account the change in longitude and latitude over time... (which won\u0027t be precise... it\u0027ll be jittery based on how long it takes your computer to run each command in kOS). Anyway, I\u0027d be interested to see your solution.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-15T22:57:08Z","Content":"\n\u003Cp\u003EI don\u0027t know how much utility there will be for this, because maybe there will be a proper surface:prograde vector in the language some day.\u003C/p\u003E\u003Cp\u003EBut until there is I made a program that (sort of) can calculate it. It\u0027s dead-on accurate when used over the mun, but it becomes way off when used in an atmosphere because the air drag is throwing off the calculations, I think. (It\u0027s measuring it based on how the craft is actually moving, not on how it WOULD have been moving had there been no air.)\u003C/p\u003E\u003Cp\u003EIt\u0027s a longwinded thing, so instead of posting a wall of text here, I put it over on the wiki as a tutorial and example: If you just want the code and want to skip the explanations, pan down to the parts labeled \u0022File 1\u0022, \u0022File 2\u0022, and \u0022File 3\u0022.\u003C/p\u003E\u003Cp\u003ELink --\u0026gt; \u003Ca href=\u0022http://kos.wikia.com/wiki/Tutorial_-_Finding_surface-relative_data_(prograde/retrograde_directions).\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/Tutorial_-_Finding_surface-relative_data_(prograde/retrograde_directions).\u003C/a\u003E.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-15T23:00:20Z\u0022 title=\u002209/15/2013 11:00  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 15, 2013\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-15T23:11:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022check\u0022 data-cite=\u0022check\u0022\u003E\u003Cdiv\u003EThat\u0027s bizarre about the skycrane flipping over. Is your kOS control pod on the skycrane or the rover?\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOn the skycrane.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI think my code is robust enough to work on different designs. It \u0027mostly\u0027 adjust throttle settings to achieve specific TWR rather than an absolute value, so the same code should work on heavier and lighter landers. I haven\u0027t tried it out yet.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah it sounds similar to what I did. I run some quadratic math to guess out what a preferred speed would be at a particular altitude in the descent. I don\u0027t just want to linearly slow down as that eats a lot of fuel. I want to do most of the retro burn at the bottom. If you descend too slow then you\u0027re wasting fuel but you shouldn\u0027t descend faster than the TWR is capable of correcting for at the bottom. So I sort of fudge it by comparing maxthrust to mass to decide how to \u0022shape\u0022 the descent speed envelope - low TWR means I want to slow down from higher up even though it wastes fuel, and high TWR means I want to let it drop more quickly and do all the braking at the end.\u003C/p\u003E\u003Cp\u003EBut at any rate after working out the \u0027ideal\u0027 preferred speed at a given altitude, I check the actual speed to see if it\u0027s above or below that, and calculate at the current mass how much thrust would provide me with \u0022nuetral boyancy\u0022 against gravity, and if I\u0027m going faster than I wanted then I thrust more than that neutral amount, or slower than I wanted means I thrust less than that. It\u0027s a bit fudgy but it seems to work. Getting it to be gentle enough to perform the hover stage right, while at the same time being harsh enough to thrust high when it needs to on the descent was a bit of guesswork. Basically the amount by which it deviates from the neutral thrust level depends on how far off the actual speed is from the desired speed. The further off it is, the more it deviates away from neutral thrust, with the degenerate cases being max thrust if it really has a lot of slowing down to do, or no thrust if it\u0027s not falling anywhere near fast enough.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E Anyway, I\u0027d be interested to see your solution.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI just posted it in the above post. Give it a look and let me know what you think.\u003C/p\u003E\n"}]}