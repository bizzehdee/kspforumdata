{"TopicId":168763,"ForumId":34,"TopicTitle":"[1.7.X] KS3P","CreatedByName":"The White Guardian","CreatedById":148627,"CreatedDateTime":"2017-12-21T19:24:33Z","PageNum":31,"Articles":[{"CreatedByName":"The White Guardian","CreatedById":148627,"CreatedDateTime":"2019-08-24T21:06:15Z","Content":"\n\u003Cp\u003E\nHey everyone. First and foremost, I apologize for my absence from this thread. I had some personal matters that needed sorting out first, so even after returning from my holiday, I couldn\u0027t immediately get started on KS3P. It\u0027s concerning to hear that so many people find KS3P completely unresponsive. To everyone experiencing such a problem: I\u0027m going to need logfiles to figure out what exactly is going wrong here. Check KS3P\u0027s mod folder, it should generate its own log file. Please upload that logfile in a comment (preferably in a spoiler-wrapper to keep the thread concise). If such a file is absent for some reason, I\u0027m going to need the file \u0027KSP.txt\u0027, in your KSP installation directory (same folder as the executable).\n\u003C/p\u003E\n"},{"CreatedByName":"III-METHOD-III","CreatedById":178345,"CreatedDateTime":"2019-08-24T21:17:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223658828\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221566680775\u0022 data-ipsquote-userid=\u0022148627\u0022 data-ipsquote-username=\u0022The White Guardian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, The White Guardian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHey everyone. First and foremost, I apologize for my absence from this thread. I had some personal matters that needed sorting out first, so even after returning from my holiday, I couldn\u0027t immediately get started on KS3P. It\u0027s concerning to hear that so many people find KS3P completely unresponsive. To everyone experiencing such a problem: I\u0027m going to need logfiles to figure out what exactly is going wrong here. Check KS3P\u0027s mod folder, it should generate its own log file. Please upload that logfile in a comment (preferably in a spoiler-wrapper to keep the thread concise). If such a file is absent for some reason, I\u0027m going to need the file \u0027KSP.txt\u0027, in your KSP installation directory (same folder as the executable).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRL always comes firs dude. You dont need to apologise.\n\u003C/p\u003E\n\u003Cp\u003E\nIll get you a logfile shortly, and an explanation of the issues Im having.\u00A0 I suspect the logfile wont help for one of them though.\u00A0 Ill grab KSP.txt too for good measure.\n\u003C/p\u003E\n\u003Cp\u003E\nI really hope that you can help get your mod back up and running for me and some others.\u00A0 I think i speak for us all when i say that it adds so much to the game.\u00A0 It is night and day without it. I miss mah bloom!\n\u003C/p\u003E\n\u003Cp\u003E\nMatt\n\u003C/p\u003E\n"},{"CreatedByName":"III-METHOD-III","CreatedById":178345,"CreatedDateTime":"2019-08-24T21:54:32Z","Content":"\n\u003Cp\u003E\nHi \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022148627\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0022 rel=\u0022\u0022\u003E@The White Guardian\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nOk so my KS3P issues are:\n\u003C/p\u003E\n\u003Cp\u003E\n1) I\u00A0am unable to open KS3P\u0027s GUI. Alt \u002B 3 does nothing for me.\u00A0 That is using LeftAlt \u002B 3.\u00A0 I have also tried Left Shift \u002B 3, RightAlt \u002B 3 and Right Shift \u002B 3. I have also gone into Configuration.cfg and changed the Primary mapping to LeftShift, RightShift and RightAlt and this makes no difference.\u00A0 I re-installed KS3P after all this fiddling to go back to your default.\n\u003C/p\u003E\n\u003Cp\u003E\n2) According to your posts, whilst the DefaultConfig.ksp isnt finished, it seems that you set it up to at least work in the MainMenu scene.\u00A0 It doesnt for me (assuming the MainMenu is the screen with Kerbin in the background, the 3 kerbals and the menu like Start New Game etc).\u00A0 Im not sure how to tell if its working but Im seeing no signs of bloom etc.\n\u003C/p\u003E\n\u003Cp\u003E\nHere are my logs.\u00A0 I deleted both the KSP.log and the KS3P log.txt ahead of going into game for this so they would be clean logs showing only this game start.\u00A0 i loaded the game, went straight into Tracking station and then into an orbiting station covered in lights to see if anything was working. No dice. Unable to open the GUI.\n\u003C/p\u003E\n\u003Cp\u003E\nKS3P\u0027s Log.txt:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 ---- \u00A0 \u00A0KS3P loading report \u00A0 \u00A0----\u003Cbr\u003E\n[Log]: Running MonoBehaviour.Awake()!\u003Cbr\u003E\n[Log]: Loading asset bundle at path D:/Steam SSD/SteamApps/common/Kerbal Space Program/GameData\\KS3P\\Shaders\\postprocessingshaders-windows.unity3d\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Ambient Occlusion].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Blit].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Bloom].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Builtin Debug Views].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Depth Of Field].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Eye Adaptation].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Fog].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/FXAA].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Grain Generator].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Lut Generator].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Motion Blur].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Screen Space Reflection].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Temporal Anti-aliasing].\u003Cbr\u003E\n[Wrn]: Adding shader [Hidden/Post FX/Uber Shader].\u003Cbr\u003E\n[Log]: Adding compute shader [EyeHistogram].\u003Cbr\u003E\n[Log]: Scene input: MainMenu, SpaceCenter, \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, \u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E, Flight, EVA, IVA\u003Cbr\u003E\n[Err][KSP_PostProcessing.BloomModel]: Failed to load dirt texture path [KS3P/Textures/Fallback.png], loading blank fallback texture.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nI tried to post the KSP.log you also asked for but I just get \u0027something went wrong\u0027. Perhaps because its enormous?\n\u003C/p\u003E\n\u003Cp\u003E\nhere are some excerpts from it which may be pertinent (i just searched for KS3P in the log and pasted stuff which was before and after it)\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n[LOG 22:22:08.743] [AddonLoader]: Instantiating addon \u0027KS3P\u0027 from assembly \u0027KS3P\u0027\u003Cbr\u003E\n[LOG 22:22:08.745] [KS3P]: Running MonoBehaviour.Awake()!\u003Cbr\u003E\n[LOG 22:22:08.746] [KS3P]: Loading asset bundle at path D:/Steam SSD/SteamApps/common/Kerbal Space Program/GameData\\KS3P\\Shaders\\postprocessingshaders-windows.unity3d\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/Ambient Occlusion].\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/Blit].\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/Bloom].\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/Builtin Debug Views].\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/Depth Of Field].\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/Eye Adaptation].\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/Fog].\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/FXAA].\u003Cbr\u003E\n[WRN 22:22:08.927] [KS3P]: Adding shader [Hidden/Post FX/Grain Generator].\u003Cbr\u003E\n[WRN 22:22:08.928] [KS3P]: Adding shader [Hidden/Post FX/Lut Generator].\u003Cbr\u003E\n[WRN 22:22:08.928] [KS3P]: Adding shader [Hidden/Post FX/Motion Blur].\u003Cbr\u003E\n[WRN 22:22:08.928] [KS3P]: Adding shader [Hidden/Post FX/Screen Space Reflection].\u003Cbr\u003E\n[WRN 22:22:08.928] [KS3P]: Adding shader [Hidden/Post FX/Temporal Anti-aliasing].\u003Cbr\u003E\n[WRN 22:22:08.928] [KS3P]: Adding shader [Hidden/Post FX/Uber Shader].\u003Cbr\u003E\n[LOG 22:22:08.928] [KS3P]: Adding compute shader [EyeHistogram].\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:22:10.226] [KS3P]: Scene input: MainMenu, SpaceCenter, \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, \u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E, Flight, EVA, IVA\u003Cbr\u003E\n[ERR 22:22:10.231] [KS3P]: [KSP_PostProcessing.BloomModel]: Failed to load dirt texture path [KS3P/Textures/Fallback.png], loading blank fallback texture.\n\u003C/p\u003E\n\u003Cp\u003E\n[EXC 22:22:10.234] IndexOutOfRangeException: Array index is out of range.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.KS3PUtil.GetBounds (UnityEngine.AnimationCurve curve)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Parsers.Parser\u00601[T].ParseCurve (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Parsers.Parser\u00601[T].TryParseCurve (.ConfigNode node, KSP_PostProcessing.ColorGradingCurve\u0026amp; curve)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Parsers.ColorGradingParser.ParseCurves (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Parsers.ColorGradingParser.Parse (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Profile..ctor (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Profile.op_Implicit (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.KS3P.Start ()\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:22:31.022] Load(Texture): KS3P/Textures/Fallback\u003Cbr\u003E\n[WRN 22:22:31.024] Texture resolution is not valid for compression: \u0027D:\\Steam SSD\\SteamApps\\common\\Kerbal Space Program\\GameData\\KS3P\\Textures\\Fallback.png\u0027 - consider changing the image\u0027s width and height to enable compression\u003Cbr\u003E\n[LOG 22:22:31.024] Load(Texture): KS3P/Textures/LensDirt00\u003Cbr\u003E\n[LOG 22:22:31.475] Load(Texture): KS3P/Textures/LensDirt01\u003Cbr\u003E\n[LOG 22:22:32.048] Load(Texture): KS3P/Textures/LensDirt02\u003Cbr\u003E\n[LOG 22:22:32.558] Load(Texture): KS3P/Textures/LensDirt03\u003Cbr\u003E\n[LOG 22:22:33.021] Load(Texture): KS3P/Textures/NeutralLUT_16\u003Cbr\u003E\n[LOG 22:22:33.026] Load(Texture): KS3P/Textures/NeutralLUT_32\u003Cbr\u003E\n[LOG 22:22:33.033] Load(Texture): KS3P/Textures/SpectralLut_BlueRed\u003Cbr\u003E\n[LOG 22:22:33.037] Load(Texture): KS3P/Textures/SpectralLut_GreenPurple\u003Cbr\u003E\n[LOG 22:22:33.041] Load(Texture): KS3P/Textures/SpectralLut_PurpleGreen\u003Cbr\u003E\n[LOG 22:22:33.044] Load(Texture): KS3P/Textures/SpectralLut_RedBlue\u003Cbr\u003E\n[LOG 22:22:33.047] Load(Texture): KS3P/Textures/Galileo_Textures/LensDirt00\u003Cbr\u003E\n[LOG 22:22:33.065] Load(Texture): KS3P/Textures/Galileo_Textures/LensDirt01\u003Cbr\u003E\n[LOG 22:22:33.081] Load(Texture): KS3P/Textures/Galileo_Textures/LensDirt02\u003Cbr\u003E\n[LOG 22:22:33.103] Load(Texture): KS3P/Textures/Galileo_Textures/LensDirt03\u003Cbr\u003E\n[LOG 22:22:33.125] Load(Texture): KS3P/Textures/Galileo_Textures/LensDirt04\u003Cbr\u003E\n[LOG 22:22:33.145] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_0\u003Cbr\u003E\n[LOG 22:22:33.147] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_1\u003Cbr\u003E\n[LOG 22:22:33.149] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_10\u003Cbr\u003E\n[LOG 22:22:33.150] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_11\u003Cbr\u003E\n[LOG 22:22:33.152] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_12\u003Cbr\u003E\n[LOG 22:22:33.153] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_13\u003Cbr\u003E\n[LOG 22:22:33.154] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_14\u003Cbr\u003E\n[LOG 22:22:33.156] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_15\u003Cbr\u003E\n[LOG 22:22:33.157] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_16\u003Cbr\u003E\n[LOG 22:22:33.158] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_17\u003Cbr\u003E\n[LOG 22:22:33.159] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_18\u003Cbr\u003E\n[LOG 22:22:33.161] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_19\u003Cbr\u003E\n[LOG 22:22:33.162] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_2\u003Cbr\u003E\n[LOG 22:22:33.163] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_20\u003Cbr\u003E\n[LOG 22:22:33.165] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_21\u003Cbr\u003E\n[LOG 22:22:33.166] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_22\u003Cbr\u003E\n[LOG 22:22:33.167] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_23\u003Cbr\u003E\n[LOG 22:22:33.169] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_24\u003Cbr\u003E\n[LOG 22:22:33.171] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_25\u003Cbr\u003E\n[LOG 22:22:33.173] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_26\u003Cbr\u003E\n[LOG 22:22:33.174] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_27\u003Cbr\u003E\n[LOG 22:22:33.176] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_28\u003Cbr\u003E\n[LOG 22:22:33.177] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_29\u003Cbr\u003E\n[LOG 22:22:33.179] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_3\u003Cbr\u003E\n[LOG 22:22:33.181] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_30\u003Cbr\u003E\n[LOG 22:22:33.182] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_31\u003Cbr\u003E\n[LOG 22:22:33.184] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_32\u003Cbr\u003E\n[LOG 22:22:33.186] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_33\u003Cbr\u003E\n[LOG 22:22:33.187] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_34\u003Cbr\u003E\n[LOG 22:22:33.189] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_35\u003Cbr\u003E\n[LOG 22:22:33.190] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_36\u003Cbr\u003E\n[LOG 22:22:33.192] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_37\u003Cbr\u003E\n[LOG 22:22:33.194] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_38\u003Cbr\u003E\n[LOG 22:22:33.195] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_39\u003Cbr\u003E\n[LOG 22:22:33.196] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_4\u003Cbr\u003E\n[LOG 22:22:33.198] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_40\u003Cbr\u003E\n[LOG 22:22:33.199] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_41\u003Cbr\u003E\n[LOG 22:22:33.200] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_42\u003Cbr\u003E\n[LOG 22:22:33.202] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_43\u003Cbr\u003E\n[LOG 22:22:33.203] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_44\u003Cbr\u003E\n[LOG 22:22:33.205] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_45\u003Cbr\u003E\n[LOG 22:22:33.207] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_46\u003Cbr\u003E\n[LOG 22:22:33.208] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_47\u003Cbr\u003E\n[LOG 22:22:33.210] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_48\u003Cbr\u003E\n[LOG 22:22:33.211] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_49\u003Cbr\u003E\n[LOG 22:22:33.213] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_5\u003Cbr\u003E\n[LOG 22:22:33.214] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_50\u003Cbr\u003E\n[LOG 22:22:33.216] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_51\u003Cbr\u003E\n[LOG 22:22:33.217] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_52\u003Cbr\u003E\n[LOG 22:22:33.219] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_53\u003Cbr\u003E\n[LOG 22:22:33.221] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_54\u003Cbr\u003E\n[LOG 22:22:33.222] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_55\u003Cbr\u003E\n[LOG 22:22:33.224] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_56\u003Cbr\u003E\n[LOG 22:22:33.225] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_57\u003Cbr\u003E\n[LOG 22:22:33.227] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_58\u003Cbr\u003E\n[LOG 22:22:33.229] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_59\u003Cbr\u003E\n[LOG 22:22:33.230] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_6\u003Cbr\u003E\n[LOG 22:22:33.232] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_60\u003Cbr\u003E\n[LOG 22:22:33.233] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_61\u003Cbr\u003E\n[LOG 22:22:33.234] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_62\u003Cbr\u003E\n[LOG 22:22:33.236] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_63\u003Cbr\u003E\n[LOG 22:22:33.237] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_7\u003Cbr\u003E\n[LOG 22:22:33.239] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_8\u003Cbr\u003E\n[LOG 22:22:33.241] Load(Texture): KS3P/Textures/NoiseTextures/LDR_LLL1_9\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:22:44.856] Config(KS3P) AstronomersVisualPack/Astronomers-KS3P/KS3P\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:22:44.857] Config(KS3P) KS3P/DefaultConfig/KS3P\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:22:08.568] Log started at 2019-08-24 22:22:08.568\u003Cbr\u003E\n[EXC 22:22:10.737] Add to mod list threw an exception in loading KEX-EVAFootprints, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: System.Reflection.ReflectionTypeLoadException: The classes in the module cannot be loaded.\u003Cbr\u003E\n\u00A0 at (wrapper managed-to-native) System.Reflection.Assembly:GetTypes (bool)\u003Cbr\u003E\n\u00A0 at System.Reflection.Assembly.GetTypes () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\u00A0\u003Cbr\u003E\n\u00A0 at ModuleManager.ModListGenerator.GetAdditionalModsFromStaticMethods (IBasicLogger logger) [0x00000] in \u0026lt;filename unknown\u0026gt;:0\u00A0\u003Cbr\u003E\n[LOG 22:22:10.782] Checking Cache\u003Cbr\u003E\n[LOG 22:22:11.112] SHA generated in 0.328s\u003Cbr\u003E\n[LOG 22:22:11.112] \u00A0 \u00A0 \u00A0 SHA = CB-20-8B-6B-75-30-5A-D4-AC-B0-ED-F8-44-80-FE-19-B4-26-85-42-DD-09-91-FB-99-9A-37-EF-FD-84-71-B7\u003Cbr\u003E\n[LOG 22:22:11.202] Changes :\u003Cbr\u003E\nAdded \u00A0 : KS3P/Configuration.cfg\u003Cbr\u003E\nAdded \u00A0 : KS3P/DefaultConfig.cfg\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:22:11.202] Cache SHA = 30-38-35-F7-3F-8B-64-B8-D5-C9-19-33-B8-17-B1-E6-A5-76-16-95-83-C2-80-30-9B-2E-1B-FA-66-D5-89-73\u003Cbr\u003E\n[LOG 22:22:11.202] useCache = False\u003Cbr\u003E\n[LOG 22:22:11.202] Pre patch init\u003Cbr\u003E\n[LOG 22:22:11.398] compiling list of loaded mods...\u003Cbr\u003E\nMod DLLs found:\u003Cbr\u003E\n\u00A0 Name \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0Assembly Version \u00A0 \u00A0 \u00A0 \u00A0 Assembly File Version \u00A0 \u00A0KSPAssembly Version \u00A0 \u00A0 \u00A0SHA256\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 Assembly-CSharp \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 0.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A00.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 d22b72a41bfc665921fb69c76d3567aa2a26a1aca8daa8cffb9dd27b45839175\u003Cbr\u003E\n\u00A0 ModuleManager \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 4.0.3.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A04.0.3.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A02.5 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A048e3ae13b9b06e32ecc28a2993b5c2d0fce9869849f4b278ee49c6744577aea5\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 f5823c3c6734b3d965a9c1c87cc9022d1d71c5cae37ed7cb94da68930a692939\u003Cbr\u003E\n\u00A0 ClickThroughBlocker \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 0.1.7.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.7 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A08251997c98ed2004369d663095081108aecc077f2f245ba5f72818dae0e2da5a\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 f5823c3c6734b3d965a9c1c87cc9022d1d71c5cae37ed7cb94da68930a692939\u003Cbr\u003E\n\u00A0 ToolbarControl \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A00.1.8.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0269efac965cf2d40f414c6d82ce77ec0a4619a8249eed60c18348e834d5c4691\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.0.3.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.3.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 9ee10c46cb6f86417f005046ae72fedda156e1d47c92febcb84c68f50e03f08a\u003Cbr\u003E\n\u00A0 Sigma88LoadingScreens \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 0.4.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A00.4.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A001e03006439a92106dfc68a12f6be5a31a2fa3407bd47b979eb5e601ab7d8a28\u003Cbr\u003E\n\u00A0 B9PartSwitch \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A02.7.1.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A02.7.1.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A02.7 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A086818338722a540f57edf10715f4ddf0b8869f439fb720ec87725d73ebc3e4b1\u003Cbr\u003E\n\u00A0 BetterBurnTime \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 3722c997499e7ff3e1531da73d14128e000afb79df0e3c90fffbb28f6404eb59\u003Cbr\u003E\n\u00A0 Chatterer \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 0.9.96.2332 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A00.9.96.2332 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 9301dd88e4ea60e759acb4a1e8000f847b3bfb7629203b261358fc29a2c49412\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.0.3.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.3.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 9ee10c46cb6f86417f005046ae72fedda156e1d47c92febcb84c68f50e03f08a\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 f5823c3c6734b3d965a9c1c87cc9022d1d71c5cae37ed7cb94da68930a692939\u003Cbr\u003E\n\u00A0 AGExt \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 2.3.5.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 bb86480252295d889e30d5a8de297c311aec48f01763ad77cd39086b73562717\u003Cbr\u003E\n\u00A0 DistantObject \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.9.1.14505 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.9.1.14505 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.5 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0da826b9dab488978667d874a84720d4e3bf06eba562e2644b5ea345630de25df\u003Cbr\u003E\n\u00A0 EasyVesselSwitch \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.11.7052.36539 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.11.7052.36539 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.11 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 a757dfd4e4128817d9cfccabf59effe16a8ffe9676d555fde278849150614e32\u003Cbr\u003E\n\u00A0 KSPDev_Utils.1.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.7031.33522 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.2.7031.33522 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A08ab01b93fdbcca0c49acc5ec8fa6b1c624c3693f4f7c00fa423e30257ed0fd7d\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.3.0.3 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.3.0.3 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 bbd066f72ad22904aeef547cfc489abff357c3505adb9b6c1a8e0a36b4a3b1f2\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 f5823c3c6734b3d965a9c1c87cc9022d1d71c5cae37ed7cb94da68930a692939\u003Cbr\u003E\n\u00A0 EditorExtensionsRedux \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 3.3.21.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 3.3.21.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0a8816416b75f12ca9782d4f50e18127c57612c32f958f1680df1e09a47f823c4\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 f5823c3c6734b3d965a9c1c87cc9022d1d71c5cae37ed7cb94da68930a692939\u003Cbr\u003E\n\u00A0 EngineLightRelit \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.6.1.1 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 95dd4b90c76d47e20203bbfe06d2e119d8fd0b5131ee5a2614789a5a6af9a419\u003Cbr\u003E\n\u00A0 Atmosphere \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 afcdaf61ac50f12eb01e0d55a4e8791f3fa6c67242b59c2fef504a92daddc726\u003Cbr\u003E\n\u00A0 CelestialShadows \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 9cd19ceaf7a165bd88bf7ae5c34e58993705c7d0e6b672167557b0df5454604f\u003Cbr\u003E\n\u00A0 CityLights \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 2f1326f8b597a804c27d503e133550506944bcaafbc64ba9f656f2f67b5894dd\u003Cbr\u003E\n\u00A0 EVEManager \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 0c6a35d25f6381c200a835b69a67df4b2b6e70e259453ab6bdf00bf5a3fcb610\u003Cbr\u003E\n\u00A0 PartFX \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 7fcf696cb88e39d14a5ede6db7d4588cc7c3276521492f4775bc20454a0bb808\u003Cbr\u003E\n\u00A0 PQSManager \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 3d658636696729d53200b4f4f5cdb9cacc0781980f3f4844991f5eb2b29be24e\u003Cbr\u003E\n\u00A0 ShaderLoader \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 376dc932494b050b8e4118e8d47bc1b28b7fb375e8e9dfc8f78988d0eafe50d3\u003Cbr\u003E\n\u00A0 Terrain \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 9fa58c35af2c8b0b87ee65e20568ae388594265b19c255487dbab55321a513c6\u003Cbr\u003E\n\u00A0 TextureConfig \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 36a8b8e8c86953ab9558c7b482467a899c1a592ca45837e3b4b08444cb2939bd\u003Cbr\u003E\n\u00A0 Utils \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 89438864bf06b7ff94a38deec65136b8e53005be46e12939f89cfdc9347519fa\u003Cbr\u003E\n\u00A0 _BuildManager \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.4.2.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 b23a27076980076cae46a18d6e3b74162e75ac0ebff3264fa308b800e8ca6d17\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 f5823c3c6734b3d965a9c1c87cc9022d1d71c5cae37ed7cb94da68930a692939\u003Cbr\u003E\n\u00A0 EVAEnhancementsContinued \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A00.1.14.1 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.1.1.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 576d3b95135727eab0c6876eae3382e4def0444eda1fd6ecb242658da0cb5127\u003Cbr\u003E\n\u00A0 FP_DockingSndFX \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 2.1.12.27690 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 2.1.12.27690 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01196d0a356eb99582fbcca768c629597add1942375801a30d734c571a558fd8d\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.0.6 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 f5823c3c6734b3d965a9c1c87cc9022d1d71c5cae37ed7cb94da68930a692939\u003Cbr\u003E\n\u00A0 HaystackContinued \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 0.5.5.1 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A00.5.2.1 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 fa4b85fbe4cd0b639fb7e73202e301b2141a38089dbba97b6c7a187291ddc5e5\u003Cbr\u003E\n\u00A0 HideEmptyTechTreeNodes \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 168a0addb6adbb369324f9ef2e18f3536167647be1b37c7a6083b99cc366e94e\u003Cbr\u003E\n\u00A0 KerbalEngineer \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.1.6.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.1.6.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 619f39bcb431edee7d190c981147259c4efba58d73a0cb1743c6f84a345d01d3\u003Cbr\u003E\n\u00A0 KerbalEngineer.Unity \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 8c082cc8e206ef55e5a1dcc59d88debc9769e21c67ab229c00a8ded84e5f28e2\u003Cbr\u003E\n\u00A0 MiniAVC \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.0.3.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.3.2 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 9ee10c46cb6f86417f005046ae72fedda156e1d47c92febcb84c68f50e03f08a\u003Cbr\u003E\n\u00A0 Kopernicus.Parser \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0f56ce0a68ea2523643a65688a7030f46be0d4a8534a1c3570d01f1ad5b94b7aa\u003Cbr\u003E\n\u00A0 ModularFlightIntegrator \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 1.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.2.6.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A054bd24671fab9c9f8b69eea67a3f236631fcfb3db0455352ba35d5b55486c535\u003Cbr\u003E\n\u00A0 Kopernicus \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A00182d1236bc02e40b3e8625cd3fd90b3b75b6f497926763f7abb3e5fa916b5f7\u003Cbr\u003E\n\u00A0 KEX-Common \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0d8eb6609c9874680cf1d4754bb41ffe2c59af79f1cad8deaa8ccdbed79e543f6\u003Cbr\u003E\n\u00A0 KS3P \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0.0.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A01.0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0bfe7922877653b86190cbe1b935b8808f26e4138d72ddfb24f07b637513539b0\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:22:12.448] :BEFORE[KS3P] pass\u003Cbr\u003E\n[LOG 22:22:12.448] :FOR[KS3P] pass\u003Cbr\u003E\n[LOG 22:22:12.448] :AFTER[KS3P] pass\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:23:19.872] [AddonLoader]: Instantiating addon \u0027MainMenuOperator\u0027 from assembly \u0027KS3P\u0027\n\u003C/p\u003E\n\u003Cp\u003E\nParameter name: index\u003Cbr\u003E\n\u00A0\u00A0 \u00A0System.Collections.Generic.List\u00601[KSP_PostProcessing.Profile].get_Item (Int32 index)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.KS3P.Register (KSP_PostProcessing.PostProcessingBehaviour target, Scene targetScene)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Operators.PostProcessingOperator.Patch (Boolean scaled, Scene target)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Operators.MainMenuOperator.Start ()\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:23:39.837] [AddonLoader]: Instantiating addon \u0027SpaceCenterOperator\u0027 from assembly \u0027KS3P\u0027\n\u003C/p\u003E\n\u003Cp\u003E\nParameter name: index\u003Cbr\u003E\n\u00A0\u00A0 \u00A0System.Collections.Generic.List\u00601[KSP_PostProcessing.Profile].get_Item (Int32 index)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.KS3P.Register (KSP_PostProcessing.PostProcessingBehaviour target, Scene targetScene)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Operators.PostProcessingOperator.Patch (Boolean scaled, Scene target)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Operators.SpaceCenterOperator.Start ()\u003Cbr\u003E\n[ERR 22:23:44.186] StageRecovery: RegisterMod, CallRecoveryController returned null\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:23:52.189] [AddonLoader]: Instantiating addon \u0027TrackStationOperator\u0027 from assembly \u0027KS3P\u0027\n\u003C/p\u003E\n\u003Cp\u003E\nParameter name: index\u003Cbr\u003E\n\u00A0\u00A0 \u00A0System.Collections.Generic.List\u00601[KSP_PostProcessing.Profile].get_Item (Int32 index)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.KS3P.Register (KSP_PostProcessing.PostProcessingBehaviour target, Scene targetScene)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Operators.PostProcessingOperator.Patch (Boolean scaled, Scene target)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Operators.TrackStationOperator.Start ()\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:24:08.749] [AddonLoader]: Instantiating addon \u0027FlightOperator\u0027 from assembly \u0027KS3P\u0027\n\u003C/p\u003E\n\u003Cp\u003E\n[LOG 22:27:08.192] [AddonLoader]: Instantiating addon \u0027MainMenuOperator\u0027 from assembly \u0027KS3P\u0027\n\u003C/p\u003E\n\u003Cp\u003E\nParameter name: index\u003Cbr\u003E\n\u00A0\u00A0 \u00A0System.Collections.Generic.List\u00601[KSP_PostProcessing.Profile].get_Item (Int32 index)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.KS3P.Register (KSP_PostProcessing.PostProcessingBehaviour target, Scene targetScene)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Operators.PostProcessingOperator.Patch (Boolean scaled, Scene target)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Operators.MainMenuOperator.Start ()\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-08-24T22:06:04Z\u0022 title=\u002208/24/2019 10:06  PM\u0022 data-short=\u00224 yr\u0022\u003EAugust 24, 2019\u003C/time\u003E by III-METHOD-III\u003C/strong\u003E\n\u003Cbr\u003ETypos\n\u003C/span\u003E\n"},{"CreatedByName":"The White Guardian","CreatedById":148627,"CreatedDateTime":"2019-08-25T09:30:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223658854\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221566683672\u0022 data-ipsquote-userid=\u0022178345\u0022 data-ipsquote-username=\u0022III-METHOD-III\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, III-METHOD-III said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n[EXC 22:22:10.234] IndexOutOfRangeException: Array index is out of range.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.KS3PUtil.GetBounds (UnityEngine.AnimationCurve curve)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Parsers.Parser\u00601[T].ParseCurve (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Parsers.Parser\u00601[T].TryParseCurve (.ConfigNode node, KSP_PostProcessing.ColorGradingCurve\u0026amp; curve)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Parsers.ColorGradingParser.ParseCurves (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Parsers.ColorGradingParser.Parse (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Profile..ctor (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.Profile.op_Implicit (.ConfigNode node)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0KSP_PostProcessing.KS3P.Start ()\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cem\u003EThis\u003C/em\u003E is exactly what I was looking for: KS3P has an uncaught exception. Consequently KS3P\u0027s setup routine cannot finish execution and thus disables itself, hence why the GUI is unresponsive. I\u0027ll look into this immediately.\n\u003C/p\u003E\n"},{"CreatedByName":"The White Guardian","CreatedById":148627,"CreatedDateTime":"2019-08-25T11:47:32Z","Content":"\n\u003Cp\u003E\nFor whoever it might interest: here\u0027s what the problem is.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nAlright, so here\u0027s what the log file says.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EEXC \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E22\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E22\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10.234\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EIndexOutOfRangeException\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EArray\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E index is out of range\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EKS3PUtil\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetBounds\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAnimationCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0060\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParseCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0060\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETryParseCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingCurve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParseCurves\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E..\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ector \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eop_Implicit \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EKS3P\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is a so-called stacktrace: from the bottom up, we get a list of all of the methods subsequently called when the error occurred.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EKS3P\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWe begin with the method KS3P.Start(), which deals with importing the profiles from config nodes. So somewhere during this setup process, the error occurred.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eop_Implicit \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is a bit strange. Basically, KS3P first indexes all config nodes that describe a custom post-processing profile, then add each confignode directly to a list of profile definitions. These are two different types: from KSP\u0027s \u0027ConfigNode\u0027 class directly to KS3P\u0027s \u0027Profile\u0027 class. This conversion is possible because of the following line in KS3P\u0027s source code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E implicit \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eoperator\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis means that a confignode can be implicitly converted to a profile, hence why the stacktrace says \u0027Profile.op_Implicit\u0027 as the method that gave the error: it means \u0027implicit operator method\u0027.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E..\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ector \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nFrom the piece of source code that I linked, we can also see what this means, as the operator essentially does the conversion by calling the \u0027constructor method\u0027 that accepts a ConfigNode as a parameter. In essence, a constructor method is responsible for properly setting up a new instance of a type. In this case, it sets up a new instance of the \u0027Profile\u0027 class using data from a config node as a reference. Hence the word \u0027ctor\u0027 in the stack trace, it means that we\u0027re dealing with a constructor method.\n\u003C/p\u003E\n\u003Cp\u003E\nDon\u0027t worry, it gets simpler now.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nRemember that we\u0027re now dealing with parsing a specific profile. This part of the stacktrace tells us that the problem lies with parsing the color grading. The color grading parser is subdivided into several smaller parser-methods, each dealing with a specific aspect of the color grading (Tonemapper, Curves, etc).\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParseCurves\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis tells us that the problem is in the curves parser specifically.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0060\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETryParseCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingCurve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNow this looks a bit more bizarre. What on Earth does \u0027Parser\u0027\u0060[T]\u0027 mean? In essence, KS3P has a base class (Parser) from which all post-processing effect parsers are derived. This way, all data that multiple post-processing parsers use can be defined once in the main Parser class, and can subsequently be shared with all parser subtypes. The \u0022 \u00601[T] \u0022 refers to the fact that this parser class is \u003Cem\u003Egeneric,\u003C/em\u003E that is to say, it contains a type that is not explicitly defined. For example, a generic method:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EMyGenericMethod\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET item\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhere\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E T \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis means that the method will accept any reference-type object. It\u0027s a great way to make something that covers a lot of scenarios instead of having to create a custom method for each type. In the case of KS3P\u0027s Parser class, it means that I can force every subtype of the parser class to constrain itself to a specific post-processing model. Hence all of the methods it implements from Parser that contain the generic parameter \u0027T\u0027 will immediately refer to the appropriate type. This basically means that the CPU no longer needs to convert the method\u0027s output to the appropriate type.\n\u003C/p\u003E\n\u003Cp\u003E\nBut back to the stacktrace: the entry essentially means that the error occurred in the base parser class itself, not one of its subtypes, specifically the \u0027TryParseCurve\u0027 method. Specifically \u003Cem\u003Ethis\u003C/em\u003E line from the source code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETryParseCurve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSome might have noticed that the stacktrace reads \u0027ColorGradingCurve\u0026amp;\u0027 and not \u0027out ColorGradingCurve\u0027. Since it\u0027s a bit lengthy to explain, I\u0027ll write that tangent in a second spoiler.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nBasically, there are two \u0027main\u0027 kinds of types in C#: Value types (anything defined as \u0027struct\u0027 or \u0027enum\u0027, such as \u0027int\u0027, \u0027short\u0027, \u0027long\u0027, \u0027double\u0027, \u0027float\u0027, \u0027char\u0027, etc) and Reference types (anything defined as \u0027class\u0027 or \u0027delegate\u0027, such as \u0027string\u0027 or System.Action). These are fundamentally different in memory storage and usage. For example, a struct (it it meets a few conditions) is stored in \u0027stack memory\u0027 whereas reference types are stored in \u0027heap memory\u0027. The difference relevant here is how they behave when passed into a method.\n\u003C/p\u003E\n\u003Cp\u003E\nA reference type, as the name implied, is simply an object that exists somewhere in your computer\u0027s memory. Every field or property it is assigned to is another link to this object. If no links exist, the object can no longer be retrieved and is henceforth treated as \u0022out of scope\u0022, and cleaned up by the garbage collector. When you pass a reference type to a method, a reference to the actual object is passed to the method. Consequently you are given a link to the actual object, and can manipulate it as you see fit.\n\u003C/p\u003E\n\u003Cp\u003E\nA value type on the other hand, or any \u0027struct\u0027, is instead copied. This might sound strange, but think about it: if we\u0027re copying, say, a number from object A to object B, would we want any change made to the value in object A to also immediately be changed in object B? That\u0027d be absurd. For example, it\u0027d make it impossible to store the status of a previous frame for the sake of comparing it with the current one.\n\u003C/p\u003E\n\u003Cp\u003E\nSimilarly, a value type\u0027s value is copied when passed into a method. Since value types are but a handful of bits most of the time, modern hardware can do this in the blink of an eye. It does however mean that write access is lost for value types. Hence the existence of the keywords \u0027ref\u0027 and \u0027out\u0027. For example:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EClampAngle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eref \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003Efloat\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E angle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eangle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E360f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E angle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E360f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eangle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E angle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E360f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis method clamps an angle in degrees to be within the 0-360 range, to avoid absurdly high numbers that can just as well be described with a smaller one. The \u0027ref\u0027 keyword ensures that the value type is \u003Cem\u003Epassed by reference\u003C/em\u003E, IE that it gets treated as if it were a reference type, thereby allowing us to manipulate the original value.\n\u003C/p\u003E\n\u003Cp\u003E\nBut how does this work internally? How can we suddenly force the CPU to treat a value type in an atypical manner? Simple: by casting it to a subtype that \u003Cem\u003Ecan\u003C/em\u003E be treated as a reference type: from \u0027x\u0027 to \u0027x\u0026amp;\u0027. This is done for every value passed with the keyword \u0027ref\u0027 (value may or may not be manipulated, but write access is granted anyway) and \u0027out\u0027 (value \u003Cem\u003Ewill\u003C/em\u003E be written to)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nNext we have this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003EKSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0060\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParseCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis has to do with the way \u0027TryParseCurve\u0027 works: it checks if the node supplied is defined, and if not, it returns an empty curve definition. Otherwise it passes the node on to the main \u0027ParseCurve\u0027 method, and \u003Cem\u003Ethis \u003C/em\u003Eis the heart of the problem: I forgot to wrap this call to the \u0027unprotected\u0027 curve method in a try-catch safety net. But the stacktrace doesn\u0027t end there, so what specifically went wrong?\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EKS3PUtil\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetBounds\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAnimationCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is my poor attempt to find the uppermost and lowermost bounds of the color grading curve. So, at the very end of our bizarre adventure into the realm of CPU-puke, we have the following source code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E        internal \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EVector2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetBounds\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAnimationCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            var frames \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ekeys\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EVector2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E frames\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ELength\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe error given here specifically was an IndexOutOfRangeException. In the first line, I retrieve all of the keys from the provided animation curve. If the error was there, it\u0027d be a NullReferenceException. Next line we get something to do with indices:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Eframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime\nframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ELength\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nBehold, our culprit. This code is valid in every case but one: an animation curve that has no keyframes. Consequently the array is empty: it has no items. Element \u00270\u0027 is out of range. frames.Length returns 0, 0 - 1 = -1, and an array index of \u0027-1\u0027 is gibberish. The fix is simple:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Evar frames = curve.keys; // grab the keyframes as an array of UnityEngine.Keyframe\nif(frames.Length == 0)\n{\n\t// Animation curve has no keyframes, return empty bounds.\n}\nelse\n{\n\t// Treat as normal, as both index \u00270\u0027 and index \u0027length - 1\u0027 are valid.\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAnd is what I\u0027ve just implemented, along with several other safety measures. Problem solved.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nTL;DR:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022tenor.gif\u0022 class=\u0022ipsImage\u0022 data-ratio=\u0022128.18\u0022 height=\u0022282\u0022 width=\u0022220\u0022 src=\u0022https://media.tenor.com/images/a99c4b47fee26a92b4967860ff625013/tenor.gif\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"The White Guardian","CreatedById":148627,"CreatedDateTime":"2019-08-25T12:31:02Z","Content":"\n\u003Cp\u003E\nAlright, I\u0027m about to test a newly compiled, updated KS3P. Not only did I remove the IndexOutOfRangeException, I also changed the configuration somewhat. Let me explain.\n\u003C/p\u003E\n\u003Cp\u003E\nPreviously, in KS3P/Configuration.cfg, one would find the name of each scene supported by KS3P, with a number assigned to it. This number was the index of the profile within the loaded profiles that KS3P should assign for that particular scene.\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem here is that profile load order isn\u0027t set in stone, and honestly I feel a bit silly for actually once having programmed it this way. In this new setup, the name of the desired profile is assigned for each scene. Should KS3P not find a loaded profile corresponding to that name, it will instead target the first valid profile for that scene.\n\u003C/p\u003E\n\u003Cp\u003E\nIf, for some bizarre reason, no profiles are valid at all for a particular scene, KS3P will initiate its emergency fallback protocol, generating an empty Post-Processing profile (if it hasn\u0027t done so already) and updating that profile to be valid for each scene that lacks a profile definition.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m now going to test how this works in action.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: almost forgot, I also cleaned up Unity Technologies\u0027 source code for post-processing bundled with KS3P. Previously it contained an HDR check for the camera using a \u0027#if\u0027 directive to function differently on older versions of Unity for backwards compatibility. Problem is, I\u0027d be really surprised if someone were still using KS3P in a build of KSP using Unity 5, as KSP has been using Unity 2017 (build 2017.1.3p1 I believe) if not newer, for some time now. Obviously this check isn\u0027t necessary with KS3P, so I removed it.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-08-25T12:35:27Z\u0022 title=\u002208/25/2019 12:35  PM\u0022 data-short=\u00224 yr\u0022\u003EAugust 25, 2019\u003C/time\u003E by The White Guardian\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"III-METHOD-III","CreatedById":178345,"CreatedDateTime":"2019-08-25T13:39:07Z","Content":"\n\u003Cp\u003E\nWow. You have been busy! Fingers crossed.\n\u003C/p\u003E\n\u003Cp\u003E\nOnce you have something you want to test, Im more than happy to test and paste back logs.\n\u003C/p\u003E\n"},{"CreatedByName":"TomVorat","CreatedById":197441,"CreatedDateTime":"2019-08-25T15:15:40Z","Content":"\n\u003Cp\u003E\nIs the most recent version compatible with KSP 1.6.0? because I can\u0027t get it to work there. And if it isn\u0027t, are there any links to the 1.6 version?\n\u003C/p\u003E\n"},{"CreatedByName":"Gargamel","CreatedById":64714,"CreatedDateTime":"2019-08-25T15:49:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223659396\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221566746140\u0022 data-ipsquote-userid=\u0022197441\u0022 data-ipsquote-username=\u0022TomVorat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n33 minutes ago, TomVorat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIs the most recent version compatible with KSP 1.6.0? because I can\u0027t get it to work there. And if it isn\u0027t, are there any links to the 1.6 version?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis thread might help you out:\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u002264714\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed8002483183\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/173371-how-to-get-old-versions-of-mods/\u0026amp;do=embed\u0022 style=\u0022height:214px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"nwillard","CreatedById":197319,"CreatedDateTime":"2019-08-25T16:06:46Z","Content":"\n\u003Cp\u003E\nCracking good work!\n\u003C/p\u003E\n"},{"CreatedByName":"viperwolf","CreatedById":66190,"CreatedDateTime":"2019-08-26T02:56:07Z","Content":"\n\u003Cp\u003E\nThank You for working on this!\n\u003C/p\u003E\n"},{"CreatedByName":"Timanaku","CreatedById":199731,"CreatedDateTime":"2019-08-26T18:54:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223659304\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221566736262\u0022 data-ipsquote-userid=\u0022148627\u0022 data-ipsquote-username=\u0022The White Guardian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 8/25/2019 at 1:31 PM, The White Guardian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAlright, I\u0027m about to test a newly compiled, updated KS3P. Not only did I remove the IndexOutOfRangeException, I also changed the configuration somewhat. Let me explain.\n\u003C/p\u003E\n\u003Cp\u003E\nPreviously, in KS3P/Configuration.cfg, one would find the name of each scene supported by KS3P, with a number assigned to it. This number was the index of the profile within the loaded profiles that KS3P should assign for that particular scene.\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem here is that profile load order isn\u0027t set in stone, and honestly I feel a bit silly for actually once having programmed it this way. In this new setup, the name of the desired profile is assigned for each scene. Should KS3P not find a loaded profile corresponding to that name, it will instead target the first valid profile for that scene.\n\u003C/p\u003E\n\u003Cp\u003E\nIf, for some bizarre reason, no profiles are valid at all for a particular scene, KS3P will initiate its emergency fallback protocol, generating an empty Post-Processing profile (if it hasn\u0027t done so already) and updating that profile to be valid for each scene that lacks a profile definition.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m now going to test how this works in action.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: almost forgot, I also cleaned up Unity Technologies\u0027 source code for post-processing bundled with KS3P. Previously it contained an HDR check for the camera using a \u0027#if\u0027 directive to function differently on older versions of Unity for backwards compatibility. Problem is, I\u0027d be really surprised if someone were still using KS3P in a build of KSP using Unity 5, as KSP has been using Unity 2017 (build 2017.1.3p1 I believe) if not newer, for some time now. Obviously this check isn\u0027t necessary with KS3P, so I removed it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nExcellent work, keep us updated and hopefully you can push the fixed version soon. We all love your mod.\n\u003C/p\u003E\n"},{"CreatedByName":"jpinard","CreatedById":89401,"CreatedDateTime":"2019-08-30T19:47:09Z","Content":"\n\u003Cp\u003E\nBecause I\u0027m a neophyte when it comes to this stuff.\u00A0 If I run the current version of this with Astronomer\u0027s Pack, will it be causing me issues?\u00A0 or any fps loss due to said issues?\u00A0 I don\u0027t have it installed because I was afraid of that, and don\u0027t want to miss when this gets updated, so if there\u0027s no downside to installing it now so it gets autoupdated I\u0027d prefer to do that.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks! \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"NachtRave","CreatedById":199990,"CreatedDateTime":"2019-08-31T21:47:37Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022148627\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0022 rel=\u0022\u0022\u003E@The White Guardian\u003C/a\u003E\u00A0any update on when a new version for KS3P will be released and support 1.7.3 with the changes you mentioned above?\u003Cbr\u003E\u003Cbr\u003E\nI\u0027m really eager to see KS3P make its way back into game. =)\n\u003C/p\u003E\n"},{"CreatedByName":"Nomadic Astronaut","CreatedById":200059,"CreatedDateTime":"2019-09-03T23:16:56Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022148627\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0022 rel=\u0022\u0022\u003E@The White Guardian\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFor some reason KS3P doesn\u0027t seem to work for me even with the 1.7.2 version. On the KSP logs it mentions me missing textures. Any idea on how to fix this problem because my game isn\u0027t complete until I have KS3P installed.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-09-04T08:09:52Z\u0022 title=\u002209/04/2019 08:09  AM\u0022 data-short=\u00224 yr\u0022\u003ESeptember 4, 2019\u003C/time\u003E by Nomadic Astronaut\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jognt","CreatedById":176871,"CreatedDateTime":"2019-09-05T21:12:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223659286\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221566733652\u0022 data-ipsquote-userid=\u0022148627\u0022 data-ipsquote-username=\u0022The White Guardian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 8/25/2019 at 1:47 PM, The White Guardian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFor whoever it might interest: here\u0027s what the problem is.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Ca href=\u0022#\u0022 rel=\u0022\u0022\u003E\u00A0\u003C/a\u003E \u003Cspan\u003EHide contents\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nAlright, so here\u0027s what the log file says.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EEXC \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E22\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E22\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10.234\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EIndexOutOfRangeException\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EArray\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E index is out of range\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EKS3PUtil\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetBounds\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAnimationCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0060\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParseCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0060\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETryParseCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingCurve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParseCurves\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E..\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ector \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eop_Implicit \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EKS3P\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is a so-called stacktrace: from the bottom up, we get a list of all of the methods subsequently called when the error occurred.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EKS3P\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWe begin with the method KS3P.Start(), which deals with importing the profiles from config nodes. So somewhere during this setup process, the error occurred.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eop_Implicit \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is a bit strange. Basically, KS3P first indexes all config nodes that describe a custom post-processing profile, then add each confignode directly to a list of profile definitions. These are two different types: from KSP\u0027s \u0027ConfigNode\u0027 class directly to KS3P\u0027s \u0027Profile\u0027 class. This conversion is possible because of the following line in KS3P\u0027s source code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E implicit \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eoperator\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis means that a confignode can be implicitly converted to a profile, hence why the stacktrace says \u0027Profile.op_Implicit\u0027 as the method that gave the error: it means \u0027implicit operator method\u0027.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProfile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E..\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ector \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nFrom the piece of source code that I linked, we can also see what this means, as the operator essentially does the conversion by calling the \u0027constructor method\u0027 that accepts a ConfigNode as a parameter. In essence, a constructor method is responsible for properly setting up a new instance of a type. In this case, it sets up a new instance of the \u0027Profile\u0027 class using data from a config node as a reference. Hence the word \u0027ctor\u0027 in the stack trace, it means that we\u0027re dealing with a constructor method.\n\u003C/p\u003E\n\u003Cp\u003E\nDon\u0027t worry, it gets simpler now.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nRemember that we\u0027re now dealing with parsing a specific profile. This part of the stacktrace tells us that the problem lies with parsing the color grading. The color grading parser is subdivided into several smaller parser-methods, each dealing with a specific aspect of the color grading (Tonemapper, Curves, etc).\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParseCurves\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis tells us that the problem is in the curves parser specifically.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0060\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETryParseCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingCurve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNow this looks a bit more bizarre. What on Earth does \u0027Parser\u0027\u0060[T]\u0027 mean? In essence, KS3P has a base class (Parser) from which all post-processing effect parsers are derived. This way, all data that multiple post-processing parsers use can be defined once in the main Parser class, and can subsequently be shared with all parser subtypes. The \u0022 \u00601[T] \u0022 refers to the fact that this parser class is \u003Cem\u003Egeneric,\u003C/em\u003E that is to say, it contains a type that is not explicitly defined. For example, a generic method:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EMyGenericMethod\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET item\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhere\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E T \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis means that the method will accept any reference-type object. It\u0027s a great way to make something that covers a lot of scenarios instead of having to create a custom method for each type. In the case of KS3P\u0027s Parser class, it means that I can force every subtype of the parser class to constrain itself to a specific post-processing model. Hence all of the methods it implements from Parser that contain the generic parameter \u0027T\u0027 will immediately refer to the appropriate type. This basically means that the CPU no longer needs to convert the method\u0027s output to the appropriate type.\n\u003C/p\u003E\n\u003Cp\u003E\nBut back to the stacktrace: the entry essentially means that the error occurred in the base parser class itself, not one of its subtypes, specifically the \u0027TryParseCurve\u0027 method. Specifically \u003Cem\u003Ethis\u003C/em\u003E line from the source code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ETryParseCurve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColorGradingCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSome might have noticed that the stacktrace reads \u0027ColorGradingCurve\u0026amp;\u0027 and not \u0027out ColorGradingCurve\u0027. Since it\u0027s a bit lengthy to explain, I\u0027ll write that tangent in a second spoiler.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Ca href=\u0022#\u0022 rel=\u0022\u0022\u003E\u00A0\u003C/a\u003E \u003Cspan\u003EReveal hidden contents\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nBasically, there are two \u0027main\u0027 kinds of types in C#: Value types (anything defined as \u0027struct\u0027 or \u0027enum\u0027, such as \u0027int\u0027, \u0027short\u0027, \u0027long\u0027, \u0027double\u0027, \u0027float\u0027, \u0027char\u0027, etc) and Reference types (anything defined as \u0027class\u0027 or \u0027delegate\u0027, such as \u0027string\u0027 or System.Action). These are fundamentally different in memory storage and usage. For example, a struct (it it meets a few conditions) is stored in \u0027stack memory\u0027 whereas reference types are stored in \u0027heap memory\u0027. The difference relevant here is how they behave when passed into a method.\n\u003C/p\u003E\n\u003Cp\u003E\nA reference type, as the name implied, is simply an object that exists somewhere in your computer\u0027s memory. Every field or property it is assigned to is another link to this object. If no links exist, the object can no longer be retrieved and is henceforth treated as \u0022out of scope\u0022, and cleaned up by the garbage collector. When you pass a reference type to a method, a reference to the actual object is passed to the method. Consequently you are given a link to the actual object, and can manipulate it as you see fit.\n\u003C/p\u003E\n\u003Cp\u003E\nA value type on the other hand, or any \u0027struct\u0027, is instead copied. This might sound strange, but think about it: if we\u0027re copying, say, a number from object A to object B, would we want any change made to the value in object A to also immediately be changed in object B? That\u0027d be absurd. For example, it\u0027d make it impossible to store the status of a previous frame for the sake of comparing it with the current one.\n\u003C/p\u003E\n\u003Cp\u003E\nSimilarly, a value type\u0027s value is copied when passed into a method. Since value types are but a handful of bits most of the time, modern hardware can do this in the blink of an eye. It does however mean that write access is lost for value types. Hence the existence of the keywords \u0027ref\u0027 and \u0027out\u0027. For example:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EClampAngle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eref \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003Efloat\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E angle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eangle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E360f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E angle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E360f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eangle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E angle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E360f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis method clamps an angle in degrees to be within the 0-360 range, to avoid absurdly high numbers that can just as well be described with a smaller one. The \u0027ref\u0027 keyword ensures that the value type is \u003Cem\u003Epassed by reference\u003C/em\u003E, IE that it gets treated as if it were a reference type, thereby allowing us to manipulate the original value.\n\u003C/p\u003E\n\u003Cp\u003E\nBut how does this work internally? How can we suddenly force the CPU to treat a value type in an atypical manner? Simple: by casting it to a subtype that \u003Cem\u003Ecan\u003C/em\u003E be treated as a reference type: from \u0027x\u0027 to \u0027x\u0026amp;\u0027. This is done for every value passed with the keyword \u0027ref\u0027 (value may or may not be manipulated, but write access is granted anyway) and \u0027out\u0027 (value \u003Cem\u003Ewill\u003C/em\u003E be written to)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nNext we have this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003EKSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParsers\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParser\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0060\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EParseCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E node\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis has to do with the way \u0027TryParseCurve\u0027 works: it checks if the node supplied is defined, and if not, it returns an empty curve definition. Otherwise it passes the node on to the main \u0027ParseCurve\u0027 method, and \u003Cem\u003Ethis \u003C/em\u003Eis the heart of the problem: I forgot to wrap this call to the \u0027unprotected\u0027 curve method in a try-catch safety net. But the stacktrace doesn\u0027t end there, so what specifically went wrong?\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003E    KSP_PostProcessing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EKS3PUtil\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetBounds\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAnimationCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is my poor attempt to find the uppermost and lowermost bounds of the color grading curve. So, at the very end of our bizarre adventure into the realm of CPU-puke, we have the following source code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003E        internal \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EVector2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetBounds\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAnimationCurve\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            var frames \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E curve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ekeys\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EVector2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E frames\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ELength\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe error given here specifically was an IndexOutOfRangeException. In the first line, I retrieve all of the keys from the provided animation curve. If the error was there, it\u0027d be a NullReferenceException. Next line we get something to do with indices:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003Eframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime\nframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eframes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ELength\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E].\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nBehold, our culprit. This code is valid in every case but one: an animation curve that has no keyframes. Consequently the array is empty: it has no items. Element \u00270\u0027 is out of range. frames.Length returns 0, 0 - 1 = -1, and an array index of \u0027-1\u0027 is gibberish. The fix is simple:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\n\u003Cspan class=\u0022pln\u0022\u003Evar frames = curve.keys; // grab the keyframes as an array of UnityEngine.Keyframe\nif(frames.Length == 0)\n{\n\t// Animation curve has no keyframes, return empty bounds.\n}\nelse\n{\n\t// Treat as normal, as both index \u00270\u0027 and index \u0027length - 1\u0027 are valid.\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAnd is what I\u0027ve just implemented, along with several other safety measures. Problem solved.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nTL;DR:\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThank you for the thorough step-by-step on error interpretation! I always wondered how to read those!\n\u003C/p\u003E\n\u003Cp\u003E\nBy the way. Not sure if you\u2019ve heard the news, but 1.8 is going to move KSP to a newer unity something, making dx11 baseline. Not sure if\u00A0this impacts KS3P, other than no more pesky dx9 problems \u003Cimg alt=\u0022;)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u00A0 but I thought I\u2019d mention it.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"clusta","CreatedById":200167,"CreatedDateTime":"2019-09-19T15:01:14Z","Content":"\n\u003Cp\u003E\nHello everyone! I really like this mod. It\u0027s very sad that it not works on 1.7.3. So I recently made some additions to the source code and place a pull request on github. Now it\u0027s worked at least on my installation \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022148627\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0022 rel=\u0022\u0022\u003E@The White Guardian\u003C/a\u003E Please be so kind as to look towards on pull request and check it? Things concerning GUI and configs still be a little messy though...\n\u003C/p\u003E\n\u003Cp\u003E\nI can make a some kind of beta for 1.7.3 and post a link here (if someone interested in) in order to check if it works not only on my configuration. S\u003Cspan\u003Eince this is my first post at forum (\u003C/span\u003Edefinitely\u003Cspan\u003E not last) I\u0027m not sure - w\u003C/span\u003E\u003Cspan lang=\u0022en\u0022 xml:lang=\u0022en\u0022\u003E\u003Cspan title=\u0022\u0022\u003Eould it be a violation of the license or some rules\u003C/span\u003E\u003C/span\u003E?\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway glad to be here! \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"III-METHOD-III","CreatedById":178345,"CreatedDateTime":"2019-09-19T20:39:32Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223674534\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221568905274\u0022 data-ipsquote-userid=\u0022200167\u0022 data-ipsquote-username=\u0022clusta\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, clusta said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHello everyone! I really like this mod. It\u0027s very sad that it not works on 1.7.3. So I recently made some additions to the source code and place a pull request on github. Now it\u0027s worked at least on my installation \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022148627\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0022 rel=\u0022\u0022\u003E@The White Guardian\u003C/a\u003E Please be so kind as to look towards on pull request and check it? Things concerning GUI and configs still be a little messy though...\n\u003C/p\u003E\n\u003Cp\u003E\nI can make a some kind of beta for 1.7.3 and post a link here (if someone interested in) in order to check if it works not only on my configuration. S\u003Cspan\u003Eince this is my first post at forum (\u003C/span\u003Edefinitely\u003Cspan\u003E not last) I\u0027m not sure - w\u003C/span\u003E\u003Cspan lang=\u0022en\u0022 xml:lang=\u0022en\u0022\u003E\u003Cspan title=\u0022\u0022\u003Eould it be a violation of the license or some rules\u003C/span\u003E\u003C/span\u003E?\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway glad to be here! \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat is so strange. I just logged into my PC and was sitting here, thinking \u0027I really miss Kerbal Space Programme, ever since KS3P stopped working for me I havent played it\u0022. i came on to see if \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022148627\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/148627-the-white-guardian/\u0022 rel=\u0022\u0022\u003E@The White Guardian\u003C/a\u003E\u00A0had made any progress yet (i check once a week).\n\u003C/p\u003E\n\u003Cp\u003E\ni truly do not know the rules about forking a programme. You arent taking over the mod (nor trying to) - infact you are helping those users of it who cant currently use it. Ive seen it happen in many mods where the owner went \u0027missing\u0027 for a few months and people posted links to versions that solved issues related to KPS version changes.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyhow, perhaps The White Guardian will reply and give you permission.\u00A0 in the meantime, i would love to test your version.\u00A0 Can you PM it to me whilst you wait or decide if you will post it here?\n\u003C/p\u003E\n\u003Cp\u003E\nThanks\n\u003C/p\u003E\n"},{"CreatedByName":"Galileo","CreatedById":150430,"CreatedDateTime":"2019-09-19T21:46:36Z","Content":"\n\u003Cp\u003E\nIt depends on the license, but typically it is frowned upon in the community. Let\u0027s say your fork introduces new issues, how are the users supposed to know who to go to? You? The White Guardian? More than likely TWG because it will be impossible to know who\u0027s code is causing issues, which isn\u0027t fair to him to be expected to answer questions about issue related to someone else\u0027s fork.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m not saying your code does have issues, but I have seen all too often on the forums bad forks and the developers of those bad forks do not stick around to help with bug squashing.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere used to be an unspoken rule amongst modders about waiting 90 days to do something like that, but ultimately it depends on the license which should be in the mod somewhere. Check that before you do anything.\n\u003C/p\u003E\n"},{"CreatedByName":"clusta","CreatedById":200167,"CreatedDateTime":"2019-09-19T22:05:35Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223674764\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221568929596\u0022 data-ipsquote-userid=\u0022150430\u0022 data-ipsquote-username=\u0022Galileo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, Galileo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt depends on the license, but typically it is frowned upon in the community. Let\u0027s say your fork introduces new issues, how are the users supposed to know who to go to? You? The White Guardian? More than likely TWG because it will be impossible to know who\u0027s code is causing issues, which isn\u0027t fair to him to be expected to answer questions about issue related to someone else\u0027s fork.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s why I post pull request on github with my changes to TWG. But I\u0027m interesting in just testing that new additions. Can I just put a link to the compiled patched \u0027unofficial\u0027 DLL at my own fork? It\u0027s just a little help, few bugs fixed and some additions. Just wanna to test it in order to see if I missed something before TWG take a look at it. Again, that\u0027s TWG\u0027s mod, not mine \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Galileo","CreatedById":150430,"CreatedDateTime":"2019-09-19T22:33:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223674772\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221568930735\u0022 data-ipsquote-userid=\u0022200167\u0022 data-ipsquote-username=\u0022clusta\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n25 minutes ago, clusta said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s why I post pull request on github with my changes to TWG. But I\u0027m interesting in just testing that new additions. Can I just put a link to the compiled patched \u0027unofficial\u0027 DLL at my own fork? It\u0027s just a little help, few bugs fixed and some additions. Just wanna to test it in order to see if I missed something before TWG take a look at it. Again, that\u0027s TWG\u0027s mod, not mine \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, I suppose if you only plan to post it on GitHub. I wouldn\u0027t post anything here until you get proper permission from TWG.\n\u003C/p\u003E\n"},{"CreatedByName":"clusta","CreatedById":200167,"CreatedDateTime":"2019-09-19T22:39:39Z","Content":"\n\u003Cp\u003E\nSo, if I get you right, the link to github posted here is OK?\n\u003C/p\u003E\n"},{"CreatedByName":"pingopete","CreatedById":74168,"CreatedDateTime":"2019-09-22T12:38:21Z","Content":"\n\u003Cp\u003E\nHi there, So I\u0027ve given this mod a go again (last time was 3 years ago or something) and wow does it make the game look different!\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://imgur.com/a/Vk0WJHU\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://imgur.com/a/Vk0WJHU\u003C/a\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedOther\u0022\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedid=\u0022embed3139103651\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?app=core\u0026amp;module=system\u0026amp;controller=embed\u0026amp;url=https://gfycat.com/hardaggravatingeastrussiancoursinghounds-kerbalspaceprogram\u0022 style=\u0022height:879px;\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nHowever, I\u0027m trying to make a config for a mod I\u0027m working on, but can\u0027t figure out how to use the exported txt file to get my settings to run in game.\n\u003C/p\u003E\n\u003Cp\u003E\nI have spent the last two days looking everywhere (searched this whole topic, searched google etc and experimented my self\u00A0for instructions on specifically what to do with the txt file but haven\u0027t found anything that works.\n\u003C/p\u003E\n\u003Cp\u003E\nI tried renaming the expoted config settings txt to a .cfg, tried copying the contents to the default config,\u00A0tried putting the txt next to the default config and tried changing the index values for the configuration file, but all of these either stop the mod running in game or simply just don\u0027t show my config in the GUI in game.\n\u003C/p\u003E\n\u003Cp\u003E\nIf someone could help me just letting me know exactly what to do with the exported .txt file in order to have this running in my game from start up I\u0027d be very greatful!\n\u003C/p\u003E\n\u003Cp\u003E\nAs you can see the mods works fantastically in game, I just currently have to re input all my custom settings ever time I start up KSP.\n\u003C/p\u003E\n"},{"CreatedByName":"Friznit","CreatedById":191545,"CreatedDateTime":"2019-09-22T13:09:19Z","Content":"\n\u003Cp\u003E\nImporting custom configs doesn\u0027t work yet.\u00A0 TWG is working on a fix.\n\u003C/p\u003E\n"},{"CreatedByName":"pingopete","CreatedById":74168,"CreatedDateTime":"2019-09-22T14:17:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223675813\u0022 data-ipsquote-contentid=\u0022168763\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221569157759\u0022 data-ipsquote-userid=\u0022191545\u0022 data-ipsquote-username=\u0022Friznit\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Friznit said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nImporting custom configs doesn\u0027t work yet.\u00A0 TWG is working on a fix.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nah ok, good to know, thanks\n\u003C/p\u003E\n"}]}