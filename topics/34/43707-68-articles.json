{"TopicId":43707,"ForumId":34,"TopicTitle":"kOS Scriptable Autopilot System 0.9","CreatedByName":"KevinLaity","CreatedById":68050,"CreatedDateTime":"2013-08-24T14:28:17Z","PageNum":68,"Articles":[{"CreatedByName":"FellipeC","CreatedById":77983,"CreatedDateTime":"2013-11-05T14:43:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ralathon\u0022 data-cite=\u0022Ralathon\u0022\u003E\u003Cdiv\u003EMy guess would be that the program ends the instant after you launch. kOS probably resets throttle after that happens. Try adding \u0022wait 10.\u0022 or something after \u0022stage.\u0022\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBingo! I had sure that I forgot something! Thanks a lot!\u003C/p\u003E\n"},{"CreatedByName":"Stiggles","CreatedById":68635,"CreatedDateTime":"2013-11-05T16:36:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022willow\u0022 data-cite=\u0022willow\u0022\u003E\u003Cdiv\u003EThe above won\u0027t work. You need vector math to do it properly you can\u0027t just convert vectors to their magnitudes and expect things to work, last time I tried to build code like this in kOS vector math was only implemented for some very specific situations. I requested it but got no response. I\u0027m still hoping Kevin gets round to it. There\u0027s a really lame workaround, split the vectors into x/y/z variables and do the math yourself.\u003Cp\u003EA computer system on board a rocket like this one will primarily be used as a navigation tool. You can\u0027t do navigation without a proper implementation of vector math. I really like kOS but without vector math it\u0027s not usable for me. I\u0027m really eager, I think kOS and a handfull of scripts should be able to replace mechjeb.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat I\u0027ve been trying to do (with the node calculations) is use the nextNode:deltaV:mag as the the reference for the throttle control. Something like: if (nextNode:deltaV:mag\u0026lt;1 and isBurning=1) {throttle = 0.}. It works, sort-of, but the script is so slow that it overshoots before the system realizes. If it doesn\u0027t overshoot and stop, then the node flips and the ship starts wandering in an attempt to chase it back. A good formula for the throttle control would be a boon, but I\u0027ve yet to find one gradual enough. Hopefully there\u0027s a more simple solution less prone to failure, but it seems it doesn\u0027t exist yet.\u003C/p\u003E\u003Cp\u003EI really do hope some more apparent (and less process intensive) ways of completing these basic tasks get implemented. If not, I\u0027ll settle for \u0022else if...\u0022 and \u0022else...\u0022 statements and making \u0022=\u0022 synonymous with \u0022to\u0022 in set and lock statements. \u0022else if...\u0022 especially, it would considerably simplify my logical checks. Oh! And a logical statement for \u0022not\u0022. That would help too.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-05T16:44:11Z\u0022 title=\u002211/05/2013 04:44  PM\u0022 data-short=\u002210 yr\u0022\u003ENovember 5, 2013\u003C/time\u003E by Stiggles\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2013-11-05T21:57:00Z","Content":"\n\u003Cp\u003E@Stiggles:\u003C/p\u003E\u003Cp\u003EI get repeatable circular orbits with 1% error. My recipe works by designing your burn to exactly reach the orbital velocity for the orbit. Then the maneuver node and the burn must exactly provide deltav up to the orbital velocity. Step by step:\u003C/p\u003E\u003Cp\u003E1. calculate orbital velocity: \u003Cstrong\u003Eset ov to (G * mk / r)^0.5\u003C/strong\u003E. with G: gravitational constant, mk: Kerbin mass, r: radius of orbit, r = 600000 \u002B apoapsis\u003C/p\u003E\u003Cp\u003E2. There is no good way to determine your velocity at apoapsis while coasting there. I continuously recalculate \u003Cstrong\u003Evelocity:orbit:mag - ov\u003C/strong\u003E until the burn starts.\u003C/p\u003E\u003Cp\u003E3. When does the burn start? Well, half of the burn time before apoapsis so you distribute your deltav around apoapsis evenly.\u003C/p\u003E\u003Cp\u003E4. How long is your burn? You know your deltav and the acceleration your engine(s) provide (which is deltav per second). Engine acceleration a is F/m (force by mass), \u003Cstrong\u003Eset maxA to maxthrust/mass\u003C/strong\u003E, and then \u003Cstrong\u003Eset burnduration to deltav / maxA\u003C/strong\u003E.\u003C/p\u003E\u003Cp\u003E5. During the end of the burn the node target indicator will wander off as deltav gets close to 0. In order to avoid uncontrolled gearing I unlock steering and turn on sas to keep the ship stable.\u003C/p\u003E\u003Cp\u003EI uploaded my script and craft to \u003Ca href=\u0022http://kos.wikia.com/wiki/Tutorials_and_Example_Scripts\u0022 rel=\u0022external nofollow\u0022\u003EkOS Wiki\u003C/a\u003E for reference.\u003C/p\u003E\u003Cp\u003ERegards, Andreas\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://ksp.baldev.de/kos/far2/far2.txt\u0022 rel=\u0022external nofollow\u0022\u003Efar2.txt\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://ksp.baldev.de/kos/far2/orbiter2.craft\u0022 rel=\u0022external nofollow\u0022\u003Eorbiter2.craft\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EPS: There is an issue with unlocking steering in the end. The script retains the NODE locked earlier while on the console it can be unlocked. Any workaround?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-06T21:01:03Z\u0022 title=\u002211/06/2013 09:01  PM\u0022 data-short=\u002210 yr\u0022\u003ENovember 6, 2013\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2013-11-05T22:02:10Z","Content":"\n\u003Cp\u003E@willow:\u003C/p\u003E\u003Cp\u003EActually I was collecting which \u003Cstrong\u003Emodules might be worth implementing\u003C/strong\u003E:\u003C/p\u003E\u003Cp\u003E1. create kOS modules\u003C/p\u003E\u003Cp\u003E a) ascent w/ (Kerbin)\u003C/p\u003E\u003Cp\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E w/o atmosphere (Mun)\u003C/p\u003E\u003Cp\u003E c) orbit circularisation\u003C/p\u003E\u003Cp\u003E d) descent \u0026amp; landing w/ and w/o atmosphere\u003C/p\u003E\u003Cp\u003E e) Mun transfer\u003C/p\u003E\u003Cp\u003E f) interplanetary transfers\u003C/p\u003E\u003Cp\u003E g) docking\u003C/p\u003E\u003Cp\u003Eand then there are some \u003Cstrong\u003EkOS challenges\u003C/strong\u003E:\u003C/p\u003E\u003Cp\u003E2. send satellites to each planet \u0026amp; moon\u003C/p\u003E\u003Cp\u003E3. land rovers on each planet \u0026amp; moon\u003C/p\u003E\u003Cp\u003E4. land \u0026amp; return manned missions\u003C/p\u003E\u003Cp\u003Ebut also some \u003Cstrong\u003Eproblems\u003C/strong\u003E which are currently \u003Cstrong\u003Eunsolved\u003C/strong\u003E:\u003C/p\u003E\u003Cp\u003E5. how to operate rcs for maneuvering?\u003C/p\u003E\u003Cp\u003E6. how to align for interplanetary transfers? (requires planetary coordinates relative to the sun)?\u003C/p\u003E\u003Cp\u003E7. how to run multiple missions simultaneously? Autonomous engine burns? Can kOS run in the background?\u003C/p\u003E\u003Cp\u003E5. to 7. are feature requests.\u003C/p\u003E\u003Cp\u003ERegards, Andreas\u003C/p\u003E\u003Cp\u003EKSP 0.22.0 with kOS 0.9.1 - nothing else.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-11-05T22:15:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Stiggles\u0022 data-cite=\u0022Stiggles\u0022\u003E\u003Cdiv\u003EWhat I\u0027ve been trying to do (with the node calculations) is use the nextNode:deltaV:mag as the the reference for the throttle control. Something like: if (nextNode:deltaV:mag\u0026lt;1 and isBurning=1) {throttle = 0.}. It works, sort-of, but the script is so slow that it overshoots before the system realizes. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOne thing I\u0027m coming to realize is the need to anticipate what the value WILL be at the next iteration, and then pick a setting halfway between that value and the value you have now as the number to work from in calculations like these. In my case I\u0027m trying to make a \u0022suicide burn\u0022 landing script that burns the least amount and waits until the bottom to burn, but the error you get from slow iterations means my script is always calculating based on what the situation WAS a half second ago, not what it is now. That \u0022slight\u0022 error can mean about 10-20 m/s difference in impact speed.\u003C/p\u003E\u003Cp\u003EIt\u0027s slightly different from what you need it for but the basic problem is the same problem. We\u0027re both trying to calculate a thing once per iteration of a loop, which is essentially the problem of approximating calculus by using a finite number of timeslices, and our timeslices are large enough to cause error.\u003C/p\u003E\u003Cp\u003EHere, with amount of deltaV remaining what that means is this:\u003C/p\u003E\u003Cp\u003E1 - Keep track of the deltaTime your loop is taking to execute by comparing missionTime this iteration to missionTime last iteration.\u003C/p\u003E\u003Cp\u003E2 - Using maxthrust, throttle setting, mass, and delta time, you should be able to calculate a fairly accurate idea of how much your speed is expected to change per loop iteration at this throttle setting: dV per iteration = (delta Time) * ( (current throttle * maxthrottle) / mass )\u003C/p\u003E\u003Cp\u003E3 - decide your program behavior based on what the dV WILL be next iteration. not what it is now.\u003C/p\u003E\u003Cp\u003EIn your case, try this: If the node dV remaining after next iteration is predicted to be zero or less than zero, then adjust your throttle down NOW, but not all the way down to zero. Scale it down based on how much you\u0027re going to overshoot. (i.e. if the current throttle setting would give you three times as much dV as you needed to get to zero in the next iteration, then cut your throttle to 1/3 of what it was. That should finish the job in the next iteration.)\u003C/p\u003E\u003Cp\u003EOr alternatively, for more accuracy, add a fudge factor to reduce the throttle by a bit more than the amount needed to get to zero, so there will still be a bit of dV left next iteration. This will make the throttle slower and slower and slower and make it asymptotically approach the right delta V rather than get there in one single iteration (which is still likely to overshoot a bit).\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2013-11-05T22:19:24Z","Content":"\n\u003Cp\u003EWhich might look like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// calculate maneuver properties\u003Cbr\u003E\u003Cbr\u003E// Errors in calculation: a) velocity points upward,  traveling to apoapsis\u003Cbr\u003E// causes horizont to turn \u0022down\u0022. Calculation is correct only at apoapsis.\u003Cbr\u003E// Thus burn parameters are adjusted while travelling to apoapsis.\u003Cbr\u003E\u003Cbr\u003Eset maxda to maxthrust/mass.\u003Cbr\u003Eprint \u0022T\u002B\u0022 \u002B round(missiontime) \u002B \u0022 Max DeltaA for engine: \u0022 \u002B maxda.\u003Cbr\u003Eset vom to velocity:orbit:mag.\u003Cbr\u003Eset dv to (ov - vom).\u003Cbr\u003Eset tfb to dv/maxda.\u003Cbr\u003Eprint \u0022T\u002B\u0022 \u002B round(missiontime) \u002B \u0022 DeltaV for final burn: \u0022 \u002B dv.\u003Cbr\u003Eprint \u0022T\u002B\u0022 \u002B round(missiontime) \u002B \u0022 Duration of final burn: \u0022 \u002B tfb.\u003Cbr\u003E\u003Cbr\u003Eset x to node(time:seconds \u002B eta:apoapsis, 0, 0, dv).\u003Cbr\u003Eadd x.\u003Cbr\u003E// warp only \u003Cbr\u003Ewhen alt:radar \u0026gt; 50000 then { set warp to 2. }\u003Cbr\u003Ewhen eta:apoapsis \u0026lt; tfb/2 \u002B 30 then { set warp to 0. }\u003Cbr\u003Elock steering to x.\u003Cbr\u003E// iteratively correct burn parameters\u003Cbr\u003Euntil eta:apoapsis \u0026lt; tfb/2 {\u003Cbr\u003E    set vom to velocity:orbit:mag.\u003Cbr\u003E    set dv to ov - vom.\u003Cbr\u003E    set tfb to dv/maxda.\u003Cbr\u003E    set x:prograde to dv.\u003Cbr\u003E    print \u0022DeltaV for final burn: \u0022 \u002B dv at (0,29).\u003Cbr\u003E    print \u0022Duration of final burn: \u0022 \u002B tfb at (0,30).\u003Cbr\u003E    wait 1.\u003Cbr\u003E}\u003Cbr\u003Eprint \u0022T\u002B\u0022 \u002B round(missiontime) \u002B \u0022 DeltaV for final burn: \u0022 \u002B dv.\u003Cbr\u003Eprint \u0022T\u002B\u0022 \u002B round(missiontime) \u002B \u0022 Duration of final burn: \u0022 \u002B tfb.\u003Cbr\u003E// lock steering to node:prograde which wanders off at small deltav\u003Cbr\u003Ewhen x:deltav:mag \u0026lt; 2 * maxda then { \u003Cbr\u003E    print \u0022T\u002B\u0022 \u002B round(missiontime) \u002B \u0022 Reducing throttle, fuel:\u0022 \u002B stage:liquidfuel.\u003Cbr\u003E    // continue to accelerate x:prograde\u003Cbr\u003E    unlock steering.\u003Cbr\u003E    sas on.\u003Cbr\u003E}\u003Cbr\u003Eprint \u0022T\u002B\u0022 \u002B round(missiontime) \u002B \u0022 Orbital burn start \u0022 \u002B round(eta:apoapsis) \u002B \u0022 s before apoapsis.\u0022.\u003Cbr\u003Eset th to 1.\u003Cbr\u003Elock throttle to th.\u003Cbr\u003Euntil velocity:orbit:mag \u0026gt; ov {\u003Cbr\u003E    set thrust to maxthrust * throttle.\u003Cbr\u003E    set da to thrust/mass.\u003Cbr\u003E    set newth to x:deltav:mag * mass / maxthrust.\u003Cbr\u003E    if x:deltav:mag \u0026lt; 2 * da and newth \u0026gt; 0.2 {\u003Cbr\u003E        set th to newth.\u003Cbr\u003E    }\u003Cbr\u003E    print \u0022Thrust: \u0022 \u002B thrust at (0,28).\u003Cbr\u003E    print \u0022DeltaA: \u0022 \u002B da at (0,29).\u003Cbr\u003E    print \u0022Node DeltaV: \u0022 \u002B x:deltav:mag at (0,30).\u003Cbr\u003E}\u003Cbr\u003Elock throttle to 0.\u003Cbr\u003Eremove x.\u003Cbr\u003Eprint \u0022T\u002B\u0022 \u002B round(missiontime) \u002B \u0022 Orbit complete, apoapsis: \u0022 \u002B apoapsis \u002B \u0022, periapsis: \u0022 \u002B periapsis.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-11-05T23:53:11Z","Content":"\n\u003Cp\u003EI have a question. Is there a tutorial explaining how to create a MechJeb-style ascent profile? I\u0027m using FAR and thus need to mind my AoA, so simple \u0022lock steering to heading 90 by 45\u0022 will result in a rocket \u0022falling off it\u0027s tail\u0022 and flipping. I\u0027d really like to get into using KOS, it seems very realistic to steer a spacecraft by executing various programs.\u003C/p\u003E\n"},{"CreatedByName":"Gaius","CreatedById":66495,"CreatedDateTime":"2013-11-06T00:15:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dragon01\u0022 data-cite=\u0022Dragon01\u0022\u003E\u003Cdiv\u003EI have a question. Is there a tutorial explaining how to create a MechJeb-style ascent profile? I\u0027m using FAR and thus need to mind my AoA, so simple \u0022lock steering to heading 90 by 45\u0022 will result in a rocket \u0022falling off it\u0027s tail\u0022 and flipping. I\u0027d really like to get into using KOS, it seems very realistic to steer a spacecraft by executing various programs.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is a bit of old code, don\u0027t know if it works with the latest kOS, but I used to use this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euntil apoapsis \u0026gt; orbitAltitude {\u003Cbr\u003E  set pitch to -90.\u003Cbr\u003E  if apoapsis \u0026lt; 69078 {\u003Cbr\u003E    set pitch to 0 - (apoapsis / 768).\u003Cbr\u003E  }.\u003Cbr\u003E  lock steering to UP \u002B R(0,0,180) \u002B R(0,pitch,0).\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis causes the pitch to gradually decrease during ascent. 69078m is the height of Kerbin\u0027s atmosphere. Once the peak of the orbit has cleared the atmosphere, it\u0027ll be thrusting completely horizontally, putting all its energy into circularizing the orbit.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-06T00:20:53Z\u0022 title=\u002211/06/2013 12:20  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 6, 2013\u003C/time\u003E by Gaius\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-11-06T01:35:51Z","Content":"\n\u003Cp\u003EThat\u0027s nice, but I need a customizable function that would essentially duplicate MechJeb\u0027s ascent functionality. For example, I\u0027ve got a turn that starts at 0.5km and ends at 250km, with the 35% curve grade. Also, it needs to be terminated before it\u0027s fully executed, after a certain mission time has elapsed (that\u0027s because of peculiar characteristics of the particular rocket it\u0027s supposed to run on). I need a function that can give similar turn to what MechJeb does in such conditions. I know how to start it and what to do once the turn is terminated, but the function itself eludes me. Oh, and I\u0027d rather have it not depend on any other constants, since it also has to work on Earth-size Kerbin. I\u0027d like to know how exactly MechJeb calculates it\u0027s turn, maybe it\u0027d help.\u003C/p\u003E\n"},{"CreatedByName":"AbeS","CreatedById":80644,"CreatedDateTime":"2013-11-06T02:52:41Z","Content":"\n\u003Cp\u003EDragon01, I did something like this in 0.84, not sure if it\u0027s good enough. (incFlag is used to make sure I didn\u0027t go below 10 degrees when doing the gravity turn.)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif altitude \u0026gt; 500 {\u003Cbr\u003E\t\tif incFlag=0 {\u003Cbr\u003E\t\t\tset tfv to velocity:surface.\u003Cbr\u003E\t\t\tset tfA to latitude.\u003Cbr\u003E\u003Cbr\u003E                        set tfupyaw to up:yaw.\u003Cbr\u003E                        set tfB to 0 - tfupyaw.\u003Cbr\u003E\u003Cbr\u003E                        set tfW to tfv:x*cos(tfB) \u002B 0 \u002B tfv:z*sin(tfB).\u003Cbr\u003E                        set tfN to tfv:x*sin(tfA)*sin(tfB) \u002B tfv:y*cos(tfA) \u002B tfv:z*(0-sin(tfA)*cos(tfB)).\u003Cbr\u003E                        set tfU to tfv:x*(0-cos(tfA)*sin(tfB)) \u002B tfv:y*sin(tfA) \u002B tfv:z*cos(tfA)*cos(tfB).\u003Cbr\u003E\u003Cbr\u003E                        set tfE to 0 - tfW.\u003Cbr\u003E\u003Cbr\u003E                        set tfradius to (tfe^2 \u002B tfn^2 \u002B tfu^2)^0.5.\u003Cbr\u003E\u003Cbr\u003E                        set incl to arcsin(tfu/tfradius).\u003Cbr\u003E\u003Cbr\u003E\t\t\tlock steering to heading angle by incl-10.\u003Cbr\u003E\t\t\tif incl\u0026lt;10 {set incFlag to 1.}.\u003Cbr\u003E\t\t}.\u003Cbr\u003E\t}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Stiggles","CreatedById":68635,"CreatedDateTime":"2013-11-06T03:13:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dragon01\u0022 data-cite=\u0022Dragon01\u0022\u003E\u003Cdiv\u003EThat\u0027s nice, but I need a customizable function that would essentially duplicate MechJeb\u0027s ascent functionality. For example, I\u0027ve got a turn that starts at 0.5km and ends at 250km, with the 35% curve grade. Also, it needs to be terminated before it\u0027s fully executed, after a certain mission time has elapsed (that\u0027s because of peculiar characteristics of the particular rocket it\u0027s supposed to run on). I need a function that can give similar turn to what MechJeb does in such conditions. I know how to start it and what to do once the turn is terminated, but the function itself eludes me. Oh, and I\u0027d rather have it not depend on any other constants, since it also has to work on Earth-size Kerbin. I\u0027d like to know how exactly MechJeb calculates it\u0027s turn, maybe it\u0027d help.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve been toying with a polynomial function to keep the angle in check. This one has been working for me during my launches (I am using FAR):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[COLOR=\u0022Blue\u0022]lock [/COLOR][COLOR=\u0022Black\u0022]pVal [/COLOR][COLOR=\u0022Blue\u0022]to [/COLOR][COLOR=\u0022Black\u0022]-[/COLOR][COLOR=\u0022Orange\u0022]1[/COLOR][COLOR=\u0022Black\u0022]*([/COLOR][COLOR=\u0022Orange\u0022]1.25[/COLOR][COLOR=\u0022Black\u0022]*([/COLOR][COLOR=\u0022Purple\u0022]altitude[/COLOR][COLOR=\u0022Black\u0022]/[/COLOR][COLOR=\u0022Orange\u0022]1000[/COLOR][COLOR=\u0022Black\u0022])\u002B([/COLOR][COLOR=\u0022Orange\u0022]45[/COLOR][COLOR=\u0022Black\u0022]*([/COLOR][COLOR=\u0022Purple\u0022]apoapsis[/COLOR][COLOR=\u0022Black\u0022]/[/COLOR][COLOR=\u0022Black\u0022]tAlt[/COLOR][COLOR=\u0022Black\u0022])^[/COLOR][COLOR=\u0022Orange\u0022]2[/COLOR][COLOR=\u0022Black\u0022])).[/COLOR][COLOR=\u0022Black\u0022]\u003Cbr\u003E[/COLOR][COLOR=\u0022Blue\u0022]lock [/COLOR][COLOR=\u0022Purple\u0022]steering [/COLOR][COLOR=\u0022Blue\u0022]to [/COLOR][COLOR=\u0022Purple\u0022]up [/COLOR][COLOR=\u0022Black\u0022]\u002B [/COLOR][COLOR=\u0022Black\u0022]R[/COLOR][COLOR=\u0022Black\u0022]([/COLOR][COLOR=\u0022Orange\u0022]0[/COLOR][COLOR=\u0022Black\u0022],[/COLOR][COLOR=\u0022Orange\u0022]0[/COLOR][COLOR=\u0022Black\u0022],[/COLOR][COLOR=\u0022Orange\u0022]180[/COLOR][COLOR=\u0022Black\u0022]) \u002B [/COLOR][COLOR=\u0022Black\u0022]R[/COLOR][COLOR=\u0022Black\u0022]([/COLOR][COLOR=\u0022Orange\u0022]0[/COLOR][COLOR=\u0022Black\u0022],[/COLOR][COLOR=\u0022Black\u0022]pVal[/COLOR][COLOR=\u0022Black\u0022],[/COLOR][COLOR=\u0022Orange\u0022]0[/COLOR][COLOR=\u0022Black\u0022]).[/COLOR]\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt definitely could use some work, though. This has a check inside the main launch loop that halts it if the ship reaches horizontal and the ship will burn gradually more horizontal as the apoapsis approaches the target altitude. If you want it to turn faster, change the coefficient on the first term (The 1.25; effectively 1.25 degrees for every 1000 meters of altitude). The coefficient on the second term adjusts the maximum effect (in degrees) of the apoapsis approaching the target altitude.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-06T04:20:13Z\u0022 title=\u002211/06/2013 04:20  AM\u0022 data-short=\u002210 yr\u0022\u003ENovember 6, 2013\u003C/time\u003E by Stiggles\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Idranel","CreatedById":84266,"CreatedDateTime":"2013-11-06T03:15:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dragon01\u0022 data-cite=\u0022Dragon01\u0022\u003E\u003Cdiv\u003EThat\u0027s nice, but I need a customizable function that would essentially duplicate MechJeb\u0027s ascent functionality. For example, I\u0027ve got a turn that starts at 0.5km and ends at 250km, with the 35% curve grade. Also, it needs to be terminated before it\u0027s fully executed, after a certain mission time has elapsed (that\u0027s because of peculiar characteristics of the particular rocket it\u0027s supposed to run on). I need a function that can give similar turn to what MechJeb does in such conditions. I know how to start it and what to do once the turn is terminated, but the function itself eludes me. Oh, and I\u0027d rather have it not depend on any other constants, since it also has to work on Earth-size Kerbin. I\u0027d like to know how exactly MechJeb calculates it\u0027s turn, maybe it\u0027d help.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1) Get your current altitude and subtract the altitude of where you want to start turning. If its negative go straight up instead.\u003C/p\u003E\u003Cp\u003E2) Choose an altitude where you want to stop turning and subtract the altitude where you start, then divide the value from 1) by that number. Think of something clever for when you\u0027re above the turn end that doesnt cause bugs.\u003C/p\u003E\u003Cp\u003E3) Vessel specific: Figure out some function that maps from [0,1] -\u0026gt; [90,0] for your pitch angle and use it on the value from 2)\u003C/p\u003E\u003Cp\u003EYou could try a similiar function of altitude to define a target speed or thrust setting\u003C/p\u003E\u003Cp\u003ETo prevent the angle of attack getting out of hand compute the angle between your prograde vector and the vector you want to lock onto. If that exceeds some safety limit then only change steering up to that point.\u003C/p\u003E\n"},{"CreatedByName":"schoff123","CreatedById":71389,"CreatedDateTime":"2013-11-06T03:39:17Z","Content":"\n\u003Cp\u003EI don\u0027t know if this has been addressed since the beginning versions, but has the issue with loading programs been fixed? i used to write a program and then it would be gone whenever i went into the VAB and back onto the launch pad, or even reverted to that same launch. Do you have to start an archive before hand, then create a program file and save it to that archive?\u003C/p\u003E\n"},{"CreatedByName":"Draft","CreatedById":72633,"CreatedDateTime":"2013-11-06T03:50:05Z","Content":"\n\u003Cp\u003EMake sure to write your programs to the archive volume (aka volume 0) if you want any craft besides that specific iteration to be able to use it.\u003C/p\u003E\n"},{"CreatedByName":"schoff123","CreatedById":71389,"CreatedDateTime":"2013-11-06T04:02:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Draft\u0022 data-cite=\u0022Draft\u0022\u003E\u003Cdiv\u003EMake sure to write your programs to the archive volume (aka volume 0) if you want any craft besides that specific iteration to be able to use it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eand how do you direct it to save it in that specific archive volume?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-11-06T07:28:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022schoff123\u0022 data-cite=\u0022schoff123\u0022\u003E\u003Cdiv\u003Eand how do you direct it to save it in that specific archive volume?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf making a new program from scratch:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eswitch to archive.\u003Cbr\u003Eedit programname.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf you have a program already on the local volume and want to move it to the archive;\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ecopy programname to archive.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"JoCRaM","CreatedById":84138,"CreatedDateTime":"2013-11-06T13:06:07Z","Content":"\n\u003Cp\u003EkOS9.0 is the first and only plugin in my game.\u003C/p\u003E\u003Cp\u003EI had a SPH (PRELAUNCH) plane on the grass by the runway, a VAB plane (LANDED) on the runway and a VAB rocket in space in a comfortable orbibt around kerbin, all three with space computers.\u003C/p\u003E\u003Cp\u003EI\u0027d been playing with rotaions and vectors, and had finally worked out the formulae I wanted. I left it in the rocket console when I went to bed.\u003C/p\u003E\u003Cp\u003EI woke in the morning to find myself statring at a catastrophic failure for my rocket - despite being in orbit it had, apparently, collided with the launchpad. when I switched to the spaceplane on the runway, it blew up. the capsule was launched into the air, and then vapourised. I swithced to the remaining plance, it too blew apart. the capsule travelled (\u0022skimmed\u0022) across the grass without any rotation or deceleration at ~19m/s.\u003C/p\u003E\u003Cp\u003Ethe revert to launch option allowed me to go back to this about to explode plane, and goging to the space center and switching to the plance also resulted in it exploding\u003C/p\u003E\u003Cp\u003EI put a launch towered rocket on the pad (which gave an almighty lean on physics start) and was then able to switch to the plane which behaved normally.\u003C/p\u003E\n"},{"CreatedByName":"AbeS","CreatedById":80644,"CreatedDateTime":"2013-11-06T13:42:23Z","Content":"\n\u003Cp\u003EWhen running some programs from the archive it says Error on line 0: Syntax Error. But there is not any syntax error! \u003C/p\u003E\u003Cp\u003EI run another program that has the same thing on line 0 and it runs just fine?? Does anyone know about this error?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-11-06T13:49:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AbeS\u0022 data-cite=\u0022AbeS\u0022\u003E\u003Cdiv\u003EWhen running some programs from the archive it says Error on line 0: Syntax Error. But there is not any syntax error! \u003Cp\u003EI run another program that has the same thing on line 0 and it runs just fine?? Does anyone know about this error?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s impossible to give a concrete answer without seeing the code, but here\u0027s one quick thing that may help explain it:\u003C/p\u003E\u003Cp\u003EWhen KOS tells you there\u0027s an error on a line number, the line number it reports to you is often utterly wrong, especially if it\u0027s saying line number 0. Just because it says line 0 doesn\u0027t mean it really is line 0. It could be anywhere in the program.\u003C/p\u003E\u003Cp\u003EThe line number problem is a bug that seems especially difficult to get rid of, as Kevin keeps claiming it\u0027s fixed in each release and yet it keeps happening.\u003C/p\u003E\n"},{"CreatedByName":"AbeS","CreatedById":80644,"CreatedDateTime":"2013-11-06T14:09:29Z","Content":"\n\u003Cp\u003EHere\u0027s the code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset Final to 250000.\u003Cbr\u003E\u003Cbr\u003Eset t to 0.\u003Cbr\u003ELock throttle to t.\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003EPrint 3. wait 1.\u003Cbr\u003EPrint 2. wait 1.\u003Cbr\u003EPrint 1. wait 1.\u003Cbr\u003Eset t to 1.\u003Cbr\u003Elock steering to up.\u003Cbr\u003EPrint \u0022Launch!\u0022.\u003Cbr\u003Estage.\u003Cbr\u003E\u003Cbr\u003Eif stage:solidfuel \u0026gt; 0 {\u003Cbr\u003E\tset SRB to 1.\u003Cbr\u003E\t}.\u003Cbr\u003Eif stage:solidfuel \u0026lt; 1 {\u003Cbr\u003E\tset SRB to 0.\u003Cbr\u003E\t}.\u003Cbr\u003E\u003Cbr\u003Ewhen stage:solidfuel = 0 AND SRB = 1 then {\u003Cbr\u003E\tstage.\u003Cbr\u003E\tset SRB to 0.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Ewhen altitude \u0026gt; 500 {\u003Cbr\u003E\tlock pVal to -1*(1.25*(altitude/1000)\u002B(45*(apoapsis/Final)^2)).\u003Cbr\u003E\tlock steering to up \u002B R(0,0,180) \u002B R(0,pVal,0).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Euntil apoapsis\u0026gt;0.9*Final {\u003Cbr\u003E\tif stage:liquidfuel=0 {stage.}.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Elock steering to prograde.\u003Cbr\u003Eset t to 0.5.\u003Cbr\u003E\u003Cbr\u003Euntil apoapsis\u0026gt;Final {\u003Cbr\u003E\tif stage:liquidfuel=0 {stage.}.\u003Cbr\u003E}.\u003Cbr\u003Eset t to 0.\u003Cbr\u003E\u003Cbr\u003Euntil altitude \u0026gt; 105000 {\u003Cbr\u003E\tif apoapsis \u0026lt; Final and t\u0026lt;0.1 {set t to t\u002B0.025.}.\u003Cbr\u003E\tif apoapsis \u0026gt; Final {set t to 0.}.\u003Cbr\u003E\tif stage:liquidfuel=0 {stage.}.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI made this program just to test Stiggles function and KOS refuses to run it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2013-11-06T17:48:30Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EWHEN BCount \u0026lt; 99 THEN PRINT BCount \u002B \u00C3\u00A2\u00E2\u201A\u00AC\u00C5\u201C bottles of beer on the wall\u00C3\u00A2\u00E2\u201A\u00AC\u00C2.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ECheck whether all when statements have a \u0022then\u0022.\u003C/p\u003E\u003Cp\u003ERegards, Andreas\u003C/p\u003E\n"},{"CreatedByName":"AbeS","CreatedById":80644,"CreatedDateTime":"2013-11-06T18:17:14Z","Content":"\n\u003Cp\u003EStupid me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E all the languages are confusing me! Thanks! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Astral_Nomad","CreatedById":69478,"CreatedDateTime":"2013-11-06T19:17:02Z","Content":"\n\u003Cp\u003Enever mind.. i got my answer.. thanks.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-11-06T19:21:06Z\u0022 title=\u002211/06/2013 07:21  PM\u0022 data-short=\u002210 yr\u0022\u003ENovember 6, 2013\u003C/time\u003E by Astral_Nomad\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ANWRocketMan","CreatedById":65251,"CreatedDateTime":"2013-11-06T22:12:52Z","Content":"\n\u003Cp\u003EJust a quick question:\u003C/p\u003E\u003Cp\u003ESo, my scripts are saved to the Archive volume fine, but can new volumes be saved permanently? Or do I have to copy all the necessary scripts at the start of each launch? It doesn\u0027t seem to save new volumes, even after saving the game, starting the launch etc.\u003C/p\u003E\n"},{"CreatedByName":"Sma","CreatedById":67377,"CreatedDateTime":"2013-11-06T22:39:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ANWRocketMan\u0022 data-cite=\u0022ANWRocketMan\u0022\u003E\u003Cdiv\u003EJust a quick question:\u003Cp\u003ESo, my scripts are saved to the Archive volume fine, but can new volumes be saved permanently? Or do I have to copy all the necessary scripts at the start of each launch? It doesn\u0027t seem to save new volumes, even after saving the game, starting the launch etc.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs far as I understand it you have to copy programs from your rocket(s) volume to the archive to save it permanently. Though I thought I saw somewhere something about them being saved in the quicksave/persistant file but maybe that was just variables. I\u0027ve not really tested to see if my programs stay on the volume if I launch a rocket, get to orbit, save then reload.\u003C/p\u003E\n"}]}