{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":51,"Articles":[{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-08-04T04:17:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Shukinen\u0022 data-cite=\u0022Shukinen\u0022\u003E\u003Cdiv\u003Ehello there, i am trying to make a \u0022surface info\u0022 screen for my ascent little prog, the issue i get is that the number just keep flickering...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFirst, don\u0027t blank the whole screen. Print the static bits of the interface once at load, then just use PRINT AT to update the parts that are changing. Second, use several WAIT 0.001 statements to force the program to jump to the next tick \u003Cem\u003Ebefore\u003C/em\u003E blanking out a line you need to refresh. I explain it more in \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68089-0-24-kOS-Scriptable-Autopilot-System-v0-13-1-2014-7-18?p=1313427\u0026amp;viewfull=1#post1313427\u0022 rel=\u0022external nofollow\u0022\u003Ethis post\u003C/a\u003E I made earlier. I never got a better idea from the devs so this is what I do and it works, with the slightest of slowdown in refresh times of course.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-08-04T06:28:27Z","Content":"\n\u003Cp\u003EI\u0027m still wondering how to set WARP to PHYSICS mode. I tried banging a few commands into the console and spent a few minutes looking through the source. No idea.\u003C/p\u003E\n"},{"CreatedByName":"Panichio","CreatedById":2858,"CreatedDateTime":"2014-08-04T21:46:19Z","Content":"\n\u003Cp\u003EI just spent too long reading through the kOS github page and can\u0027t see anyway to find, when my maneuver node gets me into say Mun\u0027s SOI, the periapsis of that fly-by. It would be incredibly useful to be able to have a loop add a small number to node:prograde until that periapsis meets a certain criteria like less than or equal to. Is there any other way to find that periapsis for kOS to use as a variable?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-05T01:07:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Panichio\u0022 data-cite=\u0022Panichio\u0022\u003E\u003Cdiv\u003EI just spent too long reading through the kOS github page and can\u0027t see anyway to find, when my maneuver node gets me into say Mun\u0027s SOI, the periapsis of that fly-by. It would be incredibly useful to be able to have a loop add a small number to node:prograde until that periapsis meets a certain criteria like less than or equal to. Is there any other way to find that periapsis for kOS to use as a variable?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003EIf you are NOT going to execute any manuever nodes and are already on a path drifting toward an encounter, it works like so:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EEach Orbit has a suffix called PATCHES which is a LIST of all the follow-on ORBITs that represent the next patches of orbit after the current one. For example, if you are currently in an orbit of Kerbin, which will pass through Mun\u0027a SOI on a gravity slingshot, back into Kerbin\u0027s SOI, and then escape Kerbin\u0027s SOI into the Sun\u0027s SOI, then you\u0027d have a data structure like this:\u003C/p\u003E\u003Cp\u003ESHIP:Orbit describes your current orbit patch in Kerbin.\u003C/p\u003E\u003Cp\u003ESET futurePatches to SHIP:Orbit:Patches makes a LIST of the orbits you\u0027ll transition into later, in which:\u003C/p\u003E\u003Cp\u003EfuturePatches[0] describes the Mun orbit patch of your flyby gravity slingshot (and therefore its :PERIAPSIS will be the closest approach to the Mun)\u003C/p\u003E\u003Cp\u003EfuturePatches[1] describes the Kerbin orbit patch after the flyby of the mun, in which you are on an escape trajectory out of Kerbin\u0027s SOI.\u003C/p\u003E\u003Cp\u003EfuturePatches[2] describes the Sun orbit after you leave Kerbin\u0027s SOI.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENow, what about when you have a manuever node?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EWhen you have a maneuver node, it will have a suffix called :ORBIT, which is the predicted orbit patch that begins just after the maneuver node burn will have occured, assuming you somehow managed to execute the maneuver node as predicted with perfect precision.\u003C/p\u003E\u003Cp\u003EThis Manuever node\u0027s :ORBIT is just like any other Orbit, in that it too will have a :PATCHES suffix that you can use to see its future transitions.\u003C/p\u003E\n"},{"CreatedByName":"Panichio","CreatedById":2858,"CreatedDateTime":"2014-08-05T04:57:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003EIf you are NOT going to execute any manuever nodes and are already on a path drifting toward an encounter, it works like so:\u003C/strong\u003E\u003Cp\u003EEach Orbit has a suffix called PATCHES which is a LIST of all the follow-on ORBITs that represent the next patches of orbit after the current one. For example, if you are currently in an orbit of Kerbin, which will pass through Mun\u0027a SOI on a gravity slingshot, back into Kerbin\u0027s SOI, and then escape Kerbin\u0027s SOI into the Sun\u0027s SOI, then you\u0027d have a data structure like this:\u003C/p\u003E\u003Cp\u003ESHIP:Orbit describes your current orbit patch in Kerbin.\u003C/p\u003E\u003Cp\u003ESET futurePatches to SHIP:Orbit:Patches makes a LIST of the orbits you\u0027ll transition into later, in which:\u003C/p\u003E\u003Cp\u003EfuturePatches[0] describes the Mun orbit patch of your flyby gravity slingshot (and therefore its :PERIAPSIS will be the closest approach to the Mun)\u003C/p\u003E\u003Cp\u003EfuturePatches[1] describes the Kerbin orbit patch after the flyby of the mun, in which you are on an escape trajectory out of Kerbin\u0027s SOI.\u003C/p\u003E\u003Cp\u003EfuturePatches[2] describes the Sun orbit after you leave Kerbin\u0027s SOI.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENow, what about when you have a manuever node?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EWhen you have a maneuver node, it will have a suffix called :ORBIT, which is the predicted orbit patch that begins just after the maneuver node burn will have occured, assuming you somehow managed to execute the maneuver node as predicted with perfect precision.\u003C/p\u003E\u003Cp\u003EThis Manuever node\u0027s :ORBIT is just like any other Orbit, in that it too will have a :PATCHES suffix that you can use to see its future transitions.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, thank you! I forgot how to access lists. Stupid me. I only have one problem now, though. I can get futurePatches[1]:periapsis just fine and it returns the correct number for both current orbit and orbit after a maneuver but when I print futurePatches[1] kOS returns \u0022ORBIT of \u0026lt;unnamed\u0026gt;\u0022. Why does it do that?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-05T05:20:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Panichio\u0022 data-cite=\u0022Panichio\u0022\u003E\u003Cdiv\u003EAh, thank you! I forgot how to access lists. Stupid me. I only have one problem now, though. I can get futurePatches[1]:periapsis just fine and it returns the correct number for both current orbit and orbit after a maneuver but when I print futurePatches[1] kOS returns \u0022ORBIT of \u0026lt;unnamed\u0026gt;\u0022. Why does it do that?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s trying to say \u0022this is an orbit of ....\u0022 where the \u0022....\u0022 turns out to be the maneuver node rather than the vessel. And maneuver nodes don\u0027t have names so it doesn\u0027t have anything to print there.\u003C/p\u003E\n"},{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2014-08-07T13:28:13Z","Content":"\n\u003Cp\u003ESorry if these questions have been answered before, but I didn\u0027t find answers for them by searching the forum or in the kOS docs.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EWhat is the current state of Remote Tech 2 integration? Is kOS in any way affected by signal delay? If no, is there some way to emulate it, for instance by waiting for an action group to be used, an event that might be delayed by RT2? \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EIf I have a program running in kOS and switch to another vessel outside the current physics range, and then back again, will the program still be running or do I need to restart it? What if I exit KSP? \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThanks in advance!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-07T17:55:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022soulsource\u0022 data-cite=\u0022soulsource\u0022\u003E\u003Cdiv\u003ESorry if these questions have been answered before, but I didn\u0027t find answers for them by searching the forum or in the kOS docs.\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EWhat is the current state of Remote Tech 2 integration? Is kOS in any way affected by signal delay? If no, is there some way to emulate it, for instance by waiting for an action group to be used, an event that might be delayed by RT2? \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s still not there by default but it is easy to simulate the delay - just google the speed of light in meters per second, and multiply it by Kerbin:Distance to get the number of seconds a signal should take to make a one-way trip between home and the craft. If you want to simulate that you need a two-way communication, then wait twice as long as that.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cul\u003E\u003Cli\u003EIf I have a program running in kOS and switch to another vessel outside the current physics range, and then back again, will the program still be running or do I need to restart it? What if I exit KSP? \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is *supposed* to be supported, but I\u0027m not sure it\u0027s really working well. The entire load/save system needs looking at at some point.\u003C/p\u003E\n"},{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2014-08-08T08:54:31Z","Content":"\n\u003Cp\u003EThanks for the answer! Regarding the delay, I\u0027ve figured that I can just make kOS wait for an action group to change and then press the corresponding key. The action group will get the proper delay from Remote Tech. This is especially useful when running multiple commands in rapid succession. \u003C/p\u003E\u003Cp\u003EI stumbled across another issue with kOS on Linux (or more precisely: with Unity on Linux...). While the new kOS.dll file works fine for RETURN, canceling a running program does not seem to work. CTRL\u002Bc does nothing, at least for me.\u003C/p\u003E\n"},{"CreatedByName":"mecki","CreatedById":116929,"CreatedDateTime":"2014-08-08T09:38:57Z","Content":"\n\u003Cp\u003EIs it possible to fly a proper gravity turn with Real Solar System and FAR with this?\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-08-08T09:43:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mecki\u0022 data-cite=\u0022mecki\u0022\u003E\u003Cdiv\u003EIs it possible to fly a proper gravity turn with Real Solar System and FAR with this?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, but calculating a proper gravity turn is a very difficult affair. The equations cant be solved analytically, so you have to run simulations until you find one that works.\u003C/p\u003E\u003Cp\u003EMost people approximate a gravity turn with something like a sqrt curve which gives reasonable results.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-08-08T11:13:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022soulsource\u0022 data-cite=\u0022soulsource\u0022\u003E\u003Cdiv\u003E...and then press the corresponding key.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWait kOS can send keystrokes to the game?\u003C/p\u003E\n"},{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2014-08-08T14:36:34Z","Content":"\n\u003Cp\u003ESorry for not expressing this more clearly. kOS can be set to either do something ON an action group state change, or can be set to WAIT for an action group. Remote Tech on the other hand delays action group commands by the signal delay. With \u0022corresponding key\u0022 I meant the keyboard keys 1 to 0, which activate the action groups. \u003C/p\u003E\u003Cp\u003ESo, while the craft would react immediately to commands typed into the kOS console, by letting kOS first WAIT for an action group, the further execution of the kOS script can be delayed by exactly the same signal delay (taking into account the full signal path, counting the distance between the relays) as other commands. Of course this is just for roleplaying purposes ;-)\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-08-08T15:39:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ralathon\u0022 data-cite=\u0022Ralathon\u0022\u003E\u003Cdiv\u003EYes, but calculating a proper gravity turn is a very difficult affair. The equations cant be solved analytically, so you have to run simulations until you find one that works.\u003Cp\u003EMost people approximate a gravity turn with something like a sqrt curve which gives reasonable results.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFWIW, I\u0027m going to be working on integrating FAR with kOS, so that maybe we can get some aero-data that\u0027s useful. That may mean exposing more aero-data in general (useful bits like Q, AoA, etc., etc.) if they are not already exposed, and if they are readily accessible or reasonably calculated from the KSP API. Then you could program something in to make your throttle and pitch adjustments with bounds at certain values of Q and/or AoA. erendrake said he spoke with ferram, and trying to reach terminal velocity in FAR would be counter-productive to maintaining even short-term vessel coherence, although I would certainly expose FAR\u0027s terminal velocity values. I\u0027m still digging through both the kOS code and the FARAPI code to see what will need to be done. Not to mention trying to learn about aerodynamics, orbital mechanics, and C#...\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-08T18:41:06Z","Content":"\n\u003Cp\u003E@madlemur, can you tell us what the acronyms \u0022Q\u0022 and \u0022AoA\u0022 are? I\u0027m guessing AoA might be Angle of Attack? In which case, you can already get the SHIP:VELOCITY:SURFACE which is the way you\u0027re going, and you can get vectors pointing in the ship-relative axes with (SHIP:FACING*V(1,0,0)), (SHIP:FACING*V(0,1,0), and (SHIP:FACING*V(0,0,1)). Putting all that together with some dot product math it should be possible to obtain your angle of attack, even in kerboscript today. (Basically, take the component of the velocity that is in your ship\u0027s \u0022top\u0022 facing direction, by dot-producting with one of those 3 axis vectors (I forgot which one is \u0022top\u0022 in the SPH-built ships). It will tell you how much your velocity is going upward or downward relative to your facing. Then to transform that into an angle, get the arcsin() of the triangle in which the vertical leg is the vertical velocity component you created, and the hypotenuse is the length of SHIP:VELOCITY:SURFACE.) This is all doable today in a single expression in kOS without any changes behind the scenes.\u003C/p\u003E\u003Cp\u003EFor example, it might look something like this:\u003C/p\u003E\u003Cp\u003ELOCK AoA TO arcsin( VDOT(SHIP:FACING*V(0,1,0),SHIP:VELOCITY:SURFACE) / SHIP:VELOCITY:SURFACE:MAG ).\u003C/p\u003E\u003Cp\u003E(Although I may have the V(0,1,0) wrong and it\u0027s actually V(1,0,0) or V(0,0,1) depending on which way the axes go for spaceplane hangar ships.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-08T18:45:35Z\u0022 title=\u002208/08/2014 06:45  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 8, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-08-08T19:32:02Z","Content":"\n\u003Cp\u003EIt appears my reply may have been eaten... Q is the pressure on the hull. It is based on the air density and surface velocity. If you watch the FAR GUI, it triggers the \u0022High Dyn Pressure\u0022 warning when q \u0026gt; 40000. If I can find or compute some of the other data points in Stock, I\u0027ll also surface the various coefficients that FAR provides. I don\u0027t want to limit any data to only FAR users.\u003C/p\u003E\n"},{"CreatedByName":"LessrOf2Weevils","CreatedById":81058,"CreatedDateTime":"2014-08-08T21:53:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003Ein v0.11 We will have the following values in ORBIT\u003Cp\u003E\u003Cstrong\u003EAPOAPSIS\u003C/strong\u003E - Altitude\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPERIAPSIS\u003C/strong\u003E - Altitude\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EBODY\u003C/strong\u003E - Reference Body, has a bunch of its own data. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPERIOD\u003C/strong\u003E - in seconds\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EINCLINATION\u003C/strong\u003E \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EECCENTRICITY\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESEMIMAJORAXIS\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESEMIMINORAXIS\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ETRANSITION\u003C/strong\u003E - How the current orbit patch will end\u003C/p\u003E\u003Cp\u003E INITIAL,\u003C/p\u003E\u003Cp\u003E FINAL,\u003C/p\u003E\u003Cp\u003E ENCOUNTER,\u003C/p\u003E\u003Cp\u003E ESCAPE,\u003C/p\u003E\u003Cp\u003E MANEUVER,\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPATCHES\u003C/strong\u003E - all of the proceeding orbit patches. which have all of these same values.\u003C/p\u003E\u003Cp\u003Ewe have an open issue for adding more to orbit. feel free to add your thoughts\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/erendrake/KOS/issues/18\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/issues/18\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI feel like a complete noob asking this, but how do you access these values. I\u0027ve tried and number of different prefix combinations, but none seem to work.\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-08T23:12:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022LessrOf2Weevils\u0022 data-cite=\u0022LessrOf2Weevils\u0022\u003E\u003Cdiv\u003EI feel like a complete noob asking this, but how do you access these values. I\u0027ve tried and number of different prefix combinations, but none seem to work.\u003Cp\u003EThanks\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFor current orbit your ship is drifting on: SHIP:ORBIT (i.e. SHIP:ORBIT:PERIOD).\u003C/p\u003E\u003Cp\u003EFor the orbit that will start after a manuever node is executed, assuming it gets executed exactly as planned:\u003C/p\u003E\u003Cp\u003ESET mynode to NODE( time:seconds \u002B 120, 0, 0, 100 ).\u003C/p\u003E\u003Cp\u003EADD mynode.\u003C/p\u003E\u003Cp\u003Eprint \u0022After upcoming burn, period will be \u0022 \u002B mynode:ORBIT:PERIOD.\u003C/p\u003E\n"},{"CreatedByName":"amiavamp","CreatedById":116015,"CreatedDateTime":"2014-08-09T09:08:53Z","Content":"\n\u003Cp\u003EI\u0027ve been playing KSP for a while now, and I decided to try out kOS after attempting to land a probe on Ike with RemoteTech\u0027s signal delay. (I did manage to touch down minus an engine after some F5/F9 spam, but that\u0027s beside the point.) I\u0027ve spent the past few days constructing and tweaking some (extremely novice) scripts to carry a probe from takeoff, to orbit, to reentry, and to landing on Kerbin. I was bustling with questions when I started with kOS, but I decided to try to find answers to all of them on my own instead of pestering the forum. However, I\u0027ve unfortunately run into a few dead ends that are stymieing my progress toward creating a full catalog of autopilots. Hopefully this post isn\u0027t too much of a wall of text.\u003C/p\u003E\u003Cp\u003E1. What is the simplest way for a landing script to detect whether the surface beneath is land or water? I\u0027ve noticed that both Kerbal Engineer and the IVA instruments report the radar altitude as being below sea level if water is beneath the craft. This is an example of how I\u0027ve been doing it so far:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EIF ALTITUDE \u0026gt; ALT:RADAR {\u003Cbr\u003E    SET altFlag TO 1.\u003Cbr\u003E    WAIT UNTIL ALTITUDE \u0026lt; 400.\u003Cbr\u003E}\u003Cbr\u003EELSE {\u003Cbr\u003E    SET altFlag TO 2.\u003Cbr\u003E    WAIT UNTIL ALT:RADAR \u0026lt; 400.\u003Cbr\u003E}.\u003Cbr\u003EUNTIL altFlag = 3 {\u003Cbr\u003E    IF altFlag = 1 AND ALTITUDE \u0026lt; 15 AND VERTICALSPEED \u0026gt; -1 AND VERTICALSPEED \u0026lt; 1 { SET altFlag TO 3. }.\u003Cbr\u003E    IF altFlag = 2 AND ALT:RADAR \u0026lt; 15 AND VERTICALSPEED \u0026gt; -1 AND VERTICALSPEED \u0026lt; 1 { SET altFlag TO 3. }.\u003Cbr\u003E    WAIT 0.001.\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHowever, I get the feeling that the usage of variables as arbitrary flags is not a best coding practice, and every character typed further strains storage space. Is there a more concise method to doing this landing procedure?\u003C/p\u003E\u003Cp\u003E2. My scripts seem to have a real problem with throttle control. Unless I put \u0022SET CONFIG:SAFE TO FALSE.\u0022 somewhere in the script, I inevitably get an error message about a value being NaN. This is probably something that can be worked around with the correct logic, although I\u0027m not sure how to set it up. This is one of the bits of code that is causing the error:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EIF vesselAcceleration \u0026gt; 0 AND vesselAcceleration \u0026lt; 18 AND throttleValue \u0026lt; 1 {\u003Cbr\u003E        SET throttleValue TO throttleValue \u002B 0.01.\u003Cbr\u003E    }.\u003Cbr\u003E    IF vesselAcceleration \u0026gt; 0 AND vesselAcceleration \u0026gt; 18 AND throttleValue \u0026gt; 0.01 {\u003Cbr\u003E        SET throttleValue TO throttleValue - 0.01.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI assume the issue is being caused by \u0022throttleValue \u002B 0.01\u0022 equaling a number greater than 1 at some points. Is there a way to avoid the issue without disabling CONFIG:SAFE or preventing the craft from using the entire range of throttle?\u003C/p\u003E\u003Cp\u003E3. I have a script that is set up to detect the types of fuel that are present on a vessel for the purposes of staging when out of fuel. This is in an attempt to make a more general \u0022takeoff and enter orbit\u0022 script instead of needing one that is specifically tailored for each vessel. However, the method I am using simply refuses to work. This is the relevant snippet of code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ESET fuelType TO 0. // 0 = none, 1 = solid, 2 = liquid, 3 = both\u003Cbr\u003EUNTIL APOAPSIS \u0026gt;= targetAltitude {\u003Cbr\u003E    IF STAGE:SOLIDFUEL \u0026lt; 0.02 AND (fuelType = 1 OR fuelType = 3){\u003Cbr\u003E        PRINT \u0022No solid fuel. Attempting to stage.\u0022.\u003Cbr\u003E        STAGE.\u003Cbr\u003E    }.\u003Cbr\u003E    IF STAGE:LIQUIDFUEL \u0026lt; 0.02 AND (fuelType = 2 OR fuelType = 3){\u003Cbr\u003E        PRINT \u0022No liquid fuel. Attempting to stage.\u0022.\u003Cbr\u003E        STAGE.\u003Cbr\u003E    }.\u003Cbr\u003E    IF STAGE:SOLIDFUEL \u0026gt; 0 AND STAGE:LIQUIDFUEL = 0 { SET fuelType TO 1. }.\u003Cbr\u003E    IF STAGE:SOLIDFUEL = 0 AND STAGE:LIQUIDFUEL \u0026gt; 0 { SET fuelType TO 2. }.\u003Cbr\u003E    IF STAGE:SOLIDFUEL \u0026gt; 0 AND STAGE:LIQUIDFUEL \u0026gt; 0 { SET fuelType TO 3. }.\u003Cbr\u003E    WAIT 0.001.\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe \u0022fuelType\u0022 variable works as intended - it changes to the correct value when a type of fuel runs dry. However, the IF statements that contain the STAGE function never trigger. I\u0027ve tried several variants of this, including using \u0022NOT fuelType = 2\u0022 or \u0022fuelType \u0026lt;\u0026gt; 2\u0022 for the solid fuel section. I\u0027ve also tried moving the part that sets the value of \u0022fuelType\u0022 to the top of the loop. Nothing seems to work. However, if I remove the \u0022fuelType\u0022 requirements, the stages trigger, as do the print messages. Previously, I\u0027d been using an arbitrary flag value to control when each type of fuel should have its quantity checked, but I would really like to have a script that requires less modification to transfer between vessels.\u003C/p\u003E\u003Cp\u003E4. How do I prevent WHEN statements from interrupting other commands? When I discovered that WHEN statements stop and never resume UNTIL and WAIT UNTIL statements, I started to avoid using WHEN as much as possible. This leads to some repetitive code, which I would also like to avoid - sometimes, I need the same constant condition check for multiple UNTIL loops in a script, like being able to stage both during ascent and during orbital maneuvers. I understand that Kerboscript is not truly multithreaded and instead can only process one action at a time, but it seems odd how it breaks other loops entirely. For example, if I have \u0022WAIT UNTIL maneuverNode:BURNVECTOR:MAG \u0026lt; 0.5.\u0022 running to determine when to cut the throttle during a burn, and then a WHEN statement triggers before it\u0027s done, the program will just instantly end as soon as the WHEN loop is over.\u003C/p\u003E\u003Cp\u003EI would greatly appreciate any help with these matters.\u003C/p\u003E\n"},{"CreatedByName":"Entropius","CreatedById":104709,"CreatedDateTime":"2014-08-09T09:21:51Z","Content":"\n\u003Cp\u003EIs it possible for a kOS script to suspend a Kerbal Alarm Clock event, like a reduction in warp?\u003C/p\u003E\u003Cp\u003ESometimes I execute a kOS script that I know has some built-in warp controls and won\u0027t overshoot the node, but KAC doesn\u0027t know that, so I have to let KAC halt the warp, then I manually resume warp. Is kOS integration with KAC possible?\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-08-09T11:32:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Entropius\u0022 data-cite=\u0022Entropius\u0022\u003E\u003Cdiv\u003ESometimes I execute a kOS script that I know has some built-in warp controls and won\u0027t overshoot the node, but KAC doesn\u0027t know that, so I have to let KAC halt the warp, then I manually resume warp. Is kOS integration with KAC possible?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESounds like you\u0027re using KAC to automatically create an alarm for the maneuver node? If so, afterwards you can edit the alarm properties so that it only notifies you, not mess with the warp. Or you can set this when you create the maneuver node alarm if you do it manually\u003C/p\u003E\n"},{"CreatedByName":"Entropius","CreatedById":104709,"CreatedDateTime":"2014-08-09T12:45:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003ESounds like you\u0027re using KAC to automatically create an alarm for the maneuver node? If so, afterwards you can edit the alarm properties so that it only notifies you, not mess with the warp. Or you can set this when you create the maneuver node alarm if you do it manually\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile I technically could do that, it\u0027s even more inconvenient than what I\u0027m currently doing (letting KAC halt the warp, and manually resuming it till my kOS script halts it). I swap back and forth a bunch between manual control and my kOS auto-node script. I was a bit much to expect, but I thought it was worth asking anyway.\u003C/p\u003E\u003Cp\u003EOn an unrelated note, does anybody know the proper units for engine fuel flow? The \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/engine/index.html\u0022 rel=\u0022external nofollow\u0022\u003Edocumentation\u003C/a\u003E doesn\u0027t seem to know, and speculates it\u0027s liters/second, but I\u0027m not sure that would be useful. But on the other hand if it were in mass/second (metric tons/sec?), you could actually use it in the Tsiolkovsky rocket equation.\u003C/p\u003E\n"},{"CreatedByName":"undercoveryankee","CreatedById":103505,"CreatedDateTime":"2014-08-09T15:06:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Entropius\u0022 data-cite=\u0022Entropius\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOn an unrelated note, does anybody know the proper units for engine fuel flow? The \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/engine/index.html\u0022 rel=\u0022external nofollow\u0022\u003Edocumentation\u003C/a\u003E doesn\u0027t seem to know, and speculates it\u0027s liters/second, but I\u0027m not sure that would be useful. But on the other hand if it were in mass/second (metric tons/sec?), you could actually use it in the Tsiolkovsky rocket equation.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s probably in in-game units of resource/second, where 1 unit of a resource represents whatever the resource author wants it to. E.g. 1 liter (a lot of mods), 24 kerbal-hours (TAC Life Support 0.8 and below) or who knows what else. The stock fuels correspond better with the displayed sizes of the tanks if each unit takes up a couple of liters, but I don\u0027t recall Squad ever quoting an official number. Multiply by the density of the resource to get tons/sec.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-09T17:32:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022amiavamp\u0022 data-cite=\u0022amiavamp\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E1. What is the simplest way for a landing script to detect whether the surface beneath is land or water? \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYour technique is correct. If SHIP:ALTITUDE \u0026gt; ALT:RADAR, then you have ground terrain under you, else you are over water. To detect if you are landed, try using STATUS instead and check for if its value is either \u0022LANDED\u0022 or \u0022SPLASHED\u0022.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EHowever, I get the feeling that the usage of variables as arbitrary flags is not a best coding practice, and every character typed further strains storage space. Is there a more concise method to doing this landing procedure?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat you\u0027re doing with the flags is fine. The error must come from somewhere else.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E2. My scripts seem to have a real problem with throttle control. Unless I put \u0022SET CONFIG:SAFE TO FALSE.\u0022 somewhere in the script, I inevitably get an error message about a value being NaN. This is probably something that can be worked around with the correct logic, although I\u0027m not sure how to set it up. This is one of the bits of code that is causing the error:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EIF vesselAcceleration \u0026gt; 0 AND vesselAcceleration \u0026lt; 18 AND throttleValue \u0026lt; 1 {\u003Cbr\u003E        SET throttleValue TO throttleValue \u002B 0.01.\u003Cbr\u003E    }.\u003Cbr\u003E    IF vesselAcceleration \u0026gt; 0 AND vesselAcceleration \u0026gt; 18 AND throttleValue \u0026gt; 0.01 {\u003Cbr\u003E        SET throttleValue TO throttleValue - 0.01.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThat bit of code *cannot* be causing the error \u0022Tried to push NaN into the stack\u0022. It might be *triggering* the error, but the error has to be caused by one of the places those variables (vesselAcceleration or throttleValue) is being set.\u003C/p\u003E\u003Cp\u003EI assume the issue is being caused by \u0022throttleValue \u002B 0.01\u0022 equaling a number greater than 1 at some points.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, that cannot be the cause of a NaN error. You don\u0027t get NaN for throttle values out of range. Instead for throttle values out of range, kOS just sets the real throttle to max or min. (if you say THROTTLE is 2, the actual throttle you\u0027ll get just caps out at 1 instead.)\u003C/p\u003E\u003Cp\u003ENaN, meaning \u0022Not a Number\u0022, is an acronym for how computers store the fact that a calculated value cannot be properly represented in real numbers. The floating point numbers kOS uses (and most computer programs use) are only capable of storing Real Numbers. If you try to calculate the square root of a negative number, for example, the computer can\u0027t store the result because the native number type doesn\u0027t do imaginary numbers. (There are more messy homebrewed number types that can do complex math, but the native low-level numbers computers use can\u0027t.)\u003C/p\u003E\u003Cp\u003EAnother place where you might get NaN is when using a math function call where you passed in an invalid input that\u0027s outside the range of values it can give an answer for. For example, there is no such thing as the arccos(1.001), because there\u0027s no angle at which the cosine of that angle is higher than 1. If you try to call arccos(1.001), you\u0027ll get a result of NaN.\u003C/p\u003E\u003Cp\u003ELook elsewhere in your code for either taking roots of negative numbers, or using inverse trig passing in values outside the range [-1,1]. It\u0027s probably one of those two things.\u003C/p\u003E\u003Cp\u003EIncedentally, this sort of problem (\u0022where is this runtime error coming from?\u0022) should get easier in the future, I hope. I spent the last few days working on an update to kOS that will have it trace backward from the compiled code to the original script source code line from which runtime errors happened. If it\u0027s approved and works, it would let you see \u0022oh, THAT\u0027s the math operation where it generated a NaN, right there, on line 15, column 24.\u0022\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E3. I have a script that is set up to detect the types of fuel that are present on a vessel for the purposes of staging when out of fuel. This is in an attempt to make a more general \u0022takeoff and enter orbit\u0022 script instead of needing one that is specifically tailored for each vessel. However, the method I am using simply refuses to work. This is the relevant snippet of code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ESET fuelType TO 0. // 0 = none, 1 = solid, 2 = liquid, 3 = both\u003Cbr\u003EUNTIL APOAPSIS \u0026gt;= targetAltitude {\u003Cbr\u003E    IF STAGE:SOLIDFUEL \u0026lt; 0.02 AND (fuelType = 1 OR fuelType = 3){\u003Cbr\u003E        PRINT \u0022No solid fuel. Attempting to stage.\u0022.\u003Cbr\u003E        STAGE.\u003Cbr\u003E    }.\u003Cbr\u003E    IF STAGE:LIQUIDFUEL \u0026lt; 0.02 AND (fuelType = 2 OR fuelType = 3){\u003Cbr\u003E        PRINT \u0022No liquid fuel. Attempting to stage.\u0022.\u003Cbr\u003E        STAGE.\u003Cbr\u003E    }.\u003Cbr\u003E    IF STAGE:SOLIDFUEL \u0026gt; 0 AND STAGE:LIQUIDFUEL = 0 { SET fuelType TO 1. }.\u003Cbr\u003E    IF STAGE:SOLIDFUEL = 0 AND STAGE:LIQUIDFUEL \u0026gt; 0 { SET fuelType TO 2. }.\u003Cbr\u003E    IF STAGE:SOLIDFUEL \u0026gt; 0 AND STAGE:LIQUIDFUEL \u0026gt; 0 { SET fuelType TO 3. }.\u003Cbr\u003E    WAIT 0.001.\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAt first glance this logic looks okay to me. Have you tried inserting print statements at the top of the loop to verify that all the relevant variable values are what you think they are? Usually if I have an if clause that should be triggering, but isn\u0027t, I diagnose it by inserting a print statement just before the if check that prints out the value of all the variables the conditional expression is using, so I can see if it\u0027s really using the values I think it is.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E4. How do I prevent WHEN statements from interrupting other commands? \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBy not using WHEN statements? Asynchronous flow, where you are interrupting the normal program flow by inserting a diversion into the WHEN clause before continuing with the rest of the mainline code is the *sole purpose* of a WHEN statement.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E When I discovered that WHEN statements stop and never resume UNTIL and WAIT UNTIL statements\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is simply not true. When the WHEN statement is finished, control should pick up where it left off in the main code, and that means continuing right where it left off in the middle of the UNTIL loop. It would only abort the loop if your WHEN block altered one of the variables that the UNTIL loop is using as its conditional check so the check\u0027s boolean value changes, but then that\u0027s correct behavior if it does that.\u003C/p\u003E\u003Cp\u003EWhat you might be expriencing is that flow won\u0027t continue until the WHEN statement is finished. THAT is true, but it\u0027s not what you said. (You claimed it would never resume the original statement and that\u0027s false. It will - but only when the WHEN statement is finished. You shouldn\u0027t be putting loops that are meant to run in the background in a WHEN. WHEN clauses should be designed to flow through fast and finish to the bottom.)\u003C/p\u003E\u003Cp\u003EThis is especially true because WHEN doesn\u0027t just interrupt the flow of your program. It actually interrupts the flow of the entire KSP simulation itself. If you put an infinite loop in your WHEN clause, it won\u0027t just stop your program - it will freeze-frame all of KSP and require killing and restarting KSP.\u003C/p\u003E\u003Cp\u003E(All mods are allowed to register an updater function that gets called once per animation frame by Unity. But the process of iterating over all the registered updater functions and calling all of them is single-threaded and therefore any misbehaving mod can freeze ALL the updates for the whole game if it never finishes its own update call.)\u003C/p\u003E\u003Cp\u003EThe WHEN clause allows users to write programs that can do this, because unlike with the rest of the program flow, WHEN is designed to run its flow all the way to the bottom before finishing the update (while the mainline code just runs 100 or so instructions and then waits for the next update to continue, the WHEN code runs all the way through to the bottom and is supposed to finish in a single animation update.)\u003C/p\u003E\u003Cp\u003EOne of the issues on the issues tracker is to make it explicitly notice when a WHEN clause is taking too long, and abort it with an error message telling the user what\u0027s going on and why and how they have to redesign their code.\u003C/p\u003E\u003Cp\u003E(edit: If your program logic is one in which you\u0027d LIKE to have a WHEN clause that behaves a bit like a background loop, I recommend looking into the PRESERVE keyword in the docs. It keeps the WHEN trigger around after it finishes, making it possible for it to get called again in the next update, and the next, and the next. This can make a sort of loop out of the WHEN clause, but its one that executes exactly one iteration per animation frame.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-09T17:39:01Z\u0022 title=\u002208/09/2014 05:39  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 9, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"WeirdCulture","CreatedById":76591,"CreatedDateTime":"2014-08-09T21:49:54Z","Content":"\n\u003Cp\u003EHi Guys, \u003C/p\u003E\u003Cp\u003Ei have some \u0022Issues\u0022,\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#A9A9A9;\u0022\u003E1.) I use RT2. And it seems that the craft only execute maneuver when a connection is established? is that Worked as Designed, or do i make any errors? I hoped i can upload a Program as long I have connection and then the craft will execute maneuvers even a Connection is not established. It seemsit woked the opposite way. I can \u0022upload\u0022 any program any time i want, but a connection is needed to executre maneuvers \u003C/span\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#A9A9A9;\u0022\u003E2.) I downloaded the latest from curse, At start i got the wrong version printet on the screen\u003C/span\u003E Meh! Layer 8 Problem\u003C/p\u003E\u003Cp\u003E3.) Awsome Mod!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-11T09:00:17Z\u0022 title=\u002208/11/2014 09:00  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 11, 2014\u003C/time\u003E by WeirdCulture\u003C/strong\u003E\n\u003C/span\u003E\n"}]}