{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":119,"Articles":[{"CreatedByName":"oliverjrose99","CreatedById":132956,"CreatedDateTime":"2015-04-06T21:10:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EYou have to click the \u0022go advanced\u0022 button when editing, and there will be an option to disable smileys. Franky, I think that\u0027s utterly backward. Actually showing the text you *really did* type is what I\u0027d call basic vanilla mode and invoking the option to do something fancy with it is what\u0027 I\u0027d call \u0022advanced\u0022. Not the other way around.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks. any idea how to fix my part problem?\u003C/p\u003E\n"},{"CreatedByName":"ThreePounds","CreatedById":116058,"CreatedDateTime":"2015-04-07T12:36:54Z","Content":"\n\u003Cp\u003EHello! I\u0027ve been playing around with kOS last night and wrote a few test scrips to get a feeling for how they are written. I have come across an issue when writing a simple logging script which writes altitude and speed to a file every second.\u003C/p\u003E\u003Cp\u003EIs there a way to tell a script to listen to user input? My program is a loop (UNTIL FALSE {}). The only way to terminate it is ctrl\u002Bc, which isn\u0027t very elegant. So how do you terminate, lets say an auto-pilot which keeps altitude constant?\u003C/p\u003E\u003Cp\u003EAs far as user input goes, is running a program with parameter input (or setting global values before executing it) the only way to feed data to the computer? Is there a way for the script to request user input? (\u0022Here is a list of possible options.\u0022 Type 1 for option 1 etc.)\u003C/p\u003E\u003Cp\u003EIs there an option to auto-execute a command upon boot? This would be useful to have a probe continue with a script / attempting to re-establish communications after an power-outtage.\u003C/p\u003E\u003Cp\u003EIs there an option to write information to disk for later access? All I can think of is using the \u0022LOG\u0022 command to write something like \u0022LOG \u0022SET variabletostore TO \u0022 \u002B variabletostore TO storage.ks\u0022 and then running the storage script to get it back. This would be useful if a probe is powered down to sleep and upon waking up can read mission parameters from disk.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-07T12:40:13Z\u0022 title=\u002204/07/2015 12:40  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 7, 2015\u003C/time\u003E by Three_Pounds\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"LN400","CreatedById":140595,"CreatedDateTime":"2015-04-07T13:53:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Three_Pounds\u0022 data-cite=\u0022Three_Pounds\u0022\u003E\u003Cdiv\u003EHello! I\u0027ve been playing around with kOS last night and wrote a few test scrips to get a feeling for how they are written. I have come across an issue when writing a simple logging script which writes altitude and speed to a file every second.\u003Cp\u003EIs there a way to tell a script to listen to user input? My program is a loop (UNTIL FALSE {}). The only way to terminate it is ctrl\u002Bc, which isn\u0027t very elegant. So how do you terminate, lets say an auto-pilot which keeps altitude constant?\u003C/p\u003E\u003Cp\u003EAs far as user input goes, is running a program with parameter input (or setting global values before executing it) the only way to feed data to the computer? Is there a way for the script to request user input? (\u0022Here is a list of possible options.\u0022 Type 1 for option 1 etc.)\u003C/p\u003E\u003Cp\u003EIs there an option to auto-execute a command upon boot? This would be useful to have a probe continue with a script / attempting to re-establish communications after an power-outtage.\u003C/p\u003E\u003Cp\u003EIs there an option to write information to disk for later access? All I can think of is using the \u0022LOG\u0022 command to write something like \u0022LOG \u0022SET variabletostore TO \u0022 \u002B variabletostore TO storage.ks\u0022 and then running the storage script to get it back. This would be useful if a probe is powered down to sleep and upon waking up can read mission parameters from disk.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHello, I am new to this place and just came across this post. I just recently started looking at KOS so there are quite possibly better solutions than this but I have made a program, \u0022term\u0022, that lets me store 2 3-digit numbers in a \u0022verb/noun\u0022 way, kinda like the Apollo style, using 2 of the action groups (just 2 for now since it\u0027s only a test) for inputs. So I end up with a total of 64 combinations that could be \u0022if\u0022-ed to run various other programs, functions etc. It\u0027s not really optimal as I need to set aside 2 of the 10 AG\u0027s for this when running the script but as a nice side effect, I get to use the Raster Prop Monitor MkI pod IVA\u0027s AG buttons as input keys, which is kinda neat.\u003C/p\u003E\u003Cp\u003EThe whole script is really a test of various ideas so it\u0027s not aimed at being optimal but it might give you an idea how to have a UI with that program.\u003C/p\u003E\u003Cp\u003EMind you it\u0027s rather large but by removing all newlines, spaces that are not needed, removing comments and cutting down the variable names, you can shave off quite a lot and again, this is just a test of varius ideas so any tips on improvements would be greatly appreciated.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclearscreen.unset all.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//this sets up a fake \u0027shift register\u0027 memory.\u003Cbr\u003Edeclare store_value.//value to be stored in register cell 0 (store:z).\u003Cbr\u003Eset store to v(0,0,0).//fake 3 cell shift register memory\u003Cbr\u003Eset store_count to 1.\u003Cbr\u003Eset store_en to false.//enable storing to shift register\u003Cbr\u003Eset sum1 to 0.//decimal interpretation of first 3 digits in shift register.\u003Cbr\u003Eset sum2 to 0.//decimal interpretation of next 3 digits in shift register.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eset exe to false.//enabled when prog and mode set.\u003Cbr\u003Eset prg to 1.//0 error 1 nominal\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eag1 off.\u003Cbr\u003Eag2 off.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Etrig on.\u003Cbr\u003Eset prog to true.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Euntil prog = false\u003Cbr\u003E{\u003Cbr\u003E\tif trig\u003Cbr\u003E\t{\u003Cbr\u003E\t\ttrig off.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\ton ag1\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tset store_value to 1.\u003Cbr\u003E\t\t\tset store_en to true.\u003Cbr\u003E\t\t\ttrig on.\u003Cbr\u003E\t\t\tag1 off.\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\ton ag2\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tset store_value to 2.\u003Cbr\u003E\t\t\tset store_en to true.\u003Cbr\u003E\t\t\ttrig on.\u003Cbr\u003E\t\t\tag2 off.\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\tif store_en = true\u003Cbr\u003E\t{\u003Cbr\u003E\t\t//shift logic.\t\t\u003Cbr\u003E\t\tset store:x to store:y.\u003Cbr\u003E\t\tset store:y to store:z.\u003Cbr\u003E\t\tset store:z to store_value.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\tif store_count = 3//interprets the stored digits and sets(sum1) which program to run.\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tset sum1 to 100*store:x\u002B10*store:y\u002Bstore:z.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t\tprint \u0022V \u0022\u002Bsum1 at (0,8).\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t\tif sum1 = 111\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tprint \u0022PRG1\u0022 at (7,8).\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse if sum1 = 112\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tprint \u0022PRG2\u0022 at (7,8).\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse if sum1 = 121\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tprint \u0022PRG3\u0022 at (7,8).\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse if sum1 = 222\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tclearscreen.\u003Cbr\u003E\t\t\t\tprint \u0022Shutting down...\u0022 at (0,8).\u003Cbr\u003E\t\t\t\twait 1.\u003Cbr\u003E\t\t\t\tset prog to false.\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tset prg to 0.\u003Cbr\u003E\t\t\t\tprint \u0022INVL\u0022 at (7,8).\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\telse if store_count = 6//interprets the next 3 digits and sets (sum2) which mode to run.\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tset sum2 to 100*store:x\u002B10*store:y\u002Bstore:z.\u003Cbr\u003E\t\t\tprint \u0022N \u0022\u002Bsum2 at (0,9).\u003Cbr\u003E\u003Cbr\u003E\t\t\tif sum2 = 122\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\t//set exe to true.\u003Cbr\u003E\t\t\t\tprint \u0022MOD1\u0022 at (7,9).\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse if sum2 = 121\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\t//set exe to true.\u003Cbr\u003E\t\t\t\tprint \u0022MOD2\u0022 at (7,9).\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse if sum2 = 212\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\t//set exe to true.\u003Cbr\u003E\t\t\t\tprint \u0022MOD3\u0022 at (7,9).\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tset prg to 0.\u003Cbr\u003E\t\t\t\tprint \u0022INVL\u0022 at (7,9).\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\t\tset store_count to 0.\u003Cbr\u003E\t\t\twait 0.1.\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\tif prg = 0//if invalid program or mode selected\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\twait 0.7.\u003Cbr\u003E\t\t\tclearscreen.\u003Cbr\u003E\t\t\tset prg to 1.\u003Cbr\u003E\t\t\tset store to v(0,0,0).\u003Cbr\u003E\t\t\tset store_count to 0.\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t\tset store_count to store_count\u002B1.\t\t\t\u003Cbr\u003E\t\tset store_en to false.\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\tprint store:x at (0,6).\u003Cbr\u003E\tprint store:y at (2,6).\u003Cbr\u003E\tprint store:z at (4,6).\t\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eunset store_value.\u003Cbr\u003Eunset store.\u003Cbr\u003Eunset store_count.\u003Cbr\u003Eunset store_en.\u003Cbr\u003Eunset exe.\u003Cbr\u003Eunset prg.\u003Cbr\u003Eunset sum1.\u003Cbr\u003Eunset sum2.\u003Cbr\u003Eclearscreen.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-04-07T18:46:15Z","Content":"\n\u003Cp\u003EThe short answer is that kOS doesn\u0027t implement input streams from the user yet. You can only get sort of kludge solutions involving using the action groups.\u003C/p\u003E\u003Cp\u003EI\u0027d like to fix it but fixing the annoying presumed global-ness of everything was higher on my list - and it\u0027s thorny because it looks like it inevitably results in breaking some backward compatibility because the original language design had some annoying presumptions hardcoded into its design.\u003C/p\u003E\n"},{"CreatedByName":"akrasuski1","CreatedById":116591,"CreatedDateTime":"2015-04-07T19:47:52Z","Content":"\n\u003Cp\u003ESome weird stuff is going on with ship:control. Consider the following command:\u003C/p\u003E\u003Cp\u003ESET ship:control:pitch to 0.\u003C/p\u003E\u003Cp\u003EThen, nothing happens (as expected). If I press W, I can normally control my ship (it rotates). But if I type:\u003C/p\u003E\u003Cp\u003ESET ship:control:pitch to 0.02.\u003C/p\u003E\u003Cp\u003EThen, the ship starts to very slowly accelerate (also, as expected). But now, I\u0027m locked out of control of the ship. I don\u0027t think this is consistent behaviour. Normally this wouldn\u0027t be a problem, since usually you want to control to be either yours or script\u0027s (with you not touching the controls at all). But I want to use WASD input (using pilotpitch, etc. sufixes) to control some things in kOS without rotating my ship at all. I already tried neutralizing input from script in a few combinations, and setting pitch to 0 (as above). Due to the above \u0022undocumented behaviour\u0022, I don\u0027t think I\u0027m able to lock manual steering. Any way to do that?\u003C/p\u003E\u003Cp\u003EAlso, as a side thing, printing ship:control:pilotneutral yields True or False, while printing ship:control:neutral gives \u0022kOS.Safe.Utilities.Flushable\u0060i[system.Boolean]]\u0022 whatever it means.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EAs a workarond, I can use \u0022lock steering to ship:facing\u0022 which will lock any user WASD input from triggering rotation. Still, this is just a workaround.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-07T21:25:31Z\u0022 title=\u002204/07/2015 09:25  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 7, 2015\u003C/time\u003E by akrasuski1\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"akrasuski1","CreatedById":116591,"CreatedDateTime":"2015-04-07T23:53:33Z","Content":"\n\u003Cp\u003ESorry for a double post, but I want to separate this (my creation) from the issues described above.\u003C/p\u003E\u003Cp\u003EI created a nice small utility that enables people to input numbers to their scripts - for example, you can ask to enter desired apoapsis and such. The second script is similar, but instead creates a menu to be chosen from. Since we don\u0027t have functions yet, they are still made as scripts, but when functions come, it would be trivial to rewrite it for the new function syntax.\u003C/p\u003E\u003Cp\u003E1. Numpad:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// This script shows a numpad on the terminal allowing user to\u003Cbr\u003E// type in any number (including floating point ones) and return\u003Cbr\u003E// it to calling script.\u003Cbr\u003Eclearscreen.\u003Cbr\u003Eset finished to false.\u003Cbr\u003Eset number_so_far to 0.\u003Cbr\u003Eset dot_encountered to 0.\u003Cbr\u003Eset digits_so_far to 0.\u003Cbr\u003Eset current_x to 0.\u003Cbr\u003Eset current_y to 0.\u003Cbr\u003Eset was_pause to true.\u003Cbr\u003Elock steering to ship:facing.\u003Cbr\u003E//print calculator once\u003Cbr\u003Eprint \u0022\u002B===================\u002B\u0022 at (0,0).\u003Cbr\u003Eprint \u0022|                   |\u0022 at (0,1).\u003Cbr\u003Eprint \u0022|                   |\u0022 at (0,2).\u003Cbr\u003Eprint \u0022|                   |\u0022 at (0,3).\u003Cbr\u003Eprint \u0022\u002B===================\u002B\u0022 at (0,4).\u003Cbr\u003Eprint \u0022|                   |\u0022 at (0,5).\u003Cbr\u003Eprint \u0022| \u002B---\u002B---\u002B---\u002B---\u002B |\u0022 at (0,6).\u003Cbr\u003Eprint \u0022| |   |   |   |   | |\u0022 at (0,7).\u003Cbr\u003Eprint \u0022| | 7 | 8 | 9 | C | |\u0022 at (0,8).\u003Cbr\u003Eprint \u0022| |   |   |   | l | |\u0022 at (0,9).\u003Cbr\u003Eprint \u0022| \u002B---\u002B---\u002B---\u002B e | |\u0022 at (0,10).\u003Cbr\u003Eprint \u0022| |   |   |   | a | |\u0022 at (0,11).\u003Cbr\u003Eprint \u0022| | 4 | 5 | 6 | r | |\u0022 at (0,12).\u003Cbr\u003Eprint \u0022| |   |   |   |   | |\u0022 at (0,13).\u003Cbr\u003Eprint \u0022| \u002B---\u002B---\u002B---\u002B---\u002B |\u0022 at (0,14).\u003Cbr\u003Eprint \u0022| |   |   |   |   | |\u0022 at (0,15).\u003Cbr\u003Eprint \u0022| | 1 | 2 | 3 |   | |\u0022 at (0,16).\u003Cbr\u003Eprint \u0022| |   |   |   |   | |\u0022 at (0,17).\u003Cbr\u003Eprint \u0022| \u002B---\u002B---\u002B---\u002B   | |\u0022 at (0,18).\u003Cbr\u003Eprint \u0022| |   |   |       | |\u0022 at (0,19).\u003Cbr\u003Eprint \u0022| | . | 0 | Enter | |\u0022 at (0,20).\u003Cbr\u003Eprint \u0022| |   |   |       | |\u0022 at (0,21).\u003Cbr\u003Eprint \u0022| \u002B---\u002B---\u002B-------\u002B |\u0022 at (0,22).\u003Cbr\u003Eprint \u0022|                   |\u0022 at (0,23).\u003Cbr\u003Eprint \u0022\u002B===================\u002B\u0022 at (0,24).\u003Cbr\u003Eprint \u0022|                   |\u0022 at (0,25).\u003Cbr\u003Eprint \u0022| Outside terminal, |\u0022 at (0,26).\u003Cbr\u003Eprint \u0022| press:            |\u0022 at (0,27).\u003Cbr\u003Eprint \u0022|                   |\u0022 at (0,28).\u003Cbr\u003Eprint \u0022| - WASD to move    |\u0022 at (0,29).\u003Cbr\u003Eprint \u0022| - E to select     |\u0022 at (0,30).\u003Cbr\u003Eprint \u0022|                   |\u0022 at (0,31).\u003Cbr\u003Eprint \u0022\u002B===================\u002B\u0022 at (0,32).\u003Cbr\u003Euntil finished{ \u003Cbr\u003E    //only update important bits\u003Cbr\u003E    wait 0.001.\u003Cbr\u003E    print \u0022|                   |\u0022 at (0,2).\u003Cbr\u003E    print \u0022| |   |   |   |   | |\u0022 at (0,7).\u003Cbr\u003E    print \u0022| | 7 | 8 | 9 | C | |\u0022 at (0,8).\u003Cbr\u003E    print \u0022| |   |   |   | l | |\u0022 at (0,9).\u003Cbr\u003E    print \u0022| \u002B---\u002B---\u002B---\u002B e | |\u0022 at (0,10).\u003Cbr\u003E    print \u0022| |   |   |   | a | |\u0022 at (0,11).\u003Cbr\u003E    print \u0022| | 4 | 5 | 6 | r | |\u0022 at (0,12).\u003Cbr\u003E    print \u0022| |   |   |   |   | |\u0022 at (0,13).\u003Cbr\u003E    print \u0022| |   |   |   |   | |\u0022 at (0,15).\u003Cbr\u003E    print \u0022| | 1 | 2 | 3 |   | |\u0022 at (0,16).\u003Cbr\u003E    print \u0022| |   |   |   |   | |\u0022 at (0,17).\u003Cbr\u003E    print \u0022| \u002B---\u002B---\u002B---\u002B   | |\u0022 at (0,18).\u003Cbr\u003E    print \u0022| |   |   |       | |\u0022 at (0,19).\u003Cbr\u003E    print \u0022| | . | 0 | Enter | |\u0022 at (0,20).\u003Cbr\u003E    print \u0022| |   |   |       | |\u0022 at (0,21).\u003Cbr\u003E    print number_so_far at (10-floor(digits_so_far/2\u002B0.001),2).\u003Cbr\u003E\u003Cbr\u003E    //print selection around current key\u003Cbr\u003E    if current_x=3 {\u003Cbr\u003E        if current_y=1{\u003Cbr\u003E            print \u0022\u002B-\u002B\u0022 at(15,7).\u003Cbr\u003E            print \u0022|C|\u0022 at(15,8).\u003Cbr\u003E            print \u0022|l|\u0022 at(15,9).\u003Cbr\u003E            print \u0022|e|\u0022 at(15,10).\u003Cbr\u003E            print \u0022|a|\u0022 at(15,11).\u003Cbr\u003E            print \u0022|r|\u0022 at(15,12).\u003Cbr\u003E            print \u0022\u002B-\u002B\u0022 at(15,13).\u003Cbr\u003E        }\u003Cbr\u003E        else{\u003Cbr\u003E            print     \u0022\u002B-\u002B\u0022 at(15,15).\u003Cbr\u003E            print     \u0022| |\u0022 at(15,16).\u003Cbr\u003E            print     \u0022| |\u0022 at(15,17).\u003Cbr\u003E            print     \u0022| |\u0022 at(15,18).\u003Cbr\u003E            print \u0022\u002B---\u002B |\u0022 at(11,19).\u003Cbr\u003E            print \u0022|Enter|\u0022 at(11,20).\u003Cbr\u003E            print \u0022\u002B-----\u002B\u0022 at(11,21).\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E    else{\u003Cbr\u003E        print \u0022\u002B-\u002B\u0022 at(4*current_x\u002B3,4*current_y\u002B7).\u003Cbr\u003E        print \u0022|\u0022 at(4*current_x\u002B3,4*current_y\u002B8).\u003Cbr\u003E        print \u0022|\u0022 at(4*current_x\u002B5,4*current_y\u002B8).\u003Cbr\u003E        print \u0022\u002B-\u002B\u0022 at(4*current_x\u002B3,4*current_y\u002B9).\u003Cbr\u003E    }\u003Cbr\u003E    //input from user\u003Cbr\u003E    set going_up to -(SHIP:CONTROL:PILOTPITCH).\u003Cbr\u003E    set going_right to SHIP:CONTROL:PILOTYAW.\u003Cbr\u003E    set push to SHIP:CONTROL:PILOTROLL.\u003Cbr\u003E\u003Cbr\u003E    set key_pressed_now to false.\u003Cbr\u003E    if going_up\u0026lt;-0.5 or going_up\u0026gt;0.5 or going_right\u0026gt;0.5 or going_right\u0026lt;-0.5 or push\u0026gt;0.5{\u003Cbr\u003E        set key_pressed_now to true.\u003Cbr\u003E    }\u003Cbr\u003E    if not key_pressed_now{\u003Cbr\u003E        set was_pause to true.\u003Cbr\u003E    }\u003Cbr\u003E    else if was_pause{\u003Cbr\u003E        //only allow button press after at least a frame without button\u003Cbr\u003E        set was_pause to false.\u003Cbr\u003E        if going_up\u0026gt;0.5{\u003Cbr\u003E            set current_y to current_y-1.\u003Cbr\u003E        }\u003Cbr\u003E        else if going_up\u0026lt;-0.5{\u003Cbr\u003E            set current_y to current_y\u002B1.\u003Cbr\u003E        }\u003Cbr\u003E        if going_right\u0026gt;0.5{\u003Cbr\u003E            set current_x to current_x\u002B1.\u003Cbr\u003E        }\u003Cbr\u003E        else if going_right\u0026lt;-0.5{\u003Cbr\u003E            set current_x to current_x-1.\u003Cbr\u003E        }\u003Cbr\u003E        //boundary checks:\u003Cbr\u003E        if current_x\u0026lt;0{\u003Cbr\u003E            set current_x to 0.\u003Cbr\u003E        }\u003Cbr\u003E        if current_x\u0026gt;3{\u003Cbr\u003E            set current_x to 3.\u003Cbr\u003E        }\u003Cbr\u003E        if current_y\u0026lt;0{\u003Cbr\u003E            set current_y to 0.\u003Cbr\u003E        }\u003Cbr\u003E        if current_y\u0026gt;3{\u003Cbr\u003E            set current_y to 3.\u003Cbr\u003E        }\u003Cbr\u003E        //check for clear\u003Cbr\u003E        if current_x=3 and current_y\u0026lt;=1{\u003Cbr\u003E            set current_y to 1.\u003Cbr\u003E        }\u003Cbr\u003E        //check for enter\u003Cbr\u003E        if current_x=3 and current_y\u0026gt;1{\u003Cbr\u003E            set current_y to 2.\u003Cbr\u003E        }\u003Cbr\u003E        if current_x=2 and current_y=3{\u003Cbr\u003E            set current_y to 2.\u003Cbr\u003E            set current_x to 3.\u003Cbr\u003E        }\u003Cbr\u003E        //done with moving.\u003Cbr\u003E        //now check if key is pressed\u003Cbr\u003E        if push{\u003Cbr\u003E            if current_x=3 and current_y=1{//clear\u003Cbr\u003E                set number_so_far to 0.\u003Cbr\u003E                set dot_encountered to 0.\u003Cbr\u003E                set digits_so_far to 0.\u003Cbr\u003E            }\u003Cbr\u003E            else if current_x=3 and current_y=2{//enter\u003Cbr\u003E                set finished to true.\u003Cbr\u003E            }\u003Cbr\u003E            else if current_x=0 and current_y=3{//dot\u003Cbr\u003E                set dot_encountered to 1.\u003Cbr\u003E                set digits_so_far to digits_so_far\u002B1.\u003Cbr\u003E            }\u003Cbr\u003E            else{//digit\u003Cbr\u003E                set digits_so_far to digits_so_far\u002B1.\u003Cbr\u003E                set digit to 0.\u003Cbr\u003E                if current_x=0 and current_y=0{set digit to 7.}\u003Cbr\u003E                if current_x=1 and current_y=0{set digit to 8.}\u003Cbr\u003E                if current_x=2 and current_y=0{set digit to 9.}\u003Cbr\u003E                if current_x=0 and current_y=1{set digit to 4.}\u003Cbr\u003E                if current_x=1 and current_y=1{set digit to 5.}\u003Cbr\u003E                if current_x=2 and current_y=1{set digit to 6.}\u003Cbr\u003E                if current_x=0 and current_y=2{set digit to 1.}\u003Cbr\u003E                if current_x=1 and current_y=2{set digit to 2.}\u003Cbr\u003E                if current_x=2 and current_y=2{set digit to 3.}\u003Cbr\u003E                if dot_encountered=0{\u003Cbr\u003E                    set number_so_far to number_so_far*10\u002Bdigit.\u003Cbr\u003E                }\u003Cbr\u003E                else{\u003Cbr\u003E                    set number_so_far to number_so_far\u002Bdigit*0.1^dot_encountered.\u003Cbr\u003E                    set dot_encountered to dot_encountered\u002B1.\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003Eunlock steering.\u003Cbr\u003Eset retVal to number_so_far.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E2. Menu:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// This script shows a simple menu on the terminal allowing user to\u003Cbr\u003E// select one of the options and return its index to calling script.\u003Cbr\u003Edeclare parameter list_of_names.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eset current_option to 0.\u003Cbr\u003Eset len to list_of_names:length().\u003Cbr\u003Eset finished to false.\u003Cbr\u003Eset was_pause to true.\u003Cbr\u003Elock steering to ship:facing.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003Eprint \u0022\u002B================Menu================\u002B\u0022 at(0,0).\u003Cbr\u003Eset i to 0.\u003Cbr\u003Euntil i=len\u002B2{\u003Cbr\u003E    print \u0022|                                    |\u0022 at(0,i\u002B1).\u003Cbr\u003E    set i to i\u002B1.\u003Cbr\u003E}\u003Cbr\u003Eprint \u0022\u002B====================================\u002B\u0022 at(0,len\u002B3).\u003Cbr\u003Eprint \u0022|                                    |\u0022 at(0,len\u002B4).\u003Cbr\u003Eprint \u0022| Use W/S outside terminal to move   |\u0022 at(0,len\u002B5).\u003Cbr\u003Eprint \u0022| and E to select an option.         |\u0022 at(0,len\u002B6).\u003Cbr\u003Eprint \u0022|                                    |\u0022 at(0,len\u002B7).\u003Cbr\u003Eprint \u0022\u002B====================================\u002B\u0022 at(0,len\u002B8).\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Euntil finished{\u003Cbr\u003E    wait 0.001.\u003Cbr\u003E    //print list\u003Cbr\u003E    set i to 0.\u003Cbr\u003E    until i=len{\u003Cbr\u003E        if i=current_option{\u003Cbr\u003E            print \u0022 ===\u0026gt; \u0022 \u002B list_of_names[i] \u002B \u0022 \u0026lt;===\u0022 at(2,i\u002B2).\u003Cbr\u003E        }\u003Cbr\u003E        else{\u003Cbr\u003E            print \u0022    - \u0022 \u002B list_of_names[i] \u002B \u0022 -   \u0022 at(2,i\u002B2).\u003Cbr\u003E        }\u003Cbr\u003E        set i to i\u002B1.\u003Cbr\u003E    }\u003Cbr\u003E    //get input\u003Cbr\u003E    set going_up to -(SHIP:CONTROL:PILOTPITCH).\u003Cbr\u003E    set push to SHIP:CONTROL:PILOTROLL.\u003Cbr\u003E\u003Cbr\u003E    set key_pressed_now to false.\u003Cbr\u003E    if going_up\u0026lt;-0.5 or going_up\u0026gt;0.5 or push\u0026gt;0.5{\u003Cbr\u003E        set key_pressed_now to true.\u003Cbr\u003E    }\u003Cbr\u003E    if not key_pressed_now{\u003Cbr\u003E        set was_pause to true.\u003Cbr\u003E    }\u003Cbr\u003E    else if was_pause{\u003Cbr\u003E        //only allow button press after at least a frame without button\u003Cbr\u003E        set was_pause to false.\u003Cbr\u003E        if going_up\u0026gt;0.5{\u003Cbr\u003E            set current_option to current_option-1.\u003Cbr\u003E        }\u003Cbr\u003E        if going_up\u0026lt;-0.5{\u003Cbr\u003E            set current_option to current_option\u002B1.\u003Cbr\u003E        }\u003Cbr\u003E        if(current_option\u0026lt;0){\u003Cbr\u003E            set current_option to 0.\u003Cbr\u003E        }\u003Cbr\u003E        if(current_option\u0026gt;len-1){\u003Cbr\u003E            set current_option to len-1.\u003Cbr\u003E        }\u003Cbr\u003E        if push{\u003Cbr\u003E            set finished to true.\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003Eunlock steering.\u003Cbr\u003Eset retval to current_option.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI don\u0027t think there\u0027s currently any way to provide direct input to kOS, so instead I made user select options or move around the numpad via their WASD keys and use E as Enter key.\u003C/p\u003E\u003Cp\u003EImages:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/baF4NFc.png\u0022 alt=\u0022baF4NFc.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/4eGY4wt.png\u0022 alt=\u00224eGY4wt.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ENote: if the code doesn\u0027t work for you, make sure you aren\u0027t in docking mode - I thought there\u0027s a bug in my code for over an hour due to that.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-07T23:57:12Z\u0022 title=\u002204/07/2015 11:57  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 7, 2015\u003C/time\u003E by akrasuski1\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Reisdal","CreatedById":112101,"CreatedDateTime":"2015-04-08T16:10:36Z","Content":"\n\u003Cp\u003Ecould someone please help me. I had a launch script which worked perfectly fine but when i edited it as a new script to take me up to a geosych apoapsis it says program ended just after the print \u0022launch\u0022. what is wrong? tried everything it seems...\u003C/p\u003E\u003Cp\u003Ehere\u0027s the script: \u003Ca href=\u0022http://pastebin.com/1XYB0sK8\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/1XYB0sK8\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EPS. just so you know, I\u0027m a novice at scripting \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ThreePounds","CreatedById":116058,"CreatedDateTime":"2015-04-08T16:19:20Z","Content":"\n\u003Cp\u003EThanks for the answers concerning user input and data storage. You\u0027ve presented me with new and exciting workarounds that seem extremely smart to me. I\u0027m still wrapping my head around both of them.\u003C/p\u003E\u003Cp\u003EI have made my first simple launch script. The script works fairly well but it\u0027s really only good for launching the exact type of vehicle I am using.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//Zephyrus launch script intended to be used by Triton craft//script assumes two solid stages with a liquid stage motor\u003Cbr\u003E//but may support different Zephyrus configurations in the future.\u003Cbr\u003Eclearscreen. unset all.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//declaring triggers\u003Cbr\u003Edeclare complete.\u003Cbr\u003Edeclare guidetrigger.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//loading script dependencies\u003Cbr\u003Ecopy triton.apcirc.ks from 0.\u003Cbr\u003Ecopy triton.exenode.ks from 0.\u003Cbr\u003Eprint \u0022script dependencies loaded.\u0022.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ecomplete off.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//launch countdown\u003Cbr\u003Eprint \u0022initiating launch countdown\u0022.\u003Cbr\u003Eset countdown to 5.\u003Cbr\u003Euntil countdown = 0 {\u003Cbr\u003E    print \u0022...\u0022 \u002B countdown.\u003Cbr\u003E    set countdown to countdown - 1.\u003Cbr\u003E    wait 1.\u003Cbr\u003E    }\u003Cbr\u003Eprint \u0022launch!\u0022.\u003Cbr\u003Estage.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//staging control\u003Cbr\u003Ewhen stage:solidfuel = 0 then {\u003Cbr\u003E    set guidetrigger to ship:solidfuel.    \u003Cbr\u003E    print \u0022detecting resource depletion. staging.\u0022.\u003Cbr\u003E    stage.\u003Cbr\u003E    when stage:solidfuel = 0 then {\u003Cbr\u003E        print \u0022detecting resource depletion. staging.\u0022.\u003Cbr\u003E        stage.\u003Cbr\u003E        when ship:altitude \u0026gt; 70000 then {\u003Cbr\u003E            print \u0022detecting safe altitude. deploying antenna\u0022.\u003Cbr\u003E            lights on.\u003Cbr\u003E            stage.\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E//steering control\u003Cbr\u003Ewhen stage:number = 3 AND stage:solidfuel \u0026lt; 0.5 * guidetrigger then    {\u003Cbr\u003E    print \u0022locking steering to velocity vector\u0022.\u003Cbr\u003E    lock steering to ship:velocity:orbit.\u003Cbr\u003E        //final guidance\u003Cbr\u003E    when ship:altitude \u0026gt; 40000 then {\u003Cbr\u003E        print \u0022locking steering to east\u0022.\u003Cbr\u003E        lock steering to heading(90,0).\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//thrust control\u003Cbr\u003Ewhen ship:obt:apoapsis \u0026lt; 70000 then {\u003Cbr\u003E    print \u0022locking throttle to 100%\u0022.\u003Cbr\u003E    lock throttle to 1.\u003Cbr\u003E    when ship:obt:apoapsis \u0026gt; 70000 then {\u003Cbr\u003E        print \u0022locking throttle to 30%.\u0022.\u003Cbr\u003E        lock throttle to 0.3.\u003Cbr\u003E        when ship:obt:apoapsis \u0026gt; 80000 then {\u003Cbr\u003E            print \u0022shutting down engines.\u0022.\u003Cbr\u003E            lock throttle to 0.\u003Cbr\u003E            complete on.\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait until complete.\u003Cbr\u003Ewait 3.\u003Cbr\u003Eprint \u0022executing triton.apcirc.ks script\u0022.\u003Cbr\u003Erun triton.apcirc.ks.\u003Cbr\u003Eprint \u0022executing triton.exenode.ks script\u0022.\u003Cbr\u003Erun triton.exenode.ks.\u003Cbr\u003Eprint \u0022target orbit reached.\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHowever, once it gets to this \u0022run triton.apcirc.ks.\u0022 part, it throws an error at me:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUndefined Variable Name \u00C3\u201A\u00C2\u00B4program-triton.apcirc.ks*\u00C3\u201A\u00C2\u00B4.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eit does not print anything else. (The verbose version is an exact copy of the above error.)\u003C/p\u003E\u003Cp\u003ESo far I have had no luck in narrowing down the problem:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Ethis problem does not occur when I paste the 6 lines into a separate script and execute it mid-flight\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ethis problem does occur when I load the embedded script into memory before starting the main script.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ethis problem does occur when I use or not use parameters to call the embedded script.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAfter nearly three hours of trying different stuff I have no idea what is going on any more. Can someone help? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Reisdal\u0022 data-cite=\u0022Reisdal\u0022\u003E\u003Cdiv\u003Ecould someone please help me. I had a launch script which worked perfectly fine but when i edited it as a new script to take me up to a geosych apoapsis it says program ended just after the print \u0022launch\u0022. what is wrong? tried everything it seems...\u003Cp\u003Ehere\u0027s the script: \u003Ca href=\u0022http://pastebin.com/1XYB0sK8\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/1XYB0sK8\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EPS. just so you know, I\u0027m a novice at scripting \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYour script is basically a short loop (launch countdown) and a whole bunch of triggers and one check at the end. There is nothing stopping the script from ending once it reaches the bottom. You need to either put in a \u0022WAIT UNTIL false.\u0022 or at least set up a trigger variable at the very end.\u003C/p\u003E\n"},{"CreatedByName":"Blu_C","CreatedById":39941,"CreatedDateTime":"2015-04-08T23:47:00Z","Content":"\n\u003Cp\u003EI have just started using kOS and am building a fairly simple launch script and am running into a very strange problem. Everything works perfectly up until the current stage runs out of fuel and the program goes to stage. At this point for whatever reason the staging logic never happens. Here is the code I\u0027ve written to handle the situation: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif STAGE:LIQUIDFUEL \u0026lt; 0.1 { //Stage fuel exhausted.\u003Cbr\u003E     lock throttle to 0.\u003Cbr\u003E     stage.\u003Cbr\u003E     wait 2.                //Wait for stage separation.\u003Cbr\u003E     lock throttle to TVAL.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that this snippet of code happens inside the main (and only) while loop that runs for the duration of my launch, which is why it doesn\u0027t have PRESERVE. In any case, I do not think the lack of PRESERVE is the cause because it isn\u0027t even staging once.\u003C/p\u003E\u003Cp\u003EFrom what I can tell, for some reason KSP or kOS (or both) is misreading the amount of fuel remaining in the stage. I was able to verify this by looking at the resources with the STAGE ONLY flag set. For some reason the value of fuel always includes the current stage AND the next stage. Initially I thought this was because of some faulty logic dealing with radial stages and tried to rebuild using only vertical decouplers which worked for my first test run, but then after redesigning the initial lift stage I found the problem returned.\u003C/p\u003E\u003Cp\u003EHas anyone else encountered this problem? Is there a solution or a problem with how I am approaching staging code/building my rocket which causes the issue to occur?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-08T23:51:53Z\u0022 title=\u002204/08/2015 11:51  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 8, 2015\u003C/time\u003E by Blu_C\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Tabris","CreatedById":122933,"CreatedDateTime":"2015-04-09T00:28:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Blu_C\u0022 data-cite=\u0022Blu_C\u0022\u003E\u003Cdiv\u003EI have just started using kOS and am building a fairly simple launch script and am running into a very strange problem. Everything works perfectly up until the current stage runs out of fuel and the program goes to stage. At this point for whatever reason the staging logic never happens. Here is the code I\u0027ve written to handle the situation: \u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif STAGE:LIQUIDFUEL \u0026lt; 0.1 { //Stage fuel exhausted.\u003Cbr\u003E     lock throttle to 0.\u003Cbr\u003E     stage.\u003Cbr\u003E     wait 2.                //Wait for stage separation.\u003Cbr\u003E     lock throttle to TVAL.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that this snippet of code happens inside the main (and only) while loop that runs for the duration of my launch, which is why it doesn\u0027t have PRESERVE. In any case, I do not think the lack of PRESERVE is the cause because it isn\u0027t even staging once.\u003C/p\u003E\u003Cp\u003EFrom what I can tell, for some reason KSP or kOS (or both) is misreading the amount of fuel remaining in the stage. I was able to verify this by looking at the resources with the STAGE ONLY flag set. For some reason the value of fuel always includes the current stage AND the next stage. Initially I thought this was because of some faulty logic dealing with radial stages and tried to rebuild using only vertical decouplers which worked for my first test run, but then after redesigning the initial lift stage I found the problem returned.\u003C/p\u003E\u003Cp\u003EHas anyone else encountered this problem? Is there a solution or a problem with how I am approaching staging code/building my rocket which causes the issue to occur?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eit\u0027s a known bug due to how kOS gets the data about stages.\u003C/p\u003E\u003Cp\u003Ethis is the code that i use \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ELIST ENGINES IN engines.\u003Cbr\u003E    FOR eng IN engines\u003Cbr\u003E    {\u003Cbr\u003E        IF eng:FLAMEOUT\u003Cbr\u003E        {\u003Cbr\u003E            STAGE.\u003Cbr\u003E            WAIT 0.1.\u003Cbr\u003E            BREAK.\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E    WHEN SHIP:LIQUIDFUEL \u0026lt; 1 THEN\u003Cbr\u003E    {\u003Cbr\u003E        clearscreen.\u003Cbr\u003E        PRINT \u0022Out of Fuel\u0022.\u003Cbr\u003E        PRINT \u0022Terminating Program\u0022.\u003Cbr\u003E        set mode to 0.\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-04-09T00:39:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Three_Pounds\u0022 data-cite=\u0022Three_Pounds\u0022\u003E\u003Cdiv\u003EHowever, once it gets to this \u0022run triton.apcirc.ks.\u0022 part, it throws an error at me:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUndefined Variable Name \u00C3\u201A\u00C2\u00B4program-triton.apcirc.ks*\u00C3\u201A\u00C2\u00B4.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eit does not print anything else. (The verbose version is an exact copy of the above error.)\u003C/p\u003E\u003Cp\u003ESo far I have had no luck in narrowing down the problem:\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis looks like the same issue as here:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/745\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/issues/745\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ERemove the unset all. command from the script and it should work.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Blu_C\u0022 data-cite=\u0022Blu_C\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EFrom what I can tell, for some reason KSP or kOS (or both) is misreading the amount of fuel remaining in the stage.\u003C/p\u003E\u003Cp\u003E[...]\u003C/p\u003E\u003Cp\u003EHas anyone else encountered this problem? Is there a solution or a problem with how I am approaching staging code/building my rocket which causes the issue to occur?\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom several pages back.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ziw\u0022 data-cite=\u0022Ziw\u0022\u003E\u003Cdiv\u003EHere\u0027s one possible staging script:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eset stagemaxthrust to ship:maxthrust.\u003Cbr\u003Ewhen status \u0026lt;\u0026gt; \u0022PRELAUNCH\u0022 and (ship:maxthrust\u0026lt;stagemaxthrust or ship:maxthrust\u0026lt;1) then {\u003Cbr\u003E    print \u0022Stage!\u0022.\u003Cbr\u003E    stage.\u003Cbr\u003E    set stagemaxthrust to ship:maxthrust.\u003Cbr\u003E    preserve.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"DrMax","CreatedById":140656,"CreatedDateTime":"2015-04-09T01:12:01Z","Content":"\n\u003Cp\u003EI registred on this forum only so I could write this message full of love and respect for your work and that of your predecessors.\u003C/p\u003E\u003Cp\u003EI love programming, I love KSP, and so I love this, thank you !\u003C/p\u003E\n"},{"CreatedByName":"Blu_C","CreatedById":39941,"CreatedDateTime":"2015-04-09T01:51:19Z","Content":"\n\u003Cp\u003EThanks for the help. Ended up fixing it with the following code (that in retrospect I suspect is better than what I had originally since it should work with SRB\u0027s too):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset maxT to SHIP:MAXTHRUST\u003Cbr\u003E\u003Cbr\u003E(logic foo)\u003Cbr\u003E\u003Cbr\u003EIF SHIP:MAXTHRUST \u0026lt; maxT {\u003Cbr\u003E          lock throttle to 0.\u003Cbr\u003E          STAGE.\u003Cbr\u003E          set maxT to SHIP:MAXTHRUST.\u003Cbr\u003E          WAIT 2.\u003Cbr\u003E          lock throttle to TVAL.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Reisdal","CreatedById":112101,"CreatedDateTime":"2015-04-09T06:44:21Z","Content":"\n\u003Cp\u003E@Three Pounds\u003C/p\u003E\u003Cp\u003EThanks! I cleaned up the script aswell as taking out the countdown, put a wait until false in the end and it works! Can I somehow end a program via the script or do I have to break it manually after a wait until false?\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-04-09T07:13:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Reisdal\u0022 data-cite=\u0022Reisdal\u0022\u003E\u003Cdiv\u003E Can I somehow end a program via the script or do I have to break it manually after a wait until false?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf at the start of the script you do [declare done to false.] Then you can use [wait until done.] and have the finish condition include the statement [set done to true.].\u003C/p\u003E\n"},{"CreatedByName":"Reisdal","CreatedById":112101,"CreatedDateTime":"2015-04-09T07:37:39Z","Content":"\n\u003Cp\u003E@TDW\u003C/p\u003E\u003Cp\u003EWhere should I put wait until done? In the end before set done to true?\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-04-09T07:46:51Z","Content":"\n\u003Cp\u003E@Reisdal\u003C/p\u003E\u003Cp\u003EUse wait until done as a direct replacement for wait until false. (I\u0027m guessing at the end of your script) the set done to true needs to go above it inside whatever trigger you want to end the script.\u003C/p\u003E\n"},{"CreatedByName":"ThreePounds","CreatedById":116058,"CreatedDateTime":"2015-04-09T17:18:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Reisdal\u0022 data-cite=\u0022Reisdal\u0022\u003E\u003Cdiv\u003E@TDW\u003Cp\u003EWhere should I put wait until done? In the end before set done to true?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy scripts usually look like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EDECLARE complete.\u003Cbr\u003Ecomplete OFF.\u003Cbr\u003E{stuff happening}\u003Cbr\u003E//this is the last trigger for the last action of all the actions expected of the script\u003Cbr\u003EWHEN {last condition} THEN {{last action} complete ON.}\u003Cbr\u003EWAIT UNTIL complete.\u003Cbr\u003E//end of script.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf you want an example, check the last page. Look for the above lines (you can use ctrl\u002BF on your keyboard).\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-04-09T19:06:25Z","Content":"\n\u003Cp\u003EWith the new access to the right click menu is there a way of reading an actions current state? it can be set with module:doaction(name,bool) and i can read fields with module:getfield(name) but as far as I can tell there is no module:getaction(name) to return the current bool state of an action. eg. no way for 1 cpu to see if another cpu is powered on or off.\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003EAlso actions that are also listed as events (eg. \u0022toggle power\u0022 on \u0022kosprocessor\u0022) for a part module seem to toggle no matter what is set:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset cpuList to ship:modulesnamed(\u0022kospsocessor\u0022).\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,false).  //this will shut down the processor.\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,true).  //this will also shut down the processor.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-09T19:28:07Z\u0022 title=\u002204/09/2015 07:28  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 9, 2015\u003C/time\u003E by TDW\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ThreePounds","CreatedById":116058,"CreatedDateTime":"2015-04-09T20:02:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TDW\u0022 data-cite=\u0022TDW\u0022\u003E\u003Cdiv\u003EAlso actions that are also listed as events (eg. \u0022toggle power\u0022 on \u0022kosprocessor\u0022) for a part module seem to toggle no matter what is set:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset cpuList to ship:modulesnamed(\u0022kospsocessor\u0022).\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,false).  //this will shut down the processor.\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,true).  //this will also shut down the processor.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIsn\u0027t that exactly what toggle is? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TDW\u0022 data-cite=\u0022TDW\u0022\u003E\u003Cdiv\u003EThis looks like the same issue as here:\u003Cp\u003E\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/745\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/issues/745\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ERemove the unset all. command from the script and it should work.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you so much! You literally turned kOS around from \u0022maybe I should uninstall this ...\u0022 to \u0022wow, I\u0027m so happy with it.\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI can get easily frustrated after toying with something for hours and not achieving anything.\u003C/p\u003E\u003Cp\u003EThis is actually a quite evil bug because normally when I have code misbehaving, my first action is to increase it\u0027s unambiguousness. Removing \u0022unset all.\u0022 would have been the very last step in stripping the script down to find the error.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-04-09T20:08:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Three_Pounds\u0022 data-cite=\u0022Three_Pounds\u0022\u003E\u003Cdiv\u003EIsn\u0027t that exactly what toggle is? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe issue is that you can \u0022activate\u0022 or \u0022deactivate\u0022 an action.\u003C/p\u003E\u003Cp\u003EWhat TDW is asking is \u0022Why does \u003Cem\u003Eactivating\u003C/em\u003E the toggle action turn the processor off?\u0022 when TDW is expecting that to do nothing because the processor is already activated (so turning on an object that is already on should do nothing).\u003C/p\u003E\u003Cp\u003EThe issue is that there are two schools of though around this:\u003C/p\u003E\u003Cp\u003E1) Activating a Toggle action is a \u0022Turn On\u0022 command, deactivating a toggle action is a \u0022Turn Off\u0022 command.\u003C/p\u003E\u003Cp\u003E2) Activating/Deactivating the toggle command does not matter, when the toggle command is executed, it changes the state of the associated action. (So \u0022toggle-activating\u0022 an already running object means deactivating it.)\u003C/p\u003E\u003Cp\u003EIn this case, the kOS Processor \u0022Toggle Power\u0022 will switch state regardless of if it\u0027s told to activate or deactivate. (Type 2 on the list above.)\u003C/p\u003E\u003Cp\u003EIt is a matter of opinion how this should work, but that is why this is happening.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-04-09T20:25:19Z\u0022 title=\u002204/09/2015 08:25  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 9, 2015\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-04-09T20:25:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Three_Pounds\u0022 data-cite=\u0022Three_Pounds\u0022\u003E\u003Cdiv\u003EIsn\u0027t that exactly what toggle is? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep that\u0027s what toggle means, but it\u0027s name is just a string and could be anything. The bit that\u0027s confusing me is that it is toggle power is turning up in both the event list and the action lists for the module. As I understood it form the docs events were just toggle-able (as you only specify a name) where as actions where settable as you had to specify a name and a state.\u003C/p\u003E\u003Cp\u003EWhat I am trying to do is turn other cores on and off from a master core. By adding a boot file to all volumes containing the command [log 1 to flag.ks.] then rebooting the cores 1 at a time to find the volume containing the flag. Write a file in it called my_name.ks that contains [set name to //the corresponding part tag//.]. Repeat this process with all cores so that all volumes contain a file that connects the volume with the part.\u003C/p\u003E\u003Cp\u003EThe master core is selected by a random number race the losers all turn off. This was intended to allow the master to identify it\u0027s self as the only one still running. however unless i can find a way to read the power state of the cpu I will need to think of something else.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-04-09T20:30:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TDW\u0022 data-cite=\u0022TDW\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,false).  //this will shut down the processor.\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,true).  //this will also shut down the processor.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOut of curiosity, what do you get if you keep giving it the same state over and over:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,true).\u003Cbr\u003Ewait 1.\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,true).\u003Cbr\u003Ewait 1.\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,true).\u003Cbr\u003Ewait 1.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eor:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,false).\u003Cbr\u003Ewait 1.\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,false).\u003Cbr\u003Ewait 1.\u003Cbr\u003EcpuList[0]:doaction(\u0022toggle power\u0022,false).\u003Cbr\u003Ewait 1.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI suspect it *needs* the state to change to notice anything happened, but that once the state changes the thing that happens is just a call to the toggle, which does a toggle, not an absolute set.\u003C/p\u003E\u003Cp\u003EI blame KSP itself. It implemented action groups first for stuff like Lights, Gear, and so on -things for which having two boolean states makes sense. But then it added the ability to make your own action groups for which you just fire-once, but piggybacked that on the same system as for things it makes logical sense to have two states - so you now have actions triggered by changing a state of the GROUP, which then trigger a method that itself changes a state with a toggle, making it possible for the two to become out of sync in what they mean.\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-04-09T20:58:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EOut of curiosity, what do you get if you keep giving it the same state over and over:\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eit just toggles the power on and off in both cases.\u003C/p\u003E\n"},{"CreatedByName":"Warp11","CreatedById":109325,"CreatedDateTime":"2015-04-10T05:10:26Z","Content":"\n\u003Cp\u003EIs it possible to get the programming functions on a craft that\u0027s already in flight? I\u0027d like to use it in an existing save. I tried copying the processor module from the mod parts but it didn\u0027t work.\u003C/p\u003E\u003Cp\u003E Thx for you help. Awesome mod.\u003C/p\u003E\n"}]}