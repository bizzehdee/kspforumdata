{"TopicId":60129,"ForumId":34,"TopicTitle":"[0.23] GitCraft v0.9b2 -- .craft revision management using Git","CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-16T08:26:47Z","PageNum":1,"Articles":[{"CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-16T08:26:47Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EIntroduction\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe goal of GitCraft is to make sure that craft revisions are not lost during design and testing and to allow designers to easily restore older designs even if the craft was overwritten in the editor. In other words, GitCraft gives you the ability to undo any change to your craft provided that the version that you want to restore was saved. Thus, GitCraft can be compared to an undo button that works across launches and game sessions. GitCraft achieves this ability by integrating Git distributed revision control software with KSP.\u003C/p\u003E\u003Cp\u003EGitCraft only affects editing your ships. It does not interact with your vessel outside of Vehicle Assembly Building or Space Plane Hangar. GitCraft integrates with the standard editor UI. In other words, your revisions are stored by git as you save them in the editor. To restore a revision you can activate the history window by clicking the git button and then click on the revision that you want to restore. GitCraft shows the part count and the game time when the ship was saved. Since version 0.9b2, attaching a part is not required to enable GitCraft, it is a \u0022partless\u0022 plugin that works for all ships.\u003C/p\u003E\u003Cp\u003EGitCraft is integrated with the popular Toolbar plugin (see \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/60066\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/60066\u003C/a\u003E), but it will work even if the Toolbar plugin is not installed.\u003C/p\u003E\u003Cp\u003ECurrently, GitCraft works on Windows, Mac OS X, and a subset of Linux installations (i.e., x86-64 installations of Linux and corresponding 64-bit KSP executables).\u003C/p\u003E\u003Cp\u003EWe will use Aeris 4A as an example.\u003C/p\u003E\u003Cp\u003EClicking the Git button shows the revision history. Click save generates an entry in the history (and a git commit) as Aeris 4A is saved into the player\u0027s SPH:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/URAGHUC.png\u0022 alt=\u0022URAGHUC.png\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/n4a9LSZ.png\u0022 alt=\u0022n4a9LSZ.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E I am going to change the engine to LV-909, while clicking the save button before and after (this is supposed to illustrate the process of iterative design, so bear with me here). Each time I click the save button there is a revision recorded by Git. One revision without the engine, so 38 parts there, and another with LV-909, so 39 parts again:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/e5vPY71.png\u0022 alt=\u0022e5vPY71.png\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/IvcEW3F.png\u0022 alt=\u0022IvcEW3F.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ENow I am going to restore my Aeris 4A to its original state using Git. Just click on the third entry (the history is sorted in reverse chronological order, so later revisions appear at the top) and LVT-30 is back:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/qZl1m8U.png\u0022 alt=\u0022qZl1m8U.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ESaving at this point would generate another entry in the history as Git records that we moved the ship to an earlier point in its design. Or we could go back to LV-909 version. This pretty much covers what the plugin can do right now. If you remove the part and add it later, then the history is preserved, provided that the ship has the same name.\u003C/p\u003E\u003Cp\u003EIf nothing changed, then saving the craft triggers no commits and no new history entries appear. Except if you save right after you load. In that case KSP changes the ids of all parts for some reason, so git records a new revision.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EDownload\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EDropbox: \u003Ca href=\u0022https://www.dropbox.com/s/luy5t5few65yuu4/GitCraft_v09b2.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.dropbox.com/s/luy5t5few65yuu4/GitCraft_v09b2.zip\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EKerbalspaceport (updated to 0.9b2): \u003Ca href=\u0022http://kerbalspaceprogram.com/gitcraft/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/gitcraft/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESource: \u003Ca href=\u0022https://github.com/exmksp/GitCraft\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/exmksp/GitCraft\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EInstallation\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E1) Merge the contents of the GameData directory with the GameData directory of your Kerbal Space Program directory. Thus, the directory \u0022Exosomatic Ontologies\u0022 should appear inside the GameData directory of your KSP. If you are upgrading from an earlier version, then the old directory in GameData should be replaced by the directory from this distribution. In other words, please delete the old directory and then put the directory from this distribution in its place.\u003C/p\u003E\u003Cp\u003E2) On Windows, copy git2-65e9dc6.dll into root KSP directory, i.e., into the directory where the file KSP.exe is.\u003C/p\u003E\u003Cp\u003EOn Mac, copy the file libgit2-65e9dc6.dylib into the root KSP directory.\u003C/p\u003E\u003Cp\u003EOn Linux, copy the file libgit2-65e9dc6.so into the root KSP directory.\u003C/p\u003E\u003Cp\u003EThis step is necessary because GitCraft currently uses libgit2, which is a native implementaton of git. If you are upgrading from an earlier version, then this step can be skipped.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ETechnical Details\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EGitCraft initializes a new git repository in your saved game directory. Thus, if the name of your game is \u0022default\u0022, then a git repository will be intialized in \u0026lt;KSP_ROOT\u0026gt;/saves/default/.git\u003C/p\u003E\u003Cp\u003ETo delete all data stored by GitCraft, simply remove the \u0022.git\u0022 directory.\u003C/p\u003E\u003Cp\u003EGitCraft automatically commits the craft file when it is saved. The part count and the timestamp are stored in the commit message.\u003C/p\u003E\u003Cp\u003ESince version 0.9b2, the Git part is NO LONGER REQUIRED for GitCraft to work, the plugin is \u0022partless\u0022 and is enabled for all designs. The Git part is still present in the \u0022Control\u0022 section of the editor to provide painless upgrade path for 0.9b1 users. In the next version the part WILL BE COMPLETELY REMOVED from the plugin. The upgrade code path, which will include a dialog requesting permission to chop the part off, will be provided in the next release. Users are advised to complete all active missions that use vessels with the Git part attached to them.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EKnown Issues\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E1. If a case-insensitive filesystem is used, then GitCraft does not work well if the capitalization of the name of the ship differs from the capitalization of the filename for the file in which the ship is saved. For example, if you\u003C/p\u003E\u003Cp\u003Eare using the case-insensitive version of the Mac OS Extended filesystem (the default version), and if the name of your ship is \u0022Rocket\u0022 and if it is saved in the file \u0022rocket.craft\u0022, then GitCraft won\u0027t pick up the history correctly. Please make sure that capitalization of your files and the name of the ship are consistent. The issue may arise if you decide to change the capitalization of the ship\u0027s name after it was saved.\u003C/p\u003E\u003Cp\u003E2. GitCraft does not work well with \u0022Auto Saved Ship.craft\u0022 files generated by KSP when you launch a ship without saving its design, unless the name of your auto saved ship is \u0022Auto Saved Ship\u0022.\u003C/p\u003E\u003Cp\u003E3. GitCraft does not pick up history before the craft was saved or loaded. The reason for this is that plugins don\u0027t have access to the contents of the ship name widget in the editor. The plugins only have access to the ship\u0027s name, which is updated during saving or loading. To get access to the history of your ship, save it or, if it was already saved, load it.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPersonal Notes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe key rationale for this plugin is to make the editor more suitable for iterative design when you try different part arrangements, evaluate them in flight and then go back to design. When I have to go more than one step back with stock editor, I need to invent a numbering strategy and stick with it, which is work, and also produces a lot of intermediate ship entries. In my case, the numbering strategy eventually leads to cleanup raids to get rid of some of the intermediate versions so that I can easily find things that I need, which is work again. So, I wrote this plugin to make it do all this work and reduce the number of intermediate designs that I actually have to save. SSTO design, for some reason, produced a lot of intermediates as I was evaluating various configurations and engine combinations.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003Enovapunch2_03a / creativecommons by-sa 3.0\u003C/p\u003E\u003Cp\u003ENovapunch is a collaborative mod featuring the work of several different authors. The content of the mods are copyrighted by their respective authors (which can be found in the author field in each part.cfg file) and are jointly released under the Creative Commons Attribute-Sharealike 3.0 License.\u003C/p\u003E\u003Cp\u003EThis means:\u003C/p\u003E\u003Cp\u003EYou are free:\u003C/p\u003E\u003Cp\u003E to Share \u00C3\u201A\u00E2\u20AC\u201D to copy, distribute and transmit the work\u003C/p\u003E\u003Cp\u003E to Remix \u00C3\u201A\u00E2\u20AC\u201D to adapt the work\u003C/p\u003E\u003Cp\u003E to make commercial use of the work \u003C/p\u003E\u003Cp\u003EUnder the following conditions:\u003C/p\u003E\u003Cp\u003E Attribution \u00C3\u201A\u00E2\u20AC\u201D You must attribute the work in the manner specified by the author or licensor (but not in any way that suggests that they endorse you or your use of the work).\u003C/p\u003E\u003Cp\u003E Share Alike \u00C3\u201A\u00E2\u20AC\u201D If you alter, transform, or build upon this work, you may distribute the resulting work only under the same or similar license to this one.\u003C/p\u003E\u003Cp\u003EWith the understanding that:\u003C/p\u003E\u003Cp\u003E Waiver \u00C3\u201A\u00E2\u20AC\u201D Any of the above conditions can be waived if you get permission from the copyright holder.\u003C/p\u003E\u003Cp\u003E Public Domain \u00C3\u201A\u00E2\u20AC\u201D Where the work or any of its elements is in the public domain under applicable law, that status is in no way affected by the license.\u003C/p\u003E\u003Cp\u003E Other Rights \u00C3\u201A\u00E2\u20AC\u201D In no way are any of the following rights affected by the license:\u003C/p\u003E\u003Cp\u003E Your fair dealing or fair use rights, or other applicable copyright exceptions and limitations;\u003C/p\u003E\u003Cp\u003E The author\u0027s moral rights;\u003C/p\u003E\u003Cp\u003E Rights other persons may have either in the work itself or in how the work is used, such as publicity or privacy rights.\u003C/p\u003E\u003Cp\u003E Notice \u00C3\u201A\u00E2\u20AC\u201D For any reuse or distribution, you must make clear to others the license terms of this work. The best way to do this is with a link to this web page.\u003C/p\u003E\u003Cp\u003EYou may see this license in its latest form (which applies to this dsitribution even if this text does not match it) at the following webpage:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://creativecommons.org/licenses/by-sa/3.0/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://creativecommons.org/licenses/by-sa/3.0/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EWhen re-distributing ANY part of NovaPunch, you must include this license document and attribute credit to the authors in an approriate way. If you have any questions, you can contact the current caretaker below:\u003C/p\u003E\u003Cp\u003ETiberion @ KSP Forums - \u003Ca href=\u0022/cdn-cgi/l/email-protection#5b7e6c19342b2f3234357e6c1f\u0022\u003E\u003Cspan class=\u0022__cf_email__\u0022 data-cfemail=\u00222b464a5d4e594248406b4f424c425f4a4746515305454e5f\u0022\u003E[email\u0026#160;protected]\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EOther authors with work in this mod:\u003C/p\u003E\u003Cp\u003ESundayPunch\u003C/p\u003E\u003Cp\u003ENovaSilisko\u003C/p\u003E\u003Cp\u003ECaptain Slug\u003C/p\u003E\u003Cp\u003ETosh\u003C/p\u003E\u003Cp\u003EFrizzank (current NovaPunch artist, including the awesome new Gemini parts)\u003C/p\u003E\u003Cp\u003Ebac9\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-23T18:18:18Z\u0022 title=\u002208/23/2014 06:18  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 23, 2014\u003C/time\u003E by sal_vager\u003C/strong\u003E\n\u003Cbr\u003E0.9b2 release\n\u003C/span\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2014-01-16T13:23:27Z","Content":"\n\u003Cp\u003EThis looks like a useful tool for design -- I would like to see the plugin done so it is part-free, however. I\u0027d rather not be adding parts to my ships that are only functional in the VAB/SPH, and don\u0027t contribute to the final design. What happens if I remove the part and re-add it later (either later in the same VAB session, or in a later session)? How well does this handle ship renaming? I tend to \u0022branch\u0022 designs off of a baseline model, do development on the branch, and then either overwrite the original, or give the branched design a new name.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-01-16T13:39:51Z","Content":"\n\u003Cp\u003EYou should have a look at making it a partless addon. ( an example \u003Ca href=\u0022https://github.com/taraniselsu/TacExamples/tree/master/01-SimplePartlessPlugin/Source\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/taraniselsu/TacExamples/tree/master/01-SimplePartlessPlugin/Source\u003C/a\u003E )\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2014-01-16T15:49:44Z","Content":"\n\u003Cp\u003EOne other thought -- any possibility of adding a \u0022checkin comment\u0022? I doubt that\u0027s easy, but having something more descriptive than in-game UT and part count would help when trying to figure out which rev to unwind to. Especially if some previous revisions have parts that I have since removed from my installation (I don\u0027t want to back-rev to an invalid build, and be unable to recover the design).\u003C/p\u003E\n"},{"CreatedByName":"SkyHook","CreatedById":31496,"CreatedDateTime":"2014-01-16T15:51:53Z","Content":"\n\u003Cp\u003ESame here. Partless and this would be perfect. Excellent job, in any case!\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-01-16T18:24:57Z","Content":"\n\u003Cp\u003EThis looks useful. As others have stated, it should be a partless plugin.\u003C/p\u003E\u003Cp\u003EAlso, it would be nice if the button could be integrated into the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/60066\u0022 rel=\u0022external nofollow\u0022\u003EToolbar Plugin\u003C/a\u003E.\u003C/p\u003E\n"},{"CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-17T01:04:47Z","Content":"\n\u003Cp\u003EThis is defintely possible, and, in fact, the part count and the game date is what\u0027s currently used for the comment. I wanted the plugin to be non-intrusive with the way things are in KSP, so there is no ability to specify a user comment at the moment. But I\u0027ll add this to the desired features list -- the optional ability to specify a custom comment.\u003C/p\u003E\n"},{"CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-17T01:29:58Z","Content":"\n\u003Cp\u003EThe history is preserved (the large post has it somewhere) when you re-add the part to the same ship. The part just enables the UI and auto-commit, it does nothing to git history, and will be gone in the next version. Renaming is handled as if a new ship was created, no link is stored between the old and the new in git. When you overwrite the original, the old history is preserved (the history is always preserved), so I think the plugin would work for your scenario.\u003C/p\u003E\n"},{"CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-17T01:36:14Z","Content":"\n\u003Cp\u003EThe plugin is going partless in b2, which should be released in the coming few days. Plus, I\u0027ll add the linux binary for libgit2 for the most common distro in Steam, thus covering the largest chunk, if not all, of Linux. I\u0027ll also see what it takes to integrate with the toolbar in b2, but can\u0027t promise that.\u003C/p\u003E\u003Cp\u003EI just thought that for the first version people would expect something to happen only if a part is attached to the craft. The part is a hack of some decoupler from novapunch, you can see that I have no modeling skills.\u003C/p\u003E\u003Cp\u003EI also had a vision of settings the attributes on git versions during the flight and after ship recovery using the science system, so that in the git it can be seen which changeset landed on the mun and so forth. The part would enable that behavior during flight, but maybe partless is the way to go there too. This feature is not going to be in b2, I want to see how much interest is in the plugin in the first place.\u003C/p\u003E\n"},{"CreatedByName":"Tivec","CreatedById":60171,"CreatedDateTime":"2014-01-17T17:37:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022exm\u0022 data-cite=\u0022exm\u0022\u003E\u003Cdiv\u003EThe plugin is going partless in b2, which should be released in the coming few days. Plus, I\u0027ll add the linux binary for libgit2 for the most common distro in Steam, thus covering the largest chunk, if not all, of Linux. I\u0027ll also see what it takes to integrate with the toolbar in b2, but can\u0027t promise that.\u003Cp\u003EI just thought that for the first version people would expect something to happen only if a part is attached to the craft. The part is a hack of some decoupler from novapunch, you can see that I have no modeling skills.\u003C/p\u003E\u003Cp\u003EI also had a vision of settings the attributes on git versions during the flight and after ship recovery using the science system, so that in the git it can be seen which changeset landed on the mun and so forth. The part would enable that behavior during flight, but maybe partless is the way to go there too. This feature is not going to be in b2, I want to see how much interest is in the plugin in the first place.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would LOVE to have the git info to what changeset did certain things. Science recovered listed per revision would be awesome - if you can add it in so that it adds up should I do several flights with the same craft that is. As for part, I second above comments that this should be part less. There is no reason to not use this sort of revision system, it is just too good \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Eagerly waiting for the partless version \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"KvickFlygarn87","CreatedById":76314,"CreatedDateTime":"2014-01-17T18:42:42Z","Content":"\n\u003Cp\u003EYou know what would be very neat indeed? Having the possibility to go online and edit your friends\u0027 crafts, send a \u0022pull request\u0022 and if they like it, they could make that the main ship!\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-01-17T19:14:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022KvickFlygarn87\u0022 data-cite=\u0022KvickFlygarn87\u0022\u003E\u003Cdiv\u003Esend a \u0022pull request\u0022\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would require an online repository, such as on GitHub. But the idea is really interesting, especially since GitHub has an API that can be hooked into.\u003C/p\u003E\n"},{"CreatedByName":"synik4l","CreatedById":76492,"CreatedDateTime":"2014-01-17T20:30:18Z","Content":"\n\u003Cp\u003EThats was i was just thinking. I wonder if theres a way to get this setup to push files to github\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-01-17T23:14:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022synik4l\u0022 data-cite=\u0022synik4l\u0022\u003E\u003Cdiv\u003EThats was i was just thinking. I wonder if theres a way to get this setup to push files to github\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe repository in your save folder maintained by this plugin should be a regular Git repository, so you could always add a remote yourself and then push, even if KSP is running at the same time.\u003C/p\u003E\n"},{"CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-19T01:37:00Z","Content":"\n\u003Cp\u003EI second what blizzy78 wrote. You could use any of the many Git tools with the GitCraft repository. For instance, you could use the console git to push the repository. It is just a git repository in the saves/\u0026lt;saved game name\u0026gt; directory, and it will work with any tool that works with git repositories. I am not planning to add the pushing functionality into the plugin, though. The plugin is supposed to make git useful during the normal game. I don\u0027t think that the use-case for pushing those repositories justifies supporting it in the plugin right now. I believe that typically pushing is not done nearly as often as craft revisions.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-19T01:46:26Z\u0022 title=\u002201/19/2014 01:46  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 19, 2014\u003C/time\u003E by exm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-01-19T01:51:07Z","Content":"\n\u003Cp\u003EAre you planning on adding branching support? I believe that together with the ability to enter custom commit messages, branching can be very useful in iterative design. It should come with some visual representation of the particular branches for a given craft, though. I also think that branching should be used and visualized as per-craft, while of course internally it would be per-savegame (because there is one repository per save game.)\u003C/p\u003E\u003Cp\u003EAdditionally, it should be possible to edit past commit messages, for example to add additional comments. Since the repository is only local, messing with its commit history shouldn\u0027t pose any problems.\u003C/p\u003E\n"},{"CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-19T02:11:21Z","Content":"\n\u003Cp\u003EInteresting ideas. Regarding branching, I believe that the most common way of doing this right now is saving the ship under a different name, editing it there, and then overwriting the original ship, or simply using this other name for the new design. Question is, how much engineering do I have to do in GitCraft to make its branches more convenient than renaming approach and another question is how many users would adopt this new way of doing things, given that this is a plugin after all. I\u0027ll think more about this, but right now I am a bit skeptical about engineering GitCraft-specific branching that does not \u0022just work\u0022 with renaming. Maybe there is a way to make renaming \u0022just work\u0022 with git, but I don\u0027t see it right now.\u003C/p\u003E\u003Cp\u003ERegarding the commit message, I think that the commit message should be immutable, so that people don\u0027t have ambiguities pushing and pulling things. But the craft comments can be stored in a different way, e.g., using git objects that attach messages into revisions. This is a nice feature to have, but probably 1.0-ish (after partless, which is working in the trunk of GitCraft since yesterday, and after 0.9 release, where I give upgrade path for people who have the git part in their designs).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-19T02:13:28Z\u0022 title=\u002201/19/2014 02:13  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 19, 2014\u003C/time\u003E by exm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-01-19T02:23:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022exm\u0022 data-cite=\u0022exm\u0022\u003E\u003Cdiv\u003ERegarding branching, I believe that the most common way of doing this right now is saving the ship under a different name, ...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPersonally I don\u0027t like the \u0022rename\u0022 way to simulate branches, let alone the fact that saving the craft overwrites previous revisions (in stock.)\u003C/p\u003E\u003Cp\u003EI imagine a way for the plugin to show me a graph of revisions for a particular craft (its revisions and branches), and I could just select one and hit \u0022load\u0022. I would be fine if the plugin provides a completely different way of saving and loading craft, so that I wouldn\u0027t use the regular save/load buttons anymore. It\u0027s just another way of doing things.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022exm\u0022 data-cite=\u0022exm\u0022\u003E\u003Cdiv\u003ERegarding the commit message, I think that the commit message should be immutable, so that people don\u0027t have ambiguities pushing and pulling things.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERight, with that in mind, it is probably better to not modify previous commits.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022exm\u0022 data-cite=\u0022exm\u0022\u003E\u003Cdiv\u003Eand after 0.9 release, where I give upgrade path for people who have the git part in their designs\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot sure if that\u0027s time well spent, but of course that\u0027s your decision. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-19T02:30:30Z","Content":"\n\u003Cp\u003EIt is time well spent because I have the git part in the history of 70% of my rockets and 100% of my SSTOs. It would suck if suddenly I cant access the history of my SCANsat launcher design because the part is gone. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-01-19T02:31:30Z","Content":"\n\u003Cp\u003Eha, good point \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"avivey","CreatedById":98217,"CreatedDateTime":"2014-01-19T06:10:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022exm\u0022 data-cite=\u0022exm\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ERegarding the commit message, I think that the commit message should be immutable....\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not 100% sure if libgit2 supports it, but official git has a feature called Notes, which allows adding free-form text to commits without changing hashes. Should be right at home for this usage.\u003C/p\u003E\n"},{"CreatedByName":"exm","CreatedById":100924,"CreatedDateTime":"2014-01-20T13:53:40Z","Content":"\n\u003Cp\u003EJust a heads up, the 0.9b2 release has happened, the plugin is now partless, the first post and the thread title were updated. I kept the part inside the distribution for now, so that people have a chance to finish active missions before the part is removed in b3. In other words, the part is no longer required for normal GitCraft operation and users are strongly advised to take it off their ships. 0.9b3 release will feature an upgrade path for ships and their histories, but there is not much that I can do for active missions.\u003C/p\u003E\n"},{"CreatedByName":"JumpsterG","CreatedById":63396,"CreatedDateTime":"2014-01-21T14:33:21Z","Content":"\n\u003Cp\u003EWell envisioned, simple, and just plain awesome. This may become one of my \u0022must-haves\u0022.\u003C/p\u003E\u003Cp\u003EKudos \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Kilmeister","CreatedById":65062,"CreatedDateTime":"2014-01-21T15:11:50Z","Content":"\n\u003Cp\u003EI will check this out... I usually end up with like at least 10 or so saves per final design because I have always been doing versions and branching manually anyways.\u003C/p\u003E\n"},{"CreatedByName":"tavert","CreatedById":57383,"CreatedDateTime":"2014-01-21T16:06:57Z","Content":"\n\u003Cp\u003ECool idea exm. I personally manage my crafts with a naming convention (start at 1a, bump the number for a major redesign, bump the letter for minor tweaks) but the end result is my craft folders are pretty cluttered.\u003C/p\u003E\u003Cp\u003EYou should absolutely apply the versioning to quicksaves and persistence files too!\u003C/p\u003E\n"}]}