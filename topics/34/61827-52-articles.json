{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":52,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-10T06:27:53Z","Content":"\n\u003Cp\u003EReplying to myself here:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOne of the issues on the issues tracker is to make it explicitly notice when a WHEN clause is taking too long, and abort it with an error message telling the user what\u0027s going on and why and how they have to redesign their code.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI should warn people that as this gets implemented it might appear to \u0022slow down\u0022 some existing scripts a bit, but that would be because it\u0027s now going to be counting the triggers like LOCK and WHEN statements toward the 100 instructions per update limit. In the past what you got was 100 instructions per Update, PLUS ALSO whatever your WHEN and LOCK and ON statements were doing, which wasn\u0027t being tracked as part of that 100. The new design will make the program behave much more predictably, in terms of how many milliseconds of runtime it steals from KSP itself being mostly the same no matter how you wrote your code, and I might raise CONFIG:IPU to a bigger default to handle the fact that it would now be counting everything.\u003C/p\u003E\n"},{"CreatedByName":"Idranel","CreatedById":84266,"CreatedDateTime":"2014-08-10T15:41:36Z","Content":"\n\u003Cp\u003EHere is a little feature request:\u003C/p\u003E\u003Cp\u003EOne of my SSTO designs (using FAR) requires variable flap settings based on air speed measured in mach numbers.\u003C/p\u003E\u003Cp\u003EIt would be nice to have a function returning the speed of sound for a vessel\u0027s location.\u003C/p\u003E\n"},{"CreatedByName":"TiLorm","CreatedById":118298,"CreatedDateTime":"2014-08-10T23:57:24Z","Content":"\n\u003Cp\u003EI think you can just lock a variable to some calculation in one line. I don\u0027t know how FAR calculates speed of sound at different altitudes, but once I know that, I can probably make it.\u003C/p\u003E\n"},{"CreatedByName":"amiavamp","CreatedById":116015,"CreatedDateTime":"2014-08-11T04:31:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E-lots of things-\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you for the thorough explanation. I\u0027ve been beating my head against a wall trying to learn orbital mechanics and programming logic at the same time. I\u0027m not sure what was causing the NaN errors, but they all stopped on their own when I removed \u0022SET CONFIG:SAFE TO FALSE.\u0022, perhaps because I\u0027d unknowingly fixed a bug in my scripts at that point. As for the \u0022STATUS\u0022 variable, is there a list of all the possible values of it? It took me a bit to figure out that I also need to check for \u0022PRELAUNCH\u0022 in scripts that detect whether a vessel is landed. Incidentally, I found that checking altitude for whether a vessel is on the ground is unreliable at best - I had one landed rocket with a \u0022radar altitude\u0022 of over 100 meters because of its height.\u003C/p\u003E\u003Cp\u003EAnd as for the problem with fuel and staging...well, it was working for a bit, then started breaking sporadically. Then I discovered it was because engines would stop burning at random points - I had solid boosters on the same rocket that stopped at 0, 0.01, and 0.06 fuel during different launches using the same launch autopilot. I adjusted my script, but it still only works half the time, and I know it\u0027s not just because of the fuel levels now. I think having two separate conditions check for the same thing within a loop, one of which relies upon a flag set by the other, is a bad idea. My guess is that sometimes one triggers before the other in the wrong order, so the rocket no longer thinks it has solid boosters the instant they run dry and never stages. Anyway, I suppose a slightly wordier alternative script will fix the problem.\u003C/p\u003E\u003Cp\u003EEDIT: I did indeed fix the staging issue by making it do the fuelType check just before the main UNTIL loop and making it only change fuelType again after staging. Of course, now my ascent autopilot is over 3000 bytes. I suppose one way to shrink a program is to split it into separate programs to function as modules to do repetitive code.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-11T05:22:57Z\u0022 title=\u002208/11/2014 05:22  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 11, 2014\u003C/time\u003E by amiavamp\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-11T06:53:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022amiavamp\u0022 data-cite=\u0022amiavamp\u0022\u003E\u003Cdiv\u003EI found that checking altitude for whether a vessel is on the ground is unreliable at best - I had one landed rocket with a \u0022radar altitude\u0022 of over 100 meters because of its height.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is happening because every position and distance is measured from the center of mass of the vessel containing the kOS part. When you ask \u0022what is my altitude?\u0022 that immediately raises the question, \u0022do you mean the altitude of your landing legs? The altitude of your control capsule?...\u0022 kOS always picks the center of mass of the ship, because that\u0027s what the native KSP system uses.\u003C/p\u003E\u003Cp\u003ERather than call that a problem, I think it\u0027s fine that it does this, and the real problem is that you don\u0027t have a way to detect \u0022what is the shape and size of this vessel?\u0022 The real fix isn\u0027t to change how altitude is reported, but to give you the ability to query \u0022How many meters away from the center of mass is the bottom of my ship?\u0022 Right now that can\u0027t be done, but work is being done on features that would let you do that (mainly the ability to get the position and orientation of each part individually).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAnd as for the problem with fuel and staging...well, it was working for a bit, then started breaking sporadically. Then I discovered it was because engines would stop burning at random points - I had solid boosters on the same rocket that stopped at 0, 0.01, and 0.06 fuel during different launches using the same launch autopilot. I adjusted my script, but it still only works half the time, and I know it\u0027s not just because of the fuel levels now. I think having two separate conditions check for the same thing within a loop, one of which relies upon a flag set by the other, is a bad idea. My guess is that sometimes one triggers before the other in the wrong order, so the rocket no longer thinks it has solid boosters the instant they run dry and never stages. Anyway, I suppose a slightly wordier alternative script will fix the problem.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOther users have reported this problem lately and we\u0027ve discovered that it\u0027s not a bug in kOS but rather it\u0027s a weird buggy behavior in KSP itself that kOS is exposing you to in ways the manual flying interface tends to hide. What seems to be happening is that your animation frame rate takes a sliver of time, and KSP refuses to burn fuel if the fuel won\u0027t last the entire duration of that animation frame. So hypothetically if you have a choppy framerate of say 10 frames/sec, and the remaining tiny last drops of fuel, at the current throttle setting, would only last for, say, 1/20th of a second, then KSP flames out the engine now, since there\u0027s not enough fuel\u003C/p\u003E\u003Cp\u003Eto last one whole animation frame. Thus the last fuel never gets consumed. You don\u0027t notice it when flying manually because values tend to be displayed rounded off so much that the little sliver of fuel gets hidden from sight.\u003C/p\u003E\u003Cp\u003ETherefore, a more reliable check for whether an engine is starved is to query the engine\u0027s :FLAMEOUT boolean value. It will return TRUE when the fuel is in that scenario where there\u0027s fuel for the engine, but not enough to last an entire animation frame.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEDIT: I did indeed fix the staging issue by making it do the fuelType check just before the main UNTIL loop and making it only change fuelType again after staging. Of course, now my ascent autopilot is over 3000 bytes. I suppose one way to shrink a program is to split it into separate programs to function as modules to do repetitive code.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve never been happy with the way the code size is counted. Basically, these two programs have different source code size, but are identical after being compiled:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// This is a one-line program with\u003Cbr\u003E// a lot of verbose comments,\u003Cbr\u003E// and it uses long variable names and\u003Cbr\u003E// a lot of indenting spaces:\u003Cbr\u003EDECLARE PARAMETER this_is_my_long_variable_name\u003Cbr\u003E            PRINT    \u0022val squared is \u0022 \u002B this_is_my_long_variable_name ^ 2.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EDECLARE PARAMETER x. PRINT \u0022val squared is \u0022\u002Bx^2.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOnce they\u0027re compiled, they\u0027re the same size. It\u0027s rather annoying to have to \u0022pay\u0022 for writing good variable names and using readable indentation.\u003C/p\u003E\u003Cp\u003EGiven that kOS actually compiles your script code to a pseudo-bytecode machine language in its head when you issue the RUN command, I\u0027ve been contemplating the notion of letting users actually store pre-compiled \u0022object code\u0022 files on the craft\u0027s local volume and running from them instead of from the full source files.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-08-11T15:51:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI\u0027ve never been happy with the way the code size is counted. Basically, these two programs have different source code size, but are identical after being compiled:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// This is a one-line program with\u003Cbr\u003E// a lot of verbose comments,\u003Cbr\u003E// and it uses long variable names and\u003Cbr\u003E// a lot of indenting spaces:\u003Cbr\u003EDECLARE PARAMETER this_is_my_long_variable_name\u003Cbr\u003E            PRINT    \u0022val squared is \u0022 \u002B this_is_my_long_variable_name ^ 2.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EDECLARE PARAMETER x. PRINT \u0022val squared is \u0022\u002Bx^2.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOnce they\u0027re compiled, they\u0027re the same size. It\u0027s rather annoying to have to \u0022pay\u0022 for writing good variable names and using readable indentation.\u003C/p\u003E\u003Cp\u003EGiven that kOS actually compiles your script code to a pseudo-bytecode machine language in its head when you issue the RUN command, I\u0027ve been contemplating the notion of letting users actually store pre-compiled \u0022object code\u0022 files on the craft\u0027s local volume and running from them instead of from the full source files.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmmm... kOS \u002B RemoteTech = Compile In the Archive, upload the compiled code. Minimize time/elec for comms. Also, new CPUs that can compile, for stations/bases where there\u0027s more resources to code and compile the programs before giving the object code to the flight computers (assume Flight Center already has enough CPU power to compile Kerbin-side). Luverly! Only allow in-game edits when there\u0027s a comms connection to a compiler unit, or from a vessel with a compiler unit configured. Limit out-of-game edits to Kerbin Archive only? Hrmm... That might require more archive-level storage, for the compiler CPUs, perhaps a drive array of some sort? Unlimited on Kerbin, but you have to build your infrastructure off-world. Long term goals...\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-08-11T17:42:59Z","Content":"\n\u003Cp\u003EIs there a way to check if the user has a target set? I\u0027m trying to fetch some data from a target, and I\u0027d like to build in a graceful exit in case the user forgot to set his target.\u003C/p\u003E\u003Cp\u003EOn another note, it seems that kOS thinks that 10^-1 equals 0, which it obviously doesn\u0027t.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-11T20:54:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ralathon\u0022 data-cite=\u0022Ralathon\u0022\u003E\u003Cdiv\u003EIs there a way to check if the user has a target set? I\u0027m trying to fetch some data from a target, and I\u0027d like to build in a graceful exit in case the user forgot to set his target.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAt the moment, no. Because an unset target has value NULL, and kOS doesn\u0027t have a way to check against whether or not something is NULL, which is a hole in the language I\u0027d like to see fixed.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOn another note, it seems that kOS thinks that 10^-1 equals 0, which it obviously doesn\u0027t.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETemp fix for now: explicitly state that the arguments are floating point, like so: 10.0 ^ -1.0\u003C/p\u003E\u003Cp\u003EThe problem is that when both operands are integer, it\u0027s assuming the output should be integer, and thus rounding. You\u0027re getting 0 because it\u0027s rounding the value of 0.1 down.\u003C/p\u003E\u003Cp\u003Elong term fix - I\u0027d like to change all math operations so they find out whether the result will be a round number or not, and then decide whether to return it as an integer or floating point based on that, rather than based on the input operands\u0027 types. This is an area of the code I haven\u0027t touched much and the person who has has been very busy and out of contact for a while, making me reluctant to stick my hands in his code and change everything without buy-in from him.\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-08-11T21:08:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAt the moment, no. Because an unset target has value NULL, and kOS doesn\u0027t have a way to check against whether or not something is NULL, which is a hole in the language I\u0027d like to see fixed.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, that\u0027s a shame. I guess I\u0027ll just set a simple target like the mun during initialization to avoid the problem.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ETemp fix for now: explicitly state that the arguments are floating point, like so: 10.0 ^ -1.0\u003C/p\u003E\u003Cp\u003EThe problem is that when both operands are integer, it\u0027s assuming the output should be integer, and thus rounding. You\u0027re getting 0 because it\u0027s rounding the value of 0.1 down.\u003C/p\u003E\u003Cp\u003Elong term fix - I\u0027d like to change all math operations so they find out whether the result will be a round number or not, and then decide whether to return it as an integer or floating point based on that, rather than based on the input operands\u0027 types. This is an area of the code I haven\u0027t touched much and the person who has has been very busy and out of contact for a while, making me reluctant to stick my hands in his code and change everything without buy-in from him.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, that worked.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-11T21:08:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EHmmm... kOS \u002B RemoteTech = Compile In the Archive, upload the compiled code. Minimize time/elec for comms. Also, new CPUs that can compile, for stations/bases where there\u0027s more resources to code and compile the programs before giving the object code to the flight computers (assume Flight Center already has enough CPU power to compile Kerbin-side). Luverly! Only allow in-game edits when there\u0027s a comms connection to a compiler unit, or from a vessel with a compiler unit configured. Limit out-of-game edits to Kerbin Archive only? Hrmm... That might require more archive-level storage, for the compiler CPUs, perhaps a drive array of some sort? Unlimited on Kerbin, but you have to build your infrastructure off-world. Long term goals...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve often thought that a neat feature might be to create a \u0022space center mainframe\u0022 kOS CPU that lives inside one of the ground buildings, conceptually, who\u0027s \u0022local drive\u0022 is the archive. You could use it to run kOS code, so long as that kOS code doesn\u0027t do anything that requires ship-based information like your velocity, your current fuel, etc, because the CPU wouldn\u0027t be associated with a vessel. This would let you do things like write code that tries to calculate a good launch window for you, and tells you the date/time that you should probably launch your mission if your goal is to get to planet so-and-so. It would also let you use the infinite storage to run something too complex for the remote probe, and just transmit the final answer to the remote probe. It always seemed a bit silly to me that the way kOS is working now, you\u0027d have to first put your vessel on the launchpad, then run the code to find the launch window, then wait for several months with the vessel on the launchpad, then launch it. A real space program would be doing those calculations on a ground-based computer first in order to learn when to put the vessel on the launchpad.\u003C/p\u003E\u003Cp\u003EThe only reason this isn\u0027t done yet (well, besides kOS being a neat huge project with a \u0022would be nice\u0022 list a mile long already) is that so much of how the system works is built on the assumption that all cpu\u0027s are contained in a KSP part, which is contained in a KSP vessel. If you tried to run code that said, for example, \u0022PRINT SHIP:VELOCITY\u0022 on a kOS CPU that isn\u0027t ON a ship, I suspect it wouldn\u0027t just give a nice error message, but would crash the Csharp code because it presumes there will always be a SHIP no matter what. Trying to divorce the system from that assumption would be a lot of work and there\u0027s bigger problems to tackle right now. But it is something for the future I\u0027d like to see \u0022some day\u0022.\u003C/p\u003E\u003Cp\u003EAs a stopgap, I\u0027ve considered building a rover vessel that has a kOS CPU on it and an antenna array, launching it at KSP, and just driving it over to the buildings and parking it there and leaving it for the rest of my campaign. Then it could be my \u0022ground\u0022 mainframe, and could participate in remoteTech transmissions and the like, and it would be close enough to KSC that it would always be in range of the archive.\u003C/p\u003E\n"},{"CreatedByName":"Darren9","CreatedById":58062,"CreatedDateTime":"2014-08-13T03:19:03Z","Content":"\n\u003Cp\u003EI haven\u0027t done any programming until now and I\u0027m having difficulty doing what I want with this great mod, I\u0027ve read most of the wiki and I can get a rocket to orbit but the particular thing I\u0027d like to control is a walker that walks by IR joints activated with various action groups with various timings. I\u0027ve got the Toggle AG\u0027s and Wait\u0027s in between them working as a string of commands that takes two steps forward. I left AG1 blank to use as an input to make it take repeated two step cycles. I\u0027ve looked at ON AG1, or WHEN AG1=1 THEN, UNTIL, and I\u0027m perplexed.\u003C/p\u003E\u003Cp\u003EHow would I make a script that runs my string of walk commands in a loop when AG1 is pressed once and stops when it\u0027s pressed again (must complete the last loop fully), but doesn\u0027t stop there and resets so it\u0027s waiting for the next AG1 to start looping the walk commands again (continually running while the vessel is active).\u003C/p\u003E\u003Cp\u003EAny pointers will be greatly appreciated, cheers Darren9.\u003C/p\u003E\n"},{"CreatedByName":"fathed","CreatedById":118319,"CreatedDateTime":"2014-08-13T04:14:50Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EBOOLEAN TOGGLE FIELDS:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E These are variables that behave like boolean flags. They can be True or False, and can be set or toggled using the \u0022ON\u0022 and \u0022OFF\u0022 and \u0022TOGGLE\u0022 commands. Many of these are for action group flags. \u003Cstrong\u003ENOTE ABOUT ACTION GROUP FLAGS:\u003C/strong\u003E If the boolean flag is for an action group, be aware that each time the user presses the action group keypress, it \u003Cem\u003Etoggles\u003C/em\u003E the action group, so you might need to check for both the change in state from false to true AND the change in state from true to false to see if the key was hit.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset stop to false.\u003Cbr\u003Euntil stop = true {\u003C/pre\u003E\u003Cp\u003E[INDENT]if (ag01 = true) {\u003Cbr\u003E[/INDENT]\u003C/p\u003E\u003Cp\u003E\u003Cbr\u003E[INDENT=2]do stuff\u003Cbr\u003E[/INDENT]\u003Cbr\u003E[INDENT=2]if (ag01 = false) {\u003Cbr\u003E[/INDENT]\u003Cbr\u003E[INDENT=3]set stop to true;\u003Cbr\u003E[/INDENT]\u003Cbr\u003E[INDENT=2]}.[/INDENT]\u003Cbr\u003E\u003C/p\u003E\u003Cp\u003E[INDENT]} else {\u003Cbr\u003E[/INDENT]\u003C/p\u003E\u003Cp\u003E\u003Cbr\u003E[INDENT=2]set stop to true.\u003Cbr\u003E[/INDENT]\u003Cbr\u003E\u003C/p\u003E\u003Cp\u003E[INDENT]}.\u003Cbr\u003Ewait 0.001.\u003Cbr\u003E[/INDENT]\u003C/p\u003E\u003Cp\u003E\u003Cbr\u003E }.\u003Cbr\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-13T04:17:51Z\u0022 title=\u002208/13/2014 04:17  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 13, 2014\u003C/time\u003E by fathed\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-13T04:28:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fathed\u0022 data-cite=\u0022fathed\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003EBOOLEAN TOGGLE FIELDS:\u003C/strong\u003E\u003Cp\u003E These are variables that behave like boolean flags. They can be True or False, and can be set or toggled using the \u0022ON\u0022 and \u0022OFF\u0022 and \u0022TOGGLE\u0022 commands. Many of these are for action group flags. \u003Cstrong\u003ENOTE ABOUT ACTION GROUP FLAGS:\u003C/strong\u003E If the boolean flag is for an action group, be aware that each time the user presses the action group keypress, it \u003Cem\u003Etoggles\u003C/em\u003E the action group, so you might need to check for both the change in state from false to true AND the change in state from true to false to see if the key was hit.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFurthermore, this is what the ON trigger is designed to do, and was made that way specifically because of the way action group booleans work (which is the way they\u0027re implemented in KSP itself).\u003C/p\u003E\u003Cp\u003EYou might have wondered why there even is an ON statement, given that you can write \u0022WHEN AG1=TRUE THEN...\u0022.\u003C/p\u003E\u003Cp\u003EThe reason is that ON triggers on any CHANGE TO the boolean variable it mentions: from false to true or from true to false.\u003C/p\u003E\u003Cp\u003EON AG1 { dostuff. }\u003C/p\u003E\u003Cp\u003Eis the same as:\u003C/p\u003E\u003Cp\u003Eset previous_AG1 to AG1.\u003C/p\u003E\u003Cp\u003EWHEN AG1 \u0026lt;\u0026gt; previous_AG1 THEN {\u003C/p\u003E\u003Cp\u003E set previous_AG1 to AG1.\u003C/p\u003E\u003Cp\u003E dostuff.\u003C/p\u003E\u003Cp\u003E}.\u003C/p\u003E\u003Cp\u003EBut without you having to mess about with tracking previous_AG1 yourself. The ON command does that tracking internally for you.\u003C/p\u003E\n"},{"CreatedByName":"fathed","CreatedById":118319,"CreatedDateTime":"2014-08-13T05:06:13Z","Content":"\n\u003Cp\u003EHis advice is much better than mine, use it, not mine.\u003C/p\u003E\n"},{"CreatedByName":"Darren9","CreatedById":58062,"CreatedDateTime":"2014-08-13T06:21:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fathed\u0022 data-cite=\u0022fathed\u0022\u003E\u003Cdiv\u003EHis advice is much better than mine, use it, not mine.\u003C/div\u003E\u003C/blockquote\u003EUnfortunately I couldn\u0027t make that work, there\u0027s a \u0022;\u0022it doesn\u0027t like (I changed it to a \u0022.\u0022), and \u0022ag01 isn\u0027t defined as a variable\u0022 (I changed those to \u0022ag1\u0022) and then it runs but exits immediately. And I still wouldn\u0027t have a clue how to include the \u0022ON AG1\u0022.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EFurthermore, this is what the ON trigger is designed to do, and was made that way specifically because of the way action group booleans work (which is the way they\u0027re implemented in KSP itself).\u003Cp\u003EYou might have wondered why there even is an ON statement, given that you can write \u0022WHEN AG1=TRUE THEN...\u0022.\u003C/p\u003E\u003Cp\u003EThe reason is that ON triggers on any CHANGE TO the boolean variable it mentions: from false to true or from true to false.\u003C/p\u003E\u003Cp\u003EON AG1 { dostuff. }\u003C/p\u003E\u003Cp\u003Eis the same as:\u003C/p\u003E\u003Cp\u003Eset previous_AG1 to AG1.\u003C/p\u003E\u003Cp\u003EWHEN AG1 \u0026lt;\u0026gt; previous_AG1 THEN {\u003C/p\u003E\u003Cp\u003E set previous_AG1 to AG1.\u003C/p\u003E\u003Cp\u003E dostuff.\u003C/p\u003E\u003Cp\u003E}.\u003C/p\u003E\u003Cp\u003EBut without you having to mess about with tracking previous_AG1 yourself. The ON command does that tracking internally for you.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003EI understand \u0022ON AG1 { dostuff. }\u0022, but not how I\u0027d make it loop the \u0022do stuff\u0022 until another AG1 and then go back to the first \u0022ON AG1\u0022.\u003Cp\u003EAnd thanks for both of your help.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-13T07:45:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Darren9\u0022 data-cite=\u0022Darren9\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI understand \u0022ON AG1 { dostuff. }\u0022, but not how I\u0027d make it loop the \u0022do stuff\u0022 until another AG1 and then go back to the first \u0022ON AG1\u0022.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI almost thought I understood what you meant until I got to the phrase \u0022then go back to the first ON AG1\u0022 - I have no idea what you mean by that.\u003C/p\u003E\u003Cp\u003EIf I understand what you were talking about earlier, you have a routine that does two robotic footsteps. You want it to do that each time a user hits AG1, then wait for the user to hit AG1 again before it takes another two steps. Is this correct? Or did you want it to continue taking two steps over and over until AG1 is hit again to stop it?\u003C/p\u003E\u003Cp\u003EThe main trick you have to realize is that triggers like ON and WHEN are not supposed to contain long running loops. This is because they run \u003Cstrong\u003Eall the way to the end\u003C/strong\u003E before kOS finishes its animation frame update, and the entire KSP universe is frozen in place until they finish. Thus you can\u0027t really do any piloting or controlling in loops with them, because the universe won\u0027t react to your control inputs until you finish the body of the ON or WHEN and allow the KSP animation to resume. This is not intuitively obvious from the language definition, \u003Cem\u003Eand furthermore it is a change from the way it used to be implemented back when Kevin designed the system. If you got your information from the out of date Wiki it probably won\u0027t mention this because back in version 0.9 it wasn\u0027t the case yet\u003C/em\u003E. I\u0027ve implemented a new error check that catches it when you try to run long-lasting code inside a trigger, but it\u0027s not going to be released for a while.\u003C/p\u003E\u003Cp\u003EContrast that with main body code. In main body code, the CPU only runs as much of your code as it thinks it\u0027s prudent to run within one animation frame of KSP, and then pauses your script program, lets the rest of KSP, and all the other KSP mods, do their update work for that frame of animation, and on the next animation frame, it continues your program where it left off - so long running loops are safe in the main body of the code, but not in ON or WHEN.\u003C/p\u003E\u003Cp\u003ESo what you can do is run the main loop in the main body of the code, but use triggers like On and WHEN to just fiddle with variable settings to affect what will happen in the main body. The first example program below does this.\u003C/p\u003E\u003Cp\u003EFor these two examples, replace the word TAKE_TWO_STEPS with whatever the lines of code are that you\u0027ve written that you said takes two steps with your rover.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// This is a version where AG1 is supposed to just take two steps once, and you have to keep hitting AG1 again and again\u003Cbr\u003E// to keep taking steps over and over:\u003Cbr\u003E\u003Cbr\u003ESET doSteps to false.\u003Cbr\u003EON AG1 {\u003Cbr\u003E  SET doSteps to true.\u003Cbr\u003E\u003Cbr\u003E  PRESERVE.  // Causes the ON statement to remain in place for next time.\u003Cbr\u003E             // (The default is that ON and WHEN will only trigger once and then delete\u003Cbr\u003E             // themselves, unless you explicitly tell them not to with this keyword.).\u003Cbr\u003E}.\u003Cbr\u003ESET done to false.\u003Cbr\u003EUNTIL done {\u003Cbr\u003E  if doSteps {\u003Cbr\u003E\u003Cbr\u003E    TAKE_TWO_STEPS.\u003Cbr\u003E\u003Cbr\u003E    SET doSteps to False. // will not trigger again until AG1 hit again.\u003Cbr\u003E  }.\u003Cbr\u003E}.\u003Cbr\u003E// Note, I didn\u0027t set done to true anywhere.  This is an infinite loop\u003Cbr\u003E// until you decide how you want it to end, and implement it by\u003Cbr\u003E// doing a SET DONE TO TRUE somewhere.\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// This is a version where the rover is supposed to continue walking continually\u003Cbr\u003E// as long as AG1 is on.  When AG1 is toggled again to off, the rover stops\u003Cbr\u003E// until AG1 is hit again:\u003Cbr\u003E\u003Cbr\u003ESET done to false.\u003Cbr\u003EUNTIL done {\u003Cbr\u003E  if AG1 { // The first time you hit 1, AG1 becomes True.  Hit it again and it becomes false (and the walking stops).\u003Cbr\u003E\u003Cbr\u003E    TAKE_TWO_STEPS.\u003Cbr\u003E\u003Cbr\u003E  }.\u003Cbr\u003E}.\u003Cbr\u003E// Note, I didn\u0027t set done to true anywhere.  This is an infinite loop\u003Cbr\u003E// until you decide how you want it to end, and implement it by\u003Cbr\u003E// doing a SET DONE TO TRUE somewhere.\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-13T07:59:16Z\u0022 title=\u002208/13/2014 07:59  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 13, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-08-13T10:26:44Z","Content":"\n\u003Cp\u003EJust wanted to say thanks for implementing the vectordraw code. At first I had trouble finding a use for it, but as soon as I started to work on my new launch script it helped tremendously to visualize what my code was actually doing:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://imgur.com/4c18xVV.png\u0022 alt=\u00224c18xVV.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Darren9","CreatedById":58062,"CreatedDateTime":"2014-08-13T17:39:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI almost thought I understood what you meant until I got to the phrase \u0022then go back to the first ON AG1\u0022 - I have no idea what you mean by that.\u003Cp\u003E~snip~\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003EIt was the second example I was after, understanding the first will also be very useful. Thanks for taking the time to explain it to me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-13T18:29:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ralathon\u0022 data-cite=\u0022Ralathon\u0022\u003E\u003Cdiv\u003EJust wanted to say thanks for implementing the vectordraw code. At first I had trouble finding a use for it, but as soon as I started to work on my new launch script it helped tremendously to visualize what my code was actually doing:\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI noticed in your screenshot that Kerbin looks like Earth, with the camera aimed at Indonesia. Which mod are you using that does this? I\u0027d heard people had had all sorts of problems getting RSS to work with kOS.\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-08-13T18:42:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI noticed in your screenshot that Kerbin looks like Earth, with the camera aimed at Indonesia. Which mod are you using that does this? I\u0027d heard people had had all sorts of problems getting RSS to work with kOS.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYea that\u0027s RSS. Using the latest version of both that and kOS and I\u0027m having no issues at all.\u003C/p\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-08-13T19:09:27Z","Content":"\n\u003Cp\u003EMy experience worth RO and KoS was km_gimbal that was preventing kos from working properly with prior RO installs - KoS autopilot wouldn\u0027t invoke gimbal control. Aerodynamic, RCS, and pod torque worked fine.\u003C/p\u003E\u003Cp\u003E.24 RO has removed km gimbal as stock has added roll control to default.\u003C/p\u003E\u003Cp\u003EThis isn\u0027t definitive or anything, just my observations.\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-08-13T19:46:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022IronGremlin\u0022 data-cite=\u0022IronGremlin\u0022\u003E\u003Cdiv\u003EMy experience worth RO and KoS was km_gimbal that was preventing kos from working properly with prior RO installs - KoS autopilot wouldn\u0027t invoke gimbal control. Aerodynamic, RCS, and pod torque worked fine.\u003Cp\u003E.24 RO has removed km gimbal as stock has added roll control to default.\u003C/p\u003E\u003Cp\u003EThis isn\u0027t definitive or anything, just my observations.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENote that I\u0027m not using RO, but instead a homebrewed set of configs. So if people are having trouble with kOS \u002B RSS it might just be some incompatibility between RO and kOS.\u003C/p\u003E\n"},{"CreatedByName":"WeirdCulture","CreatedById":76591,"CreatedDateTime":"2014-08-14T07:44:54Z","Content":"\n\u003Cp\u003EHi fellow Kerbonauts, \u003C/p\u003E\u003Cp\u003Eany idea how to get something like: 15 seconds behind Apoapsis?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-14T08:10:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022WeirdCulture\u0022 data-cite=\u0022WeirdCulture\u0022\u003E\u003Cdiv\u003EHi fellow Kerbonauts, \u003Cp\u003Eany idea how to get something like: 15 seconds behind Apoapsis?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EETA:Apoapsis is the number of seconds from now to apoapsis.\u003C/p\u003E\n"},{"CreatedByName":"WeirdCulture","CreatedById":76591,"CreatedDateTime":"2014-08-14T08:28:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EETA:Apoapsis is the number of seconds from now to apoapsis.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know, and i need the numbers of seconds \u0022behind\u0022 the Apoapsis\u003C/p\u003E\n"}]}