{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":146,"Articles":[{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2015-11-07T04:45:35Z","Content":"\n\u003Cp\u003E[h=2]Steering More Much Betterer[/h][h=3]\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/blob/develop/CHANGELOG.md#changes\u0022 rel=\u0022external nofollow\u0022\u003E\u003C/a\u003EChanges[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EChanged default MaxStoppingTime to 2 seconds ( was 1 )\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[h=3]\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/blob/develop/CHANGELOG.md#bug-fixes\u0022 rel=\u0022external nofollow\u0022\u003E\u003C/a\u003EBUG FIXES[/h]\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EFixed a issue where the effect of the Kd parameter of PIDLoop was having a reversed effect #1229\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EFixes an issue where NO_FLOW resources ( eg SolidFuel ) were not reporting correctly #1231\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-07T04:58:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hvacengi\u0022 data-cite=\u0022hvacengi\u0022\u003E\u003Cdiv\u003EIn every experiment I conducted, the old cooked steering was an epic failure when using either control surfaces, or gimbals as the primary source of torque. I\u0027m happy that these values worked well for you in all instances, but that was by no means the norm.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll take your word for it, I guess. My experience was very much to the contrary.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hvacengi\u0022 data-cite=\u0022hvacengi\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ENow:\u003C/p\u003E\u003Cp\u003EThe new system is not just a PID loop with some tuned constants. The first modification I made was to add a calculation of engine gimbal torque, allowing the calculation to remain accurate when the available torque from the engines dwarfed that from reaction wheels and RCS (for example a gimbaled launcher, with a satellite on top). Next, I worked with another contributor on an accurate model for calculating required/target torque to achieve a desired angular velocity. After that, I implemented a total of 6 PID loops to calculate the target angular velocity and torque about 3 different axes. Finally, I wrote an algorithm that analysis the observed change in angular velocity, and automatically adjusts the \u0022available torque\u0022 based on a running average....\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, I got the gist of that from reading your code. You\u0027re trying to do two (possibly conflicting) things here: 1) Offer a turnkey steering solution 2) Offer a semi-tunable steering method that\u0027s more user friendly than a custom-made PID loop. My contention is that \u003C/p\u003E\u003Cp\u003E1) the turnkey solution is worse than the original solution *in terms of being turnkey*. While it can probably cover more cases *with tuning*, it performs worse \u0022out of the box\u0022 (in my experience).\u003C/p\u003E\u003Cp\u003E2) the semi-tunable solution is less user friendly than just \u0022rolling your own\u0022. PID loops are very well understood, and a user sophisticated enough to write a KOS script in the first place should be able to write one. The new cooked steering adds a layer of abstraction on top which makes tuning extremely difficult (tuning PID parameters exposed by SteeringManager does NOT produce the results one would expect from turning a standard PID loop). Users are forced to learn how to tune \u0022KOS Steering\u0022, which is much more esoteric and frankly useless than learning how to tune a PID loop. While there could eventually be a library of useful tuning parameters, any changes to your algorithm (I see some TODOs) effectively breaks the library.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hvacengi\u0022 data-cite=\u0022hvacengi\u0022\u003E\u003Cdiv\u003EIf we had chosen to maintain two tracks of steering, the answer to any issue with legacy steering would be \u0022use the new steering\u0022. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u0022Use the new steering\u0022 is a perfectly fine answer. Why not encapsulate and deprecate the old behavior without removing it? Actually, if I submitted a patch to reintroduce this as a deprecated feature that\u0027s enabled by a flag, would the dev team accept it?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hvacengi\u0022 data-cite=\u0022hvacengi\u0022\u003E\u003Cdiv\u003EAll of this being said, we do want to get feedback on default tuning. We are already preparing to adjust a couple of default parameters in the next patch. There has even been discussion of adding some \u0022recommended\u0022 tuning scripts to KSLib for different shapes/classes of ships. The easiest way for us to give the users a good default performance is to get feedback on what values work most often for most users.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s great, but why not keep the old code path until there is a robust library and documentation on the new stuff?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hvacengi\u0022 data-cite=\u0022hvacengi\u0022\u003E\u003Cdiv\u003EI should be setting up a stream tomorrow afternoon to go through the new features in 0.18.0 and help with issue as well as real time feedback/discussion. I\u0027m also planning on writing a tuning FAQ of sorts, and doing a video to walk through some of the behaviors.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECool!\u003C/p\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-07T18:19:27Z","Content":"\n\u003Cp\u003EWell I went ahead and encapsulated the old steering logic and added a bound variable flag to enable/disable it. Took about 1 hour.\u003C/p\u003E\u003Cp\u003EIf the dev team is interested in this, let me know and I will add documentation, open an issue, and submit a pull request.\u003C/p\u003E\u003Cp\u003EOtherwise, I\u0027ll just use my modified build of KOS until the new steering becomes adequate for my purposes.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2015-11-07T18:58:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EWell I went ahead and encapsulated the old steering logic and added a bound variable flag to enable/disable it. Took about 1 hour.\u003Cp\u003EIf the dev team is interested in this, let me know and I will add documentation, open an issue, and submit a pull request.\u003C/p\u003E\u003Cp\u003EOtherwise, I\u0027ll just use my modified build of KOS until the new steering becomes adequate for my purposes.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt would be helpful if you have a script and craft that can only work under the old system for us to test with. This is only the first version of the new system and there is surely work to do to improve it. We are interested in finding out why the new one may not be as good out of the box for some applications and find a way to improve it. All of my tests were very positive in the new system but i almost never fly spaceplanes. \u003C/p\u003E\u003Cp\u003EI dont think anyone who is active on the dev team is interested in including the old system. It was demonstratively broken in far too many situations.\u003C/p\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-08T05:38:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EIt would be helpful if you have a script and craft that can only work under the old system for us to test with. This is only the first version of the new system and there is surely work to do to improve it. We are interested in finding out why the new one may not be as good out of the box for some applications and find a way to improve it. All of my tests were very positive in the new system but i almost never fly spaceplanes. \u003Cp\u003EI dont think anyone who is active on the dev team is interested in including the old system. It was demonstratively broken in far too many situations.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHere you go. \u003Ca href=\u0022https://www.dropbox.com/s/xeox6pkn6f5rgna/drake.zip?dl=0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.dropbox.com/s/xeox6pkn6f5rgna/drake.zip?dl=0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI have no problems flying that with mechjeb or pilot assistant, or kos .17. There\u0027s no set of tuning parameters (all 6\u002B of them per axis) that I can find that can steer this ship without either overshooting on pitch change or going off course when holding a certain pitch. Having to have separate tuning depending on your altitude/speed is ridiculous, I\u0027d rather write my own custom control loop than do that.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-11-08T23:25:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EHere you go. \u003Ca href=\u0022https://www.dropbox.com/s/xeox6pkn6f5rgna/drake.zip?dl=0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.dropbox.com/s/xeox6pkn6f5rgna/drake.zip?dl=0\u003C/a\u003E\u003Cp\u003EI have no problems flying that with mechjeb or pilot assistant, or kos .17. There\u0027s no set of tuning parameters (all 6\u002B of them per axis) that I can find that can steer this ship without either overshooting on pitch change or going off course when holding a certain pitch. Having to have separate tuning depending on your altitude/speed is ridiculous, I\u0027d rather write my own custom control loop than do that.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI tested your craft and script on 0.17.3 (with minor edits to comment out the 0.18 - specific code and change \u0027groundspeed\u0027/\u0027surfacespeed\u0027) and I also tested it on 0.18.1.\u003C/p\u003E\u003Cp\u003EThe claim that it doesn\u0027t work well in 0.18.x is an extreme exaggeration. It\u0027s a little bit more fiddly (your plane has extremely weak pitch and roll and yaw authority, by the way, and was quite hard to even fly manually), but it does work.\u003C/p\u003E\u003Cp\u003EThe thing you didn\u0027t mention, which was super important, is that your script is built on very very tight hardcoded assumptions with no tolerance for deviation of any kind. Even on the successful 0.17.3 launch, it ended the launch like so:\u003C/p\u003E\u003Cp\u003EPe = 70,143\u003C/p\u003E\u003Cp\u003EAp = 70,222\u003C/p\u003E\u003Cp\u003ERemaining liquidfuel for ascent engine: 19.68 / 1125 (not counting the much larger tank, which because it\u0027s feed was disabled I\u0027m assuming was intended as a passive payload).\u003C/p\u003E\u003Cp\u003EYou never mentioned that you were operating on such razer-thin margins, and that the real problem was that the new steering just made the launch \u0022ever so slightly\u0022 less efficient, and your setup could tolerate no deviations from that at all. That\u0027s sort of important to the complaint that you\u0027re making.\u003C/p\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-09T00:33:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI tested your craft and script on 0.17.3 (with minor edits to comment out the 0.18 - specific code and change \u0027groundspeed\u0027/\u0027surfacespeed\u0027) and I also tested it on 0.18.1.\u003Cp\u003EThe claim that it doesn\u0027t work well in 0.18.x is an extreme exaggeration. It\u0027s a little bit more fiddly (your plane has extremely weak pitch and roll and yaw authority, by the way, and was quite hard to even fly manually), but it does work.\u003C/p\u003E\u003Cp\u003EThe thing you didn\u0027t mention, which was super important, is that your script is built on very very tight hardcoded assumptions with no tolerance for deviation of any kind. Even on the successful 0.17.3 launch, it ended the launch like so:\u003C/p\u003E\u003Cp\u003EPe = 70,143\u003C/p\u003E\u003Cp\u003EAp = 70,222\u003C/p\u003E\u003Cp\u003ERemaining liquidfuel for ascent engine: 19.68 / 1125 (not counting the much larger tank, which because it\u0027s feed was disabled I\u0027m assuming was intended as a passive payload).\u003C/p\u003E\u003Cp\u003EYou never mentioned that you were operating on such razer-thin margins, and that the real problem was that the new steering just made the launch \u0022ever so slightly\u0022 less efficient, and your setup could tolerate no deviations from that at all. That\u0027s sort of important to the complaint that you\u0027re making.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you have tuning parameters whereby this craft can achieve orbit on .18, please share. The point is this craft can be orbited with MJ, pilot assistant, or .17. It cannot with .18 (believe me I spent hours fiddling with alternative ascent profiles and tuning parameters, short of writing my own PID loops).\u003C/p\u003E\u003Cp\u003EI\u0027m not sure why the thin margin was so important. Isn\u0027t that a major part of the rationale behind KoS? Precise control for marginal situations? I would be interested to see how, for example, the eve mammoth ssto fares with the new steering method.\u003C/p\u003E\u003Cp\u003E I posted my craft/.ks files as a way to help developers improve the new steering, but apparently my use case isn\u0027t valid. Oh well, I have my custom build of .18.1....\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-09T00:38:15Z\u0022 title=\u002211/09/2015 12:38  AM\u0022 data-short=\u00228 yr\u0022\u003ENovember 9, 2015\u003C/time\u003E by tewpie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Qigon","CreatedById":141819,"CreatedDateTime":"2015-11-09T04:47:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EIf you have tuning parameters whereby this craft can achieve orbit on .18, please share. The point is this craft can be orbited with MJ, pilot assistant, or .17. It cannot with .18 (believe me I spent hours fiddling with alternative ascent profiles and tuning parameters, short of writing my own PID loops).\u003Cp\u003EI\u0027m not sure why the thin margin was so important. Isn\u0027t that a major part of the rationale behind KoS? Precise control for marginal situations? I would be interested to see how, for example, the eve mammoth ssto fares with the new steering method.\u003C/p\u003E\u003Cp\u003E I posted my craft/.ks files as a way to help developers improve the new steering, but apparently my use case isn\u0027t valid. Oh well, I have my custom build of .18.1....\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll add my 2 cents\u003C/p\u003E\u003Cp\u003EMaybe you should see the typical use for cooked control as a less hardcore and more casual user. It may look as now we\u0027re having less quality because you are expecting an equal or better behavior for a craft that you invested time on, and you may have skills and time to make better, but that\u0027s not the point. \u003C/p\u003E\u003Cp\u003EI know some math because I learned pid in engineering school, I program for a living, and I have fun writing kos script eventually, but I\u0027d rather have a robust and maintained core kos than anything else. Because more often than not I\u0027m interested in using kos rather than working on it.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2015-11-09T04:51:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EIf you have tuning parameters whereby this craft can achieve orbit on .18, please share. The point is this craft can be orbited with MJ, pilot assistant, or .17. It cannot with .18 (believe me I spent hours fiddling with alternative ascent profiles and tuning parameters, short of writing my own PID loops).\u003Cp\u003EI\u0027m not sure why the thin margin was so important. Isn\u0027t that a major part of the rationale behind KoS? Precise control for marginal situations? I would be interested to see how, for example, the eve mammoth ssto fares with the new steering method.\u003C/p\u003E\u003Cp\u003E I posted my craft/.ks files as a way to help developers improve the new steering, but apparently my use case isn\u0027t valid. Oh well, I have my custom build of .18.1....\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe appreciate you taking the time to share your craft/script and im sure it will help us improve the steering. I think that Dunbaratu is saying that in your post where you said you were getting \u0022unreasonable behavior\u0022 you could have been more clear upfront. When you are operating on such narrow margins with such low control authority i am actually pleased as punch that the new steering got as close as it did. \u003C/p\u003E\u003Cp\u003EWe will be making refinements to it over the next few patches and we hope that you continue to give feedback when you can think of improvements for our little mod.\u003C/p\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-09T05:30:10Z","Content":"\n\u003Cp\u003EQigon: I have no problems with the new steering code being the default behavior. All I was asking for was that the old stuff be retained as a deprecated feature.\u003C/p\u003E\u003Cp\u003EI wish the dev team would have a little consideration for backwards compatibility going forward. It\u0027s usually a minimal effort to separate out old code paths and retain them as non-default, but toggle-able behavior (my offer is still open for that patch). Your approach of nuking old behavior is not one would expect of a *scripting tool*.\u003C/p\u003E\u003Cp\u003EAnd I\u0027m very well aware of how trivial this all is, but I too happen to be a software engineer and this kind of cowboy stuff is exactly what\u0027s wrong with our field today.\u003C/p\u003E\n"},{"CreatedByName":"Qigon","CreatedById":141819,"CreatedDateTime":"2015-11-10T00:04:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EQigon: I have no problems with the new steering code being the default behavior. All I was asking for was that the old stuff be retained as a deprecated feature.\u003Cp\u003EI wish the dev team would have a little consideration for backwards compatibility going forward. It\u0027s usually a minimal effort to separate out old code paths and retain them as non-default, but toggle-able behavior (my offer is still open for that patch). Your approach of nuking old behavior is not one would expect of a *scripting tool*.\u003C/p\u003E\u003Cp\u003EAnd I\u0027m very well aware of how trivial this all is, but I too happen to be a software engineer and this kind of cowboy stuff is exactly what\u0027s wrong with our field today.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell this is where we\u0027re supposed to disagree, I don\u0027t find it trivial. But in the end it doesn\u0027t matter because I\u0027m not a contributor, so I\u0027m not calling the shots. But to be honest I understand and defend the point of view of those guys who continue to deliver amazing new features. I\u0027ve paid the price of backwards compatibility too many times. \u003C/p\u003E\u003Cp\u003EMay I suggest that instead of forking you release a separate plugin to go on top of kos? I don\u0027t have a clue as to how feasible that is, but it\u0027d give you the freedom to do what you think is correct at the same time that erendrake and Steve also do what they think is correct.\u003C/p\u003E\n"},{"CreatedByName":"Waz","CreatedById":76393,"CreatedDateTime":"2015-11-10T00:19:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI wish the dev team would have a little consideration for backwards compatibility going forward.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs a counter-point, I find the backwards-compatibility stuff just plain annoying as it prevents fixing real issues. It\u0027s generally bad practice to spend any time on compatibility before a 1.0 release.\u003C/p\u003E\u003Cp\u003EThings I would even change:\u003C/p\u003E\u003Cp\u003E* remove all X that are accessible via SHIP:X and similar - they just bloat the docs, obfuscate code, and waste identifiers.\u003C/p\u003E\u003Cp\u003E* fix the scoping rules to be simpler (and more like common languages).\u003C/p\u003E\u003Cp\u003E* line ending \u0022.\u0022 to separating \u0022;\u0022.\u003C/p\u003E\u003Cp\u003E* \u0022set x to y\u0022 to \u0022x = y\u0022 (no need for == in if statements, since expressions cannot be statements in kOS).\u003C/p\u003E\u003Cp\u003EI\u0027d even change \u0022:\u0022 to \u0022.\u0022 for properties/suffixes.\u003C/p\u003E\u003Cp\u003ESo I think those who want compatibility should be extremely glad with what there is, in counter-point to how annoying I find it.\u003C/p\u003E\n"},{"CreatedByName":"Keith Young","CreatedById":152980,"CreatedDateTime":"2015-11-10T02:53:20Z","Content":"\n\u003Cp\u003EI\u0027m looking for a way to fly my ship using an Apollo DSKY. Is there a way (relatively easily in c#) where I could tell KOS what to do without having to click and type? I already know how to make KSP recognize the buttons I physically hit. It\u0027s down to having some C# code tell KOS to write something such as a retro burn and have it execute.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://www.ibiblio.org/apollo/ArtistDSKY.jpg\u0022 alt=\u0022ArtistDSKY.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EIf not, has anyone found a way to program KOS and run scripts using a Teensy? Seems like this also has potential since a Teensy can basically act as a keyboard, and I\u0027d just have to figure out what to tell the Teensy to write.\u003C/p\u003E\u003Cp\u003EAwesome mod!!!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-11-10T03:10:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Keith Young\u0022 data-cite=\u0022Keith Young\u0022\u003E\u003Cdiv\u003EIs there a way (relatively easily in c#) where I could tell KOS what to do without having to click and type?\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOne of the next features on deck is inter-cpu communication, where a kos CPU has a message queue of prmitive objects (strings, numbers, etc) that other kos CPU\u0027s can insert into, so as long as you invent your own protocol for what you want those strings and numbers to actually mean, you can have one talk to another and feed it information.\u003C/p\u003E\u003Cp\u003EIt occurs to me it might be possible to also add a few external C# hooks into the system so mods can use it to send/receive data from a kOS CPU script, provided the script was written to expect what it\u0027s being given. Not a promise - just brainstorming here.\u003C/p\u003E\n"},{"CreatedByName":"Qigon","CreatedById":141819,"CreatedDateTime":"2015-11-10T03:24:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tewpie\u0022 data-cite=\u0022tewpie\u0022\u003E\u003Cdiv\u003EQigon: I have no problems with the new steering code being the default behavior. All I was asking for was that the old stuff be retained as a deprecated feature.\u003Cp\u003EI wish the dev team would have a little consideration for backwards compatibility going forward. It\u0027s usually a minimal effort to separate out old code paths and retain them as non-default, but toggle-able behavior (my offer is still open for that patch). Your approach of nuking old behavior is not one would expect of a *scripting tool*.\u003C/p\u003E\u003Cp\u003EAnd I\u0027m very well aware of how trivial this all is, but I too happen to be a software engineer and this kind of cowboy stuff is exactly what\u0027s wrong with our field today.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Keith Young\u0022 data-cite=\u0022Keith Young\u0022\u003E\u003Cdiv\u003EI\u0027m looking for a way to fly my ship using an Apollo DSKY. Is there a way (relatively easily in c#) where I could tell KOS what to do without having to click and type? I already know how to make KSP recognize the buttons I physically hit. It\u0027s down to having some C# code tell KOS to write something such as a retro burn and have it execute.\u003Cp\u003E\u003Ca href=\u0022http://www.ibiblio.org/apollo/ArtistDSKY.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.ibiblio.org/apollo/ArtistDSKY.jpg\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIf not, has anyone found a way to program KOS and run scripts using a Teensy? Seems like this also has potential since a Teensy can basically act as a keyboard, and I\u0027d just have to figure out what to tell the Teensy to write.\u003C/p\u003E\u003Cp\u003EAwesome mod!!!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat about a telnet client? Never heard of teensy but it looks like atmel or pic. One way to do it is rs-232 or equivalent -\u0026gt; customized telnet -\u0026gt; kos\u003C/p\u003E\u003Cp\u003EAnd you can write a c# gui to configure code -\u0026gt; script pairs to be read by telnet client. \u003C/p\u003E\u003Cp\u003EDid you actually buy/build a dsky? Send us some videos \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tewpie","CreatedById":151920,"CreatedDateTime":"2015-11-10T05:07:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Qigon\u0022 data-cite=\u0022Qigon\u0022\u003E\u003Cdiv\u003EWell this is where we\u0027re supposed to disagree, I don\u0027t find it trivial. But in the end it doesn\u0027t matter because I\u0027m not a contributor, so I\u0027m not calling the shots. But to be honest I understand and defend the point of view of those guys who continue to deliver amazing new features. I\u0027ve paid the price of backwards compatibility too many times.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIt\u0027s generally bad practice to spend any time on compatibility before a 1.0 release.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEveryone speaks as if it\u0027s moving mountains to both keep compatibility and develop new features at the same time. There is always a cost-benefit balance, but in this case the cost was 1) moving some old code into a new class instead of deleting it 2) adding \u0026lt;10 lines of code for a bound variable flag and 3) adding a few sentences of documentation. It literally took me an hour to do this without any prior familiarity with kOS source code and a very rusty knowledge of C#.\u003C/p\u003E\u003Cp\u003E I spoke out because it seems like deprecation wasn\u0027t even considered as an option, for whatever reason.\u003C/p\u003E\u003Cp\u003EAnyway, I doubt anyone other than me actually cares (that\u0027s what I meant when I said trivial), so I\u0027ll just shut up now and play ksp.\u003C/p\u003E\n"},{"CreatedByName":"Keith Young","CreatedById":152980,"CreatedDateTime":"2015-11-10T05:09:50Z","Content":"\n\u003Cp\u003EI\u0027m going to make a DSKY as soon as I know it\u0027s feasible to make the ship what I want using Verbs and Nouns.\u003C/p\u003E\u003Cp\u003EBasically I\u0027m trying to build a simpit and I don\u0027t want to have to touch a mouse or keyboard.\u003C/p\u003E\u003Cp\u003EIt looks like I can try to find a way to write a ks file in the correct folder. The difficulty will be writing to Windows since my current methods write to SD. Not sure yet how to write the files to Windows using the languages I have, and FTDI.\u003C/p\u003E\u003Cp\u003ETelnet is interesting. When I saw the demo I thought I might be able to find a way to do it with Raspberry Pi, but I might even be able to find a way to get it to work in the microprocessor itself.\u003C/p\u003E\u003Cp\u003EI\u0027m very new to C#, and in particular the KSP API (which seems to have practically zero documentation), so I\u0027ll have to read up on the C# hooks.\u003C/p\u003E\u003Cp\u003EI\u0027ll definitely get videos/pics up (probably in a new thread) when this stuff is starting to come together.\u003C/p\u003E\u003Cp\u003ERight now I\u0027m just making sure it\u0027s all feasible. So far it\u0027s looking good \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"inoculator","CreatedById":141432,"CreatedDateTime":"2015-11-10T14:26:13Z","Content":"\n\u003Cp\u003EHi all,\u003C/p\u003E\u003Cp\u003EI have posted this question in the german sub forum as well, but only in the hope of finding somebody speaking my language ;-)\u003C/p\u003E\u003Cp\u003ENevertheless I give it a try in here.\u003C/p\u003E\u003Cp\u003EI know about the issue with \u0022pitch\u0022, \u0022roll\u0022 and \u0022yaw\u0022 for the \u0022r(p,r,y)\u0022 direction, but I cannot match this with my tasks and I have hughe doubt about that I am on the right way.\u003C/p\u003E\u003Cp\u003EHere ist, what I try to get scripted:\u003C/p\u003E\u003Cp\u003EI would like to create a generic launch script, that is able to put the vessel in an orbit with an angle other that 90\u00C3\u201A\u00C2\u00B0 (equatorial).\u003C/p\u003E\u003Cp\u003EThe run command should be simple like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Erun autlaunch(650000,56)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewhich would bring up the vessel to an orbit at 650km and an angle of 56\u00C3\u201A\u00C2\u00B0N relative to KSC at start.\u003C/p\u003E\u003Cp\u003EHere is, what I got up to now:\u003C/p\u003E\u003Cp\u003EI have written a script, that is able to launch any regular vertical vessel to any equatorial orbit. \u003C/p\u003E\u003Cp\u003EI have also implemented, that the script accepts any angle to the startup, but here it comes to an issue with the angle during launch progress: it changes.\u003C/p\u003E\u003Cp\u003ESo the task is, to have a given angle at launch time, and to recalculate the heading during launch to the new angle to keep the orbit that way.\u003C/p\u003E\u003Cp\u003EAbstract:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//Launch by \u0022autolaunch(orbit_alt,orbit_angle).\u0022\u003Cbr\u003E\u003Cbr\u003Edeclare parameter my_height.\u003Cbr\u003Edeclare parameter my_orbit.\u003Cbr\u003E\u003Cbr\u003E[...some code...]\u003Cbr\u003E\u003Cbr\u003Elock my_heading to my_orbit \u002B ([CurrentLocationRelativetoKerbinOrKSC] * [SomeStrangeQuaternionOrFaktorToGetNeededHeadingByGivenOrbitAngle]).\u003Cbr\u003E\u003Cbr\u003E[..some other code...]\u003Cbr\u003E\u003Cbr\u003Elock steering to heading(my_heading,my_angle).\u003Cbr\u003E\u003Cbr\u003E[...some more code...]\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI hope I descripted the issue in an understandable manner.\u003C/p\u003E\u003Cp\u003EAny hints or examples to get my on the right track?\u003C/p\u003E\u003Cp\u003Ebr\u003C/p\u003E\u003Cp\u003ECarsten\u003C/p\u003E\n"},{"CreatedByName":"Keith Young","CreatedById":152980,"CreatedDateTime":"2015-11-10T17:12:34Z","Content":"\n\u003Cp\u003ECan kOS do this:\u003C/p\u003E\u003Cp\u003ESay I have a program that sends my ship to orbit. At 50,000m I decide I want to limit my ship\u0027s angular velocity to 5deg/s.\u003C/p\u003E\u003Cp\u003E------------\u003C/p\u003E\u003Cp\u003EI can\u0027t really open the existing code and add it in, since it would count down 3 2 1 and launch and all that, from 50,000.\u003C/p\u003E\u003Cp\u003EHow do I make that work?\u003C/p\u003E\u003Cp\u003ECould I have for example, inside my main launch sequence program, a check_ang_rate() and on the fly adjust the maximum deg/s, save the KS file MIDFLIGHT, and have my launch code on the next calling of check_ang_rate() notice the updated maximum angular velocity?\u003C/p\u003E\u003Cp\u003EI wish this was something I could do in C#, but let\u0027s face it, kOS\u0027s documentation blows away the documentation made by Squad for their API. Without docs I can\u0027t figure out this.that.who.knows.whats_going_on. kOS seems to have everything documented.\u003C/p\u003E\u003Cp\u003EThanks for this mod guys. KSP is awesome, but what you did can take this game to a new level and you documented it better than they did. Bravo!\u003C/p\u003E\n"},{"CreatedByName":"Wercho","CreatedById":57663,"CreatedDateTime":"2015-11-10T18:33:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022inoculator\u0022 data-cite=\u0022inoculator\u0022\u003E\u003Cdiv\u003EHere ist, what I try to get scripted:\u003Cp\u003EI would like to create a generic launch script, that is able to put the vessel in an orbit with an angle other that 90\u00C3\u201A\u00C2\u00B0 (equatorial).\u003C/p\u003E\u003Cp\u003EThe run command should be simple like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Erun autlaunch(650000,56)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewhich would bring up the vessel to an orbit at 650km and an angle of 56\u00C3\u201A\u00C2\u00B0N relative to KSC at start.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wrote a launch script to do this. The way I did it was a bit hacky, but worked. With my standard ascent profile, I did some testing and determined that if I launched at a surface heading maybe 5 - 10 degrees further from equatorial than my desired orbital inclination, I ended up about right. Once I got to the high atmosphere and could safely fly with a larger angle of attack, I tried to correct in the bring-up-periapsis stage of launch. The trick to this kind of launch is that you don\u0027t want to be changing your surface heading all the time in the atmosphere, so you have to anticipate what orbital inclination a given surface heading will produce once you get high enough in the atmosphere for the atmo to no longer be the limiting factor.\u003C/p\u003E\u003Cp\u003EA more technical way would be to do something like calculate the final orbital velocity needed for the desired orbit, vector-subtract the difference between the orbital velocity and surface velocity at that final orbit, which is based on planetary rotation rate and altitude. Then use what you just calculated (surface relative final orbital velocity) to find your initial launch heading. I bet there are some niggly things I\u0027m not thinking of, but hopefully that will help.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Keith Young\u0022 data-cite=\u0022Keith Young\u0022\u003E\u003Cdiv\u003ECan kOS do this:\u003Cp\u003ESay I have a program that sends my ship to orbit. At 50,000m I decide I want to limit my ship\u0027s angular velocity to 5deg/s.\u003C/p\u003E\u003Cp\u003E------------\u003C/p\u003E\u003Cp\u003EI can\u0027t really open the existing code and add it in, since it would count down 3 2 1 and launch and all that, from 50,000.\u003C/p\u003E\u003Cp\u003EHow do I make that work?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmm, you might be able to accomplish this by having a separate \u0022ang_rate.ks\u0022 file that sets a global variable, and have the main program \u0022RUN ang_rate.\u0022 and then use the global variable. You would then update the helper file while the main program keeps running. I don\u0027t know if this would work.\u003C/p\u003E\u003Cp\u003EWhenever I want user input in a program, my standard is to control it with some input that isn\u0027t important. For instance, you could rebind your rover control to not match the rocket steering keys (in the KSP main menu). Then do this, with a suitable delay between reads to not change it too much:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EIF ship:control:pilotwheelsteer \u0026lt; -0.5 {SET ang_rate TO ang_rate - 1.}\u003Cbr\u003EELSE IF ship:control:pilotwheelsteer \u0026gt; 0.5 {SET ang_rate TO ang_rate \u002B 1.}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut to do that, you have to know in advance what you might want to adjust and have a separate control for all of them. (Or you can get complex, and set up a control to switch between values and a control to increment/decrement the value.)\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2015-11-10T19:33:19Z","Content":"\n\u003Cp\u003ELooks like something broke...\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://s013.radikal.ru/i325/1511/f5/27cdb04e2a87.png\u0022 alt=\u002227cdb04e2a87.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EKSP 1.0.5 / kOS 0.18.1\u003C/p\u003E\u003Cp\u003EAnd it\u0027s a sandbox save (tried both new save and imported from 1.0.4)\u003C/p\u003E\n"},{"CreatedByName":"Keith Young","CreatedById":152980,"CreatedDateTime":"2015-11-10T19:45:10Z","Content":"\n\u003Cp\u003EWhen making a KS file that only declares a global, after running, it doesn\u0027t seem like it looks for the file in the windows computer. It looks like whatever you ran is saved in to memory.\u003C/p\u003E\u003Cp\u003EI could be wrong.\u003C/p\u003E\u003Cp\u003EBut it seems like you can\u0027t load the KS in windows, change velocity from 100 to 200, then save and observe a change in your currently running program.\u003C/p\u003E\u003Cp\u003EAbout to try it with functions which return a velocity but I also bet it won\u0027t work.\u003C/p\u003E\u003Cp\u003EKnow any workarounds? I really need to find a way to manipulate some sort of autopilot without keyboard and mouse, and I\u0027m really struggling to do it on my own without API documentation from Squad.\u003C/p\u003E\u003Cp\u003EEdit - Doesn\u0027t seem to work for functions either. I\u0027ve even tried running them in the loop to hopefully update them in memory, and I\u0027ve tried setting globals through the function and setting a velocity to the return value of the function.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-10T19:57:24Z\u0022 title=\u002211/10/2015 07:57  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 10, 2015\u003C/time\u003E by Keith Young\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2015-11-10T22:23:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003ELooks like something broke...\u003Cp\u003EKSP 1.0.5 / kOS 0.18.1\u003C/p\u003E\u003Cp\u003EAnd it\u0027s a sandbox save (tried both new save and imported from 1.0.4)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan you post your script that goes along with the exception, and possibly the ksp.log or output_log.txt file? That will help us see what\u0027s going on under the hood leading up to your error.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2015-11-10T23:18:14Z","Content":"\n\u003Cp\u003EI\u0027ve tried some options and any attempt to call \u003Cem\u003Edoaction\u003C/em\u003E ends in this\u003C/p\u003E\u003Cp\u003E\u003Cem\u003ESystem.MissingMethodException: Method not found: \u0027GameVariables.UnlockedActionGroupsCustom\u0027.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EBoth in career and sandbox.\u003C/p\u003E\u003Cp\u003ELooks like kOS fails at checking the career restrictions, probably due to a change in API between KSP versions\u003C/p\u003E\u003Cp\u003EFor example, let\u0027s take a ship and tag a landing gear as \u0022g1\u0022 and just run this (I\u0027ve saved it as \u003Cem\u003Eex\u003C/em\u003E on volume 1)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset le to ship:partstagged(\u0022g1\u0022).\u003Cbr\u003Efor p in le \u003Cbr\u003E{\u003Cbr\u003Eif p:modules:contains(\u0022ModuleLandingGear\u0022)\u003Cbr\u003E{set m to p:getmodule(\u0022ModuleLandingGear\u0022).\u003Cbr\u003Em:doaction(\u0022raise/lower gear\u0022, false).}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eresult:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 01:03:30.958] System.MissingMethodException: Method not found: \u0027GameVariables.UnlockedActionGroupsCustom\u0027.\u003Cbr\u003E  at kOS.Suffixed.PartModuleField.PartModuleFields.CallKSPAction (System.String suffixName, Boolean param) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception\u0026amp;)\u003Cbr\u003E  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003Cbr\u003E[LOG 01:03:30.975] Code Fragment\u003Cbr\u003EFile                 Line:Col IP   label opcode operand\u003Cbr\u003E----                 ----:--- ---- -------------------------------  \u003Cbr\u003E1/ex                    4:23  0034 @0034 br.false \u002B19 \u003Cbr\u003E1/ex                    5:1   0035 @0035 pushscope 3 2 \u003Cbr\u003E1/ex                    5:6   0036 @0036 push $m \u003Cbr\u003E1/ex                    5:11  0037 @0037 push $p \u003Cbr\u003E1/ex                    5:13  0038 @0038 push getmodule \u003Cbr\u003E1/ex                    5:13  0039 @0039 getmethod \u003Cbr\u003E1/ex                    5:22  0040 @0040 push _KOSArgMarker_ \u003Cbr\u003E1/ex                    5:23  0041 @0041 push ModuleLandingGear \u003Cbr\u003E1/ex                    5:23  0042 @0042 call \u0026lt;indirect\u0026gt; \u003Cbr\u003E1/ex                    5:23  0043 @0043 store \u003Cbr\u003E1/ex                    6:1   0044 @0044 push $m \u003Cbr\u003E1/ex                    6:3   0045 @0045 push doaction \u003Cbr\u003E1/ex                    6:3   0046 @0046 getmethod \u003Cbr\u003E1/ex                    6:11  0047 @0047 push _KOSArgMarker_ \u003Cbr\u003E1/ex                    6:12  0048 @0048 push raise/lower gear \u003Cbr\u003E1/ex                    6:32  0049 @0049 push False \u003Cbr\u003E1/ex                    6:32  0050 @0050 call \u0026lt;indirect\u0026gt; \u0026lt;\u0026lt;--INSTRUCTION POINTER--\u003Cbr\u003E1/ex                    6:32  0051 @0051 pop \u003Cbr\u003E1/ex                    6:39  0052 @0052 popscope 1 \u003Cbr\u003E1/ex                    7:1   0053 @0053 popscope 1 \u003Cbr\u003E1/ex                    7:1   0054 @0054 jump -38 \u003Cbr\u003E1/ex                    7:1   0055 @0055 nop \u003Cbr\u003E1/ex                    7:1   0056 @0056 popscope 1 \u003Cbr\u003E                        0:0   0057  pop \u003Cbr\u003E                        0:0   0058  EOP \u003Cbr\u003E\u003Cbr\u003E[LOG 01:03:31.004] kOS: Stack dump: stackPointer = 2\u003Cbr\u003E005      kOS.Safe.Execution.VariableScope\u003Cbr\u003E          ScopeId=1, ParentScopeId=0, ParentSkipLevels=1 IsClosure=False\u003Cbr\u003E            local var $le-iterator is System.String with value = Structure  Iterator\u003Cbr\u003E            local var $p is System.String with value = PART(SmallGearBay,tag=g1)\u003Cbr\u003E004      kOS.Safe.Execution.VariableScope\u003Cbr\u003E          ScopeId=2, ParentScopeId=1, ParentSkipLevels=1 IsClosure=False\u003Cbr\u003E003      kOS.Safe.Execution.VariableScope\u003Cbr\u003E          ScopeId=3, ParentScopeId=2, ParentSkipLevels=1 IsClosure=False\u003Cbr\u003E002 SP-\u0026gt; kOS.Safe.Encapsulation.Suffixes.TwoArgsSuffix\u00602\u002BDel\u00602[System.String,System.Boolean,System.String,System.Boolean]\u003Cbr\u003E001      _KOSArgMarker_\u003Cbr\u003E000      0\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr even - trying to change nametag in the VAB/SPH throws this out (this time not handled by kOS):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[EXC 00:57:46.613] MissingMethodException: Method not found: \u0027GameVariables.UnlockedActionGroupsStock\u0027.\u003Cbr\u003E\tkOS.Suffixed.Career.CanTagInEditor (EditorFacility whichEditor)\u003Cbr\u003E\tkOS.Module.KOSNameTag.PopupNameTagChanger ()\u003Cbr\u003E\tBaseEvent.Invoke ()\u003Cbr\u003E\tUIPartActionButton.OnClick ()\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2015-11-11T00:21:55Z","Content":"\n\u003Cp\u003EBased on the testing I\u0027ve done so far, I\u0027d bet it\u0027s an issue that will be solved when we recompile against v1.0.5. I know that the name tag editor wasn\u0027t working properly until we updated the compile. I\u0027ll have to go test with 0.18.1 to verify though.\u003C/p\u003E\n"}]}