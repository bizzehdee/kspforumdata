{"TopicId":28844,"ForumId":34,"TopicTitle":"[0.20] ModuleManager 1.3 - for all your stock-modding needs","CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-05-24T17:51:24Z","PageNum":7,"Articles":[{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-18T12:38:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mihara\u0022 data-cite=\u0022Mihara\u0022\u003E\u003Cdiv\u003EThere\u0027s one thing ModuleManager doesn\u0027t do when it probably should: It can\u0027t create a part definition derived from an existing part, or if it can, this is never clearly documented.\u003Cp\u003EI.e. I can\u0027t create a stock part rescale while keeping the original stock part without actually duplicating the part.cfg of that part, and keeping it inside the stock directories.\u003C/p\u003E\u003Cp\u003EWouldn\u0027t it be so very nice if you could do stuff like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PARTDERIVED[strutCube]\u003Cbr\u003E{\u003Cbr\u003E    @name = strutCubeLarge\u003Cbr\u003E    @rescaleFactor = 2\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIs something of the sort even possible?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E... YES. Yes it is! Hahahahaha! \u003C/p\u003E\u003Cp\u003EI think I\u0027d actually want it to look like this, though:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART From PART[strutCube]:Final\u003Cbr\u003E{\u003Cbr\u003E    @name = strutCubeLarge\u003Cbr\u003E    @etc\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ehrm. One problem, though - order of operations is going to be VERY tricky.\u003C/p\u003E\n"},{"CreatedByName":"Mihara","CreatedById":59752,"CreatedDateTime":"2013-06-18T14:57:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ialdabaoth\u0022 data-cite=\u0022ialdabaoth\u0022\u003E\u003Cdiv\u003EOne problem, though - order of operations is going to be VERY tricky.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWoot, thank you! I very much hope it eventually works, I\u0027ll finally be able to leave the stock parts files completely alone and untouched.\u003C/p\u003E\n"},{"CreatedByName":"Muji-k","CreatedById":71337,"CreatedDateTime":"2013-06-18T19:45:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mihara\u0022 data-cite=\u0022Mihara\u0022\u003E\u003Cdiv\u003EPhotoncap_Medium part definition probably already contains scale and rescaleFactor parameters. Your config file says to \u003Cem\u003Eadd\u003C/em\u003E them, however. I\u0027m not sure how the structure is stored in memory, but apparently Module Manager adds new copies of these parameters without removing the ones already there in such a case. Use @scale and @rescaleFactor instead and it should work.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs i said in my post...I didn\u0027t use @scale and @rescaleFactor \u0027cause the .cfg file of Photoncap_Medium part doesn\u0027t have this two entries, so yes, my cfg says to add them. Also if i use @scale and @rescaleFactor it doesn\u0027t do anything either.\u003C/p\u003E\u003Cp\u003EThe rescaleFactor parameter isn\u0027t the problem, it worked as it should, the part is now a little bigger but the attachment points are now inside the model, so my .cfg is addressing the proper file, but no matter how i try to write my .cfg i can\u0027t seen to be able to change the node placement, it doesn\u0027t matter if use scale = \u0026lt;value\u0026gt; , @scale = \u0026lt;value\u0026gt;, or even @node_stack_top = \u0026lt;value\u0026gt;, the nodes stay in the same place. The debug console, in the image below, shows that the changes were correctly applied, so i dunno what is causing the nodes to be stuck. \u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://farm8.staticflickr.com/7393/9079443172_a035b7afda_b.jpg\u0022 alt=\u00229079443172_a035b7afda_b.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe only way that i found to make the changes in the nodes position work, was to add the \u0022scale = 1.328\u0022 parameter directly into the Photoncap_Medium .cfg, so any thoughts on how i can make this work??\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-18T20:33:23Z\u0022 title=\u002206/18/2013 08:33  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 18, 2013\u003C/time\u003E by Muji-k\u003C/strong\u003E\n\u003Cbr\u003Eimage was to small to read the text\n\u003C/span\u003E\n"},{"CreatedByName":"Criek","CreatedById":66013,"CreatedDateTime":"2013-06-19T08:30:48Z","Content":"\n\u003Cp\u003EQuestion: is it possible to apply the same changes to multiple parts without code duplication (and possible errors)?\u003C/p\u003E\u003Cp\u003Esomething like:\u003C/p\u003E\u003Cp\u003E@PART[Mark1-2Pod, mk2LanderCabin]\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E MODULE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = CargoBay\u003C/p\u003E\u003Cp\u003E Baysize = 15\u003C/p\u003E\u003Cp\u003E Tanksize = 0\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E MODULE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = ScienceLab\u003C/p\u003E\u003Cp\u003E labSize = 1\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E RESOURCE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = Stuff\u003C/p\u003E\u003Cp\u003E amount = 10\u003C/p\u003E\u003Cp\u003E maxAmount = 10\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E RESOURCE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = ScientificStuff\u003C/p\u003E\u003Cp\u003E amount = 0\u003C/p\u003E\u003Cp\u003E maxAmount = 5\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EThat way I can have convenient packages for a one, two and three-man cabin (including for other mods) without the risk of typos.\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-19T10:14:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ialdabaoth\u0022 data-cite=\u0022ialdabaoth\u0022\u003E\u003Cdiv\u003E... YES. Yes it is! Hahahahaha! \u003Cp\u003EI think I\u0027d actually want it to look like this, though:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART From PART[strutCube]:Final\u003Cbr\u003E{\u003Cbr\u003E    @name = strutCubeLarge\u003Cbr\u003E    @etc\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ehrm. One problem, though - order of operations is going to be VERY tricky.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOn second thought: I think I\u0027m going to deny this feature request. ModuleManager is used by way too many mods, so I need to make it do one simple thing and do that thing very well.\u003C/p\u003E\u003Cp\u003EModuleManager\u0027s entire job is to allow you to make modifications to other authors\u0027 existing cfg files, for the purpose of making them compatible with your own plugins.\u003C/p\u003E\u003Cp\u003EThe fact that it also happens to allow people to release \u0022playstyle change\u0022 cfg files is a nice feature, but not its primary purpose.\u003C/p\u003E\u003Cp\u003EYou can easily create a new PART definition by grabbing another PART and copying it; that\u0027s probably how you should do it rather than ModuleManager adding part inheritance functionality.\u003C/p\u003E\u003Cp\u003EYou can add modules to other authors\u0027 works by paying attention to what mods are popular, and supporting them; that\u0027s probably how you should do it rather than ModuleManager adding wildcard functionality.\u003C/p\u003E\u003Cp\u003EThe past few days have been a nightmare of incompatabilities and patches and re-patches because of a few places where I tried to be clever, instead of being simple, robust, and thorough.\u003C/p\u003E\u003Cp\u003EIf ModuleManager really is going to be a redistributable tool for other mod authors, its functionality needs to be GUARANTEED.\u003C/p\u003E\u003Cp\u003EThe current version does this by paring down what it does to the bare minimum - it scans the entire node list at start-up, immediately after the nodes are loaded but before they are converted into PARTs and RESOURCEs and so on, and merges any node that doesn\u0027t start with a \u0027@\u0027 with all nodes that do that match @TYPE[name] or @TYPE[name]:Final.\u003C/p\u003E\u003Cp\u003EIt does this, it does it well, and it (finally) does it without any bugs.\u003C/p\u003E\u003Cp\u003EI need to quit while I\u0027m ahead, so that the rest of the community can know that if they include ModuleManager.dll, there won\u0027t be any hidden surprises or incompatabilities with someone else who choose to include ModuleManager.dll earlier or later than them.\u003C/p\u003E\u003Cp\u003EHopefully 0.21 will do this natively, and we can all put ModuleManager.dll behind us.\u003C/p\u003E\n"},{"CreatedByName":"theSpeare","CreatedById":62144,"CreatedDateTime":"2013-06-20T10:43:18Z","Content":"\n\u003Cp\u003ECan someone help me with finding out what\u0027s wrong with my ModuleManager? (or which mods I have installed that\u0027s messing with it?)\u003C/p\u003E\u003Cp\u003EMy mods:\u003C/p\u003E\u003Cp\u003EB9 Aerospace\u003C/p\u003E\u003Cp\u003ECrew Manifest\u003C/p\u003E\u003Cp\u003EEngineering Kerbal\u003C/p\u003E\u003Cp\u003EKAS\u003C/p\u003E\u003Cp\u003EKethane\u003C/p\u003E\u003Cp\u003EKSPX\u003C/p\u003E\u003Cp\u003EKWRocketry\u003C/p\u003E\u003Cp\u003EMechJeb2\u003C/p\u003E\u003Cp\u003EMission Controller\u003C/p\u003E\u003Cp\u003EOrbital Construction\u003C/p\u003E\u003Cp\u003EPart Catalog\u003C/p\u003E\u003Cp\u003EProtractor\u003C/p\u003E\u003Cp\u003ERemoteTech\u003C/p\u003E\u003Cp\u003ERomfarer Stuff\u003C/p\u003E\u003Cp\u003ETAC Fuel Balancer\u003C/p\u003E\u003Cp\u003ETelemachus\u003C/p\u003E\n"},{"CreatedByName":"s20dan","CreatedById":1080,"CreatedDateTime":"2013-06-23T22:53:57Z","Content":"\n\u003Cp\u003EIs there a way to add a module to every part?\u003C/p\u003E\u003Cp\u003EFor example I want to add this to every part:\u003C/p\u003E\u003Cp\u003E MODULE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = ReflectiveShaderModule\u003C/p\u003E\u003Cp\u003E CubeMapSize = 1024\u003C/p\u003E\u003Cp\u003E OneFacePerFrame = true\u003C/p\u003E\u003Cp\u003E ShaderName = Reflective/VertexLit\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003ECheers.\u003C/p\u003E\n"},{"CreatedByName":"s20dan","CreatedById":1080,"CreatedDateTime":"2013-06-24T21:47:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022s20dan\u0022 data-cite=\u0022s20dan\u0022\u003E\u003Cdiv\u003EIs there a way to add a module to every part?\u003Cp\u003EFor example I want to add this to every part:\u003C/p\u003E\u003Cp\u003E MODULE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = ReflectiveShaderModule\u003C/p\u003E\u003Cp\u003E CubeMapSize = 1024\u003C/p\u003E\u003Cp\u003E OneFacePerFrame = true\u003C/p\u003E\u003Cp\u003E ShaderName = Reflective/VertexLit\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003ECheers.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E I take the silence to be a NO...?\u003C/p\u003E\n"},{"CreatedByName":"loppnessmonsta","CreatedById":58525,"CreatedDateTime":"2013-06-24T22:50:20Z","Content":"\n\u003Cp\u003Eactually, the answer is yes. you can. but you need to list the change to each part, not just once. more work, but still less work than changing them every time you update.\u003C/p\u003E\n"},{"CreatedByName":"s20dan","CreatedById":1080,"CreatedDateTime":"2013-06-24T23:22:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022loppnessmonsta\u0022 data-cite=\u0022loppnessmonsta\u0022\u003E\u003Cdiv\u003Eactually, the answer is yes. you can. but you need to list the change to each part, not just once. more work, but still less work than changing them every time you update.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E Thats not what I meant, but I went ahead and did that anyway. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003E I was hoping to make the change to all parts with one config entry \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E Earlier in the thread some people spoke of \u0027wildcards\u0027, it seems if they were implemented they would allow for this.\u003C/p\u003E\u003Cp\u003E Anyway I think that would be a nice feature... Change any parts with XXX in their name, or perhaps change any parts containing XXX module.\u003C/p\u003E\n"},{"CreatedByName":"CaptainArbitrary","CreatedById":28110,"CreatedDateTime":"2013-06-26T16:26:54Z","Content":"\n\u003Cp\u003EI have the weirdest, and least helpful, bug report \u003Cem\u003Eever.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003ESomehow it\u0027s possible for ModuleManager to screw up the order of PartModules attached to a part.\u003C/p\u003E\u003Cp\u003ENow, this description is gonna be wonky, because at the moment I\u0027m working with a \u003Cem\u003Every\u003C/em\u003E hacked configuration. I was testing out some engine designs (through ModularEngines), so I had just two engines installed in my game: a modified version of liquidEngine1 (the LV-T30) and a modified version of liquidEngine2 (the LV-T45). What I noticed first is that in the VAB, the part info for liquidEngine2 was all screwed up; instead of being listed in the normal way, with the ModuleEngines info first and then other lines after, it was \u003Cem\u003Ebackwards,\u003C/em\u003E listing the info in the reverse order from what I have in my part.cfg.\u003C/p\u003E\u003Cp\u003EAfter two solid days of investigating, including writing my own debugging PartModule that does nothing but print out the names of the modules in this.part.Modules in order at OnAwake(), I discovered that on liquidEngine2 \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC and \u003Cem\u003Eonly\u003C/em\u003E liquidEngine2 \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC the part module order was getting screwed up sometime between OnLoad() and OnAwake().\u003C/p\u003E\u003Cp\u003ENow, in this game directory I had just a few parts, but several core mods installed, \u0027cause it was a copy of my normal game directory. I had FAR and Deadly and RemoteTech and such like that \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 all of which call ModuleManager, so obviously I had a ModuleManager.dll in my game data folder too (the latest one, 1.3).\u003C/p\u003E\u003Cp\u003EIn a fit of just-isolate-the-damn-problem I started by pulling ModuleManager.dll out \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 and poof. The problem went away.\u003C/p\u003E\u003Cp\u003EI glanced through the ModuleManager.cs source file (\u003Ca href=\u0022https://github.com/Ialdabaoth/ModuleManager/blob/master/moduleManager%20copy.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Ialdabaoth/ModuleManager/blob/master/moduleManager%20copy.cs\u003C/a\u003E) just long enough to see that it does include code that removes all modules from a part then re-adds them \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 but weirdly, that code doesn\u0027t seem to be \u003Cem\u003Ecalled\u003C/em\u003E anywhere that I can see. The rest of the code involves game database features that I\u0027m not familiar with, so I haven\u0027t studied it too closely to figure out where exactly the problem lies.\u003C/p\u003E\u003Cp\u003EFor myself, I\u0027ve disabled ModuleManager.dll just for the moment, so I can get on with what I\u0027m doing. I\u0027m hoping that even this unacceptably vague \u0022bug report\u0022 (as if it deserves being called that) will be enough, since you\u0027re so familiar with the code, to make you go \u0022Oh, yeah, I totally know what\u0027s going on there.\u0022 But if not, I\u0027ll try to come back with more info once I get my current project squared away and get back to a not-entirely-insane game setup.\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-26T16:45:27Z","Content":"\n\u003Cp\u003ENote! That isn\u0027t actually the current code at all; that\u0027s an old fork. This is the actual code: \u003Ca href=\u0022https://github.com/Ialdabaoth/ModuleManager/blob/master/moduleManager.cs\u0022 rel=\u0022external nofollow\u0022\u003EModuleManager.cs\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENote that this doesn\u0027t actually touch the modules at all; ALL it does is edit the config node before the PartLoader gets to it.\u003C/p\u003E\n"},{"CreatedByName":"Subcidal","CreatedById":20751,"CreatedDateTime":"2013-06-26T17:05:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022s20dan\u0022 data-cite=\u0022s20dan\u0022\u003E\u003Cdiv\u003EThats not what I meant, but I went ahead and did that anyway. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003Cp\u003E I was hoping to make the change to all parts with one config entry \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E Earlier in the thread some people spoke of \u0027wildcards\u0027, it seems if they were implemented they would allow for this.\u003C/p\u003E\u003Cp\u003E Anyway I think that would be a nice feature... Change any parts with XXX in their name, or perhaps change any parts containing XXX module.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis would be extremely useful when you\u0027ve got mods like Deadly re-entry. I really want to use it but I just haven\u0027t summoned the willpower to chug through every single part. I would much rather set a base level and then tweak parts here and there that I want to fail at lower/higher temps. I\u0027m sure theres many more mods to come in the future that this type of feature would really compliment as well, judging from the explosion of high quality mods recently.\u003C/p\u003E\n"},{"CreatedByName":"CaptainArbitrary","CreatedById":28110,"CreatedDateTime":"2013-06-26T17:58:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ialdabaoth\u0022 data-cite=\u0022ialdabaoth\u0022\u003E\u003Cdiv\u003ENote! That isn\u0027t actually the current code at all; that\u0027s an old fork. This is the actual code: \u003Ca href=\u0022https://github.com/Ialdabaoth/ModuleManager/blob/master/moduleManager.cs\u0022 rel=\u0022external nofollow\u0022\u003EModuleManager.cs\u003C/a\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh, okay, my mistake. Sorry.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ialdabaoth\u0022 data-cite=\u0022ialdabaoth\u0022\u003E\u003Cdiv\u003ENote that this doesn\u0027t actually touch the modules at all; ALL it does is edit the config node before the PartLoader gets to it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn point of fact, it seems to anyway. I\u0027ve got the problem conclusively narrowed down, I think. I created a whole new game folder (0.20.2, just for the record) and removed all the Squad parts except probeStackSmall, fuelTank, liquidEngine1 and liquidEngine2. Then I installed ModuleManager, just by copying the latest .dll file into my GameData directory. Then I threw a little debugger I wrote on the two engines; all it does is, during OnAwake, print out the names of the part modules attached to it. Here\u0027s the source code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing System;\u003Cbr\u003E\u003Cbr\u003Enamespace ProjectArcturus\u003Cbr\u003E{\u003Cbr\u003E\tpublic class ArcturusDebugger : PartModule\u003Cbr\u003E\t{\u003Cbr\u003E\t\tpublic override void OnAwake ()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tbase.OnAwake ();\u003Cbr\u003E\t\t\tprint (\u0022*** Debugger.OnAwake() on \u0022 \u002B this.part.name);\u003Cbr\u003E\t\t\tprint (\u0022*** \u0022 \u002B this.part.Modules.Count \u002B \u0022 PartModules found\u0022);\u003Cbr\u003E\t\t\tforeach (PartModule m in this.part.Modules) {\u003Cbr\u003E\t\t\t\tprint (\u0022*** \u0022 \u002B m.ToString());\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd here\u0027s the relevant output:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 10:49:44.641] PartLoader: Compiling Part \u0027Squad/Parts/Engine/liquidEngine1/part/liquidEngine\u0027\u003Cbr\u003E[LOG 10:49:44.653] Added sound_rocket_hard to FXGroup running\u003Cbr\u003E[LOG 10:49:44.655] Added sound_explosion_low to FXGroup flameout\u003Cbr\u003E[LOG 10:49:44.659] *** Debugger.OnAwake() on liquidEngine\u003Cbr\u003E[LOG 10:49:44.659] *** 0 PartModules found\u003Cbr\u003E[LOG 10:49:44.680] *** Debugger.OnAwake() on liquidEngine(Clone)\u003Cbr\u003E[LOG 10:49:44.681] *** 5 PartModules found\u003Cbr\u003E[LOG 10:49:44.681] *** liquidEngine(Clone) (ProjectArcturus.ArcturusDebugger)\u003Cbr\u003E[LOG 10:49:44.681] *** liquidEngine(Clone) (ModuleEngines)\u003Cbr\u003E[LOG 10:49:44.681] *** liquidEngine(Clone) (ModuleJettison)\u003Cbr\u003E[LOG 10:49:44.681] *** liquidEngine(Clone) (ModuleAnimateHeat)\u003Cbr\u003E[LOG 10:49:44.681] *** liquidEngine(Clone) (ModuleAlternator)\u003Cbr\u003E[LOG 10:49:44.688] PartLoader: Compiling Part \u0027Squad/Parts/Engine/liquidEngine2/part/liquidEngine2\u0027\u003Cbr\u003E[LOG 10:49:44.694] Added sound_rocket_hard to FXGroup running\u003Cbr\u003E[LOG 10:49:44.694] Added sound_explosion_low to FXGroup flameout\u003Cbr\u003E[LOG 10:49:44.696] *** Debugger.OnAwake() on liquidEngine2\u003Cbr\u003E[LOG 10:49:44.696] *** 0 PartModules found\u003Cbr\u003E[LOG 10:49:44.712] *** Debugger.OnAwake() on liquidEngine2(Clone)\u003Cbr\u003E[LOG 10:49:44.712] *** 6 PartModules found\u003Cbr\u003E[LOG 10:49:44.712] *** liquidEngine2(Clone) (ProjectArcturus.ArcturusDebugger)\u003Cbr\u003E[LOG 10:49:44.712] *** liquidEngine2(Clone) (ModuleEngines)\u003Cbr\u003E[LOG 10:49:44.712] *** liquidEngine2(Clone) (ModuleJettison)\u003Cbr\u003E[LOG 10:49:44.712] *** liquidEngine2(Clone) (ModuleGimbal)\u003Cbr\u003E[LOG 10:49:44.713] *** liquidEngine2(Clone) (ModuleAnimateHeat)\u003Cbr\u003E[LOG 10:49:44.713] *** liquidEngine2(Clone) (ModuleAlternator)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAs you can see, the order of part modules in the list is the same as the order in which they appear in the config file. Unsurprisingly, the VAB info GUI looks normal:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/OmDTnaf.png\u0022 alt=\u0022OmDTnaf.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ENext, I put a test.cfg file in my GameData folder, to call ModuleManager. It just looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[liquidEngine]\u003Cbr\u003E{\u003Cbr\u003E\t@maxTemp = 1800\u003Cbr\u003E\t@MODULE[ModuleEngines]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@heatProduction = 200\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[liquidEngine2]\u003Cbr\u003E{\u003Cbr\u003E\t@maxTemp = 1800\u003Cbr\u003E\t@MODULE[ModuleEngines]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@heatProduction = 200\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThat should look familiar; you wrote it. It comes from Deadly Reentry. Here\u0027s the resulting debug log:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 10:52:24.040] PartLoader: Compiling Part \u0027Squad/Parts/Engine/liquidEngine1/part/liquidEngine\u0027\u003Cbr\u003E[LOG 10:52:24.052] Added sound_rocket_hard to FXGroup running\u003Cbr\u003E[LOG 10:52:24.055] Added sound_explosion_low to FXGroup flameout\u003Cbr\u003E[LOG 10:52:24.058] *** Debugger.OnAwake() on liquidEngine\u003Cbr\u003E[LOG 10:52:24.058] *** 0 PartModules found\u003Cbr\u003E[LOG 10:52:24.079] *** Debugger.OnAwake() on liquidEngine(Clone)\u003Cbr\u003E[LOG 10:52:24.079] *** 5 PartModules found\u003Cbr\u003E[LOG 10:52:24.079] *** liquidEngine(Clone) (ProjectArcturus.ArcturusDebugger)\u003Cbr\u003E[LOG 10:52:24.079] *** liquidEngine(Clone) (ModuleJettison)\u003Cbr\u003E[LOG 10:52:24.079] *** liquidEngine(Clone) (ModuleAnimateHeat)\u003Cbr\u003E[LOG 10:52:24.079] *** liquidEngine(Clone) (ModuleAlternator)\u003Cbr\u003E[LOG 10:52:24.079] *** liquidEngine(Clone) (ModuleEngines)\u003Cbr\u003E[LOG 10:52:24.086] PartLoader: Compiling Part \u0027Squad/Parts/Engine/liquidEngine2/part/liquidEngine2\u0027\u003Cbr\u003E[LOG 10:52:24.091] Added sound_rocket_hard to FXGroup running\u003Cbr\u003E[LOG 10:52:24.091] Added sound_explosion_low to FXGroup flameout\u003Cbr\u003E[LOG 10:52:24.093] *** Debugger.OnAwake() on liquidEngine2\u003Cbr\u003E[LOG 10:52:24.093] *** 0 PartModules found\u003Cbr\u003E[LOG 10:52:24.109] *** Debugger.OnAwake() on liquidEngine2(Clone)\u003Cbr\u003E[LOG 10:52:24.109] *** 6 PartModules found\u003Cbr\u003E[LOG 10:52:24.109] *** liquidEngine2(Clone) (ProjectArcturus.ArcturusDebugger)\u003Cbr\u003E[LOG 10:52:24.109] *** liquidEngine2(Clone) (ModuleJettison)\u003Cbr\u003E[LOG 10:52:24.109] *** liquidEngine2(Clone) (ModuleGimbal)\u003Cbr\u003E[LOG 10:52:24.109] *** liquidEngine2(Clone) (ModuleAnimateHeat)\u003Cbr\u003E[LOG 10:52:24.109] *** liquidEngine2(Clone) (ModuleAlternator)\u003Cbr\u003E[LOG 10:52:24.109] *** liquidEngine2(Clone) (ModuleEngines)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENotice how ModuleEngines has gotten moved down to the bottom, where previously it came second (because it was second in the config files, after my debug module). You wouldn\u0027t \u003Cem\u003Ethink\u003C/em\u003E this matters, but here\u0027s what the VAB GUI looks like now:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/ccFgVSz.png\u0022 alt=\u0022ccFgVSz.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EIn order to generate the VAB GUI, apparently the game sends GetInfo() to each PartModule \u003Cem\u003Ein the order they appear in part.Modules\u003C/em\u003E, so the result ends up in the wrong order if the order of the modules in the list gets rearranged.\u003C/p\u003E\u003Cp\u003ETo test it just one step further, I changed my test.cfg file to look like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[liquidEngine]\u003Cbr\u003E{\u003Cbr\u003E\t@maxTemp = 1800\u003Cbr\u003E\t@MODULE[ModuleEngines]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@heatProduction = 200\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[liquidEngine2]\u003Cbr\u003E{\u003Cbr\u003E\t@maxTemp = 1800\u003Cbr\u003E\t@MODULE[ModuleGimbal]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@gimbalRange = 2\u003Cbr\u003E\t}\u003Cbr\u003E\t@MODULE[ModuleEngines]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@heatProduction = 200\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd here\u0027s the debug output:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 10:55:47.334] PartLoader: Compiling Part \u0027Squad/Parts/Engine/liquidEngine1/part/liquidEngine\u0027\u003Cbr\u003E[LOG 10:55:47.346] Added sound_rocket_hard to FXGroup running\u003Cbr\u003E[LOG 10:55:47.349] Added sound_explosion_low to FXGroup flameout\u003Cbr\u003E[LOG 10:55:47.352] *** Debugger.OnAwake() on liquidEngine\u003Cbr\u003E[LOG 10:55:47.352] *** 0 PartModules found\u003Cbr\u003E[LOG 10:55:47.373] *** Debugger.OnAwake() on liquidEngine(Clone)\u003Cbr\u003E[LOG 10:55:47.373] *** 5 PartModules found\u003Cbr\u003E[LOG 10:55:47.374] *** liquidEngine(Clone) (ProjectArcturus.ArcturusDebugger)\u003Cbr\u003E[LOG 10:55:47.374] *** liquidEngine(Clone) (ModuleJettison)\u003Cbr\u003E[LOG 10:55:47.374] *** liquidEngine(Clone) (ModuleAnimateHeat)\u003Cbr\u003E[LOG 10:55:47.374] *** liquidEngine(Clone) (ModuleAlternator)\u003Cbr\u003E[LOG 10:55:47.374] *** liquidEngine(Clone) (ModuleEngines)\u003Cbr\u003E[LOG 10:55:47.380] PartLoader: Compiling Part \u0027Squad/Parts/Engine/liquidEngine2/part/liquidEngine2\u0027\u003Cbr\u003E[LOG 10:55:47.386] Added sound_rocket_hard to FXGroup running\u003Cbr\u003E[LOG 10:55:47.387] Added sound_explosion_low to FXGroup flameout\u003Cbr\u003E[LOG 10:55:47.389] *** Debugger.OnAwake() on liquidEngine2\u003Cbr\u003E[LOG 10:55:47.389] *** 0 PartModules found\u003Cbr\u003E[LOG 10:55:47.404] *** Debugger.OnAwake() on liquidEngine2(Clone)\u003Cbr\u003E[LOG 10:55:47.404] *** 6 PartModules found\u003Cbr\u003E[LOG 10:55:47.404] *** liquidEngine2(Clone) (ProjectArcturus.ArcturusDebugger)\u003Cbr\u003E[LOG 10:55:47.404] *** liquidEngine2(Clone) (ModuleJettison)\u003Cbr\u003E[LOG 10:55:47.404] *** liquidEngine2(Clone) (ModuleAnimateHeat)\u003Cbr\u003E[LOG 10:55:47.404] *** liquidEngine2(Clone) (ModuleAlternator)\u003Cbr\u003E[LOG 10:55:47.404] *** liquidEngine2(Clone) (ModuleGimbal)\u003Cbr\u003E[LOG 10:55:47.404] *** liquidEngine2(Clone) (ModuleEngines)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe part modules appear in the order in which they appeared in the config file, \u003Cem\u003Eexcept\u003C/em\u003E for modules touched my ModuleManager. Those ones get appended to the end of the list, in the order in which they appear in the relevant .cfg file \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 is my guess.\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-26T18:44:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022CaptainArbitrary\u0022 data-cite=\u0022CaptainArbitrary\u0022\u003E\u003Cdiv\u003EThe part modules appear in the order in which they appeared in the config file, \u003Cem\u003Eexcept\u003C/em\u003E for modules touched my ModuleManager. Those ones get appended to the end of the list, in the order in which they appear in the relevant .cfg file \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 is my guess.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is correct, but it has nothing to do with deleting or reloading the modules, it\u0027s purely a matter of what the in-memory ConfigNode ends up looking like.\u003C/p\u003E\u003Cp\u003EANY sub-node within a ConfigNode that gets modified has to be removed and re-added. If you look at \u003Ca href=\u0022https://github.com/Ialdabaoth/ModuleManager/blob/master/moduleManager.cs\u0022 rel=\u0022external nofollow\u0022\u003EModuleManager.cs\u003C/a\u003E, you will see this happening on line 93 and 94. This is because funky things occasionally happen if you just modify a subnode that is parented to a larger configNode (or at least they did in 0.19; I didn\u0027t want to risk introducing new bugs in 0.20 so that code remained untouched).\u003C/p\u003E\u003Cp\u003EAs a consequence of this, yeah... it looks like every subnode that gets modified gets bumped to the bottom of the subnode list. One simple solution might be to include a blank patch node for the nodes that you want to ensure show up after the node you\u0027re modifying, so you\u0027d wind up with something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[liquidEngine2]\u003Cbr\u003E{\u003Cbr\u003E\t@maxTemp = 1800\u003Cbr\u003E\t@MODULE[ModuleGimbal]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@gimbalRange = 2\u003Cbr\u003E\t}\u003Cbr\u003E\t@MODULE[ModuleEngines]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@heatProduction = 200\u003Cbr\u003E\t}\u003Cbr\u003E\t@MODULE[ModuleGimbal] {}\u003Cbr\u003E\t@MODULE[ModuleAlternator] {}\u003Cbr\u003E\t@MODULE[ModuleJettison] {}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that this has the additional advantage of allowing you to position an inserted node precisely between any two existing nodes, by spelling out the entire new node order explicitly.\u003C/p\u003E\n"},{"CreatedByName":"CaptainArbitrary","CreatedById":28110,"CreatedDateTime":"2013-06-26T19:13:48Z","Content":"\n\u003Cp\u003EWell, yeah, that \u003Cem\u003Ewould\u003C/em\u003E work \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6unless it\u0027s \u003Cem\u003Esomebody else\u0027s\u003C/em\u003E ModuleManager config file that\u0027s screwing you up. As it was in this case; it was actually Deadly Reentry, not my own config file, that caused the original problem.\u003C/p\u003E\u003Cp\u003EI guess for the time being, at least, the workaround is to have a custom ModuleManager config file that touches every part where the order of part modules matters, as it does with engines. That\u0027s \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6*bleurg. I\u0027m not loving that, but it\u0027ll work, I guess.\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-26T19:22:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022CaptainArbitrary\u0022 data-cite=\u0022CaptainArbitrary\u0022\u003E\u003Cdiv\u003EWell, yeah, that \u003Cem\u003Ewould\u003C/em\u003E work \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6unless it\u0027s \u003Cem\u003Esomebody else\u0027s\u003C/em\u003E ModuleManager config file that\u0027s screwing you up. As it was in this case; it was actually Deadly Reentry, not my own config file, that caused the original problem.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn this case, it was mine. I can make the necessary changes. But in the larger scope, you\u0027re right. I\u0027m not sure that there\u0027s a good solution to this.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI guess for the time being, at least, the workaround is to have a custom ModuleManager config file that touches every part where the order of part modules matters, as it does with engines. That\u0027s \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6*bleurg. I\u0027m not loving that, but it\u0027ll work, I guess.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not loving that either. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E One of the problems that I frequently have when I look at ModuleManager, is figuring out use-case tradeoffs. (This is one of the reasons I\u0027m so adamant about not doing wildcards, for example). \u003C/p\u003E\u003Cp\u003EThe sheer number of ways that things can go subtly wrong in specific circumstances, while being completely logical and not in-point-of-fact incorrect, is staggering.\u003C/p\u003E\u003Cp\u003EAt this point in my modding career, my sole evaluation criterion for whether to implement a new feature - or even fix an existing bug - is \u0022will this cause more, or fewer people to bitch that it\u0027s broken?\u0022\u003C/p\u003E\n"},{"CreatedByName":"CaptainArbitrary","CreatedById":28110,"CreatedDateTime":"2013-06-26T19:37:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ialdabaoth\u0022 data-cite=\u0022ialdabaoth\u0022\u003E\u003Cdiv\u003EAt this point in my modding career, my sole evaluation criterion for whether to implement a new feature - or even fix an existing bug - is \u0022will this cause more, or fewer people to bitch that it\u0027s broken?\u0022\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, man, I know exactly what you mean. I hope my thing didn\u0027t come across as bitching. It was less frustrating and more \u0022Huh, \u003Cem\u003Ethat\u0027s\u003C/em\u003E a weird one.\u0022 Being a combination of how the ConfigNode structure works (I guess) and the fact that the game calls GetInfo() on each module in the order they appear in part.Modules, it was just a bizarre and pretty funny situation.\u003C/p\u003E\u003Cp\u003EFortunately there\u0027s no \u003Cem\u003Efunctional\u003C/em\u003E problem here. As near as I can tell, everything \u003Cem\u003Eworks,\u003C/em\u003E as long as you don\u0027t do something stupid and make modules throw uncaught null-reference exceptions if they don\u0027t get initialized in just the right order (ahem). The only lingering effect is a cosmetic thing, which drives my OCD \u003Cem\u003Ecompletely freaking bananas\u003C/em\u003E but which doesn\u0027t actually change the way the game works at all.\u003C/p\u003E\u003Cp\u003EFrankly, stuff like ModuleManager is kind of like what they say about the singing dog at the circus. It doesn\u0027t have to sing perfectly. The fact that it sings \u003Cem\u003Eat all\u003C/em\u003E is really impressive.\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2013-06-28T09:39:57Z","Content":"\n\u003Cp\u003EThis is pretty nice. Im new to Modding and want to make a resource.. Sounds like this will help me add a new Resource to the stock Crew Modules.. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"somnambulist","CreatedById":62108,"CreatedDateTime":"2013-07-02T05:14:14Z","Content":"\n\u003Cp\u003Eialdabaoth -\u003C/p\u003E\u003Cp\u003EI\u0027m trying to use model nodes to reduce KW Rocketry\u0027s memory footprint without entirely reorganzing the folder structure. Problem --\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E@PART[KW2mNoseCone]:Final\u003Cbr\u003E{\u003Cbr\u003E    @MODEL\u003Cbr\u003E        {\u003Cbr\u003E        model = KWRocketry/test\u003Cbr\u003E        texture = model000, KWRocketry/test\u003Cbr\u003E        scale = 1.0, 1.0, 1.0\u003Cbr\u003E        }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWill switch the mesh and texture to the test mesh and texture but KSP won\u0027t purge the original assets from memory. Is there any way to work around this or is that well beyond the scope of MM? (I tried \u0022!mesh = delete\u0022 but no go.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-02T05:15:50Z\u0022 title=\u002207/02/2013 05:15  AM\u0022 data-short=\u002211 yr\u0022\u003EJuly 2, 2013\u003C/time\u003E by somnambulist\u003C/strong\u003E\n\u003Cbr\u003Eforum ate the formatting\n\u003C/span\u003E\n"},{"CreatedByName":"praise the suuun","CreatedById":69912,"CreatedDateTime":"2013-07-07T06:48:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022CaptainArbitrary\u0022 data-cite=\u0022CaptainArbitrary\u0022\u003E\u003Cdiv\u003EI have the weirdest, and least helpful, bug report \u003Cem\u003Eever.\u003C/em\u003E\u003Cp\u003ESomehow it\u0027s possible for ModuleManager to screw up the order of PartModules attached to a part.\u003C/p\u003E\u003Cp\u003ENow, this description is gonna be wonky, because at the moment I\u0027m working with a \u003Cem\u003Every\u003C/em\u003E hacked configuration. I was testing out some engine designs (through ModularEngines), so I had just two engines installed in my game: a modified version of liquidEngine1 (the LV-T30) and a modified version of liquidEngine2 (the LV-T45). What I noticed first is that in the VAB, the part info for liquidEngine2 was all screwed up; instead of being listed in the normal way, with the ModuleEngines info first and then other lines after, it was \u003Cem\u003Ebackwards,\u003C/em\u003E listing the info in the reverse order from what I have in my part.cfg.\u003C/p\u003E\u003Cp\u003EAfter two solid days of investigating, including writing my own debugging PartModule that does nothing but print out the names of the modules in this.part.Modules in order at OnAwake(), I discovered that on liquidEngine2 \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC and \u003Cem\u003Eonly\u003C/em\u003E liquidEngine2 \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC the part module order was getting screwed up sometime between OnLoad() and OnAwake().\u003C/p\u003E\u003Cp\u003ENow, in this game directory I had just a few parts, but several core mods installed, \u0027cause it was a copy of my normal game directory. I had FAR and Deadly and RemoteTech and such like that \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 all of which call ModuleManager, so obviously I had a ModuleManager.dll in my game data folder too (the latest one, 1.3).\u003C/p\u003E\u003Cp\u003EIn a fit of just-isolate-the-damn-problem I started by pulling ModuleManager.dll out \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 and poof. The problem went away.\u003C/p\u003E\u003Cp\u003EI glanced through the ModuleManager.cs source file (\u003Ca href=\u0022https://github.com/Ialdabaoth/ModuleManager/blob/master/moduleManager%20copy.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Ialdabaoth/ModuleManager/blob/master/moduleManager%20copy.cs\u003C/a\u003E) just long enough to see that it does include code that removes all modules from a part then re-adds them \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 but weirdly, that code doesn\u0027t seem to be \u003Cem\u003Ecalled\u003C/em\u003E anywhere that I can see. The rest of the code involves game database features that I\u0027m not familiar with, so I haven\u0027t studied it too closely to figure out where exactly the problem lies.\u003C/p\u003E\u003Cp\u003EFor myself, I\u0027ve disabled ModuleManager.dll just for the moment, so I can get on with what I\u0027m doing. I\u0027m hoping that even this unacceptably vague \u0022bug report\u0022 (as if it deserves being called that) will be enough, since you\u0027re so familiar with the code, to make you go \u0022Oh, yeah, I totally know what\u0027s going on there.\u0022 But if not, I\u0027ll try to come back with more info once I get my current project squared away and get back to a not-entirely-insane game setup.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003Ethis is my exact problem!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Efinally i\u0027ve found other victims \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E. ive written up my perspective of this bug in the support tab.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/38899-Stock-air-breathing-engine-s-values-remaining-frozen-at-a-different-value-than-stock?p=502877#post502877\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/38899-Stock-air-breathing-engine-s-values-remaining-frozen-at-a-different-value-than-stock?p=502877#post502877\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-07-07T19:17:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022somnambulist\u0022 data-cite=\u0022somnambulist\u0022\u003E\u003Cdiv\u003Eialdabaoth -\u003Cp\u003EI\u0027m trying to use model nodes to reduce KW Rocketry\u0027s memory footprint without entirely reorganzing the folder structure. Problem --\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E@PART[KW2mNoseCone]:Final\u003Cbr\u003E{\u003Cbr\u003E    @MODEL\u003Cbr\u003E        {\u003Cbr\u003E        model = KWRocketry/test\u003Cbr\u003E        texture = model000, KWRocketry/test\u003Cbr\u003E        scale = 1.0, 1.0, 1.0\u003Cbr\u003E        }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWill switch the mesh and texture to the test mesh and texture but KSP won\u0027t purge the original assets from memory. Is there any way to work around this or is that well beyond the scope of MM? (I tried \u0022!mesh = delete\u0022 but no go.)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs soon as I have a computer that can run KSP, I\u0027ll look into this. In the meantime, I have a feeling it\u0027s out of scope \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E But I\u0027ll try my best to find a solution.\u003C/p\u003E\n"},{"CreatedByName":"praise the suuun","CreatedById":69912,"CreatedDateTime":"2013-07-08T14:49:52Z","Content":"\n\u003Cp\u003Ehey buddy id like to use ion cross, B9, remotetech, deadly reentry for my clean install. some how module manager is messing up my stock part values. will having multiple copies of module manager in the game directory be nickleback?\u003C/p\u003E\n"},{"CreatedByName":"Elros","CreatedById":58265,"CreatedDateTime":"2013-07-08T21:30:38Z","Content":"\n\u003Cp\u003EWhere is the dl link?\u003C/p\u003E\n"},{"CreatedByName":"praise the suuun","CreatedById":69912,"CreatedDateTime":"2013-07-09T06:40:03Z","Content":"\n\u003Cp\u003Eif you develop modifications then the build can be downloaded from the first page. if you want a mod with modulemanager.dll included theres a few out there.\u003C/p\u003E\n"}]}