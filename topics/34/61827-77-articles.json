{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":77,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-02T19:17:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022GabeTeuton\u0022 data-cite=\u0022GabeTeuton\u0022\u003E\u003Cdiv\u003EWell I reached my limit of understanding... after trying several different combinations of commands and thinking of ways to do this i just can\u0027t make it work... so i\u0027m after advice or something, if anyone is interested... To get this i made that flow chart or i guess i did to help you guys understand what i\u0027m trying to do in a very visual way... i hope it helps...\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/AZ6vyNY.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/AZ6vyNY.jpg\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you!\u003C/p\u003E\u003Cp\u003E(i can make it work manually, just adjust the pitch by a very small amount until the VS and VA is 0 (this i\u0027ll do when trim is released)... but i would like it to be automated, as an autopilot, if possible)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy haven\u0027t you tried just putting all the conditions in the same loop in one large if/else ladder?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euntil false {\u003Cbr\u003E  if altitude \u0026lt; 5000 {\u003Cbr\u003E    if verticalspeed \u0026lt; 10 {\u003Cbr\u003E      // do stuff here.\u003Cbr\u003E    }\u003Cbr\u003E  } else if altitude \u0026gt; 5000 {\u003Cbr\u003E    if verticalspeed \u0026gt; 10 {\u003Cbr\u003E      // do stuff here.\u003Cbr\u003E    }\u003Cbr\u003E  } else {   // it\u0027s exactly 5000, which seems unlikely as it will always be something like 5000.0001 or 4999.9999\u003Cbr\u003E    // do stuff here.\u003Cbr\u003E  }\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut in general, I think your algorithm is too dependent on boolean conditions and should depend on mathematical continuous sliding scales.\u003C/p\u003E\u003Cp\u003EFor example, instead of using \u0022if below 5000\u0022 and \u0022if above 5000\u0022, just calculate this:\u003C/p\u003E\u003Cp\u003ESET desiredAlt to 5000.\u003C/p\u003E\u003Cp\u003ELOCK altitudeDiff TO (ship:altitude - desiredAlt).\u003C/p\u003E\u003Cp\u003ENow if your altitude is above 5000, altitudeDiff is positive, else it\u0027s negative, AND the size of altitudeDiff tells you just how far off you are from 5000.\u003C/p\u003E\u003Cp\u003EWhich you can then use to decide how strong to set your vertical climb to. The farther off you are from 5000, the steeper your ascent or descend should be. Since you have this in a number, you can set it by math, again, like so:\u003C/p\u003E\u003Cp\u003E// Lock neededVSpeed to a bigger number the farther off the altitude is, up to a maximum of 20 m/s\u003C/p\u003E\u003Cp\u003ELOCK neededVSpeed TO ( - MAX(altitudeDiff/500,20) ).\u003C/p\u003E\u003Cp\u003ENow you\u0027ve got a neededVSpeed that is telling you how much vertical speed you need, and its sign tells you in which direction you need it.\u003C/p\u003E\u003Cp\u003EEtc, etc\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-02T19:25:43Z\u0022 title=\u002211/02/2014 07:25  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 2, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SnappingTurtle","CreatedById":69795,"CreatedDateTime":"2014-11-02T21:54:32Z","Content":"\n\u003Cp\u003EIt seems that if I reboot or shutdown a terminal when it has locked the steering it becomes impossible to unlock the steering without changing scenes. Shouldn\u0027t reboot/shutdown release locks?\u003C/p\u003E\n"},{"CreatedByName":"falcoiii","CreatedById":127868,"CreatedDateTime":"2014-11-02T22:06:27Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/103853-Trewor007\u0022 rel=\u0022external nofollow\u0022\u003ETrewor007\u003C/a\u003E \u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#3E3E3E;\u0022\u003EThanks for the response, here is the relevant source code. I think it may be the previous script that messes up KOS.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EAt ikemission on 1, line 1\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Ecopy dlaunch from 0.\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E^\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003ECalled from d on 1, line 19\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Erun ikemission.\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E^\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#3E3E3E;\u0022\u003Ed.txt:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// more code here...\u003Cbr\u003E\u003Cbr\u003Ecopy dunamission from 0.\u003Cbr\u003Erun dunamission.\u003Cbr\u003Edelete dunamission.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022duna mission done\u0022.\u003Cbr\u003Ewait 10.\u003Cbr\u003E\u003Cbr\u003E//fails in this mission.\u003Cbr\u003Ecopy ikemission from 0.\u003Cbr\u003Erun ikemission.\u003Cbr\u003Edelete ikemission.\u003Cbr\u003E\u003Cbr\u003E//more code here...\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eikemission.txt:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ecopy dlaunch from 0.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprint \u0022starting dlaunch\u0022.\u003Cbr\u003Ewait 2.\u003Cbr\u003Erun dlaunch.\u003Cbr\u003Ewait 2.\u003Cbr\u003E//fails here... this never prints.\u003Cbr\u003Eprint \u0022done dlaunch\u0022.\u003Cbr\u003Ewait 2.\u003Cbr\u003Edelete dlaunch.\u003Cbr\u003Edelete warpfast.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ecopy incline from 0.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Erun incline(\u0022Ike\u0022).\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Edelete incline.\u003Cbr\u003Edelete circularize.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ecopy ike from 0.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Erun ike.\u003Cbr\u003Edelete ike.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ecopy land from 0.\u003Cbr\u003Erun land.\u003Cbr\u003Edelete land.\u003Cbr\u003Ewait 5.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Edlaunch.txt:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif altitude \u0026gt; 50000\u003Cbr\u003E{\u003Cbr\u003E  print \u0022Already in space!\u0022.\u003Cbr\u003E\u003Cbr\u003E} else {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eunlock steering.\u003Cbr\u003Elock throttle to 1.\u003Cbr\u003Eprint \u0022DunaLaunch!\u0022.\u003Cbr\u003Ewait 4.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewhen ship:liquidfuel \u0026lt; 1430 then { \u003Cbr\u003E  stage. \u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eset mySteer to up.\u003Cbr\u003Elock steering to mySteer.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eset diff to 100.\u003Cbr\u003Elock throttle to 0.5.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Euntil ( diff \u0026lt; 1 OR VERTICALSPEED \u0026lt; 1 ) {\u003Cbr\u003E  SET Y to ABS(facing:yaw - mySteer:yaw).\u003Cbr\u003E  SET P to ABS(facing:pitch - mySteer:pitch).\u003Cbr\u003E  SET Y to 180 - ABS(Y - 180) .\u003Cbr\u003E  SET P to 180 - ABS(P - 180) .\u003Cbr\u003E\u003Cbr\u003E  set diff to Y \u002B P.\u003Cbr\u003E  wait 0.1.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Elock throttle to 1.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eset mySteer to up.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Elegs off.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Etoggle AG1.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait 9.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Turning to fix latitude. Waiting for 5000 feet to begin gravity turn.\u0022.\u003Cbr\u003Eprint latitude. \u003Cbr\u003E//lock steering to up \u002B R(10*abs(latitude)/latitude,0,0).\u003Cbr\u003Ewait latitude/10 \u002B 10.\u003Cbr\u003Elock steering to up. \u003Cbr\u003Eprint latitude.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Euntil altitude \u0026gt;4000 and ALT:RADAR \u0026gt; 1000 {\u003Cbr\u003E  print latitude.\u003Cbr\u003E}.\u003Cbr\u003Elock steering to up \u002B R(0,-40,0).\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E//lock steering to heading (90 \u002B latitude/2) by 50.\u003Cbr\u003Eprint \u0022Beginning gravity and inclination turn.\u0022.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Waiting for 10000 feet to deepen gravity turn.\u0022 \u002B latitude.\u003Cbr\u003Ewait until altitude \u0026gt; 10000.\u003Cbr\u003E//lock steering to up \u002B R(0,0,180) \u002B R(0,-65,0).\u003Cbr\u003Elock steering to up \u002B R(0,-65,0).\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Deeper gravity turn.\u0022 \u002B latitude. \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Waiting for apo \u0026gt; 100000.\u0022.\u003Cbr\u003Ewait until apoapsis \u0026gt; 100000.\u003Cbr\u003Elock throttle to 0.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Elock steering to prograde.\u003Cbr\u003Eprint \u0022Waiting for circularization burn.\u0022 \u002B latitude.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait until altitude \u0026gt; 45000.\u003Cbr\u003Eset warp to 2.\u003Cbr\u003Ewait until altitude \u0026gt; 60500.\u003Cbr\u003Eset warp to 3.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait until eta:apoapsis \u0026lt; 40.\u003Cbr\u003Eset warp to 0.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait until eta:apoapsis \u0026lt; 10.\u003Cbr\u003Elock throttle to 1.\u003Cbr\u003Eprint \u0022Burn.\u0022.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ewait until periapsis \u002B apoapsis \u0026gt; 199000.\u003Cbr\u003Elock steering to prograde.\u003Cbr\u003Elock throttle to 0.\u003Cbr\u003Ewait 0.1.\u003Cbr\u003Eprint \u0022Burn done.\u0022.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"GabeTeuton","CreatedById":116756,"CreatedDateTime":"2014-11-02T23:15:56Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EI don\u0027t have anything specific to point out in the flowchart two posts ago, but I\u0027m wondering if you are looking at enough variables.\u003Cp\u003ENotably, that flowchart behaves no differently if you are 15m or 1500m above 5000m altitude.\u003C/p\u003E\u003Cp\u003EWhile it is only vaguely similar, I had to include that in the math for my vertical velocity mod. (I was controlling engine thrust to change vertical speed as compared to you adjusting pitch to change vertical speed.)\u003C/p\u003E\u003Cp\u003EHow fine control do you have? Can you do something like:\u003C/p\u003E\u003Cp\u003EDesired vertical speed = (Desired altitude - Vessel altitude)/2; //so desired speed is half the distance to target, negative if above target, positive if below\u003C/p\u003E\u003Cp\u003EIf(Current Vertical Speed \u0026gt; Desired Vert Speed) then Pitch Down;\u003C/p\u003E\u003Cp\u003EIf(Current Vertical Speed \u0026lt; Desired Vert Speed) then Pitch Up;\u003C/p\u003E\u003Cp\u003EThat way as you approach 5000m, the desired speed will decrease automatically and you should damp out any sort of bounce going on from blowing past 5000m at a full 10m/s.\u003C/p\u003E\u003Cp\u003EYou would have to add a maximum as well, without it if you are really far off, the code above would not stop trying to pitch down until you were pointing straight down.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EVery interesting way of setting that, quite compact... I like it...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWhy haven\u0027t you tried just putting all the conditions in the same loop in one large if/else ladder?\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003Euntil false {\u003Cbr\u003E if altitude \u0026lt; 5000 {\u003Cbr\u003E if verticalspeed \u0026lt; 10 {\u003Cbr\u003E // do stuff here.\u003Cbr\u003E }\u003Cbr\u003E } else if altitude \u0026gt; 5000 {\u003Cbr\u003E if verticalspeed \u0026gt; 10 {\u003Cbr\u003E // do stuff here.\u003Cbr\u003E }\u003Cbr\u003E } else { // it\u0027s exactly 5000, which seems unlikely as it will always be something like 5000.0001 or 4999.9999\u003Cbr\u003E // do stuff here.\u003Cbr\u003E }\u003Cbr\u003E}.\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut in general, I think your algorithm is too dependent on boolean conditions and should depend on mathematical continuous sliding scales.\u003C/p\u003E\u003Cp\u003EFor example, instead of using \u0022if below 5000\u0022 and \u0022if above 5000\u0022, just calculate this:\u003C/p\u003E\u003Cp\u003ESET desiredAlt to 5000.\u003C/p\u003E\u003Cp\u003ELOCK altitudeDiff TO (ship:altitude - desiredAlt).\u003C/p\u003E\u003Cp\u003ENow if your altitude is above 5000, altitudeDiff is positive, else it\u0027s negative, AND the size of altitudeDiff tells you just how far off you are from 5000.\u003C/p\u003E\u003Cp\u003EWhich you can then use to decide how strong to set your vertical climb to. The farther off you are from 5000, the steeper your ascent or descend should be. Since you have this in a number, you can set it by math, again, like so:\u003C/p\u003E\u003Cp\u003E// Lock neededVSpeed to a bigger number the farther off the altitude is, up to a maximum of 20 m/s\u003C/p\u003E\u003Cp\u003ELOCK neededVSpeed TO ( - MAX(altitudeDiff/500,20) ).\u003C/p\u003E\u003Cp\u003ENow you\u0027ve got a neededVSpeed that is telling you how much vertical speed you need, and its sign tells you in which direction you need it.\u003C/p\u003E\u003Cp\u003EEtc, etc\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EI didn\u0027t know you could use more than 1 else, i thought it was locked to one else per if, very good... I\u0027m going to search more about MAX in the wiki, as it seems quite useful!\u003C/p\u003E\u003Cp\u003E---------------------------------------------------------------------------------------------------------------------------------------\u003C/p\u003E\u003Cp\u003EBoth ideas are really good, i guess i lack a sense of logic (in order to simplify things a lot) you guys have... I\u0027ll try to implement what i learned, maybe even try to merge both ideas \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E!!\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022color:#0000ff;\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EThank you!\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-02T23:29:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022GabeTeuton\u0022 data-cite=\u0022GabeTeuton\u0022\u003E\u003Cdiv\u003EI didn\u0027t know you could use more than 1 else, i thought it was locked to one else per if, very good... I\u0027m going to search more about MAX in the wiki, as it seems quite useful!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EStop. Using. The. Wiki.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/command/math/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/command/math/index.html\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"GabeTeuton","CreatedById":116756,"CreatedDateTime":"2014-11-02T23:39:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EStop. Using. The. Wiki.\u003Cp\u003E\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/command/math/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/command/math/index.html\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI meant that by the wiki haha, github calls it wiki, or the wiki in github is that one, haha, besides the other wiki it\u0027s not as well explained as this one from github... i guess instead of wiki i\u0027ll call it documentation from now on!\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-11-03T00:11:34Z","Content":"\n\u003Cp\u003EOkay, so suspending the initialization issue for the moment since it isn\u0027t a huge issue right now, I have another question. My current project is called AAVNAP, or Advanced AVionics and Navigation Algorithm Package. The goal is to create a fly-by-wire and autopilot system for the KSO super25 shuttle. As of right now, the shuttle is unusable because with FAR the controls are too finnicky to be able to control without computer intervention, but at speeds over anout 170 m/s, SAS causes the control surfaces to twitch violently and generate so much fake thrust that the shuttle quickly falls apart. Thus, my own system is needed. \u003C/p\u003E\u003Cp\u003ECurrently, the only plan is for fly-by-wire capabilities, in which the computer takes control of the shuttle to keep it stable, while looking to user commands to determine what the shuttle should be doing. I plan to develop full autopilot capabilities in the future, but crawling before walking \u0026amp;c.\u003C/p\u003E\u003Cp\u003EMy current dilemma is this: kOS locks out user controls while it is in control of the vehicle. This \u003Cem\u003Eis\u003C/em\u003E a feature I want, because I do not want the pilot controlling the vehicle directly, I want the computer to control it according to the pilot\u0027s commands. What I want to know is, how can I get kOS to recognize that the pilot is commanding say, a left roll using the Q key, so that it may manipulate the controls to actually make the vehicle perform the maneuver? As far as I know, there is no way to make kOS respond to keypresses. (or even commands entered into the console.) So how may I accomplish this?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-03T00:19:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EAs far as I know, there is no way to make kOS respond to keypresses. (or even commands entered into the console.) So how may I accomplish this?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is correct, unfortunately. Fixing it is all tied up with the remote-ablity of the terminal, however, since KSP is inherently using gui event-driven styles of input and the terminal through which input should come should be using a stream-based style of input.\u003C/p\u003E\u003Cp\u003EFixing it involves writing a bridge between the gui event-driven input and an input stream for the terminal to read. This is all pie-in-the-sky stuff at the moment.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-11-03T00:45:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EAs far as I know, there is no way to make kOS respond to keypresses. (or even commands entered into the console.) So how may I accomplish this?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027re only option right now are Action Groups (0-9)\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-11-03T01:08:05Z","Content":"\n\u003Cp\u003EThat could be a possibility. I have action groups extended installed, and I believe that allows me to map my own keys to action groups. I could use the action groups for input and AGX to bind them to the appropriate keys.\u003C/p\u003E\n"},{"CreatedByName":"Cairan","CreatedById":85361,"CreatedDateTime":"2014-11-03T01:52:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe reason why an IFNDEF is useful is that for many data types, there is no such thing as an impossible value that doesn\u0027t actually ever happen in normal operations. \u003Cp\u003EYou need to be able to tell the difference between \u0022this number is zero because it was never defined\u0022 from \u0022this number is zero because it was SET to zero.\u0022\u003C/p\u003E\u003Cp\u003EIMO, an IFNDEF would be a useful thing to add to kOS.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn the meantime, you can also set a variable to some specific value which you would normally not encounter... In my field of work, we log offscale high or offscale low with -9999 and 9999 on dataloggers...\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-03T02:21:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EThat could be a possibility. I have action groups extended installed, and I believe that allows me to map my own keys to action groups. I could use the action groups for input and AGX to bind them to the appropriate keys.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAction Groups Extended uses a different API than stock action groups use. kOS does not currently support it, but as I understand it, Erendrake and Diazo are working on adding support. I\u0027d expect action groups extended support to come to kOS a lot sooner than proper input support. Supporting Action Groups Extended doesn\u0027t require that all of the terminal system be altered. Input support sort of does.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-11-03T03:03:34Z","Content":"\n\u003Cp\u003EWell I\u0027m away from my computer right now, so I can\u0027t test it, but I seem to remember that it was possible through AGX to bind keys to the default 10 action groups, which kOS can access, correct? So the mapping would look something like the following:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EAGX Mappings:\u003Cbr\u003EW-\u0026gt;ag1\u003Cbr\u003EA-\u0026gt;ag2\u003Cbr\u003ES-\u0026gt;ag3\u003Cbr\u003ED-\u0026gt;ag4\u003Cbr\u003EQ-\u0026gt;ag5\u003Cbr\u003EE-\u0026gt;ag6\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand then kOS would interpret the activation of ag1 as a pitch down command, ag2 would be yaw left, etc. But then again, maybe I\u0027m just remembering incorrectly, and should find some other way to passify myself for the time being. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT: Or maybe it could simply be done through the game\u0027s settings panel, or even an AutoHotKey script in an extreme case. Though I think an AutoHotKey script may be preferable to locking WASDQE to action groups in game, at least AutoHotKey scripts can be disabled with ease.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-03T03:08:09Z\u0022 title=\u002211/03/2014 03:08  AM\u0022 data-short=\u00229 yr\u0022\u003ENovember 3, 2014\u003C/time\u003E by VFB1210\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-11-03T03:18:56Z","Content":"\n\u003Cp\u003EAGX Dev here. \u003C/p\u003E\u003Cp\u003EAs things currently stand with the currently released versions of kOS and AGX, if you bind a key that kOS locks out to action groups 1 through 10 in AGX, AGX will toggle that action group as expected and so trigger kOS\u0027s \u0022ON AG1\u0022 logic.\u003C/p\u003E\u003Cp\u003EI will also confirm that I\u0027m talking with Erendrake to see if AGX and kOS can work together to allow more action groups (so AG11 and up). However, we are still at the initial stage of seeing if we can even get our mods talking to one another so I\u0027m not going to promise anything (including the possibility it does not happen if we can\u0027t get things working), and certainly not going to take any sort of guess at any sort of release date even if we can.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2014-11-03T03:33:54Z","Content":"\n\u003Cp\u003EWell, it looks like I have the solution to that issue then! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E Glad to see that you and erendrake are talking. Hopefully you can get AGX and kOS to work together, that alone would create a lot of potential for complicated user controlled scripts.\u003C/p\u003E\n"},{"CreatedByName":"GabeTeuton","CreatedById":116756,"CreatedDateTime":"2014-11-03T14:04:54Z","Content":"\n\u003Cp\u003EOnce again i need help in diagnosing the problem... I implemented the new things i learnt from you guys, but as one single coded block, it didn\u0027t work, so i thought i could kind of \u0022debug\u0022 the software by removing the clause that locks the relevant variable to the ship pitch, and just let the program run and print what it does, without actually managing the airplane, so i could change the situation by controlling the plane, and see what the program would do... it worked (the idea of debuging it, if debug is the word to what i\u0027m trying to mean)...\u003C/p\u003E\u003Cp\u003EThough the program was not doing what i meant... so i decided to test it by condition, so once the first condition worked, then the other ones should be easy based on the first one... so far, so good... now the first condition doesn\u0027t work, but as far as i can read in the code, it should work... so i need help identifying what\u0027s wrong...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003ECLEARSCREEN.\u003Cbr\u003ESET DESIREDALT TO 5000. // desired altitude setting\u003Cbr\u003ELOCK ALTDIF TO (SHIP:ALTITUDE - DESIREDALT). // altdif setting\u003Cbr\u003ELOCK NEEDEDVS TO ( - MIN(ALTDIF/250,20)). // needed vs setting, i changed from MAX to MIN, because using MAX, it would always use 20, instead if it\u0027s MIN, it will adjust slowly until it hits 20, though it never did.\u003Cbr\u003ESET P TO 0. // i noticed that if i set p to anything else than 0, the clause set p to p \u002B X, won\u0027t work, if it\u0027s in 0, it will work, i need further testing on this, but if set to 0 it works, so this is not a problem.\u003Cbr\u003E\u003Cbr\u003EWHEN AG6 = TRUE THEN {                                             // this is set as so, because if i use \u0022until false\u0022 it won\u0027t go to the next until false until this one is false, this way works pretty well... (anyhow i\u0027ll hear suggestions, though this is not \u003Cbr\u003E    PRINT \u0022DESIRED ALTITUDE= \u0022 \u002B DESIREDALT AT (0,0).    // an issue so far\u003Cbr\u003E    PRINT \u0022ALTITUDE DIFF= \u0022 \u002B ALTDIF AT (0,1).\u003Cbr\u003E    PRINT \u0022CURRENT ALTITUDE= \u0022 \u002B ALTITUDE AT (0,2).\u003Cbr\u003E    PRINT \u0022VERTICAL SPEED= \u0022 \u002B VERTICALSPEED AT (0,6).\u003Cbr\u003E    PRINT \u0022NEEDED VERT SPEED= \u0022 \u002B NEEDEDVS AT (0,7).\u003Cbr\u003E    PRINT \u0022CURRENT P= \u0022 \u002B P AT (0,8).\u003Cbr\u003E    PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003EUNTIL FALSE {\u003Cbr\u003E    IF ALTDIF \u0026lt; 0 {                                                                        // if altdif is negative then\u003Cbr\u003E        IF VERTICALSPEED \u0026lt; NEEDEDVS {                                            // if vertical speed is less than the neededvs\u003Cbr\u003E            UNTIL VERTICALSPEED = NEEDEDVS { SET P TO P \u002B 0.00001.   // until both are the same, add 0.00001 to P\u003Cbr\u003E            WAIT 0.001.                                                                    // without this p would stay in 0.00001 rather than keep adding 0.00001\u003Cbr\u003E            IF P \u0026lt; 0 {SET P TO 0.}.}.                                                  // this is supposed to set p to 0 if for instance this clause started to work after the following one, so instead of going all the way to positive, it starts from 0.\u003Cbr\u003E            }\u003Cbr\u003E        IF VERTICALSPEED \u0026gt; NEEDEDVS {                                            // same as before but inverted, the thing is, this doesn\u0027t work, it will keep adding 0.0001 to p regardless of if it\u0027s less or more than neededvs************\u003Cbr\u003E            UNTIL VERTICALSPEED = NEEDEDVS { SET P TO P - 0.00001.\u003Cbr\u003E            WAIT 0.001.\u003Cbr\u003E            IF P \u0026gt; 0 {SET P TO 0.}.}.\u003Cbr\u003E            }\u003Cbr\u003E    } ELSE {SET P TO 0.}.                                                              // just for completeness, i\u0027m testing this condition always under 5000, so it shouldn\u0027t matter\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo the problem is what i explained in the ***************, it never checks if that is true or false, so it doesn\u0027t do what it\u0027s supposed to, if ALTDIF is negative, it assumes verticalspeed is always \u0026lt; neededvs, in other words it never susbstracts 0.0001 from p.- Ideas???\u003C/p\u003E\u003Cp\u003E(i hope i made the problem clear)\u003C/p\u003E\u003Cp\u003EThank you as always...\u003C/p\u003E\n"},{"CreatedByName":"Trewor007","CreatedById":101021,"CreatedDateTime":"2014-11-03T14:07:59Z","Content":"\n\u003Cp\u003EIs there a way to set multiple things to one number? so i don\u0027t have to write it like so: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset a to 0. set b to 0. set c to 0.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ebut something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E set a, b, c, to 0 \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-11-03T15:09:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cairan\u0022 data-cite=\u0022Cairan\u0022\u003E\u003Cdiv\u003EI agree it\u0027s nice to get these values \u0022magically\u0022 (I really, really appreciate it when it comes to fine tuning control algorithms), but as another poster mentionned, in RealLife, you often can not, except in post-flight analysis, determine where the centers of lift and drag are located, specially when it comes to \u0022real\u0022 aerodynamics... STS-1 was an humbling mission as Columbia didn\u0027t quite behave like it was modelled to, Young and Crippen had to take control to limit side slip on the first S-turn...\u003Cp\u003EAs for integrating Ferram\u0027s FAR or NEAR, maybe it would be easier instead of modifying the kOS code to make a standalone module which would augment the atmospheric sensor parts (nosecone, among others) with all these magic values, by using ModuleManager? Then you could hook from kOS by calling SENSOR:READOUT... to read the values... wouldn\u0027t that work?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually, I believe those are Coefficients of Lift, Drag and Mass, since they are all floats, not vectors... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-11-03T15:39:02Z","Content":"\n\u003Cp\u003E@GabeTeuton: A couple thoughts.\u003C/p\u003E\u003Cp\u003EFirst, I don\u0027t know kOS script but:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E UNTIL VERTICALSPEED = NEEDEDVS { SET P TO P \u002B 0.00001. \u003C/pre\u003E\u003Cp\u003E Is this not missing a closing } bracket? 0.00001}.\u003C/p\u003E\u003Cp\u003ESecond, I don\u0027t like that \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EIF P \u0026lt; 0 {SET P TO 0.}.}. \u003C/pre\u003E\u003Cp\u003E line. It would have to be one very well designed plane at a specific speed for a perfectly level flight to equal no vertical movement. \u003C/p\u003E\u003Cp\u003EHowever, I can\u0027t actually see anything wrong with the script so no other suggestions.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-11-03T16:04:03Z","Content":"\n\u003Cp\u003E@GabeTeuton:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ECLEARSCREEN.\u003Cbr\u003ESET DESIREDALT TO 5000. // desired altitude setting\u003Cbr\u003ELOCK ALTDIF TO (SHIP:ALTITUDE - DESIREDALT). // Positive means you\u0027re too high. Negative means you\u0027re too low.\u003Cbr\u003ELOCK NEEDEDVS TO MIN(ABS(ALTDIF/250), 20). // This is just the magnitude of the desired vertical speed you want.\u003Cbr\u003ESET P TO 0. // Initial trim/correction is 0.\u003Cbr\u003E\u003Cbr\u003EWHEN AG6 = TRUE THEN {                                             // this is set as so, because if i use \u0022until false\u0022 it won\u0027t go to the next until false until this one is false, this way works pretty well... (anyhow i\u0027ll hear suggestions, though this is not \u003Cbr\u003E    PRINT \u0022DESIRED ALTITUDE= \u0022 \u002B DESIREDALT AT (0,0).    // an issue so far\u003Cbr\u003E    PRINT \u0022ALTITUDE DIFF= \u0022 \u002B ALTDIF AT (0,1).\u003Cbr\u003E    PRINT \u0022CURRENT ALTITUDE= \u0022 \u002B ALTITUDE AT (0,2).\u003Cbr\u003E    PRINT \u0022VERTICAL SPEED= \u0022 \u002B VERTICALSPEED AT (0,6).\u003Cbr\u003E    PRINT \u0022NEEDED VERT SPEED= \u0022 \u002B NEEDEDVS AT (0,7).\u003Cbr\u003E    PRINT \u0022CURRENT P= \u0022 \u002B P AT (0,8).\u003Cbr\u003E    PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003EUNTIL FALSE {\u003Cbr\u003E  IF ALTDIF \u0026lt; 0 { // Too low, need to climb\u003Cbr\u003E    IF VERTICALSPEED \u0026lt; NEEDEDVS { // Nose up\u003Cbr\u003E      SET P TO P \u002B (MIN(NEEDEDVS - VERTICALSPEED, 100) / 100).\u003Cbr\u003E    } ELSE IF VERTICALSPEED \u0026gt; NEEDEDVS { // Nose down\u003Cbr\u003E      SET P TO P - (MIN(VERTICALSPEED - NEEDEDVS, 100) / 100).\u003Cbr\u003E    }.\u003Cbr\u003E  } ELSE IF ALTDIF \u0026gt; 0 { // Too high, need to descend\u003Cbr\u003E    IF VERTICALSPEED \u0026gt; -NEEDEDVS { // Nose down\u003Cbr\u003E      SET P TO P - (MAX(VERTICALSPEED \u002B NEEDEDVS, 100) / 100).\u003Cbr\u003E    } ELSE IF VERTICALSPEED \u0026lt; -NEEDEDVS { // Nose up\u003Cbr\u003E      SET P TO P \u002B (MAX(-NEEDEDVS - VERTICALSPEED, 100)/100).\u003Cbr\u003E    }.\u003Cbr\u003E  }.\u003Cbr\u003E  // Do something with P. I assume it will get folded into the pitch controls.\u003Cbr\u003E  WAIT 0.001.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-03T16:23:33Z\u0022 title=\u002211/03/2014 04:23  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 3, 2014\u003C/time\u003E by madlemur\u003C/strong\u003E\n\u003Cbr\u003EAdded some linear smoothing of the adjustment value. Could also try a trig or log function to tweak more.\n\u003C/span\u003E\n"},{"CreatedByName":"GabeTeuton","CreatedById":116756,"CreatedDateTime":"2014-11-03T16:09:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003E@GabeTeuton: A couple thoughts.\u003Cp\u003EFirst, I don\u0027t know kOS script but:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E UNTIL VERTICALSPEED = NEEDEDVS { SET P TO P \u002B 0.00001. \u003C/pre\u003E\u003Cp\u003E Is this not missing a closing } bracket? 0.00001}.\u003C/p\u003E\u003Cp\u003ESecond, I don\u0027t like that \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EIF P \u0026lt; 0 {SET P TO 0.}.}. \u003C/pre\u003E\u003Cp\u003E line. It would have to be one very well designed plane at a specific speed for a perfectly level flight to equal no vertical movement. \u003C/p\u003E\u003Cp\u003EHowever, I can\u0027t actually see anything wrong with the script so no other suggestions.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E IF VERTICALSPEED \u0026lt; NEEDEDVS {                                            // if vertical speed is less than the neededvs\u003Cbr\u003E            UNTIL VERTICALSPEED = NEEDEDVS { SET P TO P \u002B 0.00001.   // until both are the same, add 0.00001 to P\u003Cbr\u003E            WAIT 0.001.                                                                    // without this p would stay in 0.00001 rather than keep adding 0.00001\u003Cbr\u003E            IF P \u0026lt; 0 {SET P TO 0.}.[I][U][B]}.[/B][/U][/I]                                                  // this is supposed to set p to 0 if for instance this clause started to work after the following one, so instead of going all the way to positive, it starts from 0.\u003Cbr\u003E            } \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cem\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003Ethis one is the closing bracket for this bunch\u003C/span\u003E\u003C/em\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Ein regards to the second, level flight means no vertical altitude change, in other words vertical speed = 0, and that is acchieved at certain AoA, which changes with the conditions, i believe every body that \u0022flies\u0022, will have an AoA for level flight, as FAR calculates it for every plane... WHAT may change in regards to the design is the purpose of the plane, and whether the plane is desgined with an specific purpuse, for instance a bomber that is designed for 10k meters of cruise altitude, will be designed so the level flight at cruise speed is acchieved with an AoA that is closer to 0 or even 0, so it flights \u0022straigt\u0022 into the stream rather than pitching up like most planes designed in ksp, though that\u0027s something you can achieve, it\u0027s just a matter of designing the airplane for a said altitude and speed, and check the AoA provided by far, then Angle the elevons (control surfaces that are specifically meant to change pitch), until the AoA is 0 for those conditions, and you\u0027ll have a plane that at said conditions, will flight \u0022straight\u0022 or most likely straight... though you may have problems prior to getting to those conditions, like taking off, landing, climbing, etc...\u003C/p\u003E\n"},{"CreatedByName":"GabeTeuton","CreatedById":116756,"CreatedDateTime":"2014-11-03T16:11:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003E@GabeTeuton:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ECLEARSCREEN.\u003Cbr\u003ESET DESIREDALT TO 5000. // desired altitude setting\u003Cbr\u003ELOCK ALTDIF TO (SHIP:ALTITUDE - DESIREDALT). // Positive means you\u0027re too high. Negative means you\u0027re too low.\u003Cbr\u003ELOCK NEEDEDVS TO MIN(ABS(ALTDIF/250), 20). // This is just the magnitude of the desired vertical speed you want.\u003Cbr\u003ESET P TO 0. // Initial trim/correction is 0.\u003Cbr\u003E\u003Cbr\u003EWHEN AG6 = TRUE THEN {                                             // this is set as so, because if i use \u0022until false\u0022 it won\u0027t go to the next until false until this one is false, this way works pretty well... (anyhow i\u0027ll hear suggestions, though this is not \u003Cbr\u003E    PRINT \u0022DESIRED ALTITUDE= \u0022 \u002B DESIREDALT AT (0,0).    // an issue so far\u003Cbr\u003E    PRINT \u0022ALTITUDE DIFF= \u0022 \u002B ALTDIF AT (0,1).\u003Cbr\u003E    PRINT \u0022CURRENT ALTITUDE= \u0022 \u002B ALTITUDE AT (0,2).\u003Cbr\u003E    PRINT \u0022VERTICAL SPEED= \u0022 \u002B VERTICALSPEED AT (0,6).\u003Cbr\u003E    PRINT \u0022NEEDED VERT SPEED= \u0022 \u002B NEEDEDVS AT (0,7).\u003Cbr\u003E    PRINT \u0022CURRENT P= \u0022 \u002B P AT (0,8).\u003Cbr\u003E    PRESERVE.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003EUNTIL FALSE {\u003Cbr\u003E  IF ALTDIF \u0026lt; 0 { // Too low, need to climb\u003Cbr\u003E    IF VERTICALSPEED \u0026lt; NEEDEDVS { // Nose up\u003Cbr\u003E      SET P TO P \u002B 0.001.\u003Cbr\u003E    } ELSE IF VERTICALSPEED \u0026gt; NEEDEDVS { // Nose down\u003Cbr\u003E      SET P TO P - 0.001.\u003Cbr\u003E    }.\u003Cbr\u003E  } ELSE IF ALTDIF \u0026gt; 0 { // Too high, need to descend\u003Cbr\u003E    IF VERTICALSPEED \u0026gt; -NEEDEDVS { // Nose down\u003Cbr\u003E      SET P TO P - 0.001.\u003Cbr\u003E    } ELSE IF VERTICALSPEED \u0026lt; -NEEDEDVS { // Nose up\u003Cbr\u003E      SET P TO P \u002B 0.001.\u003Cbr\u003E    }.\u003Cbr\u003E  }.\u003Cbr\u003E  // Do something with P. I assume it will get folded into the pitch controls.\u003Cbr\u003E  WAIT 0.001.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Enow i have to leave... but thanks, i\u0027ll definately try this and see what happens! Thanks for the suggestions! Still getting used to think as a programmer!\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-11-03T16:29:56Z","Content":"\n\u003Cp\u003E@GabeTeuton:\u003C/p\u003E\u003Cp\u003EThe problem with checking for VS = 0 is that VS is a float, and once you get away from 0, it\u0027s very, \u003Cem\u003Every\u003C/em\u003E unlikely you\u0027ll get back to it. Not saying it\u0027s impossible, but given the number of variable factors (AoA, Throttle setting, thrust generated, CoL:CoM positioning, etc., etc) and the fact that computers \u003Cem\u003Ewill\u003C/em\u003E loose accuracy when computing floating point numbers, it\u0027s better to assume you will never see a vertical speed of exactly 0.0 once you take off. I\u0027ve edited my code to (hopefully) include a smoothing function to minimize bounce and oscillation while letting the system make significant changes when needed. Once it gets close to the target altitude, it will still fluctuate, but the changes to the control surfaces should be tiny.\u003C/p\u003E\n"},{"CreatedByName":"Hitokiri","CreatedById":85627,"CreatedDateTime":"2014-11-03T20:53:42Z","Content":"\n\u003Cp\u003EHi, great work on KOS!\u003C/p\u003E\u003Cp\u003EI have one question concerning usage KOS in Space Planes, is it advisable? Is KOS ready for it?\u003C/p\u003E\u003Cp\u003EWhy I\u0027m asking, I made script that brings my SSTO to orbit, while script worked fine for some planes, it doesn\u0027t really worked for other for one reason - during atmospheric flight planes is wobbling on \u0022Roll\u0022.\u003C/p\u003E\u003Cp\u003EThe script looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclearscreen.\u003Cbr\u003Etoggle brakes.\u003Cbr\u003E\u003Cbr\u003Elock THROTTLE to 1.\u003Cbr\u003ELOCK STEERING TO Heading (90,3).\u003Cbr\u003E\u003Cbr\u003Estage.\u003Cbr\u003Eprint \u0022Lunch!\u0022.\u003Cbr\u003E\u003Cbr\u003Ewait until surfacespeed \u0026gt; 100.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Lift off!\u0022.\u003Cbr\u003ELOCK STEERING TO Heading (90,10).\u003Cbr\u003Ewait 5.\u003Cbr\u003Etoggle GEAR.\u003Cbr\u003E\u003Cbr\u003ELOCK STEERING TO Heading (90,45).\u003Cbr\u003E\u003Cbr\u003Ewait until ALTITUDE \u0026gt; 10000.\u003Cbr\u003Eprint \u002210k!\u0022.\u003Cbr\u003ELOCK STEERING TO Heading (90,20).\u003Cbr\u003EUNLOCK THROTTLE.\u003Cbr\u003E\u003Cbr\u003Ewait until eta:apoapsis \u0026lt; 5.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Rocket Engines!\u0022.\u003Cbr\u003ELOCK STEERING TO Heading (90,30).\u003Cbr\u003Etoggle AG1.\u003Cbr\u003Elock THROTTLE to 1.\u003Cbr\u003E\u003Cbr\u003Ewait until APOAPSIS \u0026gt; 300000.\u003Cbr\u003Elock THROTTLE to 0.\u003Cbr\u003E\u003Cbr\u003Elock steering to prograde.\u003Cbr\u003E\u003Cbr\u003Ewait until eta:apoapsis \u0026lt; 10.\u003Cbr\u003E\u003Cbr\u003Eset x to apoapsis.\u003Cbr\u003Elock THROTTLE to 1.\u003Cbr\u003E\u003Cbr\u003Ewait until periapsis \u0026gt; x-500.\u003Cbr\u003Elock THROTTLE to 0.\u003Cbr\u003E\u003Cbr\u003Etoggle AG10.\u003Cbr\u003E\u003Cbr\u003Estage.\u003Cbr\u003Eprint \u0022Finished!\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe unlocked steering after reaching 10k is there for Mechjeb to control thrust in order to prevent flameout of engines as atmosphere thicker\u003C/p\u003E\u003Cp\u003EAnyway the \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ELOCK STEERING TO Heading (90,20).\u003C/pre\u003E\u003Cp\u003E is the main issue, plane always start ROLL left right and this cause that it will not keep that 20\u00C3\u201A\u00C2\u00B0 of pitch.\u003C/p\u003E\u003Cp\u003ESo what to do with it?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-11-03T21:11:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003Ethe fact that computers \u003Cem\u003Ewill\u003C/em\u003E loose accuracy when computing floating point numbers,\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile that can be a problem, in this case even if that wasn\u0027t happening it\u0027s STILL a bad idea for @GabeTeuton to be checking for exactly zero. Because even without the artificial artifact of computer floating point precision problems, in the *real* world you\u0027re not going to get the system that accurate.\u003C/p\u003E\u003Cp\u003EGabe, imagine this: you work as a general errand runner and gopher in a chemistry lab where your boss has said, \u0022I\u0027m cooling this down until it\u0027s 30 degrees, then we can start. Your instructions are to look at this digital thermometer and tell me when it says the temperature is exactly 30 degrees.\u0022 You say \u0022okay, will do!\u0022\u003C/p\u003E\u003Cp\u003EThen you look at it and it says 35.21301.. then 34.2411... then 32.21623.. then 31.01835, then 30.51821, then 30.201262, then 30.013011, then 30.003151, then 30.000045, then 30.00010, then 29.99912, then 29.999941. then 30.00004, then 29.999910. then 30.00004, then 30.000012, then 29.99919.... etc.\u003C/p\u003E\u003Cp\u003EAt what point should you say \u0022okay that\u0027s close enough to 30 degrees that it counts? It\u0027s clearly unable to hold it at exactly 30 to more than about 0.001 accuracy.\u0022?\u003C/p\u003E\u003Cp\u003EThis is the problem with what you\u0027re doing. Even in the real world an autopilot cannot possibly get the climb rate as accurate as you\u0027re looking for here. It will inevitibly waver a bit above and below the desired number. Your job is to ensure that it wavers around that point by as small a margin as possible, not to do the impossible and make it stick to it so precisely that it\u0027s accurate up to 12 significant digits. That\u0027s utterly impossible.\u003C/p\u003E\n"}]}