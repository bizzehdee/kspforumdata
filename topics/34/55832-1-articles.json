{"TopicId":55832,"ForumId":34,"TopicTitle":"[Program] Remote Tech 2.0 - Relay Stuff Calculator","CreatedByName":"JoePatrick","CreatedById":94207,"CreatedDateTime":"2013-12-11T19:14:31Z","PageNum":1,"Articles":[{"CreatedByName":"JoePatrick","CreatedById":94207,"CreatedDateTime":"2013-12-11T19:14:31Z","Content":"\n\u003Cp\u003ESo I have just finished making what seems like a simple program and is fairly simple, although uses some fairly complicated maths. The program is for use with a mod called Remote Tech for Kerbal Space Program. First you enter the omni-directional range of each satellite and then how many satellites you would like in your relay orbit. Then just press the calculate button and it will tell you: \u003C/p\u003E\u003Cp\u003E-The lowest orbit you can have where all the satellites will be connected \u003C/p\u003E\u003Cp\u003E-The highest orbit you can have where all the satellites will be connected \u003C/p\u003E\u003Cp\u003E-The required angle of separation between each satellite \u003C/p\u003E\u003Cp\u003EScreenshots:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/l4HHv2A.png\u0022 alt=\u0022l4HHv2A.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/PccosYp.png\u0022 alt=\u0022PccosYp.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/YxjUNDa.png\u0022 alt=\u0022YxjUNDa.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/sQ1isKO.png\u0022 alt=\u0022sQ1isKO.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/qeaSJ8z.png\u0022 alt=\u0022qeaSJ8z.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/fUsHUuS.png\u0022 alt=\u0022fUsHUuS.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/zbtV0XQ.png\u0022 alt=\u0022zbtV0XQ.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPublic Class Form1 \u003Cbr\u003E\u003Cbr\u003E    Function angle(ByVal x) \u003Cbr\u003E        Dim rad As Single = x \u003Cbr\u003E        Dim deg = rad * Math.PI / 180 \u003Cbr\u003E        Return deg \u003Cbr\u003E    End Function \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    Dim dist As Single \u003Cbr\u003E    Dim sideBMinString, SideBMaxString As String \u003Cbr\u003E    Dim units As String \u003Cbr\u003E    Dim radius As Integer \u003Cbr\u003E    Dim satcount As Integer \u003Cbr\u003E    Dim limit, atmoLimit As Boolean \u003Cbr\u003E    Dim angleA, angleB, sideA, sideC, sideBMin, sideBMax, clearSide As Single \u003Cbr\u003E    \u0027Dim alt As Integer = 1 \u003Cbr\u003E    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click \u003Cbr\u003E        limit = False \u003Cbr\u003E        atmoLimit = False \u003Cbr\u003E        If TextBox1.Text = \u0022\u0022 Then TextBox1.Text = 0 \u003Cbr\u003E        dist = TextBox1.Text \u003Cbr\u003E        units = \u0022m\u0022 \u003Cbr\u003E        satcount = NumericUpDown1.Value \u003Cbr\u003E        radius = 600000 \u003Cbr\u003E        angleA = angle(360 / satcount) \u003Cbr\u003E        angleB = angle((180 - (360 / satcount)) / 2) \u003Cbr\u003E        sideA = dist \u003Cbr\u003E        sideBMax = ((sideA / Math.Sin(angleA)) * Math.Sin(angleB)) - radius \u003Cbr\u003E        sideBMinString = \u0022Coming soon...\u0022 \u003Cbr\u003E        If sideBMax \u0026gt; 0 Then \u003Cbr\u003E            If sideBMax \u0026gt; dist Then limit = True \u003Cbr\u003E            SideBMaxString = Format(sideBMax, \u0022#,###\u0022) \u003Cbr\u003E        Else \u003Cbr\u003E            SideBMaxString = \u00220\u0022 \u003Cbr\u003E        End If \u003Cbr\u003E        Label4.Text = \u0022Min Altitude: Calculating...\u0022 \u003Cbr\u003E        Label5.Text = \u0022Max Altitude: Calculating...\u0022 \u003Cbr\u003E        Label6.Text = \u0022Angle of Seperation: Calculating...\u0022 \u003Cbr\u003E        BackgroundWorker1.RunWorkerAsync() \u003Cbr\u003E        If limit = False Then \u003Cbr\u003E\u003Cbr\u003E            Label5.Text = \u0022Max Altitude: \u0022 \u0026amp; SideBMaxString \u0026amp; units \u003Cbr\u003E        Else \u003Cbr\u003E\u003Cbr\u003E            Label5.Text = \u0022Max Altitude: \u0022 \u0026amp; Format(dist, \u0022#,###\u0022) \u0026amp; units \u003Cbr\u003E        End If \u003Cbr\u003E        If sideBMax \u0026gt; 0 Then \u003Cbr\u003E            Label6.Text = \u0022Angle of Seperation: \u0022 \u0026amp; Math.Round(360 / satcount) \u0026amp; \u0022\u0022 \u003Cbr\u003E        Else \u003Cbr\u003E            Label6.Text = \u0022Angle of Seperation: 0\u0022 \u003Cbr\u003E        End If \u003Cbr\u003E    End Sub \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load \u003Cbr\u003E        Control.CheckForIllegalCrossThreadCalls = False \u003Cbr\u003E    End Sub \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    Private Sub TextBox1_KeyPress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles TextBox1.KeyPress \u003Cbr\u003E        If Not Char.IsDigit(e.KeyChar) And Not Char.IsControl(e.KeyChar) Then \u003Cbr\u003E            e.Handled = True \u003Cbr\u003E        End If \u003Cbr\u003E    End Sub \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    Private Sub BackgroundWorker1_DoWork(ByVal sender As System.Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles BackgroundWorker1.DoWork \u003Cbr\u003E        For alt = 1 To 84159286 \u003Cbr\u003E            Dim satDist As Single = Math.Sin(angleA) * (alt / Math.Sin(angleB)) / 2 \u003Cbr\u003E            clearSide = Math.Sqrt((satDist ^ 2) \u002B (alt ^ 2) - (2 * satDist * alt * Math.Cos(angleB))) \u003Cbr\u003E            If clearSide \u0026gt;= 600000 Then \u003Cbr\u003E                BackgroundWorker1.ReportProgress(100) \u003Cbr\u003E                sideBMin = alt - radius \u003Cbr\u003E                If sideBMin \u0026lt; 70000 Then \u003Cbr\u003E                    atmoLimit = True \u003Cbr\u003E                End If \u003Cbr\u003E                Exit For \u003Cbr\u003E            End If \u003Cbr\u003E        Next \u003Cbr\u003E    End Sub \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    Private Sub BackgroundWorker1_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles BackgroundWorker1.RunWorkerCompleted \u003Cbr\u003E        If sideBMin \u0026gt; sideBMax Then \u003Cbr\u003E            Label4.Text = \u0022Min Altitude: 0m\u0022 \u003Cbr\u003E            Label5.Text = \u0022Max Altitude: 0m\u0022 \u003Cbr\u003E            Label6.Text = \u0022Angle of Seperation: 0\u0022 \u003Cbr\u003E            MessageBox.Show(\u0022You cannot put \u0022 \u0026amp; satcount \u0026amp; \u0022 satellites with an omni-range of \u0022 \u0026amp; Format(dist, \u0022#,###\u0022) \u0026amp; \u0022m in orbit and have a connection as the minimum required altitude is higher than the maximum\u0022) \u003Cbr\u003E        Else \u003Cbr\u003E            If atmoLimit = False Then \u003Cbr\u003E                Label4.Text = \u0022Min Altitude: \u0022 \u0026amp; Format(sideBMin, \u0022#,###\u0022) \u0026amp; \u0022m\u0022 \u003Cbr\u003E            Else \u003Cbr\u003E                Label4.Text = \u0022Min Altitude: 70,000m\u0022 \u003Cbr\u003E            End If \u003Cbr\u003E            If atmoLimit = True Then \u003Cbr\u003E                MessageBox.Show(\u0022Your setup is capable of having a minimum altitude of \u0022 \u0026amp; Format(sideBMin, \u0022#,###\u0022) \u0026amp; \u0022m but because of Kerbin\u0027s atmosphere, this is limited to 70,000m\u0022) \u003Cbr\u003E            End If \u003Cbr\u003E            If limit = True Then \u003Cbr\u003E                If sideBMax \u0026lt; 84159286 Then \u003Cbr\u003E                    MessageBox.Show(\u0022The omni-range you have chosen cannot receive a signal from Kerbin above \u0022 \u0026amp; Format(dist, \u0022#,###\u0022) \u0026amp; units \u0026amp; \u0022 but this setup has the potential for a max altitude of \u0022 \u0026amp; Format(sideBMax, \u0022#,###\u0022) \u0026amp; \u0022m if you add a dish with enough range to reach Kerbin\u0022) \u003Cbr\u003E                Else \u003Cbr\u003E                    MessageBox.Show(\u0022The omni-range you have chosen cannot receive a signal from Kerbin above \u0022 \u0026amp; Format(dist, \u0022#,###\u0022) \u0026amp; units \u0026amp; \u0022 but this setup has the potential for a max altitude of 84,159,286m (edge of Kerbin\u0027s SOI) if you add a dish with enough range to reach Kerbin\u0022) \u003Cbr\u003E                End If \u003Cbr\u003E            End If \u003Cbr\u003E        End If \u003Cbr\u003E    End Sub \u003Cbr\u003E\u003Cbr\u003EEnd Class \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-11T19:20:57Z\u0022 title=\u002212/11/2013 07:20  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 11, 2013\u003C/time\u003E by JoePatrick\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lmw5201","CreatedById":23973,"CreatedDateTime":"2013-12-12T11:47:38Z","Content":"\n\u003Cp\u003EIt seems really useful! Where can I get it?\u003C/p\u003E\n"},{"CreatedByName":"djnattyd","CreatedById":63737,"CreatedDateTime":"2013-12-12T17:21:41Z","Content":"\n\u003Cp\u003ESounds good, any chance of a d/l link?\u003C/p\u003E\n"},{"CreatedByName":"Peppe","CreatedById":51446,"CreatedDateTime":"2014-01-01T00:58:03Z","Content":"\n\u003Cp\u003ETried to get this to run, but without the designer code as well you would have to make all the labels/messages.\u003C/p\u003E\u003Cp\u003EWent ahead and made the same thing in excel / google docs if anyone comes accross this thread in the future:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/52132-Spreadsheet-Orbit-Night-Darkness-Req-Battery-Capacity-and-Satellite-Relay-Coverage\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/52132-Spreadsheet-Orbit-Night-Darkness-Req-Battery-Capacity-and-Satellite-Relay-Coverage\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESpreadsheet version.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/EeCb5AC.png\u0022 alt=\u0022EeCb5AC.png\u0022\u003E\u003C/p\u003E\n"}]}