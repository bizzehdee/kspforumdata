{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":177,"Articles":[{"CreatedByName":"Joe32320","CreatedById":81055,"CreatedDateTime":"2016-07-31T06:35:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222698216\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469940906\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot your fault.\u00A0 You\u0027ve discovered a bug.\u00A0 I made an issue for it here, which you should have a look at to see the detailed description of the problem:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1764\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/issues/1764\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf you need an immediate workaround, you can swap the Y and Z axes of the vector you get back from SUN:VELOCITY:ORBIT (but only that one, not the other body\u0027s velocities), as shown in the screenshot accompanying the bug report link above.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you do use that workaround, be aware that it\u0027s likely something we\u0027ll fix in a later release so be on the lookout for that in the release notes of future releases so you can un-swap them once it\u0027s fixed in the mod itself.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nGreat, thanks for the help! Will give it a try later.\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2016-07-31T06:37:10Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222698324\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469946912\u0022 data-ipsquote-userid=\u002281055\u0022 data-ipsquote-username=\u0022Joe32320\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, Joe32320 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nGreat, thanks for the help! Will give it a try later.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nJust a note, what I wrote as \u0022correct\u0022 is actualy not correct.\u00A0 The vector is inverted in the wrong direction.\u00A0 (in addition to not swapping the axes, it\u0027s *also* failing to invert the direction so it\u0027s the sun\u0027s velocity relative to kerbin instead of kerbin\u0027s velocity relative to the sun.)\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m seeing if I can get the fix into the v1.0.0 official release coming up soon, rather than making you have to wait even longer for the next release after that.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-31T06:38:17Z\u0022 title=\u002207/31/2016 06:38  AM\u0022 data-short=\u00227 yr\u0022\u003EJuly 31, 2016\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Efratror","CreatedById":167342,"CreatedDateTime":"2016-08-02T11:35:32Z","Content":"\n\u003Cp\u003E\nIs there away in kOS V1.0.0-pre-1 to get the directory\u00A0from the current running script? without setting the path in script!\u00A0scriptpath() gives the whole path including the filename and extension and path() isn\u0027t updated until after the script has finished running.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2016-08-02T15:24:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222701298\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470137732\u0022 data-ipsquote-userid=\u0022167342\u0022 data-ipsquote-username=\u0022Efratror\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Efratror said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIs there away in kOS V1.0.0-pre-1 to get the directory\u00A0from the current running script? without setting the path in script!\u00A0scriptpath() gives the whole path including the filename and extension and path() isn\u0027t updated until after the script has finished running.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m confused by the description. What do you mean by \u0022path() isn\u0027t updated until after the script has finished running\u0022 when combined with \u0022without setting the path in script!\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nIf the script isn\u0027t setting the path, then what\u0027s this \u0022updated\u0022 you\u0027re talking about mean?\n\u003C/p\u003E\n\u003Cpre\u003E\n\u00A0\u003C/pre\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-02T15:26:44Z\u0022 title=\u002208/02/2016 03:26  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 2, 2016\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"THX1138","CreatedById":113955,"CreatedDateTime":"2016-08-03T03:07:51Z","Content":"\n\u003Cp\u003E\n[deleted]\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-03T04:24:50Z\u0022 title=\u002208/03/2016 04:24  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 3, 2016\u003C/time\u003E by THX1138\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pap1723","CreatedById":148945,"CreatedDateTime":"2016-08-04T12:16:08Z","Content":"\n\u003Cp\u003E\nHello,\n\u003C/p\u003E\n\u003Cp\u003E\nI had a request from \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/16501-aeroz2011/\u0026amp;do=hovercard\u0022 data-mentionid=\u002216501\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/16501-aeroz2011/\u0022 rel=\u0022\u0022\u003E@aeroz2011\u003C/a\u003E\u00A0to add support for kOS to my Historical Progression Tech Tree. I am looking for some help from those of you that use it as to the use of the various parts that come with the mod and where they should be located on a tech tree in the scope of a timeline. Please correspond the parts to years when they would have historically been used and I will fill in the rest.\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nKR-2042 b Scriptable Control System (5000)\n\u003C/li\u003E\n\u003Cli\u003E\nCompoMax Radiual Tubeless (60,000)\n\u003C/li\u003E\n\u003Cli\u003E\nCX-4181 Scriptable Control System (10,000)\n\u003C/li\u003E\n\u003Cli\u003E\nKAL9000 Scriptable Control System (255,000)\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nFor those of you that do not know, the Tech Tree starts out historically so there are Probes before manned craft.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks for your help!\n\u003C/p\u003E\n\u003Ciframe data-embedcontent=\u0022\u0022 frameborder=\u00220\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/144295-113-historical-progression-tech-tree-v131-updated-8-2-16/\u0026amp;do=embed\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"baldamundo","CreatedById":138417,"CreatedDateTime":"2016-08-04T18:56:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222704118\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470312968\u0022 data-ipsquote-userid=\u0022148945\u0022 data-ipsquote-username=\u0022pap1723\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, pap1723 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHello,\n\u003C/p\u003E\n\u003Cp\u003E\nI had a request from \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/16501-aeroz2011/\u0026amp;do=hovercard\u0022 data-mentionid=\u002216501\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/16501-aeroz2011/\u0022 rel=\u0022\u0022\u003E@aeroz2011\u003C/a\u003E\u00A0to add support for kOS to my Historical Progression Tech Tree. I am looking for some help from those of you that use it as to the use of the various parts that come with the mod and where they should be located on a tech tree in the scope of a timeline. Please correspond the parts to years when they would have historically been used and I will fill in the rest.\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nKR-2042 b Scriptable Control System (5000)\n\u003C/li\u003E\n\u003Cli\u003E\nCompoMax Radiual Tubeless (60,000)\n\u003C/li\u003E\n\u003Cli\u003E\nCX-4181 Scriptable Control System (10,000)\n\u003C/li\u003E\n\u003Cli\u003E\nKAL9000 Scriptable Control System (255,000)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nKAL9000 presumably isn\u0027t going to be around until a certain odyssey circa 2001...(okay, okay, first operational in 1992 technically...)\n\u003C/p\u003E\n"},{"CreatedByName":"dafidge9898","CreatedById":147547,"CreatedDateTime":"2016-08-05T04:50:29Z","Content":"\n\u003Cp\u003E\nHow would one go about matching planes with a target during launch? I play\u00A0\u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E, and launches usually require a constant burn to orbit. Inclination changes from already established orbits, even if very small, require massive amounts of \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E, making a dogleg maneuver the best option. Any math you guys can throw at me to figure it out?\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2016-08-06T20:04:24Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/147547-dafidge9898/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022147547\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/147547-dafidge9898/\u0022 rel=\u0022\u0022\u003E@dafidge9898\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nLet\u0027s think of the realistic way of finding launch to specific plane:\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nFirst, note the conditions your launch profile puts you at the end of your main burn (it\u0027ll likely be suborbital with the circularization done later - take note of the suborbital trajectory): ground-relative velocity, distance from launch site and time since takeoff (yes, these may slightly vary for different inclinations, but this difference is kind of adding a few seconds after this).\n\u003C/li\u003E\n\u003Cli\u003E\nThe ascent trajectory should stay approximately in the same surface-relative vertical (that is, perpendicular to the surface, that is, going through the center of the planet) plane. For any given launch azimuth, using the final velocity and covered distance in this plane, you can get the surface-relative position (right now you\u0027ll specifically need the latitude of it) and velocity (which then needs to be recalculated to orbital velocity, taking altitude and latitude into account) which will give you the inclination of the orbit. So you have to find the proper launch azimuth to get the necessary inclination (note: for inclinations above the launch site\u0027s latitude you get 2 solutions for 2 different launch windows every day). Also note that the optimal ascent profile doesn\u0027t have constant azimuth - it slightly changes with your latitude to keep in the same surface-relative plane).\n\u003C/li\u003E\n\u003Cli\u003E\nNow, we have to match not only the inclination, but also the longitude of ascending node. Note the surface-relative position of the ascent end point (for the found launch azimuth). Then find at witch point in time it will be in the proper orbital plane (so that orbit plane for this position and velocity has both inclination and LAN correct). Now subtract the time the ascent takes - and there is your launch time.\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\nNow a bit of the practical navigation ideas: you have to find launch window and azimuth somehow like mentioned above (the slightly rough estimates are launching slightly before the launch site gets in orbit plane - the time difference here corresponds to the mostly vertical part of ascent, and having the launch azimuth as the azimuth of the surface velocity of something in the parking orbit when passing over the launch site\u0027s latitude), but you don\u0027t have to actually keep to the initial solution all the way to the orbit. Once you are out of the densest layers of the atmosphere (somewhat halfway through the ascent), you are getting to navigate in the orbital frame more efficiently.\n\u003C/p\u003E\n\u003Cp\u003E\nHere, the actual values to use for the navigation are your current orbital-frame velocity, the orbital velocity in the closest point of your parking orbit (or your ascent-end orbital velocity projected into the target plane) and the distance from the desired orbital plane. And the goal is to get both the offset from the plane and the normal to the plane velocity component to zero slightly before your in-plane velocity reaches the final value (if you got the initial values close enough, it shouldn\u0027t differ too much from just an inclined launch without full orbit matching).\n\u003C/p\u003E\n\u003Cp\u003E\nYou should end in about the correct plane and then all you have to do is navigate the rendezvous in the plane.\n\u003C/p\u003E\n"},{"CreatedByName":"TheCardinal","CreatedById":22874,"CreatedDateTime":"2016-08-07T08:58:03Z","Content":"\n\u003Cp\u003E\nFor those who are using kOS and Universal Storage, here is a cfg file to add a kOS processor for Universal Storage.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/14923883/US_1R2D2_Wedge_kOS_Processor.cfg\u0022 rel=\u0022external nofollow\u0022\u003EHere is the cfg file\u003C/a\u003E. Add it to the US_1R110_Wedge_KISContainer directory. Or if preferred, place it in a seperate directory but then you\u0027ll need to copy KASContainer.dds and model.mu from the US_1R110_Wedge_KISContainer directory to the new directory.\n\u003C/p\u003E\n"},{"CreatedByName":"WeirdCulture","CreatedById":76591,"CreatedDateTime":"2016-08-07T21:25:40Z","Content":"\n\u003Cp\u003E\nHi all,\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nwhen has TIME:CLOCK changed from HH:\u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E:SS to HH:\u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E:SS,sssssssssssss?\u00A0is there any possibility to round this to HH:\u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E:SS,ss ? (or just HH:\u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E:SS) ?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve used one of my favorite mission screen monitor and I see that the time is complete messy \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"dafidge9898","CreatedById":147547,"CreatedDateTime":"2016-08-09T04:54:29Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/8825-alchemist/\u0026amp;do=hovercard\u0022 data-mentionid=\u00228825\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/8825-alchemist/\u0022 rel=\u0022\u0022\u003E@Alchemist\u003C/a\u003E\u00A0Thank you so much! This will definitely assist. Just one thing:\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222707320\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470513864\u0022 data-ipsquote-userid=\u00228825\u0022 data-ipsquote-username=\u0022Alchemist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 8/6/2016 at 1:04 PM, Alchemist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFirst, note the conditions your launch profile puts you at the end of your main burn (it\u0027ll likely be suborbital with the circularization done later\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy main burn is basically the entire burn to a circular 250x250 km orbit. I currently have a script that has reliably gotten me in a 250.5 x 250.3 km orbit with one almost continuous 14 minute\u00A0burn (the only break in burning being the 2 seconds for stage separation). Does this make a big difference? Or are you referring to just the first stage burn?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-09T04:55:18Z\u0022 title=\u002208/09/2016 04:55  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 9, 2016\u003C/time\u003E by dafidge9898\u003C/strong\u003E\n\u003Cbr\u003ETypo\n\u003C/span\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2016-08-09T08:17:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222710391\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470718469\u0022 data-ipsquote-userid=\u0022147547\u0022 data-ipsquote-username=\u0022dafidge9898\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, dafidge9898 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI currently have a script that has reliably gotten me in a 250.5 x 250.3 km orbit with one almost continuous 14 minute\u00A0burn\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe choice of such reference point is actually rather arbitrary. You may even go up to the point when you start circularization subroutine. Or take something about 70-80% through the launch. And 14 minutes (it\u0027s \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E scale, right?) sounds like a top stage with quite low \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E (for comparison, launch of Soyuz is about 9 minutes until spacecraft separation in slightly unstable orbit; then couple small correction burns to raise it). Depending on how much delta v that gives, you may want to take the reference point at this separation or somewhere in the middle of this top stage burn.\n\u003C/p\u003E\n\u003Cp\u003E\nThe thing is - this point actually matters mostly for launch window calculation - like at which point you are aiming to reach the actual plane of the orbit, leaving the rest for the in-plane acceleration. With the low-\u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E top stage, if it gives you significant portion of delta v, It may be wise to take the reference point for the initial launch profile calculation somewhere halfway through it, while on the actual launch switch from just azimuthal launch to smarter plane alignment (if initial estimate is good enough, this shouldn\u0027t change the yaw much) at the start of this top stage, aiming for fully matching the planes about at the start of the final circularization.\n\u003C/p\u003E\n"},{"CreatedByName":"meyerweb","CreatedById":135212,"CreatedDateTime":"2016-08-09T17:24:45Z","Content":"\n\u003Cp\u003E\nI\u2019ve poked around the documentation, but haven\u2019t seen this addressed: what are the conditions under which KSP will refuse to add a maneuver node?\u00A0 It seems to be \u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E\u003C/abbr\u003E-bound, but I\u2019m wondering if there\u2019s more to it than that.\n\u003C/p\u003E\n\u003Cp\u003E\nFor context: I\u2019ve been experimenting with a circularization script that uses the eccentricity value as an engine throttle, and I\u2019ve gotten it to the point that I can get within 5 meters\u2019 difference between \u003Cabbr title=\u0022Apoapsis\u0022\u003E\u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E\u003C/abbr\u003E and \u003Cabbr title=\u0022Periapsis\u0022\u003E\u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E\u003C/abbr\u003E on the first burn (at ~79km altitude).\u00A0 If I run the script again on the same craft, I can get within a 1m \u003Cabbr title=\u0022Apoapsis\u0022\u003E\u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E\u003C/abbr\u003E/\u003Cabbr title=\u0022Periapsis\u0022\u003E\u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E\u003C/abbr\u003E difference (same alt.).\u00A0 So I ran it a third time on the craft, just to see if I could get the \u003Cabbr title=\u0022Apoapsis\u0022\u003E\u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E\u003C/abbr\u003E/\u003Cabbr title=\u0022Periapsis\u0022\u003E\u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E\u003C/abbr\u003E difference down to a few centimeters, because why not be ridiculous about it?\u00A0 The program worked as expected, except no node was added.\u00A0 I checked, and the calculated \u003Cabbr title=\u0022Delta-V\u0022\u003E\u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E\u003C/abbr\u003E for the node was 0.002m/s.\n\u003C/p\u003E\n\u003Cp\u003E\nSo I can see why KSP would just refuse to participate in such insanity, but I was wondering if anyone here knew its outer limits for such things.\u00A0 And also if there\u2019s a way to get KSP to recognize such a problem, or show a returned error code, or some such, if KSP does in fact return an error.\u00A0 Basically, a good way to tell in-script if an attempt to create a maneuver node will fail/has failed, so the script can exit gracefully or go to fallback code or something.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-09T17:25:01Z\u0022 title=\u002208/09/2016 05:25  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 9, 2016\u003C/time\u003E by meyerweb\u003C/strong\u003E\n\u003Cbr\u003ETypo fix\n\u003C/span\u003E\n"},{"CreatedByName":"Johnny#5","CreatedById":167590,"CreatedDateTime":"2016-08-10T07:00:01Z","Content":"\n\u003Cp\u003E\nI\u0027m sorry if this is the wrong place to ask this question or if a similar question has been asked before.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m currently trying to create a CFCS for my aircraft that will eventually include regulation control surface movement in relation to aerodynamic factors and pilot input. At the moment though, I\u0027m just trying to write a simple stability script until I have a more thorough understanding of k-OS.\n\u003C/p\u003E\n\u003Cp\u003E\nFrom what I\u0027ve observed, stock \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E relies on raw input to orient the craft, which for my already unstable planes results in quite a bit of wobble and eventually pitching down.\u00A0 The purpose of this script is to instead use control surface trim to adjust the craft orientation so that the plane will continue in the direction designated by the user, with no deviation from that path.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve already looked through the documentation on the wiki, but I\u0027m still stuck as to where I should even begin, which is why I thought it would be a good idea to ask here from people with more experience.\n\u003C/p\u003E\n\u003Cp\u003E\nAny help would be greatly appreciated.\n\u003C/p\u003E\n"},{"CreatedByName":"meyerweb","CreatedById":135212,"CreatedDateTime":"2016-08-10T12:49:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222711600\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470812401\u0022 data-ipsquote-userid=\u0022167590\u0022 data-ipsquote-username=\u0022Johnny#5\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Johnny#5 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ve already looked through the documentation on the wiki, but I\u0027m still stuck as to where I should even begin, which is why I thought it would be a good idea to ask here from people with more experience.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think the first question is: have you read about or tried to implement a PID loop?\u00A0 What you\u2019re trying to do will very likely rely on a PID loop or two.\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2016-08-10T18:36:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222711600\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470812401\u0022 data-ipsquote-userid=\u0022167590\u0022 data-ipsquote-username=\u0022Johnny#5\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, Johnny#5 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ve already looked through the documentation on the wiki, but I\u0027m still stuck as to where I should even begin, which is why I thought it would be a good idea to ask here from people with more experience.\n\u003C/p\u003E\n\u003Cp\u003E\nAny help would be greatly appreciated.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nProbably most commonly used ones are hovering scripts and powered landing scripts that rally on PID library.\u003Cbr\u003E\nThose are also good basic scripts, because stuff learned trough making those can also be used for more advancing scripts.\n\u003C/p\u003E\n\u003Cp\u003E\nThere is lot of examples for those available. I have also created my own version, to start learning kOS.\u003Cbr\u003E\nTried to comment everything properly, so others can catch up more quiclkly. You can find example for download along with craft files, link is in signature. Although, crafts were made for KSP 1.1.2. but scripts and most of crafts should properly work in KSP 1.1.3. With slight dislaimer, I no longer recall if I updated scripts to use build in PID library or older one. Even if older variant with extra PID library is in archive, it wokrs and it is still good example to start with.\n\u003C/p\u003E\n"},{"CreatedByName":"Johnny#5","CreatedById":167590,"CreatedDateTime":"2016-08-11T17:42:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222711810\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470833376\u0022 data-ipsquote-userid=\u0022135212\u0022 data-ipsquote-username=\u0022meyerweb\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2016/8/10 at 9:49 PM, meyerweb said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI think the fist question is: have you read about or tried to implement a PID loop?\u00A0 What you\u2019re trying to do will very likely rely on a PID loop or two.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI was having trouble deciding between a simple if/else or a PID loop, but I\u0027ll be sure to use a PID. Thanks for your help.\n\u003C/p\u003E\n\u003Cp\u003E\nOne of the main things I\u0027m unsure of is how to set the trim to stabilize the plane according to rotation. I probably should have made that bit a little clearer in my original post.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222712264\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470854205\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n23 hours ago, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nProbably most commonly used ones are hovering scripts and powered landing scripts that rally on PID library.\u003Cbr\u003E\nThose are also good basic scripts, because stuff learned trough making those can also be used for more advancing scripts.\n\u003C/p\u003E\n\u003Cp\u003E\nThere is lot of examples for those available. I have also created my own version, to start learning kOS.\u003Cbr\u003E\nTried to comment everything properly, so others can catch up more quiclkly. You can find example for download along with craft files, link is in signature. Although, crafts were made for KSP 1.1.2. but scripts and most of crafts should properly work in KSP 1.1.3. With slight dislaimer, I no longer recall if I updated scripts to use build in PID library or older one. Even if older variant with extra PID library is in archive, it wokrs and it is still good example to start with.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks for this. I\u0027ll be sure to give the scripts a look to get a better feel for what I\u0027m doing.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m more than happy to work with the older PID loop. It might help me get a better understanding on how to implement PID loops in general.\n\u003C/p\u003E\n\u003Cp\u003E\nThank you both so much for your help.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-11T17:44:10Z\u0022 title=\u002208/11/2016 05:44  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 11, 2016\u003C/time\u003E by Johnny#5\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"EpicSpaceTroll139","CreatedById":162839,"CreatedDateTime":"2016-08-13T15:45:01Z","Content":"\n\u003Cp\u003E\nIs there by any chance an up to date page which lists all the commands that KOS recognizes? I\u0027ve looked all over and all I can find is this out of date KOS Wiki page. \u003Ca href=\u0022http://kos.wikia.com/wiki/KerboScript\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/KerboScript\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis mod is awesome btw \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-13T15:47:43Z\u0022 title=\u002208/13/2016 03:47  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 13, 2016\u003C/time\u003E by EpicSpaceTroll139\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2016-08-13T15:57:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222715596\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471103101\u0022 data-ipsquote-userid=\u0022162839\u0022 data-ipsquote-username=\u0022EpicSpaceTroll139\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 minutes ago, EpicSpaceTroll139 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIs there by any chance an up to date page which lists all the commands that KOS recognizes? I\u0027ve looked all over and all I can find is this out of date KOS Wiki page. \u003Ca href=\u0022http://kos.wikia.com/wiki/KerboScript\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/KerboScript\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis mod is awesome btw \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere\u0027s full documentation (not just a list of commands) here:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/index.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWe try to keep it up to date as much as possible.\u00A0 Right now it doesn\u0027t contain the new things in the pre-release candidate but that\u0027s deliberate.\u00A0 It won\u0027t contain those until the candidate becomes a full release.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"EpicSpaceTroll139","CreatedById":162839,"CreatedDateTime":"2016-08-13T16:24:47Z","Content":"\n\u003Cp\u003E\nThanks a million! I\u0027m planning to create a code for otherwise stock helicopter cyclic controls so this will be a must-have\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2016-08-15T03:20:32Z","Content":"\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003EV1.0.0 release is now official!\u00A0 \u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n(It is no longer pre-release.)\n\u003C/p\u003E\n\u003Cp\u003E\nAvailable on spacedock and github and curse in the usual places.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll see if I can get @erendrake to change this thread\u0027s head post.\n\u003C/p\u003E\n\u003Cdiv\u003E\n\u003Cdiv\u003E\n\u003Ch3\u003E\nAbout the name:\n\u003C/h3\u003E\n\u003Cp\u003E\nkOS has been around long enough that we figured it was long overdue\u003Cbr\u003E\nfor us to stop calling it 0.something. Lots of people are using it,\u003Cbr\u003E\nand we\u0027re worried about backward compatibility enough that we\u0027re not\u003Cbr\u003E\nreally treating it like a Beta anymore. This version contains mostly\u003Cbr\u003E\na few things that we knew might break backward compatibility so we\u0027d\u003Cbr\u003E\nbeen putting them off for a long time. A jump to 1.0 seems a good time\u003Cbr\u003E\nto add those changes.\n\u003C/p\u003E\n\u003Cp\u003E\nOf course, it has lots of other changes for whatever else was being\u003Cbr\u003E\nworked on since the last release.\n\u003C/p\u003E\n\u003Ch3\u003E\nBREAKING CHANGES\n\u003C/h3\u003E\n\u003Cul\u003E\u003Cli\u003E\nAs always, if you use the compiler feature to make KSM files, you should recompile the KSM files when using a new release of kOS or results will be unpredictable.\n\u003C/li\u003E\n\u003Cli\u003E\nNew Subdirectories ability has deprecated several filename commands such as \u003Ccode\u003Edelete\u003C/code\u003E, \u003Ccode\u003Ecopy\u003C/code\u003E, and \u003Ccode\u003Erename\u003C/code\u003E. They will still work, but will complain with a message every time you use them, as we may be removing them eventually. The new commands \u003Ccode\u003Edeletepath\u003C/code\u003E, \u003Ccode\u003Ecopypath\u003C/code\u003E, and \u003Ccode\u003Emovepath\u003C/code\u003E described below are meant to replace them.\n\u003C/li\u003E\n\u003Cli\u003E\nWhen using a RemoteTech antenna that requires directional aiming, in the past you could aim it at mission control with \u003Ccode\u003ESETFIELD(\u0022target\u0022, \u0022mission-control\u0022)\u003C/code\u003E and now you have to say \u003Ccode\u003ESETFIELD(\u0022target\u0022, \u0022Mission Control\u0022)\u003C/code\u003E instead, due to changes in RT\u0027s naming schemes.\n\u003C/li\u003E\n\u003Cli\u003E\nPreviously the Y and Z axes of SUN:VELOCITY:ORBIT were swapped. (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1764\u0022 rel=\u0022external nofollow\u0022\u003E#1764\u003C/a\u003E) This has been fixed so it is now the same as for any other body, however scripts might exist that had previously been swapping them back to compensate for this, and if there were they would now break since that swapping is no longer needed.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Ch3\u003E\nNEW FEATURES\n\u003C/h3\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Cstrong\u003ESubdirectories:\u003C/strong\u003E (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fcommands%252ffiles.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/commands/files.html\u003C/a\u003E) You are now able to store subdirectories (\u0022folders\u0022) in your volumes, both in the archive and in local volumes. To accomodate the new feature new versions of the file manipulation commands had to be made (please go over the documentation in the link given above). In the Archive, which is really your \u003Ccode\u003EShips/Script/\u003C/code\u003E directory on your computer, these subdirectories are stored as actual directories in your computer filesystem. (For example, the file \u003Ccode\u003E0:/dir1/dir2/file.ks\u003C/code\u003E would be stored at \u003Ccode\u003EKerbal Space Program/Shipts/Script/dir1/dir2.file.ks\u003C/code\u003E on your real computer.) In local volumes, they are stored in the persistence.sfs savegame file like usual. (Pull Request discussion record: \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1567\u0022 rel=\u0022external nofollow\u0022\u003E#1567\u003C/a\u003E)\n\u003Cul\u003E\u003Cli\u003E\nBoot subdirectory: (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fgeneral%252fvolumes.html%2523special-handling-of-files-in-the-boot-directory\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/general/volumes.html#special-handling-of-files-in-the-boot-directory\u003C/a\u003E) To go with Subdirectories, now you make a subdirectory in your archive called \u003Ccode\u003Eboot/\u003C/code\u003E, and put all the candidate boot files there. When selecting a boot file in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E or \u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E, the selections are taken from there and need not contain the \u0022boot_\u0022 prefix to the filename anymore. Old boot files will be grandfathered in that are named the old way, however.\n\u003C/li\u003E\n\u003Cli\u003E\nCORE:BOOTFILENAME is now a full path. i.e. \u003Ccode\u003Eboot/myfile.ks\u003C/code\u003E.\n\u003C/li\u003E\n\u003Cli\u003E\nPATH structure now allows you to get information about the new full subdirectories system from your scripts. (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fstructures%252fvolumes_and_files%252fpath.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/volumes_and_files/path.html\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nNew RUNPATH command now allows any arbitrary string expression to be used as the name of the file to be run. i.e. \u003Ccode\u003Eset basename to \u0022prog\u0022. set num to 1. runpath(basename\u002Bnum, arg1). // same as run prog1(arg1)\u003C/code\u003E. As part of the support for this, programs with a large number of RUN commands (or RUNPATH commands) should now take up a bit less of a memory footprint than they used to in their compiled form (and thus in KSM files too). (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fcommands%252ffiles.html%2523runpath-and-runoncepath\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/commands/files.html#runpath-and-runoncepath\u003C/a\u003E)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ECommunication between scripts\u003C/strong\u003E on different CPUs of the same vessel or between different vessels. (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fcommands%252fcommunication.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/commands/communication.html\u003C/a\u003E)\n\u003Cul\u003E\u003Cli\u003E\nA new structure, the \u003Ccode\u003EMessage\u003C/code\u003E, contains some arbitrary piece of data you choose (a number, a string, a list collection, etc), and some header information kOS will add to it that describes where it came from, when it was sent, and so on. What you choose to do with these arbitrary chunks of data is up to you. kOS only lets you send them. You design your own protocol for what the data means.\n\u003C/li\u003E\n\u003Cli\u003E\nIf RemoteTech is installed, a connection is needed to send a message to another vessel (but not to a CPU on the same vessel). And, the message won\u0027t actually show up in the other vessel\u0027s queue until the required lightspeed delay.\n\u003C/li\u003E\n\u003Cli\u003E\nTo handle KSP\u0027s inability to have different vessels far away from each other both fully loaded and active, you do have to switch scenes back and forth between distant vessels if you want them to have a conversation back and forth. Messages that were meant to arrive on a vessel while it wasn\u0027t within active loading range will wait in the recever\u0027s vessel queue until you switch to it, so you don\u0027t have to hurry and switch \u0022in time\u0022 to get the message.\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EAdded anonymous functions :\u003C/strong\u003E (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252flanguage%252fanonymous.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/language/anonymous.html\u003C/a\u003E) By placing arbitrary braces containing the body of a function anywhere within the script that an expression is expected, the compiler builds the function code right there and then returns a delegate of it as the value of the expression.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ENew 3rd-party addon framework\u003C/strong\u003E (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/tree/develop/src/kOS/AddOns/Addon%20Readme.md\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/tree/develop/src/kOS/AddOns/Addon%20Readme.md\u003C/a\u003E) allows authors of other KSP mods to add hooks into kOS so that kOS scripts can interface with their mods more directly, without kOS developers having to maintain that code themselves in the kOS repository. (Pull Request discussion record: \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1667\u0022 rel=\u0022external nofollow\u0022\u003E#1667\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Eallow scripted vessel launches\u003C/strong\u003E \u003Ccode\u003EKUNIVERSE:GETCRAFT()\u003C/code\u003E, \u003Ccode\u003EKUNIVERSE:LAUNCHCRAFT()\u003C/code\u003E, \u003Ccode\u003EKUNIVERSE:CRAFTLIST()\u003C/code\u003E, and \u003Ccode\u003EKUNIVERSE:LAUNCHCRAFTFROM()\u003C/code\u003E allow you to script the changing of scenes and loading of vessels into those scenes. While this breaks the 4th wall quite a bit (how would an autopilot choose to manufacture an instance of the plane?), it\u0027s meant to help with script testing and scripts that try to repeatedly run the same mission unattended. (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fstructures%252fmisc%252fkuniverse.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/misc/kuniverse.html\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Eeta to \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E change:\u003C/strong\u003E Added SHIP:OBT:NEXTPATCHETA to get the time to the next orbit patch transition (\u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E change). (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fstructures%252forbits%252forbit.html%2523attribute%253aORBIT%253aNEXTPATCHETA\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/orbits/orbit.html#attribute:ORBIT:NEXTPATCHETA\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Eget control-from:\u003C/strong\u003E Added \u003Ccode\u003ESHIP:CONTROLPART\u003C/code\u003E to return the \u003Ccode\u003EPart\u003C/code\u003E of the vessel that is currently set as its \u0022control from here\u0022 part. (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fstructures%252fvessels%252fvessel.html%2523attribute%253aVESSEL%253aCONTROLPART\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/vessels/vessel.html#attribute:VESSEL:CONTROLPART\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Emaneuver nodes as a list:\u003C/strong\u003E( New \u003Ccode\u003EALLNODES\u003C/code\u003E bound variable that returns a list of all the currently planned manuever nodes (the nodes you could iterate through with \u003Ccode\u003ENEXTNODE\u003C/code\u003E, but rendered into one list structure). (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fbindings%2523allnodes\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/bindings#allnodes\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nSeveral new \u003Cstrong\u003Epseudo-action-groups\u003C/strong\u003E (akin to \u0022panels on\u0022, that aren\u0027t action groups as far as stock KSP is concerned, but kOS treats them like action groups) were added. (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fcommands%252fflight%252fsystems%2523kos-pseudo-action-groups\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/commands/flight/systems#kos-pseudo-action-groups\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nAbility to \u003Cstrong\u003Eget/set the navball mode\u003C/strong\u003E (surface, orbital, target) with the \u003Ccode\u003ENAVMODE\u003C/code\u003E bound variable: i.e. \u003Ccode\u003ESET NAVMODE TO \u0022SURFACE\u0022.\u003C/code\u003E.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EUniqueSet structure.\u003C/strong\u003E (\u003Ca href=\u0022https://kerbal.curseforge.com/linkout?remoteUrl=http%253a%252f%252fksp-kos.github.io%252fKOS_DOC%252fstructures%252fcollections%252funiqueset.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/collections/uniqueset.html\u003C/a\u003E) A collection intended for when all you care about is whether a equivalent object exists or doesn\u0027t exist yet in the collection, and everything else (order, etc) doesn\u0027t matter.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Ch3\u003E\nBUG FIXES\n\u003C/h3\u003E\n\u003Cul\u003E\u003Cli\u003E\nIn some cases (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1661\u0022 rel=\u0022external nofollow\u0022\u003E#1661\u003C/a\u003E) the program wouldn\u0027t stop immediately when you execute a \u003Ccode\u003Ekuniverse\u003C/code\u003E command that reloads a save or switches scenes. It would instead finish out the remainder of the IPU instructions in the current physics tick. After the fix, causing a scene change (or reload) automatically stops the program right there since anything it does after that would be moot as the game is about to remove everything it\u0027s talking about from memory.\n\u003C/li\u003E\n\u003Cli\u003E\nIf using \u0022Start on archive\u0022, with Remote Tech, a misleading \u0022power starved\u0022 error was thrown when you reboot a probe that\u0027s out of antenna range. (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1363\u0022 rel=\u0022external nofollow\u0022\u003E#1363\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Ccode\u003Eunchar(\u0022a\u0022)\u003C/code\u003E was apparently broken for a few months and we hadn\u0027t noticed. The root cause was that its implementation had to be edited to comply with the change that enforced the VM to only use kOS \u003Ccode\u003EStructure\u003C/code\u003E types on the stack. The need for that change had been missed. (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1692\u0022 rel=\u0022external nofollow\u0022\u003E#1692\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nPreviously Infernal Robotics allowed you to move servos that weren\u0027t even on your own vessel and you shouldn\u0027t have direct control over. This has been fixed. (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1540\u0022 rel=\u0022external nofollow\u0022\u003E#1540\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nRefactored previous non-working technique for quicksave/quickload to turn it into something that works. (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1372\u0022 rel=\u0022external nofollow\u0022\u003E#1372\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nThere were cases where using CTRL-C to abort a program would cause some old cruft to still be leftover in the VM\u0027s stack. This made the system fail to clear out the names of functions that were no longer loaded in memory, making it act like they were still reachable and call-able. (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1610\u0022 rel=\u0022external nofollow\u0022\u003E#1610\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nSome types of \u003Ccode\u003EResource\u003C/code\u003E didn\u0027t contain the \u003Ccode\u003E:DENSITY\u003C/code\u003E suffix like the documentation claimed they would. (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1623\u0022 rel=\u0022external nofollow\u0022\u003E#1623\u003C/a\u003E)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/div\u003E\n\u003C/div\u003E\n"},{"CreatedByName":"LN400","CreatedById":140595,"CreatedDateTime":"2016-08-16T19:42:23Z","Content":"\n\u003Cp\u003E\nSlooowly getting back into kOS and 1, I have forgotten most, and 2, there are some changes so my old scripts won\u0027t work. That\u0027s not an issue as I plan on fixing that BUT:\n\u003C/p\u003E\n\u003Cp\u003E\nI am attempting to code a very simple throttle control for launch and the first 20-30 km. The idea is to use throttle (locked variable),\u00A0weight (locking the variable to mass * 9.81 which apparently works) and\u00A0current thrust which for the life of me I can\u0027t get. Reading the documentation but with all the changes this is going to take a while so:\n\u003C/p\u003E\n\u003Cp\u003E\nCan someone please give me the snippet of code to gain access to \u003Cstrong\u003Ecurrent thrust \u003C/strong\u003Eto pass on to the variable?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: I came up with this\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Elist engines in eng.\n\nset twr_set to 1.5.\nset g to 9.81.\nset thr to 1.\n\nlock weight to ship:mass*9.81.\nlock thrust to eng[1]:thrust.\nlock \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003Etwr\u003C/abbr\u003E to thrust/weight.\nlock throttle to thr.\n\nuntil altitude \u0026gt; 30000\n{\n\tif \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003Etwr\u003C/abbr\u003E \u0026lt; twr_set and \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003Etwr\u003C/abbr\u003E \u0026lt; 1\n\t{\n\t\tset thr to thr\u002B0.001.\n\t}\n\tif \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003Etwr\u003C/abbr\u003E \u0026gt; twr_set and \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003Etwr\u003C/abbr\u003E \u0026gt; 0\n\t{\n\t\tset thr to thr-0.001.\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe problem here is the hardcoding of using engine 1 (a 2 stage rocket with engine 1 for the lifter stage and engine 0 for the ascending/injection stage). Is there a way to have the code look at whatever is the current engine, in a clever way that doesn\u0027t involve \u003Cstrong\u003Etoo \u003C/strong\u003Emuch extra code as I intend to extend the code and need to keep it somewhat short.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-16T22:19:17Z\u0022 title=\u002208/16/2016 10:19  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 16, 2016\u003C/time\u003E by LN400\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2016-08-17T07:10:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222719315\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471376543\u0022 data-ipsquote-userid=\u0022140595\u0022 data-ipsquote-username=\u0022LN400\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, LN400 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe problem here is the hardcoding of using engine 1 (a 2 stage rocket with engine 1 for the lifter stage and engine 0 for the ascending/injection stage). Is there a way to have the code look at whatever is the current engine, in a clever way that doesn\u0027t involve \u003Cstrong\u003Etoo \u003C/strong\u003Emuch extra code as I intend to extend the code and need to keep it somewhat short.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou could iterate over all the engines and look for which of them are currently ignited, with this suffix:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structures/vessels/engine.html?#attribute:ENGINE:IGNITION\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structures/vessels/engine.html?#attribute:ENGINE:IGNITION\u003C/a\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Elist engines in all_engines.\nlocal active_engines is LIST().\nfor e in all_engines {\n  if e:ignition {\n    active_engines.add(e).\n  }\n}\n// Now active_engines is a list consisting of only those engines that are currently lit.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"MAFman","CreatedById":101780,"CreatedDateTime":"2016-08-22T00:06:32Z","Content":"\n\u003Cp\u003E\nSorry if I\u0027m necro-posting, but I\u0027m working on a rover navigation / SLAM library. Does my code make sense?\n\u003C/p\u003E\n\u003Cp\u003E\nBTW, lib_circle_nav is from KSLib.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022lit\u0022\u003E@lazyglobal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E off\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022lib_circle_nav\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// lib_a_star.ks finds the shortest path from a start node to a target node.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Due to the nature of the algorithm, it will also avoid hills and cliffs.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Define what a node is first.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E worldNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tparameter gridX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E gridY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Example: worldNode(5, 10) gives me a point 5 grid marks to the right of the ship, and 10 marks forward.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal d is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E planet\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eradius\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal c is constant\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epi \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E d\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal offset is \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E50\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E360\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E c\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// The nodes are 50 meters apart.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal nodeX is offset \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E gridX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal nodeY is offset \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E gridY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal there is circle_destination\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecircle_destination\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eoffset\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E90\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E body\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eradius\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E offset\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E body\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eradius\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nodeX\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Y\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nodeY\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022alt\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E there\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eterrainheight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022gCost\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E gCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022hCost\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E hCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022fCost\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EgCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E hCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E())).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Then create the grid.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E grid\n\tlocal _height is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal _width is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E19.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal spacing is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E50.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal startPoint is ship\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Egeoposition\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Center the grid on the ship\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal _grid is list\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E().\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elocal i is \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_height \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).}{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Euntil i \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_height \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)}\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elocal j is \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_width \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).}{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Euntil j \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_width \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)}\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t_grid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EworldNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ei\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E j\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _grid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E endNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tparameter grid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E n in grid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Pick the node on the far side of the grid with the lowest line-of-sight slope to the current node.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E gCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tparameter start is worldNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E thisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// 3D Pythagoras: Distance^2 = deltaX^2 \u002B deltaY^2 \u002B deltaZ^2.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sqrt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E start\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E start\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022alt\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E start\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022alt\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E hCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tparameter thisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E end\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// 3D Pythagoras: Distance^2 = deltaX^2 \u002B deltaY^2 \u002B deltaZ^2.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sqrt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E end\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E end\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022X\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\t\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022alt\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E end\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022alt\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E])^\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E fCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tparameter start is worldNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E thisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E endNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E gCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E hCost\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthisNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E end\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// The actual pathfinding algorithm\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E pathfinding\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tparameter endNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tgrid is localGrid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\tstartNode is worldNode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\tlocal openList is list\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E().\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal closedList is list\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E().\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tlocal path is list\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E().\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E path\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efunction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E driveTo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tparameter point\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}