{"TopicId":152782,"ForumId":34,"TopicTitle":"[1.8.x] KSPWheel - Physics Based Alternate Wheel Collider [API Only]","CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-11-30T18:26:55Z","PageNum":9,"Articles":[{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-22T21:49:32Z","Content":"\n\u003Cp\u003E\nUpdated release is available:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/shadowmage45/KSPWheel/releases/tag/0.9.2.9\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/shadowmage45/KSPWheel/releases/tag/0.9.2.9\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAdds dust effects, updated repulsor code, and a special module for ALG-style parts.\u00A0 Should also be available on \u003Cabbr title=\u0022Comprehensive Kerbal Archive Network (a KSP mod manager)\u0022\u003ECKAN\u003C/abbr\u003E here in a few hours/day or so.\u00A0 See link for full change-log and downloads.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-22T21:49:57Z\u0022 title=\u002201/22/2017 09:49  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 22, 2017\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Climberfx","CreatedById":57126,"CreatedDateTime":"2017-01-22T23:30:51Z","Content":"\n\u003Cp\u003E\nHey Shadowmage. Loving your progress.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, i have a question, is this damage control for mesh already implemented?\n\u003C/p\u003E\n\u003Cp\u003E\nAm i doing it right?\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0MODULE\u003Cbr\u003E\n\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0name = KSPWheelDamage\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0impactTolerance = 1\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0wheelName = pneu_interno pneu_externo \u00A0// \u0026lt;-- i have two mesh parts for wheels, this two are the good ones.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0bustedWheelName = pneu_interno_crash pneu_externo_crash \u00A0// \u0026lt;-- and this two are the crash models.\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\np.s: impact tolerance is 100, but i\u0027m trying to crash it...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-22T23:34:41Z\u0022 title=\u002201/22/2017 11:34  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 22, 2017\u003C/time\u003E by Climberfx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2017-01-23T00:03:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222931098\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485127851\u0022 data-ipsquote-userid=\u002257126\u0022 data-ipsquote-username=\u0022Climberfx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n28 minutes ago, Climberfx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHey Shadowmage. Loving your progress.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, i have a question, is this damage control for mesh already implemented?\n\u003C/p\u003E\n\u003Cp\u003E\nAm i doing it right?\n\u003C/p\u003E\n\u003Cp\u003E\np.s: impact tolerance is 100, but i\u0027m trying to crash it...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHi if you make the second mesh a child of the first mesh\u00A0 so for example tire/tyre/pneu,\u00A0 would be a child of wheel,\u00A0 then you only need to reference the parent, I don\u0027t think multiple names in that position will work,\u00A0\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-23T00:10:20Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222931098\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485127851\u0022 data-ipsquote-userid=\u002257126\u0022 data-ipsquote-username=\u0022Climberfx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n35 minutes ago, Climberfx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHey Shadowmage. Loving your progress.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, i have a question, is this damage control for mesh already implemented?\n\u003C/p\u003E\n\u003Cp\u003E\nAm i doing it right?\n\u003C/p\u003E\n\u003Cp\u003E\np.s: impact tolerance is 100, but i\u0027m trying to crash it...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nThe \u0027impact tolerance\u0027 handling has been removed;\u00A0 instead adjust the \u0027maxSpeed\u0027 and \u0027maxLoad\u0027 in the KSPWheelBase module.\u00A0 \u0027maxLoad\u0027 is used both for duration loading and absorbing impacts; setting it to a very low value should see the wheels break from low loads and impacts.\n\u003C/p\u003E\n\u003Cp\u003E\nMultiple meshes are not currently supported (on the TODO list), but as \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/50907-spannermonkeysmce/\u0026amp;do=hovercard\u0022 data-mentionid=\u002250907\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/50907-spannermonkeysmce/\u0022 rel=\u0022\u0022\u003E@SpannerMonkey(smce)\u003C/a\u003E says, you can make both meshes a child of a single empty transform/object, and put that empty as the \u0027bustedWheelName\u0027 in the config.\n\u003C/p\u003E\n"},{"CreatedByName":"Climberfx","CreatedById":57126,"CreatedDateTime":"2017-01-23T04:21:33Z","Content":"\n\u003Cp\u003E\nGreat, thanks both! Loving the smoke fx....\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-23T15:55:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222931668\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485186738\u0022 data-ipsquote-userid=\u002299776\u0022 data-ipsquote-username=\u0022hippomormor\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, hippomormor said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIs \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E support on the roadmap? Currently \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E is not working when I use ALG parts. It seems to simply not function at all.\n\u003C/p\u003E\n\u003Cp\u003E\nBtw nice work!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n...\u00A0 \u003Ca href=\u0022https://github.com/shadowmage45/KSPWheel/issues/6\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/shadowmage45/KSPWheel/issues/6\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFeel free to add logs/etc to that issue.\u00A0 Without more information I cannot fix the problem.\n\u003C/p\u003E\n\u003Cp\u003E\n(I do not use \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E, and will not be installing it; so logs and more information is absolutely necessary if you want it fixed)\n\u003C/p\u003E\n\u003Cp\u003E\nIn the end though, it will likely come down to someone who actually uses \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E will need to submit the fixes.\n\u003C/p\u003E\n"},{"CreatedByName":"Haifi","CreatedById":108817,"CreatedDateTime":"2017-01-23T18:43:21Z","Content":"\n\u003Cp\u003E\nHi Shadowmage\n\u003C/p\u003E\n\u003Cp\u003E\nSorry, I already posted this on KF.\n\u003C/p\u003E\n\u003Cp\u003E\nThe track steering lock seems not to be working. There\u0027s still force applied to the tracks when turning, with motor- and track steering lock active.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-23T18:57:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222931854\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485197001\u0022 data-ipsquote-userid=\u0022108817\u0022 data-ipsquote-username=\u0022Haifi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 minutes ago, Haifi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHi Shadowmage\n\u003C/p\u003E\n\u003Cp\u003E\nSorry, I already posted this on KF.\n\u003C/p\u003E\n\u003Cp\u003E\nThe track steering lock seems not to be working. There\u0027s still force applied to the tracks when turning, with motor- and track steering lock active.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cs\u003EThis should have been fixed in the release yesterday (I added code to the motor module to disable all input for tank steering if either \u0027lock motor\u0027 or \u0027lock steering\u0027 was enabled).\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003EHave you updated to the most recent release, and is the problem still occurring?\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nEdit:\u00A0 Apparently I never recompiled the .dll after adding that fix;\u00A0 it was a last-minute fix that I did after seeing your post in the KF thread, and apparently it got missed in yesterdays update.\u00A0 Should be fixed in dev versions (\u00A0\u003Ca href=\u0022https://github.com/shadowmage45/KSPWheel/blob/UI-Cleanup/GameData/KSPWheel/Plugin/KSPWheel.dll\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/shadowmage45/KSPWheel/blob/UI-Cleanup/GameData/KSPWheel/Plugin/KSPWheel.dll\u003C/a\u003E ), and will be available with the next release.\u00A0 You can grab the .dll from that link, replace the one in your GameData/KSPWheel/plugin directory, and should be good to go.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-23T19:01:29Z\u0022 title=\u002201/23/2017 07:01  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 23, 2017\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Haifi","CreatedById":108817,"CreatedDateTime":"2017-01-23T19:24:02Z","Content":"\n\u003Cp\u003E\nHad KF updated yesterday, just to be sure I just downloaded and installed the KSPWheel plugin again. With motor lock and track steering lock ticked, the tracks have still\u00A0force applied on turning.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBtw. nice work on the DustFX really nice to have it back.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-23T19:28:22Z\u0022 title=\u002201/23/2017 07:28  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 23, 2017\u003C/time\u003E by Haifi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Akira_R","CreatedById":117470,"CreatedDateTime":"2017-01-23T20:38:06Z","Content":"\n\u003Cp\u003E\nPraises be to you \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/138730-shadowmage/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022138730\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/138730-shadowmage/\u0022 rel=\u0022\u0022\u003E@Shadowmage\u003C/a\u003E!!\n\u003C/p\u003E\n\u003Cp\u003E\nThank you so so so soooo much for supporting ALG, it\u0027s one of those mods that really changes the game when designing planes. Now hopefully we can get this \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E situation sorted out.\n\u003C/p\u003E\n\u003Cp\u003E\nAgain thank you!!\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: woops just realized this is the KSPWheel thread not the new KF thread.... doh!!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-23T20:39:03Z\u0022 title=\u002201/23/2017 08:39  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 23, 2017\u003C/time\u003E by Akira_R\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Haifi","CreatedById":108817,"CreatedDateTime":"2017-01-24T17:19:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222931879\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485197858\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 hours ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nApparently I never recompiled the .dll after adding that fix;\u00A0 it was a last-minute fix that I did after seeing your post in the KF thread, and apparently it got missed in yesterdays update.\u00A0 Should be fixed in dev versions (\u00A0\u003Ca href=\u0022https://github.com/shadowmage45/KSPWheel/blob/UI-Cleanup/GameData/KSPWheel/Plugin/KSPWheel.dll\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/shadowmage45/KSPWheel/blob/UI-Cleanup/GameData/KSPWheel/Plugin/KSPWheel.dll\u003C/a\u003E ), and will be available with the next release.\u00A0 You can grab the .dll from that link, replace the one in your GameData/KSPWheel/plugin directory, and should be good to go.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThx for the .dll, works like a charm now\u00A0\u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-25T17:32:14Z","Content":"\n\u003Cp\u003E\nSpent the last couple of days working on cleaning up the suspension auto-tuning functionality.\u00A0 The current versions are using a basic form of PI controller, however the integral term introduces error in the suspension between symmetry parts depending upon how the craft is used/driven/manipulated -- driving the suspension into over-compression for a duration would result in the integral rising to bring up the suspension force; however when normal operation resumed this integral was still present, resulting in the previously over-compressed wheels having a stiffer spring than the rest.\n\u003C/p\u003E\n\u003Cp\u003E\nHave reworked it into a more basic form of non-linear spring based on compression, and added a reduction term to bring the integral back to zero slowly after over-compression has subsided.\n\u003C/p\u003E\n\u003Cp\u003E\nThe largest remaining problem that I haven\u0027t been able to clean up is that adding more wheels to a craft will reduce the load -seen- by each wheel, but wont reduce the spring calculated by the auto-tuning system.\u00A0 I\u0027m really not sure if there is a simple way to solve this; the proper solution would involve analyzing the entire vessel, figuring out the load portion for each wheel based on vessel-\u0026gt;ground orientation and what wheels would be in contact at a point in time, and feeding that into the spring auto-calc.\u00A0 (This problem exists in the current implementation as well, as both implementations base the raw spring value from total vessel mass)\n\u003C/p\u003E\n\u003Cp\u003E\nThe other problem that I\u0027m trying to solve is finding some way to allow for user-set ride-height and to accurately use that value for spring calculations.\u00A0 Does not appear to be possible without the above problem being solved first -- I need to know the exact load that the wheel would be subject to in order to set the spring properly for a desired ride-height; without knowing the exact load/sprung-mass of the wheel it is impossible to calculate a spring for a desired ride height.\u00A0 This is where the current \u0027Spring Rating\u0027 gui-setting is used; it adjusts the \u0027vessel mass\u0027 value that is fed into the current system, which does adjust the output ride-height, however it is not linked in any proportional fashion (increasing the spring-rating will increase ride height, but in a non-linear manner that depends on the number of wheel-colliders present on the craft that are currently supporting the load and how much of the craft load they are supporting).\n\u003C/p\u003E\n\u003Cp\u003E\nI investigated using a PID controller for tuning of spring force, but that turned out to merely be a more error prone version of what I already had implemented.\u00A0 Each wheel would arrive at a spring value sufficient to keep the wheel at the specified ride-height; however depending on how the craft was driven different wheels would end up with vastly varying spring values (example, the front left and rear-right wheels would end up supporting ~90% of the vehicle mass, and the front-right and rear-left would only share the remaining 10%; resulting in different handling characteristics if the craft were steered left vs. right).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nHave not forgotten about the motor rework either.\u00A0 I\u0027m still working through figuring out the math needed to derive motor power from a config specified torque and efficiency value;\u00A0 I can get the math to work, but only for specific power factors / no-load-power consumption values.\u00A0 If I can find a power factor that I\u0027m okay with as a default for all motors, I can finish writing up the rest of the power calculation code (I would like to find how to derive the efficiency even with different power factors, but unsure how long it will take me to figure the equations out).\u00A0 The simplest would be to set the power factor to 0 (100% of power input goes towards \u0027work\u0027), which gives a linear efficiency plot (0% at stall, ~100% of maximum efficiency at max-unloaded-rpm).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHave also done a bit of work/investigation/conversing regarding the \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E incompatibilities.\u00A0 It looks like the cause is the bump-stop colliders that are added to the wheels at run-time;\u00A0 from what I understand \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E does not handle disconnected colliders very well, and it is these that are causing it to fail (I believe \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E has special-case coding to work around this problem with the stock wheel modules/parts).\n\u003C/p\u003E\n\u003Cp\u003E\nNot quite sure how to solve it; waiting to hear back from Ferram as to if there is a way to inform \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E to ignore specific meshes or colliders.\u00A0 Alternatively... well.. I really don\u0027t have an alternative; the bump-stop colliders are necessary for proper functioning of the wheels (perhaps not exactly as I have it now, but some sort of collider is necessary; even the stock wheel use \u0027collisionEnhancer\u0027 colliders for this purpose).\n\u003C/p\u003E\n"},{"CreatedByName":"Akira_R","CreatedById":117470,"CreatedDateTime":"2017-01-25T18:32:42Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/138730-shadowmage/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022138730\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/138730-shadowmage/\u0022 rel=\u0022\u0022\u003E@Shadowmage\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nInstead of trying to write code to automatically figure out how many wheels on a vessel couldn\u0027t you just add something to the right-click menu for the user to specify the number of wheels that they want and then the auton-tuner uses that info?\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI also just thought of a situation where things could really start breaking down, if you have a large cargo rover with a small rover docked inside it will the autotuner apply the same settings to all the wheels present?\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe a system that allows you to assign wheels to specific groups and for each group you can specify if you want the auto-tuner to use the vessel data or have the option to specify both\u00A0mass and how many wheels. Plus\u00A0if you implement a grouping system it could just see how many wheels have been assigned to the group and feed that info to the auto-tuner, this seems to me to be the most robust option for the end user, idk how difficult it will be to impliment though.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-25T19:37:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222934237\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485369162\u0022 data-ipsquote-userid=\u0022117470\u0022 data-ipsquote-username=\u0022Akira_R\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, Akira_R said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/138730-shadowmage/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022138730\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/138730-shadowmage/\u0022 rel=\u0022\u0022\u003E@Shadowmage\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nInstead of trying to write code to automatically figure out how many wheels on a vessel couldn\u0027t you just add something to the right-click menu for the user to specify the number of wheels that they want and then the auton-tuner uses that info?\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI also just thought of a situation where things could really start breaking down, if you have a large cargo rover with a small rover docked inside it will the autotuner apply the same settings to all the wheels present?\n\u003C/p\u003E\n\u003Cp\u003E\nMaybe a system that allows you to assign wheels to specific groups and for each group you can specify if you want the auto-tuner to use the vessel data or have the option to specify both\u00A0mass and how many wheels. Plus\u00A0if you implement a grouping system it could just see how many wheels have been assigned to the group and feed that info to the auto-tuner, this seems to me to be the most robust option for the end user, idk how difficult it will be to impliment though.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFrom your example -- rover docked inside a large craft -- WHEN they are docked together, they are one vessel, so yes, even the wheels on the rover will be set to support the weight of the entire vessel.\u00A0 AS SOON AS they become undocked, the rover becomes its own craft and will only support the weight of the rover.\u00A0 (Note that even trying to calculate based on # of wheels or % share and vessel mass would fail in this case, as both \u0027craft\u0027 are a single vessel; the -only- proper way in such a situation is to have discrete manual setting of the spring value or desired max load without any sort of auto-calculation involved)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhat you suggest is pretty much the original \u0027manual\u0027 system -- You specify the % of craft weight that each wheel should support, and from there the auto-tuner can properly calculate the spring for each wheel based on that % and the total craft mass and the specified ride height.\n\u003C/p\u003E\n\u003Cp\u003E\nThe main problem is that\u003Cem\u003E mandating\u003C/em\u003E any user input is... well... problematic.\u00A0 Too many people don\u0027t want to take the time to do the setup, or don\u0027t understand that it is mandatory, and then claim that the wheels \u0027don\u0027t work!!\u0027, when in reality they merely failed to set them up properly.\u00A0 I\u0027m just fine with it personally (having a technical mind I believe that taking time to do proper configuration is not only logical, but \u003Cem\u003Enecessary\u003C/em\u003E), but the number of complaints and confused posts I had when the manual-spring system was in place lead me to believe that it is an unworkable solution for general public use (and dealing with the complaints/confused posts would cause me to stop modding in short order).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nWhat really irks me about the problem is how unrealistic the expectations are compared to the reality of physics of spring systems.\u00A0 Take for example the suspension on a standard passenger car;\u00A0 it has been tuned for a specific ride quality at a pre-determined (and small) range of loading.\u00A0 Try and put that same suspension system onto a vehicle that weighs 2x as much, or 1/2x as much, and it won\u0027t provide the same ride parameters.\u00A0 Add too much weight and the suspension will bottom out.\u00A0 Remove too much weight and the springs will be \u0027too stiff\u0027 for the new load.\u00A0 If the original design parameters are violated during use (e.g. jumping a passenger car) the results are consistent with the original setup and intended use (said passenger car would bottom out and likely break some of the mechanics).\n\u003C/p\u003E\n\u003Cp\u003E\nNow compare that to KSP.\u00A0 Expectations are that the -exact same wheel- be able to support loads ranging from 5-500t all while giving a consistent ride across the entire range, as well as being usable for a wide range of purposes (sedate driving/roving, racing, stunts/jumps).\u00A0 Absolutely absurd and impossible from a \u0027realism\u0027 standpoint using a single set of linear springs.\u00A0 Why would someone expect the exact same physical wheel to be able to support such wide load ranges, or why would someone expect a single wheel to be tuned both for \u0027sedate passenger car use\u0027 and \u0027aggressive stunt use\u0027 at the same time?\u00A0 (Rhetorical question; the answer has no basis in reality or physics: it is because it is a game and supposed to be \u0027fun\u0027)\n\u003C/p\u003E\n\u003Cp\u003E\nSince scaling support is now a thing, I\u0027m highly considering dropping the auto-tuning bit altogether (I\u0027m really not a fan of it; even if it worked flawlessly it is still very unrealistic).\u00A0 This would see wheels start with a single pre-set suspension spring value, being tuned for a single specific supported mass at their default scale.\u00A0 The only options for adjustment would be \u0027ride height\u0027 (which would only be accurate at the current load rating for the wheel), damper ratio, and scale.\u00A0 Need to support more mass than the wheel is tuned for?\u00A0 Scale it up.\u00A0 Need to support less? Scale it down.\u00A0 Need to do a bit of investigation on how viable this would be, as well as examine some way to warn the user while in the editor that a wheel may need to have its size/scale adjusted (because launching a craft 5 times just to tune the suspension really isn\u0027t fun or rewarding).\n\u003C/p\u003E\n\u003Cp\u003E\n(Rant not directed at anyone specific; merely sharing some of the difficulties that I\u0027m encountering while trying to meet the often conflicting expectations on the UI/UX end of things with the wheels)\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-26T01:46:28Z","Content":"\n\u003Cp\u003E\nPotentially good news on the \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E compatibility front -- I have tracked down the \u003Cstrong\u003E\u003Cem\u003Ecause\u003C/em\u003E\u003C/strong\u003E of the incompatibilities.\u00A0 I have not yet found a \u003Cem\u003Esolution\u003C/em\u003E though.\n\u003C/p\u003E\n\u003Cp\u003E\n(cross-posting from the github-issue: \u003Ca href=\u0022https://github.com/ferram4/Ferram-Aerospace-Research/issues/165\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ferram4/Ferram-Aerospace-Research/issues/165\u003C/a\u003E\u00A0 )\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EAfter some quite lengthy investigation I have narrowed this down to being caused by one specific code-related action. (has nothing to do with the run-time added \u0027bump-stop\u0027 colliders as I had thought)\n\nIf I set the part.collider field to be null, voxelization fails.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nHave a few ideas to look into for potential solutions and/or workarounds.\u00A0 The particular problem code was itself a work-around to other problems in -stock- code, so the first thing to check is If the problems with the stock code have been fixed; that particular work-around might not even be needed anymore.\n\u003C/p\u003E\n\u003Cp\u003E\nHopefully will be able to come up with a solution for the next update, but no promises....\n\u003C/p\u003E\n"},{"CreatedByName":"Akira_R","CreatedById":117470,"CreatedDateTime":"2017-01-26T05:39:38Z","Content":"\n\u003Cp\u003E\nI see, I misunderstood the nature of the auto-tuning system, I thought it looked at vehicle mass etc only in the editor and assigned spring and damper settings to the wheels prior to launching and once launched those settings were \u0022locked in\u0022 maybe with sliders in the right click menu in flight for additional manual adjustments.\n\u003C/p\u003E\n\u003Cp\u003E\nPerhaps such a system could be the solution? It could keep the plug and play people satisfied by providing reasonable settings and usability out of the box for a narrow range of uses, essentially just four wheeled rovers. But any one building something more complex would need to do a bit of manual configuration. The first \u0022level\u0022 of which could be the user providing manual inputs to the auto-tuner like number of wheels and vessel mass, or mass percent or whatever makes the most sense, and then another level of full manual adjustment of springs dampers etc.\n\u003C/p\u003E\n\u003Cp\u003E\nBut again I could be misunderstanding the system or the problem.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso thank you very much for putting so much time into figuring out the issues with \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E, I have been following along on github and I know just enough about coding to undrstand conceptually what is going on and just little enough to be in awe of what you guys are doing lol.\n\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2017-01-26T08:00:42Z","Content":"\n\u003Cp\u003E\nFirst of all and most importantly, thank you for providing wheels that don\u0027t rely on forced autostruts! I\u0027ve been away for a while and came back hoping updates to KSP would have made my mechs viable again, but wheelstruts were killing me. And if I don\u0027t have wheels on the feet, then the mechs can\u0027t \u00A0turn off the brakes and \u0022skate\u0022 to higher speeds, nor can they turn on anything but \u0022concrete\u0022. That\u0027s a new thing as far as I know, but the grass around the runway (and, I assume by extension, anything not \u0022paved\u0022) now seems to have enormous anti-skid, which meant my \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E-powered-yaw form of steering no longer worked. Having something steerable on the toes allows \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E to \u0022skid-yaw\u0022 the craft again.\u003Cbr\u003E\u003Cbr\u003E\nFor reference, this is what autostruts did to me:\u003Ca href=\u0022https://gfycat.com/CarelessColorlessBeardeddragon\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://gfycat.com/CarelessColorlessBeardeddragon\u003C/a\u003E\u003Cbr\u003E\u003Cbr\u003E\nFrom my experimentation (and a hint from your documentation) it appears to me that these new modules will only work if their parent part is not physicsless, is that right?\u003Cbr\u003E\u003Cbr\u003E\nWhat I really want to do is create something like a castor...\u00A0The wheels aren\u0027t there to really be wheels and I don\u0027t need motors, I just need a way to turn on grass and (preferably) be able to \u0022skate\u0022 with brakes off. Still playing around with the various settings, I\u0027ve been at it for a couple of hours and am making progress, albeit slow. My best efforts so far have suspension at zero, and alternating between full damping/no springs and\u00A0no damping/no springs. Unfortunately both of those setups seem to create a constant \u0022collision\u0022 noise coming from the wheel.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-26T08:08:05Z\u0022 title=\u002201/26/2017 08:08  AM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 26, 2017\u003C/time\u003E by allmhuran\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2017-01-26T09:17:45Z","Content":"\n\u003Cp\u003E\nLearned some interesting things playing around some more.\u003Cbr\u003E\u003Cbr\u003E\nThose wide footpads on my mech? They\u0027re physicsless. Physicsless parts have perfectly rigid joints and don\u0027t flop around on IR servos, so they have to be that way. Their mass is also really, really tiny at\u00A00.001\u00A0in order to prevent the \u0022swaying\u0022 of the leg mass from rocking the mech as it walks.\u003Cbr\u003E\u003Cbr\u003E\nBut the mech as a whole weighs ~15 tons, due to a dense resource I transfer between the feet as it walks, acting as a counterweight.\u003Cbr\u003E\u003Cbr\u003E\nSo, I have been putting a normal-physics part between the wheels and the feet. Just a small one, like a small girder. This is how I\u0027ve been doing my experiments thus far,\u00A0but I wondered what would happen if I simply gave the footpad its physics back. The result: The mech is flipped up into the air after it spawns in. This was with suspension 0, spring 0.05, and damping at any value.\u003Cbr\u003E\u003Cbr\u003E\nIt *looks* like the acceleration applied upwards by the wheels to the thing the wheels are supporting does not depend on the mass of the object as a whole, but only the mass of the immediate parent, which is interesting. I expect this is a KSP or unity thing, not a mod thing. But if this hypothesis is correct, it explains why wheels (and potentially a whole lot of other things)\u00A0are so hard to get right.\u003Cbr\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-26T09:19:40Z\u0022 title=\u002201/26/2017 09:19  AM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 26, 2017\u003C/time\u003E by allmhuran\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TGSAP","CreatedById":147691,"CreatedDateTime":"2017-01-26T12:33:15Z","Content":"\n\u003Cp\u003E\nI\u0027d just like to add to what Akira_R said; a big thanks for your work on this mod in general and also in getting it compatible with \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E. I have experience with Unity development (and their godawful unusable wheel colliders), and I know exactly the scope of a project like this, and the difficulties involved, and it amazes me how fast you were able to get one working well (on a mod on which you weren\u0027t even planning to work that much in the first place). I also commend how well you have reacted to the feedback of players and how out of your way you have gone to accommodate them. Personally I like to set everything manually (like you, I imagine) and your patience and dedication in providing a workable solution to, let\u0027s say, \u0022less dedicated\u0022 players astound\u00A0me.\n\u003C/p\u003E\n\u003Cp\u003E\nI have followed the situation on github as well, and it seems like a reasonably simple fix (to the extent such things can be simple) for the \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E situation, one I know is well within your capabilities. Again, thanks for the speed and the effort that you have spent in supporting a mod you don\u0027t even use. You can count on me to test this with \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E anytime.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-26T15:31:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222934864\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485417642\u0022 data-ipsquote-userid=\u002266124\u0022 data-ipsquote-username=\u0022allmhuran\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, allmhuran said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFirst of all and most importantly, thank you for providing wheels that don\u0027t rely on forced autostruts! I\u0027ve been away for a while and came back hoping updates to KSP would have made my mechs viable again, but wheelstruts were killing me. And if I don\u0027t have wheels on the feet, then the mechs can\u0027t \u00A0turn off the brakes and \u0022skate\u0022 to higher speeds, nor can they turn on anything but \u0022concrete\u0022. That\u0027s a new thing as far as I know, but the grass around the runway (and, I assume by extension, anything not \u0022paved\u0022) now seems to have enormous anti-skid, which meant my \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E-powered-yaw form of steering no longer worked. Having something steerable on the toes allows \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E to \u0022skid-yaw\u0022 the craft again.\u003Cbr\u003E\u003Cbr\u003E\nFor reference, this is what autostruts did to me:\u003Ca href=\u0022https://gfycat.com/CarelessColorlessBeardeddragon\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://gfycat.com/CarelessColorlessBeardeddragon\u003C/a\u003E\u003Cbr\u003E\u003Cbr\u003E\nFrom my experimentation (and a hint from your documentation) it appears to me that these new modules will only work if their parent part is not physicsless, is that right?\u003Cbr\u003E\u003Cbr\u003E\nWhat I really want to do is create something like a castor...\u00A0The wheels aren\u0027t there to really be wheels and I don\u0027t need motors, I just need a way to turn on grass and (preferably) be able to \u0022skate\u0022 with brakes off. Still playing around with the various settings, I\u0027ve been at it for a couple of hours and am making progress, albeit slow. My best efforts so far have suspension at zero, and alternating between full damping/no springs and\u00A0no damping/no springs. Unfortunately both of those setups seem to create a constant \u0022collision\u0022 noise coming from the wheel.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt seems you are misunderstanding the wheel system.\n\u003C/p\u003E\n\u003Cp\u003E\nZero-spring / zero-suspension setups will not work.\u00A0 All friction forces are derived from the spring forces, which are determined by the amount of compression necessary to support the load.\u00A0 No suspension = no spring = no forces.\n\u003C/p\u003E\n\u003Cp\u003E\nAdditionally, even trying to \u0027cheat\u0027 by setting the suspension to a very small value will not work due to the nature of stepped integration.\u00A0 When there is enough force to support the load at 1/2 compression, you will get -double- that force at full compression.\u00A0 If the difference in travel between 1/2 and full is not sufficient, the integration will \u0027step\u0027 from 1/2 to full in a single tick, and you\u0027ll find yourself launched into the air.\u00A0 (you can see this on the wheels if you scale them down and put a very large load on them; the integration steps are too large for the simulation to handle in a stable fashion, and things start to jitter, bounce, or go flying)\n\u003C/p\u003E\n\u003Cp\u003E\nFurther additionally, the base \u0027spring-stiffness\u0027 for a given wheel is calculated from the vessel mass.\u00A0 There is currently no in-game way to set it to zero spring stiffness, and even if there were it still would not work (see below).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nThe root of these problems is that something in KSP interferes with Unity\u0027s standard collision response and handling.\u00A0 Stuff that works fine in the editor simply fails when used in KSP.\u00A0 Particularly I should be able to set a collider to have zero friction, and it -should- work as a simple castor (sliding freely, but not being springy).\u00A0 Works great in Unity editor, and even works okay on the runway in KSP, but as soon as you get off the runway, it \u0027snags\u0027 into the terrain and starts dragging.\u00A0 This isn\u0027t dragging caused by friction, but caused by some sort of improper collision response (if I subscribe to OnCollisionEnter I can see that it thinks it is re-colliding every frame, when really it should have a single OnCollisionEnter and then OnCollisionStay for further frames).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nYes, wheels currently, by default, apply their suspension forces to their parent part.\u00A0 This is the main reason why they don\u0027t need autostruts for regular use-cases, however, yes, it will have problems if you try and attach it to a physics-less part (which has no rigidbody, and thus nothing to apply forces to).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nEdit:\u00A0 This mod is not the solution you are looking for;\u00A0 it is intended for spring-based wheels for standard vehicles.\u00A0 Your only option would be to create the \u0027legs\u0027 of the walker as custom modeled parts that were themselves wheels and used the leg-bending as a response to the suspension compression.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222934899\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485422265\u0022 data-ipsquote-userid=\u002266124\u0022 data-ipsquote-username=\u0022allmhuran\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, allmhuran said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis was with suspension 0, spring 0.05, and damping at any value.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHeh, yeah, don\u0027t do that.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-26T15:38:38Z\u0022 title=\u002201/26/2017 03:38  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 26, 2017\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2017-01-26T15:51:57Z","Content":"\n\u003Cp\u003E\nThat\u0027s all extremely helpful information, thanks very much!\u00A0\u003Cbr\u003E\u003Cbr\u003E\nSo my hypothesis about acceleration ins\u0027t correct, it\u0027s probably the step from half to full spring response you\u0027ve just described that was causing the flipping. Interesting that it happens only when the feet have very low mass, though. Changing foot mass from 0.001 to 0.1 prevents it... even though the change to the mass of the craft as a whole, at ~15 tons,\u00A0is totally negligible.\u003Cbr\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:rgb(39,42,52);font-family:\u0027Helvetica Neue\u0027, Helvetica, Arial, sans-serif;font-size:14px;font-style:normal;font-weight:normal;letter-spacing:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;background-color:rgb(255,255,255);float:none;\u0022\u003Ebut as soon as you get off the runway, it \u0027snags\u0027 into the terrain and starts dragging\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nYes, terrain other than the runway and other paved areas is super, super weird. This seems to be a recent thing.\u003Cbr\u003E\u003Cbr\u003E\nI don\u0027t know if my own experiments will help you with your development at all, but it might. Let me describe exactly the problem I want to solve, and what I have found to work.\u003Cbr\u003E\u003Cbr\u003E\nMy mechs cannot \u0022steer\u0022, since they can only walk straight ahead or straight back. Steering comes only from \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E yaw forces in the hips. I therefore give the hips a very large \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E yaw torque of 150ish (total craft mass, again, is only ~15)\u003Cbr\u003E\u003Cbr\u003E\nWith any configuration of physicsless contact patches: No steeering at all, the mech will only walk straight.\u003Cbr\u003E\u003Cbr\u003E\nWith flat bottomed, physics-enabled\u00A0feet:\u00A0On the runway, the provided yaw is enough such that if I put in full yaw, the mech will rotate around a vertical axis, both when stationary and when walking. But as soon as the mech walks onto the flat ground around the runway\u00A0the mech cannot yaw at all, even with yaw force ramped up much higher.\u003Cbr\u003E\u003Cbr\u003E\nWith 4 small physics parts (structural girders) on the bottoms of each foot and high yaw torque: The mech can yaw very easily on the runway (too easily). It can just barely yaw while on the surrounding grass.\u003Cbr\u003E\u003Cbr\u003E\nThe solution I have found: I have made a custom part using the structural panel 1x1 and scaling it so that it is even thinner. I then put 4 of these parts onto each foot, on the front and rear toes so that the \u0022edge\u0022 of the part runs from right to left across the toe. The obvious hope being that this would work kinda like an ice skate, with the sharp egde providing minimal resistance to movement in the direction of the long edge, but the wide, flat face providing high resistance to the orthogonal (mech forward/mech back) direcition.\u00A0\u003Cbr\u003E\u003Cbr\u003E\nAmazingly, this actually works... even on the grass around the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E, and even with yaw torque reduced And note: This is just a 1x1 structural panel that I have rescaled using a model{} block. It has no special modules or anything, and it has normal physics significance. If physics significance is set to 1, it no longer works.\u003Cbr\u003E\u003Cbr\u003E\nSo the friction value really does seem to depend upon the \u0022contact patch\u0022 size and particularly the orientation relative to the direction of movement.\u003Cbr\u003E\u003Cbr\u003E\nOf course, the downside of this solution is that I can\u0027t \u0022turn off the brakes to skate\u0022. The mech is limited to walking speed.\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cimg alt=\u0022DrTXCC2.png\u0022 class=\u0022ipsImage\u0022 height=\u0022750\u0022 src=\u0022http://i.imgur.com/DrTXCC2.png\u0022 width=\u0022939\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-26T16:07:13Z\u0022 title=\u002201/26/2017 04:07  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 26, 2017\u003C/time\u003E by allmhuran\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-26T19:13:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222935110\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485445917\u0022 data-ipsquote-userid=\u002266124\u0022 data-ipsquote-username=\u0022allmhuran\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, allmhuran said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo my hypothesis about acceleration ins\u0027t correct, it\u0027s probably the step from half to full spring response you\u0027ve just described that was causing the flipping. Interesting that it happens only when the feet have very low mass, though. Changing foot mass from 0.001 to 0.1 prevents it... even though the change to the mass of the craft as a whole, at ~15 tons,\u00A0is totally negligible.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is due to Unity\u0027s internal limitations on joints.\u00A0 They specify in their documentation that all rigidbodies that are linked by joints should be within one order of magnitude of mass.\u00A0 So if the most massive part is 10t, the least massive one should be at least 1t.\n\u003C/p\u003E\n\u003Cp\u003E\nIf those rules are not followed the joint-constraint system starts to break down.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is why if you attach a heavy part to a light part it will sag more.\u00A0 Increase the mass of that light part and the sagging decreases.\u00A0 Get the two parts to have the same mass and the sagging is at its minimum.\n\u003C/p\u003E\n\u003Cp\u003E\n(Aren\u0027t Unity joints wonderful?.... wonderfully inconsistent....)\n\u003C/p\u003E\n"},{"CreatedByName":"allmhuran","CreatedById":66124,"CreatedDateTime":"2017-01-26T19:56:21Z","Content":"\n\u003Cp\u003E\nAll this great information that I\u0027ve never seen anyone mention in ~4 years of mucking around in KSP. You\u0027re a freaking goldmine. I first really explored the heavy/light mass joint problem about 18 months ago based on some discussion over in the infernal robotics threads, but nobody has ever\u00A0mentioned anything as specific as what you\u0027ve said here. Really interesting stuff.\u003Cbr\u003E\u003Cbr\u003E\nIn any case, this is why most of the parts on\u00A0the mechs are physicsless - to prevent IR joints from being wobbly -\u00A0so it solves the problem everywhere except for the contact patch with the ground.\u003Cbr\u003E\u003Cbr\u003E\nAnyway, maybe the \u0022ice skate\u0022 style ground physics will help with your skids, but it sure seems like you probably already know a lot more directly from unity than what I can find out by experimenting in KSP, even if the unity stuff is sometimes overridden by KSP behaviour.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-01-26T20:45:23Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222935343\u0022 data-ipsquote-contentid=\u0022152782\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485460581\u0022 data-ipsquote-userid=\u002266124\u0022 data-ipsquote-username=\u0022allmhuran\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n46 minutes ago, allmhuran said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nAnyway, maybe the \u0022ice skate\u0022 style ground physics will help with your skids, but it sure seems like you probably already know a lot more directly from unity than what I can find out by experimenting in KSP, even if the unity stuff is sometimes overridden by KSP behaviour.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInteresting find; all of my experiments were using a cylinder or sphere collider, which should have a contact-patch size of a single point.... perhaps there is some additional funkiness going on regarding the contact size (although as I understand the back-end of unity physics, there is no \u0027contact patch\u0027 and all collisions are resolved as if it were a point-point collision, using the most-penentrating vertex of the intersecting geometry).\n\u003C/p\u003E\n"},{"CreatedByName":"V8jester","CreatedById":136093,"CreatedDateTime":"2017-01-26T22:07:15Z","Content":"\n\u003Cp\u003E\nForgive me for the temporary derail.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/66124-allmhuran/\u0026amp;do=hovercard\u0022 data-mentionid=\u002266124\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/66124-allmhuran/\u0022 rel=\u0022\u0022\u003E@allmhuran\u003C/a\u003E\u00A0Something I have recently discovered for mech feet is Tweakscaled \u003Cabbr title=\u0022Kerbal Inventory System (mod)\u0022\u003EKIS\u003C/abbr\u003E anchors. As long as your mech lifts its\u00A0feet,\u00A0you can change directions all you want. And climb hills. Not sure how much this helps this discussion at hand but.... Also try Tweakscaling\u00A0a larger reaction wheel, then alt\u002Bclick a copy. The smaller copy will have the same torque\u00A0as its full scale counterpart. This mech has a single Reaction wheel on it\u0027s back.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/zapZKqLvaLE?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}