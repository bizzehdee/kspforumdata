{"TopicId":43707,"ForumId":34,"TopicTitle":"kOS Scriptable Autopilot System 0.9","CreatedByName":"KevinLaity","CreatedById":68050,"CreatedDateTime":"2013-08-24T14:28:17Z","PageNum":91,"Articles":[{"CreatedByName":"Captain_Party","CreatedById":59820,"CreatedDateTime":"2013-12-05T16:58:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kass\u0022 data-cite=\u0022Kass\u0022\u003E\u003Cdiv\u003EWhat sort of script are you looking for?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAn ascent path for Real Solar System. Basically a real-life ascent path, thats more efficient than MJ...\u003C/p\u003E\n"},{"CreatedByName":"AbeS","CreatedById":80644,"CreatedDateTime":"2013-12-05T17:40:58Z","Content":"\n\u003Cp\u003E@Captain_Party Have you tried using a simple launcher code? does the steering work for you? For me it wobbles like crazy and can\u0027t get the lock steering to work properly, did the launch manually and the ship was very maneuverable, with KOS, a total mess. Weird thing is, MJ could fly as usual\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-05T20:25:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AbeS\u0022 data-cite=\u0022AbeS\u0022\u003E\u003Cdiv\u003E@Captain_Party Have you tried using a simple launcher code? does the steering work for you? For me it wobbles like crazy and can\u0027t get the lock steering to work properly, did the launch manually and the ship was very maneuverable, with KOS, a total mess. Weird thing is, MJ could fly as usual\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve seen that KOS\u0027s steering system tends to violently wiggle the craft back and forth as it self-corrects. It\u0027s like the old ASAS used to work. It seems the only real solution is to build an extremely rigid craft, strutted all over the place to prevent any flexibility.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-05T20:35:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sacred Aardvark\u0022 data-cite=\u0022Sacred Aardvark\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOf course, I phrased myself poorly, I meant making an intentional infinite loop with basically no exit clause. Not that your loop becomes infinite because due to other factors the conditions never get fulfilled.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe point is that any pretend legibility improvement of putting a condition in the loop header versus checking explicitly and calling \u0022break\u0022 in the body is largely imaginary because in EITHER case you still have to go examine the loop body to see how the loop exits, or indeed IF it exits at all. If the loop header looks unconditional and says \u0022until 0\u0022 then you have to search the loop body for the word \u0022break\u0022 to see how (or if) it ends, but on the other hand if the loop header looks conditional and mentions a variable or an expression then you STILL have to search the loop body to see the place where that expression or variable\u0027s value will get altered.\u003C/p\u003E\u003Cp\u003ENow, if we had a FOR loop in KOS, THAT would be the one exception I make to that general principle, because unlike an UNTIL or a WHILE, a FOR loop does in fact encapsulate all the information up in the loop header in one place - you show how you\u0027ll initialize, what you\u0027ll check for, and how you\u0027ll increment, all up in the header. So that I do agree is more legible and less error prone. But once you remove init and increment and leave just the check alone, so you still have to look inside the body for the increment and look outside the body for the initialization, then there\u0027s zero legibility \u0022win\u0022 over just explicitly using break instead.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-05T21:45:03Z","Content":"\n\u003Cp\u003ETo @Sacred Aardvark and @blizzy78, the term \u0022open source\u0022 actually has a group that approves whether or not people can legally call their license an open source license. They trademarked the term specifically to fight the definitional drift that your arguments are both based on.\u003C/p\u003E\u003Cp\u003EYou can read the whole thing here: \u003Ca href=\u0022http://opensource.org/docs/osd\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://opensource.org/docs/osd\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EBut this is the relevant part of it:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003C/em\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cem\u003E3. Derived Works\u003C/em\u003E\u003C/div\u003E\u003Cem\u003E\u003C/em\u003E\u003Cp\u003E\u003Cem\u003E\u003C/em\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cem\u003EThe license must allow modifications and derived works, and must allow them to be distributed under the same terms as the license of the original software.\u003C/em\u003E\u003C/div\u003E\u003Cem\u003E\u003C/em\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo can you let this rest for once? GNU GPL is AN open sourced license. There are others too. The property I was referring to that GPL has which allows someone to fork the code and make their own mod is *precisely* this property that GPL shares with all the other open source licenses too.\u003C/p\u003E\u003Cp\u003EI wrote up longer responses, but I went back to delete them because really, this should settle it once and for all. The point is moot. I obviously was NOT referring merely to the ability to view the code when I called it open sourced, and I was using the term the same way the OSI (Open Source Initiative) themselves uses it.\u003C/p\u003E\n"},{"CreatedByName":"TheCanadianVendingMachine","CreatedById":59684,"CreatedDateTime":"2013-12-05T23:41:05Z","Content":"\n\u003Cp\u003ECan someone provide an example for the veriticlespeed function, and the If statement? I don\u0027t know how to use them fully.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-06T00:41:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TheCanadianVendingMachine\u0022 data-cite=\u0022TheCanadianVendingMachine\u0022\u003E\u003Cdiv\u003ECan someone provide an example for the veriticlespeed function, and the If statement? I don\u0027t know how to use them fully.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euntil 0{\u003Cbr\u003E\tprint \u0026lt;verticalspeed\u0026gt;. //has to be within \u0026lt;\u0026gt; when printing\u003Cbr\u003E\tif verticalspeed\u0026gt;400 {\u003Cbr\u003E\t\tlock throttle to 0.5.\u003Cbr\u003E\t\tbreak.\u003Cbr\u003E\t}.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eif verticalspeed gets over 400 then throttle will be set to 0.5 and the loop will break\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-06T00:46:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\tprint \u0026lt;verticalspeed\u0026gt;. //has to be within \u0026lt;\u0026gt; when printing\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EReally? I\u0027ve gotten \u0022print verticalspeed\u0022 to work. I thought the angle-bracket notation was deprecated in favor of ship:\u003Cem\u003Ethingy\u003C/em\u003E. (i.e. where it used to be \u0026lt;liquidfuel\u0026gt; it\u0027s now ship:liquidfuel).\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-06T01:18:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EReally? I\u0027ve gotten \u0022print verticalspeed\u0022 to work. I thought the angle-bracket notation was deprecated in favor of ship:\u003Cem\u003Ethingy\u003C/em\u003E. (i.e. where it used to be \u0026lt;liquidfuel\u0026gt; it\u0027s now ship:liquidfuel).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat you are saying is true, but both still work.\u003C/p\u003E\n"},{"CreatedByName":"AbeS","CreatedById":80644,"CreatedDateTime":"2013-12-06T03:03:54Z","Content":"\n\u003Cp\u003EIs it possible to get the vernal equinox coordinate? to calculate the right ascension of the ascending node and the argument of the perigee?\u003C/p\u003E\u003Cp\u003EOr how does the LAN and Longitude of Periapsis work? Longitude based on what? Kerbin is always rotating, so does the LAN vary with time? Not sure if I should ask this here or somewhere else \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-06T06:21:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EWhat you are saying is true, but both still work.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was more referring to the bit about \u0022//has to be within \u0026lt;\u0026gt; when printing\u0022.\u003C/p\u003E\u003Cp\u003EYou can print it without the \u0026lt;\u0026gt; and vertical speed isn\u0027t a ship expendable resource like the other things with \u0026lt;\u0026gt; are. I thought the \u0026lt;\u0026gt; marks were for expendables like fuel and monoprop and battery charge.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-06T06:30:29Z\u0022 title=\u002212/06/2013 06:30  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 6, 2013\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-06T06:57:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI was more referring to the bit about \u0022//has to be within \u0026lt;\u0026gt; when printing\u0022.\u003Cp\u003EYou can print it without the \u0026lt;\u0026gt; and vertical speed isn\u0027t a ship expendable resource like the other things with \u0026lt;\u0026gt; are. I thought the \u0026lt;\u0026gt; marks were for expendables like fuel and monoprop and battery charge.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBoth \u003Cem\u003E\u0026lt;liquidfuel\u0026gt;\u003C/em\u003E and \u003Cem\u003Eship:liquidfuel\u003C/em\u003E work, the same goes for other resources that can be queried. \u003Cem\u003E\u0026lt;verticalspeed\u0026gt;\u003C/em\u003E and \u003Cem\u003Everticalspeed\u003C/em\u003E both work too.\u003C/p\u003E\u003Cp\u003EIt is my understanding that the \u0026lt;\u0026gt; notation is to be removed at some point and replaced by \u003Cem\u003Eship:resource\u003C/em\u003E and just plain variables like \u003Cem\u003Everticalspeed\u003C/em\u003E and \u003Cem\u003Ealtitude\u003C/em\u003E.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-06T07:20:54Z\u0022 title=\u002212/06/2013 07:20  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 6, 2013\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-06T08:13:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EBoth \u003Cem\u003E\u0026lt;liquidfuel\u0026gt;\u003C/em\u003E and \u003Cem\u003Eship:liquidfuel\u003C/em\u003E work, the same goes for other resources that can be queried. \u003Cem\u003E\u0026lt;verticalspeed\u0026gt;\u003C/em\u003E and \u003Cem\u003Everticalspeed\u003C/em\u003E both work too.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI knew it worked for \u003Cem\u003Eresources\u003C/em\u003E but verticalspeed and altitude aren\u0027t resources, which is why I didn\u0027t know it worked for that too\u003C/p\u003E\u003Cp\u003EBut the real thing that struck me as wrong and made me comment in the first place was the bit about how it \u003Cem\u003Ehas to be within \u0026lt;\u0026gt; when printing\u003C/em\u003E when I knew I had printed it many times before without the \u0026lt;\u0026gt;. Even if it CAN be in \u0026lt;\u0026gt; it certainly doesn\u0027t have to be. It will print just fine without the \u0026lt;\u0026gt; so I thought people might be mislead by that comment.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-06T08:16:40Z\u0022 title=\u002212/06/2013 08:16  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 6, 2013\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-06T10:26:10Z","Content":"\n\u003Cp\u003EI think you are right and \u0026lt;liquidfuel\u0026gt; has to be like that but apoapsis or verticalspeed do not. It still works with the \u0026lt;\u0026gt; but you do not get an error if they are not there. I just have a habit of putting anything without a : inside \u0026lt;\u0026gt; for ease of error checking. I also wanted to show the different way you would print an attribute and the usage within an if statement.\u003C/p\u003E\u003Cp\u003EEDIT : I have found that if you put stage:lquidfuel inside \u0026lt;\u0026gt; it causes an error.\u003C/p\u003E\u003Cp\u003EEDIT2 : It seems that instead of using \u0026lt;liquidfuel\u0026gt; apoapsis and verticalspeed we should be using ship:liquidfuel ship:apoapsis and ship:verticalspeed (from the 0.90 release video)\u003C/p\u003E\u003Cp\u003EMy bad. I only downloaded KOS a couple of days ago.\u003C/p\u003E\u003Cp\u003ECould someone direct me to a list of \u0060targets\u0060 like \u0022mun\u0022, \u0022kerbin\u0022, \u0022directly above kerbin\u0022(seen that last one in a program but it causes an error which is why I\u0060d like to find a list)\u003C/p\u003E\u003Cp\u003EAlso I have an issue causing me to do weird programming as a workaround. I am replicating Apollo and one of the things I need to do is to shut down the center engine when stage:liquidfuel=25% of the original amount. This works fine except after shutting down the center engine the program thinks stage:liquidfuel is zero and dumps the stage. The workaround is to have the program find out the total amount of liquidfuel in the ship and subtract the amounts in the tanks and to stage when liquidfuel reaches those set points.\u003C/p\u003E\u003Cp\u003EThis is the code I use\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eprint \u00221st stage fuel 25%\u0022.\u003Cbr\u003Eprint stage:liquidfuel.\u003Cbr\u003Etoggle AG9. \u003Cbr\u003Eprint stage:liquidfuel.\u003Cbr\u003Eprint \u0022center engine shut down to reduce stresses\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand this is the output. AG9 ONLY shuts down the center engine (the other 4 are on thrust plates so are not directly connected to the tank). To my mind I have not staged and the stage has not run out of fuel so I should still detect the fuel left in the stage.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/ZFTw5GL.png\u0022 alt=\u0022ZFTw5GL.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ECan someone tell me if this is the intended behaviour or whether I am reporting a bug? I am not familiar enough yet to know which.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-06T12:39:16Z\u0022 title=\u002212/06/2013 12:39  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 6, 2013\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"adammada","CreatedById":29884,"CreatedDateTime":"2013-12-06T12:00:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ECan someone tell me if this is the intended behaviour or whether I am reporting a bug? I am not familiar enough yet to know which. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou must realize, that stage;liquidfuel has to have definition. Be aware that fuel tanks are not assigned to stages as they used few versions os KSP ago. So how KOS can know which fuel is it should count? Answer - it just counts fuel avaiable to current stage engines, not checking where this tank is (you can use fuel crossfeds to pump fuel between stages).\u003C/p\u003E\u003Cp\u003EBut - how KOS can know what are current stage engines? You can use action groups or light click menu to start or stop engines from what stages you want.\u003C/p\u003E\u003Cp\u003ESo, KOS uses definition \u0022current stage fuel is fuel avaiable to currently active engines\u0022. For me its good and simple solution.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-06T12:32:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022adammada\u0022 data-cite=\u0022adammada\u0022\u003E\u003Cdiv\u003EYou must realize, that stage;liquidfuel has to have definition. Be aware that fuel tanks are not assigned to stages as they used few versions of KSP ago. So how KOS can know which fuel is it should count? Answer - it just counts fuel available to current stage engines, not checking where this tank is (you can use fuel crossfeeds to pump fuel between stages).\u003Cp\u003EBut - how KOS can know what are current stage engines? You can use action groups or light click menu to start or stop engines from what stages you want.\u003C/p\u003E\u003Cp\u003ESo, KOS uses definition \u0022\u003Cstrong\u003Ecurrent stage fuel is fuel available to currently active engines\u003C/strong\u003E\u0022. For me its good and simple solution.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EReading between the lines it would seem I am reporting a bug because KOS does not function as you describe (It would have been a lot easier if you had simply said \u0022you are reporting a bug because KOS should not work that way\u0022...\u003C/p\u003E\u003Cp\u003EAs you can easily see in my image, the engines are lit, there is over 5000 liquidfuel left available to them and KOS is telling my program that there is 0 liquidfuel left. I shutdown only one of the engines in the current stage with an action group and KOS did not like that.\u003C/p\u003E\u003Cp\u003EAlso, does anyone know if there is a key to bring up the terminal? - answered (use an acrtion group)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-06T21:32:26Z\u0022 title=\u002212/06/2013 09:32  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 6, 2013\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-06T20:16:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EAlso, does anyone know if there is a key to bring up the terminal?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere can be. In all my kOS craft, \u003Cem\u003Eopen terminal\u003C/em\u003E gets linked to \u003Cem\u003Eag1\u003C/em\u003E in the action group menu in the VAB. That really helps to reduce the right clicking and annoyance of doing that over and over.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-06T21:21:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EThere can be. In all my kOS craft, \u003Cem\u003Eopen terminal\u003C/em\u003E gets linked to \u003Cem\u003Eag1\u003C/em\u003E in the action group menu in the VAB. That really helps to reduce the right clicking and annoyance of doing that over and over.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, nice workaround. I\u0060ll use that until something better comes along.\u003C/p\u003E\u003Cp\u003EIf the mod dev returns, I\u0060d like to make a feature request for a hotkey that opens the interface.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-07T00:25:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022adammada\u0022 data-cite=\u0022adammada\u0022\u003E\u003Cdiv\u003ESo, KOS uses definition \u0022current stage fuel is fuel avaiable to currently active engines\u0022. For me its good and simple solution.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf it worked like that it wouldn\u0027t be a problem, but it doesn\u0027t work like that. It does NOT report the fuel \u003Cstrong\u003Eavailable to\u003C/strong\u003E currently active engines, but rather it reports the fuel \u003Cstrong\u003Edirectly connected to \u003C/strong\u003E the currently active engines (i.e. there exist no stage decouplers between the tank and the engine.) \u003C/p\u003E\u003Cp\u003EThe relevant difference between those two meanings is due to the existence of the yellow fuel hoses. Fuel that is available to an active engine, but it\u0027s only available via a yellow hose, doesn\u0027t get reported in stage:liquidfuel or stage:oxidizer.\u003C/p\u003E\u003Cp\u003E@JohnFX, I can\u0027t see your dark screenshot well enough to tell for sure, but it seems from your description that this might be what\u0027s happening in your case. if your engines are pushing against plates and have no fuel tanks directly attached but instead are getting all their fuel through yellow hoses, then ship:liquidfuel isn\u0027t sophisticated enough to \u0022see\u0022 through that hose to report that fuel. It\u0027s not a trivial problem to fix because it\u0027s fuzzy how much of that fuel is really part of this stage and how much is for another stage, and also if four engines are all siphoning from the same tank you don\u0027t want to end up counting the tank\u0027s contents 4 times over into the total (adding it once for each engine). But if you make an asparagus staged rocket you can tell that KSP itself gets it a bit wrong, counting the same fuel toward multiple engines in the little green fuel bars on the staging list. \u003C/p\u003E\u003Cp\u003EBut at any rate, an engine who\u0027s sole fuel supply is a yellow hose will report as having zero fuel in stage:liquidfuel.\u003C/p\u003E\u003Cp\u003EI ran into this problem myself as I had an ascent script with the logic to stage whenever stage:liquidfuel hits zero, and it kept skipping right past one of my stages to the next one even though it had fuel. I eventually traced it down to this cause.\u003C/p\u003E\u003Cp\u003EOne workaround is to, instead of building those engines against pusher plates, put them against the smallest fuel tank available in the game that will take the engine. Use those little fuel tanks as the pusher plates, and feed a yellow hose from the center tank out to the side \u0022pusher plate\u0022 tanks.\u003C/p\u003E\u003Cp\u003EFor example, lets say you use the small 45 unit fuel tanks as the pusher plates and they get fed by hoses from a center tank with 320 units, and you\u0027ve got 2 engines thusly mounted. Your total stage:liquidfuel *should* be 410 units, the 320 plus 2 of the 45\u0027s. But it will only be reported as 90 units (the two 45\u0027s). BUT those 90 units will be the LAST units spent, so you can still use stage:liquidfuel=0 to decide when to stage. You won\u0027t be able to tell the difference between having 300 units left versus having 200 units left, but you\u0027ll be able to tell the difference between having 90 units versus 80 units. Once you\u0027ve emptied the center tank and only the \u0022pusher plate\u0022 tanks have fuel left, (i.e. there\u0027s less than 90 units left in this example) then stage:liquidfuel would start becoming accurate again.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-12-07T06:16:37Z","Content":"\n\u003Cp\u003EI noticed the laggy stuttering also can be triggered not just by UNTIL loops but also by running WAIT UNTIL\u0027s that have a complex enough expression as the conditional check.\u003C/p\u003E\u003Cp\u003EIn fact, WAIT UNTIL seems to be even worse. With an UNTIL loop I can manually throttle down the speed of execution with a WAIT 0.5. or so when speed is not important and that greatly helps reduce the stutter. But there\u0027s no way to tell WAIT UNTIL (condition) that it doesn\u0027t need to check all that often. I seem to get less lag by turning an instance of this:\u003C/p\u003E\u003Cp\u003EWAIT UNTIL (some condition).\u003C/p\u003E\u003Cp\u003Einto this:\u003C/p\u003E\u003Cp\u003EUNTIL some condition { wait 0.2 . }.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-07T13:47:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI noticed the laggy stuttering also can be triggered not just by UNTIL loops but also by running WAIT UNTIL\u0027s that have a complex enough expression as the conditional check.\u003Cp\u003EIn fact, WAIT UNTIL seems to be even worse. With an UNTIL loop I can manually throttle down the speed of execution with a WAIT 0.5. or so when speed is not important and that greatly helps reduce the stutter. But there\u0027s no way to tell WAIT UNTIL (condition) that it doesn\u0027t need to check all that often. I seem to get less lag by turning an instance of this:\u003C/p\u003E\u003Cp\u003EWAIT UNTIL (some condition).\u003C/p\u003E\u003Cp\u003Einto this:\u003C/p\u003E\u003Cp\u003EUNTIL some condition { wait 0.2 . }.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI usually use an until 0{if condition {break.}. stuff.). because it allows me to make changes very easily later as all my code is almost constantly updated and just add commands to the loop if I need to. I also get to control where the break happens and be able to keep the program live and maybe have other breaks in there or checks on the flight or update the on screen display (if any) for example :\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euntil 0 {\u003Cbr\u003E\tif turnprofile\u0026lt;minangle {lock turnprofile to minangle.}.\u003Cbr\u003E\tif apoapsis\u0026lt;60000 {LOCK STEERING TO HEADING(turnProfile, 90).}.\u003Cbr\u003E\tif apoapsis\u0026gt;80000 {lock throttle to 0.}.\u003Cbr\u003E\tif apoapsis\u0026lt;79999 {lock throttle to 1.}.\u003Cbr\u003E\tif altitude\u0026gt;69100 {break.}.\u003Cbr\u003E\tif apoapsis\u0026gt;60000 {lock steering to heading(0,90).}.\u003Cbr\u003E\tif fuel\u0026lt;((fueltot-tanka)-(tankb*.75)) {break.}.\u003Cbr\u003E\twait 0.3.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eor\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euntil 0 {\u003Cbr\u003E\tif condition (break.).\u003Cbr\u003E\tif othercondition {set othertoggle to 1. break.}.\u003Cbr\u003E\twait 0.3.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI didn\u0060t know about wait until (condition) being a cause of lag though. I\u0060ll be aware of that in future. Thanks \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIf it worked like that it wouldn\u0027t be a problem, but it doesn\u0027t work like that. It does NOT report the fuel \u003Cstrong\u003Eavailable to\u003C/strong\u003E currently active engines, but rather it reports the fuel \u003Cstrong\u003Edirectly connected to \u003C/strong\u003E the currently active engines (i.e. there exist no stage decouplers between the tank and the engine.) \u003Cp\u003EThe relevant difference between those two meanings is due to the existence of the yellow fuel hoses. Fuel that is available to an active engine, but it\u0027s only available via a yellow hose, doesn\u0027t get reported in stage:liquidfuel or stage:oxidizer.\u003C/p\u003E\u003Cp\u003E@JohnFX, I can\u0027t see your dark screenshot well enough to tell for sure, but it seems from your description that this might be what\u0027s happening in your case. if your engines are pushing against plates and have no fuel tanks directly attached but instead are getting all their fuel through yellow hoses, then ship:liquidfuel isn\u0027t sophisticated enough to \u0022see\u0022 through that hose to report that fuel. It\u0027s not a trivial problem to fix because it\u0027s fuzzy how much of that fuel is really part of this stage and how much is for another stage, and also if four engines are all siphoning from the same tank you don\u0027t want to end up counting the tank\u0027s contents 4 times over into the total (adding it once for each engine). But if you make an asparagus staged rocket you can tell that KSP itself gets it a bit wrong, counting the same fuel toward multiple engines in the little green fuel bars on the staging list. \u003C/p\u003E\u003Cp\u003EBut at any rate, an engine who\u0027s sole fuel supply is a yellow hose will report as having zero fuel in stage:liquidfuel.\u003C/p\u003E\u003Cp\u003EI ran into this problem myself as I had an ascent script with the logic to stage whenever stage:liquidfuel hits zero, and it kept skipping right past one of my stages to the next one even though it had fuel. I eventually traced it down to this cause.\u003C/p\u003E\u003Cp\u003EOne workaround is to, instead of building those engines against pusher plates, put them against the smallest fuel tank available in the game that will take the engine. Use those little fuel tanks as the pusher plates, and feed a yellow hose from the center tank out to the side \u0022pusher plate\u0022 tanks.\u003C/p\u003E\u003Cp\u003EFor example, lets say you use the small 45 unit fuel tanks as the pusher plates and they get fed by hoses from a center tank with 320 units, and you\u0027ve got 2 engines thusly mounted. Your total stage:liquidfuel *should* be 410 units, the 320 plus 2 of the 45\u0027s. But it will only be reported as 90 units (the two 45\u0027s). BUT those 90 units will be the LAST units spent, so you can still use stage:liquidfuel=0 to decide when to stage. You won\u0027t be able to tell the difference between having 300 units left versus having 200 units left, but you\u0027ll be able to tell the difference between having 90 units versus 80 units. Once you\u0027ve emptied the center tank and only the \u0022pusher plate\u0022 tanks have fuel left, (i.e. there\u0027s less than 90 units left in this example) then stage:liquidfuel would start becoming accurate again.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat makes complete sense and explains everything about my issue. I think I will fix the issue in software as that causes slightly less explosions than hardware changes, well at least in my workshop anyway.\u003C/p\u003E\u003Cp\u003EWhat I do is lock a variable to be ship:liquidfuel, another to be stage:liquidfuel and then set triggerfuel to be (ship:liquidfuel-stage:liquidfuel) just after staging and when ship:liquidfuel reaches triggerfuel I know it is time to stage.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-07T17:18:18Z\u0022 title=\u002212/07/2013 05:18  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 7, 2013\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"check","CreatedById":71875,"CreatedDateTime":"2013-12-07T21:34:10Z","Content":"\n\u003Cp\u003EIn case anyone missed the latest squadcast.... throttling engines independently confirmed for 0.23 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI know that that\u0027s been requested feature for KOS players...\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-07T22:20:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022check\u0022 data-cite=\u0022check\u0022\u003E\u003Cdiv\u003EIn case anyone missed the latest squadcast.... throttling engines independently confirmed for 0.23 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EI know that that\u0027s been requested feature for KOS players...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, oh yes. This will complicate matters a lot more, but increases the possibilites almost infinitly. I am afraid I will have to write some proper code now \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-12-08T11:49:01Z","Content":"\n\u003Cp\u003EOk, I have another issue. After docking two craft, I try to \u0060lock steering to prograde.\u0060 at which point my craft just starts a roll then translates as fast as it can. I suspect the roll cannot keep up with the translate...\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIs there *any* other way of setting my orientation *other* than using \u0060lock steering\u0060 as \u0060lock steering\u0060 does not operate well?\u003C/strong\u003E All I want is to be able to roll x degrees or not roll depending on my whim, then steer my craft like normal, up down left and right the same way you always can. Not absolute directions, relative. It should be the most basic function of controlling your craft.\u003C/p\u003E\u003Cp\u003E(is there a way to only adjust each value individually, so I could roll, then translate?)\u003C/p\u003E\u003Cp\u003EI\u0060m currently trying to lock steering for 1 seconds then sas on for 5 seconds to slow it down, then lock for two seconds again, rinse repeat. \u003C/p\u003E\u003Cp\u003Ethis is not working. Every minute or so it ends up about 5 degrees closer to prograde with lots and lots of \u0060not knowing which way to turn\u0060 inbetween...\u003C/p\u003E\u003Cp\u003EAlso is there a way to check your orientation is close to prograde so I can tell when to end this loop for example?\u003C/p\u003E\u003Cp\u003EI refuse to accept that a ship design that rolls slower than it pitches is fundamentally uncontrollable. That would be terrible. This \u0060you are forced to roll whenever you lock steering\u0060 is also very very frustrating.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAt the core, is there any way to alter your attitude *without* doing a roll?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EMechjeb can control this craft perfectly FYI. It moves to the prograde marker and just sits there.\u003C/p\u003E\u003Cp\u003EEDIT : After examining and forcing it to stop between letting it go for only a small amount of time it is actively heading *away* from prograde if it is near it. If I lock steering to up then it spins around the horizon and does nothing else and never settles down.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-08T17:26:56Z\u0022 title=\u002212/08/2013 05:26  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 8, 2013\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-08T22:06:24Z","Content":"\n\u003Cp\u003EYou might be wanting too much at once and doing it too abruptly. You could try finding out the difference between your current position and the one you want to be in and then ease into it. I did some testing which indicates that small steps prevent wild movements. Using larger increments or changing direction faster will lead to an increasing loss of control. You could even go the fancy route and have your script monitor the deviation. If that becomes too large, you slow down.\u003C/p\u003E\u003Cp\u003EI assume you now that \u003Cem\u003Elock steering to (pitch, heading, roll)\u003C/em\u003E allows you to individually control each one?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EEDIT : After examining and forcing it to stop between letting it go for only a small amount of time it is actively heading *away* from prograde if it is near it. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre you sure prograde remains the same direction all the time? Because if you use prograde or retrograde for something like landing, the directions will change if you are near standstill.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-08T22:08:50Z\u0022 title=\u002212/08/2013 10:08  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 8, 2013\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"}]}