{"TopicId":43707,"ForumId":34,"TopicTitle":"kOS Scriptable Autopilot System 0.9","CreatedByName":"KevinLaity","CreatedById":68050,"CreatedDateTime":"2013-08-24T14:28:17Z","PageNum":32,"Articles":[{"CreatedByName":"bazilshep_","CreatedById":63435,"CreatedDateTime":"2013-09-16T08:08:32Z","Content":"\n\u003Cp\u003EUsing check\u0027s lat/lon trick to figure out surface velocity bearing I\u0027ve made a suicide burn landing program. Great mod OP, its pretty fun figuring this stuff out. \u003C/p\u003E\u003Cp\u003ETo test it launch a craft that can land with a reasonably centered COT and reasonable TWR, run the program, and then get some altitude. The program engages after you start descending. It figures out the required constant throttle power and heading to zero out your velocity at altitude = TargetH, and executes it when the required throttle to do the maneuver gets over thrmargin (.7) .\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E clearscreen.\u003Cbr\u003Eprint \u0022Started...\u0022.\u003Cbr\u003E\u003Cbr\u003Eset gl to 9.81.\u003Cbr\u003E\u003Cbr\u003Eset TargetH to 10 .\u003Cbr\u003Eset targetv to -.9 .\u003Cbr\u003E\u003Cbr\u003Eset thr to 0 .\u003Cbr\u003E\u003Cbr\u003Eset thrmargin to 0.7 .\u003Cbr\u003Eset tlmargin to 0.8 .\u003Cbr\u003E\u003Cbr\u003Eset theta to 0 .\u003Cbr\u003Eset tl to 0 .\u003Cbr\u003E\u003Cbr\u003Eset E to ( TargetH - ALT:RADAR ) .\u003Cbr\u003Eset D to 0 .\u003Cbr\u003E\u003Cbr\u003Eprint \u0022waiting...\u0022.\u003Cbr\u003E\u003Cbr\u003Euntil  verticalspeed \u0026lt; -1  {\u003Cbr\u003E\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Suicide Burn...\u0022 .\u003Cbr\u003E\u003Cbr\u003ESAS off.\u003Cbr\u003E\u003Cbr\u003Euntil ( abs(E) \u0026lt; 10 ) AND ( ( abs(verticalspeed) \u0026lt; 2 ) OR ( tl \u0026lt; 0 ) ) {\u003Cbr\u003E\u003Cbr\u003E\tset TMR to ( maxthrust / mass ) \u002B 0.01 .\u003Cbr\u003E\tset E to ( TargetH - ALT:RADAR ) .\u003Cbr\u003E\u003Cbr\u003E\tset tl to 2 * tlmargin * E / verticalspeed - .5 .\u003Cbr\u003E\tset thr to ( ( (verticalspeed / tl - gl) ^ 2 \u002B surfacespeed ^ 2 / tl ^ 2 ) ^ .5) / TMR .\u003Cbr\u003E\u003Cbr\u003E\tset q to (surfacespeed * verticalspeed)/( verticalspeed^2 - 2*E).\u003Cbr\u003E\tset aq to abs(q).\u003Cbr\u003E\tset theta to (-90)*( q^5 \u002B 83.29*q^3 \u002B 518.1*q )/( aq^5 \u002B 96.08*aq^3 \u002B 535.5*aq \u002B 597.9 ).\u003Cbr\u003E\u003Cbr\u003E\tset lat1 to latitude .\u003Cbr\u003E\tset lon1 to longitude .\u003Cbr\u003E\tset lat2 to latitude .\u003Cbr\u003E\tset lon2 to longitude .\u003Cbr\u003E\u003Cbr\u003E\tset bearingw to ( lon2 - lon1 ) / cos( lat2 ) .\u003Cbr\u003E\tset bearingn to ( lat2 - lat1 ) .\u003Cbr\u003E\u003Cbr\u003E\tset bearingm to ( bearingw^2 \u002B bearingn^2 )^.5 \u002B 0.000001 .\u003Cbr\u003E\u003Cbr\u003E\tlock steering to up \u002B R( theta * bearingn / bearingm , theta * bearingw / bearingm , 180) .\u003Cbr\u003E\u003Cbr\u003E\tif thr \u0026lt; 0 {\u003Cbr\u003E\t\tlock throttle to 0 .\u003Cbr\u003E\t}.\u003Cbr\u003E\tif thr \u0026gt; 1 {\u003Cbr\u003E\t\tlock throttle to 1 .\u003Cbr\u003E\t}.\u003Cbr\u003E\tif ( thr \u0026lt; 1 ) AND ( thr \u0026gt; thrmargin ) {\u003Cbr\u003E\t\tlock throttle to thr. \u003Cbr\u003E\t}.\u003Cbr\u003E\u003Cbr\u003E\tprint \u0022tl:  \u0022 \u002B tl \u002B \u0022      \u0022 at (20,0).\u003Cbr\u003E\tprint \u0022bw: \u0022 \u002B bearingw/bearingm \u002B \u0022      \u0022 at (20,1).\u003Cbr\u003E\tprint \u0022the: \u0022 \u002B theta \u002B \u0022      \u0022 at (20,2).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Hovering...\u0022 .\u003Cbr\u003E\u003Cbr\u003Euntil abs(verticalspeed) \u0026lt; .05 {\u003Cbr\u003E\u003Cbr\u003E\tset theta to surfacespeed.\u003Cbr\u003E\u003Cbr\u003E\tset WTR to (mass*gl/maxthrust).\u003Cbr\u003E\tset D to (-.2) * ( verticalspeed - targetv ) * WTR.\u003Cbr\u003E\tset thr to D \u002B WTR* cos( theta ).\u003Cbr\u003E\u003Cbr\u003E\tset lat1 to latitude.\u003Cbr\u003E\tset lon1 to longitude.\u003Cbr\u003E\tset lat2 to latitude.\u003Cbr\u003E\tset lon2 to longitude.\u003Cbr\u003E\u003Cbr\u003E\tset bearingw to ( lon2 - lon1 ) / cos( lat2 ) .\u003Cbr\u003E\tset bearingn to ( lat2 - lat1 ) .\u003Cbr\u003E\u003Cbr\u003E\tset bearingm to ( bearingw^2 \u002B bearingn^2 )^.5 \u002B 0.000001 .\u003Cbr\u003E\u003Cbr\u003E\tlock steering to up \u002B R( theta*bearingn/bearingm, theta*bearingw/bearingm , 180) .\u003Cbr\u003E\u003Cbr\u003E\tif thr \u0026lt; 0 {\u003Cbr\u003E\t\tlock throttle to 0. } .\u003Cbr\u003E\tif thr \u0026gt; 1 {\u003Cbr\u003E\t\tlock throttle to 1 . } .\u003Cbr\u003E\tif (thr \u0026lt; 1) AND (thr \u0026gt; 0) {\u003Cbr\u003E\t\tlock throttle to thr. } .\u003Cbr\u003E} .\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Landed.\u0022.\u003Cbr\u003E\u003Cbr\u003Eset throttle to 0.\u003Cbr\u003E\u003Cbr\u003Eunlock steering.\u003Cbr\u003Eprint \u0022Exiting..\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI also figured out an approximation to the atan function that might be useful to people. It has a max error about 2 degrees, but its precise enough for this. The code below executes theta = atand( q ) .\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset q to something.\u003Cbr\u003Eset aq to abs(q).\u003Cbr\u003Eset theta to (-90)*( q^5 \u002B 83.29*q^3 \u002B 518.1*q )/( aq^5 \u002B 96.08*aq^3 \u002B 535.5*aq \u002B 597.9 ).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"bazilshep_","CreatedById":63435,"CreatedDateTime":"2013-09-16T09:12:53Z","Content":"\n\u003Cp\u003EThis is a pretty good mod OP, its quite fun coming up with this stuff.\u003C/p\u003E\u003Cp\u003EUsing check\u0027s lat/lon surface velocity trick I\u0027ve come up with a fully automated suicide burn landing program using some kinematics math.\u003C/p\u003E\u003Cp\u003ETo test it launch a craft with a reasonably centered COT and reasonable TWR. Run the program, then get some altitude on the craft. The program will kick in once its starts descending.\u003C/p\u003E\u003Cp\u003EIt will try to zero your horizontal and vertical velocity at altitude = TargetH . Once it zeros your vertical velocity it switches to hover mode, which zeros horizontal velocity and descends at targetv .\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003Eprint \u0022Started...\u0022.\u003Cbr\u003E\u003Cbr\u003Eset gl to 9.81.\u003Cbr\u003E\u003Cbr\u003Eset TargetH to 5 .\u003Cbr\u003Eset targetv to -.9 .\u003Cbr\u003E\u003Cbr\u003Eset thr to 0 .\u003Cbr\u003E\u003Cbr\u003Eset thrmargin to 0.7 .\u003Cbr\u003Eset tlmargin to 0.8 .\u003Cbr\u003E\u003Cbr\u003Eset theta to 0 .\u003Cbr\u003Eset tl to 0 .\u003Cbr\u003E\u003Cbr\u003Eset E to ( TargetH - ALT:RADAR ) .\u003Cbr\u003Eset D to 0 .\u003Cbr\u003E\u003Cbr\u003Eprint \u0022waiting...\u0022.\u003Cbr\u003E\u003Cbr\u003Euntil  verticalspeed \u0026lt; -2  {\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Suicide Burn...\u0022 .\u003Cbr\u003E\u003Cbr\u003ESAS off.\u003Cbr\u003E\u003Cbr\u003Euntil ( abs(E) \u0026lt; 10 ) AND ( ( abs(verticalspeed) \u0026lt; 2 ) OR ( tl \u0026lt; 0 ) ) {\u003Cbr\u003E\u003Cbr\u003E\tset TMR to ( maxthrust / mass ) \u002B 0.01 .\u003Cbr\u003E\tset E to ( TargetH - ALT:RADAR ) .\u003Cbr\u003E\u003Cbr\u003E\tset tl to 2 * tlmargin * E / verticalspeed - .5 .\u003Cbr\u003E\tset thr to ( ( (verticalspeed / tl - gl) ^ 2 \u002B surfacespeed ^ 2 / tl ^ 2 ) ^ .5) / TMR .\u003Cbr\u003E\u003Cbr\u003E\tset q to (surfacespeed * verticalspeed)/( verticalspeed^2 - 2*E).\u003Cbr\u003E\tset aq to abs(q).\u003Cbr\u003E\tset theta to (-90)*( q^5 \u002B 83.29*q^3 \u002B 518.1*q )/( aq^5 \u002B 96.08*aq^3 \u002B 535.5*aq \u002B 597.9 ).\u003Cbr\u003E\u003Cbr\u003E\tset lat1 to latitude .\u003Cbr\u003E\tset lon1 to longitude .\u003Cbr\u003E\tset lat2 to latitude .\u003Cbr\u003E\tset lon2 to longitude .\u003Cbr\u003E\u003Cbr\u003E\tset bearingw to ( lon2 - lon1 ) / cos( lat2 ) .\u003Cbr\u003E\tset bearingn to ( lat2 - lat1 ) .\u003Cbr\u003E\u003Cbr\u003E\tset bearingm to ( bearingw^2 \u002B bearingn^2 )^.5 \u002B 0.000001 .\u003Cbr\u003E\u003Cbr\u003E\tlock steering to up \u002B R( theta * bearingn / bearingm , theta * bearingw / bearingm , 180) .\u003Cbr\u003E\u003Cbr\u003E\tif thr \u0026lt; 0 {\u003Cbr\u003E\t\tlock throttle to 0 .\u003Cbr\u003E\t}.\u003Cbr\u003E\tif thr \u0026gt; 1 {\u003Cbr\u003E\t\tlock throttle to 1 .\u003Cbr\u003E\t}.\u003Cbr\u003E\tif ( thr \u0026lt; 1 ) AND ( thr \u0026gt; thrmargin ) {\u003Cbr\u003E\t\tlock throttle to thr. \u003Cbr\u003E\t}.\u003Cbr\u003E\u003Cbr\u003E\tprint \u0022tl:  \u0022 \u002B tl \u002B \u0022      \u0022 at (20,0).\u003Cbr\u003E\tprint \u0022bw: \u0022 \u002B bearingw/bearingm \u002B \u0022      \u0022 at (20,1).\u003Cbr\u003E\tprint \u0022the: \u0022 \u002B theta \u002B \u0022      \u0022 at (20,2).\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Hovering...\u0022 .\u003Cbr\u003E\u003Cbr\u003Euntil abs(verticalspeed) \u0026lt; .05 {\u003Cbr\u003E\u003Cbr\u003E\tset theta to surfacespeed * 5.\u003Cbr\u003E\u003Cbr\u003E\tset WTR to (mass*gl/maxthrust).\u003Cbr\u003E\tset D to (-.2) * ( verticalspeed - targetv ) * WTR.\u003Cbr\u003E\tset thr to D \u002B WTR* cos( theta ).\u003Cbr\u003E\u003Cbr\u003E\tset lat1 to latitude.\u003Cbr\u003E\tset lon1 to longitude.\u003Cbr\u003E\tset lat2 to latitude.\u003Cbr\u003E\tset lon2 to longitude.\u003Cbr\u003E\u003Cbr\u003E\tset bearingw to ( lon2 - lon1 ) / cos( lat2 ) .\u003Cbr\u003E\tset bearingn to ( lat2 - lat1 ) .\u003Cbr\u003E\u003Cbr\u003E\tset bearingm to ( bearingw^2 \u002B bearingn^2 )^.5 \u002B 0.000001 .\u003Cbr\u003E\u003Cbr\u003E\tlock steering to up \u002B R( theta*bearingn/bearingm, theta*bearingw/bearingm , 180) .\u003Cbr\u003E\u003Cbr\u003E\tif thr \u0026lt; 0 {\u003Cbr\u003E\t\tlock throttle to 0. } .\u003Cbr\u003E\tif thr \u0026gt; 1 {\u003Cbr\u003E\t\tlock throttle to 1 . } .\u003Cbr\u003E\tif (thr \u0026lt; 1) AND (thr \u0026gt; 0) {\u003Cbr\u003E\t\tlock throttle to thr. } .\u003Cbr\u003E} .\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Landed.\u0022.\u003Cbr\u003E\u003Cbr\u003Eset throttle to 0.\u003Cbr\u003E\u003Cbr\u003Eunlock steering.\u003Cbr\u003Eprint \u0022Exiting..\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI also came up with an approximation to the atan function. It has a maximum error of about 2 degrees, but its close enough for this. The code calculates theta = atand( q ).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset q to something.\u003Cbr\u003Eset aq to abs(q).\u003Cbr\u003Eset theta to (-90)*( q^5 \u002B 83.29*q^3 \u002B 518.1*q )/( aq^5 \u002B 96.08*aq^3 \u002B 535.5*aq \u002B 597.9 ).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Sma","CreatedById":67377,"CreatedDateTime":"2013-09-16T12:56:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003ENice that the surface:vector is there. Feels like a waste of time that I went through the effort of finding it from the latitude and longitude, but it\u0027s better now that it\u0027s there.\u003Cp\u003EIs there anything in the underlying mod API that lets you detect the existence of scatter rocks? If you have terrain scatter on, I think it would be a fun challenge to write a rover script that tries to head toward a destination location, BUT has to have the logic to stop and steer around rocks on the way. Right now there\u0027s no way to detect a rock without hitting it and noticing there\u0027s something preventing motion. Anyway, it\u0027s a good update. I like it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom my understanding, ground scatter (rocks) don\u0027t have a collision mesh and as such wouldn\u0027t stop you, you just plow through them. Though that may change in the future...what with sample collection (maybe, but not likely).\u003C/p\u003E\n"},{"CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2013-09-16T13:02:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JewelShisen\u0022 data-cite=\u0022JewelShisen\u0022\u003E\u003Cdiv\u003EUmm... Where is the video?? I looked at his youtube at it is only up to 0.5\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETop of dev blog\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://kosdev.blogspot.com/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kosdev.blogspot.com/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"KevinLaity","CreatedById":68050,"CreatedDateTime":"2013-09-16T14:02:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Bizz Keryear\u0022 data-cite=\u0022Bizz Keryear\u0022\u003E\u003Cdiv\u003EFirst thing 1st. I think it is a bit strange for a plugin created after 0.20 to use the old legacy directories.\u003Cp\u003EInstead of \u0026lt;KSP directrory\u0026gt;/plugins it should be in \u0026lt;KSP directrory\u0026gt;/GameData/KOS/plugins\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is mostly fixed in 0.6. I\u0027ve been working on this mod since 0.18, which is why it started out in that structure. \u003C/p\u003E\u003Cp\u003EI hadn\u0027t realized by the time I released the mod that the official structure had changed, and afterward it seemed like there were a lot more important things to take care of.\u003C/p\u003E\n"},{"CreatedByName":"KevinLaity","CreatedById":68050,"CreatedDateTime":"2013-09-16T14:04:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JewelShisen\u0022 data-cite=\u0022JewelShisen\u0022\u003E\u003Cdiv\u003EUmm... Where is the video?? I looked at his youtube at it is only up to 0.5\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhoops! I did set it to public after uploading but I guess it didn\u0027t register? It should be viewable on my channel now.\u003C/p\u003E\n"},{"CreatedByName":"JewelShisen","CreatedById":71737,"CreatedDateTime":"2013-09-16T14:12:58Z","Content":"\n\u003Cp\u003Ewith the new surface velocity vector couldn\u0027t you make a simple surface retrograde in code by putting it like this?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elock steering to surface:velocity * V(-1,-1,-1)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr something like that? I never learned vector math in school but it seems like that would point you in the reverse direction right?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-16T14:25:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Sma\u0022 data-cite=\u0022Sma\u0022\u003E\u003Cdiv\u003EFrom my understanding, ground scatter (rocks) don\u0027t have a collision mesh and as such wouldn\u0027t stop you, you just plow through them. Though that may change in the future...what with sample collection (maybe, but not likely).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWow. I guess now that I think of it I never actually tried driving straight through the rocks. I just assumed they were real physical barriers and took care to never run into them.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-16T14:26:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JewelShisen\u0022 data-cite=\u0022JewelShisen\u0022\u003E\u003Cdiv\u003Ewith the new surface velocity vector couldn\u0027t you make a simple surface retrograde in code by putting it like this?\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elock steering to surface:velocity * V(-1,-1,-1)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr something like that? I never learned vector math in school but it seems like that would point you in the reverse direction right?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe problem is that in real vector math there\u0027s more than one type of \u0022multiply\u0022 and I\u0027m not entirely sure which type is being done here.\u003C/p\u003E\n"},{"CreatedByName":"JewelShisen","CreatedById":71737,"CreatedDateTime":"2013-09-16T14:32:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe problem is that in real vector math there\u0027s more than one type of \u0022multiply\u0022 and I\u0027m not entirely sure which type is being done here.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESeems like all you would need to do though is to just flip the vector around though.\u003C/p\u003E\n"},{"CreatedByName":"GavinZac","CreatedById":68719,"CreatedDateTime":"2013-09-16T14:49:16Z","Content":"\n\u003Cp\u003EAnyone tried the new version to see if \u0022BREAK.\u0022 works now? I know we can get around it with a variety of IF statements, but if it\u0027s in the documentation it should work.\u003C/p\u003E\u003Cp\u003EAlso, I\u0027m having trouble having variables operate on themselves, e.g. SET x TO x \u002B 1. I\u0027m having to write SET Y TO X. SET X TO Y\u002B1. Last thing we should be doing on a restricted memory computer!\u003C/p\u003E\u003Cp\u003EAnd these two issues combined makes my code\u0027s readability horrible. I\u0027m happy about comments though!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-16T14:53:25Z","Content":"\n\u003Cp\u003EVECTORS\u0027 XYZ\u0027s WORK NOW!\u003C/p\u003E\u003Cp\u003EIt doesn\u0027t seem to be documented anywhere, but I just tested it and noticed that this now works:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset vec to V(1,2,3).\u003Cbr\u003Eset xPart to vec:x.\u003Cbr\u003Eset yPart to vec:y.\u003Cbr\u003Eset zPart to vec:z.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is major. If we can get the 3 parts now, then that opens up a lot of new options. For example, dot products and cross products and scalar magnitudes.\u003C/p\u003E\u003Cp\u003EWith dot products for example, you can answer the question \u0022how close are these two vectors to being parallel to each other?\u0022\u003C/p\u003E\u003Cp\u003EWith access to the 3 parts, we can calculate things like inclination-altering burn directions (the normal and antinormal directions will be perpendicular to the prograde vector).\u003C/p\u003E\u003Cp\u003EThank You. THIS, more than anything else, is what I\u0027ve been wishing for. I have no idea if it appeared in this version or an earlier one, but I just tried it on a whim and was glad it now exists.\u003C/p\u003E\n"},{"CreatedByName":"GavinZac","CreatedById":68719,"CreatedDateTime":"2013-09-16T14:55:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EVECTORS\u0027 XYZ\u0027s WORK NOW!\u003Cp\u003EIt doesn\u0027t seem to be documented anywhere, but I just tested it and noticed that this now works:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset vec to V(1,2,3).\u003Cbr\u003Eset xPart to vec:x.\u003Cbr\u003Eset yPart to vec:y.\u003Cbr\u003Eset zPart to vec:z.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is major. If we can get the 3 parts now, then that opens up a lot of new options. For example, dot products and cross products and scalar magnitudes.\u003C/p\u003E\u003Cp\u003EWith dot products for example, you can answer the question \u0022how close are these two vectors to being parallel to each other?\u0022\u003C/p\u003E\u003Cp\u003EWith access to the 3 parts, we can calculate things like inclination-altering burn directions (the normal and antinormal directions will be perpendicular to the prograde vector).\u003C/p\u003E\u003Cp\u003EThank You. THIS, more than anything else, is what I\u0027ve been wishing for. I have no idea if it appeared in this version or an earlier one, but I just tried it on a whim and was glad it now exists.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have no idea what any of this means, but I hope you do something awesome with it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-16T14:58:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JewelShisen\u0022 data-cite=\u0022JewelShisen\u0022\u003E\u003Cdiv\u003ESeems like all you would need to do though is to just flip the vector around though.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wrote that before I found out that we now have access to :x, :y, and :z seperately now. That didn\u0027t used to be supported, which limited the usefulness of vectors. Yes, of course now that we can get the x y and z parts all you have to do is this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset surfProVec to vector:surface.\u003Cbr\u003Eset surfRetroVec to V( 0 - surfProVec:x, 0 - surfProVec:y, 0 - surfProVec:z ).\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E(The reason it says: \u00220 - surfProVec:x\u0022 instead of just \u0022-surfProVec:x\u0022 is that I haven\u0027t tested yet to see if unary minus signs are being parsed correctly yet. They didn\u0027t used to be.)\u003C/p\u003E\n"},{"CreatedByName":"JewelShisen","CreatedById":71737,"CreatedDateTime":"2013-09-16T15:00:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022GavinZac\u0022 data-cite=\u0022GavinZac\u0022\u003E\u003Cdiv\u003EI have no idea what any of this means, but I hope you do something awesome with it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt means you could making a docking script, if you know how to do the maths.\u003C/p\u003E\n"},{"CreatedByName":"StainX","CreatedById":57820,"CreatedDateTime":"2013-09-16T15:06:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JewelShisen\u0022 data-cite=\u0022JewelShisen\u0022\u003E\u003Cdiv\u003EIt means you could making a docking script, if you know how to do the maths.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe can access RCS already?\u003C/p\u003E\n"},{"CreatedByName":"JewelShisen","CreatedById":71737,"CreatedDateTime":"2013-09-16T15:10:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022StainX\u0022 data-cite=\u0022StainX\u0022\u003E\u003Cdiv\u003EWe can access RCS already?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot sure. Doubt it though. But once we can having the individual vectors will allow for it to happen!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-16T16:05:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JewelShisen\u0022 data-cite=\u0022JewelShisen\u0022\u003E\u003Cdiv\u003EIt means you could making a docking script, if you know how to do the maths.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EExcept that I just discovered that support for this:\u003C/p\u003E\u003Cp\u003Elock steering to up * V(1,2,3).\u003C/p\u003E\u003Cp\u003Ejust went away. I can\u0027t use the V() expression with \u0022up\u0022 or \u0022north\u0022 or \u0022steering\u0022 anymore in 0.6.\u003C/p\u003E\u003Cp\u003ESo now I\u0027m trying to figure out how I\u0027m supposed to convert from xyz distances to the new angle-based steering when the language no longer supports that expression, and it doesn\u0027t have the arc trig functions (arcsin, arccos, arctan) to convert from vector lengths to angles.\u003C/p\u003E\u003Cp\u003EI\u0027m getting the impression that despite giving us more information the removal of that expression \u0022up * V(1,2,2)\u0022 may make it actually harder in the new version.\u003C/p\u003E\u003Cp\u003EI\u0027m still messing with it trying to figure out how to do what I used to be able to do.\u003C/p\u003E\n"},{"CreatedByName":"giucam","CreatedById":21099,"CreatedDateTime":"2013-09-16T16:17:08Z","Content":"\n\u003Cp\u003EIs it me or the attitude control in 0.6 is much worse than 0.5? I can\u0027t keep my simple rocket going up straight, while in 0.5 it worked perfectly.\u003C/p\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-16T16:22:17Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003Eset tAngle to up \u002B V(x,y,z) \u002B R(0,0,roll).\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EYup. This worked yesterday. Now it\u0027s broken. I\u0027m pretty sure that is not desired behavior.\u003C/p\u003E\u003Cp\u003EI really don\u0027t want to have to redo all my steering once again. The new method is nice.\u003C/p\u003E\u003Cp\u003EThough as Steven points out, we still need the old way to work also for various reasons.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-16T16:35:15Z","Content":"\n\u003Cp\u003EIn 0.6 the ability to steer by a vector seems to be impossible now. How do I do this? Am I missing something?\u003C/p\u003E\u003Cp\u003EAs far as I can tell, in 0.6 only the following methods of steering now work:\u003C/p\u003E\u003Cp\u003EThe up \u002B R(...) method.\u003C/p\u003E\u003Cp\u003EThe up \u002B Q(...) method.\u003C/p\u003E\u003Cp\u003EThe new HEADING ... BY ... method.\u003C/p\u003E\u003Cp\u003EThese methods, that worked in 0.5, no longer work:\u003C/p\u003E\u003Cp\u003Eup \u002B V(...)\u003C/p\u003E\u003Cp\u003Eup * V(...)\u003C/p\u003E\u003Cp\u003EThey now say \u0022Expression error.\u0022\u003C/p\u003E\u003Cp\u003EIt seems that support for steering by vector has been removed.\u003C/p\u003E\u003Cp\u003EThis is a problem because without the reverse trig functions arctan, arccos, and arcsin, I don\u0027t know how to convert a vector\u0027s XYZ into the necessary angles.\u003C/p\u003E\u003Cp\u003EWhich means I can\u0027t steer using the new vector:surface. The math functions needed to transform those XYZ\u0027s into angles aren\u0027t there.\u003C/p\u003E\u003Cp\u003EI\u0027m considering implementing one of the approximation methods for the arc trig functions by series or by interpolation, just to get around this hurdle, and that seems a bit excessive, as the hurdle feels entirely artificial.\u003C/p\u003E\u003Cp\u003ERight now because of the loss of the V() functions, 0.6 actually is less useful than 0.5 and I\u0027m sad that I installed over the top of 0.5. I\u0027d like to go back until these problems are dealt with.\u003C/p\u003E\u003Cp\u003EI wouldn\u0027t mind the change to only be able to steer by angle if it was accompanied by the math functions to allow us to get an angle from the lengths of a vector (arcsin, arccos, arctan).\u003C/p\u003E\u003Cp\u003EThe sad irony is that in the same update that gave us the very useful velocity:surface vector, the ability to use that vector went away.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-16T16:44:10Z\u0022 title=\u002209/16/2013 04:44  PM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 16, 2013\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Payload","CreatedById":4540,"CreatedDateTime":"2013-09-16T17:03:59Z","Content":"\n\u003Cp\u003EWell it doesn\u0027t matter if I used the new system anyway. The steering is terrible now. It wont hold a heading even if you told it too. Reverting to the old version until this gets sorted out.\u003C/p\u003E\n"},{"CreatedByName":"JewelShisen","CreatedById":71737,"CreatedDateTime":"2013-09-16T17:09:17Z","Content":"\n\u003Cp\u003EI\u0027m having issues with it pitching over for the gravity turn on my test rocket.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2013-09-16T17:09:34Z","Content":"\n\u003Cp\u003EYeah I still have the older 0.5 ZIP file laying around so I\u0027m going back to 0.5 until vectors work again.\u003C/p\u003E\n"},{"CreatedByName":"JewelShisen","CreatedById":71737,"CreatedDateTime":"2013-09-16T17:17:53Z","Content":"\n\u003Cp\u003EDon\u0027t blame you. Without the vectors you can\u0027t make a probe land itself.\u003C/p\u003E\n"}]}