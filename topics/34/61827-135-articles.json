{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":135,"Articles":[{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-07-14T07:29:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Qigon\u0022 data-cite=\u0022Qigon\u0022\u003E\u003Cdiv\u003E Silly question, doesn\u0027t g decrease with distance? or is it too small a difference? \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot a silly question. There are two different g values being used here. \u003C/p\u003E\u003Cp\u003EThe g value when calculating mass flow rate is always 1 standard earth gravity (9.80665m/s\u003Csup\u003E2\u003C/sup\u003E, 9.81m/s\u003Csup\u003E2\u003C/sup\u003E is usually used for most stuff though). However since the ksp exposes the mass flow rate of the engines you don\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t need to calculate it, just add it all up from the different engines.\u003C/p\u003E\u003Cp\u003EThe g value in calculating the force due to gravity does decrease with distance and you can see my calculation for it in the code i put up (re-posting the line here for reference)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Elocal grav is -(body:mu/(body:radius\u002Bship:altitude)^2)*up:vector. // negavive magnitude to up vector is down.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Qigon\u0022 data-cite=\u0022Qigon\u0022\u003E\u003Cdiv\u003EWould it make sense to compute lift as the component along vessel:top and real drag as the component along surface velocity?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMostly yes. I am actually defining drag as the force that slows you down and lift as the force causing you to deviate. so the drag being along the surface velocity is correct. And while most of the time the lift is acting through vessel:top i am using the component at right angles to the surface velocity (so it could be coming out the side of your vessel too if you yaw to far.)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Qigon\u0022 data-cite=\u0022Qigon\u0022\u003E\u003Cdiv\u003E would you guys agree that terminal velocity is reached when the magnitude of drag equals mass times g, if we apply the above formulas?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-14T07:47:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ColKlonk\u0022 data-cite=\u0022ColKlonk\u0022\u003E\u003Cdiv\u003EAccording to this.. that speed is not right - the horizontal speed should be close to Zero from the start\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s literally just spitting out exactly what the KSP API says, for this:\u003C/p\u003E\u003Cp\u003EVessel.horizontalSrfSpeed\u003C/p\u003E\u003Cp\u003EI have no clue why that is returning weird numbers that don\u0027t make sense.\u003C/p\u003E\n"},{"CreatedByName":"damerell","CreatedById":123074,"CreatedDateTime":"2015-07-14T13:54:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ColKlonk\u0022 data-cite=\u0022ColKlonk\u0022\u003E\u003Cdiv\u003EAccording to this.. that speed is not right - the horizontal speed should be close to Zero from the start, relative to the SOI body (Earth), and should remain close to zero until the rocket pitches over from the vertical.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat\u0027s VESSEL:AIRSPEED? I\u0027d expect that to return what I first expected SURFACESPEED to return.\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk","CreatedById":137078,"CreatedDateTime":"2015-07-14T17:44:08Z","Content":"\n\u003Cp\u003EI\u0027d expect Vessel:Airspeed = (Vessel:SURFACESPEED^2 \u002B Vessel:VERTICALSPEED^2) ^0.5... according to the KOS definitions.\u003C/p\u003E\u003Cp\u003Ewhere the arctan(VERTICALSPEED/SURFACESPEED) is your \u0027prograde\u0027 angle while lifting off.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk","CreatedById":137078,"CreatedDateTime":"2015-07-14T21:08:09Z","Content":"\n\u003Cp\u003EI\u0027m not sure whether it me or not, but I notice that when staging.. the throttle reverts back to the \u0027launch\u0027 throttle setting... Is this a bee, or a feature \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI get around it with..\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E IF STAGE:LQDOXYGEN \u0026lt; 0.1 // LqdOxy tanks on first two stages\u003C/p\u003E\u003Cp\u003E { // are enough to get us into orbit.\u003C/p\u003E\u003Cp\u003E STAGE. // Staging causes throttle to reset...!!\u003C/p\u003E\u003Cp\u003E LOCK THROTTLE TO 1. // Annoying, but lets max it anyway\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E;***********************************************************\u003C/p\u003E\u003Cp\u003E; EXTRA QUESTION AS THE WEBSITE IS COMBINING MY TWO POSTS :-)\u003C/p\u003E\u003Cp\u003E;***********************************************************\u003C/p\u003E\u003Cp\u003EI seem to be struggling a bit here.. maybe with common sense \u003C/p\u003E\u003Cp\u003EI trying as much to simplify the launch to orbit, in \u0027cooked\u0027 mode, but have a problem in converting a vector into a HEADING(direction, pitch).\u003C/p\u003E\u003Cp\u003EEssentially I\u0027d like to convert the PROGRADE, RETROGRADE, FACING vectors..etc, to HEADING(direction, pitch).\u003C/p\u003E\u003Cp\u003EMaybe I\u0027m having a dense moment, but the documentation doesn\u0027t seem to be clear about this ?? \u003C/p\u003E\u003Cp\u003EThanks for any help\u003C/p\u003E\u003Cp\u003EDer Col\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-14T20:52:30Z\u0022 title=\u002207/14/2015 08:52  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 14, 2015\u003C/time\u003E by ColKlonk\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-07-14T22:11:17Z","Content":"\n\u003Cp\u003Eif @\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/55605-VFB1210\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003EVFB1210\u003C/strong\u003E\u003C/a\u003E or anyone else wants to give these a go and fly around with lift and drag arrows coming out their vessel here is my lift/drag script.\u003C/p\u003E\u003Cp\u003Eyou will need to stick an accelerometer (the science experiment) on the vessel and the script still produces the occasional spike in lift or drag. \u003C/p\u003E\u003Cp\u003Efeedback with any improvements or fixes would be greatly appreciated.\u003C/p\u003E\u003Cp\u003Eexample_lib_lift_drag.ks\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset ag1 to false.\u003Cbr\u003Erun lib_lift_drag.ks.\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003E\u003Cbr\u003Eset drag to vecdrawargs(v(0,0,0),v(0,0,0),red,\u0022Drag\u0022,1,True).\u003Cbr\u003Eset lift to vecdrawargs(v(0,0,0),v(0,0,0),blue,\u0022lift\u0022,1,True).\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Lift:\u0022 at (0,1).\u003Cbr\u003Eprint \u0022Drag:\u0022 at (0,3).\u003Cbr\u003E\u003Cbr\u003Euntil ag1 {\u003Cbr\u003E set vec to lift_drag().\u003Cbr\u003E set lift:vec to vxcl(ship:srfprograde:vector,vec).\u003Cbr\u003E set drag:vec to vdot(vec,ship:srfprograde:vector)*ship:srfprograde:vector.\u003Cbr\u003E print round(lift:vec:mag,2) \u002B\u0022 kN     \u0022 at (6,1).\u003Cbr\u003E print round(drag:vec:mag,2) \u002B\u0022 kN     \u0022 at (6,3).\u003Cbr\u003E}.\u003Cbr\u003Eset ag1 to false.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Elib_lift_drag.ks\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@LAZYGLOBAL off.\u003Cbr\u003E\u003Cbr\u003Efunction lift_drag {\u003Cbr\u003E local M is ship:mass.\u003Cbr\u003E local a is ship:sensors:acc.\u003Cbr\u003E local grav is -(body:mu/(body:radius\u002Bship:altitude)^2)*up:vector. // negavive magnitude to up vector is down.\u003Cbr\u003E local thrust is 0.     // calculated by queriying the engines\u003Cbr\u003E local fuel_flow is 0.// calculated by queriying the engines\u003Cbr\u003E local eng_list is list().\u003Cbr\u003E list engines in eng_list.\u003Cbr\u003E for eng in eng_list {\u003Cbr\u003E  set thrust to thrust\u002Beng:thrust.\u003Cbr\u003E  set fuel_flow to fuel_flow \u002B eng:fuelflow.\u003Cbr\u003E }.\u003Cbr\u003E local resultant is M * ( a - grav ) \u002B fuel_flow * vxcl(ship:up:vector,ship:velocity:surface) - thrust * ship:facing:vector.\u003Cbr\u003E return resultant.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"damerell","CreatedById":123074,"CreatedDateTime":"2015-07-14T22:34:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ColKlonk\u0022 data-cite=\u0022ColKlonk\u0022\u003E\u003Cdiv\u003EI\u0027d expect Vessel:Airspeed = (Vessel:SURFACESPEED^2 \u002B Vessel:VERTICALSPEED^2) ^0.5... according to the KOS definitions.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBut we know those seem to be inaccurate. So what _is_ it in the situation we got an image of?\u003C/p\u003E\n"},{"CreatedByName":"ABZB","CreatedById":98947,"CreatedDateTime":"2015-07-15T00:11:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ColKlonk\u0022 data-cite=\u0022ColKlonk\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI trying as much to simplify the launch to orbit, in \u0027cooked\u0027 mode, but have a problem in converting a vector into a HEADING(direction, pitch).\u003C/p\u003E\u003Cp\u003EEssentially I\u0027d like to convert the PROGRADE, RETROGRADE, FACING vectors..etc, to HEADING(direction, pitch).\u003C/p\u003E\u003Cp\u003EMaybe I\u0027m having a dense moment, but the documentation doesn\u0027t seem to be clear about this ?? \u003C/p\u003E\u003Cp\u003EThanks for any help\u003C/p\u003E\u003Cp\u003EDer Col\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is what I did:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// run program as follows: -\u0026gt;program name -\u0026gt;LL(Start ALTITUDE for Gravity Turn) i.e: RUN LL(5) starts altitude turn at 5 km\u003Cbr\u003E\u003Cbr\u003EPARAMETER StartTurnAt.\u003Cbr\u003E\u003Cbr\u003ELOCK WantedPitch TO MAX(MIN((90 - (90*(Ship:ALTITUDE/BODY:ATM:HEIGHT)))*(90/(90 - 90 * (StartTurnAt / BODY:ATM:HEIGHT))),90),0).\u003Cbr\u003ELOCK STEERING TO HEADING(90,WantedPitch).\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBasically, I lock my orientation to due east, with the pitch scaling as an asymptotic curve from 90 to 0 between the start of the turn and the end of the atmosphere. If I need to launch to a different plane, then I could edit the \u002790\u0027 directly (although that is really more finicky - you really want to head a little to the side of due north/south, as to cancel the unwanted velocity due to rotation of planet).\u003C/p\u003E\u003Cp\u003Ein the LOCK statement, the MAX prevents the ship from turning back down towards the planet (pitch \u0026lt; 0) if I am above the atmosphere. The MIN statement is what allows the altitude turn start height to work (Basically, the function part returns pitch \u0026gt; 90 until the desired height is reached)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-15T00:14:00Z\u0022 title=\u002207/15/2015 12:14  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 15, 2015\u003C/time\u003E by ABZB\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"thegreatgonz","CreatedById":135977,"CreatedDateTime":"2015-07-15T01:38:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIt\u0027s literally just spitting out exactly what the KSP API says, for this:\u003Cp\u003EVessel.horizontalSrfSpeed\u003C/p\u003E\u003Cp\u003EI have no clue why that is returning weird numbers that don\u0027t make sense.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKER also reports weird horizontal velocities. I was \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/18230-1-0-4-Kerbal-Engineer-Redux-v1-0-18-0?p=2059961\u0026amp;viewfull=1#post2059961\u0022 rel=\u0022external nofollow\u0022\u003Etold\u003C/a\u003E over in that thread that it\u0027s a bug in recent versions of stock KSP.\u003C/p\u003E\u003Cp\u003E...and just as I was writing this, the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/18230-1-0-4-Kerbal-Engineer-Redux-v1-0-18-0?p=2080746\u0026amp;viewfull=1#post2080746\u0022 rel=\u0022external nofollow\u0022\u003Enew KER release\u003C/a\u003E dropped, with a fix for this. Whatever they\u0027re doing, kOS could in theory do the same thing.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-15T03:29:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ColKlonk\u0022 data-cite=\u0022ColKlonk\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI seem to be struggling a bit here.. maybe with common sense \u003C/p\u003E\u003Cp\u003EI trying as much to simplify the launch to orbit, in \u0027cooked\u0027 mode, but have a problem in converting a vector into a HEADING(direction, pitch).\u003C/p\u003E\u003Cp\u003EEssentially I\u0027d like to convert the PROGRADE, RETROGRADE, FACING vectors..etc, to HEADING(direction, pitch).\u003C/p\u003E\u003Cp\u003EMaybe I\u0027m having a dense moment, but the documentation doesn\u0027t seem to be clear about this ?? \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis may help you:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/KSP-KOS/KSLib/blob/master/library/lib_navball.ks\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KSLib/blob/master/library/lib_navball.ks\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-15T04:06:57Z","Content":"\n\u003Cp\u003EThe record of the live stream from tonight is now up on Twitch:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.twitch.tv/dunbaratu/c/6959259\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.twitch.tv/dunbaratu/c/6959259\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-15T06:45:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Qigon\u0022 data-cite=\u0022Qigon\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI never could imagine that mass flow would play here, but hey this is rocket science, where anything can happen in equations. Out of curiosity, what values did you get while flying? \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETo be truthful, even I have a difficult time wrapping my mind around how (dm/dt)\u003Cstrong\u003Ev\u003C/strong\u003E actually plays into the equation, but the math doesn\u0027t lie, and the math that derives it is very simple, and makes it plain that it cannot be ignored. (Provided you know Calculus, that is.) But physically, it \u003Cem\u003Eis\u003C/em\u003E pretty unintuitive.\u003C/p\u003E\u003Cp\u003E(Again, as in my last post, bolded values are vectors. Just for bookkeeping and clarity.)\u003C/p\u003E\u003Cp\u003ESo, to start off, we have commonly taught version of Newton\u0027s 2nd law: \u003Cstrong\u003E\u00C3\u017D\u00C2\u00A3F\u003C/strong\u003E = m\u003Cstrong\u003Ea\u003C/strong\u003E. This is read as \u0022The sum of all external forces on an object (\u003Cstrong\u003E\u00C3\u017D\u00C2\u00A3F\u003C/strong\u003E) is equal to the mass of the object multiplied by the rate at which it accelerates.\u0022 As I said in a previous post, this is not \u003Cem\u003E100%\u003C/em\u003E true in every possible situation, but it works in the case of a constant mass. (In fact, as you\u0027ll see later, it actually IS this in the case of constant mass. The general case will simplify down to this.)\u003C/p\u003E\u003Cp\u003EHowever, to get the whole story, you need the equation \u003Cstrong\u003E\u00C3\u017D\u00C2\u00A3F\u003C/strong\u003E=d\u003Cstrong\u003Ep\u003C/strong\u003E/dt. This is read as \u0022The sum of all external forces on an object is equal to the time derivative of its momentum.\u0022 Now, I\u0027m sure you know what momentum is, it is mass multiplied by velocity! Or m\u003Cstrong\u003Ev\u003C/strong\u003E. But, what the heck does \u0022time derivative\u0022 mean? \u003C/p\u003E\u003Cp\u003EWell, in calculus, there are three big concepts: limits, derivatives, and integrals. Limits hare extremely useful tools, but they\u0027re not relevant here. All you need to know about them for now is that they are used in the construction of the next two tools we gain from calculus: derivatives and integrals. Integrals are also extremely useful, but also very confusing, and not needed here, so we will throw them out for now too. That leaves us with derivatives, which is the relevant topic. A derivative, in short, is the rate of change of something. It can be the same everywhere (as is the case in a linear function), it can change smoothly according to its own function (as with any polynomial that isn\u0027t a linear function), or it can even jump around pretty wildly in some weird cases. But, for any function which has a derivative, the derivative will tell you how fast that function is changing at any point you want! (Well, not \u003Cem\u003Eany\u003C/em\u003E point you want, there are some rules. But they\u0027re not relevant to us here.) That is what a derivative is, it is a function that tells you how fast another function is changing at any point you need to know. In the case of a time derivative, we are concerned with how our function changes as time changes. You can take a functions derivative with respect to any variable you want, but time is the one we are looking for here. Whenever you see something like dm/dt, that is what it means. You want to know how the top variable (m, in our case) changes as the bottom variable (t) changes. Don\u0027t worry about the d\u0027s, those are just part of the notation.\u003C/p\u003E\u003Cp\u003ESo, for the sake of brevity, we are going to skip a \u003Cstrong\u003Elot\u003C/strong\u003E of steps here, stuff like calculating derivatives by hand, and go right to the shortcuts! As it turns out, derivatives of certain types of functions always follow the same rules, and instead of doing everything out the long way, you can use these rules to calculate your derivative much quicker. The rule we are interested in is called \u003Cstrong\u003EThe Product Rule\u003C/strong\u003E.\u003C/p\u003E\u003Cp\u003EThe product rule says that whenever you have a function (which we will call h(t)) that is equal to two \u003Cem\u003Eother\u003C/em\u003E functions multiplied by each other, (e.g. h(t) = f(t)*g(t)) the derivative of h(t) is equal to the derivative of the first function, multiplied by the second function, plus the first function multiplied by the derivative of the second function. (dh/dt = df/dt * g(t) \u002B f(t) * dg/dt)\u003C/p\u003E\u003Cp\u003ENow that we have our rule, let\u0027s see how it applies to what we were talking about: we know that \u003Cstrong\u003E\u00C3\u017D\u00C2\u00A3F\u003C/strong\u003E = d\u003Cstrong\u003Ep\u003C/strong\u003E/dt. And we know that \u003Cstrong\u003Ep\u003C/strong\u003E = m\u003Cstrong\u003Ev\u003C/strong\u003E. And we know how to take the derivative of two things multiplied together, so let\u0027s do that! Our result ends up being d\u003Cstrong\u003Ep\u003C/strong\u003E/dt = (dm/dt) * \u003Cstrong\u003Ev\u003C/strong\u003E \u002B m * (d\u003Cstrong\u003Ev\u003C/strong\u003E/dt). Now, it just so happens that d\u003Cstrong\u003Ev\u003C/strong\u003E/dt (the rate of change of velocity as time changes) has its own name: acceleration. It also has its own symbol: \u003Cstrong\u003Ea\u003C/strong\u003E. So we\u0027ll plug \u003Cstrong\u003Ea\u003C/strong\u003E in for d\u003Cstrong\u003Ev\u003C/strong\u003E/dt so things get less cluttered.\u003C/p\u003E\u003Cp\u003ENow we have \u003Cstrong\u003E\u00C3\u017D\u00C2\u00A3F\u003C/strong\u003E = d\u003Cstrong\u003Ep\u003C/strong\u003E/dt = (dm/dt) * \u003Cstrong\u003Ev\u003C/strong\u003E \u002B m\u003Cstrong\u003Ea\u003C/strong\u003E. This is the general form of Newton\u0027s 2nd law. But, most of the time when you\u0027re using it, the mass of the thing your using it on (such as a billiard ball, to pull an example out of a hat) doesn\u0027t change at all. Ever. Period. In this case, dm/dt (the rate of change of mass as time changes) is 0. Everywhere. Always. So, if we plug that in, we get \u003Cstrong\u003E\u00C3\u017D\u00C2\u00A3F\u003C/strong\u003E = d\u003Cstrong\u003Ep\u003C/strong\u003E/dt = 0 * \u003Cstrong\u003Ev\u003C/strong\u003E \u002B m\u003Cstrong\u003Ea\u003C/strong\u003E = m\u003Cstrong\u003Ea\u003C/strong\u003E. In this case, the bit with dm/dt goes away, and the law simplifies down to what you were taught in school. But, in our case, we have rockets that do little else but throw their mass away really fast so they can get to space. (Or the ground 100 feet from the launch pad.) In this case, our mass is \u003Cem\u003Ealways\u003C/em\u003E changing, so dm/dt is \u003Cem\u003Enever\u003C/em\u003E zero, and so that part of the equation \u003Cem\u003Enever\u003C/em\u003E goes away, and so we can\u0027t pretend it doesn\u0027t exist, we have to take it into account. That\u0027s the math, and the math doesn\u0027t lie.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ETL;DR: I don\u0027t understand it either, but the math says it has to be there, and the math doesn\u0027t lie.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAlso, unfortunately I haven\u0027t had much time to play with KSP and experiment with this, as much as it\u0027s been gnawing at me. So I have no data to report. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk","CreatedById":137078,"CreatedDateTime":"2015-07-15T07:52:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ABZB\u0022 data-cite=\u0022ABZB\u0022\u003E\u003Cdiv\u003EThis is what I did:\u003Cp\u003EBasically, I lock my orientation to due east, with the pitch scaling as an asymptotic curve from 90 to 0 between the start of the turn and the end of the atmosphere. If I need to launch to a different plane, then I could edit the \u002790\u0027 directly (although that is really more finicky - you really want to head a little to the side of due north/south, as to cancel the unwanted velocity due to rotation of planet).\u003C/p\u003E\u003Cp\u003Ein the LOCK statement, the MAX prevents the ship from turning back down towards the planet (pitch \u0026lt; 0) if I am above the atmosphere. The MIN statement is what allows the altitude turn start height to work (Basically, the function part returns pitch \u0026gt; 90 until the desired height is reached)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks.. I\u0027ve done something similar.. but am stuck at how I\u0027d like to implement velocity control.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ESET m_Thrott to 1.\u003Cbr\u003ESET m_starthgt TO 500.\u003Cbr\u003ESET m_endhght TO 130000.\u003Cbr\u003ESET m_pitch TO 90.\u003Cbr\u003ESET m_heading TO 90 - 28.404.\u003Cbr\u003ESET dumpheight TO 110000.\u003Cbr\u003E\u003Cbr\u003E// START LAUNCH SEQUENCE //\u003Cbr\u003EPRINT \u0022COUNTDOWN SEQUENCE BEGIN\u0022.\u003Cbr\u003EFROM {local countdown is 5.} UNTIL countdown = 1 STEP {SET countdown to countdown - 1.} DO {\u003Cbr\u003E    PRINT \u0022...\u0022 \u002B countdown.\u003Cbr\u003E    WAIT 1.\u003Cbr\u003E}\u003Cbr\u003ELOCK THROTTLE TO m_Thrott .\u003Cbr\u003ELOCK STEERING TO UP.\u003Cbr\u003EWAIT 1.\u003Cbr\u003ESTAGE.\u003Cbr\u003E\u003Cbr\u003E// Rotate to correct heading\u003Cbr\u003E// This takes about 350m\u003Cbr\u003ECLEARSCREEN.\u003Cbr\u003EPRINT \u0022ROTATING TO HEADING: \u0022 \u002B m_heading.\u003Cbr\u003ELOCK STEERING TO HEADING(m_heading , m_pitch).\u003Cbr\u003E\u003Cbr\u003E// Dump egg fairing when over 110km\u003Cbr\u003E// You can put this trigger anywhere - better earlier than late :-)\u003Cbr\u003E\u003Cbr\u003EWHEN SHIP:ALTITUDE \u0026gt; dumpheight THEN\u003Cbr\u003E{\u003Cbr\u003E  toggle ag1.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E// Pitch over point and wait a few second\u003Cbr\u003E\u003Cbr\u003EWAIT UNTIL SHIP:ALTITUDE \u0026gt; m_starthgt.\u003Cbr\u003ELOCK STEERING TO HEADING(m_heading , 87).\u003Cbr\u003EWAIT UNTIL SHIP:ALTITUDE \u0026gt; m_starthgt \u002B 400.\u003Cbr\u003E\u003Cbr\u003E// This control loop continues until we exit the atmosphere at 130km\u003Cbr\u003E// then the Orbit stabilisation loop takes over.\u003Cbr\u003E\u003Cbr\u003EUNTIL SHIP:ALTITUDE \u0026gt; end_height\u003Cbr\u003E{\u003Cbr\u003E  IF STAGE:LQDOXYGEN \u0026lt; 0.1    // LqdOxy tanks on first two stages\u003Cbr\u003E  {                // are enough to get us into orbit.\u003Cbr\u003E    STAGE.            // Staging causes throttle to reset...!!\u003Cbr\u003E    LOCK THROTTLE TO 1.        // Annoying, but lets max it anyway\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  SET m_pitch TO 87 * ((m_endhght - SHIP:ALTITUDE)/end_height).\u003Cbr\u003E  IF m_pitch \u0026lt; 0 { SET m_pitch TO 0.}\u003Cbr\u003E  LOCK STEERING TO HEADING(m_heading , m_pitch).\u003Cbr\u003E\u003Cbr\u003E// Put throttle control here, based on difference between\u003Cbr\u003E// prograde and facing vectors\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003ECLEARSCREEN.\u003Cbr\u003EPRINT \u0022STARTING ORBITAL MANEUVER:\u0022.\u003Cbr\u003ELOCK THROTTLE TO 1.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThanks all.\u003C/p\u003E\u003Cp\u003EI\u0027ll have gander at the other code examples...\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2015-07-15T21:09:46Z","Content":"\n\u003Cp\u003EFrom what I\u0027ve learned from the current version of kOS let me run my idea of how to organize library code by you. A set of library files, like\u003C/p\u003E\u003Cp\u003E\u003Cem\u003Enodes.ks\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Efunction aponode {\u003Cbr\u003E    parameter  altitude.\u003Cbr\u003E    local myvar is 1.\u003Cbr\u003E    ...\u003Cbr\u003E}.\u003Cbr\u003Efunction perinode {\u003Cbr\u003E    parameter  altitude.\u003Cbr\u003E    ...\u003Cbr\u003E}.\u003Cbr\u003Efunction exenode {\u003Cbr\u003E    ...\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand \u003Cem\u003Emission.ks\u003C/em\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Erun loadfuncs.\u003Cbr\u003Erun aponode(100).\u003Cbr\u003Erun exenode().\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewill require to preload the functions in \u003Cem\u003Eloadfuncs.ks\u003C/em\u003E:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Erun nodes.\u003Cbr\u003E// more library files to be added\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMakes sense or are there better solutions recommended?\u003C/p\u003E\n"},{"CreatedByName":"Qigon","CreatedById":141819,"CreatedDateTime":"2015-07-16T01:31:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TDW\u0022 data-cite=\u0022TDW\u0022\u003E\u003Cdiv\u003Eif @\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/55605-VFB1210\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003EVFB1210\u003C/strong\u003E\u003C/a\u003E or anyone else wants to give these a go and fly around with lift and drag arrows coming out their vessel here is my lift/drag script.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll sure try that when I get back to fixing my space plane that doesn\u0027t want to go on orbit. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThat\u0027s the math, and the math doesn\u0027t lie.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ETL;DR: I don\u0027t understand it either, but the math says it has to be there, and the math doesn\u0027t lie.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESometimes the truth is painful, and math is a b***,but it\u0027s true it doesn\u0027t lie. \u003C/p\u003E\u003Cp\u003EI\u0027ll reread about Oberth effect, I feel that\u0027s where it comes from. If that\u0027s the case, I\u0027ll be so happy to finally start grasping its meaning. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAlso, unfortunately I haven\u0027t had much time to play with KSP and experiment with this, as much as it\u0027s been gnawing at me. So I have no data to report. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m anxious to see it on my space plane, with arrows side by side with m.a\u003C/p\u003E\u003Cp\u003EThat was a calculus 101 along with rocket science 101. Thanks for putting it down as simple as it can get.\u003C/p\u003E\u003Cp\u003EEdit: well, oberth effect is not related to mass loss. \u003C/p\u003E\u003Cp\u003EBut if you integrate flow rate over time you\u0027re getting a lighter vessel, I\u0027ll try that way and see whether it leads me anywhere. God it\u0027s tough to think over a tiny phone screen! \u003C/p\u003E\u003Cp\u003EBTW I\u0027m still puzzled by that constant g, more on that later.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-16T04:26:35Z\u0022 title=\u002207/16/2015 04:26  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 16, 2015\u003C/time\u003E by Qigon\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DrCeph","CreatedById":88514,"CreatedDateTime":"2015-07-16T03:48:08Z","Content":"\n\u003Cp\u003EI like the integration with RemoteTech, mods that play nicely are great!\u003C/p\u003E\u003Cp\u003EAny thoughts on integration with AntennaRange as well? It has a simplified LoS and remote control model than RT, for us softcore types.\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-16T07:58:44Z","Content":"\n\u003Cp\u003EQuigon-integrating the flow rate leads to a lighter vessel because integration is actually the opposite of differentiation. When you integrate the mass flow rate, you go from knowing \u003Cem\u003Ehow fast\u003C/em\u003E you\u0027re throwing mass away to finding out \u003Cem\u003Ehow much\u003C/em\u003E you\u0027ve thrown away. And of course, once you\u0027ve thrown away some of your rocket\u0027s mass, it is going to be lighter.\u003C/p\u003E\u003Cp\u003EAnd the constant g has to do with the fact that is just a conversion factor, and in this case has nothing to do with the actual strength of the gravitational field. At some point, someone needed to dividentify by an arbitrary value with units [l]/[t]^2, and they said \u0022I\u0027m just going to use g, because everyone agrees that that is 9.80665m/s^2, or 32.174ft/s^2, or whatever it is in whatever units they want to use. They all know what it is, and there will be no confusion when calculating.\u0022\u003C/p\u003E\n"},{"CreatedByName":"Qigon","CreatedById":141819,"CreatedDateTime":"2015-07-16T14:15:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VFB1210\u0022 data-cite=\u0022VFB1210\u0022\u003E\u003Cdiv\u003EQuigon-integrating the flow rate leads to a lighter vessel because integration is actually the opposite of differentiation. When you integrate the mass flow rate, you go from knowing \u003Cem\u003Ehow fast\u003C/em\u003E you\u0027re throwing mass away to finding out \u003Cem\u003Ehow much\u003C/em\u003E you\u0027ve thrown away. And of course, once you\u0027ve thrown away some of your rocket\u0027s mass, it is going to be lighter.\u003Cp\u003EAnd the constant g has to do with the fact that is just a conversion factor, and in this case has nothing to do with the actual strength of the gravitational field. At some point, someone needed to dividentify by an arbitrary value with units [l]/[t]^2, and they said \u0022I\u0027m just going to use g, because everyone agrees that that is 9.80665m/s^2, or 32.174ft/s^2, or whatever it is in whatever units they want to use. They all know what it is, and there will be no confusion when calculating.\u0022\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGot it on the g thing, thanks for the patience.\u003C/p\u003E\u003Cp\u003EAbout flow rate, I still can\u0027t wrap my head around the v, maybe it makes more sense if I describe momentum from a kinectic point of view. There should be a downside to being some 15 years away from calculus anyway. I\u0027m quitting the math and will start running some experiments, maybe I\u0027d need to build a VTOL to have control over those variables and see how dm/dt behaves when aligned or orthogonal to v.\u003C/p\u003E\u003Cp\u003EMath won me again \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_embarrassed.gif\u0022 alt=\u0022:blush:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-16T20:22:29Z","Content":"\n\u003Cp\u003Edm/dt is a scalar value, a regular number, not a vector. It can\u0027t be parallel or orthogonal to v.\u003C/p\u003E\n"},{"CreatedByName":"TDW","CreatedById":120346,"CreatedDateTime":"2015-07-16T22:23:27Z","Content":"\n\u003Cp\u003E@VFB1210\u003C/p\u003E\u003Cp\u003EYou seem far more familiar with this than me. can you clarify:\u003C/p\u003E\u003Cp\u003Eshould I be taking the \u002Bv(dm/dt) into account when calculating the force due to gravity as well as when calculating the force from the thrust?\u003C/p\u003E\u003Cp\u003Eand if so should it be the full velocity or just the component of velocity in the direction of the force (vertical velocity)?\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\n"},{"CreatedByName":"VFB1210","CreatedById":54159,"CreatedDateTime":"2015-07-17T05:24:59Z","Content":"\n\u003Cp\u003EIt should be taken into account whenever you are calculating the net force on the vessel. But the v(dm/dt) term only emerges when you are burning because dm/dt is zero when you aren\u0027t.\u003C/p\u003E\n"},{"CreatedByName":"Jordansinn","CreatedById":75434,"CreatedDateTime":"2015-07-17T17:48:09Z","Content":"\n\u003Cp\u003EIs there an emulator for kOS? I have searched for a while and have not turned up any results.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-07-17T19:02:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Jordansinn\u0022 data-cite=\u0022Jordansinn\u0022\u003E\u003Cdiv\u003EIs there an emulator for kOS? I have searched for a while and have not turned up any results.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUhm. Can you elaborate a bit further what you mean by this? Do you want to run a kOS program outside of KSP? In a sense, the kOS mod *is* the emulator, in the sense that the kOS computer doesn\u0027t really exist as a hardware device anywhere in the world right now, and only exists in \u0022emulation\u0022 inside a computer game.\u003C/p\u003E\u003Cp\u003EThere\u0027s a sort of neverending slow refactor of trying to divorce all the things kOS does that don\u0027t use Unity from all the things it does that do need Unity, with an eye toward us eventualy being able to run unit tests of small kerboscript \u0022proof\u0022 programs as part of the build pipeline, without having to run KSP to do it. But that\u0027s a major task that\u0027s only being embarked upon half-heartedly in small pieces, because it\u0027s not \u0022interesting\u0022 enough. If that ever goes further, it would have to include a kOS virtual CPU that lives outside of Unity and runs scripts so long as those scripts never need to call SHIP:, or VESSEL:, or BODY:, etc.\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk","CreatedById":137078,"CreatedDateTime":"2015-07-18T07:25:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThere\u0027s a sort of neverending slow refactor of trying to divorce all the things kOS does that don\u0027t use Unity from all the things it does that do need Unity, with an eye toward us eventualy being able to run unit tests of small kerboscript \u0022proof\u0022 programs as part of the build pipeline, without having to run KSP to do it. But that\u0027s a major task that\u0027s only being embarked upon half-heartedly in small pieces, because it\u0027s not \u0022interesting\u0022 enough. If that ever goes further, it would have to include a kOS virtual CPU that lives outside of Unity and runs scripts so long as those scripts never need to call SHIP:, or VESSEL:, or BODY:, etc.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve been looking at this.. creating a mod that runs externally to KSP... and there does seem to be a way to do it. (only windows at the mo though)\u003C/p\u003E\u003Cp\u003EI must do some further reading and write a few test programs to check this.\u003C/p\u003E\u003Cp\u003EThe mod will link up to the Unity and KSP pieces in the \u0027same way\u0027 as mods currently do, and if you have an extra screen, the mod GUI can sit on this while KSP runs on the other screen.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Lookerksy","CreatedById":117170,"CreatedDateTime":"2015-07-19T03:43:16Z","Content":"\n\u003Cp\u003EWhen I crate a maneuvernode to enter a circle orbit during launch, I think I shall get Velocity at Apoapsis firstly. \u003C/p\u003E\u003Cp\u003ESo I code VelocityAt(Ship,Time:Seconds\u002BETA:Apoapsis):Orbit:Mag, \u003C/p\u003E\u003Cp\u003Ebut its value is different from real velocity. So new orbit\u0027s Apoapsis will be different from I expect.\u003C/p\u003E\u003Cp\u003Elike following:\u003C/p\u003E\u003Cp\u003Eset EtaTime to ETA:Apoapsis. \u003C/p\u003E\u003Cp\u003Eset V1 to VelocityAt(Ship,Time:Seconds\u002BEtaTime):Orbit:Mag. //get V1 -\u0026gt; Velocity at Apoapsis according to current orbit. BUT IT RETURN A WRONG VALUE\u003C/p\u003E\u003Cp\u003Eset V2 to Sqrt (Constant():G*Kerbin:Mass/Kerbin:Radius). //get V2 -\u0026gt; Velocity shall be after node, I want to get a circle orbit. calculate from GM=V2R\u003C/p\u003E\u003Cp\u003Eset MyNode to Node (Time:Seconds\u002BEtaTime,0,0,V2-V1). //get deltaV=V2-V1\u003C/p\u003E\u003Cp\u003Eadd MyNode. \u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\n"}]}