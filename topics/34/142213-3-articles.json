{"TopicId":142213,"ForumId":34,"TopicTitle":"PEGAS - Powered Explicit Guidance Ascent System - devlog","CreatedByName":"Reddy","CreatedById":124298,"CreatedDateTime":"2016-06-22T01:03:11Z","PageNum":3,"Articles":[{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-11T17:43:45Z","Content":"\n\u003Cp\u003E\nFound a good-quality scan of book with the algorithm description, for those who reads Russian.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://www.rfbr.ru/rffi/ru/books/o_1779714#303\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.rfbr.ru/rffi/ru/books/o_1779714#303\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe Space Shuttle algorithm is the only example of terminal guidance on ascent in the book. I wonder if Soyuz/Progress even used something of a sort before they got digital computers.\n\u003C/p\u003E\n"},{"CreatedByName":"Jim DiGriz","CreatedById":92465,"CreatedDateTime":"2017-08-12T17:39:03Z","Content":"\n\u003Cp\u003E\nThis PDF looks like it has the PEG\u00A0algorithm from the JotAS article along with the iterative thrust integral calculation (which the JotAS paper leaves to the reader):\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://dspace.mit.edu/bitstream/handle/1721.1/35563/73828492-MIT.pdf;sequence=2\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dspace.mit.edu/bitstream/handle/1721.1/35563/73828492-MIT.pdf;sequence=2\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n(also just interesting due to the application of sequential shutdown of engines to accomplish a lunar landing using unthrottled engines)\n\u003C/p\u003E\n\u003Cp\u003E\nSo what appear to be missing from this are the calculations of rthrust and vthrust, using Thomas Fill\u0027s method that I can\u0027t find anywhere.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-12T17:57:32Z\u0022 title=\u002208/12/2017 05:57  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 12, 2017\u003C/time\u003E by Jim DiGriz\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Aru","CreatedById":171422,"CreatedDateTime":"2017-08-12T19:18:29Z","Content":"\n\u003Cp\u003E\nI want to do something similar, but without using any existing approaches, made from scratch, and for the game with vanilla physics, parts and massive bodies. But, I have vast amounts of information I still have to find in the game code, and I can\u0027t seem to find any of it. Some of it, I know what it\u0027s based on, and I have good approximations, some of it I do not, but I want the exact code for all of it, retrieved myself.\n\u003C/p\u003E\n\u003Cp\u003E\nOrbital stats of planets and moons, atmospheric density-altitude and pressure-altitude profiles (I think this depends on temperature too which depends on latitude and time of day), engine Isp-pressure profiles (each one has a unique curve, not linear, so I want the formula and constants behind those curves), the *full* drag system and code preferably (I have an idea for a simpler version, which assumes ship is always pointing prograde in the atmosphere, and assumes that cross-sectional area times drag coefficient is constant for each stage, and requires calculating that product experimentally for each stage in advance... it could, perhaps, save those constants along with a hash of the ship design for future reference.. I\u0027d also have to verify that it really is mostly constant).\n\u003C/p\u003E\n\u003Cp\u003E\nSo, pretty much everything that isn\u0027t already obvious. I think that\u0027s it. I doubt I could persuade myself to do such a thing, if I didn\u0027t have all the data I need to do it perfectly.\n\u003C/p\u003E\n\u003Cp\u003E\nOh... it\u0027s also possible that I\u0027ll want to leverage the kind of computational power that\u0027s at my fingertips, which they didn\u0027t really have back in the early space shuttle days. kOS might not be fast enough for the precision I want, but I could probably interface it with Python and SciPy through a text file without too much hassle. I want to calculate truly optimal full ascents in the stock KSP universe, from scratch! This is the essential spirit of kOS after all, just taken to an extreme.\n\u003C/p\u003E\n\u003Cp\u003E\nI am okay at examining decompiled C# games, good with code, physics, control theory, numerical analysis, all that stuff, buuut I\u0027ve never made a mod for anything before. That might help to explain why I can\u0027t get the information I would need first.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-12T20:12:38Z\u0022 title=\u002208/12/2017 08:12  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 12, 2017\u003C/time\u003E by Aru\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-13T04:04:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223146674\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221502559543\u0022 data-ipsquote-userid=\u002292465\u0022 data-ipsquote-username=\u0022Jim DiGriz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, Jim DiGriz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo what appear to be missing from this are the calculations of rthrust and vthrust, using Thomas Fill\u0027s method that I can\u0027t find anywhere.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt does not look that difficult to derive. Just fit Thrust/(m\u003Csub\u003E0\u003C/sub\u003E - kt) with a second-order polynomial, then integrate a polynomial fraction... Just need to get to my KSP notebook.\n\u003C/p\u003E\n\u003Cp\u003E\nUPD: finding a \u0022good\u0022 polynomial is a bit more difficult than it sounds. I think three conditions to find A, B and C must be correct acceleration value at t=t\u003Csub\u003E0\u003C/sub\u003E, correct integral of a(t)dt (a.k.a. delta-V = -F/k*ln[1 - kt\u003Csub\u003Ego\u003C/sub\u003E/m\u003Csub\u003E0\u003C/sub\u003E] ) and correct integral of a(t)dsdt (because two similar integrals are calculated to get \u003Cstrong\u003Ev\u003C/strong\u003E\u003Csub\u003Ethrust\u003C/sub\u003E and \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ethrust\u003C/sub\u003E). That gives A=F/m\u003Csub\u003E0\u003C/sub\u003E and a linear system to find B and C.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-13T06:50:36Z\u0022 title=\u002208/13/2017 06:50  AM\u0022 data-short=\u00226 yr\u0022\u003EAugust 13, 2017\u003C/time\u003E by Pand5461\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-18T07:45:23Z","Content":"\n\u003Cp\u003E\nI\u0027ve tried to rewrite the algorithm and apply it for stock system. And the first iteration just doesn\u0027t converge. Also, vbias is insanely large.\n\u003C/p\u003E\n\u003Cp\u003E\nLooking at output values, (dot lambda) magnitude on the first iteration is around 0.03 with tgo about 180 sec, so (dot lambda) * tgo has magnitude \u0026gt; 1.\n\u003C/p\u003E\n\u003Cp\u003E\nIs the divergence of first iteration expected then because I\u0027m outside the initial assumptions\u0027 validity range?\n\u003C/p\u003E\n"},{"CreatedByName":"Jim DiGriz","CreatedById":92465,"CreatedDateTime":"2017-08-20T03:52:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223151306\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503042323\u0022 data-ipsquote-userid=\u0022172084\u0022 data-ipsquote-username=\u0022Pand5461\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 8/18/2017 at 0:45 AM, Pand5461 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ve tried to rewrite the algorithm and apply it for stock system. And the first iteration just doesn\u0027t converge. Also, vbias is insanely large.\n\u003C/p\u003E\n\u003Cp\u003E\nLooking at output values, (dot lambda) magnitude on the first iteration is around 0.03 with tgo about 180 sec, so (dot lambda) * tgo has magnitude \u0026gt; 1.\n\u003C/p\u003E\n\u003Cp\u003E\nIs the divergence of first iteration expected then because I\u0027m outside the initial assumptions\u0027 validity range?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou do have to initialize it something like this:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// value of tgo from previous iteration\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E tgo_prev \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Einitialized\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                rbias \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EVector3d\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// rd initialized to rdval-length vector 20 degrees downrange from r\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                rd \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EQuaternionD\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAngleAxis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E20\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eiy\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E r\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enormalized \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rdval\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// vgo initialized to rdval-length vector perpendicular to rd, minus current v\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                vgo \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EVector3d\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECross\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eiy\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enormalized \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vdval \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                tgo \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                tgo_prev \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E tgo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan\u003EVector3d\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dvsensed \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vprev\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                vgo \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vgo \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dvsensed\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                vprev \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nalthough i\u0027m debugging some wonkiness in my code with a consistent wiggle halfway through the ascent, and my tangent vector has an odd negative sign in it which I don\u0027t understand where its coming from, so i suspect i might be initializing something wrong. \u00A0you can find similar code in the MATLAB implemention.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso here\u0027s an additional PDF (that appears to be after the UPFG\u00A0PDF): \u00A0\u003Ca href=\u0022https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19760024151.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19760024151.pdf\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs far as I can tell they moved some stuff around in the thrust integrals to reduce the operations but they\u0027re identical, the corrector also has some changes that algebraically work out to the same thing. \u00A0The rthrust and vthrust computations don\u0027t have that decomposition into phi and phidot and more closely follow the Journal of the Astronomical Sciences paper, but don\u0027t seem to change the burn a great deal. \u00A0The rgo calculation is both different from the UPFG\u00A0PDF\u00A0and from the JAS paper. \u00A0There\u0027s also some more details in the algorithm there -- somewhat frustratingly there are\u00A0also missing details.\n\u003C/p\u003E\n"},{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-20T08:10:19Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292465\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0022 rel=\u0022\u0022\u003E@Jim DiGriz\u003C/a\u003E thanks for the PDF.\n\u003C/p\u003E\n\u003Cp\u003E\nI figured what my problem was - I forgot to apply \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego,z\u003C/sub\u003E correction (chapter 4.5 in 19740004402). After I included it, the convergence is good.\n\u003C/p\u003E\n\u003Cp\u003E\nExamining this, I drew another conclusion.\n\u003C/p\u003E\n\u003Cp\u003E\nCorrection looks as follows (lambda denoted as L): \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Egoz\u003C/sub\u003E = \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E (S - (\u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Egoxy\u003C/sub\u003E)) / (\u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E). Then, substitute \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Egoxy\u003C/sub\u003E = \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E - (\u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E) \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Egoz\u003C/sub\u003E = \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E ( S - (\u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E) \u002B (\u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E) (\u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E) ) / ( \u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E ) = \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E ( S - ( \u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E ) ) / ( \u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E ) \u002B \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E (\u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E).\n\u003C/p\u003E\n\u003Cp\u003E\nthen, the next correction (omitting the \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ebias\u003C/sub\u003E):\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E = \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Egoxy\u003C/sub\u003E \u002B \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Egoz\u003C/sub\u003E = \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E - (\u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E) \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E \u002B \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E ( S - ( \u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E ) ) / ( \u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E ) \u002B \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E (\u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E) = \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E \u002B \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E ( S - ( \u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E ) ) / ( \u003Cstrong\u003EL\u003C/strong\u003E, \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ez\u003C/sub\u003E )\n\u003C/p\u003E\n\u003Cp\u003E\nmeaning that a) separate calculation of rgoxy is redundant and b) iz doesn\u0027t even need to be normalized.\n\u003C/p\u003E\n\u003Cp\u003E\nIf your tangent vector has the wrong sign the first thing to triple-check is cross-products. Also, I\u0027d use projection of r into target plane in the initialization instead of r itself.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for computation of \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ethrust\u003C/sub\u003E and \u003Cstrong\u003Ev\u003C/strong\u003E\u003Csub\u003Ethrust\u003C/sub\u003E, that\u0027s the same decomposition into phi written differently.\n\u003C/p\u003E\n\u003Cp\u003E\nThe main difference in \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ego\u003C/sub\u003E computation\u00A0 from 19740004402 is whether \u003Cstrong\u003Er\u003C/strong\u003E\u003Csub\u003Ebias\u003C/sub\u003E is added before or after downrange correction. I don\u0027t think it changes too much.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-20T10:59:53Z\u0022 title=\u002208/20/2017 10:59  AM\u0022 data-short=\u00226 yr\u0022\u003EAugust 20, 2017\u003C/time\u003E by Pand5461\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Reddy","CreatedById":124298,"CreatedDateTime":"2017-08-20T14:08:35Z","Content":"\n\u003Cp\u003E\nSorry for joining the party late. Thanks \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292465\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0022 rel=\u0022\u0022\u003E@Jim DiGriz\u003C/a\u003E for the research and confirmation that the solution I developed is sound \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nRegarding the difference between correctors in 19790048206 and 19740004402 (and hence my code) - these are actually the same equations. To see this, let\u0027s first look at 19790048206, which does:\n\u003C/p\u003E\n\u003Cp\u003E\nv\u003Csub\u003Ego\u003C/sub\u003E = v\u003Csub\u003Ego\u003C/sub\u003E - 1.0 * v\u003Csub\u003Emiss\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\nwhere v\u003Csub\u003Emiss\u003C/sub\u003E = v\u003Csub\u003Ep\u003C/sub\u003E - v\u003Csub\u003Ed\u003C/sub\u003E = v \u002B v\u003Csub\u003Ethrust\u003C/sub\u003E \u002B v\u003Csub\u003Egrav\u003C/sub\u003E - v\u003Csub\u003Ed\u003C/sub\u003E, so this gives:\n\u003C/p\u003E\n\u003Cp\u003E\nv\u003Csub\u003Ego\u003C/sub\u003E = v\u003Csub\u003Ego\u003C/sub\u003E - v - v\u003Csub\u003Ethrust\u003C/sub\u003E - v\u003Csub\u003Egrav\u003C/sub\u003E \u002B v\u003Csub\u003Ed\u003C/sub\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nWhich means we update our v\u003Csub\u003Ego\u003C/sub\u003E by \u003Cstrong\u003E(v\u003Csub\u003Ed\u003C/sub\u003E - v - v\u003Csub\u003Ethrust\u003C/sub\u003E - v\u003Csub\u003Egrav\u003C/sub\u003E)\u003C/strong\u003E in each iteration. Now look at what 19740004402 does:\n\u003C/p\u003E\n\u003Cp\u003E\nv\u003Csub\u003Ego\u003C/sub\u003E = v\u003Csub\u003Ed\u003C/sub\u003E - v - v\u003Csub\u003Egrav\u003C/sub\u003E \u002B v\u003Csub\u003Ebias\u003C/sub\u003E (I reduced the v\u003Csub\u003Egop\u003C/sub\u003E and \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E\u003Csub\u003Ego\u003C/sub\u003E terms)\n\u003C/p\u003E\n\u003Cp\u003E\nbut v\u003Csub\u003Ebias\u003C/sub\u003E = v\u003Csub\u003Ego\u003C/sub\u003E - v\u003Csub\u003Ethrust\u003C/sub\u003E (block 5) so we obtain:\n\u003C/p\u003E\n\u003Cp\u003E\nv\u003Csub\u003Ego\u003C/sub\u003E = v\u003Csub\u003Ed\u003C/sub\u003E - v - v\u003Csub\u003Egrav\u003C/sub\u003E \u002B v\u003Csub\u003Ego\u003C/sub\u003E - v\u003Csub\u003Ethrust\u003C/sub\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nLet\u0027s reorder:\n\u003C/p\u003E\n\u003Cp\u003E\nv\u003Csub\u003Ego\u003C/sub\u003E = v\u003Csub\u003Ego\u003C/sub\u003E - v\u003Csub\u003Ethrust\u003C/sub\u003E \u002B v\u003Csub\u003Ed\u003C/sub\u003E - v - v\u003Csub\u003Egrav\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\nand what we obtain is an update of v\u003Csub\u003Ego\u003C/sub\u003E by (reordering further) \u003Cstrong\u003Ev\u003Csub\u003Ed\u003C/sub\u003E - v - v\u003Csub\u003Ethrust\u003C/sub\u003E - v\u003Csub\u003Egrav\u003C/sub\u003E\u003C/strong\u003E. Which is exactly the same thing \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nJim, can you elaborate on the difference in how they do r\u003Csub\u003Ethrust\u003C/sub\u003E and v\u003Csub\u003Ethrust\u003C/sub\u003E?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-20T14:09:42Z\u0022 title=\u002208/20/2017 02:09  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 20, 2017\u003C/time\u003E by Reddy\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kerbinorbiter","CreatedById":172446,"CreatedDateTime":"2017-08-20T14:22:00Z","Content":"\n\u003Cp\u003E\n\u003Cspan\u003E\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022124298\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0022 rel=\u0022\u0022\u003E@Reddy\u003C/a\u003E\u00A0could you please help me a bit its not working it loads the boot file then it says \u0022boot file not loaded\u0022\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003Eacctualy the iSEA has a hole team needing help...yeah\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-20T14:27:03Z\u0022 title=\u002208/20/2017 02:27  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 20, 2017\u003C/time\u003E by kerbinorbiter\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Reddy","CreatedById":124298,"CreatedDateTime":"2017-08-20T14:30:04Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/172446-kerbinorbiter/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022172446\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/172446-kerbinorbiter/\u0022 rel=\u0022\u0022\u003E@kerbinorbiter\u003C/a\u003E I assume it literally said \u0022No boot file loaded! Crashing...\u0022 - if this is the case, it means PEGAS hasn\u0027t found one of the variables you are supposed to create. Take another look at the \u003Ca href=\u0022https://github.com/Noiredd/PEGAS/blob/master/docs/tutorial.md#basics\u0022 rel=\u0022external nofollow\u0022\u003Etutorial\u003C/a\u003E (I linked to a section of interest), make sure all 4 variables (\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Evehicle\u003C/span\u003E, \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Econtrols\u003C/span\u003E, \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Esequence\u003C/span\u003E, \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Emission\u003C/span\u003E) exist and are named correctly.\n\u003C/p\u003E\n"},{"CreatedByName":"kerbinorbiter","CreatedById":172446,"CreatedDateTime":"2017-08-20T14:30:37Z","Content":"\n\u003Cp\u003E\n\u003Cspan\u003Eah discovered the script before post \u003Cimg alt=\u0022:/\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon1.png\u0022 title=\u0022:/\u0022\u003E\u00A0also how can you create custom guidance\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-20T14:31:16Z\u0022 title=\u002208/20/2017 02:31  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 20, 2017\u003C/time\u003E by kerbinorbiter\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-20T14:48:50Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022124298\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0022 rel=\u0022\u0022\u003E@Reddy\u003C/a\u003E do you have an idea, by chance, how to deal with coasting phases?\n\u003C/p\u003E\n\u003Cp\u003E\nIn the current form, 5 orbital elements out of 6 must be specified (except for argument of periapsis). While this is good in \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E, it\u0027s next to unusable in stock.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, to include a coast, we need two additional constraints (to determine when to start coasting and when to start circularizing). But if circularization \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E is fixed (i.e. \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E and \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E of suborbital trajectory already defined), then only one constraint is needed to decide when to start coasting. The constraint is obviously the minimal t\u003Csub\u003Ego\u003C/sub\u003E and I don\u0027t have the idea how to find the final altitude from this.\n\u003C/p\u003E\n"},{"CreatedByName":"Reddy","CreatedById":124298,"CreatedDateTime":"2017-08-20T15:06:52Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/172084-pand5461/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022172084\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/172084-pand5461/\u0022 rel=\u0022\u0022\u003E@Pand5461\u003C/a\u003E What a coincidence, I was about to reply to you \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E First, I agree with your finding that r\u003Csub\u003Egoxy\u003C/sub\u003E wouldn\u0027t have to be calculated separately, and this optimization is something I would expect to find in assembly code for the actual guidance computer. But for the purpose of explaining the logic of the solution, I think they left it in a longer but clearer form deliberately. Same with normalization of i\u003Csub\u003Ez\u003C/sub\u003E, it might just make it easier to explain the maths in the simplest way possible.\n\u003C/p\u003E\n\u003Cp\u003E\nRegarding the usage of projection of r instead of r in the initialization, I was surprised that you noticed this as I was certain that my final code already does it. I am 100% sure I had it in place at some point, since I spent several hours on trying to come up with a good initialization method - none of the documents I read contained anything on that. Simplest answer would be that I temporarily removed this at one of the debugging sessions and forgotten to put it back in \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nNow, onto your question, but please clear a few things for me first. Why is the current state \u0022next to unusable in stock\u0022, and how would inclusion of coasting fix it? I see a potential source of confusion in the fact that you\u0027re mistaken about the current constraints: actually only \u003Cstrong\u003E4\u003C/strong\u003E of 6 orbital elements must be specified: semi-major axis, eccentricity, inclination and LAN (argument of periapsis and true anomaly are free).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-20T15:19:54Z\u0022 title=\u002208/20/2017 03:19  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 20, 2017\u003C/time\u003E by Reddy\u003C/strong\u003E\n\u003Cbr\u003Ewording\n\u003C/span\u003E\n"},{"CreatedByName":"Alpha_Mike_741","CreatedById":167923,"CreatedDateTime":"2017-08-20T15:39:40Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022124298\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0022 rel=\u0022\u0022\u003E@Reddy\u003C/a\u003E\u00A0 what you\u0027ve done is AMAZING WORK! Your work hasn\u0027t got the recognition it truly deserves .\n\u003C/p\u003E\n\u003Cp\u003E\nPEGAS can be a life saver for anyone who wants to take \u003Cabbr title=\u0022Realism Overhaul (mod)\u0022\u003ERO\u003C/abbr\u003E seriously. I haven\u0027t run it yet but I can already see the endless possibilities .I tried doing something way simpler and after months of trying I finally gave up , But thanks to people like you I may still have a chance at enjoying a super-accurate , closer to real life KSP without getting overwhelmed by the sheer complexity of things .\n\u003C/p\u003E\n\u003Cp\u003E\nGo PEGAS !\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-20T15:47:50Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223153057\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503241612\u0022 data-ipsquote-userid=\u0022124298\u0022 data-ipsquote-username=\u0022Reddy\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 minutes ago, Reddy said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhy is the current state \u0022next to unusable in stock\u0022, and how would inclusion of coasting fix it?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nContinuous burn to orbit, though possible, is suboptimal in stock. Either upper stages have reasonable \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E and need to pitch wildly, or upper stages have extremely low \u003Cabbr title=\u0022Thrust-to-weight ratio\u0022\u003ETWR\u003C/abbr\u003E inducing gravity losses. The real Soyuz launchers suffered this problem because they had somewhat overpowered upper stages that could not be reignited. We all know the solution - burn to a suborbital trajectory at full thrust, then circularize at full thrust. It is mathematically proven that if some maneuver can be done either by a single throttled burn or two separated burns at full thrust, the latter case is more optimal.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd there are 5 elements constrained. Inclination and LAN are defined explicitly. Altitude, speed (scalar) and angle of velocity to local horizon are three parameters, so they define SMA (from total energy), eccentricity (from rotational momentum) and anomaly (from altitude, considering SMA and ECC are known).\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223153057\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503241612\u0022 data-ipsquote-userid=\u0022124298\u0022 data-ipsquote-username=\u0022Reddy\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n29 minutes ago, Reddy said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nRegarding the usage of projection of r instead of r in the initialization, I was surprised that you noticed this as I was certain that my final code already does it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nErm... I was sure I saw the projection in your code. Actually, you didn\u0027t even need to go that far - just projecting current location on the target plane and scaling it accordingly works just as well.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat I haven\u0027t seen is the account of rotating reference frame below 100 km. Again, this is more stock-related because of faster rotation and switch to inertial frame well above atmosphere (and above my typical parking orbit).\n\u003C/p\u003E\n"},{"CreatedByName":"Jim DiGriz","CreatedById":92465,"CreatedDateTime":"2017-08-20T17:40:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223153043\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503240530\u0022 data-ipsquote-userid=\u0022172084\u0022 data-ipsquote-username=\u0022Pand5461\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Pand5461 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022124298\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0022 rel=\u0022\u0022\u003E@Reddy\u003C/a\u003E do you have an idea, by chance, how to deal with coasting phases?\n\u003C/p\u003E\n\u003Cp\u003E\nIn the current form, 5 orbital elements out of 6 must be specified (except for argument of periapsis). While this is good in \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E, it\u0027s next to unusable in stock.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, to include a coast, we need two additional constraints (to determine when to start coasting and when to start circularizing). But if circularization \u003Cabbr title=\u0022Delta-V\u0022\u003EdV\u003C/abbr\u003E is fixed (i.e. \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E and \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E of suborbital trajectory already defined), then only one constraint is needed to decide when to start coasting. The constraint is obviously the minimal t\u003Csub\u003Ego\u003C/sub\u003E and I don\u0027t have the idea how to find the final altitude from this.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIn the PDFs there\u0027s code to manually add coast phases, there\u0027s no facility in PEG to optimize the time of the coast. \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere are approaches which are not closed-loop guidance that NASA used - OPGUID and SWITCH: \u00A0\u003Ca href=\u0022https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19710026292.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19710026292.pdf\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFor closed-loop guidance that optimizes coast phases (and can even fade-in the atmosphere) there is more recent work towards that:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://arc.aiaa.org/doi/abs/10.2514/2.5045?journalCode=jgcd\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://arc.aiaa.org/doi/abs/10.2514/2.5045?journalCode=jgcd\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://arc.aiaa.org/doi/abs/10.2514/1.36084\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://arc.aiaa.org/doi/abs/10.2514/1.36084\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Jim DiGriz","CreatedById":92465,"CreatedDateTime":"2017-08-20T18:03:28Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223152992\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503238115\u0022 data-ipsquote-userid=\u0022124298\u0022 data-ipsquote-username=\u0022Reddy\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Reddy said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nJim, can you elaborate on the difference in how they do r\u003Csub\u003Ethrust\u003C/sub\u003E and v\u003Csub\u003Ethrust\u003C/sub\u003E?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe JAS paper uses:\n\u003C/p\u003E\n\u003Cp\u003E\nr\u003Csub\u003Ego\u00A0\u003C/sub\u003E= rd - r - v t\u003Csub\u003Ego\u003C/sub\u003E - r\u003Csub\u003Egrav\u003C/sub\u003E \u002B r\u003Csub\u003Ebias\u003C/sub\u003E\u003C/p\u003E\n\u003Cp\u003E\nt\u003Csub\u003Elambda\u003C/sub\u003E = J / L\n\u003C/p\u003E\n\u003Cp\u003E\nv\u003Csub\u003Ethrust\u003C/sub\u003E = lambda [ L - lambdadot\u003Csup\u003E2\u003C/sup\u003E ( H - J t\u003Csub\u003Elambda\u003C/sub\u003E ) / 2 ]\n\u003C/p\u003E\n\u003Cp\u003E\nr\u003Csub\u003Ethrust\u003C/sub\u003E = lambda [ S - lambdadot\u003Csup\u003E2\u003C/sup\u003E ( P - 2Qt\u003Csub\u003Elambda\u003C/sub\u003E \u002B St\u003Csub\u003Elambda\u003C/sub\u003E\u003Csup\u003E2\u003C/sup\u003E ) ] \u002B ( Q - S t\u003Csub\u003Elambda\u003C/sub\u003E ) lambdadot\n\u003C/p\u003E\n\u003Cp\u003E\nWith lambda and lambdadot the same.\n\u003C/p\u003E\n\u003Cp\u003E\nYour code has the decomposition of rgo into rgoxy and rgoz (which it seems is also in the 1976 PDF, although it seems to be computed differently) and then it uses the expression involving phi and phidot which the journal article in the 1976 PDF have dropped.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd yeah, after some algebraic substitution I figured out the correctors were identical, just rearranged.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223153094\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503244070\u0022 data-ipsquote-userid=\u0022172084\u0022 data-ipsquote-username=\u0022Pand5461\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Pand5461 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat I haven\u0027t seen is the account of rotating reference frame below 100 km. Again, this is more stock-related because of faster rotation and switch to inertial frame well above atmosphere (and above my typical parking orbit).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUgh, you may have just solved my rocket wiggle problem. \u00A0Inverse rotation. \u00A0That would explain why it very suddenly adjusts at one spot halfway through the ascent.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso: \u00A0thanks for all the other info, but I\u0027m still drinking coffee and I wake up slowly...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-20T18:16:35Z\u0022 title=\u002208/20/2017 06:16  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 20, 2017\u003C/time\u003E by Jim DiGriz\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jim DiGriz","CreatedById":92465,"CreatedDateTime":"2017-08-20T18:32:45Z","Content":"\n\u003Cp\u003E\nConfirmed, my launch wiggle is at exactly 145,000m on Earth which exactly matches the\u00A0inverseRotThresholdAltitude\n\u003C/p\u003E\n"},{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-20T19:07:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223153190\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503253965\u0022 data-ipsquote-userid=\u002292465\u0022 data-ipsquote-username=\u0022Jim DiGriz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n34 minutes ago, Jim DiGriz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nConfirmed, my launch wiggle is at exactly 145,000m on Earth which exactly matches the\u00A0inverseRotThresholdAltitude\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUgh, now how to extract this from kOS (I\u0027m starting to suspect it\u0027s not necessarily 100 km)?\n\u003C/p\u003E\n\u003Cp\u003E\nThe only way I can think of is to compare SolarPrimeVector between the iterations, like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// On every PEG loop initialization\n  wait 0.\n  local dt to missiontime - peg_prev[\u0022t\u0022].\n  local SPV to SolarPrimeVector.\n  if peg_prev[\u0022SPr\u0022] \u0026lt;\u0026gt; SPV {\n    local omega to body:angularvel.\n    local rot to\n    {\n      parameter vec.\n      return vec - vcrs(omega, vec)*dt.\n    }.\n  set peg_now[\u0022Rbias\u0022] to rot(peg_now[\u0022Rbias\u0022]).\n  //rotate everything else you need\n  }\n  set peg_prev[\u0022SPr\u0022] to SPV.\n  set peg_prev[\u0022t\u0022] to peg_prev[\u0022t\u0022] \u002B dt.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nJim, Thanks for the references, trying to dig into.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-20T19:07:44Z\u0022 title=\u002208/20/2017 07:07  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 20, 2017\u003C/time\u003E by Pand5461\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jim DiGriz","CreatedById":92465,"CreatedDateTime":"2017-08-20T19:12:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223153211\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503256045\u0022 data-ipsquote-userid=\u0022172084\u0022 data-ipsquote-username=\u0022Pand5461\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Pand5461 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUgh, now how to extract this from kOS (I\u0027m starting to suspect it\u0027s not necessarily 100 km)?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCorrect, its 145km on Earth, probably 100km on Kerbin? \u00A0Its a method that can get called on the CelestialBody. \u00A0I think if the body is airless there\u0027s no inv rot threshold? \u00A0Not sure, its kind of deep KSP voodoo that isn\u0027t easy to google for.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat I\u0027m thinking about trying is getting position and velocity out of the Orbit class instead of off of the Vessel. \u00A0Probably more expensive, but I would hope KSP is somewhat optimized for UT == now case. \u00A0Gotta eat some food first tho...\n\u003C/p\u003E\n"},{"CreatedByName":"Jim DiGriz","CreatedById":92465,"CreatedDateTime":"2017-08-20T20:38:07Z","Content":"\n\u003Cp\u003E\n@NathanKell gave me this formula on IRC\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Er \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vesselState\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003E\u003Cabbr title=\u0022Center of Mass\u0022\u003ECoM\u003C/abbr\u003E\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmainBody\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eposition\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003EVector3d\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rot \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eorbit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetRotFrameVelAtPos\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmainBody\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E r\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Exzy\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Exzy\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nv \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rot \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EvelocityD\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nThat should correct for the inverse rotation and krakensbane velocities. \u00A0The magnitudes seem sane, but breaks my code (because I think I need to audit my cross products again, hopefully making them look less screwy...)\n\u003C/p\u003E\n"},{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-20T20:45:57Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292465\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0022 rel=\u0022\u0022\u003E@Jim DiGriz\u003C/a\u003E, thing is, you need to correct \u003Cstrong\u003E\u003Cem\u003Eall\u003C/em\u003E\u003C/strong\u003E vectors computed in the old coordinate frame, not only velocity.\n\u003C/p\u003E\n"},{"CreatedByName":"Jim DiGriz","CreatedById":92465,"CreatedDateTime":"2017-08-20T20:59:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223153297\u0022 data-ipsquote-contentid=\u0022142213\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221503261957\u0022 data-ipsquote-userid=\u0022172084\u0022 data-ipsquote-username=\u0022Pand5461\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 minutes ago, Pand5461 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292465\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0022 rel=\u0022\u0022\u003E@Jim DiGriz\u003C/a\u003E, thing is, you need to correct \u003Cstrong\u003E\u003Cem\u003Eall\u003C/em\u003E\u003C/strong\u003E vectors computed in the old coordinate frame, not only velocity.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nyeah it looks that way, r is off as well, seems like lag by a frame as well (which rings a bell, but i thought that was fixed in 1.2.0)\n\u003C/p\u003E\n"},{"CreatedByName":"Reddy","CreatedById":124298,"CreatedDateTime":"2017-08-21T18:32:24Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/167923-alpha_mike_741/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022167923\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/167923-alpha_mike_741/\u0022 rel=\u0022\u0022\u003E@Alpha_Mike_741\u003C/a\u003E Thank you for that comment! Glad to hear such words of support \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/172084-pand5461/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022172084\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/172084-pand5461/\u0022 rel=\u0022\u0022\u003E@Pand5461\u003C/a\u003E It looks right... INC and LAN explicitly, SMA, ECC and anomaly from the remaining 3 - although in a not so very transparent way. I agree. Confusion was on my end, probably due to my lacking understanding of \u003Cem\u003Eanomaly\u003C/em\u003E, which is now more thorough thanks to you pointing that out.\n\u003C/p\u003E\n\u003Cp\u003E\nRegarding projections - I use that in my position corrector, yes, but not in initialization. I choose the initial r\u003Csub\u003Ed\u003C/sub\u003E by rotating the current r, instead of projection of r on target plane. But I suppose it would save 1 iteration of convergence at most, since right after that first iteration it is constrained to the plane by said corrector.\n\u003C/p\u003E\n\u003Cp\u003E\nYou and \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292465\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92465-jim-digriz/\u0022 rel=\u0022\u0022\u003E@Jim DiGriz\u003C/a\u003E mention an important thing: accounting of rotating reference frame. This is of course merely a KSP quirk, since the SolarPrimeVector constantly changes for some reason and the axes of the reference frame with it. However, both our current state (r, v) and desired state (r\u003Csub\u003Ed\u003C/sub\u003E, v\u003Csub\u003Ed\u003C/sub\u003E) change in the same way - shouldn\u0027t that make fixes unnecessary? Or do the intermediate vectors, like biases, thrust integrals etc. have to be explicitly corrected? I spent a while pondering on that when coding the kOS version, but decided to try running without any corrections first, see how it works and fix if it\u0027s wrong - but it doesn\u0027t look wrong. This conversation would be nice to have on github issues, too, as it has potential of improving PEGAS \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI will also let you know that I don\u0027t feel strong enough in control theory to do anything regarding coast phases optimization. I tried reading a few papers months back, but this level of math is far beyond me.\n\u003C/p\u003E\n"},{"CreatedByName":"Pand5461","CreatedById":172084,"CreatedDateTime":"2017-08-21T19:50:35Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022124298\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124298-reddy/\u0022 rel=\u0022\u0022\u003E@Reddy\u003C/a\u003E looking at your video - I don\u0027t think rotating frame is really much of an issue, at least for \u003Cabbr title=\u0022Real Solar System (mod)\u0022\u003ERSS\u003C/abbr\u003E. Kerbin\u0027s rotation is 4 times faster, and the extra apparent acceleration due to rotating frame is 0.6 m/s\u003Csup\u003E2\u003C/sup\u003E at \u003Cabbr title=\u0022Low Kerbin Orbit\u0022\u003ELKO\u003C/abbr\u003E, very much noticeable.\n\u003C/p\u003E\n\u003Cp\u003E\nAs far as I understand it, below certain altitude KSP internally uses rotating frame with the good old centrifugal and Coriolis forces. In that frame, cartesian coordinates of launch site (or any fixed geoposition) remain fixed for any observer resting on ground. All constant vectors in inertial frame (of which I only know the Solar Prime vector), on the contrary, appear rotating. Now here\u0027s the trick: orbital velocity components exposed in kOS are the \u003Cem\u003Evelocity in inertial frame \u003C/em\u003Eprojected onto \u003Cem\u003Einstantaneous position of rotating axes. \u003C/em\u003EThis makes orbital velocity at low altitudes inconsistent with position changes (\u0022inertial force\u0022). At high altitudes, \u003Cstrong\u003Ev\u003C/strong\u003E\u003Csub\u003Eorbit\u003C/sub\u003E = d\u003Cstrong\u003ER\u003C/strong\u003E/dt, at low \u003Cstrong\u003Ev\u003C/strong\u003E\u003Csub\u003Esurface\u003C/sub\u003E = d\u003Cstrong\u003ER\u003C/strong\u003E/dt.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat is even more confusing is that at low altitudes it appears as though d\u003Cstrong\u003Ev\u003C/strong\u003E\u003Csub\u003Eorbit\u003C/sub\u003E / dt \u0026lt;\u0026gt; -body:mu*\u003Cstrong\u003ER\u003C/strong\u003E / |\u003Cstrong\u003ER\u003C/strong\u003E|\u003Csup\u003E3\u003C/sup\u003E on coasting trajectory. Again, this is because we can only compare this component-wise in kOS. And v\u003Csub\u003Ex\u003C/sub\u003E = (\u003Cstrong\u003Ev\u003C/strong\u003E, \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ex\u003C/sub\u003E), so \u003Cabbr title=\u0022Delta-V\u0022\u003Edv\u003C/abbr\u003E\u003Csub\u003Ex\u003C/sub\u003E / dt = (d\u003Cstrong\u003Ev\u003C/strong\u003E/dt, \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ex\u003C/sub\u003E) \u002B (\u003Cstrong\u003Ev\u003C/strong\u003E, d\u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ex\u003C/sub\u003E / dt) =\u00A0 g\u003Csub\u003Ex\u003C/sub\u003E \u002B (\u003Cstrong\u003Ev\u003C/strong\u003E, [\u003Cstrong\u003EOmega\u003C/strong\u003E x \u003Cstrong\u003Ei\u003C/strong\u003E\u003Csub\u003Ex\u003C/sub\u003E ]), where g\u003Csub\u003Ex\u003C/sub\u003E = -body:mu*R\u003Csub\u003Ex\u003C/sub\u003E / |\u003Cstrong\u003ER\u003C/strong\u003E|\u003Csup\u003E3\u003C/sup\u003E is the projection of gravity vector onto X axis and Omega is rotational speed. Overall, we get d\u003Cstrong\u003Ev\u0027\u003C/strong\u003E / dt = \u003Cstrong\u003Eg\u003C/strong\u003E \u002B [ \u003Cstrong\u003Ev\u0027\u003C/strong\u003E x \u003Cstrong\u003EOmega\u003C/strong\u003E ] where \u003Cstrong\u003Ev\u0027\u003C/strong\u003E is the set of coordinates for \u003Cstrong\u003Ev\u003C/strong\u003E\u003Csub\u003Eorbit\u003C/sub\u003E in the rotating frame.\n\u003C/p\u003E\n\u003Cp\u003E\nThis appears as quite a drastic change if you log body:position and ship:velocity:orbit along orbit with \u003Cabbr title=\u0022Apoapsis\u0022\u003EAp\u003C/abbr\u003E above critical altitude and \u003Cabbr title=\u0022Periapsis\u0022\u003EPe\u003C/abbr\u003E below it.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, about consequences of this. Both current state (r, v) and desired state (r\u003Csub\u003Ed\u003C/sub\u003E, v\u003Csub\u003Ed\u003C/sub\u003E) change in the same way, yes, but they are rotating, not translating. That means that the difference between them is not constant but also rotates.\n\u003C/p\u003E\n\u003Cp\u003E\nTo illustrate, let\u0027s assume you initialize r at launchpad with coordinates V(600, 0, 0) and at the end of loop you compute r\u003Csub\u003Ed\u003C/sub\u003E 100 km directly above it at V(700, 0, 0). Let\u0027s say a computation loop takes one second. In the inertial frame, you\u0027d expect that V(600, 0, 0) does not point at launchpad anymore because the launchpad has rotated. However, V(600, 0, 0) still points exactly at launchpad in the rotating frame. Therefore, r\u003Csub\u003Ed\u003C/sub\u003E = V(700, 0, 0) in the new coordinate frame is again directly above \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E and not a bit westward as you probably want. The solution is to rotate all computed positions, velocities and directions a little bit every iteration.\n\u003C/p\u003E\n"}]}