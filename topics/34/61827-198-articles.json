{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":198,"Articles":[{"CreatedByName":"maculator","CreatedById":122127,"CreatedDateTime":"2017-04-07T10:13:04Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/114015-elwanderer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022114015\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/114015-elwanderer/\u0022 rel=\u0022\u0022\u003E@ElWanderer\u003C/a\u003E Thanks I\u0027ll move the else one bracket outside and also look up this EXISTS function on the documentation.\n\u003C/p\u003E\n"},{"CreatedByName":"eberkain","CreatedById":157548,"CreatedDateTime":"2017-04-07T11:15:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223012687\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491546204\u0022 data-ipsquote-userid=\u0022173339\u0022 data-ipsquote-username=\u0022Meltdown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Meltdown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s\u00A0not correct. If one is treating one file as one script without any declaration of functions, the script will eventually lock one\u00A0out of the terminal. If one is implementing a userinput, the script can surely check the state\u00A0each cycle. If one is inputting new commands while a script is running, those inputs\u00A0are getting queued up and executed after the actual program has ended (like in any other PL where \u0022run mycode.extension\u0022 will just do that). Loops are also like in any other PL, one\u00A0can make them run in the backround or keep the script from executing further until a certain condition is met. One can even run a whole program nested inside an until-loop by the use\u00A0of delegates. Check out\u00A0\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/language/flow.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/language/flow.html\u003C/a\u003E\u00A0and \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/language/delegates.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/language/delegates.html\u003C/a\u003E\u00A0for more info.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat I\u0027m looking to do is have a program clear the screen and print info to the terminal every cycle of the loop. \u00A0All the basic loops seemed to bog down the computer or just lock up the program. \u00A0This seems to work perfect for what I want to do even though the documentation says to avoid waits inside when loops, but when its running I can\u0027t type into the terminal anymore until I stop the program. \u00A0\u00A0\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EDECLARE run IS TRUE. //is the program loop running\nDECLARE runstep IS 0. //count the loops for displaying\n\n//main program loop, run while the program is in run mode\nWHEN run = TRUE THEN {\n\n\tclearscreen.\n\n\tprint \u0022NavCom Status\u0022 at(1,1).\n\tprint \u0022Runstep : \u0022 \u002B runstep.\n\n\tSET runstep TO runstep \u002B 1.\n\tWAIT 1.\n\tRETURN TRUE.\n}\n\nWAIT UNTIL run = FALSE.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI\u0027ve read through both those pages in the documentation, and most everything else at this point, the term userinput does not match anything \u00A0 I did see a page about how to read the terminal, but nowhere have I seen talk about how to still type into the terminal while a loop is executing. \u00A0Perhaps there is a wait for input command, but for my application I don\u0027t want to stop the loop to look for user input. \u00A0A working example for what I\u0027m looking for would be great.\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-07T11:15:43Z\u0022 title=\u002204/07/2017 11:15  AM\u0022 data-short=\u00227 yr\u0022\u003EApril 7, 2017\u003C/time\u003E by eberkain\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Meltdown","CreatedById":173339,"CreatedDateTime":"2017-04-07T13:04:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223012853\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491563708\u0022 data-ipsquote-userid=\u0022157548\u0022 data-ipsquote-username=\u0022eberkain\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, eberkain said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat I\u0027m looking to do is have a program clear the screen and print info to the terminal every cycle of the loop. \u00A0All the basic loops seemed to bog down the computer or just lock up the program. \u00A0This seems to work perfect for what I want to do even though the documentation says to avoid waits inside when loops, but when its running I can\u0027t type into the terminal anymore until I stop the program. \u00A0\u00A0\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003EDECLARE run IS TRUE. //is the program loop running\nDECLARE runstep IS 0. //count the loops for displaying\n\n//main program loop, run while the program is in run mode\nWHEN run = TRUE THEN {\n\n\tclearscreen.\n\n\tprint \u0022NavCom Status\u0022 at(1,1).\n\tprint \u0022Runstep : \u0022 \u002B runstep.\n\n\tSET runstep TO runstep \u002B 1.\n\tWAIT 1.\n\tRETURN TRUE.\n}\n\nWAIT UNTIL run = FALSE.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI\u0027ve read through both those pages in the documentation, and most everything else at this point, the term userinput does not match anything \u00A0 I did see a page about how to read the terminal, but nowhere have I seen talk about how to still type into the terminal while a loop is executing. \u00A0Perhaps there is a wait for input command, but for my application I don\u0027t want to stop the loop to look for user input. \u00A0A working example for what I\u0027m looking for would be great.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI don\u0027t think it\u0027s possible to get the REPL working while the compiler is trying to evaluate your loop. My formulation was hereof missleading as I ment the direct game inputs like the arrowkeys, WASD or \u002Bmouse. I might be totally wrong, probably some other user can serve you a solution with more experience in kOS.\n\u003C/p\u003E\n"},{"CreatedByName":"maculator","CreatedById":122127,"CreatedDateTime":"2017-04-07T15:04:38Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EEdit: FIXED It\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI got my problem fixed and then produced th next one^^, In one file it all works - split it in different ones it complains that my function would be an undefined variable...\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m just doing basic stuff and been experimenting in sandbox to understand multiple files, but I\u0027m stuck.\n\u003C/p\u003E\n\u003Cp\u003E\nSo here is what used to work if put in one file, but refuses to when split up:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EFIX: Needs the following in the boot sequenc (if the script with the functions doesn\u0027t run they wont do anything *facepalm*):\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Erunpath(\u00221:/lib1.ks\u0022).\u003C/span\u003E\u003C/pre\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E//The boot script (works, but I wanted to pass all the info I got).\n//test_boot.ks\n\nclearscreen.\nset ship:control:pilotmainthrottle to 0.\ncopypath(\u00220:/test_libary.ks\u0022,\u00221:/lib1.ks\u0022).\ncopypath(\u00220:/test.ks\u0022,\u00221:/prog1.ks\u0022).\nrunpath(\u00221:/prog1.ks\u0022).\ndeletepath(\u00221:/test_boot.ks\u0022).\n\n//------------------------------------------------------------------\n\n//the libary - just two simple functions\n//test_libary.ks\n\nfunction printhud {\n\tparameter message.\n\t\n\thudtext(message, 5, 2, 20, green, false).\n}\n\n//hasfile checks if file x exists on volume y\nfunction hasfile {\n\tparameter name.\n\tparameter volume.\n\t\n\tswitch to volume. list files in filecheck.\n\tfor file in filecheck {\n\t\tif file:name = name {\n\t\t\tswitch to 1.\n\t\t\treturn true.\n\t\t}\n\t}\n\tswitch to 1.\n\treturn false.\n}\n\n//-------------------------------------------------\n\n//And the actual \u0022program\u0022 to test wether those functions do actually work\n//test.ks\n\nif hasfile(\u00224test.ks\u0022, 0) = true {\t\t//the 4 is supposed to be there to make it return \u0022false\u0022.\n\tprinthud(\u0022test.ks exists on 0:/\u0022).\n} else {\n\tprinthud(\u0022test.ks does not exists on 0:/\u0022).\n}\n\nwait 5.\nprinthud(\u0022we made it to the end of test.ks!\u0022).\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nI\u0027m sure its some noobish missunderstanding of how KOS handels stuff \u003Cimg alt=\u0022:/\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon1.png\u0022 title=\u0022:/\u0022\u003E but I couldn\u0027t find a solution.\n\u003C/p\u003E\n\u003Cp\u003E\ncheers and thanks for any help.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-07T15:17:21Z\u0022 title=\u002204/07/2017 03:17  PM\u0022 data-short=\u00227 yr\u0022\u003EApril 7, 2017\u003C/time\u003E by maculator\u003C/strong\u003E\n\u003Cbr\u003EI\u0026#039;m an idiot\n\u003C/span\u003E\n"},{"CreatedByName":"Sebra","CreatedById":174461,"CreatedDateTime":"2017-04-07T15:27:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223012853\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491563708\u0022 data-ipsquote-userid=\u0022157548\u0022 data-ipsquote-username=\u0022eberkain\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, eberkain said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nnowhere have I seen talk about how to still type into the terminal while a loop is executing\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u0022When \u0022 is not a loop!\n\u003C/p\u003E\n\u003Cp\u003E\nIt is trigger, checked each physics tick. Each time you use \u0022wait 1.\u0022 in it whole script stops for 1 second. You do not see it because \u0022main part\u0022 of your script is endless wait loop.\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2017-04-07T15:33:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo, once in a loop, there is no way to send new commands to the program?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/157548-eberkain/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022157548\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/157548-eberkain/\u0022 rel=\u0022\u0022\u003E@eberkain\u003C/a\u003E, quite opposite. That is why we have triggers or events that can be created with \u003Cstrong\u003EWHEN\u003C/strong\u003E or \u003Cstrong\u003EON\u003C/strong\u003E commands.\n\u003C/p\u003E\n\u003Cp\u003E\nIn your example, you should use \u003Cstrong\u003EUNTIL\u003C/strong\u003E loop, instead of \u003Cstrong\u003EWHEN\u003C/strong\u003E trigger. Also, you should avoid to declare variable names with same as keyword/command used in kOS language. Any programming language will be confused with it. I pointing to \u0022run\u0022 variable that is also legacy command for \u0022runpath\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nYou should also avoid to clear screen inside loop, you will get bad flickering effect on terminal screen because of that. Also, since you have said that you have experience with C\u002B\u002B and C# languages, you can take advantage of functions to make all code more \u0022clear\u0022 adn easier to read and understand.\n\u003C/p\u003E\n\u003Cp\u003E\nHere is some example what I mean:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E terminate to \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// main variable preventing script to end\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E output to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\nclearscreen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// this will be printed only once on terminal, to avoid flickering\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022kOS autopilot Keys:                         \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Row 0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022     Action Group 4 : Toggle something      \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022                                            \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022                                            \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022     Press CTRL \u002B C to terminate program    \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022--------------------------------------------\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022                                            \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Row No:6\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Speed   :                                   \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Row No:7\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Altitude:                                   \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Row No:8\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// some simple function to display data on demand inside loop\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nfunction display_block\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter output\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// mandatory parameter\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter startCol is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// optional parameter\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter startRow is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E6.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// define where the block of text should be positioned\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  print output at \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartCol\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  print round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EAIRSPEED\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eat \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  print round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EALTITUDE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E at \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// kOS will be aware of this function existance in rest of code\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Defining trigger or event with \u0022ON\u0022 command\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\non AG4 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    toggle \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// if it was false value will be true or oposite\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E output to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Autopilot is active \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E output to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Autopilot is passive\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// you can put some other commands here, to unlock controls or something\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\t\n    preserve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// ensurance that AG is triggered again on demand\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// --- end of trigger definitions ----\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// -------- initialization of script before main loop\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E some_other_variable to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022something.\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// to be used for something in main program\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// -------------------------------------------\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// main program executing in loop until CTRL\u002BC\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nuntil terminate \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Print dynamic data on terminal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tdisplay_block\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eoutput\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// function call\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// put some custom code here when kOS control craft\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// end of main program\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// -------------------------------------------\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I got ninjaed while writting this example \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"maculator","CreatedById":122127,"CreatedDateTime":"2017-04-07T15:46:14Z","Content":"\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Efunction download {\n\tparameter name.\n\tparameter volume.\n\t\n\tif hasfile(name, 1) {\n\t\tdelete name.\n\t}\n\tif hasfile (name, volume) {\n\t\tcopypath(volume \u002B \u0022:/\u0022 \u002B name,\u00221:/\u0022 \u002Bname).\t//\u0026lt;-----THIS looks really unnecessary complicated to me....\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSince [copy name from volume.] is depreciated and prints that ugly message on my screen I went for the above solution, it works but I wonder if there is a better and cleaner way?\n\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2017-04-07T17:46:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223013040\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491579194\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Euntil terminate \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Print dynamic data on terminal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tdisplay_block\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eoutput\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// function call\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// put some custom code here when kOS control craft\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf this is supposed to execute once per frame, you should add a \u0022wait 0.\u0022 at the beginning or at the end of the loop. Otherwise\u003Cbr\u003E\n* it would execute multiple loops until the IPU run out (wasting EC).\u003Cbr\u003E\n* at the end of the frame, the last loop would be interrupted at some random line. Such interruptions have caused a few hard to find bugs for me.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example this looks like perfectly safe code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eif HasTarget\n  print Target:Name.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nHowever, suppose that one frame ends after the first line is executed (with HasTarget=true), and then the target is lost. In this case kOS will execute the second line, and fail with the error that there is no target. I had something like that in a docking function that would sporadically fail in this way. Since then I sometimes add \u0022wait 0.\u0022 at the start of a section that should happen within one frame.\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2017-04-07T18:01:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223013181\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491587172\u0022 data-ipsquote-userid=\u002285299\u0022 data-ipsquote-username=\u0022pellinor\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, pellinor said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nyou should add a \u0022wait 0.\u0022\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHuh. I thought that \u0022wait 0.\u0022 is exactly same that you want to wait just one physical thick, or in other word not have to wait at all.\u003Cbr\u003E\nAnyhow, I actualy have that command in some of my scripts, but for reasons that I was experimenting with various values above zero and zero. Haven\u0027t noticed issues using it or not inside loop and it didn\u0027t cause significant change in EC consuption. But also, it has been a while since I played KSP. I almost skiped whole 1.2.2. release and 1.2.3. is almost published, things might be changed in both, kOS and KSP.\n\u003C/p\u003E\n\u003Cp\u003E\nI always tend to put commands that belongs to some \u0022if\u0022 condition inside curly brackets even if there is just single line of code. Just my old habit for easier reading and understanding code when you revised it after several months. That also saved me from nasty bugs that come out of blue.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyhow, above is just example of loop usage without any actual calculations/commands inside.\n\u003C/p\u003E\n"},{"CreatedByName":"Meltdown","CreatedById":173339,"CreatedDateTime":"2017-04-07T18:07:07Z","Content":"\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E{\n\tglobal file is lex(\n\t\u0022xcopy\u0022,xcopy@,\n\t\u0022erase\u0022, erase@,\n\t\u0022erase_all\u0022,erase_all@,\n\t\u0022download\u0022, download@\n\t).\n\tfunction xcopy {\n\tParameter file, orig, trgt.\n\t\tswitch to trgt.\n\t\tif exists(file) {\n\t\t\terase(file,trgt).\n\t\t}\n\t\tswitch to orig.\n\t\tcopypath(file ,trgt \u002B \u0022:/\u0022).\n\t\tswitch to trgt.\n\t\trunpath(file).\n\t}\n\tfunction erase {\n\tParameter File, vol.\n\tswitch to vol.\n\tdeletepath(File).\n\t}\n\tfunction erase_all {\n\t\tparameter vol.\n\t\tswitch to vol.\n\t\tlist files in file.\n\t\tfor x in file {\n\t\t\terase(x,vol).\n\t\t}\n\t}\n\tfunction download {\n\tParameter file, vol.\n\txcopy(file,vol,1).\n\t}\n}\n//use it like this : file[\u0022xcopy\u0022](\u0022test.ks\u0022,0,1).\nfile[\u0022xcopy\u0022](\u0022testme.ks\u0022,0,1).\nprint \u0022xcopy okay\u0022.\nfile[\u0022download\u0022](\u0022testme2.ks\u0022,0).\nprint \u0022download okay\u0022.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nHandle with care! I just had a glance at it and it works. I really don\u0027t want to harm or damage your files! I repeat, be cautious with it.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Ch3 style=\u0022color:#000000;\u0022\u003E\n\u003Cstrong\u003E\u003Ca data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/122127-maculator/\u0026amp;do=hovercard\u0026amp;referrer=http%253A%252F%252Fforum.kerbalspaceprogram.com%252Findex.php%253F%252Ftopic%252F61827-122-kos-scriptable-autopilot-system-v103-20161207%252F%2526page%253D198\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/122127-maculator/\u0022 style=\u0022color:inherit;\u0022 title=\u0022Go to maculator\u0027s profile\u0022 rel=\u0022\u0022\u003Emaculato\u003C/a\u003E\u003C/strong\u003E\n\u003C/h3\u003E\n\u003Cdiv style=\u0022color:#525252;\u0022\u003E\n\u003Cdiv\u003E\n\u003Cdiv style=\u0022color:#9c9c9c;\u0022\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/61827-122-kos-scriptable-autopilot-system-v103-20161207/\u0026amp;do=findComment\u0026amp;comment=3013047\u0022 style=\u0022color:inherit;\u0022 rel=\u0022\u0022\u003EPosted\u003Cspan\u003E\u00A0\u003C/span\u003E2 hours ago\u003C/a\u003E\u003Cspan\u003E\u00A0\u003C/span\u003E\u00B7\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/61827-122-kos-scriptable-autopilot-system-v103-20161207/\u0026amp;do=reportComment\u0026amp;comment=3013047\u0022 style=\u0022color:#3c6994;\u0022 title=\u0022Report this content\u0022 rel=\u0022\u0022\u003E\u003Cspan\u003EReport post\u003C/span\u003E\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cdiv style=\u0022color:#272a34;\u0022\u003E\n\u003Cpre\u003E\n\n\u003Cspan style=\u0022color:#000000;\u0022\u003Efunction download {\n\tparameter name.\n\tparameter volume.\n\t\n\tif hasfile(name, 1) {\n\t\tdelete name.\n\t}\n\tif hasfile (name, volume) {\n\t\tcopypath(volume \u002B \u0022:/\u0022 \u002B name,\u00221:/\u0022 \u002Bname).\t//\u0026lt;-----THIS looks really unnecessary complicated to me....\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSince [copy name from volume.] is depreciated and prints that ugly message on my screen I went for the above solution, it works but I wonder if there is a better and cleaner way?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-07T18:22:18Z\u0022 title=\u002204/07/2017 06:22  PM\u0022 data-short=\u00227 yr\u0022\u003EApril 7, 2017\u003C/time\u003E by Meltdown\u003C/strong\u003E\n\u003Cbr\u003EJeez the forum ate my quoting!\n\u003C/span\u003E\n"},{"CreatedByName":"ColKlonk2","CreatedById":167493,"CreatedDateTime":"2017-04-07T20:03:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223007516\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491184572\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 4/3/2017 at 3:56 AM, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDo you get the same bug if you decouple the launch clamps by using DOEVENT or DOACTION instead of AGX?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAfter a bit of keyboard banging.. Yup..afraid the same problem is still there.\n\u003C/p\u003E\n\u003Cp\u003E\nAt 200m it should rotate to 90 degrees.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://youtu.be/KSAaIjW-o8k\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://youtu.be/KSAaIjW-o8k\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe code used to extract the modules\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EFunction ListParts\n{\nGlobal P is \u0022\u0022.\nGlobal MOD is \u0022\u0022.\n\tClearscreen.\n\tFOR P IN SHIP:PARTS \n\t{\n\t//=== TOWERS ===\n\t\tIF P:TAG = \u0022Tower1\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Tower1Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Tower2\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Tower2Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Tower3\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Tower3Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t//=== BASE CLAMPS ===\n\t\tIF P:TAG = \u0022Clamp1\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Clamp1Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Clamp2\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Clamp2Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Clamp3\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Clamp3Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t//=== STAGE-1 ENGINES ===\n\t\tIF P:TAG = \u0022Stg1_Eng1\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022ModuleEnginesRF\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Stg1_Eng1Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Stg1_Eng2\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022ModuleEnginesRF\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Stg1_Eng2Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Stg1_Eng3\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022ModuleEnginesRF\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Stg1_Eng3Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tIF P:TAG = \u0022Stg1_Eng4\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022ModuleEnginesRF\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Stg1_Eng4Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nCode used for DOACTIONs..\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\tSet ThisTime to 10.\n\tUntil ThisTime \u0026lt; 1\n\t{   \n\t\tSet ThisTime to ThisTime - 1.\n\t\tPrint ThisTime \u002B \u0022 \u0022 at (22,4).\n\t\tPrint THROTTLE at (22,14).\n\t\tIf ThisTime = 4\n\t\t{\n\t\t\tPrint \u0022Activated   \u0022 at (22,12).\n\t\t\tLock THROTTLE to 1.0.\n\t\t\tStg1_Eng1Mod:doaction(\u0022activate engine\u0022,TRUE).\n\t\t\tStg1_Eng2Mod:doaction(\u0022activate engine\u0022,TRUE).\n\t\t\tStg1_Eng3Mod:doaction(\u0022activate engine\u0022,TRUE).\n\t\t\tStg1_Eng4Mod:doaction(\u0022activate engine\u0022,TRUE).\n//\t\t\tStage.\n//\t\t\tToggle(AG250).\n\t\t\t\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E OFF.\n\t\t\tSET SASMODE to \u0022STABILITYASSIST\u0022.\n\t\t}\n\t\tWait 1.\n\t}\n\tTower1Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tTower2Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tTower3Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tClamp1Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tClamp2Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tClamp3Mod:doaction(\u0022release clamp\u0022,TRUE).\n//\tStage.\n//\tToggle(AG249).\n//--- TOWERS AND CLAMPS ---//\n\tPrint \u0022Activated   \u0022 at (22,18).\n\tPrint \u0022Activated   \u0022 at (22,20).\n\twait 2.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-07T20:08:11Z\u0022 title=\u002204/07/2017 08:08  PM\u0022 data-short=\u00227 yr\u0022\u003EApril 7, 2017\u003C/time\u003E by ColKlonk2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"eberkain","CreatedById":157548,"CreatedDateTime":"2017-04-07T21:26:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223013040\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491579194\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/157548-eberkain/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022157548\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/157548-eberkain/\u0022 rel=\u0022\u0022\u003E@eberkain\u003C/a\u003E, quite opposite. That is why we have triggers or events that can be created with \u003Cstrong\u003EWHEN\u003C/strong\u003E or \u003Cstrong\u003EON\u003C/strong\u003E commands.\n\u003C/p\u003E\n\u003Cp\u003E\nIn your example, you should use \u003Cstrong\u003EUNTIL\u003C/strong\u003E loop, instead of \u003Cstrong\u003EWHEN\u003C/strong\u003E trigger. Also, you should avoid to declare variable names with same as keyword/command used in kOS language. Any programming language will be confused with it. I pointing to \u0022run\u0022 variable that is also legacy command for \u0022runpath\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nYou should also avoid to clear screen inside loop, you will get bad flickering effect on terminal screen because of that. Also, since you have said that you have experience with C\u002B\u002B and C# languages, you can take advantage of functions to make all code more \u0022clear\u0022 adn easier to read and understand.\n\u003C/p\u003E\n\u003Cp\u003E\nHere is some example what I mean:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E terminate to \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// main variable preventing script to end\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E output to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E to \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\nclearscreen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// this will be printed only once on terminal, to avoid flickering\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022kOS autopilot Keys:                         \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Row 0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022     Action Group 4 : Toggle something      \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022                                            \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022                                            \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022     Press CTRL \u002B C to terminate program    \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022--------------------------------------------\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022                                            \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Row No:6\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Speed   :                                   \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Row No:7\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Altitude:                                   \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Row No:8\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// some simple function to display data on demand inside loop\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nfunction display_block\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter output\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// mandatory parameter\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter startCol is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// optional parameter\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter startRow is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E6.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// define where the block of text should be positioned\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  print output at \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartCol\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  print round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EAIRSPEED\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eat \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  print round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EALTITUDE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E at \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// kOS will be aware of this function existance in rest of code\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Defining trigger or event with \u0022ON\u0022 command\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\non AG4 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    toggle \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// if it was false value will be true or oposite\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E output to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Autopilot is active \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E output to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Autopilot is passive\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// you can put some other commands here, to unlock controls or something\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n\t\n    preserve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// ensurance that AG is triggered again on demand\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// --- end of trigger definitions ----\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// -------- initialization of script before main loop\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Eset\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E some_other_variable to \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022something.\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// to be used for something in main program\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// -------------------------------------------\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// main program executing in loop until CTRL\u002BC\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nuntil terminate \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Print dynamic data on terminal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tdisplay_block\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eoutput\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// function call\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMyAction\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// put some custom code here when kOS control craft\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// end of main program\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// -------------------------------------------\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I got ninjaed while writting this example \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks for the example, I follow everything. \u00A0I\u0027m not too worried about best practices or the like, just experimenting to see if what I want to do is even possible. \u00A0Is there a way to respond to something other than an action group? \u00A0Lets say I have a state variable called display_mode. \u00A0If it is a 1 the program displays one set of info, if it is a 2 the program displays something else. \u00A0That I can do. \u00A0What are the possible ways that I can respond to user input to change the value of display_mode? \u00A0I don\u0027t want to tie it to action groups though, I\u0027m going to need all the action groups for other things. \u00A0So I was asking if there was a way to type a command into the console while in a loop. \u00A0My current plan is to put the output for each display_mode into a different script, and when I want to change modes I send a CTRL\u002BC command to the terminal and then a new run command to launch a different display script.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2017-04-08T07:05:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223013455\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491600411\u0022 data-ipsquote-userid=\u0022157548\u0022 data-ipsquote-username=\u0022eberkain\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, eberkain said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThanks for the example, I follow everything. \u00A0I\u0027m not too worried about best practices or the like, just experimenting to see if what I want to do is even possible. \u00A0Is there a way to respond to something other than an action group? \u00A0Lets say I have a state variable called display_mode. \u00A0If it is a 1 the program displays one set of info, if it is a 2 the program displays something else. \u00A0That I can do. \u00A0What are the possible ways that I can respond to user input to change the value of display_mode? \u00A0I don\u0027t want to tie it to action groups though, I\u0027m going to need all the action groups for other things. \u00A0So I was asking if there was a way to type a command into the console while in a loop. \u00A0My current plan is to put the output for each display_mode into a different script, and when I want to change modes I send a CTRL\u002BC command to the terminal and then a new run command to launch a different display script.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI have put action group in example above to \u003Cstrong\u003EON\u003C/strong\u003E command as most obvious and easiest to use. But it can be tied to any other variable that can change value. You can also use \u003Cstrong\u003EWHEN\u003C/strong\u003E command instead, for example, to send \u003Cstrong\u003ESTAGE\u003C/strong\u003E button when craft is run out of fuel/thrust.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, in future versions of kOS you can build GUI window for command imput instead of terminal, to enter values trough buttons, checkboxes adn similar. There was discussion about it couple months ago, you can find it in this thread 10 -20 pages back. Example from alpha GUI version of kOS:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022Uaspb5X.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022576\u0022 src=\u0022http://i.imgur.com/Uaspb5X.jpg\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nOn picture is shown GUI to choose autopilot flight mode, to execute maneuver node in space, gently land powered rocket or to hover at certain altitude or to maintain desired vertical speed. You can choose to lock steering trough input boxes or you can continue to control craft trough WASD keys while autopilot control throttle to do hovering. That is just simple example, you can build even more advanced stuff, but under the hud is similar code structure like shown in previous post.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can also use parameter at begining of script for desired display mode. The following is example from my rocket launch script that actualy use only sequence of commands until reaching orbit without endless loop.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E// Arguments for program must be on top\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nparameter \u003C/span\u003E\u003Cspan\u003EMyHeading\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E90.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// initial heading for orbit - influence starting inclination\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nparameter \u003C/span\u003E\u003Cspan\u003EMyApoapsis\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E120000.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Desired APOAPSIS of orbit\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nparameter \u003C/span\u003E\u003Cspan\u003EApETA\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E27.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// time before reaching Apoapsis when circularization burn start\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nclearscreen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// example of usage to run from terminal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Use double quote and numbers for parameters\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Example: runpath(\u0027/rlaunch\u0027,90,120000)\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// function that will display dynamic data on terminal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nfunction \u003C/span\u003E\u003Cspan\u003EDynamicDisplay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter output\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// dynamic data - mandatory parameter\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter startCol is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E17.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter startRow is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E9.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// define where the block of text should be positioned\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  print output at \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartCol\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  print round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EAIRSPEED\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eat \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  print round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EALTITUDE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E at \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nwait until SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMAXTHRUST \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// waiting idle until staged once for launch\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// kOS is not aware of triggers yet. It will not automaticaly stage on it\u0027s own\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// staging whenever ship is out of fuel\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// \u0022WHEN\u0022 command is trigger or event. Command inside brackets will run when condition is met\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// \u0022PRESERVE.\u0022 command ensure that event will be triggered again when craft run out of fuel again\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// kOS CPU is not aware of this until it reached for first time\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nwhen SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMAXTHRUST \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E then \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tSTAGE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Staged\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan\u003EDynamicDisplay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Staged                 \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tpreserve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// after this point kOS is aware of trigger and it will stage craft when it is out of fuel/thrust\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// put some other code here to lock steering/thrust to something until desired apoapsis is reached\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// some more code to circularize orbit when craft is near apoapsis\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNow, instead of heading and apoapsis as arguments, you can use display_mode as argument, to display data that you need on terminal. And inside of DynamicDisplay function you can put additional \u003Cstrong\u003EIF\u003C/strong\u003E command that will print output only for desired display mode.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can also tie \u003Cstrong\u003EWHEN\u003C/strong\u003E trigger to craft speed or altitude that will execute display function only when craft reach certain speed instead on each physical frame tick.\n\u003C/p\u003E\n\u003Cp\u003E\nAbove is just rude example of usage, not whole script code. Only your imagination is limit of possible usage in your own scripts.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-08T07:12:39Z\u0022 title=\u002204/08/2017 07:12  AM\u0022 data-short=\u00227 yr\u0022\u003EApril 8, 2017\u003C/time\u003E by kcs123\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Frank Einstein","CreatedById":176160,"CreatedDateTime":"2017-04-08T07:08:31Z","Content":"\n\u003Cp\u003E\nI really like this addon but I have 2 problems with the last version of kOS...\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n1 - When I click on the kOS icon, nothing happens. It\u0027s not working either with the stock toolbar and the\u00A0\u003Cstrong\u003E\u003Ca data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/68543-blizzy78/\u0026amp;do=hovercard\u0026amp;referrer=http%253A%252F%252Fforum.kerbalspaceprogram.com%252Findex.php%253F%252Ftopic%252F55420-120-toolbar-1713-common-api-for-draggableresizable-buttons-toolbar%252F\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/68543-blizzy78/\u0022 title=\u0022Go to blizzy78\u0027s profile\u0022 rel=\u0022\u0022\u003Eblizzy78\u0027s\u003C/a\u003E\u003C/strong\u003E addon.\n\u003C/p\u003E\n\u003Cp\u003E\n2 - I can\u0027t paste any text in the kOS terminal.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCan I do something to fix one or both of these bugs?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHere is the errors I get in KSP.log\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I press the Toolbar button:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n[EXC 00:43:44.895] NullReferenceException: Object reference not set to an instance of an object\n\tkOS.Screen.KOSToolbarWindow.Open ()\n\tkOS.Screen.KOSToolbarWindow.CallbackOnClickBlizzy ()\n\tkOS.Screen.KOSToolbarWindow.\u0026lt;AddBlizzyButton\u0026gt;b__39_0 (kOS.Screen.ClickEvent e)\n\tkOS.Screen.Button.clicked (System.Object realEvent)\n\tToolbar.Command.click ()\n\tUnityEngine.Debug:LogException(Exception)\n\tToolbar.Log:log(LogLevel, Exception, String, Object[])\n\tToolbar.Log:error(Exception, String, Object[])\n\tToolbar.Command:click()\n\tToolbar.Button:click()\n\tToolbar.Button:drawInToolbar(Rect, Boolean)\n\tToolbar.Toolbar:drawButtons()\n\tToolbar.Toolbar:draw()\n\tToolbar.ToolbarManager:OnGUI()\n[ERR 00:43:45.424] [Toolbar] [ERROR] error while handling click event: kOS.kOSButton\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I try to paste some text inside of a kOS terminal:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n[EXC 01:19:26.981] Exception: Can\u0027t access internal member \u0027GUIUtility.systemCopyBuffer\u0027 it may have been removed / renamed\n\tMuMech.MuUtils.GetSystemCopyBufferProperty ()\n\tMuMech.MuUtils.get_SystemClipboard ()\n\tMuMech.MechJebCore.Update ()\u003C/pre\u003E\n\u003Cp\u003E\nThanks in advance.\n\u003C/p\u003E\n"},{"CreatedByName":"eberkain","CreatedById":157548,"CreatedDateTime":"2017-04-08T09:13:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223013890\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491635109\u0022 data-ipsquote-userid=\u0022127158\u0022 data-ipsquote-username=\u0022kcs123\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, kcs123 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI have put action group in example above to \u003Cstrong\u003EON\u003C/strong\u003E command as most obvious and easiest to use. But it can be tied to any other variable that can change value. You can also use \u003Cstrong\u003EWHEN\u003C/strong\u003E command instead, for example, to send \u003Cstrong\u003ESTAGE\u003C/strong\u003E button when craft is run out of fuel/thrust.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, in future versions of kOS you can build GUI window for command imput instead of terminal, to enter values trough buttons, checkboxes adn similar. There was discussion about it couple months ago, you can find it in this thread 10 -20 pages back. Example from alpha GUI version of kOS:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://i.imgur.com/Uaspb5X.jpg\u0022 title=\u0022Enlarge image\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg alt=\u0022Uaspb5X.jpg\u0022 class=\u0022ipsImage ipsImage_thumbnailed\u0022 height=\u0022576\u0022 src=\u0022http://i.imgur.com/Uaspb5X.jpg\u0022 width=\u00221024\u0022\u003E\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nOn picture is shown GUI to choose autopilot flight mode, to execute maneuver node in space, gently land powered rocket or to hover at certain altitude or to maintain desired vertical speed. You can choose to lock steering trough input boxes or you can continue to control craft trough WASD keys while autopilot control throttle to do hovering. That is just simple example, you can build even more advanced stuff, but under the hud is similar code structure like shown in previous post.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can also use parameter at begining of script for desired display mode. The following is example from my rocket launch script that actualy use only sequence of commands until reaching orbit without endless loop.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022com\u0022\u003E// Arguments for program must be on top\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nparameter \u003C/span\u003E\u003Cspan\u003EMyHeading\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E90.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// initial heading for orbit - influence starting inclination\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nparameter \u003C/span\u003E\u003Cspan\u003EMyApoapsis\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E120000.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Desired APOAPSIS of orbit\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nparameter \u003C/span\u003E\u003Cspan\u003EApETA\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E27.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// time before reaching Apoapsis when circularization burn start\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nclearscreen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// example of usage to run from terminal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Use double quote and numbers for parameters\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Example: runpath(\u0027/rlaunch\u0027,90,120000)\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// function that will display dynamic data on terminal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nfunction \u003C/span\u003E\u003Cspan\u003EDynamicDisplay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter output\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// dynamic data - mandatory parameter\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter startCol is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E17.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  parameter startRow is \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E9.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// define where the block of text should be positioned\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  print output at \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartCol\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  print round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EAIRSPEED\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eat \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  print round\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ESHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EALTITUDE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E at \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstartRow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nwait until SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMAXTHRUST \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// waiting idle until staged once for launch\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// kOS is not aware of triggers yet. It will not automaticaly stage on it\u0027s own\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// staging whenever ship is out of fuel\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// \u0022WHEN\u0022 command is trigger or event. Command inside brackets will run when condition is met\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// \u0022PRESERVE.\u0022 command ensure that event will be triggered again when craft run out of fuel again\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// kOS CPU is not aware of this until it reached for first time\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nwhen SHIP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EMAXTHRUST \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E then \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tSTAGE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tprint \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Staged\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan\u003EDynamicDisplay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Staged                 \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\tpreserve\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// after this point kOS is aware of trigger and it will stage craft when it is out of fuel/thrust\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// put some other code here to lock steering/thrust to something until desired apoapsis is reached\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// some more code to circularize orbit when craft is near apoapsis\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNow, instead of heading and apoapsis as arguments, you can use display_mode as argument, to display data that you need on terminal. And inside of DynamicDisplay function you can put additional \u003Cstrong\u003EIF\u003C/strong\u003E command that will print output only for desired display mode.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can also tie \u003Cstrong\u003EWHEN\u003C/strong\u003E trigger to craft speed or altitude that will execute display function only when craft reach certain speed instead on each physical frame tick.\n\u003C/p\u003E\n\u003Cp\u003E\nAbove is just rude example of usage, not whole script code. Only your imagination is limit of possible usage in your own scripts.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI follow that too. \u00A0Thanks for the help. \u00A0While I know that a program in a loop can be setup to react to vessel status changes, that is the whole point of making an autopilot right? \u00A0It is still not user input. \u00A0I\u0027m afraid the GUI would not apply for me, in my situation I\u0027m not going to have a mouse to use. \u00A0So I think I\u0027m back\u00A0to my original statement more or less. \u00A0Once a program is in a loop, there is no way to send user input to it, outside of using action groups, which is still just a reaction to a vessel status change, not truly user input. \u00A0My workaround is to use the TELNET feature, setup a putty window on a second screen, use an AutoHotKey script that is setup to respond to keyboard and joystick button presses and send corresponding commands to the terminal \u00A0 Each of those is setup to first send a ctrl\u002Bc firs to stop the running program, then a run script command with any new parameters that I\u0027m looking to utilize. \u00A0I think it will work no problem, and at the end of the day, will make coding simpler since each section is going to be a different program, as opposed to having everything in a single state machine design style program.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2017-04-08T12:14:33Z","Content":"\n\u003Cp\u003E\nWell, there is always more ways to skin an animal \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nUsing telnet is one of options. You can also use new \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/commands/communication.html#communication\u0022 rel=\u0022external nofollow\u0022\u003Ecommunication feature\u003C/a\u003E that allow you to send messages between vessels or between different kOS CPUs on same vessel. One of thing to consiser if you are low on available action groups to use \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/addons/AGX.html\u0022 rel=\u0022external nofollow\u0022\u003EAction Groups Extended\u003C/a\u003E mod along with kOS.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example you can create one progam to run at continious loop that have all options you need and set to respond on some variable changes. And have another kOS CPU that will have set of small scripts that does not do much, only sending communication message to main kOS CPU that have to be programed to respond on those messages.\n\u003C/p\u003E\n\u003Cp\u003E\nI just provided some examples how you can do stuff. Each user have to find his own way what option suits him best.\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-04-08T13:48:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223013893\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491635311\u0022 data-ipsquote-userid=\u0022176160\u0022 data-ipsquote-username=\u0022Frank Einstein\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, Frank Einstein said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI really like this addon but I have 2 problems with the last version of kOS...\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n1 - When I click on the kOS icon, nothing happens. It\u0027s not working either with the stock toolbar and the\u00A0\u003Cstrong\u003E\u003Ca data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/68543-blizzy78/\u0026amp;do=hovercard\u0026amp;referrer=http%253A%252F%252Fforum.kerbalspaceprogram.com%252Findex.php%253F%252Ftopic%252F55420-120-toolbar-1713-common-api-for-draggableresizable-buttons-toolbar%252F\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/68543-blizzy78/\u0022 rel=\u0022\u0022 title=\u0022Go to blizzy78\u0027s profile\u0022\u003Eblizzy78\u0027s\u003C/a\u003E\u003C/strong\u003E addon.\n\u003C/p\u003E\n\u003Cp\u003E\n2 - I can\u0027t paste any text in the kOS terminal.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCan I do something to fix one or both of these bugs?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHere is the errors I get in KSP.log\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I press the Toolbar button:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\n[EXC 00:43:44.895] NullReferenceException: Object reference not set to an instance of an object\n\tkOS.Screen.KOSToolbarWindow.Open ()\n\tkOS.Screen.KOSToolbarWindow.CallbackOnClickBlizzy ()\n\tkOS.Screen.KOSToolbarWindow.\u0026lt;AddBlizzyButton\u0026gt;b__39_0 (kOS.Screen.ClickEvent e)\n\tkOS.Screen.Button.clicked (System.Object realEvent)\n\tToolbar.Command.click ()\n\tUnityEngine.Debug:LogException(Exception)\n\tToolbar.Log:log(LogLevel, Exception, String, Object[])\n\tToolbar.Log:error(Exception, String, Object[])\n\tToolbar.Command:click()\n\tToolbar.Button:click()\n\tToolbar.Button:drawInToolbar(Rect, Boolean)\n\tToolbar.Toolbar:drawButtons()\n\tToolbar.Toolbar:draw()\n\tToolbar.ToolbarManager:OnGUI()\n[ERR 00:43:45.424] [Toolbar] [ERROR] error while handling click event: kOS.kOSButton\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I try to paste some text inside of a kOS terminal:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\n[EXC 01:19:26.981] Exception: Can\u0027t access internal member \u0027GUIUtility.systemCopyBuffer\u0027 it may have been removed / renamed\n\tMuMech.MuUtils.GetSystemCopyBufferProperty ()\n\tMuMech.MuUtils.get_SystemClipboard ()\n\tMuMech.MechJebCore.Update ()\u003C/pre\u003E\n\u003Cp\u003E\nThanks in advance.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOn the second problem: MuMech isn\u0027t kOS.\u00A0 That problem isn\u0027t coming from us.\n\u003C/p\u003E\n\u003Cp\u003E\nOn the first problem:\u00A0 Is that the only exception in your log file?\u00A0 Were there other exceptions at points earlier in the file before that one?\u00A0 Because to me that exception looks like the symptom of the problem, not the cause of it.\n\u003C/p\u003E\n\u003Cp\u003E\nIn general, the first advice when someone says this happens is:\n\u003C/p\u003E\n\u003Cp\u003E\n1 - Be certain the release of kOS you are using matches the release of KSP you are using.\u00A0 Each kOS release is advertised to only work for the newest KSP that was out at the time it was released.\u00A0 I know this is a pain but there\u0027s not much we can do about it because changes SQUAD makes to KSP often mandate changes to the kOS mod that cause it to not be backward compatible with older versions of KSP.\u00A0 (i.e. renaming a method in the API and changing how you call it:\u00A0 So kOS MUST call Thing.foo(a) to work with older KSP but MUST call Thing.Baz(a,b) to work with newer KSP.\u00A0 There\u0027s just no real way to make one version of kOS that satisfies those two contradictory rules when that sort of thing happens.)\n\u003C/p\u003E\n\u003Cp\u003E\n2 - Try deleting the entire GameData/kOS folder and re-downloading the ZIP and re-installing it, just to ensure you didn\u0027t accidentally screw up something about the installation the first time.\u00A0 This symptom can often happen as a result of just missing one file (like an image PNG or something like that) in the installation.\u00A0 Once the attempt to open that one file fails, the exception that gets thrown can cause it to abort before it completes lots of other initialization steps and thus trigger all sorts of other problems.\u00A0 This is why I want to see the exception that happens from kOS *first* in your output log.\u00A0 It would be strange for this one you\u0027re showing to be the first exception thrown.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223013372\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491595438\u0022 data-ipsquote-userid=\u0022167493\u0022 data-ipsquote-username=\u0022ColKlonk2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, ColKlonk2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAfter a bit of keyboard banging.. Yup..afraid the same problem is still there.\n\u003C/p\u003E\n\u003Cp\u003E\nAt 200m it should rotate to 90 degrees.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://youtu.be/KSAaIjW-o8k\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://youtu.be/KSAaIjW-o8k\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe code used to extract the modules\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003EFunction ListParts\n{\nGlobal P is \u0022\u0022.\nGlobal MOD is \u0022\u0022.\n\tClearscreen.\n\tFOR P IN SHIP:PARTS \n\t{\n\t//=== TOWERS ===\n\t\tIF P:TAG = \u0022Tower1\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Tower1Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Tower2\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Tower2Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Tower3\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Tower3Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t//=== BASE CLAMPS ===\n\t\tIF P:TAG = \u0022Clamp1\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Clamp1Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Clamp2\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Clamp2Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Clamp3\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022LaunchClamp\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Clamp3Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t//=== STAGE-1 ENGINES ===\n\t\tIF P:TAG = \u0022Stg1_Eng1\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022ModuleEnginesRF\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Stg1_Eng1Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Stg1_Eng2\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022ModuleEnginesRF\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Stg1_Eng2Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tIF P:TAG = \u0022Stg1_Eng3\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022ModuleEnginesRF\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Stg1_Eng3Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tIF P:TAG = \u0022Stg1_Eng4\u0022\n\t\t{\n\t\t\tFOR MOD IN P:MODULES\n\t\t\t{\n\t\t\t\tIF MOD = \u0022ModuleEnginesRF\u0022\n\t\t\t\t{\n\t\t\t\t\tSET Stg1_Eng4Mod to P:GETMODULE(MOD).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nCode used for DOACTIONs..\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E\tSet ThisTime to 10.\n\tUntil ThisTime \u0026lt; 1\n\t{   \n\t\tSet ThisTime to ThisTime - 1.\n\t\tPrint ThisTime \u002B \u0022 \u0022 at (22,4).\n\t\tPrint THROTTLE at (22,14).\n\t\tIf ThisTime = 4\n\t\t{\n\t\t\tPrint \u0022Activated   \u0022 at (22,12).\n\t\t\tLock THROTTLE to 1.0.\n\t\t\tStg1_Eng1Mod:doaction(\u0022activate engine\u0022,TRUE).\n\t\t\tStg1_Eng2Mod:doaction(\u0022activate engine\u0022,TRUE).\n\t\t\tStg1_Eng3Mod:doaction(\u0022activate engine\u0022,TRUE).\n\t\t\tStg1_Eng4Mod:doaction(\u0022activate engine\u0022,TRUE).\n//\t\t\tStage.\n//\t\t\tToggle(AG250).\n\t\t\t\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E OFF.\n\t\t\tSET SASMODE to \u0022STABILITYASSIST\u0022.\n\t\t}\n\t\tWait 1.\n\t}\n\tTower1Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tTower2Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tTower3Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tClamp1Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tClamp2Mod:doaction(\u0022release clamp\u0022,TRUE).\n\tClamp3Mod:doaction(\u0022release clamp\u0022,TRUE).\n//\tStage.\n//\tToggle(AG249).\n//--- TOWERS AND CLAMPS ---//\n\tPrint \u0022Activated   \u0022 at (22,18).\n\tPrint \u0022Activated   \u0022 at (22,20).\n\twait 2.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m still trying to debug a problem I found in the development version of kOS where it doesn\u0027t handle vessel spliltting or joining quite right, and it\u0027s hard to produce predictably.\u00A0 All kOS Steering happens via a SteeringManager, which there is supposed to be one of per vessel, and when the vessel splits into two vessels (i.e. staging) it\u0027s supposed to recalculate that relationship and attach a new SteeringManager to the new vessel that contains the kOS unit, even if it\u0027s a newly spawned vessel.\u00A0 There may be something not working about this, but I\u0027m not the expert in how that part of kOS works.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk2","CreatedById":167493,"CreatedDateTime":"2017-04-08T17:46:47Z","Content":"\n\u003Cp\u003E\nAn interesting point is that this problem wasn\u0027t around with KSP versions v1.05 and v1.13, as all worked well there.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s probably the change in KSP v1.2\u002B that\u0027s broken it \u00A0- This could be the starting point for debugging ?\n\u003C/p\u003E\n"},{"CreatedByName":"Frank Einstein","CreatedById":176160,"CreatedDateTime":"2017-04-09T05:39:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223014129\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491659324\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOn the second problem: MuMech isn\u0027t kOS.\u00A0 That problem isn\u0027t coming from us.\n\u003C/p\u003E\n\u003Cp\u003E\nOn the first problem:\u00A0 Is that the only exception in your log file?\u00A0 Were there other exceptions at points earlier in the file before that one?\u00A0 Because to me that exception looks like the symptom of the problem, not the cause of it.\n\u003C/p\u003E\n\u003Cp\u003E\nIn general, the first advice when someone says this happens is:\n\u003C/p\u003E\n\u003Cp\u003E\n1 - Be certain the release of kOS you are using matches the release of KSP you are using.\u00A0 Each kOS release is advertised to only work for the newest KSP that was out at the time it was released.\u00A0 I know this is a pain but there\u0027s not much we can do about it because changes SQUAD makes to KSP often mandate changes to the kOS mod that cause it to not be backward compatible with older versions of KSP.\u00A0 (i.e. renaming a method in the API and changing how you call it:\u00A0 So kOS MUST call Thing.foo(a) to work with older KSP but MUST call Thing.Baz(a,b) to work with newer KSP.\u00A0 There\u0027s just no real way to make one version of kOS that satisfies those two contradictory rules when that sort of thing happens.)\n\u003C/p\u003E\n\u003Cp\u003E\n2 - Try deleting the entire GameData/kOS folder and re-downloading the ZIP and re-installing it, just to ensure you didn\u0027t accidentally screw up something about the installation the first time.\u00A0 This symptom can often happen as a result of just missing one file (like an image PNG or something like that) in the installation.\u00A0 Once the attempt to open that one file fails, the exception that gets thrown can cause it to abort before it completes lots of other initialization steps and thus trigger all sorts of other problems.\u00A0 This is why I want to see the exception that happens from kOS *first* in your output log.\u00A0 It would be strange for this one you\u0027re showing to be the first exception thrown.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThank you for your reply.\n\u003C/p\u003E\n\u003Cp\u003E\nI think it is important to say that I am using the last version of kOS (1.0.3) with the last version of KSP (1.2.2). I am using around 80 addons with KSP, so I guess that my kOS bug is much probably coming from a compatibility problem with an other addon. I tried to look in the log for other errors but there is so many it\u0027s not an easy task. I have to mention every of my addons are all working fine despite of many errors in the log file. kOS is also working fine, I can run scripts, copy them, delete them, etc... The only problem is the toolbar button that is not working in any of the scenes. (Space Center, \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, Ship, etc...) I found that the bug that doesn\u0027t allow me to paste in the kOS terminal comes from the MechJeb2 addon (MuMech), which is the last release.\n\u003C/p\u003E\n\u003Cp\u003E\nIf it can help you to find the bug about my non-working toolbar button, I uploaded my full log file on Mediafire. During this log, all I did is open my last saved game, clicked the kOS toolbar button a few times, then I went into a ship with a kOS module and I tried to paste some text into a kOS terminal, then I closed the game.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022http://www.mediafire.com/file/b8ip97vxwpic7hh/KSP_2017-04-09_00h48.log\u0022 rel=\u0022external nofollow\u0022\u003EKSP_2017-04-09_00h48.log\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Sebra","CreatedById":174461,"CreatedDateTime":"2017-04-09T06:22:03Z","Content":"\n\u003Cp\u003E\nWhile you are speaking about alpha version of kOS...\n\u003C/p\u003E\n\u003Cp\u003E\nIt would be good for kOS script to be able to get/get the view, how player look at the ship. I think it is not hard.\n\u003C/p\u003E\n\u003Cp\u003E\nGet can be used as input direction to control some behaviour. To control from mouse for example.\n\u003C/p\u003E\n\u003Cp\u003E\nSet can be used to get better view. For example view from the ship to the target.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"maculator","CreatedById":122127,"CreatedDateTime":"2017-04-09T10:44:16Z","Content":"\n\u003Cp\u003E\nHi I got a thing I wonder about:\n\u003C/p\u003E\n\u003Cp\u003E\nIf I want to compare two numbers and since they\u0027re never 100% exact numbers what\u0027s the best way to deal with it?\n\u003C/p\u003E\n\u003Cp\u003E\n1. do it like if x\u002B1\u0026lt;y and add/subtrackt a bit of one.\n\u003C/p\u003E\n\u003Cp\u003E\n2. make a function that detects if theyre close enough: a - var. \u0026lt; b and a \u002B var. \u0026gt; b\n\u003C/p\u003E\n\u003Cp\u003E\n3 use the round() function kos provides?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd if I put \u0022return [stuff]\u0022 in a function will it, if the conditions are met, kind of \u0022replace\u0022 itself with [stuff]?!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nthanks\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-09T10:45:27Z\u0022 title=\u002204/09/2017 10:45  AM\u0022 data-short=\u00227 yr\u0022\u003EApril 9, 2017\u003C/time\u003E by maculator\u003C/strong\u003E\n\u003Cbr\u003Egerman and english grammar hickups\n\u003C/span\u003E\n"},{"CreatedByName":"Sebra","CreatedById":174461,"CreatedDateTime":"2017-04-09T10:52:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223015107\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491734656\u0022 data-ipsquote-userid=\u0022122127\u0022 data-ipsquote-username=\u0022maculator\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, maculator said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf I want to compare two numbers and since they\u0027re never 100% exact numbers what\u0027s the best way to deal with it?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nif abs(x-y)\u0026lt;b ...\n\u003C/p\u003E\n\u003Cp\u003E\nor\n\u003C/p\u003E\n\u003Cp\u003E\nif abs(x/y-1)\u0026lt;b...\n\u003C/p\u003E\n\u003Cp\u003E\nbased on if you want absolute or relative difference.\n\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2017-04-09T10:52:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223015107\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491734656\u0022 data-ipsquote-userid=\u0022122127\u0022 data-ipsquote-username=\u0022maculator\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, maculator said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHi I got a thing I wonder about:\n\u003C/p\u003E\n\u003Cp\u003E\nIf I want to compare two numbers and since they\u0027re never 100% exact numbers what\u0027s the best way to deal with it?\n\u003C/p\u003E\n\u003Cp\u003E\n1. do it like if x\u002B1\u0026lt;y and add/subtrackt a bit of one.\n\u003C/p\u003E\n\u003Cp\u003E\n2. make a function that detects if theyre close enough: a - var. \u0026lt; b and a \u002B var. \u0026gt; b\n\u003C/p\u003E\n\u003Cp\u003E\n3 use the round() function kos provides?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd if I put \u0022return [stuff]\u0022 in a function will it, if the conditions are met, kind of \u0022replace\u0022 itself with [stuff]?!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nthanks\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nDepends on application for the rest of code how you want to use it, but I think that MAX function might suit better for thing that you need. It returns value of bigger variable that can be used in IF conditions later on.\n\u003C/p\u003E\n"},{"CreatedByName":"Meltdown","CreatedById":173339,"CreatedDateTime":"2017-04-09T11:20:18Z","Content":"\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223015107\u0022 data-ipsquote-contentid=\u002261827\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491734656\u0022 data-ipsquote-userid=\u0022122127\u0022 data-ipsquote-username=\u0022maculator\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n29 minutes ago, maculator said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHi I got a thing I wonder about:\n\u003C/p\u003E\n\u003Cp\u003E\nIf I want to compare two numbers and since they\u0027re never 100% exact numbers what\u0027s the best way to deal with it?\n\u003C/p\u003E\n\u003Cp\u003E\n1. do it like if x\u002B1\u0026lt;y and add/subtrackt a bit of one.\n\u003C/p\u003E\n\u003Cp\u003E\n2. make a function that detects if theyre close enough: a - var. \u0026lt; b and a \u002B var. \u0026gt; b\n\u003C/p\u003E\n\u003Cp\u003E\n3 use the round() function kos provides?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd if I put \u0022return [stuff]\u0022 in a function will it, if the conditions are met, kind of \u0022replace\u0022 itself with [stuff]?!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nthanks\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// [Int,Int] ==\u0026gt; [Boolean]\nfunction is_equal{\nParameter n,m.\n\tif mod(n,m) \u0026lt;\u0026gt; 0 return false.\n\telse return true.\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis will work for any natural number.\n\u003C/p\u003E\n\u003Cp\u003E\nHave a look at the function; It takes two arguments and is returning a boolean. If you call it in the kOS Window with \u0022Print is_equal(1,2).\u0022, the compiler reads it like this :\n\u003C/p\u003E\n\u003Cp\u003E\nprint is_equal(1,2)\n\u003C/p\u003E\n\u003Cp\u003E\nprint is equal(false)\n\u003C/p\u003E\n\u003Cp\u003E\nprint false\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"maculator","CreatedById":122127,"CreatedDateTime":"2017-04-09T11:25:55Z","Content":"\n\u003Cp\u003E\nI\u0027ll search for mod in the documentation, thanks.\n\u003C/p\u003E\n\u003Cp\u003E\nRight now I\u0027m using this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Efunction circa {\n\tparameter a, b, tolerance.\n\t\n\tif (a - tolerance) \u0026lt; b and (a \u002B tolerance) \u0026gt; b {\n\t\treturn true.\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}