{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":45,"Articles":[{"CreatedByName":"Pondafarr","CreatedById":99169,"CreatedDateTime":"2014-07-11T16:58:58Z","Content":"\n\u003Cp\u003EI think I understand. \u003C/p\u003E\u003Cp\u003EIn theory, I was only concerned with checking under conditions a flameout might occur...above 20k for all engine, and above 25k for half engines.\u003C/p\u003E\u003Cp\u003EHow would I loop this correctly for my ascent phase?\u003C/p\u003E\n"},{"CreatedByName":"Laie","CreatedById":110461,"CreatedDateTime":"2014-07-11T18:57:21Z","Content":"\n\u003Cp\u003EI don\u0027t know the words to explain it properly (and suspect you don\u0027t know them either). But I can show you how I do it:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ewhen flameout \u0026gt; 0 then {\u003Cbr\u003E  toggle agX //jets off\u003Cbr\u003E  toggle agY //rockets on\u003Cbr\u003E  set mode_trigger to 1.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003Euntil mode_trigger=1 {\u003Cbr\u003E check conditions (climbrate, airspeed, what have you)\u003Cbr\u003E adjust pitch\u003Cbr\u003E adjust throttle\u003Cbr\u003E check engines for flameouts\u003Cbr\u003E wait 1.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is not proper code, but should illustrate what I mean: every second, the conditions are checked and the flight parameters are adjusted. Looking after the engines is just one more condition to check. Once I have a flameout, this triggers the WHEN..THEN block, which in turn causes the loop to end.\u003C/p\u003E\u003Cp\u003EIf you have nothing else to do but wait for a flameout, you could also do it like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Euntil flameout \u0026gt; 0 {\u003Cbr\u003E  for engines in enginelist {...\u003Cbr\u003E}}\u003Cbr\u003Etoggle agX.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis would just check for flameouts, over and over again, until it eventually happens.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-11T19:04:03Z\u0022 title=\u002207/11/2014 07:04  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 11, 2014\u003C/time\u003E by Laie\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pondafarr","CreatedById":99169,"CreatedDateTime":"2014-07-11T20:19:58Z","Content":"\n\u003Cp\u003EAhh, and a light bulb illuminates.\u003C/p\u003E\u003Cp\u003Ewith this pseudo code, I have a better idea where I need to go, thanks!\u003C/p\u003E\n"},{"CreatedByName":"Pondafarr","CreatedById":99169,"CreatedDateTime":"2014-07-11T23:00:29Z","Content":"\n\u003Cp\u003EOk, next silly question. Is it considered proper to have a single program or to cut it up into master/slave routines? Both seem to have pros and cons. \u003C/p\u003E\u003Cp\u003EI have two options:\u003C/p\u003E\u003Cp\u003EOne mammoth program, currently ~325 lines. Pain to sift through to find the area I need to fix (and I have to fix ALOT usually lol)\u003C/p\u003E\u003Cp\u003EMaster file which calls subprograms. Easier to manage individual sections of code, but I\u0027m not sure I can call out other programs from within a program and return to master upon completion?\u003C/p\u003E\u003Cp\u003ECurrent plan:\u003C/p\u003E\u003Cp\u003EBOOT (loads all checklists from archive, initiates Preflight Checklist\u003C/p\u003E\u003Cp\u003EPreflight Checklist (Sets all variables, initiates takeoff, conditionally calls other programs)\u003C/p\u003E\u003Cp\u003EMidflight Profile (2000 to 25000, most of the issues I\u0027ve been fighting recently)\u003C/p\u003E\u003Cp\u003EHigh Altitude (\u0026gt;25000)\u003C/p\u003E\u003Cp\u003ECircularization\u003C/p\u003E\u003Cp\u003ELanding at KSC from Orbit (currently untested)\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-11T23:11:08Z","Content":"\n\u003Cp\u003ECalling out to other programs works just fine. Variables are global so whatever the child program sets the parent program should see. There\u0027s a few things that don\u0027t cross the program boundary correctly - like triggers (you set up a WHEN/THEN trigger in a subprogram and it won\u0027t trigger in the parent program).\u003C/p\u003E\u003Cp\u003EAs far as performance goes, the very first time a program runs it will take a moment to compile the subprograms which takes a bit of time but from then on it never re-compiles it so it will be faster after that.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-07-12T07:09:23Z","Content":"\n\u003Cp\u003Ewhy is it than when I type in \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Eprint \u0022target is at \u0022 \u002B abs(target:bearing).\u003C/span\u003E directly into the console it spits out \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Etarget is at 0.247887546\u003C/span\u003E yet when I type the exact same thing into a program file and run it, the console tells me \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Evalues of type System.String cannot have a suffix\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E??\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-12T07:28:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003Ewhy is it than when I type in \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Eprint \u0022target is at \u0022 \u002B abs(target:bearing).\u003C/span\u003E directly into the console it spits out \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Etarget is at 0.247887546\u003C/span\u003E yet when I type the exact same thing into a program file and run it, the console tells me \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Evalues of type System.String cannot have a suffix\u003C/span\u003E\u003Cp\u003E??\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat happened is just that your target wasn\u0027t set when running the program, but it was set when running the interactive command.\u003C/p\u003E\u003Cp\u003EUnfortunately one thing I really don\u0027t agree with about how TARGET works is that when you have no target set, the keyword returns an object of type STRING instead of one that is a vessel or body. When you have no target set, then TARGET is the string \u0022NONE\u0022, so you get the problem that you can\u0027t get the :bearing of a string.\u003C/p\u003E\u003Cp\u003EThe reason I don\u0027t like this is that the kos script writer is helpless to protect the program against this problem given that there exists no tests for the type of an object. You can\u0027t say \u0022if TARGET is a string do this, else do that\u0022. There\u0027s also no way to check if an object is NULL so you can\u0027t have TARGET return NULL when there\u0027s no target either.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-07-12T08:41:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWhat happened is just that your target wasn\u0027t set when running the program, but it was set when running the interactive command.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eactually no, here\u0027s what\u0027s really happening. If I run this code\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to \u0022waypoint1\u0022.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; target selected\u0022.\u003Cbr\u003E\u003Cbr\u003Ebrakes off.\u003Cbr\u003Elock wheelsteering to target.\u003Cbr\u003Elock wheelthrottle to turnSpeed.\u003Cbr\u003Euntil abs(target:bearing) \u0026lt; 1 {\u003Cbr\u003E  clearscreen.\u003Cbr\u003E  print \u0022target bearing: \u0022 \u002B target:bearing.\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen I get the error message. If I run this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to \u0022waypoint1\u0022.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; target selected\u0022.\u003Cbr\u003E\u003Cbr\u003Ebrakes off.\u003Cbr\u003Elock wheelsteering to target.\u003Cbr\u003Elock wheelthrottle to turnSpeed.\u003Cbr\u003Euntil abs(target:bearing) \u0026lt; 1 {\u003Cbr\u003E  clearscreen.\u003Cbr\u003E}.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI still get the error message. But if I run this\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to \u0022waypoint1\u0022.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; target selected\u0022.\u003Cbr\u003E\u003Cbr\u003Ebrakes off.\u003Cbr\u003Elock wheelsteering to target.\u003Cbr\u003Elock wheelthrottle to turnSpeed.\u003Cbr\u003Ewait until abs(target:bearing) \u0026lt; 1.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen the target is properly selected and the code executes... except for the fact that I never defined \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EturnSpeed\u003C/span\u003E, and after the console informs me of that fact I can\u0027t see to get the cursor to appear in it anymore, I guess because the program is still running as the rover won\u0027t be moving to turn and satisfy the \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Ewait until\u003C/span\u003E command.\u003C/p\u003E\u003Cp\u003EI\u0027m using the latest pre-release\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-07-12T10:00:09Z","Content":"\n\u003Cp\u003Ealso, my brain is melting trying to get a proper pitch reading from my rover. I\u0027ve seen it two ways so far. The first is to Control From Here via the rover body, which places my navball vector indicator straight up. Now, if I go down or up a slope facing north or south, I get no pitch change. If I go up or down a slope facing east or west, I get a pitch change but its the same value so I can\u0027t actually tell if I\u0027m going up or down a slope. If I Control From Here with the Rover Brain from \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/75059-0-23-5-RoverScience-Full-Release-1-0-Better-interactive-science-for-rovers%21\u0022 rel=\u0022external nofollow\u0022\u003ERover Science\u003C/a\u003E then I get a nice horizontal-facing navball but then my roll is the value that tells me if I\u0027m pitched up or down however when my heading is between 2 and 178 degrees when I\u0027m level the roll value is 90. When my heading is 182 to 358 degrees, my roll value is 270 when I\u0027m level. Anytime I\u0027m facing nearly directly north or south my roll becomes 0 and my pitch becomes 90 or 270.\u003C/p\u003E\u003Cp\u003ESo the first method is just KSP being KSP and is meant for ships, not rovers. The second method is still me getting screwed by KSP being designed for ships but also I think in part due to improper orientation of the part model file.\u003C/p\u003E\u003Cp\u003ESo is there any way to tell whether my rover is going up or down a slope without having to do a crapload of calculations to derive it?\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-07-12T10:29:50Z","Content":"\n\u003Cp\u003Eand one last problem that has me stumped going to bed. I begin my rover autopilot with a program that initializes a bunch of variables and starts the rover off towards its target. That then calls a program that watches over the rover as it drives with several when...then statements looking for problems. One of those problems is going too fast (accelerating down a slope) so some braking is needed. Since I can\u0027t put\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ebrakes on.\u003Cbr\u003Ewait 1.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Einside of a trigger, I call another program to do that for me, which then calls back to the monitoring program. But then the monitoring program just ends. Here\u0027s the code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EBeginDrive\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:calendar \u002B \u0022\u0026gt;\u0022.\u003Cbr\u003Elog \u0022\u0026lt;\u0022 \u002B time:calendar \u002B \u0022\u0026gt;\u0022 to RoverLog.\u003Cbr\u003E\u003Cbr\u003E// data regarding waypoints\u003Cbr\u003Eset numWaypoints to 1. // must be at least 1\u003Cbr\u003Eset currentWaypoint to 1. // can start at any number from 1 to numWaypoints\u003Cbr\u003Eset waypointName to \u0022waypoint\u0022. // whatever you have your waypoint vessels named\u003Cbr\u003E\u003Cbr\u003E// environment variables\u003Cbr\u003Eset yesterday to time:day. // today is yesterday... until tomorrow\u003Cbr\u003Eset currentSlope to 0. // 0 = level, 1 = upslope, 2 = downslope\u003Cbr\u003Eset absOn to false. // ABS activated or not\u003Cbr\u003Eset lastABS to -1. // when to re-enable the ABS message, previous speed\u003Cbr\u003Eset goingAround to false. // trying a new route\u003Cbr\u003Eset oneWayTried to false. // have we tried going around one way already?\u003Cbr\u003Eset haveArrived to false. // lets the drive monitoring program switch to the next waypoint\u003Cbr\u003Eset doneBraking to false.\u003Cbr\u003E\u003Cbr\u003E// variables to control the rover driving\u003Cbr\u003Eset upSlopeAngle to 10. // an angle greater than or equal this will enable certain driving limits\u003Cbr\u003Eset downSlopeAngle to -10. // an angle greater than or equal to this will enable certain driving limits\u003Cbr\u003Eset cruiseSpeed to 0.75. // this is how fast the rover will travel when driving straight and level\u003Cbr\u003Eset downSlopeSpeed to 0.5. // this is how fast the rover will travel when driving down a slope greater than downSlopeAngle\u003Cbr\u003Eset upSlopeSpeed to 1. // this is how fast the rover will travel when driving up a slope greater than upSlopeAngle\u003Cbr\u003Eset currentSpeed to cruiseSpeed. // for various drive functions, the speed used can be any of the ones defined above\u003Cbr\u003Eset overSpeed to 10. // m/s of how fast not to go\u003Cbr\u003Eset absUseCount to 0. // keeps us from stepping on the brakes forever\u003Cbr\u003Eset goAroundMaxAttempts to 5. // how many times we should attempt to climb a hill before calling for help\u003Cbr\u003Eset goAroundDistance to 500. // how many meters we should travel before attempting to drive to the waypoint again\u003Cbr\u003Eset goArounds to 0. // variable that tracks the number of attempts\u003Cbr\u003Eset goAroundSpeed to 2. // m/s that triggers the rover to stop trying to climb a slope\u003Cbr\u003Eset lastGoAroundLocation to 0. // the last place we attempted a go-around\u003Cbr\u003Eset firstGoAroundLocation to 0. // the place where we first attempted a go-around\u003Cbr\u003E\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; program initialized\u0022.\u003Cbr\u003Elog \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; program initialized\u0022 to RoverLog.\u003Cbr\u003E\u003Cbr\u003E// time to head for the first waypoint!\u003Cbr\u003Eset target to waypointName \u002B currentWaypoint.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; target selected\u0022.\u003Cbr\u003Elog \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; target selected\u0022 to RoverLog.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; driving to target\u0022.\u003Cbr\u003Elog \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; driving to target\u0022 to RoverLog.\u003Cbr\u003Ebrakes off.\u003Cbr\u003Elock wheelsteering to target.\u003Cbr\u003Elock wheelthrottle to currentspeed.\u003Cbr\u003E\u003Cbr\u003Erun MonitorDrive.\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclearscreen.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMonitorDrive\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003Eif doneBraking {\u003Cbr\u003E print \u0022coming from ABS\u0022. \u003Cbr\u003E set doneBraking to false.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// update the log if a new day passes\u003Cbr\u003Ewhen yesterday \u0026lt; time:day then {\u003Cbr\u003E set yesterday to time:day.\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:calendar \u002B \u0022\u0026gt;\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:calendar \u002B \u0022\u0026gt;\u0022 to RoverLog.\u003Cbr\u003E preserve.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// make sure we never go too fast\u003Cbr\u003Ewhen surfacespeed \u0026gt; overspeed then {\u003Cbr\u003E if absOn = false {\u003Cbr\u003E set absOn to true.\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; ABS activated\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; ABS activated\u0022 to RoverLog.\u003Cbr\u003E }.\u003Cbr\u003E lock wheelthrottle to 0.\u003Cbr\u003E brakes on.\u003Cbr\u003E set absUseCount to absUseCount \u002B 1.\u003Cbr\u003E set lastABS to time:seconds.\u003Cbr\u003E\u003Cbr\u003E // if we\u0027re constantly tapping the brakes, let\u0027s try slowing down if we can\u003Cbr\u003E if absUseCount \u0026gt; 25 and ship:control:wheelthrottle \u0026gt; 0.1 {\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; slowing down to prevent overspeed\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; slowing down to prevent overspeed\u0022 to RoverLog.\u003Cbr\u003E set absUseCount to 0.\u003Cbr\u003E lock wheelthrottle to ship:control:wheelthrottle - 0.1.\u003Cbr\u003E }.\u003Cbr\u003E\u003Cbr\u003E run ABS.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// reset the ABS message if 5 seconds have passed since the last use of ABS\u003Cbr\u003E// also resume previous speed\u003Cbr\u003Ewhen absOn = true and time:seconds - lastABS \u0026gt; 5 then {\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; resuming normal speed\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; resuming normal speed\u0022 to RoverLog.\u003Cbr\u003E set absOn to false.\u003Cbr\u003E lock wheelthrottle to currentSpeed.\u003Cbr\u003E set absUseCount to 0.\u003Cbr\u003E set lastABS to -1.\u003Cbr\u003E preserve.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// start slowing down if we are close to our waypoint\u003Cbr\u003Ewhen target:distance \u0026lt; 150 then {\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; Approaching waypoint\u0022 \u002B currentWaypoint.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; Approaching waypoint\u0022 \u002B currentWaypoint to RoverLog.\u003Cbr\u003E lock wheelthrottle to -0.5.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// come to a stop at our waypoint\u003Cbr\u003Ewhen target:distance \u0026lt; 25 then {\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; Reached waypoint\u0022 \u002B currentWaypoint.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; Reached waypoint\u0022 \u002B currentWaypoint to RoverLog.\u003Cbr\u003E lock wheelthrottle to 0.\u003Cbr\u003E brakes on.\u003Cbr\u003E set haveArrived to true.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Ewait until haveArrived.\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// test to ensure program ending *after* coming back from ABS\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EABS\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003Ebrakes off.\u003Cbr\u003Elock wheelthrottle to currentSpeed.\u003Cbr\u003Eset doneBraking to true.\u003Cbr\u003Erun MonitorDrive.\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ewait 1.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Pondafarr","CreatedById":99169,"CreatedDateTime":"2014-07-12T11:08:44Z","Content":"\n\u003Cp\u003Eperhaps the wait statement needs something to check?\u003C/p\u003E\u003Cp\u003Etry \u003C/p\u003E\u003Cp\u003Ewait until haveArrived = true.\u003C/p\u003E\u003Cp\u003Eor convert it to a \u003C/p\u003E\u003Cp\u003Eset haveArrived = 0.\u003C/p\u003E\u003Cp\u003E// come to a stop at our waypoint\u003C/p\u003E\u003Cp\u003E do stuff {\u003C/p\u003E\u003Cp\u003E set haveArrived to haveArrived \u002B 1.\u003C/p\u003E\u003Cp\u003E}.\u003C/p\u003E\u003Cp\u003Ewait until haveArrived \u0026gt; 1.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-12T14:47:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003EThen the target is properly selected and the code executes... except for the fact that I never defined \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003EturnSpeed\u003C/span\u003E, and after the console informs me of that fact I can\u0027t see to get the cursor to appear in it anymore, I guess because the program is still running as the rover won\u0027t be moving to turn and satisfy the \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Ewait until\u003C/span\u003E command.\u003Cp\u003EI\u0027m using the latest pre-release\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWait, does the code execute or does the console inform you that you never defined turnSpeed? Those seem to be mutually exclusive descriptions of the situation, since seeing that message would mean the program dies there and never gets to the part where it even tries to execute abs(target:bearing).\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-12T14:53:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003Eand one last problem that has me stumped going to bed. I begin my rover autopilot with a program that initializes a bunch of variables and starts the rover off towards its target. That then calls a program that watches over the rover as it drives with several when...then statements looking for problems. One of those problems is going too fast (accelerating down a slope) so some braking is needed. Since I can\u0027t put\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ebrakes on.\u003Cbr\u003Ewait 1.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Einside of a trigger, I call another program to do that for me\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe fact that you can\u0027t do a \u0027wait\u0027 inside a THEN clause is still true regardless of whether it happens directly or via a call to a subprogram. The problem is that the WAIT statement waits until the next physics timeslice to perform the check, but the THEN clause all occurs within one physics timeslice.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-12T15:10:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESo is there any way to tell whether my rover is going up or down a slope without having to do a crapload of calculations to derive it?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESince it\u0027s a matter of opinion how much calculation constitutes a\u0022crapload\u0022, I can\u0027t answer that.\u003C/p\u003E\u003Cp\u003EYour post contains no information about how you\u0027re trying to read the pitch, so it\u0027s not possible to answer it.\u003C/p\u003E\u003Cp\u003ETo find out if you\u0027re going up or down a slope, check if the upward facing vector is aimed closer to your velocity direction or more away from it. Do that with vector dot product.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E// Put this somewhere inside your main loop:\u003Cbr\u003E    set upvec to up:vector.  // a unit vector pointing straight up.\u003Cbr\u003E    set velvec to ship:velocity:surface:normalized. // a unit vector pointing in your velocity direction.\u003Cbr\u003E    set dp to vdot(velvec,upvec).\u003Cbr\u003E    print \u0022travel direction slope is \u0022 \u002B ( 90 - arccos(dp) ) \u002B \u0022 degrees\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf your velocity is exactly perpendicular to \u0022up\u0022, the dot product is zero.\u003C/p\u003E\u003Cp\u003EIf the angle between velocity and up is less than 90, then dp is positive.\u003C/p\u003E\u003Cp\u003EIf the angle between velocity and up is more than 90 degrees, then dp is negative.\u003C/p\u003E\u003Cp\u003ESince both upvec and velvet are unit vectors, the dot product between them is the cosine of the angle between them.\u003C/p\u003E\u003Cp\u003E(EDIT: There\u0027s also a vector function VANG that gets angle between vectors directly, but I\u0027m used to using dot product for it, and I strongly suspect that VANG is implemented with dot product under the hood anyway.)\u003C/p\u003E\n"},{"CreatedByName":"Laie","CreatedById":110461,"CreatedDateTime":"2014-07-12T15:26:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003EIf I go up or down a slope facing east or west, I get a pitch change but its the same value so I can\u0027t actually tell if I\u0027m going up or down a slope. [...] when my heading is between 2 and 178 degrees when I\u0027m level the roll value is 90. When my heading is 182 to 358 degrees, my roll value is 270 when I\u0027m level. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWelcome to the club. If anyone knows a solution to this...? Please. Pretty please.\u003C/p\u003E\u003Cp\u003ERegarding brakes, I don\u0027t let kOS to use them. Braking without flipping is an art... however, I had great success with setting a desired speed and controlling the throttle to stick to it.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elock v to round(ship:airspeed,3).\u003Cbr\u003Eset tv to 16.   //target velocity\u003Cbr\u003E\u003Cbr\u003Eset t to 0.5.\u003Cbr\u003Elock wheelthrottle to t.\u003Cbr\u003E\u003Cbr\u003Euntil 1 = 2 {\u003Cbr\u003E if v \u0026lt; (tv*0.97) {set t to min(1,(t \u002B 0.01)).}\u003Cbr\u003E if v \u0026gt; (tv*1.03) {set t to max(-1,(t - 0.01)).}\u003Cbr\u003E print v \u002B \u0022 \u0022 \u002B t.\u003Cbr\u003E wait 0.2.\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is merely the core function -- as written, this will over-and undershoot quite a bit and take a long time to settle down on the target speed. But I assure you that this approach works quite well. Rover maintains its speed going up-and downhill, adapting to whatever slope comes it\u0027s way.\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-07-12T16:29:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pondafarr\u0022 data-cite=\u0022Pondafarr\u0022\u003E\u003Cdiv\u003Eperhaps the wait statement needs something to check?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, the program runs fine at first it\u0027s only when it is run the second time from ABS that it just ends\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWait, does the code execute or does the console inform you that you never defined turnSpeed?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EClarification - in all previous attempts to run the code the target was never selected (I was watching it to turn green in the distance and it didn\u0027t). In the instance where I get the variable undefined error, the program successfully selects the target object (it turns green on screen). So that\u0027s what I meant by the code executing - the variable was never defined in the previous attempts either. I put the code up there so you or anyone could try to reproduce\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe fact that you can\u0027t do a \u0027wait\u0027 inside a THEN clause is still true regardless of whether it happens directly or via a call to a subprogram. The problem is that the WAIT statement waits until the next physics timeslice to perform the check, but the THEN clause all occurs within one physics timeslice.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAwwww shucks I was afraid of that, but hoped calling a new program would be a fresh slate in regards to physics ticks. Oh well, there are other ways to do it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EYour post contains no information about how you\u0027re trying to read the pitch, so it\u0027s not possible to answer it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, yes I forgot that while editing the file in the game I somehow managed to overwrite the archived version and lost all the code I was using to detect slope in the MonitorDrive code that I pasted here. So my original target was using the ship:facing direction vector. My knowledge of maths is pretty awful despite being 32 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E Thanks for the velocity vector suggestion I will work to get that implemented.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Laie\u0022 data-cite=\u0022Laie\u0022\u003E\u003Cdiv\u003ERegarding brakes, I don\u0027t let kOS to use them. Braking without flipping is an art... \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, it\u0027s just all in the design. If you\u0027re flipping when braking you need to lower the rover\u0027s CoM. Place the wheels higher up on the body, for starters. I\u0027ve sped my rover up to 9m/s on the runway, locked the brake on with the button on the altimeter and nosed down a tad on final stop but didn\u0027t flip (it used to be flip-happy tho). That is, unless my camera arm is up \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E now it\u0027s mandated that the rover travel with the camera arm folded down\u003C/p\u003E\n"},{"CreatedByName":"mileshatem","CreatedById":61676,"CreatedDateTime":"2014-07-12T17:13:26Z","Content":"\n\u003Cp\u003EI must be missing something very simple, but I\u0027ve been banging my head against this long enough that I\u0027m hoping someone else point out the obvious.\u003C/p\u003E\u003Cp\u003EI want to calculate the angle between my active ship\u0027s facing and a maneuver node. The problem is that node:burnvector returns vector format, and ship:facing returns direction format. And as far as I can tell, there\u0027s no alternative for nodes which will return a direction, or for ships which will return a vector. I\u0027m hoping I don\u0027t have to manually convert from one to the other, but if I do is there a wiki page or something someone can link me to on how to do that? Thanks.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-07-12T18:12:51Z","Content":"\n\u003Cp\u003ETry ship:facing:vector \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"mileshatem","CreatedById":61676,"CreatedDateTime":"2014-07-12T19:26:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003ETry ship:facing:vector \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would be the very simple thing I was missing. Thank you!\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-07-12T19:43:38Z","Content":"\n\u003Cp\u003Eawwwws yea. Thanks for the help guys! My rover autopilot software is shaping up nicely. It just drove off the runway and out to a waypoint flag 1.2km to the north\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.blade-edge.com/images/forums/ksp/kos.jpg\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://www.blade-edge.com/images/forums/ksp/kos_t.jpg\u0022 alt=\u0022kos_t.jpg\u0022\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt will run at a set speed unless it detects it\u0027s going too fast, which is when it will tap the brakes to slow down. If that doesn\u0027t work after a while it will decrease speed. It can tell when it hits level ground again so it will resume cruise speed. If it detects a slope that\u0027s deemed to steep downwards it will also slow down. Finally it will gradually slow up and stop near the waypoint. This is all tweakable via variables to handle different rovers on different planets and such. My next addition will be speeding up when it climbs a slope and a go-around feature - if it starts crawling up a slope it will back down, trek laterally a set distance, and try again to move towards the waypoint. If it gets stuck again on a lateral traverse before traveling the set distance, it will try to traverse the opposite direction. If that also doesn\u0027t work or after a set number of tries to reach the waypoint fails it will stop and await further instructions. My next milestone is to make it out to the desert west of KSC - that\u0027s like 150km!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EBeginDrive\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003E// BeginDrive\u003Cbr\u003E// ----------\u003Cbr\u003E// sets some global variables needed by the various\u003Cbr\u003E// programs that will be called during the drive\u003Cbr\u003E/////////////////////////////////////////////////////\u003Cbr\u003E\u003Cbr\u003Eclearscreen.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:calendar \u002B \u0022\u0026gt;\u0022.\u003Cbr\u003Elog \u0022\u0026lt;\u0022 \u002B time:calendar \u002B \u0022\u0026gt;\u0022 to RoverLog.\u003Cbr\u003E\u003Cbr\u003E// data regarding waypoints\u003Cbr\u003Eset numWaypoints to 1. // must be at least 1\u003Cbr\u003Eset currentWaypoint to 1. // can start at any number from 1 to numWaypoints\u003Cbr\u003Eset waypointName to \u0022waypoint\u0022. // whatever you have your waypoint vessels named\u003Cbr\u003E\u003Cbr\u003E// environment variables\u003Cbr\u003Eset yesterday to time:day. // today is yesterday... until tomorrow\u003Cbr\u003Eset currentSlopeType to 0. // 0 = level, 1 = upslope, 2 = downslope\u003Cbr\u003Eset currentSlopeAngle to 0. // the degree of up/down pitch the rover is currently experiencing\u003Cbr\u003Eset absOn to false. // ABS activated or not\u003Cbr\u003Eset lastABS to -1. // when to re-enable the ABS message, previous speed\u003Cbr\u003Eset goingAround to false. // trying a new route\u003Cbr\u003Eset oneWayTried to false. // have we tried going around one way already?\u003Cbr\u003Eset haveArrived to false. // lets the drive monitoring program switch to the next waypoint, or end\u003Cbr\u003Eset onApproach to false. // are we almost there yet?\u003Cbr\u003E\u003Cbr\u003E// variables to control the rover driving\u003Cbr\u003Eset upSlopeAngle to 10. // an angle greater than or equal this will enable certain driving limits\u003Cbr\u003Eset downSlopeAngle to 10. // an angle greater than or equal to this will enable certain driving limits\u003Cbr\u003Eset cruiseSpeed to 0.75. // this is how fast the rover will travel when driving straight and level\u003Cbr\u003Eset downSlopeSpeed to 0.5. // this is how fast the rover will travel when driving down a slope greater than downSlopeAngle\u003Cbr\u003Eset upSlopeSpeed to 1. // this is how fast the rover will travel when driving up a slope greater than upSlopeAngle\u003Cbr\u003Eset currentSpeed to cruiseSpeed. // for various drive functions, the speed used can be any of the ones defined above\u003Cbr\u003Eset overSpeed to 10. // m/s of how fast not to go\u003Cbr\u003Eset absUseCount to 0. // keeps us from stepping on the brakes forever\u003Cbr\u003Eset goAroundMaxAttempts to 5. // how many times we should attempt to climb a hill before calling for help\u003Cbr\u003Eset goAroundDistance to 500. // how many meters we should travel before attempting to drive to the waypoint again\u003Cbr\u003Eset goArounds to 0. // variable that tracks the number of attempts\u003Cbr\u003Eset goAroundSpeed to 2. // m/s that triggers the rover to stop trying to climb a slope\u003Cbr\u003Eset lastGoAroundLocation to 0. // the last place we attempted a go-around\u003Cbr\u003Eset firstGoAroundLocation to 0. // the place where we first attempted a go-around\u003Cbr\u003Eset approachSpeed to 3. // m/s of the speed we should begin coasting to our waypoint at\u003Cbr\u003Eset approachDistance to 150. // meters from the waypoint to begin slowing down\u003Cbr\u003Eset approachSpeedReverse to -0.5. // how fast we should slow down once we pass approachDistance (should be a negative number!)\u003Cbr\u003Eset stopDistance to 25. // meters from the waypoint we should put on the brakes to bring the rover to a stop\u003Cbr\u003E\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; program initialized\u0022.\u003Cbr\u003Elog \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; program initialized\u0022 to RoverLog.\u003Cbr\u003E\u003Cbr\u003E// time to head for the first waypoint!\u003Cbr\u003Eset target to waypointName \u002B currentWaypoint.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; target selected\u0022.\u003Cbr\u003Elog \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; target selected\u0022 to RoverLog.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; driving to target\u0022.\u003Cbr\u003Elog \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; driving to target\u0022 to RoverLog.\u003Cbr\u003Ebrakes off.\u003Cbr\u003Elock wheelsteering to target.\u003Cbr\u003Elock wheelthrottle to currentspeed.\u003Cbr\u003E\u003Cbr\u003Erun MonitorDrive.\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E/////////////\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMonitorDrive\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003E// MonitorDrive\u003Cbr\u003E// ------------\u003Cbr\u003E// the \u0022main loop\u0022 of the rover program that keeps tabs\u003Cbr\u003E// on how the rover is performing and makes corrections\u003Cbr\u003E// as needed to prevent accidents\u003Cbr\u003E///////////////////////////////////////////////////////\u003Cbr\u003E\u003Cbr\u003E// update the log if a new day passes\u003Cbr\u003Ewhen yesterday \u0026lt; time:day then {\u003Cbr\u003E set yesterday to time:day.\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:calendar \u002B \u0022\u0026gt;\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:calendar \u002B \u0022\u0026gt;\u0022 to RoverLog.\u003Cbr\u003E preserve.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// make sure we never go too fast\u003Cbr\u003Ewhen surfacespeed \u0026gt; overspeed then {\u003Cbr\u003E if absOn = false {\u003Cbr\u003E set absOn to true.\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; ABS activated\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; ABS activated\u0022 to RoverLog.\u003Cbr\u003E }.\u003Cbr\u003E lock wheelthrottle to 0.\u003Cbr\u003E brakes on.\u003Cbr\u003E set absUseCount to absUseCount \u002B 1.\u003Cbr\u003E set lastABS to time:seconds.\u003Cbr\u003E\u003Cbr\u003E // if we\u0027re constantly tapping the brakes, let\u0027s try slowing down if we can\u003Cbr\u003E if absUseCount \u0026gt; 25 and ship:control:wheelthrottle \u0026gt; 0.1 {\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; slowing down to prevent overspeed\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; slowing down to prevent overspeed\u0022 to RoverLog.\u003Cbr\u003E set absUseCount to 0.\u003Cbr\u003E lock wheelthrottle to ship:control:wheelthrottle - 0.1.\u003Cbr\u003E }.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// do we need to disable the brakes?\u003Cbr\u003Ewhen absOn = true and time:seconds - lastABS \u0026gt;= 1 then {\u003Cbr\u003E brakes off.\u003Cbr\u003E lock wheelthrottle to currentSpeed.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// reset the ABS message if 5 seconds have passed since the last use of ABS\u003Cbr\u003E// also resume previous speed\u003Cbr\u003Ewhen absOn = true and time:seconds - lastABS \u0026gt; 5 then {\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; resuming normal speed\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; resuming normal speed\u0022 to RoverLog.\u003Cbr\u003E set absOn to false.\u003Cbr\u003E lock wheelthrottle to currentSpeed.\u003Cbr\u003E set absUseCount to 0.\u003Cbr\u003E set lastABS to -1.\u003Cbr\u003E preserve.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// start slowing down if we are close to our waypoint\u003Cbr\u003Ewhen target:distance \u0026lt; approachDistance then {\u003Cbr\u003E set onApproach to true.\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; approaching waypoint\u0022 \u002B currentWaypoint.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; approaching waypoint\u0022 \u002B currentWaypoint to RoverLog.\u003Cbr\u003E lock wheelthrottle to approachSpeedReverse.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// make sure we don\u0027t completely stop before reaching our waypoint!\u003Cbr\u003Ewhen onApproach = true then {\u003Cbr\u003E if surfacespeed \u0026lt; approachSpeed {\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; coasting to waypoint\u0022 \u002B currentWaypoint.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; coasting to waypoint\u0022 \u002B currentWaypoint to RoverLog.\u003Cbr\u003E set onApproach to false.\u003Cbr\u003E\u003Cbr\u003E // if we are moving up a slope we should give ourselves some gas\u003Cbr\u003E if currentSlopeAngle \u0026gt; 1 {\u003Cbr\u003E lock wheelthrottle to currentSlopeAngle * 0.05.\u003Cbr\u003E } else {\u003Cbr\u003E lock wheelthrottle to 0.\u003Cbr\u003E }.\u003Cbr\u003E }.\u003Cbr\u003E preserve.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// if a change in pitch causes us to level out, we can return to cruising speed\u003Cbr\u003Ewhen currentSlopeAngle \u0026gt; -1 and currentSlopeAngle \u0026lt; 1 then {\u003Cbr\u003E if currentSlopeType \u0026lt;\u0026gt; 0 {\u003Cbr\u003E set currentSlopeType to 0.\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; level terrain detected. Resuming cruise speed\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; level terrain detected. Resuming cruise speed\u0022 to RoverLog.\u003Cbr\u003E set currentSpeed to cruiseSpeed.\u003Cbr\u003E lock wheelthrottle to currentSpeed.\u003Cbr\u003E }.\u003Cbr\u003E preserve.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// if a change in pitch causes us to head down to a large degree, we should decrease speed\u003Cbr\u003Ewhen currentSlopeAngle \u0026lt; -1 and abs(currentSlopeAngle) \u0026gt; downSlopeAngle then {\u003Cbr\u003E if currentSlopeType \u0026lt;\u0026gt; 2 {\u003Cbr\u003E set currentSlopeType to 2.\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; slope greater than \u0022 \u002B downSlopeAngle \u002B \u0022 degrees detected. Slowing down\u0022.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; slope greater than \u0022 \u002B downSlopeAngle \u002B \u0022 degrees detected. Slowing down\u0022 to RoverLog.\u003Cbr\u003E set currentSpeed to downSlopeSpeed.\u003Cbr\u003E lock wheelthrottle to currentSpeed.\u003Cbr\u003E }.\u003Cbr\u003E preserve.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003E// come to a stop at our waypoint\u003Cbr\u003Ewhen target:distance \u0026lt; stopDistance then {\u003Cbr\u003E print \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; reached waypoint\u0022 \u002B currentWaypoint.\u003Cbr\u003E log \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; reached waypoint\u0022 \u002B currentWaypoint to RoverLog.\u003Cbr\u003E lock wheelthrottle to 0.\u003Cbr\u003E brakes on.\u003Cbr\u003E set haveArrived to true.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Euntil haveArrived = true or abort = true {\u003Cbr\u003E set upvec to up:vector. // a unit vector pointing straight up.\u003Cbr\u003E set velvec to ship:velocity:surface:normalized. // a unit vector pointing in your velocity direction.\u003Cbr\u003E set dp to vdot(velvec,upvec).\u003Cbr\u003E set currentSlopeAngle to 90 - arccos(dp).\u003Cbr\u003E}.\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E///////////////\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-07-14T16:39:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWhat happened is just that your target wasn\u0027t set when running the program, but it was set when running the interactive command.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI figured this out. The target was selected but the game needed an extra tick to recognize this fact for me to use any properties of \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Etarget\u003C/span\u003E.\u003C/p\u003E\u003Cp\u003EIn other words, this will return the string error:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to waypointName \u002B currentWaypoint.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; driving \u0022 \u002B round(target:distance, 2) \u002B \u0022m\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand this is the proper way to do it:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to waypointName \u002B currentWaypoint.\u003Cbr\u003Ewait 0.001.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; driving \u0022 \u002B round(target:distance, 2) \u002B \u0022m\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-07-14T16:52:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaiiden\u0022 data-cite=\u0022Gaiiden\u0022\u003E\u003Cdiv\u003EI figured this out. The target was selected but the game needed an extra tick to recognize this fact for me to use any properties of \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Etarget\u003C/span\u003E.\u003Cp\u003EIn other words, this will return the string error:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to waypointName \u002B currentWaypoint.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; driving \u0022 \u002B round(target:distance, 2) \u002B \u0022m\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand this is the proper way to do it:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to waypointName \u002B currentWaypoint.\u003Cbr\u003Ewait 0.001.\u003Cbr\u003Eprint \u0022\u0026lt;\u0022 \u002B time:clock \u002B \u0022\u0026gt; driving \u0022 \u002B round(target:distance, 2) \u002B \u0022m\u0022.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI consider this a bug, if targeting takes a moment to settle we should not make you put a wait in your script. Would you mind writing this up on the github repo?\u003C/p\u003E\n"},{"CreatedByName":"Drew Kerman","CreatedById":103177,"CreatedDateTime":"2014-07-14T18:19:11Z","Content":"\n\u003Cp\u003ESure. The interesting thing is that this script works fine:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset target to MyTarget.\u003Cbr\u003Elock wheelsteering to target.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAlthough I suppose that, since \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Elock\u003C/span\u003E is something that is continually executed although the expression is evaluated the actual call to \u003Cspan style=\u0022font-family:\u0027courier new\u0027;\u0022\u003Etarget\u003C/span\u003E doesn\u0027t occur until the next tick cycle and hence is a valid object by then.\u003C/p\u003E\n"},{"CreatedByName":"Joe32320","CreatedById":81055,"CreatedDateTime":"2014-07-14T20:19:23Z","Content":"\n\u003Cp\u003EThe command velocity:surfaceheading no longer seems to be working in the current pre-release of kOS, is there any work around for this/is it possible for it to be a valid command again?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-14T22:05:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Joe32320\u0022 data-cite=\u0022Joe32320\u0022\u003E\u003Cdiv\u003EThe command velocity:surfaceheading no longer seems to be working in the current pre-release of kOS, is there any work around for this/is it possible for it to be a valid command again?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhen I redid vessel velocity, I dropped it because the code had this comment above that suffix:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//TODO: I created this one for debugging purposes only, at some point I\u0027ll make a function to transform vectors to headings in a more eloquent way\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI don\u0027t know who the \u0022I\u0022 was in that comment, but I assumed it was never officially documented or published as working so nobody was using it.\u003C/p\u003E\u003Cp\u003EBy the way that better way never seemed to get implemented. You can get a 3d direction from a vector but not a 2d compass heading without some vector math with a cross product with the north vector.\u003C/p\u003E\n"}]}