{"TopicId":50533,"ForumId":34,"TopicTitle":"[1.8.x-1.12.x] Module Manager 4.2.3 (July 03th 2023) - Fireworks season","CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2013-10-25T13:01:36Z","PageNum":25,"Articles":[{"CreatedByName":"swamp_ig","CreatedById":97983,"CreatedDateTime":"2014-04-21T02:42:19Z","Content":"\n\u003Cp\u003EI\u0027d like to contribute some code to module manager, just a bit confused as to which repository to fork.\u003C/p\u003E\u003Cp\u003E Ialdabaoth/ModuleManager seems to have the 2.0 code, but then sarbian/ModuleManager has been the repo with the most activity for some time.\u003C/p\u003E\u003Cp\u003EAlso the MM switch code seems not to have made it to the Ialdabaoth version. \u003C/p\u003E\u003Cp\u003EWhat I\u0027d like to contribute is that when editing, the order of definitions stays the same. This matters with tweakables, it affects the order the tweakers appear in the list. It\u0027s also sometimes important for initialization.\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2014-04-21T03:08:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022swamp_ig\u0022 data-cite=\u0022swamp_ig\u0022\u003E\u003Cdiv\u003EI\u0027d like to contribute some code to module manager, just a bit confused as to which repository to fork.\u003Cp\u003E Ialdabaoth/ModuleManager seems to have the 2.0 code, but then sarbian/ModuleManager has been the repo with the most activity for some time.\u003C/p\u003E\u003Cp\u003EAlso the MM switch code seems not to have made it to the Ialdabaoth version. \u003C/p\u003E\u003Cp\u003EWhat I\u0027d like to contribute is that when editing, the order of definitions stays the same. This matters with tweakables, it affects the order the tweakers appear in the list. It\u0027s also sometimes important for initialization.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s hard to tell what\u0027s going on with that right now. Just from looking at the network graph (fork map) it doesn\u0027t look like the two code paths have been rebased at all since Sarbian took over. On the other hand Ialdabaoth could have merged them by hand before commiting 2.0. Would be nice to know for sure what\u0027s happening...\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-04-21T22:43:51Z","Content":"\n\u003Cp\u003EUse Ialdabaoth branch. I need to merge and do the doc post but I always forget ...\u003C/p\u003E\n"},{"CreatedByName":"swamp_ig","CreatedById":97983,"CreatedDateTime":"2014-04-22T09:36:46Z","Content":"\n\u003Cp\u003EOk cool so I\u0027ll do a fork and fix the bugs, then do a push request (or is it pull request) when it\u0027s working.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-04-22T19:32:32Z","Content":"\n\u003Cp\u003EI just merged Ialdabaoth latest changes. I\u0027ll need to work on the first post documentation but for now : \u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://ksp.sarbian.com/jenkins/job/ModuleManager/lastSuccessfulBuild/artifact/jenkins-ModuleManager-2/ModuleManager.2.0.3.dll\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://ksp.sarbian.com/jenkins/job/ModuleManager/lastSuccessfulBuild/artifact/jenkins-ModuleManager-2/ModuleManager.2.0.3.dll\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENew features:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMATH!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  @PART[*]:FOR[Realism] {\u003Cbr\u003E    @mass *= 0.25\u003Cbr\u003E    @maxTemp -= 500\u003Cbr\u003E    @scale \u002B= 2\u003Cbr\u003E  }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPROPER INDEXING!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  @PART[*]:HAS[MODULE[MultiModeEngine]]:FOR[Pony] {\u003Cbr\u003E    @MODULE[ModuleEngineFX],1 {\u003Cbr\u003E      @PROPELLANT[Oxidizer]\u003Cbr\u003E      {\u003Cbr\u003E         @name = LiquidOxygen\u003Cbr\u003E      }\u003Cbr\u003E    }\u003Cbr\u003E }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPER-MOD PARSE PASSES!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[fuelTank]:BEFORE[RealFuels]\u003Cbr\u003E{\u003Cbr\u003E   @RESOURCE[LiquidFuel] {\u003Cbr\u003E     @amount *= 5\u003Cbr\u003E     @maxAmount *= 5\u003Cbr\u003E   }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[fuelTank]:AFTER[RealFuels]\u003Cbr\u003E{\u003Cbr\u003E   !RESOURCE[LiquidFuel] {}\u003Cbr\u003E   !RESOURCE[Oxidizer] {}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EDEPENDENCY CHECKING!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[fuelTank]:AFTER[RealFuels]:NEEDS[RealSolarSystem,!RealKerbalSystem]\u003Cbr\u003E{\u003Cbr\u003E   @scale *= 4;\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf it detects a loaded DLL, it assumes it\u0027s a mod and creates a :BEFORE, :FOR and :AFTER pass for it.\u003C/p\u003E\u003Cp\u003EIf you use underscores to specify your mod\u0027s version in the filename, ModuleManager will regrettably think that these are part of the filename, because I can\u0027t tell the difference between \u0022MyMod_1_3_6\u0022 and \u0022Mod_1337s_Cool_Stuff\u0022. On the other hand, if you use periods to specify your mod\u0027s version, then \u0022MyMod.1.3.6\u0022 will correctly be identified as \u0022MyMod\u0022.\u003C/p\u003E\u003Cp\u003EThis means that there will always be the following passes:\u003C/p\u003E\u003Cp\u003E:FIRST\u003C/p\u003E\u003Cp\u003E:BEFORE[Assembly-CSharp]\u003C/p\u003E\u003Cp\u003E:FOR[Assembly-CSharp]\u003C/p\u003E\u003Cp\u003E:AFTER[Assembly-CSharp]\u003C/p\u003E\u003Cp\u003E:BEFORE[ModuleManager]\u003C/p\u003E\u003Cp\u003E:FOR[ModuleManager]\u003C/p\u003E\u003Cp\u003E:AFTER[ModuleManager]\u003C/p\u003E\u003Cp\u003E:FINAL\u003C/p\u003E\u003Cp\u003ESpecifying \u0027:FIRST\u0027 is optional; I just named the \u0027main\u0027 pass so that the log file is clearer.\u003C/p\u003E\u003Cp\u003EIf your mod includes a DLL put all your MM patch nodes in the :FOR[yourMod] pass.\u003C/p\u003E\u003Cp\u003EIf your mod does not include a DLL, then pick a name for your mod THAT DOES NOT CONFLICT WITH ANY OTHER MOD\u0027S DLL, and then put all your MM patch nodes in the :FOR[yourMod] pass.\u003C/p\u003E\u003Cp\u003EIf you do this, other mods can use :BEFORE[yourMod] and :AFTER[yourMod] to politely modify things furthr at the correct sequence.\u003C/p\u003E\u003Cp\u003EThe following parameters are currently implemented:\u003C/p\u003E\u003Cp\u003E:BEFORE[ModName] - execute this patch BEFORE ModName executes its patches.\u003C/p\u003E\u003Cp\u003E:FOR[ModName] - I am ModName, and these are my patches.\u003C/p\u003E\u003Cp\u003E:AFTER[ModName] - execute this patch AFTER ModName executes its patches.\u003C/p\u003E\u003Cp\u003E:NEEDS[ModName1] - execute this patch only if ModName1 is installed.\u003C/p\u003E\u003Cp\u003E:NEEDS[!ModName2] - do not execute this patch if ModName2 is installed.\u003C/p\u003E\u003Cp\u003EYou can combine NEEDS nodes like this: \u003C/p\u003E\u003Cp\u003E:NEEDS[ModName1, !ModName2]\u003C/p\u003E\u003Cp\u003EYou can match subnodes in one of seven ways:\u003C/p\u003E\u003Cp\u003E@NODE[name] // will wildcard match name (so you can do ModuleEnginesFX or ModuleEngines*), and apply itself to the first NODE it finds.\u003C/p\u003E\u003Cp\u003E@NODE[name],index // will wildcard match name, and apply itself to the indexth NODE it finds.\u003C/p\u003E\u003Cp\u003E@NODE[name],* // will wildcard match name, and apply itself to ALL matching NODEs.\u003C/p\u003E\u003Cp\u003E@NODE[name]:HAS[criteria] // will wildcard match name and apply itself to all matching NODEs which also meet the :HAS criteria\u003C/p\u003E\u003Cp\u003E@NODE:HAS[criteria] // will apply itself to all matching NODEs which also meet the :HAS criteria\u003C/p\u003E\u003Cp\u003E@NODE,index // will apply itself to the indexth NODE it finds\u003C/p\u003E\u003Cp\u003E@NODE,* // will apply itself to ALL NODEs\u003C/p\u003E\u003Cp\u003EThese apply to @, ! and % nodes. $ nodes are necessarily single-application, and thus will always apply to the first node they find.\u003C/p\u003E\n"},{"CreatedByName":"Taki117","CreatedById":89975,"CreatedDateTime":"2014-04-22T20:09:24Z","Content":"\n\u003Cp\u003EWill this affect any previously made MM Configs?\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-04-22T20:14:27Z","Content":"\n\u003Cp\u003EMost if not all should work without any change.\u003C/p\u003E\n"},{"CreatedByName":"Amaroq","CreatedById":57607,"CreatedDateTime":"2014-04-22T22:35:20Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EAwesome.\u003C/strong\u003E Fabulous collaboration, you two - and Sarbian, thanks for all your hard work, I know merges aren\u0027t always smooth.\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2014-04-22T22:50:24Z","Content":"\n\u003Cp\u003ESo, now that this is all official-like, let\u0027s talk about what this would look like in the Real World.\u003C/p\u003E\u003Cp\u003EA really good example of this is RealFuels.\u003C/p\u003E\u003Cp\u003EAll RealFuels confignodes should look like this now :\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[liquidEngineMini]:FOR[RealFuels] //48-7S\u003Cbr\u003E{\u003Cbr\u003E @mass = 0.03125\u003Cbr\u003E @maxTemp = 2028\u003Cbr\u003E\u003Cbr\u003E @MODULE[ModuleEngines]\u003Cbr\u003E {\u003Cbr\u003E  @maxThrust = 30\u003Cbr\u003E  @heatProduction = 191\u003Cbr\u003E  @atmosphereCurve\u003Cbr\u003E  {\u003Cbr\u003E   @key,0 = 0 347\u003Cbr\u003E   @key,1 = 1 285\u003Cbr\u003E  }\u003Cbr\u003E  !PROPELLANT[LiquidFuel] {}\u003Cbr\u003E  !PROPELLANT[Oxidizer] {}\u003Cbr\u003E  !PROPELLANT[MonoPropellant] {}\u003Cbr\u003E  PROPELLANT\u003Cbr\u003E  {\u003Cbr\u003E   name = LiquidFuel\u003Cbr\u003E   ratio = 37.694087\u003Cbr\u003E   DrawGauge = True\u003Cbr\u003E  }\u003Cbr\u003E  PROPELLANT\u003Cbr\u003E  {\u003Cbr\u003E   name = CryOx\u003Cbr\u003E   ratio = 62.305913\u003Cbr\u003E  }\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E MODULE\u003Cbr\u003E {\u003Cbr\u003E  name = ModuleEngineConfigs\u003Cbr\u003E  techLevel = 7\u003Cbr\u003E  origTechLevel = 7\u003Cbr\u003E  engineType = L\u002B\u003Cbr\u003E  origMass = 0.03125\u003Cbr\u003E  configuration = LiquidFuel\u002BCryOx\u003Cbr\u003E  modded = false\u003Cbr\u003E  CONFIG\u003Cbr\u003E  {\u003Cbr\u003E   name = CryoFuel\u002BCryOx\u003Cbr\u003E   maxThrust = 22.5\u003Cbr\u003E   heatProduction = 191\u003Cbr\u003E   PROPELLANT\u003Cbr\u003E   {\u003Cbr\u003E    name = CryoFuel\u003Cbr\u003E    ratio = 0.7630831\u003Cbr\u003E    DrawGauge = True\u003Cbr\u003E   }\u003Cbr\u003E   PROPELLANT\u003Cbr\u003E   {\u003Cbr\u003E    name = CryOx\u003Cbr\u003E    ratio = 0.2369169\u003Cbr\u003E   }\u003Cbr\u003E   IspSL = 1.261\u003Cbr\u003E   IspV = 1.3\u003Cbr\u003E   throttle = 0\u003Cbr\u003E\u003Cbr\u003E   ModuleEngineIgnitor\u003Cbr\u003E   {\u003Cbr\u003E    name = ModuleEngineIgnitor\u003Cbr\u003E    ignitionsAvailable = 1\u003Cbr\u003E    autoIgnitionTemperature = 800\u003Cbr\u003E    ignitorType = Electric\u003Cbr\u003E    useUllageSimulation = true\u003Cbr\u003E    IGNITOR_RESOURCE\u003Cbr\u003E    {\u003Cbr\u003E     name = ElectricCharge\u003Cbr\u003E     amount = 0.3\u003Cbr\u003E    }\u003Cbr\u003E   }\u003Cbr\u003E   }\u003Cbr\u003E  CONFIG\u003Cbr\u003E  {\u003Cbr\u003E   name = LiquidFuel\u002BCryOx\u003Cbr\u003E   maxThrust = 30\u003Cbr\u003E   heatProduction = 191\u003Cbr\u003E   PROPELLANT\u003Cbr\u003E   {\u003Cbr\u003E    name = LiquidFuel\u003Cbr\u003E    ratio = 0.37694087\u003Cbr\u003E    DrawGauge = True\u003Cbr\u003E   }\u003Cbr\u003E   PROPELLANT\u003Cbr\u003E   {\u003Cbr\u003E    name = CryOx\u003Cbr\u003E    ratio = 0.62305913\u003Cbr\u003E   }\u003Cbr\u003E   IspSL = 1\u003Cbr\u003E   IspV = 1\u003Cbr\u003E   throttle = 0\u003Cbr\u003E\u003Cbr\u003E   ModuleEngineIgnitor\u003Cbr\u003E   {\u003Cbr\u003E    name = ModuleEngineIgnitor\u003Cbr\u003E    ignitionsAvailable = 1\u003Cbr\u003E    autoIgnitionTemperature = 800\u003Cbr\u003E    ignitorType = Electric\u003Cbr\u003E    useUllageSimulation = true\u003Cbr\u003E    IGNITOR_RESOURCE\u003Cbr\u003E    {\u003Cbr\u003E     name = ElectricCharge\u003Cbr\u003E     amount = 0.3\u003Cbr\u003E    }\u003Cbr\u003E   }\u003Cbr\u003E   }\u003Cbr\u003E  CONFIG\u003Cbr\u003E  {\u003Cbr\u003E   name = Hypergolic\u002BOxidizer\u003Cbr\u003E   maxThrust = 30\u003Cbr\u003E   heatProduction = 191\u003Cbr\u003E   PROPELLANT\u003Cbr\u003E   {\u003Cbr\u003E    name = Hypergolic\u003Cbr\u003E    ratio = 0.49620149\u003Cbr\u003E    DrawGauge = True\u003Cbr\u003E   }\u003Cbr\u003E   PROPELLANT\u003Cbr\u003E   {\u003Cbr\u003E    name = Oxidizer\u003Cbr\u003E    ratio = 0.50379851\u003Cbr\u003E   }\u003Cbr\u003E   IspSL = 0.953\u003Cbr\u003E   IspV = 0.952\u003Cbr\u003E   throttle = 0\u003Cbr\u003E\u003Cbr\u003E   ModuleEngineIgnitor\u003Cbr\u003E   {\u003Cbr\u003E    name = ModuleEngineIgnitor\u003Cbr\u003E    ignitionsAvailable = 2\u003Cbr\u003E    autoIgnitionTemperature = 800\u003Cbr\u003E    ignitorType = Electric\u003Cbr\u003E    useUllageSimulation = true\u003Cbr\u003E    IGNITOR_RESOURCE\u003Cbr\u003E    {\u003Cbr\u003E     name = ElectricCharge\u003Cbr\u003E     amount = 0.3\u003Cbr\u003E    }\u003Cbr\u003E   }\u003Cbr\u003E   }\u003Cbr\u003E\u003Cbr\u003E }\u003Cbr\u003E!MODULE[ModuleEngineIgnitor] {}\u003Cbr\u003E MODULE\u003Cbr\u003E {\u003Cbr\u003E  name = ModuleEngineIgnitor\u003Cbr\u003E  ignitionsAvailable = 1\u003Cbr\u003E  autoIgnitionTemperature = 800\u003Cbr\u003E  ignitorType = Electric\u003Cbr\u003E  useUllageSimulation = true\u003Cbr\u003E  IGNITOR_RESOURCE\u003Cbr\u003E  {\u003Cbr\u003E   name = ElectricCharge\u003Cbr\u003E   amount = 0.3\u003Cbr\u003E  }\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that :FOR[RealFuels] has replaced the :Final block! This allows other mod authors to create @PART[] patches with :BEFORE[RealFuels] and :AFTER[RealFuels], to tweak things before or after RealFuels gets to them.\u003C/p\u003E\u003Cp\u003EA mod author who releases their own parts - not mods of other people\u0027s parts - should just use the standard format. For example, from B9:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART\u003Cbr\u003E{\u003Cbr\u003E    // --- general parameters ---\u003Cbr\u003E    name = B9_Utility_Leg_H50\u003Cbr\u003E    module = HLandingLeg\u003Cbr\u003E    author = bac9\u003Cbr\u003E\u003Cbr\u003E    // --- asset parameters ---\u003Cbr\u003E    mesh = model.mu\u003Cbr\u003E    rescaleFactor = 1.25\u003Cbr\u003E    scale = 1\u003Cbr\u003E\u003Cbr\u003E    animationName = leg_h50_toggle2\u003Cbr\u003E\u003Cbr\u003E    PhysicsSignificance = 0\u003Cbr\u003E\u003Cbr\u003E    // --- node definitions ---\u003Cbr\u003E    node_attach = 0.0, 0, 0, 0.0, 0.0, 0.0\u003Cbr\u003E\u003Cbr\u003E    // --- editor parameters ---\u003Cbr\u003E    TechRequired = advLanding\u003Cbr\u003E    entryCost = 6700\u003Cbr\u003E    cost = 1250\u003Cbr\u003E    category = Utility\u003Cbr\u003E    subcategory = 0\u003Cbr\u003E    title = H50-A Landing Leg\u003Cbr\u003E    manufacturer = Tetragon Projects\u003Cbr\u003E    description = Landing leg for excessively heavy landers. We aren\u0027t sure how you got things like these into space in the first place, but this thing will help to get them back onto the ground. Probably. This model extends vertically and should be attached to the side of your lander.\u003Cbr\u003E\u003Cbr\u003E    // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003Cbr\u003E    attachRules = 0,1,0,0,0\u003Cbr\u003E\u003Cbr\u003E    // --- standard part parameters ---\u003Cbr\u003E    mass = 0.2\u003Cbr\u003E    dragModelType = default\u003Cbr\u003E    maximum_drag = 0.2\u003Cbr\u003E    minimum_drag = 0.2\u003Cbr\u003E    angularDrag = 2\u003Cbr\u003E    crashTolerance = 120\u003Cbr\u003E    maxTemp = 2900\u003Cbr\u003E\u003Cbr\u003E    CoMOffset = 0, 0, 0\u003Cbr\u003E\u003Cbr\u003E    breakingForce = 250\u003Cbr\u003E    breakingTorque = 250\u003Cbr\u003E\u003Cbr\u003E    deploySpeed = 1\u003Cbr\u003E    retractSpeed = -1\u003Cbr\u003E    randomSpeedFactor = 0.05\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is a standard configNode, NOT a ModuleManager patch node. When you make your own part, just define it as normal. \u003C/p\u003E\u003Cp\u003ESo, let\u0027s say you have a mod with a plugin, that mixes original parts, adjustments to other parts, AND adjustments to other mod\u0027s adjustments. You will wind up with ALL THREE forms of configNodes.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOriginal Parts/Resources/etc.:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART\u003Cbr\u003E{\u003Cbr\u003E   name = myPart\u003Cbr\u003E   ...\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EModifications to other parts, for my mod\u0027s DLL (which is called MyMod.dll)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[otherPart]:FOR[MyMod]\u003Cbr\u003E{\u003Cbr\u003E   ...\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EModifications to my parts OR other parts, for another mod\u0027s DLL (which is called OtherMod.dll)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[otherPart]:BEFORE[OtherMod]\u003Cbr\u003E{\u003Cbr\u003E   ...\u003Cbr\u003E}\u003Cbr\u003E// or\u003Cbr\u003E@PART[otherPart]:AFTER[OtherMod]\u003Cbr\u003E{\u003Cbr\u003E   ...\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENEVER EVER EVER use :FOR[OtherMod]. Only the mod author of a mod is allowed to use :FOR[mod]. if you are not the one providing SomeMod.DLL or a SomeMod.cfg \u0022tweak pack\u0022, using :FOR[someMod] is like licking all the frosting off your co-worker\u0027s donut and then putting it back on his desk. No one\u0027s gonna STOP you, but you are a very naughty person and no one should be friends with you.\u003C/p\u003E\u003Cp\u003EFinally, there\u0027s :NEEDS[OtherMod] - this is for when you want to do thing in your :FOR[] pass, or another mod\u0027s :BEFORE[] or :AFTER[] pass, but only if yet ANOTHER mod is present. So you can do things like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[mk1pod]:FOR[DeadlyReentry]:NEEDS[SolarSystemReplacer]\u003Cbr\u003E{\u003Cbr\u003E\t@MODULE[ModuleHeatShield]\u003Cbr\u003E\t{ // change the heat shield info to handle thicker atmosphere\u003Cbr\u003E\t\t@reflective = 0.08 // 5% of heat is ignored at correct angle\u003Cbr\u003E\t\t@dissipation\u003Cbr\u003E\t\t{ // dissipation is based on the part\u0027s current temperature\u003Cbr\u003E\t\t\t\tkey = 300 0 // begin ablating at 300 degrees C\u003Cbr\u003E\t\t\t\tkey = 1200 225 // maximum dissipation at 1200 degrees C\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\t@RESOURCE[AblativeShielding]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@amount = 500\u003Cbr\u003E\t\t@maxAmount = 500\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-22T23:00:51Z\u0022 title=\u002204/22/2014 11:00  PM\u0022 data-short=\u002210 yr\u0022\u003EApril 22, 2014\u003C/time\u003E by ialdabaoth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"swamp_ig","CreatedById":97983,"CreatedDateTime":"2014-04-23T01:57:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EI just merged Ialdabaoth latest changes. I\u0027ll need to work on the first post documentation but for now : \u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAwesome!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E@NODE[name],* // will wildcard match name, and apply itself to ALL matching NODEs.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s one of the things I was planning on fixing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe other one was an ordering thing.\u003C/p\u003E\u003Cp\u003EIdeally if you had:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003EPART \u003Cbr\u003E{\u003Cbr\u003E    name = myPart\u003Cbr\u003E    // ... stuff here\u003Cbr\u003E    MODULE \u003Cbr\u003E    {\u003Cbr\u003E         name=A\u003Cbr\u003E    }\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E         name=B\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand had a patch file:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[myPart]\u003Cbr\u003E{\u003Cbr\u003E    @MODULE[A] \u003Cbr\u003E    {\u003Cbr\u003E        // stuff here\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen the resulting part would still have the modules in the same order (A, then \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E. At the moment they end up B then A, unless you add an empty patch for B.\u003C/p\u003E\u003Cp\u003EWhy does this matter? \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Modules are loaded from the save file in a set order (which is a bug with KSP IMHO) so if you apply a patch then the new version won\u0027t be able to load saves from the unpatched\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E The order of tweakables is based on the module order, and can end up looking daft\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Some modules may be coded with a specific initiation order in mind (which probably isn\u0027t a good thing)\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EAnyhow, I know how to fix it so if you want I can fork and fix and push.\u003C/li\u003E\u003C/ul\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-04-23T02:24:07Z","Content":"\n\u003Cp\u003EYes, this is a massive issue. It\u0027s actually in some ways worse, because even if MM doesn\u0027t change the order of *existing* modules, saves/craft will be broken depending on when new modules are inserted (or if they are).\u003C/p\u003E\u003Cp\u003E(This is why, for example, CrossFeedEnabler doesn\u0027t default to being applied to stretchies/PP: because it will break .craft / saves.)\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2014-04-23T02:48:48Z","Content":"\n\u003Cp\u003EI\u0027m not sure how ModuleManager could properly control that, though. Short of scanning the PART node, storing the order of each node, wiping all of them, and rebuilding them carefully, I have no idea what could be done - and even then, if two nodes have the same type and name, it won\u0027t be able to remember which one is which when it rebuilds everything.\u003C/p\u003E\u003Cp\u003EThis is really an issue with KSP more than MM.\u003C/p\u003E\n"},{"CreatedByName":"swamp_ig","CreatedById":97983,"CreatedDateTime":"2014-04-23T04:04:40Z","Content":"\n\u003Cp\u003EI recon I can do it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EJust copy the child nodes, clear the container, add all the nodes before, then the altered node, then the nodes after. \u003C/p\u003E\u003Cp\u003EThe other thing I think would be good would be:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART:NEEDS[RealFuels] \u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAs in dependency checking for ordinary old parts.\u003C/p\u003E\u003Cp\u003EAnd also:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E!PART[name]:FOR[RealFuels] \u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eeg: delete a part if real fuels is present.\u003C/p\u003E\u003Cp\u003EI\u0027ve figured out how to delete (and insert too) top level nodes so that should be possible.\u003C/p\u003E\u003Cp\u003EEdit: Here\u0027s how: \u003Ca href=\u0022https://github.com/Swamp-Ig/KSPAPIExtensions/blob/master/Source/PartDependencyChecker.cs#L37\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Swamp-Ig/KSPAPIExtensions/blob/master/Source/PartDependencyChecker.cs#L37\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-23T05:25:42Z\u0022 title=\u002204/23/2014 05:25  AM\u0022 data-short=\u002210 yr\u0022\u003EApril 23, 2014\u003C/time\u003E by swamp_ig\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"OrbitalDebris","CreatedById":101515,"CreatedDateTime":"2014-04-23T07:00:16Z","Content":"\n\u003Cp\u003EI think I may have found a bug... I\u0027m trying to update the config that adds MechJeb to all capsules, and it\u0027s failing with an error that seems to indicate a parsing error. This is the config I\u0027m trying to apply:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]]:NEEDS[MechJeb2]:FINAL\u003Cbr\u003E{\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = MechJebCore\u003Cbr\u003E        MechJebLocalSettings {\u003Cbr\u003E            MechJebModuleCustomWindowEditor { unlockTechs = flightControl }\u003Cbr\u003E            MechJebModuleSmartASS { unlockTechs = flightControl }\u003Cbr\u003E            MechJebModuleManeuverPlanner { unlockTechs = advFlightControl }\u003Cbr\u003E            MechJebModuleNodeEditor { unlockTechs = advFlightControl }\u003Cbr\u003E            MechJebModuleTranslatron { unlockTechs = advFlightControl }\u003Cbr\u003E            MechJebModuleWarpHelper { unlockTechs = advFlightControl }\u003Cbr\u003E            MechJebModuleAttitudeAdjustment { unlockTechs = advFlightControl }\u003Cbr\u003E            MechJebModuleThrustWindow { unlockTechs = advFlightControl }\u003Cbr\u003E            MechJebModuleRCSBalancerWindow { unlockTechs = advFlightControl }\u003Cbr\u003E            MechJebModuleRoverWindow { unlockTechs = fieldScience }\u003Cbr\u003E            MechJebModuleAscentGuidance { unlockTechs = unmannedTech }\u003Cbr\u003E            MechJebModuleLandingGuidance { unlockTechs = unmannedTech }\u003Cbr\u003E            MechJebModuleSpaceplaneGuidance { unlockTechs = unmannedTech }\u003Cbr\u003E            MechJebModuleDockingGuidance { unlockTechs = advUnmanned }\u003Cbr\u003E            MechJebModuleRendezvousAutopilotWindow { unlockTechs = advUnmanned }\u003Cbr\u003E            MechJebModuleRendezvousGuidance { unlockTechs = advUnmanned }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd this is the error I\u0027m seeing in ksp.log:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 23:48:03.960] [ModuleManager] node Customizations/Use MechJeb everywhere/@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]]:NEEDS[MechJeb2]:FINAL - MechJeb2:FINAL not found!\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt seems to be adding the word \u0022FINAL\u0022 to the name of the mod instead of interpreting it as a keyword. I\u0027ve tried spelling it both FINAL and Final and still get the same error. Any ideas?\u003C/p\u003E\u003Cp\u003EEDIT: it appears that if I put FINAL before NEEDS then it works (ie \u0022@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]]:FINAL:NEEDS[MechJeb2]\u0022 does the right thing). Didn\u0027t see that mentioned in the OP though, is this something that needs to be fixed or documented? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT2: Aaaah, I just realized that I was doing it wrong. I need to use the FOR keyword, not FINAL, since this patch is FOR mechjeb. So what I needed actually was \u0022@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]]:FOR[MechJeb2]\u0022.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-23T07:21:53Z\u0022 title=\u002204/23/2014 07:21  AM\u0022 data-short=\u002210 yr\u0022\u003EApril 23, 2014\u003C/time\u003E by OrbitalDebris\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"swamp_ig","CreatedById":97983,"CreatedDateTime":"2014-04-23T07:36:31Z","Content":"\n\u003Cp\u003EFOR is really supposed to be used by the mod developer. I think AFTER is what you\u0027re looking for.\u003C/p\u003E\u003Cp\u003EMight be worth changing the keyword to :WITHIN or something similar as you can see how it would get confusing.\u003C/p\u003E\n"},{"CreatedByName":"OrbitalDebris","CreatedById":101515,"CreatedDateTime":"2014-04-23T08:44:04Z","Content":"\n\u003Cp\u003EI guess that makes sense, but I thought that BEFORE and AFTER are supposed to be to make sure that patches are applied so they don\u0027t stomp on each other. That does leave the weird requirement that FINAL must be before NEEDS[...], I\u0027d like to hear from Ialdabaoth as to whether that is the way it\u0027s supposed to be.\u003C/p\u003E\n"},{"CreatedByName":"Streetwind","CreatedById":98962,"CreatedDateTime":"2014-04-23T09:13:25Z","Content":"\n\u003Cp\u003EQuick question:\u003C/p\u003E\u003Cp\u003EAssume I don\u0027t like physicsless parts, and I want to make sure that none exist. Could I use one single ModuleManager config that removes the line \u0022PhysicsSignificance = 1\u0022 from \u003Cem\u003Eall\u003C/em\u003E parts that have it, stock and modded alike? As long as that line isn\u0027t explicitly written out, the value defaults to 0. So removing it from the few parts that have it sounds a simpler solution than adding/updating it to every last part with a setting of 0, which would be identical to the default anyway.\u003C/p\u003E\u003Cp\u003EI\u0027m just not sure if that line is consistently in the same spot in every part, and whether or not that makes any difference from ModuleManager\u0027s point of view.\u003C/p\u003E\n"},{"CreatedByName":"Uzric","CreatedById":102098,"CreatedDateTime":"2014-04-23T09:46:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Streetwind\u0022 data-cite=\u0022Streetwind\u0022\u003E\u003Cdiv\u003E\u003Cem\u003E(Snap)\u003C/em\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think this does what you want:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:Final\u003Cbr\u003E{\u003Cbr\u003E!PhysicsSignificance\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-13T21:59:27Z\u0022 title=\u002212/13/2014 09:59  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 13, 2014\u003C/time\u003E by Uzric\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Streetwind","CreatedById":98962,"CreatedDateTime":"2014-04-23T11:30:08Z","Content":"\n\u003Cp\u003EOh, it\u0027s actually that simple? Cool, I thought I\u0027d have to target each subfolder individually.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-04-23T12:18:35Z","Content":"\n\u003Cp\u003EJust NEVER complain to any mod dev after you removed PhysicsSignificance from your parts. It\u0027s not here just to annoy you.\u003C/p\u003E\u003Cp\u003EOrbitalDebris\u003C/p\u003E\u003Cp\u003EOne hint : five [ and six ]\u003C/p\u003E\u003Cp\u003EI should add a test that count braces and spit error messages ^^\u003C/p\u003E\u003Cp\u003Eswamp_ig : \u003C/p\u003E\u003Cp\u003Efell free do contribute. It\u0027s how mods evolve faster \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2014-04-23T14:54:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022OrbitalDebris\u0022 data-cite=\u0022OrbitalDebris\u0022\u003E\u003Cdiv\u003EI guess that makes sense, but I thought that BEFORE and AFTER are supposed to be to make sure that patches are applied so they don\u0027t stomp on each other. That does leave the weird requirement that FINAL must be before NEEDS[...], I\u0027d like to hear from Ialdabaoth as to whether that is the way it\u0027s supposed to be.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo, :NEEDS[...] gets applied to a :BEFORE or :AFTER in the same way that :HAS gets applied to the part name filter.\u003C/p\u003E\u003Cp\u003Ei.e., it\u0027s not just\u003C/p\u003E\u003Cp\u003E@PART[...]:NEEDS[OtherMod]\u003C/p\u003E\u003Cp\u003Eit\u0027s actually\u003C/p\u003E\u003Cp\u003E@PART[...]:BEFORE[OtherMod]:NEEDS[AnotherMod, !YetAnotherMod]\u003C/p\u003E\u003Cp\u003Ewhich says \u0022Apply this node before the :FOR[OtherMod] pass, but ONLY if AnotherMod is also installed AND YetAnotherMod ISN\u0027T installed.\u0022\u003C/p\u003E\u003Cp\u003EJust doing @PART[...]:NEEDS[OtherMod] is identical to doing @PART[...]:FIRST:NEEDS[OtherMod] in the same way that @PART[...] is identical to @PART[...]:FIRST; if you want it to happen in the FINAL pass, do @PART[...]:FINAL:NEEDS[OtherMod]\u003C/p\u003E\u003Cp\u003ESo, in your example, rather than:\u003C/p\u003E\u003Cp\u003E@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]]:NEEDS[MechJeb2]:FINAL\u003C/p\u003E\u003Cp\u003EYou need to do:\u003C/p\u003E\u003Cp\u003E@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]]:FINAL:NEEDS[MechJeb2]\u003C/p\u003E\u003Cp\u003EYou can\u0027t do :NEEDS[MechJeb2]:FINAL or :NEEDS[MechJeb2]:BEFORE[blah] any more than you could do @HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]]:PART[*]\u003C/p\u003E\u003Cp\u003EThe order MUST be:\u003C/p\u003E\u003Cp\u003E*NODE:HAS[FilterOptions]:PASS:NEEDS[NeedOptions]\u003C/p\u003E\u003Cp\u003EWhere:\u003C/p\u003E\u003Cp\u003E - \u0027*\u0027 can be one of \u0027@\u0027, \u0027!\u0027, \u0027%\u0027\u003C/p\u003E\u003Cp\u003E - NODE can be PART, RESOURCE_DEFINITION, or any other root-level node, and can optionally include [nodeNameFilter] and/or ,index\u003C/p\u003E\u003Cp\u003E - HAS[FilterOptions] is optional\u003C/p\u003E\u003Cp\u003E - PASS can be FIRST, BEFORE[modname], FOR[modname], AFTER[modname], or FINAL. BEFORE[modname] and AFTER[modname] only get called if the FOR[modname] pass will be called. If PASS is not specified, it defaults to FIRST.\u003C/p\u003E\u003Cp\u003E - NEEDS[NeedOptions] is optional.\u003C/p\u003E\u003Cp\u003EDoes that make sense?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-23T15:04:07Z\u0022 title=\u002204/23/2014 03:04  PM\u0022 data-short=\u002210 yr\u0022\u003EApril 23, 2014\u003C/time\u003E by ialdabaoth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Streetwind","CreatedById":98962,"CreatedDateTime":"2014-04-23T15:27:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EJust NEVER complain to any mod dev after you removed PhysicsSignificance from your parts. It\u0027s not here just to annoy you.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s a given \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E If I encounter an issue that isn\u0027t there without my private tweaks, then I have nobody but myself to blame.\u003C/p\u003E\n"},{"CreatedByName":"futrtrubl","CreatedById":77310,"CreatedDateTime":"2014-04-23T17:44:45Z","Content":"\n\u003Cp\u003EWhat happens if ExampleMod doesn\u0027t have a dll or any FOR[ExampleMod] but it does have parts that you want to modify? I would expect NEEDS[ExampleMod] to cause the modifications to not be made which might be confusing.\u003C/p\u003E\u003Cp\u003ECan AFTER be used with several mod names so that it loads after both have been loaded? eg AFTER[RemoteTech2,MechJeb2]\u003C/p\u003E\u003Cp\u003EA little confused about % functionality. If I use %MODULE[someModule] do I then still need to put in a line name = SomeModule?\u003C/p\u003E\u003Cp\u003EIf I want to change some bits within a NODE but not others if the NODE exists, or define the NODE in total if it doesn\u0027t exist then % seems to be the way to go. But how do I then define which get changed if they exist and which don\u0027t? If I use no modifier ie \u0022foo = value\u0022 or \u0022MODULE={name = somename ...}\u0022 then wouldn\u0027t that just create an extra MODULE and not modify the existing one? If I used @ then it wouldn\u0027t create it if the NODE didn\u0027t exist previously. If I used % it would overwrite it if it already existed.\u003C/p\u003E\u003Cp\u003EIn my case what I am trying to do is replace\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:HAS[@MODULE[ModuleCommand],@MODULE[ModuleRTAntennaPassive]]:FINAL\u003Cbr\u003E{ \u003Cbr\u003E\t@MODULE[ModuleRTAntennaPassive]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@TechRequired = unmannedTech\u003Cbr\u003E\t\t@OmniRange = 1000\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[ModuleRTAntennaPassive]]:FINAL\u003Cbr\u003E{ \t\u003Cbr\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ModuleRTAntennaPassive\u003Cbr\u003E\t\tTechRequired = unmannedTech\u003Cbr\u003E\t\tOmniRange = 1000\u003Cbr\u003E\u003Cbr\u003E\t\tTRANSMITTER\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tPacketInterval = 0.3\u003Cbr\u003E\t\t\tPacketSize = 2\u003Cbr\u003E\t\t\tPacketResourceCost = 15.0\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EPerhaps what I am really asking for is an operator that adds something if it doesn\u0027t exist or otherwise does nothing. Unless ~ can be used outside of HAS[]. So \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:Final\u003Cbr\u003E{\u003Cbr\u003E\t~TechRequired=advScienceTech\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEdward\u003C/p\u003E\n"},{"CreatedByName":"KerbMav","CreatedById":70338,"CreatedDateTime":"2014-04-23T17:45:00Z","Content":"\n\u003Cp\u003EMy change does not seem to work ... both engines still use LF/OX.\u003C/p\u003E\u003Cp\u003EUsing HotRockets I want to cover for ModuleEnginesFX, my config folder begins with \u0022zzz...\u0022 to run last.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[nuclearEngine]\u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E@MODULE[ModuleEngines*]\u003Cbr\u003E{\u003Cbr\u003E\t!PROPELLANT[LiquidFuel] {}\u003Cbr\u003E\u003Cbr\u003E\t!PROPELLANT[Oxidizer] {}\u003Cbr\u003E\u003Cbr\u003E\tPROPELLANT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Kethane\u003Cbr\u003E        \tratio = 5.00\u003Cbr\u003E\t\tDrawGauge = True\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[cl_large_nuclearEngine]\u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E@MODULE[ModuleEngines*]\u003Cbr\u003E{\u003Cbr\u003E\t!PROPELLANT[LiquidFuel] {}\u003Cbr\u003E\u003Cbr\u003E\t!PROPELLANT[Oxidizer] {}\u003Cbr\u003E\u003Cbr\u003E\tPROPELLANT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Kethane\u003Cbr\u003E        \tratio = 5.00\u003Cbr\u003E\t\tDrawGauge = True\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENarf ... forgot some {} ...\u003C/p\u003E\u003Cp\u003EBut now they are using LF/OX and Kethane ...\u003C/p\u003E\u003Cp\u003EForgot even more {} ... though the example in the second post does not have them! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-23T18:43:09Z\u0022 title=\u002204/23/2014 06:43  PM\u0022 data-short=\u002210 yr\u0022\u003EApril 23, 2014\u003C/time\u003E by KerbMav\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2014-04-23T19:23:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022KerbMav\u0022 data-cite=\u0022KerbMav\u0022\u003E\u003Cdiv\u003EMy change does not seem to work ... both engines still use LF/OX.\u003Cp\u003EUsing HotRockets I want to cover for ModuleEnginesFX, my config folder begins with \u0022zzz...\u0022 to run last.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[nuclearEngine]\u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E@MODULE[ModuleEngines*]\u003Cbr\u003E{\u003Cbr\u003E\t!PROPELLANT[LiquidFuel] {}\u003Cbr\u003E\u003Cbr\u003E\t!PROPELLANT[Oxidizer] {}\u003Cbr\u003E\u003Cbr\u003E\tPROPELLANT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Kethane\u003Cbr\u003E        \tratio = 5.00\u003Cbr\u003E\t\tDrawGauge = True\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E@PART[cl_large_nuclearEngine]\u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E@MODULE[ModuleEngines*]\u003Cbr\u003E{\u003Cbr\u003E\t!PROPELLANT[LiquidFuel] {}\u003Cbr\u003E\u003Cbr\u003E\t!PROPELLANT[Oxidizer] {}\u003Cbr\u003E\u003Cbr\u003E\tPROPELLANT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Kethane\u003Cbr\u003E        \tratio = 5.00\u003Cbr\u003E\t\tDrawGauge = True\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENarf ... forgot some {} ...\u003C/p\u003E\u003Cp\u003EBut now they are using LF/OX and Kethane ...\u003C/p\u003E\u003Cp\u003EForgot even more {} ... though the example in the second post does not have them! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGet rid of those spaces\u003C/p\u003E\u003Cp\u003E !PROPELLANT[LiquidFuel]{}\u003C/p\u003E\u003Cp\u003Enot\u003C/p\u003E\u003Cp\u003E !PROPELLANT[LiquidFuel] {}\u003C/p\u003E\n"}]}