{"TopicId":8740,"ForumId":34,"TopicTitle":"[Plugin][0.17] PowerTech v0.2.6.1","CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-03-27T07:13:10Z","PageNum":1,"Articles":[{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-03-27T07:13:10Z","Content":"\n\u003Cp\u003EThis is the thread for PowerTech plugin. Fort part releases see \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/showthread.php/9034\u0022 rel=\u0022external nofollow\u0022\u003Ethis thread\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www./?bkb8j2zexejtkek\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EDownload PowerTech.dll v0.2.6.1\u003C/span\u003E\u003C/strong\u003E\u003C/span\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003Ev0.2.6 (23 July 2012)\u003C/p\u003E\u003Cp\u003E* New part resource request system (now the panels can easily refill all your batteries, wherever they are)\u003C/p\u003E\u003Cp\u003E* EPS-compatible panel type (for ZO2 0.6 / EPS 0.1)\u003C/p\u003E\u003Cp\u003E* Fuel gauge module for resource tanks\u003C/p\u003E\u003Cp\u003E* Improvements and bugfixes for panel animation.\u003C/p\u003E\u003Cp\u003E* Now colors can be set with config files\u003C/p\u003E\u003Cp\u003Ev0.2.5 (30 May 2012)\u003C/p\u003E\u003Cp\u003E* Custom rotation axis can be set for the solar panels.\u003C/p\u003E\u003Cp\u003E* Heat management options for the solar panels (advanced classes)\u003C/p\u003E\u003Cp\u003E* Ability to generate PartResources for the solar panels (advanced classes)\u003C/p\u003E\u003Cp\u003E* ZO2 Regenerator (2 versions)\u003C/p\u003E\u003Cp\u003Ev0.2.4 (24 May 2012)\u003C/p\u003E\u003Cp\u003E* Now animations introduced in KSP 0.15 can be used for panel deploying!\u003C/p\u003E\u003Cp\u003E* New possibility for panel rotation definition\u003C/p\u003E\u003Cp\u003E* panelcenter parameter for panels that generate power (for better ship shadow check)\u003C/p\u003E\u003Cp\u003E* Minor bugfixes\u003C/p\u003E\u003Cp\u003Ev0.2.3 (20 May 2012)\u003C/p\u003E\u003Cp\u003E* Updated the right-click menu.\u003C/p\u003E\u003Cp\u003E* The PowerSat satellites can be switched between \\\u0027active flight\u0027 and \u0027debris\u0027 by right-click menu\u003C/p\u003E\u003Cp\u003E* Advanced version of the panel module with power gauge and efficiency calculation - to be used as a base for parts that produce electricity for other addons.\u003C/p\u003E\u003Cp\u003E* Zoxygene-compatible version of the panels included in the plugin.\u003C/p\u003E\u003Cp\u003Ev0.2.2 (18 May 2012)\u003C/p\u003E\u003Cp\u003E*0.15 compatible version\u003C/p\u003E\u003Cp\u003E*Panels and satellites can be deployed and undeployed by right-click menu.\u003C/p\u003E\u003Cp\u003Ev0.2.1 \u003C/p\u003E\u003Cp\u003E*Added couple more features for the panels\u003C/p\u003E\u003Cp\u003Ev0.2.0 (6 Apr 2012)\u003C/p\u003E\u003Cp\u003E*Fixed mac compatibility issue (thanks \u003Cstrong\u003Eexegesis\u003C/strong\u003E for reporting it)\u003C/p\u003E\u003Cp\u003E*Added PowerSat attitude control during timewarp and attitude reset when loading the flight scene.\u003C/p\u003E\u003Cp\u003Ev0.1.1 (4 Apr 2012)\u003C/p\u003E\u003Cp\u003E*Fixed parser error in case it finds a folder without part.cfg\u003C/p\u003E\u003Cp\u003E*Solar panels now can have NightGlide mode - turn parallel to surface velocity if in planetary shadow (default: on for the solar panels; off for PowerSat)\u003C/p\u003E\u003Cp\u003E*Panel state and attitude now affect drag (if you deploy them in the atmosphere)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EDisclaimer: you are free to use the .dll for your addons, but please give the link to this topic for the newest version of the plugin. I will do my best in order to not to break compatibility with existing parts and persistent worlds when releasing the new versions.\u003C/p\u003E\u003Cp\u003EAlso please post here links to your addons if you made something good with my modules - I would like to list them here.\u003C/p\u003E\u003Cp\u003EYou can use fragments of source code for your plugins, just give a credit if you borrow something significant.\u003C/p\u003E\u003Cp\u003ECredits: l00 or shadow detection code, r4m0n for muMech tank interface and several small features. And of course SQUAD for this amazing game and especially Harverster for the game itself and N3X15 for plugin support.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPowerSat\u003C/strong\u003E \u003C/p\u003E\u003Cp\u003EAutomated communications satellite with multiple advanced features:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003ECurrently implemented:\u003C/span\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Deployable and rotating solar panels (and they can have their collider meshes)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*The satellite changes its vessel name to \u0027%SatID% %mother craft name%\u0027 instead of \u0027%mother craft name% Debris\u0027\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Attitude control (gyroscopic) - the satellite points to the ground\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Solar panel orientation - the satellite uses roll control and panel rotation to turn the solar panels to the Sun.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*You can easily set any number of moving parts by part.cfg. Including additional deployable antennas.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*The solar panels can have NightGlide mode\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Panel state and attitude affect drag\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*PowerSat recognized as comsat in \u003C/span\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003EThe_Duck\u003C/span\u003E\u003C/strong\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E\\\u0027s \u003C/span\u003E\u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=9006\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003ESatellite Relay Network\u003C/span\u003E\u003C/a\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Attitude control during timewarp and automatic attitude adjustment when loading already deployed satellite. \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Right-click menu allows to deploy and undeploy the satellite and also switch its state between active flight and debris\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EPlanned:\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E*Other attitude control modes: other celestial body or some absolute direction (for telescopes and interplanetary relay satellites)\u003C/p\u003E\u003Cp\u003E*Orbit correction engine\u003C/p\u003E\u003Cp\u003E*Control panel\u003C/p\u003E\u003Cp\u003E*Orbit correction autopilot\u003C/p\u003E\u003Cp\u003E*Special control panels and autopilot programs for stationary/synchronous orbits\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003ESpecifications for part making:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EThe most complicated part are animated panels and other elements (you can also have deployable antennas, for example)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EState in model:\u003C/strong\u003E deployed, panels in the position they would be in the moment they are deployed (before rotation activation). Panel rotation axis should be left to right.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EPivot point:\u003C/strong\u003E for each moving part the pivot is the center of rotation. Set it to the correct position.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMoving part colliders:\u003C/strong\u003E name should be \u003Cem\u003Ecollider_\u003C/em\u003E \u002B name of the object (like \u003Cem\u003Ecollider_Segment1\u003C/em\u003E for \u003Cem\u003ESegment1\u003C/em\u003E). Pivot should be in the same point as the pivot of the part.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESetting it in part.cfg:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EmovingParts \u003C/em\u003E (integer) - number of animated elements. Set it before configuring the animations \u003C/p\u003E\u003Cp\u003EFor each object set the following values\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EmPartNumber\u003C/em\u003E (integer) number of the part (position in array) you are configuring. From 0 to movingParts-1. \u003C/p\u003E\u003Cp\u003E\u003Cem\u003EanimName\u003C/em\u003E (string) - name of the object in the model\u003C/p\u003E\u003Cp\u003E\u003Cem\u003Eanimrange1\u003C/em\u003E (float) - deploy animation range (in degrees, relative to parent part). Set it 0 (or don\\\u0027t set at all) if the object has no deploy animation.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003Eanimaxis1\u003C/em\u003E (vector) - axis of rotation for deploy animation of the part\u003C/p\u003E\u003Cp\u003E\u003Cem\u003Eanimaxis2\u003C/em\u003E (vector) - axis of rotation for panel rotation animation (usually needed only for panel root part, set it 0,0,0 or leave unmodified if the current part doesn\\\u0027t need it)\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EanimParent\u003C/em\u003E (integer) - index of the parent part\u003C/p\u003E\u003Cp\u003ENote that rotation axis are often changed for parts that have parents set, so if it turns wrong way, just try to change axis\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAttention:\u003C/strong\u003E because of 0.15 security measures the parser can\\\u0027t reach the part.cfg. Put a copy of it (or just the panel code) in \u003Cspan style=\u0022text-decoration:underline;\u0022\u003EPluginData/powertech\u003C/span\u003E directory with name \u003Cem\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003Epartname\u003C/span\u003E\u003C/em\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E.cfg\u003C/span\u003E, where \u003Cem\u003Epartname\u003C/em\u003E is the \u003Cem\u003Ename\u003C/em\u003E parameter of the part.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENew!\u003C/strong\u003E Animations for panels/satellite deploying.\u003C/p\u003E\u003Cp\u003EJust 2 (or even 1) paameters to enable the animation if it\\\u0027s set in the model:\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EFoldAnimationName\u003C/em\u003E (string) - name of the animation\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EFoldDefState \u003C/em\u003E(float) - state of the panels in the start of the animation: 1 - unfolded l, 0- folded (default 1, recommended to have them deployed)\u003C/p\u003E\u003Cp\u003ECan also be used parallel with the old way, but they can\\\u0027t directly affect the same objects in the same moment.\u003C/p\u003E\u003Cp\u003EThe rotation is still handled the old way (there should be precise control of the attitude), but you can now define up to 2 panel root objects (just ensure that the other segments of the panel are children of this object) wit normal .cfg tools (so that you can make this without additional .cfg)\u003C/p\u003E\u003Cp\u003E \u003Cem\u003ErotRoot1\u003C/em\u003E (string) - name of the object (if it\\\u0027s not directly parented to the model, you need to specify the entire path starting with the child of the model object)\u003C/p\u003E\u003Cp\u003E \u003Cem\u003ErotAx1\u003C/em\u003E (Vector3) - axis of rotation (note that logically it\\\u0027s x axis of the mode, but you can alter it a bit)\u003C/p\u003E\u003Cp\u003E \u003Cem\u003ErotRoot2\u003C/em\u003E \u0026amp; \u003Cem\u003ErotAx2\u003C/em\u003E - analogically if you have to define the second rotation (like the second panel of the satellite)\u003C/p\u003E\u003Cp\u003EProblems with the model and animation setup? Add this to part.cfg\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E showDebug = true\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand it will write the full hierarchy of the model and list all the defined animations!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003Cstrong\u003EOther part.cfg parameters:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EejectionForce (float) - the same as for decoupler\u003C/p\u003E\u003Cp\u003Ephase1 (float) - delay before panel deploying (seconds)\u003C/p\u003E\u003Cp\u003Ephase2 (float) - panel deploying time (seconds)\u003C/p\u003E\u003Cp\u003EpanelRotateRate (float) - how fast can the panels rotate (*pi rad/s or *180degrees/s)\u003C/p\u003E\u003Cp\u003EmaxTorque, Kp, Kd (float) - attitude control gyroscope parameters (equivalent to SAS module\\\u0027s)\u003C/p\u003E\u003Cp\u003EdoubleSidedPanels (boolean) - set true, if the panels are double-sided - it will turn the closest side to the Sun\u003C/p\u003E\u003Cp\u003EpanelInitRot (float) - panel orientation in the model: 0 - forward, 0,5 - up, -0.5 - down, \u002B-1 - back \u003C/p\u003E\u003Cp\u003ESatID (String) - name added to the satellite\\\u0027s vessel name, when it\\\u0027s deployed\u003C/p\u003E\u003Cp\u003ENightGlide (boolean) - turn the panels parallel to the surface velocity if in the planetary shadow\u003C/p\u003E\u003Cp\u003Emaximum_drag (float) - drag if the panels are deployed and perpendicular to the surface velocity\u003C/p\u003E\u003Cp\u003Eminimum_drag (float) - drag if the panels are not deployed on parallel to the surface velocity\u003C/p\u003E\u003Cp\u003EshowAsActiveVessel - if true, the satellite will appear as active flight in the map view.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003EOfficial sample parts:\u003C/strong\u003E \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/showthread.php/9034\u0022 rel=\u0022external nofollow\u0022\u003EPowerSat\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOther addons that use this part module:\u003C/strong\u003E \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=11622\u0022 rel=\u0022external nofollow\u0022\u003EDynaSat\u003C/a\u003E by Maraz\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESolarPanels_PowerTech\u003C/strong\u003E \u003C/p\u003E\u003Cp\u003EDeployable solar panels that turn to the Sun. Based on PowerSat panel code. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Deployable and rotating solar panels (and they can have their collider meshes)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Solar panel orientation - the the solar panels turn themselves to the Sun (if it isn\\\u0027t on the rotation axis)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*You can easily set any number of moving parts by part.cfg.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*The solar panels can have NightGlide mode - turn parallel to the ground speed if in planetary shadow.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Panel state and attitude affect drag\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Can be deployed and undeployed by right-click menu.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003ESpecifications for part making:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003ESee modeling and panel configuring specifications of PowerSat.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003ENew\u003C/span\u003E Now you can set \u003Cspan style=\u0022text-decoration:underline;\u0022\u003Elogical\u003C/span\u003E rotation axis (if it\u0027s not x axis) of the panels (not implemented for PowerSat yet, it will come with customizable attitude controller for it). For this you\\\u0027ll need the following 2 vectors:\u003C/p\u003E\u003Cp\u003E1) rotAxis - the axis of rotation\u003C/p\u003E\u003Cp\u003E2) FaceDir - the direction of the front side of the panels in the moment they are deployed (perpendicular to the plane of the panel). For rotating panels should be perpendicular to the axis of rotation. (but you can also create a non-rotating panel (\u003Cem\u003ERotatingPanels = false\u003C/em\u003E), set this parameter for them to determine the direction they face)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOther part.cfg parameters:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003Ephase1 (float) - delay before panel deploying (seconds). Default 0.\u003C/p\u003E\u003Cp\u003Ephase2 (float) - panel deploying time (seconds). Default 5 seconds.\u003C/p\u003E\u003Cp\u003EpanelRotateRate (float) - how fast can the panels rotate (*pi rad/s or *180degrees/s)\u003C/p\u003E\u003Cp\u003EdoubleSidedPanels (boolean) - set true, if the panels are double-sided - it will turn the closest side to the Sun\u003C/p\u003E\u003Cp\u003EpanelInitRot (float) - panel orientation in the model: 0 - forward, 0,5 - up, -0.5 - down, \u002B-1 - back (set 0 or leave default if using custom rotation axis/panel facing direction definition)\u003C/p\u003E\u003Cp\u003ENightGlide (boolean) - turn the panels parallel to the surface velocity if in the planetary shadow\u003C/p\u003E\u003Cp\u003Emaximum_drag (float) - drag if the panels are deployed and perpendicular to the surface velocity\u003C/p\u003E\u003Cp\u003Eminimum_drag (float) - drag if the panels are not deployed or parallel to the surface velocity\u003C/p\u003E\u003Cp\u003ERotatingPanels (boolean) - if false, the panels won\\\u0027t rotate\u003C/p\u003E\u003Cp\u003ErightRotate (int) - if 1, the panel (entire part), when placing it on the right side of the craft will be flipped 180 degrees; if -1, the same will happen on the left side\u003C/p\u003E\u003Cp\u003EIsRadiator (boolean) - if true the radiator panel will turn parallel to the sunlight to minimize overheating (use to make deployable and rotating radiators)\u003C/p\u003E\u003Cp\u003EIconColor (Color) - color of the icon. Not sure about .cfg, but definitely can be changed in derived modules) \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003EOfficial sample parts:\u003C/strong\u003E \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/showthread.php/9034\u0022 rel=\u0022external nofollow\u0022\u003ESoyuz solar panels\u003C/a\u003E (animated by PowerTech)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOther addons that use this part module:\u003C/strong\u003E \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=11622\u0022 rel=\u0022external nofollow\u0022\u003EDynaVolt (DynaSat)\u003C/a\u003E by Maraz (with alternate configuration versions for derived modules), \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=7178\u0022 rel=\u0022external nofollow\u0022\u003EKosmos\u003C/a\u003E \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESolarPanels_adv_PowerTech\u003C/strong\u003E \u003C/p\u003E\u003Cp\u003EThis advanced class is derived from SolarPanels_PowerTech. They calculate their efficiency (based on attitude and distance from the Sun) and also have separate variables for exposion of both sides (if yo want to make a module with heat management) when deployed. It also draws a gauge for panel efficiency.\u003C/p\u003E\u003Cp\u003EThe new values that can be overloaded or used by derived modules (and some of them can also be set in .cfg)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E MaxOverload (float) - maximal efficiency when going closer to the Sun\u003C/p\u003E\u003Cp\u003EShowIndicators (boolean) - display the efficiency gauge.\u003C/p\u003E\u003Cp\u003EindicatorName (string) - text on the gauge (default \u003Cem\u003EPower\u003C/em\u003E)\u003C/p\u003E\u003Cp\u003Epanelcenter - center of the deployed panel (for proper ship shadow detection).\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003ENEW\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EThe panels now have radiator abilities\u003C/p\u003E\u003Cp\u003E deployedHeatDissipation (float) - for how much the dissipation will be increased if the panels are deployed. Don\\\u0027t forget to set heatConductivity and heatDissipation parameters of the part, too.\u003C/p\u003E\u003Cp\u003E FrontExposionOverheat (float)\u003C/p\u003E\u003Cp\u003E BackExposionOverheat (float)\u003C/p\u003E\u003Cp\u003E- these 2 parameters determine how much heat will the panels generate if exposed to the Sun. They are separate for the 2 sides to allow creating asymmetric constructions like panel with radiator on the rear side.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003ENEW\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EThe panels now can work with PartResource system:\u003C/p\u003E\u003Cp\u003E partResGenerator (bool) - set true to enable resorce generation\u003C/p\u003E\u003Cp\u003E ResID (String) - the name of the resource (default \u003Cem\u003EEnergy\u003C/em\u003E);\u003C/p\u003E\u003Cp\u003E power (float) - the base value for power generation\u003C/p\u003E\u003Cp\u003EParameters accessible in the derived modules:\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003E public Color MsgTextColor=XKCDColors.White;\u003Cbr\u003E public Color ProgressBarBgColor = XKCDColors.DarkBlue;\u003Cbr\u003E public Color ProgressBarColor = XKCDColors.White;\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E  public Color MsgBgColor =XKCDColors.DarkBlue;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E- colors of the gauge and text. can be overloaded to match the color of your plugin\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003E public float PanelFrontExposed = 0; //front side lighting for heat management\u003Cbr\u003E public float PanelBackExposed = 0; //back side lighting for heat management\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E  public float PowerEff = 0f; //use this for power output\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Euse these variables for power generation and heat management in the derived classes\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003EEPS_SOURCE_Spanel_PowerTech\u003C/strong\u003E - EPS panels - PowerTech edition \u003C/p\u003E\u003Cp\u003EThe module combines panel functionality of EPS 0.1/Zoxygene 0.6 and PowerTech.\u003C/p\u003E\u003Cp\u003ETo be used with \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=9763\u0022 rel=\u0022external nofollow\u0022\u003EZoxygene\u003C/a\u003E addon (v0.6\u002B)\u003C/p\u003E\u003Cp\u003EOnce deployed, the panels turn themselves to the Sun and produce power for EPS systems depending on attitude. \u003C/p\u003E\u003Cp\u003EThe panels are derived from SolarPanels_adv_PowerTech\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003ENew configurable variables are:\u003C/p\u003E\u003Cp\u003EMaxPwrGain - the gain if efficiency is 1\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003EZO2pwr_PowerTech\u003C/strong\u003E - Zoxygen recharge panels - PowerTech edition \u003C/p\u003E\u003Cp\u003EThe module combines panel functionality of Zoxygene and PowerTech.\u003C/p\u003E\u003Cp\u003ETo be used with \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=9763\u0022 rel=\u0022external nofollow\u0022\u003EZoxygene\u003C/a\u003E addon (v0.5-0.5.2). Warning! Not compatible with Zoxygene 0.6 use EPS type instead!\u003C/p\u003E\u003Cp\u003EOnce deployed, the panels turn themselves to the Sun and produce Zoxygene depending on attitude. \u003C/p\u003E\u003Cp\u003EThe panels are derived from SolarPanels_adv_PowerTech\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003ENew configurable variables are:\u003C/p\u003E\u003Cp\u003EMaxZO2Gain - the gain if efficiency is 1.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cstrong\u003EZO2pwr_Regenerator\u003C/strong\u003E - Zoxygene regenerator, consumes energy from PartResource system. Has 2 operation modes: Safe mode (keeping ZO2 level in the main system from falling below 50%) and Full recharge (recharging the tanks to 95-99% of the maximum capacity). This efficient module avoids wasting power if the ZO2 tanks are overfilled).\u003C/p\u003E\u003Cp\u003EHas 3 parameters:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EMaxZO2Gain (float) - maximal production of Zoxygen (default 0.02)\u003C/p\u003E\u003Cp\u003EMaxPowerConsumption (float) - maximal consumption of energy (default 0.2)\u003C/p\u003E\u003Cp\u003EpartResID (String) - the name of the required resource (default \u003Cem\u003EEnergy\u003C/em\u003E)\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESurfaceSAS\u003C/strong\u003E [work in progress]\u003C/p\u003E\u003Cp\u003EAdvanced attitude controllers with surface-relative and other modes, that work even in timewarp.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EPowerTech - MuMechLib adapter-plugin:\u003C/span\u003E\u003C/strong\u003E \u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www./?7lcjcv1qdvw1046\u0022 rel=\u0022external nofollow\u0022\u003EPowerTech_MuMech.dll v1.0.4.3\u003C/a\u003E- compilled for PowerTech.dll v0.2.6.1, MuMechLib.dll v1.9.2, KSP 0.17\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESolarPanels_PowerTech_MuMech\u003C/strong\u003E - PowerTech animated panels compatible with with MuMech variable tanks\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003EPowerTech-MuMechLib adapter-plugin required\u003C/span\u003E \u003C/p\u003E\u003Cp\u003Ealso requires both PowerTech.dll and MuMechLib.dll\u003C/p\u003E\u003Cp\u003EBesides what is available for SolarPanels_adv_PowerTech, it has couple parameters from MuMechSolarPanel:\u003C/p\u003E\u003Cp\u003E ResID (String) - type of the recharged \u0027fuel\u0027 (default \u003Cem\u003EEnergy\u003C/em\u003E) \u003C/p\u003E\u003Cp\u003E power (float) - amount recharged per second (default 0.1)\u003C/p\u003E\u003Cp\u003E partResGenerator (bool) - if set to True the panel will recharge both MuMech and PartResource\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222012-09-22T06:19:58Z\u0022 title=\u002209/22/2012 06:19  AM\u0022 data-short=\u002211 yr\u0022\u003ESeptember 22, 2012\u003C/time\u003E by Alchemist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Causeless","CreatedById":5366,"CreatedDateTime":"2012-03-27T10:43:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003Cstrong\u003EPowerSat\u003C/strong\u003E [work in progress]\u003C/p\u003E\u003Cp\u003EPowerTech Communications Satellite is automated satellite with multiple advanced features:\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003ECurrently implemented:\u003C/span\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Deploying and rotating solar panels\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*The satellite changes its vessel name to \u0027%SatID% %mother craft name%\u0027 instead of \u0027%mother craft name% Debris\u0027\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Attitude control (gyroscopic) - the satellite points to the ground\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E*Solar panel orientation - the satellite uses roll control and panel rotation to turn the solar panels to the Sun.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EPlanned:\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E*Attitude control during timewarp and automatic attitude adjustment when loading already deployed satellite.\u003C/p\u003E\u003Cp\u003E*Orbit correction engine\u003C/p\u003E\u003Cp\u003E*Control panel\u003C/p\u003E\u003Cp\u003E*Orbit correction autopilot\u003C/p\u003E\u003Cp\u003E*Special control panels and autopilot programs for stationary/synchronous orbits\u003C/p\u003E\u003Cp\u003EFirst video of deploy sequence\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://youtu.be/YZ0V4dWn5x8\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://youtu.be/YZ0V4dWn5x8\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is very awesome. I\\\u0027d love to see how you managed the attitude control - it could help a lot in a future multiplayer plugin.\u003C/p\u003E\u003Cp\u003EAlso, I\\\u0027m not sure if attitude control during timewarp is possible, but for attitude control for when loading a satellite, you could try either changing the .sfs file and forcing a reload, or you could stick some stuff in a in statement in onPartStart() to make it realign when you load it.\u003C/p\u003E\n"},{"CreatedByName":"Rocketscienist","CreatedById":12576,"CreatedDateTime":"2012-03-27T13:11:27Z","Content":"\n\u003Cp\u003EReally cool.\u003C/p\u003E\u003Cp\u003EThe best is that it turns the panels into the sun!\u003C/p\u003E\u003Cp\u003EThe other things are great too.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-03-27T13:45:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Causeless\u0022 data-cite=\u0022Causeless\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis is very awesome. I\\\u0027d love to see how you managed the attitude control - it could help a lot in a future multiplayer plugin.\u003C/p\u003E\u003Cp\u003EAlso, I\\\u0027m not sure if attitude control during timewarp is possible, but for attitude control for when loading a satellite, you could try either changing the .sfs file and forcing a reload, or you could stick some stuff in a in statement in onPartStart() to make it realign when you load it.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDuring timewarp (and not only, but it\\\u0027s too cheaty off rails) it is possible to affect attitude by giving commands to vessel.rigidbody (it works, I just need to do some vector maths to make it work correctly). The same for instant turning at the moment when the vessel is loaded (I\\\u0027ll use this feature only if the satellite was at correct attitude when it was unloaded).\u003C/p\u003E\n"},{"CreatedByName":"Causeless","CreatedById":5366,"CreatedDateTime":"2012-03-27T15:08:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EDuring timewarp (and not only, but it\\\u0027s too cheaty off rails) it is possible to affect attitude by giving commands to vessel.rigidbody (it works, I just need to do some vector maths to make it work correctly). The same for instant turning at the moment when the vessel is loaded (I\\\u0027ll use this feature only if the satellite was at correct attitude when it was unloaded).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\\\u0027s awesome. I\\\u0027d like to see this progress!\u003C/p\u003E\n"},{"CreatedByName":"Xazas","CreatedById":7761,"CreatedDateTime":"2012-03-27T15:27:38Z","Content":"\n\u003Cp\u003EThis combined with the_ducks sattelite relay nework could be awsome!\u003C/p\u003E\n"},{"CreatedByName":"Warringer","CreatedById":328,"CreatedDateTime":"2012-03-27T21:51:38Z","Content":"\n\u003Cp\u003EI just wanted to suggest that... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Mictaste","CreatedById":1861,"CreatedDateTime":"2012-03-27T22:03:17Z","Content":"\n\u003Cp\u003Ethe best thing is that since his relay code only looks for comsat in the name.. this should already work together \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"CAPFlyer","CreatedById":8575,"CreatedDateTime":"2012-03-27T22:30:53Z","Content":"\n\u003Cp\u003ENice addon. Can I suggest that you swap the naming convention so that the SatID goes after the mothership name? That way you get \u0027Comsat 1\u0027 instead of \u00271 Comsat\u0027 (for example).\u003C/p\u003E\u003Cp\u003EAlso, is there a way for it to check for conflicting/existing ID\\\u0027s (i.e. if you\\\u0027ve already launched \u0027Comsat 6\u0027, it automatically becomes \u0027Comsat 7\u0027)?\u003C/p\u003E\n"},{"CreatedByName":"drewmacrae","CreatedById":7532,"CreatedDateTime":"2012-03-27T22:46:19Z","Content":"\n\u003Cp\u003EI look forward either to using these parts to stabilize docking targets, or using the source code to make a command system for that purpose. Keep up the good work.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-03-28T18:05:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022CAPFlyer\u0022 data-cite=\u0022CAPFlyer\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ENice addon. Can I suggest that you swap the naming convention so that the SatID goes after the mothership name? That way you get \u0027Comsat 1\u0027 instead of \u00271 Comsat\u0027 (for example).\u003C/p\u003E\u003Cp\u003EAlso, is there a way for it to check for conflicting/existing ID\\\u0027s (i.e. if you\\\u0027ve already launched \u0027Comsat 6\u0027, it automatically becomes \u0027Comsat 7\u0027)?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, by SatID I meant satellite name (default is PowerSat, but it\\\u0027s configurable). So it\\\u0027s called \u0027PowerSat Kerbal Communications\u0027 instead of \u0027Kerbal Communications Debris\u0027\u003C/p\u003E\n"},{"CreatedByName":"CAPFlyer","CreatedById":8575,"CreatedDateTime":"2012-03-28T21:02:31Z","Content":"\n\u003Cp\u003EAhh, okay. Understand now.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-04-01T19:52:57Z","Content":"\n\u003Cp\u003EFinally made a parser for reading the solar panels and other elements that can come in any number from part.cfg. So, it\\\u0027s almost ready for the first release (just need some work on the sample models themselves).\u003C/p\u003E\u003Cp\u003EAnd there will also be solar panels for space stations (based on PowerSat panel code), that turn to the Sun.\u003C/p\u003E\n"},{"CreatedByName":"eran100","CreatedById":17678,"CreatedDateTime":"2012-04-02T15:19:33Z","Content":"\n\u003Cp\u003Ecan someone make a ship with this?\u003C/p\u003E\n"},{"CreatedByName":"Rocketscienist","CreatedById":12576,"CreatedDateTime":"2012-04-02T17:59:58Z","Content":"\n\u003Cp\u003EI\u00C2\u00B4ve made a rocket with a PowerSat!\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kerbalspaceprogram.de/database/raketen/23-powersat-1/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.de/database/raketen/23-powersat-1/index.html\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-04-06T08:08:09Z","Content":"\n\u003Cp\u003EI\\\u0027m working on a new attitude control module (codename \u003Cem\u003ESurfaceSAS\u003C/em\u003E for one of the main uses - surface orientation of satellites and stations). One of the features will be that it works even when the vessel is not controlled (aka \u0027no more strange rotation of the docking target\u0027) and during timewarp. And even shifts the vessel to the correct attitude when loading the scene.\u003C/p\u003E\u003Cp\u003EYes, this feature really works and is already implemented in PowerSat!\u003C/p\u003E\u003Cp\u003EOne more thing - it will have 2 modes: \u003Cstrong\u003ESemi-manual\u003C/strong\u003E where it remembers the attitude when the vessel is goes to rails / is unloaded / gets SAS activated and \u003Cstrong\u003EAutomatic\u003C/strong\u003E when it turns to preconfigured direction.\u003C/p\u003E\u003Cp\u003ENow the question - for attitude control it remembers relative position of 2 vectors. It turns to match the primary one, then rotates around it to match the secondary one as close as possible (for both there will also be a setting that allows or disallows to go opposite to that direction). What possibilities should be implemented for the attitude vectors?\u003C/p\u003E\u003Cp\u003EThe current list is:\u003C/p\u003E\u003Cp\u003E1) Surface - vertically to the body, the craft is orbiting\u003C/p\u003E\u003Cp\u003E2) Prograde - direction of propagation\u003C/p\u003E\u003Cp\u003E3) Sun - turns to the Sun\u003C/p\u003E\u003Cp\u003E4) Planet - allows to specify a celestial body (for telescopes and interplanetary relay satellites)\u003C/p\u003E\u003Cp\u003E5) North - current celestial body rotation axis\u003C/p\u003E\u003Cp\u003E6) Normal - orbit normal\u003C/p\u003E\u003Cp\u003EOf course, the most useful modes will be Surface-Sun for satellites (the way PowerSat works) and Surface-Prograde for stations, but if you have some more ideas for the direction list, just write me.\u003C/p\u003E\n"},{"CreatedByName":"CAPFlyer","CreatedById":8575,"CreatedDateTime":"2012-04-06T08:21:49Z","Content":"\n\u003Cp\u003EYou also need an \u0027Anti-Sun\u0027 position which positions the smallest surface area/face to the sun for radiators/heat control.\u003C/p\u003E\u003Cp\u003EAlso stations will need to have 4 modes active (Surface - Prograde - Sun - Anti-Sun) since its solar panels will need to face the sun but radiators will need to be turned to present minimum surface to the sun.\u003C/p\u003E\u003Cp\u003EThe only other one I\\\u0027d think would be useful, especially for down-the-road is some sort of autotrack function where if PowerSat is implemented on a probe or just an antenna in conjunction with another addon like the Satellite Relay System, the antenna/probe will automatically align with the first target in its relay chain.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-04-06T13:42:14Z","Content":"\n\u003Cp\u003EThat attitude control is the rotation of the entire craft and it can be based only on 2 vectors. But there can also be additional moving parts with their own attitude modes, so that a station can have Surface-Prograde attitude control mode and the panels and radiators have additional solar attitude mode to maximize or minimize the amount of sunlight falling on them.\u003C/p\u003E\u003Cp\u003EMaybe, I\\\u0027ll also make an animated antenna part that turns to the closest satellite.\u003C/p\u003E\n"},{"CreatedByName":"Maraz","CreatedById":22308,"CreatedDateTime":"2012-04-20T13:27:49Z","Content":"\n\u003Cp\u003EVery nice !\u003C/p\u003E\u003Cp\u003EI hope that some good modeller will soon make satellites compatible with this technology.\u003C/p\u003E\u003Cp\u003EMeanwhile, is there a quick way to make existing parts at least partly compatible (so that, say, they change their name when deployed, even though they will not have moving parts of course)?\u003C/p\u003E\u003Cp\u003EI thought maybe changing something in cfg file of the part to make it recognizable as a powersat (maybe name or module ?)\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003EMaraz \u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-04-20T19:31:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Maraz\u0022 data-cite=\u0022Maraz\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EVery nice !\u003C/p\u003E\u003Cp\u003EI hope that some good modeller will soon make satellites compatible with this technology.\u003C/p\u003E\u003Cp\u003EMeanwhile, is there a quick way to make existing parts at least partly compatible (so that, say, they change their name when deployed, even though they will not have moving parts of course)?\u003C/p\u003E\u003Cp\u003EI thought maybe changing something in cfg file of the part to make it recognizable as a powersat (maybe name or module ?)\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003EMaraz\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Emodule = PowerSat\u003C/p\u003E\u003Cp\u003ESee the OP for the other properties.\u003C/p\u003E\u003Cp\u003EAnd you don\\\u0027t have to add animations if have no panels.\u003C/p\u003E\n"},{"CreatedByName":"Maraz","CreatedById":22308,"CreatedDateTime":"2012-04-21T15:23:58Z","Content":"\n\u003Cp\u003ETrying the stock Powersat now.\u003C/p\u003E\u003Cp\u003EIs it normal that the satellite is present in orbital view, but not listed among active flights?\u003C/p\u003E\u003Cp\u003E(pls see screenshot)\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003EMaraz\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-04-21T21:09:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Maraz\u0022 data-cite=\u0022Maraz\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ETrying the stock Powersat now.\u003C/p\u003E\u003Cp\u003EIs it normal that the satellite is present in orbital view, but not listed among active flights?\u003C/p\u003E\u003Cp\u003E(pls see screenshot)\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003EMaraz\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, it should be handled as debris (except for the name). However in future version, when it will have a control panel, I might add a feature to toggle them between \u0027debris\u0027 and \u0027active flight\u0027 (I don\\\u0027t think it\\\u0027s a very good idea to have several dozens of them listed in the active flights list all the time).\u003C/p\u003E\n"},{"CreatedByName":"semininja","CreatedById":3837,"CreatedDateTime":"2012-04-22T04:51:38Z","Content":"\n\u003Cp\u003EMaybe that will reveal why some of my sats are showing up as flyable when others aren\\\u0027t...\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-04-22T06:53:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022semininja\u0022 data-cite=\u0022semininja\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EMaybe that will reveal why some of my sats are showing up as flyable when others aren\\\u0027t...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMechJeb somehow does this. I just have to figure out how.\u003C/p\u003E\u003Cp\u003EUpdate: This parameter is \u003Cem\u003Evessel.orbit.objectType\u003C/em\u003E. Didn\\\u0027t expect it to be there \u003C/p\u003E\n"},{"CreatedByName":"Maraz","CreatedById":22308,"CreatedDateTime":"2012-04-22T12:26:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Emodule = PowerSat\u003C/p\u003E\u003Cp\u003ESee the OP for the other properties.\u003C/p\u003E\u003Cp\u003EAnd you don\\\u0027t have to add animations if have no panels.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks,\u003C/p\u003E\u003Cp\u003EI managed to build a small satellite using Powersat technology.\u003C/p\u003E\u003Cp\u003EIt uses Silisko\\\u0027s Probodobodyne parts, it has no moving objects but it orients towards Kerbin and has the \u0027Powersat\u0027 string in its name.\u003C/p\u003E\u003Cp\u003EAlso thanks for clarifications about Powersat flight/debris status.\u003C/p\u003E\u003Cp\u003EMaraz\u003C/p\u003E\n"}]}