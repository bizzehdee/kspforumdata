{"TopicId":19321,"ForumId":34,"TopicTitle":"[1.3.1] Ferram Aerospace Research: v0.15.9.1 \u0026quot;Liepmann\u0026quot; 4/2/18","CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2012-09-14T23:22:36Z","PageNum":167,"Articles":[{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2014-05-07T07:55:48Z","Content":"\n\u003Cp\u003EOkay monsieur Ferram, here\u0027s a dumb question. I\u0027ve been experimenting with a very alpha part from a B9 expansion pack. It\u0027s a helicopter rotor that folds into a cute little V-Shaped wing. Using firespitter, natch.\u003C/p\u003E\u003Cp\u003EThe question is, it\u0027s using FSLiftSurface (firespitter) for the wing mode, and I can\u0027t tell if it\u0027s working with FAR or not. It completely overrides the CoL in the VAB and it\u0027s not showing aero forces(yes I turned them on) or a \u0027stalled\u0027 gauge in flight. It also seems to produce an absolutely ENORMOUS amount of drag.\u003C/p\u003E\u003Cp\u003EAnd I\u0027m not getting much in the way of illumination from reading the docs, unfortunately.\u003C/p\u003E\u003Cp\u003EI just slapped it on my science plane to play with it, the sheer unrealism of which does bug me a bit so I may design a new vehicle if I decide to use it.\u003C/p\u003E\u003Cp\u003EEdit: I talked to Snjo and what he said (I\u0027m not sure he understood exactly what the part actually was) implied that the FSLiftSurface is supposed to turn itself off if it detects FAR...but since there\u0027s no FAR module in there, it might not be. He also said something about how adding one would make the lift \u0027static\u0027, which so far as I can tell it already is, at least when it\u0027s in \u0027wing\u0027 mode and not \u0027rotor\u0027 mode. If I add a FAR wing module to it, how bad is it gonna blow up on the rotor mode?\u003C/p\u003E\u003Cp\u003EAnd here\u0027s a short vid of the thing in action:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/H19ea8FonL8?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T09:27:54Z\u0022 title=\u002205/07/2014 09:27  AM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Cakeofruit","CreatedById":73238,"CreatedDateTime":"2014-05-07T08:57:41Z","Content":"\n\u003Cp\u003Ehi all \u003C/p\u003E\u003Cp\u003Ei wanna know if is possible to get FAR data to K-OS ??\u003C/p\u003E\n"},{"CreatedByName":"bludclot","CreatedById":102393,"CreatedDateTime":"2014-05-07T09:09:29Z","Content":"\n\u003Cp\u003EThank you ferram! I have not thought to look for it there. \u003C/p\u003E\u003Cp\u003EAlso it is because of this scale thing I think things disintegrate a bit too easily. Specially since struts seem to have no impact on things breaking.\u003C/p\u003E\u003Cp\u003EI am having a hard time flying anything like I do in this video:\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/itOTWHsCMzk?start=279\u0026amp;feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E. Not even that thing. The wing parts break off from the centre fuselage as soon as I pull back on the stick. I used to have it working wonderfully in 0.13 with deadly reentry being my Gforce limiter. Working on a complete rebuild though.\u003C/p\u003E\u003Cp\u003E@softweir That!\u003C/p\u003E\n"},{"CreatedByName":"softweir","CreatedById":2795,"CreatedDateTime":"2014-05-07T12:13:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EThe question is, it\u0027s using FSLiftSurface (firespitter) for the wing mode, and I can\u0027t tell if it\u0027s working with FAR or not.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIIRC, Firespitter uses its own lift/drag model which completely overrides FAR for Firespitter parts.\u003C/p\u003E\n"},{"CreatedByName":"HeadHunter67","CreatedById":74121,"CreatedDateTime":"2014-05-07T14:31:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EThere are lots of people who think that 300 m/s is slow (for some reason)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat boggles my mind, since at typical flight altitudes, that\u0027s supersonic!\u003C/p\u003E\u003Cp\u003EI just started a new game with FAR and noticed that Kerbal Engineer no longer shows terminal velocity. I know the FAR window does, but there\u0027s a lot of other stuff there I don\u0027t need. Is there a way to re-enable it? Nothing in the KER settings, it\u0027s possible that there might be something in the FAR settings but seriously I get information overload just looking at all that stuff.\u003C/p\u003E\n"},{"CreatedByName":"AndreyATGB","CreatedById":62674,"CreatedDateTime":"2014-05-07T14:44:27Z","Content":"\n\u003Cp\u003E300m/s seems slow because most people probably started building rockets first and the typical speed for that is 2200m/s. For me all I need to do is multiply by 3.6 and jaws will be dropped, like when I first realized my \u0022slow\u0022 rover was only going 40m/s which is rather fast IRL. Also because nobody is willing to wait hours for a plane to fly somewhere as opposed to orbital velocity at which it only takes a couple of minutes.\u003C/p\u003E\n"},{"CreatedByName":"Yar987","CreatedById":110494,"CreatedDateTime":"2014-05-07T15:58:58Z","Content":"\n\u003Cp\u003EThis is more an overall suggestion, but seeing as this mod strives for realism for in-atmo flight I thought it\u0027d be a good place to bring it up. I\u0027ve seen it mentioned a few times here and there, but not seriously implemented. Fuel should primarily be carried in the wings, not the fuselage. It\u0027s how actual aircraft manage to be so stable, it keeps the CoM as close as possible to the CoL. It\u0027s especially important for low mount wings, which tend to have a low center of lift.\u003C/p\u003E\u003Cp\u003EFor larger planes, CoM limitations and the actual CoM are expressed in references to mean aerodynamic chord. That\u0027s used to calculate the chord for tapered or swept wings (most airplanes), and it gives you the aerodynamic center (center of lift) of the wing.\u003C/p\u003E\u003Cp\u003EJust some food for thought!\u003C/p\u003E\n"},{"CreatedByName":"Dirt_Merchant","CreatedById":69465,"CreatedDateTime":"2014-05-07T17:12:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Yar987\u0022 data-cite=\u0022Yar987\u0022\u003E\u003Cdiv\u003EThis is more an overall suggestion, but seeing as this mod strives for realism for in-atmo flight I thought it\u0027d be a good place to bring it up. I\u0027ve seen it mentioned a few times here and there, but not seriously implemented. Fuel should primarily be carried in the wings, not the fuselage. It\u0027s how actual aircraft manage to be so stable, it keeps the CoM as close as possible to the CoL. It\u0027s especially important for low mount wings, which tend to have a low center of lift.\u003Cp\u003EFor larger planes, CoM limitations and the actual CoM are expressed in references to mean aerodynamic chord. That\u0027s used to calculate the chord for tapered or swept wings (most airplanes), and it gives you the aerodynamic center (center of lift) of the wing.\u003C/p\u003E\u003Cp\u003EJust some food for thought!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is something that has been discussed in this thread time and time again. It is too easy to add fuel to the wings yourself, and leave yourself responsible for the balance. Educate yourself on Modular Fuel System or Real Fuels, and learn how to add fuel tanks to parts.\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-05-07T17:31:46Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003EThe way the rotor is currently set up there is absolutely no way for FAR to support it. FAR doesn\u0027t include code for turning wings on or off at will, nor does it include code for even figuring out the orientation of lift on a part like that. Hell, you won\u0027t even be able to get proper lift out of the thing since it\u0027ll all be offset to one end (due to how the wing modules work).\u003C/p\u003E\u003Cp\u003EUnfortunately, I think that there is no way to make that part FAR compatible without a large amount of code changes on my part that simply won\u0027t be useful elsewhere. It\u0027ll also add a lot of additional computational overhead to make all that work. Sorry, I think you\u0027re going to have to leave it incompatible with FAR. The alternative is to include a ModuleManager patch to the FARPartClassification node to make FSLiftSurface exempt from FAR\u0027s drag modelling and then figure out something else yourself.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@Cakeoffruit: \u003C/strong\u003ENot currently supported. Maybe in the future, but not now.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@bludclot: \u003C/strong\u003EStruts have no affect on things breaking since it is meant to model internal failure on the pats, leading to it breaking off of the vehicle, not part-to-part failures. As for what you were doing, without seeing a velocity readout I can\u0027t compare what you were doing then to what it takes to cause FAR to break things. For all I know you\u0027re flying with a Q of 30 kPa half the time, with the attendant risks in destroying the aircraft.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@Yar987: \u003C/strong\u003EThis mod strives to model aerodynamics properly. Location of fuel and CoM on a vehicle, while crucial to building stable airplanes, is out of the scope of this mod.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2014-05-07T17:46:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022softweir\u0022 data-cite=\u0022softweir\u0022\u003E\u003Cdiv\u003EIIRC, Firespitter uses its own lift/drag model which completely overrides FAR for Firespitter parts.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually, FSliftsurface contains code to shut itself off if FAR is detected, but apparently, due to the fact that there\u0027s no FAR module anywhere that applies to it/the sheer weirdness of it, it\u0027s using it anyway.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003EThe way the rotor is currently set up there is absolutely no way for FAR to support it. FAR doesn\u0027t include code for turning wings on or off at will, nor does it include code for even figuring out the orientation of lift on a part like that. Hell, you won\u0027t even be able to get proper lift out of the thing since it\u0027ll all be offset to one end (due to how the wing modules work).\u003Cp\u003EUnfortunately, I think that there is no way to make that part FAR compatible without a large amount of code changes on my part that simply won\u0027t be useful elsewhere. It\u0027ll also add a lot of additional computational overhead to make all that work. Sorry, I think you\u0027re going to have to leave it incompatible with FAR. The alternative is to include a ModuleManager patch to the FARPartClassification node to make FSLiftSurface exempt from FAR\u0027s drag modelling and then figure out something else yourself.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was afraid of that. It\u0027s already *got* \u0027something else\u0027 set up, namely firespitter, and I\u0027m honestly not at all sure it actually *is* \u0027turning the lift off\u0027 when it switches into Rotor Mode as it is (at the very least, during the transition, there isn\u0027t a *hint* of instability, even when the wings are out of position). Somehow he managed to get the lift oriented correctly with FS though: it\u0027s centered a bit behind the rotor shaft when they\u0027re folded, which is what you\u0027d expect from a wing swept like that, I\u0027m pretty sure.\u003C/p\u003E\u003Cp\u003EThe mod it\u0027s from is technically in Pre-Alpha, and I myself am at this point merely experimenting with it (which is why it\u0027s on a plane even though that makes NO sense at all.) It occurred to me how a helicopter would be nice for landing to collect science/visit anomalies, but also that helicopters and Tilt-Rotors are...not exactly fast. Patience is not exactly my strongest suit, so when I saw something that could 1.) Give STOL/STOVL/VTOL capability 2.) Still be absurdly fast 3.) Not have useless parts hanging off in one flight mode or the other, I said \u0027Okay, I\u0027m trying that.\u0027\u003C/p\u003E\u003Cp\u003EThe Drag is just TREMENDOUS, though. There\u0027s a workaround for that(FSliftmodule has a \u0027drag multiplier\u0027), but I figured I\u0027d see if it could be done properly before I went there. Now I gotta decide if I wanna try to modify it to fit in better or just try to do a more traditional VTOL. (The plane in question turns out to be very well balanced, far better than I expected, but I don\u0027t know where the heck I\u0027d stick VTOL engines on it.)\u003C/p\u003E\u003Cp\u003EEdit: Preliminary testing suggests that it probably does just have the lift from the \u0027wing\u0027 mode active at all times, and the switch is just cosmetic (other than it being unable to generate thrust while folded). Switching into \u0027rotor\u0027 mode in the VAB doesn\u0027t change the CoL, and it also doesn\u0027t seem to have any effect in flight.\u003C/p\u003E\u003Cp\u003EI\u0027m still working on testing it with the rotor engine active, as the rotor uses the throttle, and thus for such a test I really need to have the throttle cut.\u003C/p\u003E\u003Cp\u003EEdit2: Got a decent glide test. Lift characteristics don\u0027t seem to change based on what mode it\u0027s in. Given that it\u0027s (apparently) already acting as a combination of a static wing and a rotor, is there a way to make the static wing part at least FAR compatible or is it still a \u0027nonono\u0027 because of it being two wings instead of one.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T19:41:25Z\u0022 title=\u002205/07/2014 07:41  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2014-05-07T19:24:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003EThe way the rotor is currently set up there is absolutely no way for FAR to support it. FAR doesn\u0027t include code for turning wings on or off at will, nor does it include code for even figuring out the orientation of lift on a part like that. Hell, you won\u0027t even be able to get proper lift out of the thing since it\u0027ll all be offset to one end (due to how the wing modules work).\u003Cp\u003EUnfortunately, I think that there is no way to make that part FAR compatible without a large amount of code changes on my part that simply won\u0027t be useful elsewhere. It\u0027ll also add a lot of additional computational overhead to make all that work. Sorry, I think you\u0027re going to have to leave it incompatible with FAR. The alternative is to include a ModuleManager patch to the FARPartClassification node to make FSLiftSurface exempt from FAR\u0027s drag modelling and then figure out something else yourself.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre you sure this wouldn\u0027t be useful elsewhere? Because I think it would. It works off Firespitter\u0027s lift module, which is used for built-in slots and variable sweep wings. Even if the rotor itself wouldn\u0027t work (if it would for some reason need more changes than just animation-dependent lift), could you consider accounting for stuff like variable sweep? In general, Firespitter\u0027s animated wings really need to be supported.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2014-05-07T19:41:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dragon01\u0022 data-cite=\u0022Dragon01\u0022\u003E\u003Cdiv\u003EAre you sure this wouldn\u0027t be useful elsewhere? Because I think it would. It works off Firespitter\u0027s lift module, which is used for built-in slots and variable sweep wings. Even if the rotor itself wouldn\u0027t work (if it would for some reason need more changes than just animation-dependent lift), could you consider accounting for stuff like variable sweep? In general, Firespitter\u0027s animated wings really need to be supported.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe Rotor\u0027s complicated as heck because it has to do entirely different things based on which mode it\u0027s in (which is why it\u0027s actually not doing different things in each mode.) I would think Variable Sweep would be more easily achieved, however. You would think, at least.\u003C/p\u003E\u003Cp\u003ENot automagically, I suspect, as Firespitter and FAR use completely different setups for defining wing lift...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T20:02:31Z\u0022 title=\u002205/07/2014 08:02  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"bludclot","CreatedById":102393,"CreatedDateTime":"2014-05-07T20:11:00Z","Content":"\n\u003Cp\u003E@ferram The way I see it the main benefit of using FAR is that lifting bodies is possible. Making these with KSP parts means having to use wing parts to sculpt fuselage parts. I would love if the disintegration would interact with the standard physics system so it would be possible to work around it with all the tools we have at our disposal. Our normal methods of reinforcement should work to this effect. \u003C/p\u003E\u003Cp\u003ECan you not use the same rouitines but instead apply the force to the existing physics model instead of adding arbitrary point of disintegration? \u003C/p\u003E\u003Cp\u003EAtm I feel like you are trying to force us to confirm to a single way of thinking when designing craft.\u003C/p\u003E\u003Cp\u003EI see where you are coming from with this and I totally agree. I just think the method is too simple for simulating the problem.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T20:13:20Z\u0022 title=\u002205/07/2014 08:13  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by bludclot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-05-07T21:07:38Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003EOf course the drag is tremendous. There\u0027s nothing there telling FAR not to have a go at adding its own drag model to that thing, and it\u0027s probably setting it to have a very large reference area and a decent amount of drag. It\u0027s always going to be a no-no because FAR isn\u0027t set up to combine two wings with different sweep into one part, and that\u0027s not something I\u0027m planning on adding. It would require double the computational overhead for that part as a normal wing part would take.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@Dragon01: \u003C/strong\u003ENo. There is no way for me to detect what the animation is actually doing, which means that every single change that happens will need to be defined by the part creator. And \u003Cem\u003Ethat\u003C/em\u003E is something that I\u0027ve been trying to get away from and would only reinforce the need for FAR-specific configs on parts. It\u0027s currently necessary for wing parts, but I don\u0027t want it to be necessary forever and I certainly see no reason to entrench that further. Especially since most of the things that can be done with Firespitter parts can already be done (and much better, I think) with a combination of FAR\u0027s flap settings and Infernal Robotics.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@bludclot: \u003C/strong\u003ELet me explain to you why that doesn\u0027t work. First, the aerodynamic forces applied to parts in the recent update did not change at all. But parts didn\u0027t break off due to aerodynamic forces prior to the recent update. That\u0027s because the new joint system uses the JointDrive parameter to apply forces to parts to hold them in place. The only problem is that forces applied by JointDrive don\u0027t count towards the forces needed to break a joint. And the JointDrive spring constant is set to the maximum stiffness that it can hold (Float.MaxValue) and the JointDrive max force value is also set to that value. So basically, barring a physics glitch that causes the parts to shift just enough that the underlying non-drive connection takes the hit, parts will never break due to forces. Have you noticed that joints never, ever fail due to forces applied since 0.23.5 hit? That\u0027s why.\u003C/p\u003E\u003Cp\u003ESo it\u0027s not possible for the current joint system to handle failures of the type that we would like to have. So I have to work around it. Only way to get them back is to either roll back to the old joint system or to recode the joint system so that PhysX will properly allow joints to break.\u003C/p\u003E\u003Cp\u003EI\u0027ll also note that the \u0022arbitrary\u0022 point of failure is based on the kind of loading that a wing would expect to have in flight. A large amount of math got calculated out to figure out those numbers, they\u0027re not just completely arbitrary.\u003C/p\u003E\n"},{"CreatedByName":"bludclot","CreatedById":102393,"CreatedDateTime":"2014-05-07T21:50:00Z","Content":"\n\u003Cp\u003E@ferram to me it just feels arbitrary because of the problem I illustrated. Since we are limited to using the same parts in many different ways and this method kind of narrows down what is actually possible to do by quite a bit. \u003C/p\u003E\u003Cp\u003EI do not doubt your numbers as your knowledge on the subject is vastly superior to mine. However I feel the realism of it is questionable due to the sensitivity and complete disregard for variation in part usage. \u003C/p\u003E\u003Cp\u003ETo me simulating it in such an inaccurate way kind of beats the whole purpose of FAR as I see it.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-05-07T22:04:11Z","Content":"\n\u003Cp\u003EThen, it comes down to FLYING: UR DOIN IT WRONG. It\u0027s \u003Cstrong\u003Eperfectly possible\u003C/strong\u003E to fly safely with FAR, you just have to lighten up on the controls, use the FAR flight aids, and design your craft well. Now, you can do one fewer impossible thing than you could do before. That\u0027s good. It makes you a better designer and pilot.\u003C/p\u003E\u003Cp\u003EI can and will post Mach 3-at-sea-level, perfectly controllable aircraft if that\u0027s what it takes.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2014-05-07T22:22:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003EOf course the drag is tremendous. There\u0027s nothing there telling FAR not to have a go at adding its own drag model to that thing, and it\u0027s probably setting it to have a very large reference area and a decent amount of drag. It\u0027s always going to be a no-no because FAR isn\u0027t set up to combine two wings with different sweep into one part, and that\u0027s not something I\u0027m planning on adding. It would require double the computational overhead for that part as a normal wing part would take.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI hope by \u0027different sweep\u0027 you mean \u0027in opposite directions\u0027. It isn\u0027t actually a movable wing, doesn\u0027t have variable positioning or sweep or anything. In fact, it appears that the model has an invisible, static \u0027liftsrf\u0027 component that functions as the lift generating portion, completely independently of the visible rotor.\u003C/p\u003E\u003Cp\u003EIn short, it *looks* like a rotor that turns into a wing, but functionally it\u0027s a folding rotor that has a built-in static wing attached to it(which happens to be invisible so it can pretend to turn into a wing).\u003C/p\u003E\u003Cp\u003EI\u0027ll try flagging it as a greeble maybe, see what that does, but I\u0027m pretty sure the drag\u0027s mostly coming from the fact it\u0027s using firespitter\u0027s lift system. When I turn on aeroforces display it doesn\u0027t show any, so I don\u0027t think it\u0027s interacting with FAR at all.\u003C/p\u003E\u003Cp\u003EEdit: I exempted FSliftSurface, that\u0027s the only thing that I have which is using it anyway.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T22:31:55Z\u0022 title=\u002205/07/2014 10:31  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-05-07T22:23:00Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@bludclot: \u003C/strong\u003EYes, I agree. It\u0027s completely arbitrary that 2024 aluminum has a yield strength of 324 MPa. However, this is not my department, and I would advise you to send all complaints to whichever deity your religion has designated as the go-to for complaints/suggestions/requests.\u003C/p\u003E\u003Cp\u003ESnarkiness aside, if you\u0027ve got a better model for the failure strength, I\u0027d be happy to hear it, but complaints about a functional system without presenting a working alternative is unhelpful. I\u0027ve explained why it can\u0027t be done through the existing physics simulation, but simply complaining that you don\u0027t like it doesn\u0027t help.\u003C/p\u003E\u003Cp\u003EOh, did I mention that planes should fly apart a lot more easily, but I\u0027m not simulating flutter? Maybe I should get to work on that...\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003ESweep in opposite directions is not supported. You might be able to manage it if you set it up as an oblique or straight wing, but as it currently stands, anything you try will be wrong.\u003C/p\u003E\n"},{"CreatedByName":"bludclot","CreatedById":102393,"CreatedDateTime":"2014-05-07T22:47:42Z","Content":"\n\u003Cp\u003EFlutter would be a very welcome addition. \u003C/p\u003E\u003Cp\u003EYour butthurt aside.\u003C/p\u003E\u003Cp\u003E The only reason I cared to share my points is that your plugin is the sole reason I still play the game after 2000 hours.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2014-05-07T23:01:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003ESweep in opposite directions is not supported. You might be able to manage it if you set it up as an oblique or straight wing, but as it currently stands, anything you try will be wrong.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnfortunately, I\u0027m not sure what the shape of the actual liftsrf is because invisible. I\u0027m not sure it matters, because I gather FAR assumes that the lift in question is applying to the entire model anyway. Firespitter lets you designate, which is probably why the wing-rotor thing has has a separate component for the lift in the first place. Which is why the CoL of the part doesn\u0027t change when it changes shape, or when the rotor\u0027s flipped on (rotor = thrust, not lift.)\u003C/p\u003E\u003Cp\u003EIt *might* be possible to fake it as a non-swept wing, I have no idea.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-07T23:36:44Z\u0022 title=\u002205/07/2014 11:36  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 7, 2014\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-05-08T01:35:23Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@bludclot: \u003C/strong\u003EWell, thank you for your input. Like I said, if you think the realism of it is questionable, propose a better model and cite the theoretical or empirical basis for it. Data, not feelings.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003EFAR doesn\u0027t really have any elegant way to handle that thing. Probably what it\u0027s doing is creating a cylinder to shove the entire thing into (axis parallel to the rotor axis), and that giant thing is where the problem comes from. You have to look at it and realize that FAR doesn\u0027t know much about the actual shape of the part and functions (for things not given a special FAR wing model to work with) as if the part is some type of elliptical-based frustum. This is why FAR has issues with LLL parts and similar things that move further and further away from stock-like shapes; it just doesn\u0027t have any way to analyze the shape in a reasonable way. FAR only works as well as it does because it can approximate and assume away lots of complications that can\u0027t be done for a model like yours. Hell, the thing I\u0027m working on to replace FAR might not even be able to handle something like that properly.\u003C/p\u003E\n"},{"CreatedByName":"phoenix_ca","CreatedById":50380,"CreatedDateTime":"2014-05-08T01:48:52Z","Content":"\n\u003Cp\u003EJesus-shiva-allah-lao-tsu-no. Not flutter. We already have enough problems to deal with as it is! I mean...our wings aren\u0027t even contiguous parts like they are on a real aircraft! And it\u0027s not like we can control the shape of the airfoil very accurately either. I could do much better with a slab of balsa wood (and have, actually...fun times of youth). \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2014-05-08T01:51:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003E@Tiron: \u003C/strong\u003EFAR doesn\u0027t really have any elegant way to handle that thing. Probably what it\u0027s doing is creating a cylinder to shove the entire thing into (axis parallel to the rotor axis), and that giant thing is where the problem comes from. You have to look at it and realize that FAR doesn\u0027t know much about the actual shape of the part and functions (for things not given a special FAR wing model to work with) as if the part is some type of elliptical-based frustum. This is why FAR has issues with LLL parts and similar things that move further and further away from stock-like shapes; it just doesn\u0027t have any way to analyze the shape in a reasonable way. FAR only works as well as it does because it can approximate and assume away lots of complications that can\u0027t be done for a model like yours. Hell, the thing I\u0027m working on to replace FAR might not even be able to handle something like that properly.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFirst off, it\u0027s not mine. It\u0027s made by a guy named PolecatEZ. I\u0027m just not averse to modifying things. Second, so far as I can tell, it\u0027s not actually using FAR in the slightest: the drag\u0027s coming from Firespitter, which I can hack away with Firespitters drag multiplier if I really have to. This goes double since I added FSliftSurface to the \u0027modules to ignore\u0027 list in FAR.\u003C/p\u003E\u003Cp\u003EI just prefer doing things properly to using dirty hacks, if it\u0027s possible, and I\u0027m trying to figure out if I can modify my own personal copy of the part to work something like approximately correctly. Working a bit unrealistically in FAR would be better than working extremely unrealistically in Firespitter, from my perspective.\u003C/p\u003E\u003Cp\u003EAnd I\u0027ve Gathered FAR doesn\u0027t really reference the models like most people think it should (IE: Parts inside other parts still have drag, even though \u0027stuff in front lowers drag of stuff behind\u0027 is supposed to be one of the things FAR does.) That being the case just makes the possibility of the slightly-less-dirty hack I have in mind MORE likely rather than less.\u003C/p\u003E\u003Cp\u003EIt doesn\u0027t have a FAR module AT ALL. It\u0027s using EXCLUSIVELY firespitter. It has a single wing, unrelated to the rotor system, which is static and active at all times. The visual of it folding into a wing is purely cosmetic and has nothing to do with the operation behind the scenes.\u003C/p\u003E\u003Cp\u003EIs it possible to attach a static FAR wing, which would necessarily also be active at all times (this is not a change from current), to this thing at all, under any conditions or requirements whatsoever or not?\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-05-08T02:28:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EFirst off, it\u0027s not mine. It\u0027s made by a guy named PolecatEZ. I\u0027m just not averse to modifying things. Second, so far as I can tell, it\u0027s not actually using FAR in the slightest: the drag\u0027s coming from Firespitter, which I can hack away with Firespitters drag multiplier if I really have to. This goes double since I added FSliftSurface to the \u0027modules to ignore\u0027 list in FAR.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs there a FARWingAerodynamicModel PartModule attached to it currently? If not, and you\u0027re using FAR, FAR is going to add a FARBasicDragModel PartModule to it, since there\u0027s no exemption for FSliftsurface in the FAR configs. And FARBasicDragModel can really screw up on parts like that.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAnd I\u0027ve Gathered FAR doesn\u0027t really reference the models like most people think it should (IE: Parts inside other parts still have drag, even though \u0027stuff in front lowers drag of stuff behind\u0027 is supposed to be one of the things FAR does.) That being the case just makes the possibility of the slightly-less-dirty hack I have in mind MORE likely rather than less.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFAR \u003Cem\u003Edoes\u003C/em\u003E reference the models, but it doesn\u0027t go into the complicated mess of \u0022how much is this part inside this other part\u0022 unless it\u0027s looking at cargo bays and payload fairings. The \u0022stuff in front lowers drag of stuff behind\u0022 is related to parts attached in a stack, which makes figuring out how the drag of one thing affects another thing easier.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIt doesn\u0027t have a FAR module AT ALL. It\u0027s using EXCLUSIVELY firespitter.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESee above. It will have a FAR module attached to it, applied in-game, not in the config.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIs it possible to attach a static FAR wing, which would necessarily also be active at all times (this is not a change from current), to this thing at all, under any conditions or requirements whatsoever or not?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s perfectly possible for you to attach a FARWingAerodynamicModel to it, but you\u0027re going to have to hack it as an unswept wing and add \u0022nonSideAttach = 1\u0022 to the MODULE node to get it to center the CoL. If you said you wanted an inaccurate hack to begin with, you should have just asked for it.\u003C/p\u003E\n"},{"CreatedByName":"AndreyATGB","CreatedById":62674,"CreatedDateTime":"2014-05-08T18:23:39Z","Content":"\n\u003Cp\u003EIs there any particular reason wings and control surfaces don\u0027t get shielded inside fairings? It\u0027s making launching tiny unmanned planes hell.\u003C/p\u003E\u003Cp\u003EFor example:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/dY5Dtet.jpg\u0022 alt=\u0022dY5Dtet.jpg\u0022\u003E\u003C/p\u003E\n"}]}