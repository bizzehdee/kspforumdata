{"TopicId":7958,"ForumId":34,"TopicTitle":"[PLUGIN,0.15.X,0.16] Start-Stop Engines V 0.1 (Alpha)","CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-11T02:53:54Z","PageNum":1,"Articles":[{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-11T02:53:54Z","Content":"\n\u003Cp\u003EFinally it will be possible! You will be able to shut down engines when you don\\\u0027t need them, and start them back up when you do... WITHOUT JUST STOPPING THE THRUST!!! Big Red Button Pressers presents to you:\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003E\u003Cspan\u003EStart-Stop Plugin\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EIt\\\u0027s still a work in progress, but here it is so far:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cimg src=\u0022http://i.imgur.com/F8Vcl.jpg\u0022 alt=\u0022F8Vcl.jpg\u0022\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDownload Links:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Ca href=\u0022https://dl.dropbox.com/u/59317800/BRBP_LFEControl.dll\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dl.dropbox.com/u/59317800/BRBP_LFEControl.dll\u003C/a\u003E\u003Cp\u003EThis version hopefully works for 0.16. I haven\\\u0027t tested it so let me know if it works or not.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Ca href=\u0022https://dl.dropbox.com/u/59317800/BRBP%20LFE%20Control%20Part%20Class%20Only.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://dl.dropbox.com/u/59317800/BRBP%20LFE%20Control%20Part%20Class%20Only.zip\u003C/a\u003E\u003Cp\u003EThis version creates a new part class that stops the override of the main engines. Use this if you use another plugin to control your engines or you don\\\u0027t want this ridiculous function on the other engines.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Ca href=\u0022https://dl.dropbox.com/u/59317800/BRBP%20LFE%20Complete%20Override.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://dl.dropbox.com/u/59317800/BRBP%20LFE%20Complete%20Override.zip\u003C/a\u003E\u003Cp\u003EThis version creates a complete override of the existing LiquidEngine part class giving Start-Stop functions to any engine. It does not appear to work with other plugins that take exclusive control of the engines.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022http://www.creativecommons.org.nz/var/cc/storage/images/media/images/by_nc_sa__2/1401-1-eng-GB/by_nc_sa.gif\u0022 alt=\u0022by_nc_sa.gif\u0022\u003E\u003C/p\u003E\u003Cp\u003ELicense: \u003Ca href=\u0022http://www.creativecommons.org.nz/choose_and_apply_a_cc_licence#BYNCSA\u0022 rel=\u0022external nofollow\u0022\u003EAttribution-Noncommercial-Share Alike (BY-NC-SA)\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003E\u003Cbr\u003E/*\u003Cbr\u003ELIQUID ENGINE CONTROL PLUGIN\u003Cbr\u003ECreated By: Jayson Grieve (jgjiscool)\u003Cbr\u003ECredit to: N3X15\u003Cbr\u003E Cephei\u003Cbr\u003E\u003Cbr\u003EDescription: This is the part for the budding plane engineers! It allows you to disable parts that you aren\\\u0027t using\u003Cbr\u003E and reactivate them later!\u003Cbr\u003E\u003Cbr\u003ELicense: Creative Commons Attribution ShareAlike 3.0\u003Cbr\u003E*/\u003Cbr\u003E\u003Cbr\u003E// The Separate Part Class has LiquidEngineControlONLY instead of LiquidEngine\u003Cbr\u003Epublic class LiquidEngine : Part\u003Cbr\u003E{\u003Cbr\u003E private Rect windowPos;\u003Cbr\u003E protected float inFL;\u003Cbr\u003E public float maxThrust = 200f;\u003Cbr\u003E public float fuelConsumption = 8f;\u003Cbr\u003E public float heatProduction = 370f;\u003Cbr\u003E public float gimbalRange = 2.5f;\u003Cbr\u003E public Vector3 thrustVector = Vector3.up;\u003Cbr\u003E public float minThrust;\u003Cbr\u003E public float gimbalAngleH;\u003Cbr\u003E public float gimbalAngleV;\u003Cbr\u003E protected Vector3 thrVector;\u003Cbr\u003E private RaycastHit hit;\u003Cbr\u003E public bool thrustVectoringCapable;\u003Cbr\u003E protected float thrust;\u003Cbr\u003E private FXGroup activeGroup;\u003Cbr\u003E private VInfoBox tempIndicator;\u003Cbr\u003E protected Part fuelSource;\u003Cbr\u003E protected Transform gimbal;\u003Cbr\u003E protected Quaternion initRot;\u003Cbr\u003E protected static int guiQueueSpot = 2;\u003Cbr\u003E private int myguiQueueSpot;\u003Cbr\u003E private void WindowGUI(int windowID)\u003Cbr\u003E {\u003Cbr\u003E GUI.DragWindow(new Rect(0, 0, 10000, 20));\u003Cbr\u003E GUIStyle mySty = new GUIStyle(GUI.skin.button);\u003Cbr\u003E mySty.normal.textColor = mySty.focused.textColor = Color.white;\u003Cbr\u003E mySty.hover.textColor = mySty.active.textColor = Color.yellow;\u003Cbr\u003E mySty.onNormal.textColor = mySty.onFocused.textColor = mySty.onHover.textColor = mySty.onActive.textColor = Color.green;\u003Cbr\u003E mySty.padding = new RectOffset(8, 8, 8, 8);\u003Cbr\u003E GUILayout.BeginVertical();\u003Cbr\u003E if (GUILayout.Button(\u0027Stop\u0027, mySty, GUILayout.ExpandWidth(true)))\u003Cbr\u003E {\u003Cbr\u003E this.deactivate();\u003Cbr\u003E }\u003Cbr\u003E if (GUILayout.Button(\u0027Start\u0027, mySty, GUILayout.ExpandWidth(true)))\u003Cbr\u003E {\u003Cbr\u003E this.force_activate();\u003Cbr\u003E }\u003Cbr\u003E if (GUILayout.Button(\u0027Close\u0027, mySty, GUILayout.ExpandWidth(true)))\u003Cbr\u003E {\u003Cbr\u003E RenderingManager.RemoveFromPostDrawQueue(myguiQueueSpot, new Callback(drawGUI));\u003Cbr\u003E }\u003Cbr\u003E GUILayout.EndVertical();\u003Cbr\u003E\u003Cbr\u003E }\u003Cbr\u003E protected override void onCtrlUpd(FlightCtrlState ctrlState)\u003Cbr\u003E {\u003Cbr\u003E this.thrust = (this.maxThrust - this.minThrust) * ctrlState.mainThrottle \u002B this.minThrust;\u003Cbr\u003E this.gimbalAngleH = ctrlState.yaw * this.gimbalRange;\u003Cbr\u003E this.gimbalAngleV = ctrlState.pitch * this.gimbalRange;\u003Cbr\u003E }\u003Cbr\u003E private void drawGUI()\u003Cbr\u003E {\u003Cbr\u003E GUI.skin = HighLogic.Skin;\u003Cbr\u003E windowPos = GUILayout.Window(1, windowPos, WindowGUI, \u0027Engine Control\u0027, GUILayout.MinWidth(150));\u003Cbr\u003E }\u003Cbr\u003E void OnMouseUpAsButton() {\u003Cbr\u003E if (inFL == 1f)\u003Cbr\u003E {\u003Cbr\u003E RenderingManager.AddToPostDrawQueue(myguiQueueSpot, new Callback(drawGUI));\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E protected override bool onPartActivate()\u003Cbr\u003E {\u003Cbr\u003E if ((UnityEngine.Object)this.fuelSource == (UnityEngine.Object)null)\u003Cbr\u003E { this.deactivate(); inFL = 0; RenderingManager.RemoveFromPostDrawQueue(myguiQueueSpot, new Callback(drawGUI)); }\u003Cbr\u003E this.stackIcon.SetIconColor(XKCDColors.AcidGreen);\u003Cbr\u003E return true;\u003Cbr\u003E }\u003Cbr\u003E protected override void onActiveFixedUpdate()\u003Cbr\u003E {\u003Cbr\u003E if (fuelSource.GetType().Name == \u0027FuelTank\u0027)\u003Cbr\u003E {\u003Cbr\u003E\u003Cbr\u003E }\u003Cbr\u003E else if ((this.parent.parent.name) == \u0027FuelTank\u0027)\u003Cbr\u003E {\u003Cbr\u003E if (this.parent.fuelCrossFeed == true)\u003Cbr\u003E {\u003Cbr\u003E this.fuelSource = this.parent.parent;\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E this.activeGroup.Power = Mathf.Max(Mathf.Min(this.thrust / (this.maxThrust * 0.5f), 1.75f), 0.5f);\u003Cbr\u003E if (!this.RequestFuel((Part)this, (float)((double)this.fuelConsumption * (double)Time.deltaTime * ((double)this.thrust / (double)this.maxThrust)), Part.getFuelReqId()) \u0026amp;\u0026amp; !this.RequestFuel((Part)this, (float)((double)this.fuelConsumption * (double)Time.deltaTime * ((double)this.thrust / (double)this.maxThrust)), Part.getFuelReqId()))\u003Cbr\u003E {\u003Cbr\u003E this.deactivate();\u003Cbr\u003E }\u003Cbr\u003E else\u003Cbr\u003E {\u003Cbr\u003E this.thrVector = this.transform.rotation * this.thrustVector;\u003Cbr\u003E if (this.thrustVectoringCapable)\u003Cbr\u003E this.thrustVectoring();\u003Cbr\u003E if ((double)this.thrust \u0026gt; 0.0)\u003Cbr\u003E {\u003Cbr\u003E this.Rigidbody.AddForceAtPosition(this.thrVector * this.thrust, this.transform.position, ForceMode.Force);\u003Cbr\u003E Debug.DrawRay(this.transform.position \u002B this.Rigidbody.velocity * Time.deltaTime, -this.thrVector, XKCDColors.RedOrange);\u003Cbr\u003E if (Physics.Raycast(this.transform.position, -this.thrVector, out this.hit, 10f, 524289) \u0026amp;\u0026amp; (bool)((UnityEngine.Object)this.hit.collider.transform.root.GetComponent\u0026lt;Part\u0026gt;()))\u003Cbr\u003E {\u003Cbr\u003E MonoBehaviour.print((object)(\u0027Exhaust damage on \u0027 \u002B this.hit.collider.transform.root.gameObject.name));\u003Cbr\u003E this.hit.collider.transform.root.GetComponent\u0026lt;Part\u0026gt;().temperature \u002B= this.heatProduction * (this.thrust / this.maxThrust) * Time.deltaTime;\u003Cbr\u003E this.hit.rigidbody.AddForceAtPosition(-this.thrVector * this.thrust, this.hit.point, ForceMode.Force);\u003Cbr\u003E FlightLogger.ReportEvent(new EventReport(FlightEvents.SPLASHDAMAGE, (Part)this, this.hit.collider.transform.root.gameObject.name, this.name, 0, string.Empty));\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E LiquidEngine liquidengine = this;\u003Cbr\u003E double num = (double)liquidengine.temperature \u002B (double)this.heatProduction * ((double)this.thrust / (double)this.maxThrust) * (double)Time.deltaTime;\u003Cbr\u003E liquidengine.temperature = (float)num;\u003Cbr\u003E if ((double)this.thrust == 0.0)\u003Cbr\u003E {\u003Cbr\u003E if (this.activeGroup.Active)\u003Cbr\u003E this.activeGroup.setActive(false);\u003Cbr\u003E }\u003Cbr\u003E else if (!this.activeGroup.Active)\u003Cbr\u003E this.activeGroup.setActive(true);\u003Cbr\u003E if ((double)this.temperature / (double)this.maxTemp \u0026gt;= 0.699999988079071)\u003Cbr\u003E {\u003Cbr\u003E if (this.tempIndicator == null)\u003Cbr\u003E {\u003Cbr\u003E this.tempIndicator = this.stackIcon.DisplayInfo();\u003Cbr\u003E XKCDColors.NextColorAlpha = 0.6f;\u003Cbr\u003E this.tempIndicator.SetMsgBgColor(XKCDColors.DarkRed);\u003Cbr\u003E this.tempIndicator.SetMsgTextColor(XKCDColors.OrangeYellow);\u003Cbr\u003E this.tempIndicator.SetMessage(\u0027Overheat!\u0027);\u003Cbr\u003E this.tempIndicator.SetProgressBarBgColor(XKCDColors.DarkRed);\u003Cbr\u003E this.tempIndicator.SetProgressBarColor(XKCDColors.OrangeYellow);\u003Cbr\u003E XKCDColors.NextColorAlpha = 1f;\u003Cbr\u003E }\u003Cbr\u003E this.tempIndicator.SetValue(this.temperature / this.maxTemp, 0.7f, 1f);\u003Cbr\u003E }\u003Cbr\u003E else\u003Cbr\u003E {\u003Cbr\u003E if (this.tempIndicator == null)\u003Cbr\u003E return;\u003Cbr\u003E this.stackIcon.RemoveInfo(this.tempIndicator);\u003Cbr\u003E this.tempIndicator = (VInfoBox)null;\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E protected void onDeactivate()\u003Cbr\u003E {\u003Cbr\u003E RenderingManager.RemoveFromPostDrawQueue(myguiQueueSpot, new Callback(drawGUI));\u003Cbr\u003E this.stackIcon.SetIconColor(XKCDColors.Blue);\u003Cbr\u003E this.stackIcon.ClearInfoBoxes();\u003Cbr\u003E this.tempIndicator = (VInfoBox)null;\u003Cbr\u003E }\u003Cbr\u003E protected override void onFlightStart()\u003Cbr\u003E {\u003Cbr\u003E inFL = 1f;\u003Cbr\u003E myguiQueueSpot = guiQueueSpot;\u003Cbr\u003E guiQueueSpot \u002B= 1;\u003Cbr\u003E this.activeGroup = this.findFxGroup(\u0027active\u0027);\u003Cbr\u003E this.gimbal = this.transform.FindChild(\u0027model\u0027).FindChild(\u0027obj_gimbal\u0027);\u003Cbr\u003E if ((UnityEngine.Object)this.gimbal != (UnityEngine.Object)null)\u003Cbr\u003E this.initRot = this.gimbal.localRotation;\u003Cbr\u003E this.fuelSource = this.parent;\u003Cbr\u003E }\u003Cbr\u003E protected override void onPartStart()\u003Cbr\u003E {\u003Cbr\u003E this.stackIcon.SetIcon(DefaultIcons.LIQUID_ENGINE);\u003Cbr\u003E print(\u0027Liquid Engine Control Plugin Part Loaded\u0027);\u003Cbr\u003E if ((windowPos.x == 0) \u0026amp;\u0026amp; (windowPos.y == 0))\u003Cbr\u003E {\u003Cbr\u003E windowPos = new Rect(Screen.width / 2, Screen.height / 2, 10, 10);\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E protected override void onPartDestroy()\u003Cbr\u003E {\u003Cbr\u003E RenderingManager.RemoveFromPostDrawQueue(myguiQueueSpot, new Callback(drawGUI));\u003Cbr\u003E }\u003Cbr\u003E protected override void onDecouple(float breakForce)\u003Cbr\u003E {\u003Cbr\u003E inFL = 0;\u003Cbr\u003E this.deactivate();\u003Cbr\u003E RenderingManager.RemoveFromPostDrawQueue(myguiQueueSpot, new Callback(drawGUI));\u003Cbr\u003E }\u003Cbr\u003E private void thrustVectoring()\u003Cbr\u003E {\u003Cbr\u003E this.thrVector = Quaternion.AngleAxis(this.gimbalAngleV, this.localRoot.transform.right) * this.thrVector;\u003Cbr\u003E this.thrVector = Quaternion.AngleAxis(this.gimbalAngleH, this.localRoot.transform.forward) * this.thrVector;\u003Cbr\u003E using (List\u0026lt;GameObject\u0026gt;.Enumerator enumerator = this.activeGroup.fxEmitters.GetEnumerator())\u003Cbr\u003E {\u003Cbr\u003E while (enumerator.MoveNext())\u003Cbr\u003E enumerator.Current.transform.up = this.thrVector;\u003Cbr\u003E }\u003Cbr\u003E if (!((UnityEngine.Object)this.gimbal != (UnityEngine.Object)null))\u003Cbr\u003E return;\u003Cbr\u003E this.gimbal.localRotation = this.initRot * Quaternion.AngleAxis(this.gimbalAngleV, this.gimbal.InverseTransformDirection(this.localRoot.transform.right)) * Quaternion.AngleAxis(this.gimbalAngleH, this.gimbal.InverseTransformDirection(this.localRoot.transform.forward));\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E public override void OnDrawStats()\u003Cbr\u003E {\u003Cbr\u003E object[] objArray = new object[8];\u003Cbr\u003E int index1 = 0;\u003Cbr\u003E string str1 = \u0027Max Thrust: \u0027;\u003Cbr\u003E objArray[index1] = (object)str1;\u003Cbr\u003E int index2 = 1;\u003Cbr\u003E objArray[index2] = (object)(ValueType)this.maxThrust;\u003Cbr\u003E int index3 = 2;\u003Cbr\u003E string str2 = \u0027\\nMin Thrust: \u0027;\u003Cbr\u003E objArray[index3] = (object)str2;\u003Cbr\u003E int index4 = 3;\u003Cbr\u003E objArray[index4] = (object)(ValueType)this.minThrust;\u003Cbr\u003E int index5 = 4;\u003Cbr\u003E string str3 = \u0027\\nBurn rate: \u0027;\u003Cbr\u003E objArray[index5] = (object)str3;\u003Cbr\u003E int index6 = 5;\u003Cbr\u003E objArray[index6] = (object)(ValueType)this.fuelConsumption;\u003Cbr\u003E int index7 = 6;\u003Cbr\u003E string str4 = \u0027\\nThrust Vectoring: \u0027;\u003Cbr\u003E objArray[index7] = (object)str4;\u003Cbr\u003E int index8 = 7;\u003Cbr\u003E string str5 = !this.thrustVectoringCapable ? \u0027No\u0027 : \u0027Yes\\nGimbal Range: \u0027 \u002B this.gimbalRange.ToString(\u00270.0\u0027);\u003Cbr\u003E objArray[index8] = (object)str5;\u003Cbr\u003E string text = string.Concat(objArray);\u003Cbr\u003E GUILayoutOption[] guiLayoutOptionArray = new GUILayoutOption[1];\u003Cbr\u003E int index9 = 0;\u003Cbr\u003E GUILayoutOption guiLayoutOption = GUILayout.ExpandHeight(true);\u003Cbr\u003E guiLayoutOptionArray[index9] = guiLayoutOption;\u003Cbr\u003E GUILayout.TextArea(text, guiLayoutOptionArray);\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing UnityEngine;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EKNOWN ISSUES:\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E* Does not work with tri-couplers (FIXED) *\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003E* Can not spawn multiple windows *\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EGood Luck Kerbalnauts!!!\u003C/p\u003E\u003Cp\u003EP.s. DO NOT TRY TO OPEN MULTIPLE WINDOWS!!! CLOSE THEM BEFORE YOU OPEN ANOTHER ONE!!!\u003C/p\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2012-03-11T02:57:56Z","Content":"\n\u003Cp\u003ENot per engine?\u003C/p\u003E\u003Cp\u003ENeeds to be per engine. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-11T02:59:21Z","Content":"\n\u003Cp\u003EYes. Per engine. Each engine has it\\\u0027s own window that will appear only in flight if you click on it.\u003C/p\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2012-03-11T03:01:07Z","Content":"\n\u003Cp\u003ECool - if you click on it in the stage list?\u003C/p\u003E\u003Cp\u003EI approve. Go go go\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-11T03:02:00Z","Content":"\n\u003Cp\u003EMmmmm. Haven\\\u0027t tested that, but it still may work. I\\\u0027ll figure it out anyway. BTW, the module actually DOES work, the engine code just isn\\\u0027t in it yet.\u003C/p\u003E\n"},{"CreatedByName":"Iskierka","CreatedById":2116,"CreatedDateTime":"2012-03-11T03:45:15Z","Content":"\n\u003Cp\u003EIf it only works with specially made engines, it isn\\\u0027t going to catch on much, with how restricting that will be ...\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-11T18:22:20Z","Content":"\n\u003Cp\u003E\u0026lt;.\u0026lt;\u003C/p\u003E\u003Cp\u003E\u0026gt;.\u0026gt;\u003C/p\u003E\u003Cp\u003EI\\\u0027m a programmer...\u003C/p\u003E\u003Cp\u003EI have ways...\u003C/p\u003E\n"},{"CreatedByName":"swamismurf","CreatedById":4397,"CreatedDateTime":"2012-03-11T20:14:42Z","Content":"\n\u003Cp\u003EThis is how we do in flight tweakables. Click on the part to open adjust settings window, adjust settings, commit. \u003C/p\u003E\u003Cp\u003EIf one were to extend this and combine it with the ASAS or MechJeb, would modifying the KIP parameters from frame to frame force the ASAS/Jeb to update its behavior?\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-11T23:29:43Z","Content":"\n\u003Cp\u003EThis would work, BUT not as an \u003Cem\u003Eextension\u003C/em\u003E of the class. At least that I know of. I have tried to commit my code to the LiquidEngine module, but it doesn\\\u0027t \u003Cem\u003Eappear\u003C/em\u003E to work. Not that I checked after I resolved the internal naming conflict...\u003C/p\u003E\n"},{"CreatedByName":"Pair of skis","CreatedById":16773,"CreatedDateTime":"2012-03-12T22:03:33Z","Content":"\n\u003Cp\u003EHmm...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cimg src=\u0022http://www52.atwiki.jp/saintwrow3car/?plugin=ref\u0026amp;serial=104\u0022 alt=\u0022?plugin=ref\u0026amp;serial=104\u0022\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-13T07:41:11Z","Content":"\n\u003Cp\u003EGUESS WHAT!!!??? If I use the same class definition as an existing part module, MY PLUGIN WILL OVERRIDE THE BUILT IN MODULE!!! Brilliant! Now to get it working just like the standard engine! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"r4m0n","CreatedById":5404,"CreatedDateTime":"2012-03-13T10:34:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022jgjiscool\u0022 data-cite=\u0022jgjiscool\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EGUESS WHAT!!!??? If I use the same class definition as an existing part module, MY PLUGIN WILL OVERRIDE THE BUILT IN MODULE!!! Brilliant! Now to get it working just like the standard engine! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESet the maxThrust of your engines to 0 when you disable them if you will override the default code... I\\\u0027ll need to poke at the engines to find the available thrust at any moment, if some engine is disabled but reporting thrust, it will end up with the rocket not getting into a proper orbit with the ascent module, or crashing to the surface with the descent one.\u003C/p\u003E\u003Cp\u003EAlso remember that if anyone else decides to replace the stock LiquidEngine, things will go BAD.\u003C/p\u003E\u003Cp\u003EA better option would be for you to make an extra part that scans the vessel for LiquidEngines and control them.\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-13T18:29:10Z","Content":"\n\u003Cp\u003EOh... This basically works just like the standard LiquidEngine component except it adds a new GUI. Would it really do *that* much damage? They do work at the moment by the way. But only one on a rocket, because the GUI screws up for the others, and you can\\\u0027t put them under a tricoupler, strut, etc. But I\\\u0027m working on it.\u003C/p\u003E\n"},{"CreatedByName":"Cepheus","CreatedById":10683,"CreatedDateTime":"2012-03-13T23:01:14Z","Content":"\n\u003Cp\u003EI like where this is going. \u002B1 to you.\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-14T01:22:17Z","Content":"\n\u003Cp\u003EDon\\\u0027t add anything yet. I don\\\u0027t have a lot of success yet...\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-15T05:04:34Z","Content":"\n\u003Cp\u003E--- UPLOADING NOW ---\u003C/p\u003E\u003Cp\u003EBriefing will be in the top post\u003C/p\u003E\n"},{"CreatedByName":"Causeless","CreatedById":5366,"CreatedDateTime":"2012-03-15T09:15:32Z","Content":"\n\u003Cp\u003EOk, really? You are kidding me... A triple post.\u003C/p\u003E\u003Cp\u003EEditing bumps. Edit older posts.\u003C/p\u003E\n"},{"CreatedByName":"NovaSilisko","CreatedById":3897,"CreatedDateTime":"2012-03-15T09:35:05Z","Content":"\n\u003Cp\u003EHate to break it to you but there\\\u0027s lots of triple posts by other people (not going to name names for fear of reprisal...)\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-03-15T22:25:34Z","Content":"\n\u003Cp\u003E*Embarrased* Woops. I can remove the \u0027Coming soon\u0027 post... Sorry.\u003C/p\u003E\n"},{"CreatedByName":"Reflector","CreatedById":79,"CreatedDateTime":"2012-07-26T22:55:34Z","Content":"\n\u003Cp\u003ESince .16, the LiquidEngine module has been considered replaced by the LiquidFuelEngine module, any chance of updating this plugin jgjiscool? I\\\u0027ve found it useful on some ship designs which use mixed engine types for variable thrust vs fuel consumption capability.\u003C/p\u003E\n"},{"CreatedByName":"jgjiscool","CreatedById":5044,"CreatedDateTime":"2012-07-27T08:13:44Z","Content":"\n\u003Cp\u003EWell I wasn\\\u0027t planning on it, but...\u003C/p\u003E\u003Cp\u003EIt may or may not work. You\\\u0027ll need to let me know. Being 16 has made me lazy...\u003C/p\u003E\n"},{"CreatedByName":"Reflector","CreatedById":79,"CreatedDateTime":"2012-07-31T22:05:45Z","Content":"\n\u003Cp\u003EAppears to break the new engine system and makes it consume fuel like the original mode when I tested it.\u003C/p\u003E\n"},{"CreatedByName":"fowlplaychiken","CreatedById":30748,"CreatedDateTime":"2012-07-31T23:15:32Z","Content":"\n\u003Cp\u003EIsnt that a good thing, since the new system is broken? haha\u003C/p\u003E\n"}]}