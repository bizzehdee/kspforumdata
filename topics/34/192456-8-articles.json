{"TopicId":192456,"ForumId":34,"TopicTitle":"[1.12.4] ScrapYard (SYD) The Common Part Inventory - v2.2.99.0-prerelease \u0060\u0026lt;Project Zelda II\u0026gt;\u0060 edition [08 Jan 2023]","CreatedByName":"zer0Kerbal","CreatedById":190933,"CreatedDateTime":"2020-03-16T10:54:30Z","PageNum":8,"Articles":[{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-05-28T23:53:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288258\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685312100\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/28/2023 at 7:15 PM, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs I mentioned, persistentId does indeed change. It needs to since it is well, persisted into a craft file, but at the same time must be guaranteed to be unique for every instantiated part. So when KSP loads a craft, the id that are persisted can already be in use (and often will be, since a craft tend to be loaded multiple times, for example by launching it as vessel, then loading it again in the editor, or simply launching multiple vessels out of the same craft file).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHowever I caught the thing happening when there\u0027s no craft alive in the game. There\u0027s a race condition happening somewhere, being triggered by something I\u0027m still trying to determine.\n\u003C/p\u003E\n\u003Cp\u003E\nAdditionally, and this is yet another problem, from KSP 1.4.1 to some release I didn\u0027t cared to check yet, the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistedId\u003C/span\u003E was being already initialised when the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPartModule.OnAwake()**\u003C/span\u003E is called, but from some point (I checked only KSP 1.12.5 at this time) that attribute started to be still 0 on the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnAwake\u003C/span\u003E, and anyone relying on the previous behaviour would be caught with its pants down.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E** \u003Cs\u003ENOTE: Not necessarily. Since I\u0027m loading and reloading the damned thing consecutively, there\u0027s a chance that the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Epart.persistentId\u003C/span\u003E that I\u0027m interpreting as being already initialised is, in true, an\u00A0\u003Cb\u003Eunitiiliased\u003C/b\u003E\u00A0data from a previous PartModule incarnation that by \u0026lt;insert your non forum compliant favourite expletive here\u0026gt; \u0022luck\u0022 ended up being relocated to a new PartModule by some really, really,\u00A0\u003Cstrong\u003Ereally\u003C/strong\u003E\u003Cspan\u003E less than ideal\u003C/span\u003E \u003Cspan\u003Ememory allocation algorithm\u003C/span\u003E. But this is still Unity, with a butchered GC from a old Mono\u0027s release. I can\u0027t say this is impossible.\u003C/s\u003E\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ci\u003E** NOTE AGAIN: If it would be a left over from a previous incarnation, the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EKSP.log\u003C/span\u003E\u0027s first logged occurrence from the part\u0027s \u003C/i\u003E\u003Cspan style=\u0022font-style:italic;font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E\u003Ci\u003E would be zero or a random value. I just confirmed that the first logged\u00A0occurrence of a \u003Cspan style=\u0022font-style:italic;font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E\u00A0had already the correct value, so this is really the right value read from the Craft File on memory and, so, this value is already known before calling the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnAwake()\u003C/span\u003E and could be had checked and fixed by KSP at that time. Could, but as it appears, it was not.\u003C/i\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288258\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685312100\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/28/2023 at 7:15 PM, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSaid otherwise, there is no bug and no \u0022misbehaviour\u0022. persistentId changing is by design, and always has been. It\u0027s even documented on the official API \u003Cspan\u003E: \u003C/span\u003E\u003Ca href=\u0022https://www.kerbalspaceprogram.com/ksp/api/class_game_events.html#a87bb044eae00585d041c7f2babf47c72\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.kerbalspaceprogram.com/ksp/api/class_game_events.html#a87bb044eae00585d041c7f2babf47c72\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWith the due respect, unless further information suggesting otherwise is provided, this sounds like an ugly kludge to me.\n\u003C/p\u003E\n\u003Cp\u003E\nSee, \u00A0at least on the initial implementation (probably on 1.4.0, but I only checked 1.4.1 to this moment), the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E was already initialised\u00A0\u003Cstrong\u003Ecorrectly\u003C/strong\u003E\u00A0on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPartModule.OnAwake()\u003C/span\u003E. Any clash on the a unique identifier should be already be known before \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnWake()\u003C/span\u003E, after all the code was able to had fetched it from the Craft File at this point and so could had verified and fixed any collision with an existent part before calling the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPartModule\u003C/span\u003E\u0027s \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnAwake()\u003C/span\u003E - by doing this way, we would not had to cope with a mutating \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E at all.\n\u003C/p\u003E\n\u003Cp\u003E\nI fail to see the need for this callback, but this ship has already sailed - we need to cope with it as it is right now.\n\u003C/p\u003E\n\u003Cp\u003E\nIt will be interesting to see how this GameEvent will behave on my Test Bed where I can trigger the race condition I diagnosed above - once I determine\u00A0\u003Cstrong\u003Eexactly\u003C/strong\u003E\u00A0how to deterministically reproduce it, because at this time besides having a hunch about how to trigger it, it\u0027s still a try and try again until \u0022success\u0022 process.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288291\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685317753\u0022 data-ipsquote-userid=\u002273338\u0022 data-ipsquote-username=\u0022magico13\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/28/2023 at 8:49 PM, magico13 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m just stopping by to mention how weird it is for something I did over 5 years ago to have butterfly effected like this. I don\u0027t remember exactly the reasoning for swapping to persistent id off of the guid that I was using, except perhaps a somewhat ironic desire to use more stock functionality and less custom code. At the time it didn\u0027t seem to cause any issues but I\u0027ll admit I wasn\u0027t always the most careful developer.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAt that time it didn\u0027t caused any \u003Cem\u003E(observable)\u003C/em\u003E issues (as long KSP would be behaving). It worked at that time, it only happens that it didn\u0027t aged very well as KSP was being developed with further features (and bugs) being introduced.\n\u003C/p\u003E\n\u003Cp\u003E\nYou did found something on KSP, see \u003Ca href=\u0022https://github.com/net-lisias-ksp/KSP-Recall/issues/67#issuecomment-1566281790\u0022 rel=\u0022external nofollow\u0022\u003Ethis post\u003C/a\u003E\u00A0(and also \u003Ca href=\u0022https://github.com/net-lisias-ksp/KSP-Recall/issues/67#issuecomment-1566285938\u0022 rel=\u0022external nofollow\u0022\u003Ethis one\u003C/a\u003E) on my issue tracker. \u003Cem\u003E[Kraken knows how many times I fell on similar traps over the years \u00A0- you are not alone on this]\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ci\u003E\u2014\u00A0\u2014 EDIT\u00A0\u2014\u00A0\u2014\u00A0\u003C/i\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAdditionally, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/73338-magico13/\u0026amp;do=hovercard\u0022 data-mentionid=\u002273338\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/73338-magico13/\u0022 rel=\u0022\u0022\u003E@magico13\u003C/a\u003E, this \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/192456-1124-scrapyard-syd-the-common-part-inventory-v22990-prerelease-edition-08-jan-2023/\u0026amp;do=findComment\u0026amp;comment=4288347\u0022 rel=\u0022\u0022\u003Epost\u003C/a\u003E essentially exempt you from any wrongdoing. That piece of code is a bit cheesy \u003Cspan\u003E\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u00A0for today\u0027s standards but it was not causing any harm.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EThe need to initialise the\u00A0internal\u00A0structures twice, on on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnStart\u003C/span\u003E and another on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitiaze\u003C/span\u003E, may also be seen as redundant, but my experience on KSP taught me that sometimes redundant code is a last measure attempt to work around an undiagnosed situation. Since I didn\u0027t reproduced such situation on a clean up KSP instalment, I\u0027m guessing that you were probably fighting a unhappy interaction with a 3rd party code - a not so uncommon occurrence even nowadays.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-30T05:45:43Z\u0022 title=\u002205/30/2023 05:45  AM\u0022 data-short=\u00221 yr\u0022\u003EMay 30, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003EBrute force post merging. And some notes. And a post edit\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-05-29T00:32:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288293\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685317999\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n53 minutes ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nwe would not had to cope with a mutating \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E at all.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou \u003Cem\u003Ewant\u003C/em\u003E to be able to cope with a persistentId mutation, not being able to would be a design hole in the KSP API.\u003Cbr\u003E\nLets say you have a \u0022controller\u0022 partmodule of some some sort, that has some functionality where the user should select another part on the same vessel/ship.\u003Cbr\u003E\nThis mean you needs to persist a reference to that other part, which is exactly the use case that persistentId was designed for.\u003Cbr\u003E\nSo you grab the persistentId of the target part and persist it on the controller module.\u003Cbr\u003E\nNow, when the ship is re-loaded, you want to find again the part that was targeted, finding it by it\u0027s persistentId (FlightGlobals has methods for that).\n\u003C/p\u003E\n\u003Cp\u003E\nThis is where you want to get notified if the id has changed, which is what the onPartPersistentIdChanged event is for.\u003Cbr\u003E\nAnd you want to get notified of it \u003Cem\u003Eafter \u003C/em\u003Ethe module has been loaded (ie, Load()/OnLoad() called), because otherwise you can\u0027t check if the id that has changed is matching an id you had saved.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-29T00:47:29Z\u0022 title=\u002205/29/2023 12:47  AM\u0022 data-short=\u00221 yr\u0022\u003EMay 29, 2023\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-05-29T03:28:11Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288298\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685320351\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/28/2023 at 9:32 PM, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou \u003Cem\u003Ewant\u003C/em\u003E to be able to cope with a persistentId mutation, not being able to would be a design hole in the KSP API.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is \u003Cem\u003Efait accompli\u003C/em\u003E, so I have no other choice but to accept it and keep walking. It doesn\u0027t really matter if it makes sense to me or not - so I\u0027ll silently complain about the subject to myself from now on.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288298\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685320351\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/28/2023 at 9:32 PM, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis is where you want to get notified if the id has changed, which is what the onPartPersistentIdChanged event is for.\u003Cbr\u003E\nAnd you want to get notified of it \u003Cem\u003Eafter \u003C/em\u003Ethe module has been loaded (ie, Load()/OnLoad() called), because otherwise you can\u0027t check if the id that has changed is matching an id you had saved.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSo this is how things happens on the log now, on a ideal Scenario where:\n\u003C/p\u003E\n\u003Col\u003E\n\u003Cli\u003E\nA single craft called \u0022Untitled Space Craft\u0022 exists on the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E folder\n\u003Col\u003E\n\u003Cli\u003E\nLet\u0027s focus only on the root part, mk1pod\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nAn instance was previously launched and left on the Launch Pad\n\u003C/li\u003E\n\u003Cli\u003E\nEditor is launched, and the previously loaded craft file is loaded automatically\n\u003Col\u003E\n\u003Cli\u003E\nAnd it\u0027s the same one that is on the LaunchPad now\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nThere\u0027s a \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPartModule\u003C/span\u003E called\u00A0\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EKSP-Recall.Test.PersistentId\u003C/span\u003E\u00A0on each Part\u00A0those only reason of existence is\u00A0to log\u00A0which phase of its life cycle it is at the moment. This is how I know what\u0027s being called below.\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003Cp\u003E\nThis is the sequence of events I\u0027m getting:\n\u003C/p\u003E\n\u003Col\u003E\n\u003Cli\u003E\nPart mk1pod(Clone) is created, an \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EInstanceId\u003C/span\u003E is given,\u00A0the OnAwake is called. The \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E is loaded from the Craft File on KSP 1.4.1, and it\u0027s zero on KSP 1.12.5\n\u003C/li\u003E\n\u003Cli\u003E\nPart mk1pod (it was renamed in the process), with the same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EinstanceId\u003C/span\u003E from the last step, have its \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnLoad\u003C/span\u003E called. The \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E\u00A0was changed (as\u00A0I have the same craft already on the LaunchPad)\n\u003C/li\u003E\n\u003Cli\u003E\nPart mk1pod, with the same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EInstanceID\u003C/span\u003E and same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E from the last step, have its \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialize\u003C/span\u003E() called.\n\u003C/li\u003E\n\u003Cli\u003E\n\u0022Untitled Space Craft loaded!\u0022 is logged\n\u003C/li\u003E\n\u003Cli\u003E\nPart mk1pod, with the same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EInstanceID\u003C/span\u003E and same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E from the last step, have its \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnSave\u003C/span\u003E() called.\n\u003C/li\u003E\n\u003Cli\u003E\nPart mk1pod, with the same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EInstanceID\u003C/span\u003E and same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E from the last step, have its \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnStart\u003C/span\u003E() called.\n\u003C/li\u003E\n\u003Cli\u003E\n\u0022Autogen thumbnail\u0022 is logged.\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003Cp\u003E\nOukey, things make sense and it\u0027s\u00A0\u003Cstrong\u003Eexactly\u003C/strong\u003E\u00A0what you are telling it is. The reason I\u0027m wasting Forum\u0027s bandwidth with this information is because there\u0027s only 4 situations in which the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E from the part could be being overwritten on ScrapYard:\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\non \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialize()\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\non \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnStart()\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\non a button click handler\n\u003C/li\u003E\n\u003Cli\u003E\non a method called \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EMakeFresh()\u003C/span\u003E\u00A0that it\u0027s called every time a new \u0022handled\u0022 part is created (as in \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPartModule.OnCopy\u003C/span\u003E).\n\u003Cul\u003E\n\u003Cli\u003E\nthis one uses\u00A0\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u003Ca href=\u0022https://www.kerbalspaceprogram.com/ksp/api/class_flight_globals.html#a13e7aa37b60f8cea4b085787fb846bdc\u0022 rel=\u0022external nofollow\u0022\u003EFlightGlobals.CheckPartpersistentId(0, part, false, true)\u003C/a\u003E\u003C/span\u003E to get the new \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nI\u0027m not arguing with you about unnecessarily writing back values into the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPart.persistentId\u003C/span\u003E being bad. It is, and this will be fixed. Point.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, and this is the point in which I think ScrapYard is more of a messenger than a perpetrator (at best, an involuntary accomplice) is that from that 4 situations above, two will just write back a value that is already there (the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnStart\u003C/span\u003E and \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialize\u003C/span\u003E), so no harm can be possibly done and a third is not called unless the user clicks on something inside the ScrapYard\u0027s Window, and none of us had done it on our tests.\n\u003C/p\u003E\n\u003Cp\u003E\nThe remaining option is the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EMakeFresh()\u003C/span\u003E method, that so would generate a new \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E for this current part that\u00A0\u003Cstrong\u003Eshould be\u003C/strong\u003E\u00A0remembered, and so should be really written on the current Part\u0027s \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E if it\u0027s not there yet (or at least it\u0027s what I\u0027m understanding of this code). It worths to mention that \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u003Ca href=\u0022https://www.kerbalspaceprogram.com/ksp/api/class_flight_globals.html#a13e7aa37b60f8cea4b085787fb846bdc\u0022 rel=\u0022external nofollow\u0022\u003EFlightGlobals.CheckPartpersistentId\u003C/a\u003E\u003C/span\u003E\u00A0calls \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u003Ca href=\u0022https://www.kerbalspaceprogram.com/ksp/api/class_game_events.html#a87bb044eae00585d041c7f2babf47c72\u0022 rel=\u0022external nofollow\u0022\u003EGameEvents.onPartPersistentIdChanged\u003C/a\u003E\u003C/span\u003E if a new \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E is issued (and it probably always is, as the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E argument given is 0).\n\u003C/p\u003E\n\u003Cp\u003E\nThis may be a mistake, or perhaps not. But the real problem I\u0027m dealing \u00A0is that the\u00A0\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E[FlowGraph]\u003C/span\u003E LogSpam\u00A0\u003Cstrong\u003Ewas not\u003C/strong\u003E\u00A0happening earlier this month when I spent a whole week bashing my sorry \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\u003C/abbr\u003E on the matter, except\u00A0\u003Cstrong\u003Ea couple times\u003C/strong\u003E\u00A0when I was using a savegame provided by a user that reported the problem. More interesting yet, once I quit to the Main Menu and reloaded it (i.e., had written the SFS file, and then loaded it again), the problem ceased to happen - I didn\u0027t even restarted KSP. And after this, I just couldn\u0027t reproduce the LogSpam no matter what (using that savegame or new ones).\n\u003C/p\u003E\n\u003Cp\u003E\nAnd the user had KSPCF installed, while I had not.\n\u003C/p\u003E\n\u003Cp\u003E\nThis last Friday was the first time ever I could easily reproduce the LogSpam, and using a savegame that I just created on my rig that never had KSPCF installed. So, yeah, on this last Friday I\u003Cstrong\u003E\u00A0could rule out KSPCF\u003C/strong\u003E\u00A0from this equation, but not before.\n\u003C/p\u003E\n\u003Cp\u003E\nBut we still have this weird misbehaviour on the wild, and \u003Cstrong\u003Enow\u003C/strong\u003E I have concrete evidences that there\u0027s something that need to happen and nowadays most of the time it\u0027s not (or something that shouldn\u0027t, but nowadays is constantly happening) that suddenly makes the LogSpam to cease in the very same rig and savegame where the damned thing was happening half an hour before.\n\u003C/p\u003E\n\u003Cp\u003E\nAll we can do now is to suppress the LogSpam on ScrapYard, but whatever is happening under the bonnet, will still keep happening - it only will not be logged on the KSP.log by something triggered by ScrapYard.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I want to diagnose it, because it may explain some other pretty weird happenings I\u0027m getting sometimes (as some \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPartModules\u003C/span\u003E giving me the finger after a Restart to Launch).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-30T05:46:14Z\u0022 title=\u002205/30/2023 05:46  AM\u0022 data-short=\u00221 yr\u0022\u003EMay 30, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003Etyops as usulla\u2026\n\u003C/span\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-05-29T22:24:30Z","Content":"\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cspan style=\u0022font-size:20px;\u0022\u003E\u003Cspan style=\u0022color:#d35400;\u0022\u003E\u003Cstrong\u003EBREAKING NEWS.\u003C/strong\u003E\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI just got evidence that the problem is not and never was the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E. What we have is a collision on a thingy called \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ecid\u003C/span\u003E (or \u003Cs\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EClassID\u003C/span\u003E\u003C/s\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u00A0CraftId\u003C/span\u003E) on the part.\n\u003C/p\u003E\n\u003Cp\u003E\nFirst, I determined that the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ecid\u003C/span\u003E thingy\u00A0\u003Cstrong\u003Eis not changing\u003C/strong\u003E\u00A0with the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPersistenId\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E[LOG 18:41:57.873] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod(Clone):FFFC2988 has persistentId=91659911 at OnAwake. The cid is 2480147.\n[LOG 18:41:57.875] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC2988 has persistentId=91659911 at OnLoad. The cid is 2480147.\n[LOG 18:41:57.884] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC2988 has persistentId=91659911 at OnInitialize. The cid is 2480147.\n[LOG 18:41:57.885] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC2988 has persistentId=91659911 at OnSave. The cid is 2480147.\n[LOG 18:41:57.886] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC2988 has persistentId=91659911 at OnStart. The cid is 2480147.\n[LOG 18:42:45.857] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod(Clone):FFFC10FC has persistentId=2366749665 at OnAwake. The cid is 2480147.\n[LOG 18:42:45.861] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC10FC has persistentId=1795537535 at OnLoad. The cid is 2480147.\n[LOG 18:42:45.871] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC10FC has persistentId=1795537535 at OnInitialize. The cid is 2480147.\n[LOG 18:42:45.871] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC10FC has persistentId=1795537535 at OnSave. The cid is 2480147.\n[LOG 18:42:45.874] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC10FC has persistentId=1795537535 at OnStart. The cid is 2480147.\n[LOG 18:42:45.876] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFC2988 has persistentId=91659911 at OnDestroy. The cid is 2480147.\u003C/pre\u003E\n\u003Cp\u003E\nAnd later I realised that the FlowGraph\u0027s LogSpam is complaining bout the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ecid\u003C/span\u003E, not the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E!!\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003ELOG 01:54:36.612] [UIMasterController]: ShowUI\n    [ERR 01:54:36.714] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294401494\n\n    [ERR 01:54:36.714] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294401494\n\n--- Craft File\n PART\n    {\n            part = mk1pod.v2_4294401494      \u0026lt;--- here! The cid is the number after the underscore!\n            partName = Part\n            persistentId = 1768470123\n            \n--- SFS file\nPART\n    {\n    \tname = mk1pod.v2\n    \tcid = 4294401494                     \u0026lt;--- here!\n    \tuid = 3987364613\n    \tmid = 1624790515\n    \tpersistentId = 1935682175\n    \tlaunchID = 1\u003C/pre\u003E\n\u003Cp\u003E\nI\u0027ve been chasing ghosts until the moment, there\u0027s nothing wrong on the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E handling by ScrapYard, as it appears.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003EUnfortunately, the \u003Ca href=\u0022https://www.kerbalspaceprogram.com/ksp/api/class_part.html#a8173419760a2ac876c8b5714da92afa4\u0022 rel=\u0022external nofollow\u0022\u003EClassID\u003C/a\u003E is not properly documented on the KSP\u0027s API\u003C/s\u003E. Details on \u003Ca href=\u0022https://github.com/net-lisias-ksp/KSP-Recall/issues/67\u0022 rel=\u0022external nofollow\u0022\u003EKSP-Recall Issue 67\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd. again, there\u0027s still that test session I have documented on the Issue 67 where the LogSpam suddenly stopped and didn\u0027t came back until rebooting the game, not to mention the whole week late April, early May, where I was trying to reproduce the damned thing and just could not!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-30T18:30:56Z\u0022 title=\u002205/30/2023 06:30  PM\u0022 data-short=\u00221 yr\u0022\u003EMay 30, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003ECorrections. I misunderstood ClassID with CraftID.\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-05-30T12:33:20Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288545\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685399070\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd later I realised that the FlowGraph\u0027s LogSpam is complaining bout the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ecid\u003C/span\u003E, not the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E!!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe error message is indeed logging cid/craftId (not ClassID, that\u0027s something entirely different), but that is just to give a way to find back the offending part from the log entry.\u003Cbr\u003E\nThe messages comes from the SCC graph, which actually doesn\u0027t care about any id, it holds direct part references and detect the issue by comparing those, way after the problem actually occurred.\u003Cbr\u003E\nThe underlying cause of duplicate entries in the SCC graph lies in the DeltaVStageInfo class, which uses persistentId to build the part lists.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-30T12:41:03Z\u0022 title=\u002205/30/2023 12:41  PM\u0022 data-short=\u00221 yr\u0022\u003EMay 30, 2023\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-05-30T19:47:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288692\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685450000\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe error message is indeed logging cid/craftId (not ClassID, that\u0027s something entirely different), but that is just to give a way to find back the offending part from the log entry.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYep, Point taken. ClassID \u0026amp; CraftId (cid) are different values on my savegame, and after fixing the code, things match now.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288692\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685450000\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe messages comes from the SCC graph, which actually doesn\u0027t care about any id, it holds direct part references and detect the issue by comparing those, way after the problem actually occurred.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSCC would be Strongly Connected Components?\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, I fixed the test bed and come with this after loading a craft file twice in a row (with another already lingering on the LaunchPad).\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003E[LOG 15:46:51.738] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod(Clone):FFFCCE8E has persistentId=438584920 at OnAwake. The ClassID is 2480147 and the CraftId (cid) is 4294758030.\n[LOG 15:46:51.742] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCE8E has persistentId=91659911 at OnLoad. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:46:51.762] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCE8E has persistentId=91659911 at OnInitialize. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:46:51.768] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCE8E has persistentId=91659911 at OnSave. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:46:51.791] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCE8E has persistentId=91659911 at OnStart. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:53:56.513] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod(Clone):FFFCCA78 has persistentId=438584920 at OnAwake. The ClassID is 2480147 and the CraftId (cid) is 4294756984.\n[LOG 15:53:56.516] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCA78 has persistentId=631267469 at OnLoad. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:53:56.524] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCA78 has persistentId=631267469 at OnInitialize. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:53:56.525] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCA78 has persistentId=631267469 at OnSave. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:53:56.527] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCA78 has persistentId=631267469 at OnStart. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:53:56.529] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCE8E has persistentId=91659911 at OnDestroy. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:53:59.005] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCA78 has persistentId=631267469 at OnSave. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\n[LOG 15:53:59.388] [KSP-Recall.Test.PersistentId] INFO: Part mk1pod:FFFCCA78 has persistentId=631267469 at OnDestroy. The ClassID is 2480147 and the CraftId (cid) is 4294757984.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWe have\u00A0\u003Cstrong\u003Etwo\u003C/strong\u003E\u00A0incarnations of the mk1pod (\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Efrom\u003C/span\u003E \u00A0that omnipresent\u00A0\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EUntitled Space Craft\u003C/span\u003E file), the one with InstanceID\u00A0FFFCCE8E and the one with\u00A0FFFCCE8E . They never shared a \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E, but the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EClassId\u003C/span\u003E and the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003ECraftID\u003C/span\u003E are the same for both of them on this test run.\n\u003C/p\u003E\n\u003Cp\u003E\nThe one interesting thing I noted is that for a brief moment, from\u00A0\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E[LOG 15:53:56.513]\u003C/span\u003E to\u00A0\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E[LOG 15:53:56.529]\u003C/span\u003E, both parts are alive in memory - with the\u00A0FFFCCE8E being destroyed \u003Cu\u003E\u003Cstrong\u003Eafter\u003C/strong\u003E\u003C/u\u003E\u003Cstrong\u003E\u00A0\u003C/strong\u003E\u00A0FFFCCA78 being started.\n\u003C/p\u003E\n\u003Cp\u003E\nIf these parts are used to populate and depopulate some internal data structures, we have a situation in which the new part\u0027s \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnAwake\u003C/span\u003E, \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnLoad\u003C/span\u003E, \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialize\u003C/span\u003E and \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnStart\u003C/span\u003E have to live with a dying previous incarnation still in memory and, so, yet on that data structures. If by any reason the new Part ends up sharing the same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E from the previous incarnation, we have a Window of Opportunity for the LogSpam be triggered. Worst, probably the new part will not be registered on these Data Structures and left orphan - and this opens a whole new can of worms inside the game.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, yeah, I think we may have identified\u00A0\u003Cstrong\u003Ewhere\u003C/strong\u003E\u00A0the problem may be happening - as long someone screws up the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nProblem - until now, none of my logs even remotely suggests that ScrapYard is changing the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistenId\u003C/span\u003E of the part until the moment the LogSpam happens! I had instrumented the suspect code to yell when it would change the current \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ethis.part.persistentId\u003C/span\u003E with a new value, and that code remained silent for the whole ordeal - and, again, I recently had reached some mysterious event (and i don\u0027t have the slightest idea what it would be yet) in which the LogSpam just doesn\u0027t happens, sometimes on the same test session where the damned thing was happening \u003Cs\u003Ehalf a hour\u003C/s\u003E\u00A0[\u003Cem\u003E5 minutes!!!]\u00A0\u003C/em\u003Eago. Not to mention early May where the problem just didn\u0027t happened no matter what I did!!!\n\u003C/p\u003E\n\u003Cp\u003E\nMy (current) conclusion is that, until new information is gathered somehow, ScrapYard is not directly involved on this \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E \u00A0mess (at least, until the first batch of LogSpam happens). Assuming, of course, that the problem is really related to the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E and not something else.\n\u003C/p\u003E\n\u003Cp\u003E\nThe LogSpam mentioning the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ecid\u003C/span\u003E is, well, unfortunate because this test session just proved that a rogue Part\u00A0\u003Cu\u003E\u003Cstrong\u003Ecan\u003C/strong\u003E\u003C/u\u003E\u00A0share the same \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Ecid\u003C/span\u003E with a genuine one and, so, we need to figure out by inference what would be the part screwing up things on the SCC graph. Logging the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EinstanceId\u003C/span\u003E would be better IMHO.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, with a way better understanding of the current mechanics, my next task will be redo the same tests but with the instrumented ScrapYard installed too, and then redo the same analysis again and see what changes - while hopping to the LogSpam to do not vanish again, of course.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288692\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685450000\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe underlying cause of duplicate entries in the SCC graph lies in the DeltaVStageInfo class, which uses persistentId to build the part lists.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSo we have a definitive source for the trigger of this problem. Well, this helps to reduce possible targets - the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E needs to be involved on the mess somehow.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u2014 \u2014 POST EDIT \u2014 \u2014\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt happened again. The LogSpam happened\u00A0\u003Cstrong\u003EONCE\u003C/strong\u003E, and then just vanished from the log.\n\u003C/p\u003E\n\u003Cp\u003E\nForum rules prevent me to further express my thoughts at this moment.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m documenting this test session the most Forum Friendly I can at this moment at\u00A0\u003Ca href=\u0022https://github.com/net-lisias-ksp/KSP-Recall/issues/67\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/net-lisias-ksp/KSP-Recall/issues/67\u003C/a\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-31T04:01:05Z\u0022 title=\u002205/31/2023 04:01  AM\u0022 data-short=\u00221 yr\u0022\u003EMay 31, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003EPOST EDIT\n\u003C/span\u003E\n"},{"CreatedByName":"TruePikachu","CreatedById":130749,"CreatedDateTime":"2023-05-30T21:18:50Z","Content":"\n\u003Cp\u003E\nJust to confirm, the Unity\u002BKSP mod environment doesn\u0027t provide functionality to break on object variable write? I know that if this were native code, I\u0027d be reaching for that right now, and I believe that .NET under Windows provides such support via WinDbg, but Unity is running its own VM so WinDbg can\u0027t access the C# level of things.\n\u003C/p\u003E\n\u003Cp\u003E\nI still have my isolated install which is getting a reliable repro, but due to neither having a debugger capable of attaching at the C# level nor being familiar with KSP\u0027s internal structure I unfortunately can\u0027t help chip away at finding the underlying culprit, beyond saying it\u0027s something between KSP and SYD.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: Or wait, can\u0027t Harmony decorate KSP\u0027s methods that write the ID? Barring a debugger, I\u0027d probably try using that to log call stacks at write, and see if anything curious shows up.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-30T21:24:32Z\u0022 title=\u002205/30/2023 09:24  PM\u0022 data-short=\u00221 yr\u0022\u003EMay 30, 2023\u003C/time\u003E by TruePikachu\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-05-31T02:27:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288799\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685481530\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nJust to confirm, the Unity\u002BKSP mod environment doesn\u0027t provide functionality to break on object variable write? I know that if this were native code, I\u0027d be reaching for that right now, and I believe that .NET under Windows provides such support via WinDbg, but Unity is running its own VM so WinDbg can\u0027t access the C# level of things.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, it\u0027s possible - but it\u0027s pretty tricky to do so on a multithread environment. You set a breakpoint on a thread, then you break the chain of event in which the problem happens.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m seriously thinking that the \u0022vanishing LogSpam effect\u0022 is happening because I\u0027m injecting a lot of debugging messages on the KSP.log, breaking the \u0022timing\u0022 needed to happen to the bug be triggered.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288799\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685481530\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI still have my isolated install which is getting a reliable repro, but due to neither having a debugger capable of attaching at the C# level nor being familiar with KSP\u0027s internal structure I unfortunately can\u0027t help chip away at finding the underlying culprit, beyond saying it\u0027s something between KSP and SYD.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nReading the logs with the extra messages, and comparing with previous logs with less messages, my current best guess is a kind of race condition somewhere, perhaps between SYD and KSP, perhaps inside KSP and so SYD only made it more prone to happen.\n\u003C/p\u003E\n\u003Cp\u003E\nInteresting enough, the LogSpam ceased to happen exactly on KSP 1.12.5 where the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E is still 0 at \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnAwake\u003C/span\u003E and later I flagged SYD writing a different value on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E (finally!!), something that it\u0027s not happening on KSP 1.4.1 where the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E was already initialised with the correct value at \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnAwake\u003C/span\u003E\u003Cs\u003E\u00A0but the LogSpam is still happening.\u003C/s\u003E\u003Cem\u003E[edit: I can\u0027t affirm that anymore. I may had screwed this specific test due biasing]\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSince SYD does the write back stunt on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialise\u003C/span\u003E and also on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnStart\u003C/span\u003E, when by that time the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E\u00A0usually\u00A0\u003Cs\u003Ewas\u003C/s\u003E\u00A0\u003Cem\u003Eshould be\u003C/em\u003E\u00A0correctly initialised, in order to this to happen the other thread (or coroutine - it can be also a coroutine) appears to be getting delayed somehow (perhaps by the huge amount of log messages I\u0027m shoving into KSP.log?) to a point in which the value is not yet initialised on the SYD\u0027s \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialise\u003C/span\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nYeah\u2026 Apparently that code that writes back the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E is that mysterious event that should happen (or a sign that something else happened or ceased to do) in order to suppress the LogSpam on my 1.12.5 rig (and not vice versa).\n\u003C/p\u003E\n\u003Cp\u003E\nThe current difference between my KSP 1.4.1 and 1.12.5 rigs are the huge amount of logs that 1.12.5 is configured to emit (as a log of KSP-Recall modules are active on 1.12.x, but only one or two on 1.4.1), and I\u0027m betting this was one of the reasons I wasn\u0027t being able to reproduce the problem earlier this month, an obscene\u00A0amount of logging that I reactivated in the last test session (and probably was activated early month) - I really should had preserved that logs, but since the problem was not happening on them, it didn\u0027t occurred to me.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288799\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685481530\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nEDIT: Or wait, can\u0027t Harmony decorate KSP\u0027s methods that write the ID? Barring a debugger, I\u0027d probably try using that to log call stacks at write, and see if anything curious shows up.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCode injection, on the Rational Purify way! \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EYes, it helps, and it helps a lot - as long you are not handling race conditions or\u00A0unsynchronised code, because the decorators will inject also new latencies and this will change the behaviour of the test subject.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EBut it still worths a shot, because you don\u0027t need to inject decorators everywhere, only on a very few\u00A0key points\u00A0and so there\u0027s a chance that it will not screw up the test. You will not be able to prove the problem is not there (due the latencies injected by the new code), but with luck you may prove the problem is there if the latencies as harmless enough and the problem is triggered.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EIt\u0027s not too much different from what I\u0027m doing by brute force on SYD (see my last post on the issue 67), but since we can\u0027t do the same on KSP itself, it\u0027s a nice idea. I would like to instrument the FlowGraph logspam to give more details about the part that it\u0027s already there, and the part that is being rejected as duplicated. This information will help to pinpoint where in the part\u0027s life cycle this is happening, shrinking the probable suspects to a more manageable number.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-31T04:04:36Z\u0022 title=\u002205/31/2023 04:04  AM\u0022 data-short=\u00221 yr\u0022\u003EMay 31, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003EBetter phrasing\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-05-31T09:25:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288799\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685481530\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nJust to confirm, the Unity\u002BKSP mod environment doesn\u0027t provide functionality to break on object variable write?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt does. You don\u0027t need to resort to native debuggers, it\u0027s possible to debug plugin managed code from within Visual Studio. Debugging the managed code from KSP itself is a bit more involving, but can be done from within VS with a bit of hacking around, or more easily with DNSpy, which has Unity debugging capabilities.\u003Cbr\u003E\nI can give you a quick rundown in PM if you want.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224288855\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685500041\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nit\u0027s pretty tricky to do so on a multithread environment.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere is no multithreading going on in the KSP codebase, at the single exception of the integrator used for the maneuver planner added in 1.12.\u003Cbr\u003E\nWhile Unity native side is multithreaded, the managed API isn\u0027t thread safe and Unity actively prevent any call to it from any thread outside of the main thread.\u003Cbr\u003E\nThe Unity game loop is strictly single-threaded, so there is absolutely zero chance for such things like race conditions happening unless a plugin explicitly implements some threaded code.\n\u003C/p\u003E\n"},{"CreatedByName":"TruePikachu","CreatedById":130749,"CreatedDateTime":"2023-05-31T19:51:25Z","Content":"\n\u003Cp\u003E\nKSP supports coroutines, though, which while not \u003Cem\u003Estrictly\u003C/em\u003E multithreading still require care to be taken in some cases. If memory serves, the vanilla \u2206V calculation takes a bit of time to process, which implies it\u0027s being scheduled as a coroutine and awaited upon by the UI code to update the readout (or something similar).\n\u003C/p\u003E\n\u003Cp\u003E\nMy current suspicion is that a data structure that the vanilla \u2206V calculation transverses is being modified after the calculation coroutine starts execution but before it finishes, resulting in it reaching some nodes multiple times and then complaining about it. Normally, this can happen when editing the ship, but that seems to be smart enough to cancel the coroutine.\n\u003C/p\u003E\n\u003Cp\u003E\nIt shouldn\u0027t be a stretch to say that differences in execution time will affect the actual ordering of coroutine execution, especially considering that coroutines that have yielded might even have the ability to work multiple times per frame, which would imply that a faster CPU could be less likely to hit the issue and a more complex craft (or slower coroutine because of decorations) could widen the window of opportunity.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-05-31T20:46:53Z","Content":"\n\u003Cp\u003E\nA coroutine is just an extra execution point in the game loop, and the execution is just as deterministic as MB messages like Update or FixedUpdate.\u003Cbr\u003E\nThere are a few corner cases that can indeed result in a non-predictable order of execution, like the fixed loop frequency versus the main loop frequency, or a coroutine set to yield based on time, but I\u0027m quite confident that no such thing is involved in the interactions between ScrapYard and the delta-v stuff.\u003Cbr\u003E\nWhat happen is simply that on vessel/ship load, the stock deltav code create a cached data structure referencing the vessel/ship parts. That cache is then used latter when the delta-v calcs are run, but by that time, in some specific cases, Scrapyard has changed the parts persistentId. This result in the parts not being found in the cache, and consequently added again. The log error happens way further the execution stack thanks to some safeguard detecting those duplicates.\n\u003C/p\u003E\n\u003Cp\u003E\nI haven\u0027t done a ton of tests, but the errors have been perfectly reproducible and deterministic when I checked.\u003Cbr\u003E\nIt won\u0027t always happen, simply because ScrapYard doesn\u0027t always change the parts persistentId. For example, it will happen if you launch from the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, but not if you \u0022revert to launch\u0022, because the \u0022vessel rollout\u0022 event ScrapYard is listening to isn\u0027t fired in that case.\n\u003C/p\u003E\n"},{"CreatedByName":"TruePikachu","CreatedById":130749,"CreatedDateTime":"2023-05-31T21:05:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289109\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685566013\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat happen is simply that on vessel/ship load, the stock deltav code create a cached data structure referencing the vessel/ship parts.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy reproduction steps don\u0027t even need to touch flight mode, FWIW; I can repro from strictly inside the editor, though the current repro steps use SYD\u0027s part list. I don\u0027t know if this changes your analysis, but I felt I should mention it just in case you\u0027re running under the assumption it\u0027s something that only happens when the vessel is loaded into flight mode.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289109\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685566013\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI haven\u0027t done a ton of tests, but the errors have been perfectly reproducible and deterministic when I checked.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027ve had this same personal experience, but clearly something not strictly deterministic is going on if some people can repro it but others can\u0027t using the same steps and basically the same code in play (we\u0027ll assume it\u0027s not a bug introduced by an external library to KSP\u0027s distribution)\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289109\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685566013\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat cache is then used latter when the delta-v calcs are run, but by that time, in some specific cases, Scrapyard has changed the parts persistentId.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAssuming this is the problem, shouldn\u0027t SYD just wipe the cache when it changes the ID?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-31T21:05:52Z\u0022 title=\u002205/31/2023 09:05  PM\u0022 data-short=\u00221 yr\u0022\u003EMay 31, 2023\u003C/time\u003E by TruePikachu\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-05-31T21:36:35Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289113\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685567101\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n32 minutes ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAssuming this is the problem, shouldn\u0027t SYD just wipe the cache when it changes the ID?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt shouldn\u0027t change the ID. This is a ScrapYard oversight, it is hijacking a stock variable for its own needs, and I am very doubtful there is any valid reason to do that.\u003Cbr\u003E\nAs I mentioned, that ID is relied on by various pieces in the stock codebase, not only by the delta-v calcs, and by mods as well.\u003Cbr\u003E\nAnd while there is a mechanism that can cause it to change in the stock implementation, this is a narrow/early event which is largely ignored both in stock code and mods using it (because it doesn\u0027t affect them), so even if ScrapYard was actually calling the id changed event, this would still cause the same issues.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-05-31T21:37:28Z\u0022 title=\u002205/31/2023 09:37  PM\u0022 data-short=\u00221 yr\u0022\u003EMay 31, 2023\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-06-01T04:11:40Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289109\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685566013\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA coroutine is just an extra execution point in the game loop, and the execution is just as deterministic as MB messages like Update or FixedUpdate..\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nA coroutine, from the running code point of view, is a kind of concurrency. If you have a bunch of coroutines dealing with the same data structures, you will see the need of some kind of synchronisation the same.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd you are still on a real multitask environment, your running thread\u00A0\u003Cstrong\u003Ewill be scheduled out\u003C/strong\u003E\u00A0regularly no matter what you do, and since you just don\u0027t have control about the scheduling, you can\u0027t guarantee that whatever fickle equilibrium you manage to reach now will work as times goes by on new processors and operating systems with different scheduling algorithms.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289123\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685568995\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt shouldn\u0027t change the ID. This is a ScrapYard oversight, it is hijacking a stock variable for its own needs, and I am very doubtful there is any valid reason to do that.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNo. ScrapYard is trying hard to cope with how KSP works, it\u0027s trying to blend.\n\u003C/p\u003E\n\u003Cp\u003E\nIt creates a new \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E only when creating new parts for itself, a code that we don\u0027t even touched yet, as the code involved on the mess is the one on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialize\u003C/span\u003E and \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnStart\u003C/span\u003E. I found very interesting the need to do this twice in a raw, it looks like the Author was trying to fight a race condition, by the way: sometimes the data wasn\u0027t there yet on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialize\u003C/span\u003E, so he tried OnStart and it works for some cases, but not for others, then he managed to pull a kludge that worked at that time, and now obviously is not working consistently anymore - I want to stress that I reached a situation in which SYD writing back the known \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E\u003Cstrong\u003E\u00A0coerced KSP into stopping the LogSpam\u003C/strong\u003E, what may suggest that, hell, SYD is fixing something.\n\u003C/p\u003E\n\u003Cp\u003E\nAgain, it\u0027s interesting that on my last test session, the LogSpam ceased once I caught ScrapYard writing back the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E. The LogSpam was being caused (on that test session) when the write back was not happening \u003Cstrong\u003Eon the same\u003C/strong\u003E\u00A0test run. So, at least on my last test session, the weird situation that suppresses the LogSpam is also the one that triggers SYD into writing back the data.\n\u003C/p\u003E\n\u003Cp\u003E\nFurther investigations are needed, however. I just learnt how to stop the LogSpam this week. Now I need to trigger it again on the same test session to see if the M.O. is consistent.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289113\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685567101\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMy reproduction steps don\u0027t even need to touch flight mode,\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI managed to stop the LogSpam by having a identical craft on the Launch Pad, and then going back to Editor and reloading the craft (even if it is was loaded automatically).\n\u003C/p\u003E\n\u003Cp\u003E\nOn the logging I did, when SYD\u00A0\u003Cstrong\u003Edos not\u003C/strong\u003E\u00A0writeback the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E, I have a LogSpam. When SYD\u00A0\u003Cstrong\u003Edoes the writeback\u003C/strong\u003E, the LogSpam doesn\u0027t happens!\n\u003C/p\u003E\n\u003Cp\u003E\nThis evidence suggests that the write back have a reason to be. Not saying that this is the best workaround, but it is a working work around under determined circumstances. Further investigation is necessary.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289109\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685566013\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI haven\u0027t done a ton of tests, but the errors have been perfectly reproducible and deterministic when I checked.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI did. Way more thoughtfully than yours, by the way.\n\u003C/p\u003E\n\u003Cp\u003E\nI managed to suppress the LogSpam, and the suppression is happening exactly when SYD writes back the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nI suggest you analyse my tests and take my results into consideration.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-01T05:30:58Z\u0022 title=\u002206/01/2023 05:30  AM\u0022 data-short=\u00221 yr\u0022\u003EJune 1, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003EHit Save too soon.\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-06-01T12:38:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289200\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685592700\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf you have a bunch of coroutines dealing with the same data structures, you will see the need of some kind of synchronisation the same.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNo. You don\u0027t need any kind of synchronization on data access. There is no concurrent access to anything.\u003Cbr\u003E\nEverything runs from a single thread and all calls are sequential, no matter if you use a coroutine or a MonoBehaviour message. If you have a coroutine with \u0022yield null\u0022, it will yield sequentially on the Update loop, like any MonoBehaviour.Update() method. If you have a coroutine with \u0022yield new WaitForFixedUpdate()\u0022, it will yield sequentially on the FixedUpdate loop, like any MonoBehaviour.FixedUpdate() method.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289200\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685592700\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd you are still on a real multitask environment, your running thread\u00A0\u003Cstrong\u003Ewill be scheduled out\u003C/strong\u003E\u00A0regularly no matter what you do, and since you just don\u0027t have control about the scheduling, you can\u0027t guarantee that whatever fickle equilibrium you manage to reach now will work as times goes by on new processors and operating systems with different scheduling algorithms.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe only thing that is affected by performance characteristics is how many FixedUpdate loops are happening within an Update loop. This is indeed something that one might have to consider if accessing the same data both from the FixedUpdate and Update loops, and has nothing to do with thread scheduling, but simply with the fact that the FixedUpdate loop is called a varying amount of times (including not at all) from within the Update loop, in order to be roughly called 50 times per second, whereas the Update loop call frequency is directly tied to the framerate.\u003Cbr\u003E\nWhile this is something to keep in mind, anything wrongly relying on a 1:1 ratio between FixedUpdate and Update calls is pretty much guaranteed to break, especially in KSP where the load on the FixedUpdate and Update loop has a huge variability.\u003Cbr\u003E\nThere are some other shenanigans with that in KSP, for example PartModule.OnStartFinished() is called on the third Update loop after the part instantiation, and consequently an undetermined amount of FixedUpdate() calls will have happened. There are a few other cases like that, and they do indeed impose some extra care in implementations, but this is just order of execution considerations which are almost entirely limited to initialization sequences, nothing in common with what one have to deal with in a concurrent/multitask environment.\n\u003C/p\u003E\n\u003Cp\u003E\nI suggest you take a careful look at the Unity documentation for all that \u003Cspan\u003E: \u003C/span\u003E\u003Ca href=\u0022https://docs.unity3d.com/2019.4/Documentation/Manual/ExecutionOrder.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://docs.unity3d.com/2019.4/Documentation/Manual/ExecutionOrder.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289200\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685592700\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI suggest you analyse my tests and take my results into consideration.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYep, it\u0027s entirely possible that some consequences of ScrapYard altering the persistentId aren\u0027t consistently visible depending on order of execution shenanigans.\u003Cbr\u003E\nBut I don\u0027t see why this matter at all. The root cause of those issues is ScrapYard overwritting the parts persistentId, it seems we are all finally agreeing on that, so I don\u0027t see the point of loosing time analyzing the failures modes instead of just fixing the root cause.\u003Cbr\u003E\nScrapYard didn\u0027t rely at all on persistentId prior to the commit I linked. I can see why it would benefit from reading that id, but I don\u0027t see any valid reason to overwrite it.\n\u003C/p\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-06-01T13:17:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289291\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685623102\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n39 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBut I don\u0027t see why this matter at all. The root cause of those issues is ScrapYard overwritting the parts persistentId, it seems we are all finally agreeing on that, so I don\u0027t see the point of loosing time analyzing the failures modes instead of just fixing the root cause.\u003Cbr\u003E\nScrapYard didn\u0027t rely at all on persistentId prior to the commit I linked. I can see why it would benefit from reading that id, but I don\u0027t see any valid reason to overwrite it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt does matter.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat you are failing to understand is that the LogSpam is happening when the SYD writeback is harmless (i.e, when the value being written is already there, so no change).\n\u003C/p\u003E\n\u003Cp\u003E\nThe really interesting part is that when SYD writes back a value that ends up overwriting something different, the LogSpam\u00A0\u003Cu\u003E\u003Cstrong\u003Edoes not happen\u003C/strong\u003E\u003C/u\u003E. Essentially, given the current configuration on my test rig, what you are saying should not be there is, in essence, \u0022fixing\u0022 the problem.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, it\u0027s beyound doubt that SYD is triggering something on KSP, and it can be even SYD\u0027s fault somehow - but the code you are pinpointing as a problem, until this moment, is harmless as worst (writing back the same value has literally no practical effects), or effectively preventing the problem at best.\n\u003C/p\u003E\n\u003Cp\u003E\nWhatever SYD is triggering inside KSP, is not related to the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E being (re)written by it. We need to look for the problem somewhere else.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-01T13:18:16Z\u0022 title=\u002206/01/2023 01:18  PM\u0022 data-short=\u00221 yr\u0022\u003EJune 1, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003Etyop! Surprised?\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-06-01T15:34:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289298\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685625471\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhatever SYD is triggering inside KSP, is not related to the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E being (re)written by it. We need to look for the problem somewhere else.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOkay. Do a simple thing, comment out that line \u003Cspan\u003E: \u003C/span\u003E\u003Ca href=\u0022https://github.com/zer0Kerbal/ScrapYard/blob/2fdfcc0c0bdc72c8e777d34356ccb574b0b858d0/source/ScrapYard/Modules/ModuleSYPartTracker.cs#L31\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/zer0Kerbal/ScrapYard/blob/2fdfcc0c0bdc72c8e777d34356ccb574b0b858d0/source/ScrapYard/Modules/ModuleSYPartTracker.cs#L31\u003C/a\u003E\u003Cbr\u003E\n\u003Cspan\u003EThen recompile ScrapYard and use it, good luck trying to get the flowgraph error to happen now.\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"TruePikachu","CreatedById":130749,"CreatedDateTime":"2023-06-01T19:03:15Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289291\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685623102\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNo. You don\u0027t need any kind of synchronization on data access. There is no concurrent access to anything.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nJust to clarify this a little bit, while you don\u0027t need standard synchronization primitives to control objects shared between coroutines (assuming this is a standard single-thread implementation), there\u0027s still a requirement for synchronization at a higher level under specific circumstances. While you only have one task interacting with a data structure at a time, and (under the context of user code execution) task execution can only be interrupted at certain points of time, certain actions performed in one context can still break an invariant or other assumption imposed by the current thing the other is doing. Using C\u002B\u002B as an example (mainly because I know many standard library requirements offhand), an \u0060std::set\u0026lt;\u0026gt;::iterator\u0060 remains valid only while the original \u0060std::set\u0026lt;\u0026gt;\u0060 is unmodified. If a task is iterating through the particular object and yields every, say, 200 iterations, but during a yield another task modifies the object, the iterator is no longer considered valid and access is undefined behavior.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289200\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685592700\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd you are still on a real multitask environment, your running thread\u00A0\u003Cstrong\u003Ewill be scheduled out\u003C/strong\u003E\u00A0regularly no matter what you do\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is irrelevant (except in matters of execution timing) unless you have an external process or something that\u0027s modifying your program structures behind your back; all bets are off if that\u0027s the case.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289123\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685568995\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt shouldn\u0027t change the ID. This is a ScrapYard oversight, it is hijacking a stock variable for its own needs, and I am very doubtful there is any valid reason to do that.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI agree with this assessment; while SYD\u0027s changing of the ID to something already recorded seems well-intentioned (especially considering that mods that affect parts in such a way as to give them a sort of history might be using a non-partmodule mapping keyed by ID to maintain some state), actually doing the change \u0022might\u0022 (read: if I wrote KSP it probably would) break a class invariant. It\u0027s probably enough that the ID remains strictly constant for a part\u0027s singular journey through flight mode, without needing it to still remain the same value once the part has been recovered and built into a new craft.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289200\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685592700\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI managed to stop the LogSpam by having a identical craft on the Launch Pad, and then going back to Editor and reloading the craft (even if it is was loaded automatically).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUnder my testing procedure, at least, log spam under the editor is triggered by instantiation of a part in SYD\u0027s part inventory. You made sure you didn\u0027t run out of stored parts, right?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-01T19:05:55Z\u0022 title=\u002206/01/2023 07:05  PM\u0022 data-short=\u00221 yr\u0022\u003EJune 1, 2023\u003C/time\u003E by TruePikachu\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-06-02T05:32:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289390\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685646195\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis is irrelevant (except in matters of execution timing) unless you have an external process or something that\u0027s modifying your program structures behind your back; all bets are off if that\u0027s the case.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOr some of your coroutines are yielding waiting for some external event now and then, completely screwing the order of events that you assumed while developing the code where such events weren\u0027t active by some reason.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EUnity makes heavy use of spinlocks while looking for some events, by the way, to the point it\u0027s impairing overall performance - see the \u003C/span\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/203645-how-to-play-ksp-with-unity-2019-on-old-potatoes/\u0026amp;do=findComment\u0026amp;comment=4000979\u0022 rel=\u0022\u0022\u003EMONO_THREADS_PER_CPU=1\u003C/a\u003E\u003Cspan\u003E \u00A0stunt\u2026 What\u0027s something I should had checked before, by the way. I will work on it.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHaving initialization code in both \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnInitialize\u003C/span\u003E and on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EOnStart\u003C/span\u003E seriously suggests that the original author didn\u0027t managed to accomplish what he intended deterministically by using only one of them, what again suggests that.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I didn\u0027t managed to suppress the LogSpam on a test bed with\u00A0\u003Cstrong\u003Eway\u003C/strong\u003E\u00A0less logging happening on the KSP.log (as well less KSP-Recall PartModules active).\u00A0Now I need to redo the tests using only KSP 1.12.5 mimicking what 1.4.1 was running, to rule out some influence from KSP 1.4.1 internals to determine if the environment is being mangled by the logging or by the presence of additional PartModules on the affected parts - or it\u0027s just another ghost that I ended chasing.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289323\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685633664\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOkay. Do a simple thing, comment out that line \u003Cspan\u003E: \u003C/span\u003E\u003Ca href=\u0022https://github.com/zer0Kerbal/ScrapYard/blob/2fdfcc0c0bdc72c8e777d34356ccb574b0b858d0/source/ScrapYard/Modules/ModuleSYPartTracker.cs#L31\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/zer0Kerbal/ScrapYard/blob/2fdfcc0c0bdc72c8e777d34356ccb574b0b858d0/source/ScrapYard/Modules/ModuleSYPartTracker.cs#L31\u003C/a\u003E\u003Cbr\u003E\n\u003Cspan\u003EThen recompile ScrapYard and use it, good luck trying to get the flowgraph error to happen now.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI did better. I\u0027m logging on \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EKSP.log\u003C/span\u003E when the value being written is the same and it\u0027s different from the current one.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E                if (value != this.part.persistentId)\n                     Logging.Log(\n                         string.Format(\u0022Part {0}:{1:X} has persistentId={2} and it\u0027s being changed to {3}. The ClassID is {4} and the CraftId (cid) is {5}.\u0022\n                                         , this.name, this.part.GetInstanceID(), this.part.persistentId, value, this.part.ClassID, this.part.craftID\n                                    )\n                         , Logging.LogType.WARNING\n                     );\n                 else\n                     Logging.Log(\n                         string.Format(\u0022Part {0}:{1:X} has persistentId={2} and the value ({3}) is being written back. The ClassID is {4} and the CraftId (cid) is {5}.\u0022\n                                         , this.name, this.part.GetInstanceID(), this.part.persistentId, value, this.part.ClassID, this.part.craftID\n                                    )\n                         , Logging.LogType.WARNING\n                     );\n\n                 part.persistentId = value;\u003C/pre\u003E\n\u003Cp\u003E\nIf you are diagnosing a problem, checking only\u00A0\u003Cstrong\u003Eyour\u003C/strong\u003E\u00A0hypothesis is\u2026 well, like being chased by Wisdom but managing to run faster.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cem\u003E(Users are not playing the game in your rig, you know?)\u003C/em\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289390\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685646195\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUnder my testing procedure, at least, log spam under the editor is triggered by instantiation of a part in SYD\u0027s part inventory.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m not even looking on SYD yet, I\u0027m trying to understand the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistenId\u003C/span\u003E behaviour because even if SYD rolls back to the previous, custom GUID system, it still need to cope with how KSP works internally after the First Great Breakage at 1.4.0.\n\u003C/p\u003E\n\u003Cp\u003E\nRight now, what I have on my logs is:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003E[WRN 17:42:19.236] [Part]: Cannot have ModuleCargoPart and ModuleInventoryPart on same Part [mk1pod.v2\u0027. Removed ModuleCargoPart\n[WRN 17:47:05.766] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=1590504603 and the value (1590504603) is being written back. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:07.416] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=1590504603 and the value (1590504603) is being written back. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:21.382] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=1590504603 and the value (1590504603) is being written back. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:23.471] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=1590504603 and it\u0027s being changed to 3513538705. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:24.219] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=3513538705 and the value (3513538705) is being written back. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[ERR 17:47:24.464] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.464] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.522] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.522] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[WRN 17:47:38.707] [ScrapYard] Part mk1pod.v2:FFF7EBB6 has persistentId=1590504603 and the value (1590504603) is being written back. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:38.790] [ScrapYard] Part mk1pod.v2:FFF7EBB6 has persistentId=1590504603 and the value (1590504603) is being written back. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:49.979] [ScrapYard] Part mk1pod.v2:FFF7ABE0 has persistentId=4043188831 and it\u0027s being changed to 1590504603. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:49.997] [ScrapYard] Part mk1pod.v2:FFF7ABE0 has persistentId=1808313221 and it\u0027s being changed to 1590504603. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:48:41.567] [ScrapYard] Part mk1pod.v2:FFF7A77E has persistentId=33424378 and it\u0027s being changed to 1590504603. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:48:41.580] [ScrapYard] Part mk1pod.v2:FFF7A77E has persistentId=151739214 and it\u0027s being changed to 1590504603. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nYou see, the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E is being changed and not changed before the LogSpam, but also later. This log is an excerpt of a test run in which:\n\u003C/p\u003E\n\u003Col\u003E\n\u003Cli\u003E\nCompile and install the HEAD of the branches above on the target KSP\n\u003C/li\u003E\n\u003Cli\u003E\nFire the damned thing\n\u003C/li\u003E\n\u003Cli\u003E\nCreate a\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cstrong\u003Enew\u003C/strong\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Esavegame called\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ccode style=\u0022font-size:11.899999618530273px;padding:0.2em 0.4em;\u0022\u003Etest-scrapyard\u003C/code\u003E\u003Cspan\u003E\u00A0\u003C/span\u003E(delete any previously existent one)\n\u003C/li\u003E\n\u003Cli\u003E\nCreate a craft called\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ccode style=\u0022font-size:11.899999618530273px;padding:0.2em 0.4em;\u0022\u003EUntitled Space Craft\u003C/code\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eon \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E. Save it and then launch it into Launch Pad\n\u003Col\u003E\n\u003Cli\u003E\nI used a mk1pod and a Flear SFB.\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nGo back to \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003E\u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E\u003C/abbr\u003E, leaving the craft on the Launch Pad\n\u003C/li\u003E\n\u003Cli\u003E\nEnter \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nLoad again the\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ccode style=\u0022font-size:11.899999618530273px;padding:0.2em 0.4em;\u0022\u003EUntitled Space Craft\u003C/code\u003E.\n\u003C/li\u003E\n\u003Cli\u003E\nDo it again just for the lulz\n\u003C/li\u003E\n\u003Cli\u003E\nExit the game session\n\u003C/li\u003E\n\u003Cli\u003E\nClose KSP\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/net-lisias-ksp/KSP-Recall/issues/67#issuecomment-1569102163\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/net-lisias-ksp/KSP-Recall/issues/67#issuecomment-1569102163\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nNote that\u00A0\u003Cu\u003E\u003Cstrong\u003EI didn\u0027t clicked on the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003ENew\u003C/span\u003E button\u003C/strong\u003E\u003C/u\u003E\u00A0before loading the craft again. To tell you the true, I never tried this by clicking the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003ENew\u003C/span\u003E first, this is another test session in need to be executed.\n\u003C/p\u003E\n\u003Cp\u003E\nYou see, changing or not changing the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistenId\u003C/span\u003E is not directly linked to the LogSpam, point. There\u0027s something else happening, and this is proof that we need to look somewhere else.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289291\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685623102\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nScrapYard didn\u0027t rely at all on persistentId prior to the commit I linked.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBefore the commit you linked, SYD was running on KSP 1.3.1. That commit happened after the Great Breakage of KSP 1.4.0.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s probably be the reason the changed was made, but only the original author can answer that (if they recall it, of course).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289291\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685623102\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI can see why it would benefit from reading that id, but I don\u0027t see any valid reason to overwrite it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat doesn\u0027t means there\u0027s none. SYD intends to enhance a part reliability by \u0022reuse\u0022, and so it needs to keep track of each part \u0022incarnation\u0022, so the same Part Identifier needs to be trackable between different craft instances, because from the SYD point of view, it\u0027s a part that was refurbished and used again - not to mention that firing up two equal crafts in sequence should not be counted as reusing the exact same part from the warehouse.\n\u003C/p\u003E\n\u003Cp\u003E\nThat said, I\u0027m not telling that this is the best way of accomplishing the task - it may be even the worst, but this is just not under discussion at this moment. It\u0027s out of the scope of this issue.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat is being in dispute here is the changing of the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistentId\u003C/span\u003E being the trigger of the LogSpam, something that it\u0027s being refuted again and again.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289390\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685646195\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289123\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685568995\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/31/2023 at 6:36 PM, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt shouldn\u0027t change the ID.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI agree with this assessment;\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWe don\u0027t have evidence of that. It may be even true, but until the moment we \u003Cstrong\u003EDO NOT\u003C/strong\u003E\u00A0have evidence of this\u00A0causing problems - au contraire, my last test session suggests it\u0027s harmless.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://en.wikipedia.org/wiki/Correlation_does_not_imply_causation\u0022 rel=\u0022external nofollow\u0022\u003ECorrelation does not imply causation\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nWe need to start to look for the problem somewhere else.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289390\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685646195\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou made sure you didn\u0027t run out of stored parts, right?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cu\u003E\u003Cstrong\u003ENOW\u003C/strong\u003E\u003C/u\u003E\u00A0that the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistendId\u003C/span\u003E is definitively out of the suspects lists, I will start to look somewhere else.\n\u003C/p\u003E\n\u003Cp\u003E\nSince you did some work in advance, and it made sense, I will see how to probe this new hypothesis.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-02T06:56:23Z\u0022 title=\u002206/02/2023 06:56  AM\u0022 data-short=\u00221 yr\u0022\u003EJune 2, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003EBrute force post merging\n\u003C/span\u003E\n"},{"CreatedByName":"TruePikachu","CreatedById":130749,"CreatedDateTime":"2023-06-02T15:05:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289570\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685683932\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/1/2023 at 10:32 PM, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat doesn\u0027t means there\u0027s none. SYD intends to enhance a part reliability by \u0022reuse\u0022, and so it needs to keep track of each part \u0022incarnation\u0022, so the same Part Identifier needs to be trackable between different craft instances, because from the SYD point of view, it\u0027s a part that was refurbished and used again - not to mention that firing up two equal crafts in sequence should not be counted as reusing the exact same part from the warehouse.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIMO this can be accomplished solely with the PartModule that exists on instantiated parts in conjunction with the record keeping that\u0027s already being made in the mod\u0027s scenario(?) node. What purpose does maintaining the exact same persistent ID accomplish that just doing part module copies from recordkeeping doesn\u0027t? The ID is already being saved in SYD\u0027s PartModule, by the way, so write hijacking the vanilla version of it shouldn\u0027t even be necessary, exempting a state where the PartModule is strictly unavailable.\n\u003C/p\u003E\n\u003Cp\u003E\nThinking about it, \u003Cem\u003Eif\u003C/em\u003E the ID itself isn\u0027t the problem, maybe it changing part modules around could be? This is just a wild guess which I haven\u0027t tested in any manner (and probably can\u0027t since I don\u0027t have a dev environment nor the API experience), but considering that the state of the fully-loaded craft on the pad depends both on the vanilla .craft file mechanics and the modded SYD mechanics (or, in the editor case, vanilla part instantiation with a defaulted module versus SYD logic with modified modules coming from the savegame)... when does restoration of the PartModule state happen anyway?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nRight now, I\u0027d probably experiment with removing requirements to write to the vanilla ID field; if they\u0027re not needed, we might have improved compatibility with some other mods, but if they are needed, the reason would show itself in testing. But if the same exact issue happens when the writes are removed, the writes clearly aren\u0027t the entire problem (though they could still be part of the issue).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT:\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289570\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685683932\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/1/2023 at 10:32 PM, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint\u0022\u003E[WRN 17:47:23.471] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=1590504603 and it\u0027s being changed to 3513538705. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:24.219] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=3513538705 and the value (3513538705) is being written back. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[ERR 17:47:24.464] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.464] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.522] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.522] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\u003C/pre\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis suggests that changing the ID is the issue; it gets changed to something new, the new value gets written back again (nop), and then spam on the part that had the ID changed.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289570\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685683932\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/1/2023 at 10:32 PM, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou see, changing or not changing the \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EpersistenId\u003C/span\u003E is not directly linked to the LogSpam, point. There\u0027s something else happening, and this is proof that we need to look somewhere else.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can only say this if you provide an example where a part\u0027s ID doesn\u0027t get changed at all but it still contributes to the spam. Right now, for all we know, logic the flowgraph depends on is still referring to the older ID because it never expected the ID to change.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-03T19:37:27Z\u0022 title=\u002206/03/2023 07:37  PM\u0022 data-short=\u00221 yr\u0022\u003EJune 3, 2023\u003C/time\u003E by TruePikachu\u003C/strong\u003E\n\u003Cbr\u003EManual post merge from desktop\n\u003C/span\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2023-06-02T15:42:08Z","Content":"\n\u003Cp\u003E\nA couple of comments:\n\u003C/p\u003E\n\u003Col\u003E\n\u003Cli\u003E\nA lot of time and effort is being expended on researching a behaviour which, in many people\u0027s opinion, should not be done.\n\u003C/li\u003E\n\u003Cli\u003E\nIt might be better served to first, find all the places where this is being used, and then replace them all with a safe var in the part module.\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003Cp\u003E\nIt would certainly be nice to understand what\u0027s going on, but the end goal is to fix the bug.\u00A0\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-06-23T12:31:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289704\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685720528\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/2/2023 at 12:42 PM, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nA couple of comments:\n\u003C/p\u003E\n\u003Col\u003E\n\u003Cli\u003E\nA lot of time and effort is being expended on researching a behaviour which, in many people\u0027s opinion, should not be done.\n\u003C/li\u003E\n\u003Cli\u003E\nIt might be better served to first, find all the places where this is being used, and then replace them all with a safe var in the part module.\n\u003C/li\u003E\n\u003C/ol\u003E\n\u003Cp\u003E\nIt would certainly be nice to understand what\u0027s going on, but the end goal is to fix the bug.\u00A0\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe bug appears to be on KSP itself, its proven more than enough that the piece of code it was under scrutiny is not a factor to the problem: the Problem is being triggered even when the value is\u00A0\u003Cstrong\u003Enot changed\u003C/strong\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can\u0027t fix a bug that you can\u0027t see.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-23T13:06:30Z\u0022 title=\u002206/23/2023 01:06  PM\u0022 data-short=\u00221 yr\u0022\u003EJune 23, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003Ebetter phrasing.\n\u003C/span\u003E\n"},{"CreatedByName":"Richmountain112","CreatedById":211175,"CreatedDateTime":"2023-06-23T23:00:31Z","Content":"\n\u003Cp\u003E\nWhen I assign a reused part to an action group it automatically uses a new one instead of reusing the one in the inventory.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027d like it to ignore action groups created in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E. I don\u0027t know about in-flight edits to action groups.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-23T23:00:51Z\u0022 title=\u002206/23/2023 11:00  PM\u0022 data-short=\u00221 yr\u0022\u003EJune 23, 2023\u003C/time\u003E by Richmountain112\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TruePikachu","CreatedById":130749,"CreatedDateTime":"2023-06-24T21:29:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224296284\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221687523482\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/23/2023 at 5:31 AM, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe bug appears to be on KSP itself,\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027ve only ever seen this log spam happen with SYD installed, which heavily implies SYD is doing something it shouldn\u0027t be doing. Note that even if the game is exposing a bug to the API, the mod using the API can still be considered to have a bug if it\u0027s not accounting for the game\u0027s bug in its handling of the particular API. Also note the thing SYD is doing doesn\u0027t appear to be a documented feature of the KSP API, technically making it \u003Ca href=\u0022https://en.wikipedia.org/wiki/Unspecified_behavior\u0022 rel=\u0022external nofollow\u0022\u003Eunspecified behavior\u003C/a\u003E at best; it might have been convenient in older versions that it worked, but there was no guarantee it would continue to work in future versions.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224296284\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221687523482\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/23/2023 at 5:31 AM, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nits proven more than enough that the piece of code it was under scrutiny is not a factor to the problem: the Problem is being triggered even when the value is\u00A0\u003Cstrong\u003Enot changed\u003C/strong\u003E.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cem\u003EYour own log\u003C/em\u003E\u003C/strong\u003E indicates the value was changed and there was log spam after it was changed. The fact the log spam didn\u0027t happen on the very next line after the change is inconsequential, as is the facet that it appears to have had the value written twice. Note that the following example snippet of C (which is not from KSP itself, but rather only exists to highlight the flaw in your argument) exhibits \u003Cem\u003Ethe same events\u003C/em\u003E that your log implies are happening, but \u003Cem\u003Estill indicates that manually changing the persistent ID is probably not a good idea\u003C/em\u003E.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\u003Cspan class=\u0022kwd\u0022\u003Elong\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E you_dont_see_this \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1590504603\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* Later... */\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Elong\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E persistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E you_dont_see_this\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* Set the initial value */\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\npersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E3513538705\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* BUG! You shouldn\u0027t change the value */\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* Output from KSP log when the above \u0022happens\u0022:\n[WRN 17:47:23.471] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=1590504603 and it\u0027s being changed to 3513538705. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n*/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Elong\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E some_other_memory \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E persistentId\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* Copy it elsewhere */\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\npersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E some_other_memory\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* Copy it back, this is nop */\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* Output from KSP log when the above \u0022happens\u0022:\n[WRN 17:47:24.219] [ScrapYard] Part mk1pod.v2:FFF8C676 has persistentId=3513538705 and the value (3513538705) is being written back. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n*/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nassert\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpersistentId \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E you_dont_see_this\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* Check is false because of the BUG! line above */\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* Output from KSP log when the above \u0022happens\u0022:\n[ERR 17:47:24.464] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.464] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.522] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n[ERR 17:47:24.522] [FlowGraph]: Graph already contains item! Part mk1pod.v2 with id 4294504548\n*/\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224296284\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221687523482\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/23/2023 at 5:31 AM, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can\u0027t fix a bug that you can\u0027t see.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt looks like you\u0027re only looking for a bug in KSP so you can try to fix it in Recall, versus considering that SYD might be the one with the bug and KSP is working as best as it can after SYD changes something it shouldn\u0027t have.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-24T21:34:56Z\u0022 title=\u002206/24/2023 09:34  PM\u0022 data-short=\u00221 yr\u0022\u003EJune 24, 2023\u003C/time\u003E by TruePikachu\u003C/strong\u003E\n\u003Cbr\u003ETypo fix in code\n\u003C/span\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-06-24T22:00:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224296992\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221687642169\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cem\u003EYour own log\u003C/em\u003E\u003C/strong\u003E indicates the value was changed and there was log spam after it was changed.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTHAT specific log. There\u0027re some more to compare with.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/net-lisias-ksp/KSP-Recall/issues/67\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/net-lisias-ksp/KSP-Recall/issues/67\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nDo you want me to fill this thread with tons and tons of logs so your laziness can be satisfied?\n\u003C/p\u003E\n\u003Cp\u003E\nIn a way or another, here:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E[WRN 17:47:49.979] [ScrapYard] Part mk1pod.v2:FFF7ABE0 has persistentId=4043188831 and it\u0027s being changed to 1590504603. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:47:49.997] [ScrapYard] Part mk1pod.v2:FFF7ABE0 has persistentId=1808313221 and it\u0027s being changed to 1590504603. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:48:41.567] [ScrapYard] Part mk1pod.v2:FFF7A77E has persistentId=33424378 and it\u0027s being changed to 1590504603. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\n[WRN 17:48:41.580] [ScrapYard] Part mk1pod.v2:FFF7A77E has persistentId=151739214 and it\u0027s being changed to 1590504603. The ClassID is 49675735 and the CraftId (cid) is 4294504548.\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#c0392b;\u0022\u003E\u003Cstrong\u003EFOUR times the persistentID was changed\u003C/strong\u003E\u003C/span\u003E, and no LogSpam was triggered, \u003Cspan style=\u0022color:#c0392b;\u0022\u003E\u003Cstrong\u003Eon the same log\u003C/strong\u003E\u003C/span\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224296992\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221687642169\u0022 data-ipsquote-userid=\u0022130749\u0022 data-ipsquote-username=\u0022TruePikachu\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, TruePikachu said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt looks like you\u0027re only looking for a bug in KSP so you can try to fix it in Recall, versus considering that SYD might be the one with the bug and KSP is working as best as it can after SYD changes something it shouldn\u0027t have.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInteresting, from my point of view it looks like you are cherry picking the pieces of logs I post, and completely ignoring that I posted the logs where the LogSpam happened, between a lot of logs where it didn\u0027t (and told about). \u00A0Should I post them all here? Isn\u0027t easier to just check the logs I posted on the issue tracking, looking for a flaw on my Test Sessions, instead of wasting everybody times making assumptions with little to no evidence to support it?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#c0392b;\u0022\u003E\u003Cu\u003E\u003Cstrong\u003EIf my test sessions are flawed (it happens), pinpoint the source of the flaw. Talk is cheap, show me the code.\u003C/strong\u003E\u003C/u\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBesides, as I had said and you conveniently ignored:\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224289570\u0022 data-ipsquote-contentid=\u0022192456\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221685683932\u0022 data-ipsquote-userid=\u0022187168\u0022 data-ipsquote-username=\u0022Lisias\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/2/2023 at 2:32 AM, Lisias said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat said, I\u0027m not telling that this is the best way of accomplishing the task - it may be even the worst, but this is just not under discussion at this moment. It\u0027s out of the scope of this issue.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere\u0027s no doubt that SYD is going to be changed. But without understanding why, you will just move the problem to another place and then someone will have to diagnose this problem again.\n\u003C/p\u003E\n\u003Cp\u003E\nUntil I\u0027m convinced that changing the persistentId is really the source of the problem with reproducible evidences, I will keep advocating for looking the problem somewhere else in the SYD\u0027s code (or not). \u003Cstrong\u003EAND AGAIN, I\u0027M NOT ADVOCATING TO WORK AROUND IT SOMEWHERE ELSE, I want to understand what\u0027s happening and why.\u003C/strong\u003E.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I was candidly ignoring a detail about this problem: exactly what happens when the LogSpam is triggered? What the real side effects to the game? Memory Leaks? Performance Issues? Savegame corruption?\n\u003C/p\u003E\n\u003Cp\u003E\nUntil this moment, I was focusing on the symptom, because I agree we should be aware about what is happening and why.\n\u003C/p\u003E\n\u003Cp\u003E\nBut if I create a Log filter on SYD and just omit the LogSpam from being written on the KSP.log (what would be a \u003Cem\u003E\u0026lt;piiiiii\u0026gt;\u003C/em\u003E move, to make it clear, and I do not condone it), exactly what would be the consequences?\n\u003C/p\u003E\n\u003Cp\u003E\nBecause, you see, this may be another case of false alarm, in the same sense that damned \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003E\u003Cstrong\u003EADDON BINDER ERROR\u003C/strong\u003E\u003C/span\u003E that happens when you merely probe if an Assembly is loaded or not.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-06-24T22:31:30Z\u0022 title=\u002206/24/2023 10:31  PM\u0022 data-short=\u00221 yr\u0022\u003EJune 24, 2023\u003C/time\u003E by Lisias\u003C/strong\u003E\n\u003Cbr\u003EKraken damned tyops\n\u003C/span\u003E\n"}]}