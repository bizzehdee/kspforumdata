{"TopicId":77627,"ForumId":35,"TopicTitle":"Combining efforts on proper mod management framework / tools / platform","CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-07-14T19:10:34Z","PageNum":5,"Articles":[{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-27T23:26:07Z","Content":"\n\u003Cp\u003ESo our ideas are similar. I thought about three packages like this:\u003C/p\u003E\u003Cp\u003EThere is R4.0c package (for KSP 0.22)\u003C/p\u003E\u003Cp\u003Efirst version of this package for KSP 0.23.5 appears:\u003C/p\u003E\u003Cp\u003ER4.1 (virtual, itself does not contain any files) \u0026gt; depends on R4.0c\u002Bcommunity-fix-1 (another package, not installed manually, contains only the fixed files) \u0026gt; depends on R4.0c\u003C/p\u003E\u003Cp\u003EUSER: Great, Install it. \u003C/p\u003E\u003Cp\u003EManager downloads and installs what you need. and marks the R4.1 package as willed by user.\u003C/p\u003E\u003Cp\u003ENew version appears\u003C/p\u003E\u003Cp\u003E5.0\u003C/p\u003E\u003Cp\u003EUSER: Cool, Install it!\u003C/p\u003E\u003Cp\u003EManager sees that the package has two dependencies. That dependencies were automatically installed and no other mod need them. They can be safely deleted. (In case of trouble prompt the user.)\u003C/p\u003E\u003Cp\u003EDeletes three packages and install the new version - 5.0\u003C/p\u003E\u003Cp\u003EGenerally, my idea is to use sub packages. \u003C/p\u003E\u003Cp\u003EI understand that you do not want to remove any packages when upgrading. It\u0027s a good idea because it simplifies this process. \u003C/p\u003E\u003Cp\u003EIn that case, I\u0027m interested in how R4.0c-community-fix-1 package could look like according to your idea?\u003C/p\u003E\u003Cp\u003EMod file with the patches and fixes applied? Or some sort of meta data?\u003C/p\u003E\u003Cp\u003EIn any case, I agree with you that the mod with community fixes (those essential to work) should be treated as newer version of this mod.\u003C/p\u003E\u003Cp\u003EEdit: I used the additional virtual package so it is be recognized by the manager as the next version of R4.0c and to law and order \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E But of course it could be done without it:\u003C/p\u003E\u003Cp\u003ER4.0c\u003C/p\u003E\u003Cp\u003ER4.0c-community-fix-1 (or R4.1 for a pretty version number) depends on R4.0c\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-27T23:34:45Z\u0022 title=\u002208/27/2014 11:34  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 27, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-27T23:37:16Z","Content":"\n\u003Cp\u003EThe idea as a whole consists of three major parts:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe mod repository\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EDescription files aka meta-data\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe client applications\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThe repository:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe repository is represented a as bunch of git repositories containing meta-data for a set of mods.\u003C/p\u003E\u003Cp\u003EA mod release is represented as a \u0027tag\u0027 in the repository and (optionally) has the actual release archive attached to it.\u003C/p\u003E\u003Cp\u003EIn addition to the actual mods, a special \u0027index\u0027 repository exists, listing all mods known to the repository as git-submodules.\u003C/p\u003E\u003Cp\u003EOnce a mod gets updated, so does its submodule reference in the index.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EThis will be explained later on, under \u0027The actual manager application\u0027\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThe description files:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe description file(s) contain all information the client-application needs to manage a given mod:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EDownload link.\u003Cbr\u003E\u003Cem\u003EThe actual URL to obtain the release archive from - basically the download link from the forums\u003C/em\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Legal information like author, copyright, license, ... to display in the client\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Dependencies on other mods and KSP version requirements\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E A complete list of files to install from the release archive\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThe client application(s):\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThis part actually consists of two separate parts:\u003C/p\u003E\u003Cp\u003Edeveloper tools:\u003C/p\u003E\u003Cp\u003EThe developer tools should assist the maintainer/developer in maintaining the mod and providing him with some common tools to use for modding. Like commonly used libraries, templates, a blank module boilerplate, etc...\u003C/p\u003E\u003Cp\u003EThe actual manager application:\u003C/p\u003E\u003Cp\u003EThis application does most of the work. It maintains a list of repositories to get mods / updates from. It keeps track of mods installed and checks them against the repositories for updates.\u003C/p\u003E\u003Cp\u003EThe client application makes use of git to track the repositories index-repo. When the index has updated on remote, the client also updates its submodules to get the latest meta-data available.\u003C/p\u003E\u003Cp\u003EThis way a single \u0027git fetch\u0027 can tell if there are any updates available, efficiently reducing the number of API requests required to keep clients up-to-date.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAdding a mod to the repo:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ESome developer \u0022D\u0022 puts up a mod on the forums\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESome maintainer \u0022M\u0022 (may be the developer himself) downloads the release-archive\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EM creates a new git-repository on GitHub\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EM creates the \u0027meta.yaml\u0027 file and commits it\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EM creates a new version tag (e.g. \u0027v1.0\u0027) and pushes it to GitHub\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EM attaches the release-archive to the release-tag on GitHub\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAt this point the mod is actually already fully usable. What\u0027s left to be done is adding it to the index by some \u0022trustworthy\u0022 person \u0022T\u0022:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ET pulls the current index\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ET adds the new mod as submodule to the index\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ET commits and pushes to GitHub\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENow the new mod is live and automatically available to all clients as new \u0022latest\u0022 version.\u003C/p\u003E\u003Cp\u003ESuch an example repo could look like this \u003Cem\u003E(I already linked this earlier)\u003C/em\u003E:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/ksprepo-alt\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo-alt\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/ksprepo-alt/index\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo-alt/index\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/ksprepo-alt/deadlyreentry/blob/aa8720d9366fefda8f1785e2340450fd7f6c1d92/meta.yaml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo-alt/deadlyreentry/blob/aa8720d9366fefda8f1785e2340450fd7f6c1d92/meta.yaml\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThe meta.yaml linked points to two independent distinct sources for the release archive to download from.\u003C/p\u003E\u003Cp\u003EAs shown by the md5-checksum the files are identical. The repo here simply acts as a mirror. No files have been altered.\u003C/p\u003E\u003Cp\u003EThe \u0027contents\u0027 section lists all files included in the archive, that are to be extracted into the \u0027GameData\u0027 directory by the client-application.\u003C/p\u003E\u003Cp\u003EFiles contained in the archive, but not listed under \u0027contents\u0027 are to be silently ignored (e.g. Documentation, Sources, etc...).\u003C/p\u003E\u003Cp\u003EThe meta.yaml file also contains proper license and copyright information to be displayed by the client-software in some way.\u003C/p\u003E\u003Cp\u003EThe repo contents (in most cases only containing the meta.yaml file) are also properly licensed (in this example MIT) and should be accompanied by a proper README-file, auto-generated from the meta-data.\u003C/p\u003E\u003Cp\u003EThis makes sure our repo can be freely used/forked by others. Such an example README can be seen here: \u003Ca href=\u0022https://github.com/ksprepo/ksp_module-manager/blob/master/README.md\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo/ksp_module-manager/blob/master/README.md\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHotfixing a mod:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EWhen in need to create unofficial hotfixes (like community-made fixes) we can make use of the same scheme:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EM downloads community fix\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EM pulls current mod repo\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EM updates \u0027meta.yaml\u0027 to include the community fix\u0027 changes\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EM creates a new tag (e.g. v1.0\u002Bksprepo-1) and pushes it to GitHub\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EM attaches community-fix.zip to the new release tag\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe actual download url for the mod itself remains the same.\u003C/p\u003E\u003Cp\u003EWhen the client updates the mod to the new release \u0027v1.0\u002Bksprepo-1\u0027 it follows the usual update-procedure (see \u0027Updating a mod\u0027) but also respects changes introduced by the patch-set.\u003C/p\u003E\u003Cp\u003EIt effectively combines them before applying it, where the patch-set always takes precedence over the original release.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EUpdating a mod:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EWhen updating a mod the client compares its local state (for example the contents of the GameData directory) against the file lists of the mods it has installed. It will take care of updating files, as well as removing obsolete ones.\u003C/p\u003E\u003Cp\u003EWhen it detects a conflict (for example a user locally modified a file) it prompts the user to decide what to do.\u003C/p\u003E\u003Cp\u003EThis is basically exactly what git does when you pull from a remote into your working tree. Download changeset, check conflicts, apply changes.\u003C/p\u003E\u003Cp\u003E@\u003Cstrong\u003ESpyhawk:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EDoes this satisfy your needs for now? As I said I do not have the time to start working on a proper spec until at least Sunday, but I took the time to quickly summarize the current state of our discussion.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EDisclaimer: I may have missed something in the hurry here, as I really should be asleep by now... have to get up for work in less than 5 hours again...\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EVery basic\u003C/strong\u003E reference implementation: \u003Ca href=\u0022https://github.com/ksprepo-alt/kspmm-prototype\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo-alt/kspmm-prototype\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-16T06:18:02Z\u0022 title=\u002209/16/2014 06:18  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 16, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-27T23:46:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003E[...]I understand that you do not want to remove any packages when upgrading. It\u0027s a good idea because it simplifies this process. \u003Cp\u003EIn that case, I\u0027m interested in how R4.0c-community-fix-1 package could look like according to your idea?\u003C/p\u003E\u003Cp\u003EMod file with the patches and fixes applied? Or some sort of meta data?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt could look something like this:\u003C/p\u003E\u003Cp\u003EOriginal v5.2 file: \u003Ca href=\u0022https://github.com/ksprepo-alt/deadlyreentry/blob/aa8720d9366fefda8f1785e2340450fd7f6c1d92/meta.yaml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo-alt/deadlyreentry/blob/aa8720d9366fefda8f1785e2340450fd7f6c1d92/meta.yaml\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[...]\u003Cbr\u003E\u003Cbr\u003Edownload:\u003Cbr\u003E    - url: \u0027https://github.com/NathanKell/DeadlyReentry/releases/download/v5.2/DeadlyReentryCont_v5.2.zip\u0027\u003Cbr\u003E      md5: \u0027f70f51778cb8c026bbccd07523016477\u0027\u003Cbr\u003E\u003Cbr\u003E    - url: \u0027https://github.com/ksprepo-alt/deadlyreentry/releases/download/v5.2/DeadlyReentryCont_v5.2.zip\u0027\u003Cbr\u003E      md5: \u0027f70f51778cb8c026bbccd07523016477\u0027\u003Cbr\u003E\u003Cbr\u003Econtents:\u003Cbr\u003E    \u002703d2659490e744b2641ca47ebe6e93f8\u0027: \u0027DeadlyReentry/DeadlyReentry-RealChutes.cfg\u0027\u003Cbr\u003E    \u0027bbe1bd3cb63cba5b630ae9c82bc2f011\u0027: \u0027DeadlyReentry/Sounds/fire_damage.wav\u0027\u003Cbr\u003E    \u002701ea0cb76541c1f16f8c71ba09d04098\u0027: \u0027DeadlyReentry/Sounds/gforce_damage.wav\u0027\u003Cbr\u003E    \u0027aa0ed53b8b89a0366c53777ff76e23eb\u0027: \u0027DeadlyReentry/Parts/UP_decoupler_2/model000.png\u0027\u003Cbr\u003E    ....\u003Cbr\u003E\u003Cbr\u003Epatch:\u003Cbr\u003E    - download:\u003Cbr\u003E            - url: https://github.com/ksprepo-alt/deadlyreentry/releases/download/v5.2-cf-1/5.2-community-fix.zip\u003Cbr\u003E              md5: \u0027bbe1bd3cb63cba5b630ae9c82bc2f011\u0027\u003Cbr\u003E      contents:\u003Cbr\u003E            \u002703d2659490e744b2641ca47ebe6e93f8\u0027: \u0027DeadlyReentry/DeadlyReentry-RealChutes.cfg\u0027\u003Cbr\u003E      remove:\u003Cbr\u003E            - \u0027DeadlyReentry/Sounds/gforce_damage.wav\u0027 \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIn this example the patch would be committed to the repo as version/tag \u0027v5.2\u002Bksprepo-1\u0027.\u003C/p\u003E\u003Cp\u003E\u0027\u002Bksprepo\u0027 being our suffix, \u0027-1\u0027 being the version counter (I took Debian\u0027s approach as reference here).\u003C/p\u003E\u003Cp\u003EWhen the clients sees there is an update available, it simply applies everything under \u0027patch\u0027 in the order specified over the original release.\u003C/p\u003E\u003Cp\u003EInternally it simply merges \u0027contents\u0027 and all \u0027patch/.../contents\u0027 to one single list (ofc. also respecting the \u0027remove\u0027 entries) and treats the generated list as a normal release.\u003C/p\u003E\u003Cp\u003EIn the example above that would replace \u0027DeadlyReentry/DeadlyReentry-RealChutes.cfg\u0027 with a new version and delete \u0027DeadlyReentry/Sounds/gforce_damage.wav\u0027.\u003C/p\u003E\u003Cp\u003ESo we actually do not distribute patched releases, we distribute only differential updates / patches.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-28T00:07:45Z\u0022 title=\u002208/28/2014 12:07  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 28, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-28T00:10:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EHotfixing a mod: [..] \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis description convinced me. Forget about my previous post. Now I understand what you mean, and damn ... this is simple and great!\u003C/p\u003E\u003Cp\u003EI have a few comments, but this is rather details.\u003C/p\u003E\u003Cp\u003EI think that the client should care about hashing files when installing mod and then save checksums somewhere. \u003C/p\u003E\u003Cp\u003EPackage file should be simple enough to make it possible to create it manually (excluding the checksum xD) \u003C/p\u003E\u003Cp\u003EIt is still a matter to discuss. If you want these checksums I will not argue about them \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI do not like skipping files like readme, or example crafts etc. That king of files in the archive must be marked and manager will decide what to do with them.\u003C/p\u003E\u003Cp\u003EThis will be simple: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003Econtents:\u003Cbr\u003E    \u002703d2659490e744b2641ca47ebe6e93f8\u0027: \u0027DeadlyReentry/DeadlyReentry-RealChutes.cfg\u0027\u003Cbr\u003E    \u0027bbe1bd3cb63cba5b630ae9c82bc2f011\u0027: \u0027DeadlyReentry/Sounds/fire_damage.wav\u0027\u003Cbr\u003E    \u002701ea0cb76541c1f16f8c71ba09d04098\u0027: \u0027DeadlyReentry/Sounds/gforce_damage.wav\u0027\u003Cbr\u003Edocumentation:\u003Cbr\u003E   \u0022imagine I\u0027m checksum\u0022: \u0022DeadlyReentry/readme.txt\u0022\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E etc.\u003C/p\u003E\u003Cp\u003ETo hash archive better use SHA1 (just in case)\u003C/p\u003E\u003Cp\u003EThe whole project is starting to look more and more real.\u003C/p\u003E\u003Cp\u003EI need to start learning C# in order to do something useful \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_ohmy.png\u0022 alt=\u0022:o\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-28T00:13:26Z\u0022 title=\u002208/28/2014 12:13  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 28, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T00:23:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI think that the client should care about hashing files when installing mod and then save checksums somewhere. \u003Cp\u003EPackage file should be simple enough to make it possible to create it manually (excluding the checksum xD) \u003C/p\u003E\u003Cp\u003EIt is still a matter to discuss. If you want these checksums I will not argue about them \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s where the dev-tools come into play. The meta.yaml file can mostly be generated automatically using a simple script.\u003C/p\u003E\u003Cp\u003EThis would also greatly reduce the possibility to mess up things wen creating/updating the meta-data.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI do not like skipping files like readme, or example crafts etc. That king of files in the archive must be marked and manager will decide what to do with them. [...]\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027re correct. Some users may prefer to have them installed to their usual location. We could split up contents into categories and let the user decide which categories to install:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Econtents:\u003Cbr\u003E    core:\u003Cbr\u003E        \u002703d2659490e744b2641ca47ebe6e93f8\u0027: \u0027DeadlyReentry/DeadlyReentry-RealChutes.cfg\u0027\u003Cbr\u003E        \u0027bbe1bd3cb63cba5b630ae9c82bc2f011\u0027: \u0027DeadlyReentry/Sounds/fire_damage.wav\u0027\u003Cbr\u003E        \u002701ea0cb76541c1f16f8c71ba09d04098\u0027: \u0027DeadlyReentry/Sounds/gforce_damage.wav\u0027\u003Cbr\u003E    crafts:\u003Cbr\u003E        ...\u003Cbr\u003E    docs:\u003Cbr\u003E        ...\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis way we can easily add categories over time.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003ETo hash archive better use SHA1 (just in case)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMD5 is a bit faster than SHA1. Given a large amount of mods/files and a slow client-pc this could greatly reduce computation time when updating mods.\u003C/p\u003E\u003Cp\u003EThe probability of two hashes colliding is something about 1/(2^128) for both, MD5 and SHA1.\u003C/p\u003E\u003Cp\u003EAs we only use it as checksum (and not as crypto-function) it really does not matter if we chose MD5 or SHA1 as they both create 128bit sums.\u003C/p\u003E\u003Cp\u003EIf we really encounter problems with collisions, we can still switch to a longer checksum.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003ENow I really have to get my sleep. have a good night \u003C/em\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-08-28T11:30:52Z","Content":"\n\u003Cp\u003E@keks, and others: things have become quite serious \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E glad to see that, but in the other hand, debian packaging system was not a one day work and it has evolve with time and features needed. So I suggest doing the same: a first basic step which allow a single mod per package to work without even dependencies, then adding feature one at a time.\u003C/p\u003E\u003Cp\u003EIncluding license text is a pure waste of space and bandwidth, as there is just a few licenses for thousands of mods, license name/version is more than enough. \u002B add a link to the full license. OR you\u0027ll get something as ridiculous as some software with license data is bigger than useful data.\u003C/p\u003E\u003Cp\u003Eand this:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESome maintainer \u0022M\u0022 (may be the developer himself) downloads the release-archive\u003C/p\u003E\u003Cp\u003Ecreates a new git-repository on GitHub\u003C/p\u003E\u003Cp\u003Ecreates the \u0027meta.yaml\u0027 file and commits it\u003C/p\u003E\u003Cp\u003Ecreates a new version tag (e.g. \u0027v1.0\u0027) and pushes it to GitHub\u003C/p\u003E\u003Cp\u003Eattaches the release-archive to the release-tag on GitHub\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Elooks to be a lot\u0027s of work which can be done by a script (create repo, create a dummy meta.yaml file, create release tag, at least)\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T12:06:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EIncluding license text is a pure waste of space and bandwidth, as there is just a few licenses for thousands of mods, license name/version is more than enough. \u002B add a link to the full license. OR you\u0027ll get something as ridiculous as some software with license data is bigger than useful data.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd how would you then handle custom licenses like? Many authors add further restrictions to their license or simply create their own license.\u003C/p\u003E\u003Cp\u003EProper licensing is a must, and nowadays 1 kByte of data really is not that much \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EBy the way, I in fact did only put in name and version of the license when a \u003Cstrong\u003Eunmodified\u003C/strong\u003E standard license was used:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Elicense:\u003Cbr\u003E              - name: \u0022CC BY-NC-SA 4.0\u0022\u003Cbr\u003E                url: \u0022http://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.txt\u0022\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003Elooks to be a lot\u0027s of work which can be done by a script (create repo, create a dummy meta.yaml file, create release tag, at least)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, it actually is not really a lot of work. Everything can be done in less than 2 minutes if you\u0027re quick at typing. But As I already said:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EThat\u0027s where the dev-tools come into play. The meta.yaml file can mostly be generated automatically using a simple script.\u003Cp\u003EThis would also greatly reduce the possibility to mess up things wen creating/updating the meta-data.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn addition to generation of the meta-data file, uploading, tagging, etc can ofc. also be done via a simple script.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-28T12:12:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EIncluding license text is a pure waste of space and bandwidth, as there is just a few licenses for thousands of mods, license name/version is more than enough. \u002B add a link to the full license. OR you\u0027ll get something as ridiculous as some software with license data is bigger than useful data.\u003C/div\u003E\u003C/blockquote\u003E Agree. Besides package licence must be clearly separated from mod licence. \u003Cp\u003EI suggest\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epackage-licence:\u003Cbr\u003E    -name: \u0022MIT License\u0022\u003Cbr\u003E     url: \u0022http://opensource.org/licenses/MIT\u0022\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Einstead\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elicense:\u003Cbr\u003E    - name: \u0022MIT License\u0022\u003Cbr\u003E      plaintext: \u0026amp;mit_license |\u003Cbr\u003E       The MIT License (MIT)\u003Cbr\u003E       Permission is hereby granted ...\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-08-28T12:26:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EAnd how would you then handle custom licenses like? Many authors add further restrictions to their license or simply create their own license.\u003Cp\u003EProper licensing is a must, and nowadays 1 kByte of data really is not that much \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EStandard licenses can use a link to the related website, custom one have instead plain text, as simple as that \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003C/p\u003E\u003Cp\u003Eso license could used: name, link (optional), text (optional) but one of the two last is mandatory.\u003C/p\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-28T12:32:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EDoes this satisfy your needs for now? As I said I do not have the time to start working on a proper spec until at least Sunday, but I took the time to quickly summarize the current state of our discussion.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMuch better, thx! Will reread this summary tonight and might come up with additional comments.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EStandard licenses can use a link to the related website, custom one have instead plain text, as simple as that \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003Cp\u003Eso license could used: name, link (optional), text (optional) but one of the two last is mandatory.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d even say a link is too much. Simply use the name of the license (like \u0022license: MIT\u0022), or for custom license, simply use \u0022license: custom\u0022. If the user needs to know more, he could still check the mod forum URL, the mod archive, etc.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T13:27:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EStandard licenses can use a link to the related website, custom one have instead plain text, as simple as that \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003Cp\u003Eso license could used: name, link (optional), text (optional) but one of the two last is mandatory.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s acutally exactly what I am doing in my examples ;-)\u003C/p\u003E\u003Cp\u003EDon\u0027t mix up the license of the repo with the mod license. The mod license is below repo license under the \u0027legal/original\u0027 key.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003EPS: I also just noticed that I messed up some white-space there... \u0027source\u0027 is actually ment to be on the same level the other keys under \u0027original\u0027 are\u003C/em\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003EI\u0027d even say a link is too much. Simply use the name of the license (like \u0022license: MIT\u0022), or for custom license, simply use \u0022license: custom\u0022. If the user needs to know more, he could still check the mod forum URL, the mod archive, etc.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EAgree. Besides package licence must be clearly separated from mod licence.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt actually is a requirement to include a proper license when redistributing content. For GPL licensed content, you \u003Cstrong\u003Ehave to\u003C/strong\u003E either ship the full license text or provide a link where users can download the full text. I don\u0027t know about CC and BSD, but I\u0027m pretty sure they handle it in a similar way. Also for example BSD-2-Clause (and others) requires you to include the \u003Cstrong\u003Eoriginal\u003C/strong\u003E license notice. The same goes for MIT-license. You \u003Cstrong\u003Ehave to\u003C/strong\u003E include the original copyright/license notice.\u003C/p\u003E\u003Cp\u003EI did not make this clear earlier, but my example file file plaintext/url entries are mutually exclusive, but one of them is always required.\u003C/p\u003E\u003Cp\u003EMods using \u003Cstrong\u003Eunmodified\u003C/strong\u003E license texts can simply supply the license name and URL, where modified licenses must provide the full license text and/or the original license they build on. For example some developers here use the BSD-2-Clause, but add further restrictions.\u003C/p\u003E\u003Cp\u003EInstead of putting in plaintext license into the meta-file, you could also put your license into a file and then use the \u0027url\u0027 key to point to that file. It really does not matter IMHO.\u003C/p\u003E\u003Cp\u003EBut fact is, \u003Cstrong\u003Ewe must\u003C/strong\u003E include those \u003Cstrong\u003Eunchanged\u003C/strong\u003E license/copyright notices and \u003Cstrong\u003Emust\u003C/strong\u003E provide a proper full-text version of said license. This is a requirement most licenses impose upon derived work, and I see no reason to not make this mandatory for all mods. I\u0027d rather have a link too much in there than always having to figure out if I need it or not.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-28T13:37:39Z\u0022 title=\u002208/28/2014 01:37  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 28, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-28T13:55:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EIt actually is a requirement to include a proper license when redistributing content. For GPL licensed content, you \u003Cstrong\u003Ehave to\u003C/strong\u003E either ship the full license text or provide a link where users can download the full text. I don\u0027t know about CC and BSD, but I\u0027m pretty sure they handle it in a similar way. Also for example BSD-2-Clause (and others) requires you to include the \u003Cstrong\u003Eoriginal\u003C/strong\u003E license notice. The same goes for MIT-license. You \u003Cstrong\u003Ehave to\u003C/strong\u003E include the original copyright/license notice.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was only referring to meta-data (the .yaml files). Licenses can be shipped in the archives themselves, or if needed included in a general dummy packages as done by Linux distributions. But please, not in the meta-data (apart from the license name).\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T13:58:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003EI was only referring to meta-data (the .yaml files). Licenses can be shipped in the archives themselves, or if needed included in a general dummy packages as done by Linux distributions. But please, not in the meta-data (apart from the license name).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, I still see no reason to not put it in there, but OK. I\u0027d suggest to putting it into a file called \u0027LICENSE\u0027 (to conform with GPL requirements) located in the root of the repo.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEdit:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI updated the example repo i linked ealier:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003ESuch an example repo could look like this \u003Cem\u003E(I already linked this earlier)\u003C/em\u003E:\u003Cp\u003E\u003Ca href=\u0022https://github.com/ksprepo-alt\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo-alt\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/ksprepo-alt/index\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo-alt/index\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/ksprepo-alt/deadlyreentry/blob/master/meta.yaml\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ksprepo-alt/deadlyreentry/blob/master/meta.yaml\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-28T14:30:14Z\u0022 title=\u002208/28/2014 02:30  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 28, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Spyhawk","CreatedById":71209,"CreatedDateTime":"2014-08-28T14:49:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EWell, I still see no reason to not put it in there, but OK. I\u0027d suggest to putting it into a file called \u0027LICENSE\u0027 (to conform with GPL requirements) located in the root of the repo.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBecause the meta-data is just that, meta-data. It\u0027s the interface between the server side and client side of the \u0022package management\u0022. Why would dull copies of licenses be there?\u003C/p\u003E\u003Cp\u003EAlso, the licenses should already be included in the archives releases. It\u0027s not the package manager job to do the legal stuff if the upstream haven\u0027t done it properly (again, I see little value anything other than the .yaml/.json files with the bare strict minimum required to allow the package manager to work).\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T15:06:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Spyhawk\u0022 data-cite=\u0022Spyhawk\u0022\u003E\u003Cdiv\u003EAlso, the licenses should already be included in the archives releases. It\u0027s not the package manager job to do the legal stuff if the upstream haven\u0027t done it properly.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EProblem is most devs \u003Cstrong\u003Edo not include\u003C/strong\u003E a proper license in their release archive. Instead they mention license on the forums only. That\u0027s a problem for us, because when not shipping a proper license, we actuall violate the dev\u0027s copyright.\u003C/p\u003E\u003Cp\u003EAs we agreed on not modifying the original release, shipping it outside the release archive really is the only way that\u0027s left.\u003C/p\u003E\n"},{"CreatedByName":"micha","CreatedById":113840,"CreatedDateTime":"2014-08-28T16:03:06Z","Content":"\n\u003Cp\u003EGood to see the discussion moving along nicely.\u003C/p\u003E\u003Cp\u003EAlso, I think it was just a terminology issue - the ideas of a \u0022community-fix\u0022 package and a \u0022patch-package\u0022 are exactly the same (in my mind) - that is, from the package manager\u0027s perspective, they are both \u0022real\u0022 packages and will follow the same installation/upgrade paths. I\u0027m not sure why people thought there was a difference.\u003C/p\u003E\u003Cp\u003EThis is why I said the technicalities (what and how exactly do we upgrade from one version of a mod to another) need to be defined, but at a high level, it\u0027s simply a progression of versions and installs/upgrades.\u003C/p\u003E\u003Cp\u003ELicenses are a necessary evil unfortunately, and yes, we must include them if the upstream mod doesn\u0027t.\u003C/p\u003E\u003Cp\u003EAlso, I\u0027m away until Sunday.\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T16:08:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022micha\u0022 data-cite=\u0022micha\u0022\u003E\u003Cdiv\u003EGood to see the discussion moving along nicely.\u003Cp\u003EAlso, I think it was just a terminology issue - the ideas of a \u0022community-fix\u0022 package and a \u0022patch-package\u0022 are exactly the same (in my mind) - that is, from the package manager\u0027s perspective, they are both \u0022real\u0022 packages and will follow the same installation/upgrade paths. I\u0027m not sure why people thought there was a difference.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, there acutally is a little difference. Official packages only contain the original release archive. Unofficial patches contain the original release archive \u003Cstrong\u003Eand\u003C/strong\u003E a the unofficial patch-set that gets applied over the original release. I explained my proposal earlier: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/85989-Combining-efforts-on-proper-mod-management-framework-tools-platform?p=1378736\u0026amp;viewfull=1#post1378736\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/85989-Combining-efforts-on-proper-mod-management-framework-tools-platform?p=1378736\u0026amp;viewfull=1#post1378736\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EFrom perspective of the user, there is no difference between them. That\u0027s correct.\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-28T20:37:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003EI\u0027d suggest to putting it into a file called \u0027LICENSE\u0027 (to conform with GPL requirements) located in the root of the repo.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EVery good solution, actually a compromise between simple packages and copyright laws.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EI thought of our prototype Python application.\u003C/p\u003E\u003Cp\u003EIf it would be good enough (I mean very good) we could try to use cx_Freeze to create standalone executables for Window, Mac and Linux. \u003C/p\u003E\u003Cp\u003EOf course Python program usually has slightly worse performance. But developers time is more valuable than computer time.\u003C/p\u003E\u003Cp\u003EPython is a good language, and if this way would work I see no reason to rewrite everything in C#\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-28T22:23:47Z\u0022 title=\u002208/28/2014 10:23  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 28, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T22:37:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EPython is a good language, and if this way would work I see no reason to rewrite everything in C#\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPython definitely is a nightmare to build GUI (or basically any multi-threaded) applications with. Python does not support running multiple threads in parallel due to it\u0027s GIL.\u003C/p\u003E\u003Cp\u003ESo when the application is working, the GUI hangs. The only way around this is multi-processing which has it\u0027s problems on it\u0027s own...\u003C/p\u003E\u003Cp\u003EAlso writing it in Pyhton would add the dependency on the python interpreter and libraries.\u003C/p\u003E\u003Cp\u003EEven if cx_freeze was working reliably (which it does not) it would be at least lets say \u0022adventurous\u0022.\u003C/p\u003E\u003Cp\u003EI really prefer building the final application in a proper language which is properly supported on all of our target platforms without the need of strange hacks and workarounds.\u003C/p\u003E\u003Cp\u003EWe\u0027d have to rewrite the application anyway, because the prototype is just meant to be a prototype.\u003C/p\u003E\u003Cp\u003ERewriting an application from scratch usually leads to cleaner, more sane code as you won\u0027t (or should not) do the same mistakes again, you did when writing your prototype \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEdit:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EHowever, if you guys really want to use Python instead of C#/Mono, I could accept IronPython, which is a .Net/Mono implementation of the python specification.\u003C/p\u003E\u003Cp\u003EIronPython compiles python code down to .net Bytecode which in turn can be run using the .Net/Mono runtime.\u003C/p\u003E\u003Cp\u003EBut that does not really feel right to me. Mods are written in C#, so should our application be written in C#. No need to introduce a new language here, IMHO.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-28T22:52:35Z\u0022 title=\u002208/28/2014 10:52  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 28, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-28T22:59:32Z","Content":"\n\u003Cp\u003EI would argue... but just tried to build cx_Freeze against Python 3.4 No way :\u0026gt; What a crap xD\u003C/p\u003E\u003Cp\u003EPersonally, I wish we wrote this in my favourite Golang xD But guess what? There isn\u0027t native Go GUI library and using bindings is... funny :\u0026gt; (It is not a proposal of course, just my adoration for this language) \u003C/p\u003E\u003Cp\u003EI just hope that Mono/C# stuff will work properly on all systems \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022keks\u0022 data-cite=\u0022keks\u0022\u003E\u003Cdiv\u003ERewriting an application from scratch usually leads to cleaner, more sane code as you won\u0027t (or should not) do the same mistakes again, you did when writing your prototype \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah... true \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEdit: IronPython is still python 2.7 :| Since we want to use Mono/.NET IMO better let\u0027s stay with C#\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-28T23:06:03Z\u0022 title=\u002208/28/2014 11:06  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 28, 2014\u003C/time\u003E by TeddyDD\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T23:08:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EI just hope that Mono/C# stuff will work properly on all systems \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, KSP does. At least kind of. As long as we stick to Mono only, things should be fine.\u003C/p\u003E\u003Cp\u003EExternal libraries will most certainly bring along some problems though.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-28T23:14:42Z\u0022 title=\u002208/28/2014 11:14  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 28, 2014\u003C/time\u003E by keks\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-28T23:19:24Z","Content":"\n\u003Cp\u003EKeywords are \u0022kind of\u0022 I tried to play on Linux once and it was awful \u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/bgyzD7Rs.jpg\u0022 alt=\u0022bgyzD7Rs.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EBut I think We can manage to do it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"keks","CreatedById":114085,"CreatedDateTime":"2014-08-28T23:23:00Z","Content":"\n\u003Cp\u003EI\u0027m actually running KSP on Linux perfectly fine. It\u0027s only some mods that are \u0022Windows only\u0022, but they usually mention that on their forum posts.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E(The .23.5 x86_64 build was a huge mess though, always running into memory issues and segfaults...)\u003C/em\u003E\u003C/p\u003E\n"},{"CreatedByName":"TeddyDD","CreatedById":28806,"CreatedDateTime":"2014-08-28T23:36:19Z","Content":"\n\u003Cp\u003EThat \u0022once\u0022 was on 0.23.5 I have got nvidia optimus card what also makes trouble (ksp doesn\u0027t like optirun)\u003C/p\u003E\u003Cp\u003EAlso I use a lot of mods. Actually, that\u0027s why I became interested in this topic \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-08-30T19:43:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TeddyDD\u0022 data-cite=\u0022TeddyDD\u0022\u003E\u003Cdiv\u003EOf course Python program usually has slightly worse performance. But developers time is more valuable than computer time.\u003Cp\u003EPython is a good language, and if this way would work I see no reason to rewrite everything in C#\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot agree, \u0022worse\u0022 compared to what ? assembly (the one no one use anymore, almost).\u003C/p\u003E\u003Cp\u003EPython is quite fast in fact and it is pre-compiled/use a bytecode interpreter (as Perl for example) which can be more than enough, especially for a tool which doesn\u0027t care about speed.\u003C/p\u003E\u003Cp\u003EAlso, it is use for Asseto Corsa plug-in, just to say, and Kerbal Stuff too.\u003C/p\u003E\u003Cp\u003EI may be interested to join \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003C/p\u003E\u003Cp\u003E@keks: are you sure about what you sad about python (horrible with GUI, not multithreaded, ...) ?\u003C/p\u003E\u003Cp\u003EDo you know which language is used for Blender ? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-30T19:59:54Z\u0022 title=\u002208/30/2014 07:59  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 30, 2014\u003C/time\u003E by Justin Kerbice\u003C/strong\u003E\n\u003C/span\u003E\n"}]}