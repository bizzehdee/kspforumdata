{"TopicId":214194,"ForumId":29,"TopicTitle":"Suggestion for a little module plugin (ModuleMultiLight)","CreatedByName":"Jiraiyah","CreatedById":97667,"CreatedDateTime":"2023-03-02T13:28:50Z","PageNum":1,"Articles":[{"CreatedByName":"Jiraiyah","CreatedById":97667,"CreatedDateTime":"2023-03-02T13:28:50Z","Content":"\n\u003Cp\u003E\nHi\n\u003C/p\u003E\n\u003Cp\u003E\nI am sure you are aware that the stock ModuleLight accepts only a single object with light component on it. How ever, we see many mods with multiple light objects on a single part. In many cases, there is a need for many lights being turned on/off/blink simultaneously suing a single button in \u003Cabbr title=\u0022Part Action Window\u0022\u003E\u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nI am not familiar with plugin development for ksp at all, but, went on and looked into the code for module light..... On the Start method, We have \u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003Ethis.lights = new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Light\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E((IEnumerable\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Light\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E)this.part.FindModelComponents\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Light\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(this.lightName));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan\u003EAs you see here, the module obviously has a list for lights, this is nice how ever, it only looks into a single model name, and tries to capture as many light components it has!\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nChanging this behavior shouldn\u0027t be that hard, you just need to observe a list of objects from part file separated with comma, loop through them, and look for the light components on each one of them and add it to list, how ever, if there was only one object named, not only you would capture the light on the object, but also should loop through it\u0027s children and see if there are any lights there and capture them as well. Up until this point, I could sit down and write the code in 5 minutes my self how ever... few lines bellow that... we have this \u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003Elight.color = this.lightColor;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is happening inside a loop that is looping through the above generated list. I thought to myself, ok,... let\u0027s inherit the class for ModuleLight, Override the OnStart, call the base first, regenerate the list and duplicate the loop (there is no other section on the OnStart that works with this list other than this loop). Problem is....\u00A0this.lightColor on the ModuleLight, is a private field ! I am not that familiar with Reflection but I think we would need an instance of the object in memory to be able using reflection and get the private filed value?!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSO, long story short, I hit a wall that passing it is beyond my knowledge of C#. How ever, I think, this module should not be that complicated to write. The end goal is clear, in part file, where we had \u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003EMODULE\n\t{\n\t\tname = ModuleLight\n\t\tlightName = OBJECT_NAME\n\t\tuseAnimationDim = True\n\t\t\tanimationName = ANIMATION_NAME\n\t\t\tlightBrightenSpeed = 2.5\n\t\t\tlightDimSpeed = 2.5\n\t\tdisableColorPicker = False\n\t\t\ttoggleInEditor = True\n\t\t\ttoggleInFlight = True\n\t\tcanBlink = True\n\t\t\tblinkMin = 0.2\n\t\t\tblinkMax = 2.0\n\t\t\tblinkRate = 0.5\n\t\t\tisBlinking = False\n\t\tuseResources = True\n\t\t\tresourceName = ElectricCharge\n\t\t\tresourceAmount = 0.003\n\t}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWe should have something like this \u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003EMODULE\n\t{\n\t\tname = ModuleMultiLight\n\t\tlightName = OBJECT_NAME1,OBJECT_NAME2,OBJECT_NAME3,....\n\t\tuseAnimationDim = True\n\t\t\tanimationName = ANIMATION_NAME\n\t\t\tlightBrightenSpeed = 2.5\n\t\t\tlightDimSpeed = 2.5\n\t\tdisableColorPicker = False\n\t\t\ttoggleInEditor = True\n\t\t\ttoggleInFlight = True\n\t\tcanBlink = True\n\t\t\tblinkMin = 0.2\n\t\t\tblinkMax = 2.0\n\t\t\tblinkRate = 0.5\n\t\t\tisBlinking = False\n\t\tuseResources = True\n\t\t\tresourceName = ElectricCharge\n\t\t\tresourceAmount = 0.003\n\t}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nand if we have only one name, then we would look for the children of that object. If we had many names like the code above, then no need to look for children. After that, if we properly generated the mentioned list, we should be able to handle ALL those lights with one on/off or blink button in \u003Cabbr title=\u0022Part Action Window\u0022\u003E\u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E\u003C/abbr\u003E?!\n\u003C/p\u003E\n\u003Cp\u003E\nOne extra feature that would be nice is the ability to change the light intensity from part file module parameter. This should affect all the lights in the list at the same time and set all of them to a single value.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, please, I beg someone with enough knowledge on coding for KSP to do this little module plugin.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-03-02T13:32:02Z\u0022 title=\u002203/02/2023 01:32  PM\u0022 data-short=\u00221 yr\u0022\u003EMarch 2, 2023\u003C/time\u003E by Jiraiyah\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Jiraiyah","CreatedById":97667,"CreatedDateTime":"2023-03-02T14:25:02Z","Content":"\n\u003Cp\u003E\nI put together some code, didn\u0027t compile it, and didn\u0027t test if it\u0027s working or not, I just did it to give you guys a rough idea of what I\u0027m looking for and a possible starting point \u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECollections\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGeneric\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleMultiLight\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleLight\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EKSPField\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003Efloat\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lightIntensity \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E60\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EOnStart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPartModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStartState\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E state\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        base\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EOnStart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        lights \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ELight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E temp \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lightName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EReplace\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ESplit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027,\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Evar name in temp\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elights\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAddRange\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFindModelComponents\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ELight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Evar light in lights\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            light\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eintensity \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E lightIntensity\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            brightnessLevels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAdd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ElightIntensity\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Not sure if the reflection bellow will work or not!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            light\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecolor \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EColor\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etypeof\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EModuleLight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetField\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022lightColor\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGetValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nIf this code works, I had covered the multiple names, how ever, I was a little confused on how to look for children case. If this was pure unity game development, I would know what to do, how ever, this is an API for KSP and I am not familiar with this API at all.\n\u003C/p\u003E\n\u003Cp\u003E\nIf someone is familiar with this, please take a look at this piece of code and if possible, add the ability to look for children of objects and find lights to add to list, and, please confirm if the reflection code is correct or not!\n\u003C/p\u003E\n\u003Cp\u003E\nthanks\n\u003C/p\u003E\n"},{"CreatedByName":"Jiraiyah","CreatedById":97667,"CreatedDateTime":"2023-03-02T17:14:23Z","Content":"\n\u003Cp\u003E\nok, one little thing, when I was talking about light intensity, I was thinking about intensity AND light range being tweakable from module code in part file, I just wrote the intensity, because I didn\u0027t know if light range was available or not and didn\u0027t have enough time to dig into the code. Any one has any idea about the whole code and possible solution for multiple children under a single parent?\n\u003C/p\u003E\n"},{"CreatedByName":"Jiraiyah","CreatedById":97667,"CreatedDateTime":"2023-03-02T18:46:54Z","Content":"\n\u003Cp\u003E\nHm, tested the code and it works, published the mod\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u002297667\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed1607485319\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/214228-module-multi-light/\u0026amp;do=embed\u0022 style=\u0022height:198px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\nBut there is no child search functionality, just the simple code above being compiled, tested and published. If anyone can add the code for searching the children and adding them to the list, I would like pull requests.\n\u003C/p\u003E\n"},{"CreatedByName":"zer0Kerbal","CreatedById":190933,"CreatedDateTime":"2023-03-07T04:16:10Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/97667-jiraiyah/\u0026amp;do=hovercard\u0022 data-mentionid=\u002297667\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/97667-jiraiyah/\u0022 rel=\u0022\u0022\u003E@Jiraiyah\u003C/a\u003E\u003Cspan style=\u0022font-family:Verdana, Geneva, sans-serif;\u0022\u003Eexcellent!\u003C/span\u003E\n\u003C/p\u003E\n"}]}