{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":93,"Articles":[{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-12-30T20:49:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EThat would explain a lot. Does that mean there currently is no way of getting sensor data? That throws a spanner in my ascent script work \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EI tried getting it via the rightclick menu method, but that yields exactly the same result - and I guess that is the cause of the problem in the first place.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe root issue is that the value that the ModuleEnviroSensor uses is a string. I guess we would have to teach kerboscript how to coerce types \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI\u0027m not fond of the idea either. I\u0027m just thinking of ways to solve the \u0022detect that no manual control happened\u0022 condition for a contract, without penalizing you for accidentally tapping a key.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI had the idea of a flag you could set on the craft that was \u0022lock controls\u0022 to disable direct input from the user. that would be easy enough to build and watch to insure the user had no control?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-30T21:03:34Z","Content":"\n\u003Cp\u003EYeah it\u0027s really really annoying, because the ability exists for it to have been implemented to split out the string display from the actual number under the hood (i.e. a thermometer saying \u0022120C\u0022 would have the number 120, with the field\u0027s unit label set to \u0022C\u0022). I know this because I did that for LaserDist - when it says something like \u00221,200,102m\u0022 in the display, the number is actually just an integer 1200102, and the conversion of that into a display string happens in a side routine. But sadly, it looks like the ModuleEnviroSensor was never implemented that way.\u003C/p\u003E\u003Cp\u003EThe ugly thing is that it\u0027s not JUST a matter of parsing the string to an int. We also have to know about units because the same sensor could switch units (i..e it would have to be smart enough to know that 4.5km is a bigger number than 50m despite the fact that 4.5 \u0026lt; 50).\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-12-30T21:30:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EThe root issue is that the value that the ModuleEnviroSensor uses is a string.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI feared as much. A matter of a simple problem needing a complex solution, so it seems.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI had the idea of a flag you could set on the craft that was \u0022lock controls\u0022 to disable direct input from the user. that would be easy enough to build and watch to insure the user had no control?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI envisioned something like a slider in either the kOS menu or the console - I prefer the menu. \u003Cem\u003ESlide to unlock\u003C/em\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EOh, speaking of the menu - I am still having issues with it not showing, even in a fresh installation. KSP just says \u003Cem\u003ENo target\u003C/em\u003E and never or rarely shows the actual menu. If I have a spare hour I will try to make a short video that shows the behaviour.\u003C/p\u003E\n"},{"CreatedByName":"undercoveryankee","CreatedById":103505,"CreatedDateTime":"2014-12-30T21:37:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cem\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003ELet\u0027s brainstorm. Contract Ideas from YOU\u003C/span\u003E\u003C/span\u003E\u003C/strong\u003E\u003C/em\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#800080;\u0022\u003E\u003Cem\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EIf we added kOS contracts to the game for career mode, what contract conditions would be good?\u003C/span\u003E\u003C/em\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d prefer \u0022do something that kOS is the obvious way to do\u0022 over \u0022do something with manual controls locked out\u0022 as much as possible. None of the stock contracts really care what approach you take if you get the specified payload to the specified place.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-30T22:07:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022undercoveryankee\u0022 data-cite=\u0022undercoveryankee\u0022\u003E\u003Cdiv\u003EI\u0027d prefer \u0022do something that kOS is the obvious way to do\u0022 over \u0022do something with manual controls locked out\u0022 as much as possible. None of the stock contracts really care what approach you take if you get the specified payload to the specified place.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI waffle back and forth on this one. On the one hand I like that approach, but on the other hand there\u0027s a lot of stock contracts that by all rights SHOULD be the sort that would need computer control and the only reason you can accomplish them manually is because the KSP simulation doesn\u0027t track signal delay. By all rights \u0022try to land an unmanned probe on Duna\u0022 should be just like \u0022try to maintain altitude within 5m error\u0022 - without explicitly saying it, it would be nearly impossible without a computer to help. But maybe that\u0027s more in remotetech\u0027s baliwick rather than ours.\u003C/p\u003E\u003Cp\u003EBut I think where the most \u0027help\u0027 is needed in the contracts is really for the low-level building blocks that go into making the autopilot software - the early stuff. What I\u0027d like to see is to allow you to, say, practice your landing software on Kerbin with a small test craft, with a chance of getting some of that money back that you spent on launching a test vehicle and trying it again and again until it worked. For things like that, it\u0027s almost mandatory that there be a test for \u0022make sure you\u0027re not doing it manually\u0022 - because otherwise they\u0027re trivially easy to do.\u003C/p\u003E\u003Cp\u003EThis is why I put it out for public comment. I\u0027m really indecisive about it. I can see the arguments both ways.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI envisioned something like a slider in either the kOS menu or the console - I prefer the menu. \u003Cem\u003ESlide to unlock\u003C/em\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe controls are fed to the vessel as a whole, not just to one of its parts. So we\u0027d need a rule for what it means for one SCS part on a vessel set to lock and the other set to unlock.\u003C/p\u003E\n"},{"CreatedByName":"undercoveryankee","CreatedById":103505,"CreatedDateTime":"2014-12-30T22:30:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI waffle back and forth on this one. On the one hand I like that approach, but on the other hand there\u0027s a lot of stock contracts that by all rights SHOULD be the sort that would need computer control and the only reason you can accomplish them manually is because the KSP simulation doesn\u0027t track signal delay. By all rights \u0022try to land an unmanned probe on Duna\u0022 should be just like \u0022try to maintain altitude within 5m error\u0022 - without explicitly saying it, it would be nearly impossible without a computer to help. But maybe that\u0027s more in remotetech\u0027s baliwick rather than ours.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d love to see probe-landing contracts that appeared only if\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003ERemoteTech is present,\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERemoteTech signal delay is enabled, and\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EkOS is available.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd it would need a check that the lander doesn\u0027t have a MechJeb module on it as configured for landing.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EBut I think where the most \u0027help\u0027 is needed in the contracts is really for the low-level building blocks that go into making the autopilot software - the early stuff. What I\u0027d like to see is to allow you to, say, practice your landing software on Kerbin with a small test craft, with a chance of getting some of that money back that you spent on launching a test vehicle and trying it again and again until it worked. For things like that, it\u0027s almost mandatory that there be a test for \u0022make sure you\u0027re not doing it manually\u0022 - because otherwise they\u0027re trivially easy to do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EContracts where part of the reward is the reward, and the other part is a library of scripts you\u0027ll be able to draw on for future missions. That could be a great teaching tool for doing things with kOS.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe controls are fed to the vessel as a whole, not just to one of its parts. So we\u0027d need a rule for what it means for one SCS part on a vessel set to lock and the other set to unlock.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d lean toward \u0022when you change the state on one SCS part, look for any others on the vessel and automatically change them to match.\u0022 You might still find a way for a conflict to exist for a frame at a time, but the conflict resolution rule doesn\u0027t have to be as user-visible. What happens if two SCSes try to \u0022LOCK STEERING\u0022 to different directions at the same time?\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-12-30T22:31:56Z","Content":"\n\u003Cp\u003EHere\u0027s a thought (that might require some experimentation): Create kOS probes that have no tech requirements. Have contracts be to test them. If there\u0027s no tech requirements, they never get unlocked for career game use, but you should still be able to force them into availability for the contract. \u0022Test our highly experimental Self-Piloting, Autonomous, Zaftig Zan (SPAZZ) by programming and executing a mission from the KSC to ______ with the following conditions: ...\u0022 Bonus points if you can \u0022break\u0022 the probe part modules to prevent communications/control of the core. Also, max crew size of 0.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-12-31T06:07:23Z","Content":"\n\u003Cp\u003EHave you guys thought about talking to TeacherGaming about kOS to go with KerbalEDU?\u003C/p\u003E\n"},{"CreatedByName":"kcs123","CreatedById":127158,"CreatedDateTime":"2014-12-31T09:33:32Z","Content":"\n\u003Cp\u003E- making kOS integrated within each command module could solve several problems with detection if some craft is debris or valid plane/rocket - similar how Dennis6492 have embedded MechJeb2 in each command module. You will no longer need separate part just for functional kOS, saving some memory for other mods too. Whoever use kOS mod will most probably want it on each craft, like I still depend a lot on MJ (using it mostly for maneuver node creation, MJ don\u0027t like FAR much \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E), so having it automaticaly embedded in each command module makes craft design less tedious when you need to save kOS part from aerodynamic forces or high temperatures on deadly reentry.\u003C/p\u003E\u003Cp\u003EHere is how module manager config for embedding MJ looks like, maybe you can use similar way for kOS. Advantage is that it doesn\u0027t change any parts, so any craft is still functional if you remove kOS from your game, except that kOS script will no longer be available and whenever kOS is updated, it will be updated for each craft in game. Dennis have also included locking/unlocking MJ modules as player have unlocked science technology, don\u0027t know if that is needed for kOS\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]:Final\u003Cbr\u003E{    \u003Cbr\u003E    MODULE\u003Cbr\u003E\t{\u003Cbr\u003E\tname = MechJebCore\u003Cbr\u003E\t\tMechJebLocalSettings \u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tMechJebModuleCustomWindowEditor { unlockTechs = flightControl }\u003Cbr\u003E\t\t\tMechJebModuleSmartASS { unlockTechs = flightControl }\u003Cbr\u003E\t\t\tMechJebModuleManeuverPlanner { unlockTechs = advFlightControl }\u003Cbr\u003E\t\t\tMechJebModuleNodeEditor { unlockTechs = advFlightControl }\u003Cbr\u003E\t\t\tMechJebModuleTranslatron { unlockTechs = advFlightControl }\u003Cbr\u003E\t\t\tMechJebModuleWarpHelper { unlockTechs = advFlightControl }\u003Cbr\u003E\t\t\tMechJebModuleAttitudeAdjustment { unlockTechs = advFlightControl }\u003Cbr\u003E\t\t\tMechJebModuleThrustWindow { unlockTechs = advFlightControl }\u003Cbr\u003E\t\t\tMechJebModuleRCSBalancerWindow { unlockTechs = advFlightControl }\u003Cbr\u003E\t\t\tMechJebModuleRoverWindow { unlockTechs = fieldScience }\u003Cbr\u003E\t\t\tMechJebModuleAscentGuidance { unlockTechs = unmannedTech }\u003Cbr\u003E\t\t\tMechJebModuleLandingGuidance { unlockTechs = unmannedTech }\u003Cbr\u003E\t\t\tMechJebModuleSpaceplaneGuidance { unlockTechs = unmannedTech }\u003Cbr\u003E\t\t\tMechJebModuleDockingGuidance { unlockTechs = advUnmanned }\u003Cbr\u003E\t\t\tMechJebModuleRendezvousAutopilotWindow { unlockTechs = advUnmanned }\u003Cbr\u003E\t\t\tMechJebModuleRendezvousGuidance { unlockTechs = advUnmanned }\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E- that solves one part of problem, to solve unwanted control input, kOS shuld have command like \u0022LockPilotInput/UnlockPilotInput\u0022. Contract could be considered as fullfilled only if lock pilot controls is not toggled until all contract condition is accomplished.\u003C/p\u003E\u003Cp\u003E- As Cpt.Kipard mentioned, it will be good to talk with people working on KerbalEDU. Beginners contracts should be in a manner to teach new players how to write simple programs. Once some simple contracts are fullfiled, it should not be longer available on contract board, just like reach 10 km altidute contract is no longer available once you go above that limit. That will solve abusing simple contracts for grinding more and more money.\u003C/p\u003E\u003Cp\u003EMost of kOS users already have some basic knowlage in programing and found kOS as valuable mod, for beginners contracts should have some simple tasks that will be doors in secrets of programing. Advanced users could find this kind of contracts tedious, but for them could be another featured contracts that will teach them on kOS specific commands/syntax - how to reach certain craft values, what is available to read, what can be modified and what not, etc.\u003C/p\u003E\u003Cp\u003EThere could be contract that offers complete scripts, but with errors in it, so player have to find errors, correct them and build suitable craft that will make that kOS script usable.\u003C/p\u003E\u003Cp\u003ESo, to some degreee, contracts could be used as going trough kOS documentation, but not trough reading those, but rather to find it inside game. More fun to learn stuff from playing.\u003C/p\u003E\u003Cp\u003EHope that this helps in decisions.\u003C/p\u003E\n"},{"CreatedByName":"amiavamp","CreatedById":116015,"CreatedDateTime":"2014-12-31T12:52:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Xgkkp\u0022 data-cite=\u0022Xgkkp\u0022\u003E\u003Cdiv\u003EAs a caveat to my answers, I haven\u0027t written my rendezvous script yet (having only just started playing with kOS in the past few days), but have been delving into the maths for my arbitrary-plane-orbit matching script (to fulfill the \u0027place x satellite\u0027 contracts).\u003Cp\u003EI assume you are talking about total deltaV, because the deltaV needed at the node at the start of the burn is the difference between the initial velocity at the burn position, and the velocity of the transfer orbit at the burn position.\u003C/p\u003E\u003Cp\u003E1. As with an awful lot of the maths involved, the answer is \u0022It doesn\u0027t have to be a circular orbit, but it makes things much much simpler\u0022\u003C/p\u003E\u003Cp\u003E2. You can get the true anomaly from the orbital parameters, and translate between the two orbits (a lot easier if you match planes first).\u003C/p\u003E\u003Cp\u003E3. This sounds right - for a circular orbit, where the SMajorA == r. I\u0027d assume it\u0027s possible for eccentrics, but you are no longer orbiting at the central point so it might be harder. Since you need the initial and final radii to calculate the velocities anyway, probably just easier (and less error prone) to use a_xf = (r_i\u002Br_f)/2 (remembering to account for body radius).\u003C/p\u003E\u003Cp\u003E4. As you have probably seen a reference to before - \u003Ca href=\u0022http://www.braeunig.us/space/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.braeunig.us/space/\u003C/a\u003E is a useful resource for this sort of thing, particularly \u003Ca href=\u0022http://www.braeunig.us/space/orbmech.htm\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.braeunig.us/space/orbmech.htm\u003C/a\u003E (frustratingly spare on certain details, but certainly the best repository I have come across online thus far). Equations 4.43-4.45 are probably what you are looking for here, but again - with a circular orbit it is much simpler - the velocity and altitude are constant across the entire orbit. It might be worth getting the script working in the simplest case (circular) first, then elaborating it.\u003C/p\u003E\u003Cp\u003E5. You only need to use iterative et al methods to go from mean -\u0026gt; eccentric anomaly, which you don\u0027t need to do because you have the true anomaly available. The above reference only gives the cosine part, which isn\u0027t enough to get a full value (arccos only gives the result in one quadrant). Following \u003Ca href=\u0022https://en.wikipedia.org/wiki/Eccentric_anomaly#From_the_true_anomaly\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://en.wikipedia.org/wiki/Eccentric_anomaly#From_the_true_anomaly\u003C/a\u003E, you can get the eccentric anomaly E from E = ARCTAN2(SIN(E),COS(E))\u003C/p\u003E\u003Cp\u003E6. Don\u0027t completely understand the question, but if you have a maneuver node set up you can pull it\u0027s vector from kOS? Or, the blue handles that hang off the node? They are radial burns, so 90 degrees to prograde, in the plane of the orbit.\u003C/p\u003E\u003Cp\u003E7. Hey, if you didn\u0027t want to really follow \u003Ca href=\u0022http://xkcd.com/1356/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://xkcd.com/1356/\u003C/a\u003E, then you would have just installed mechjeb and been done with it!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe difficulty is that I don\u0027t have access to parameters such as true anomaly at the start and end locations of the transfer - although, I believe the true/mean/eccentric anomalies at the end point would be 180 degrees since it is an apoapsis. The only parameters that I have to start with are the apoapsis and periapsis of my orbit and that of my target. Everything else must be calculated from this. Many of the equations that I\u0027ve seen require knowing either the velocity or radius at a given point, but those are the values that I am searching for. A lot of textbook questions that I\u0027ve seen seem to assume that the orbits in a coplanar transfer are circular, or that the person doing the transfer knows what their start and end altitudes are before beginning.\u003C/p\u003E\u003Cp\u003EI\u0027ve now finally gotten to the point where the hohmann transfer itself is calculated to correctly have its apoapsis tangent to the target\u0027s orbit even at a long distance, at least for circular orbits. However, now the issue is that I can\u0027t get it to actually intercept the target. It seems that the script doesn\u0027t properly compensate for the fact that the target is orbiting at a different speed than myself. When the time to burn is calculated to be negative, my orbital period is added to make it wait another orbit. However, the target is not at the same location when I complete an orbit. I\u0027m really not sure how to tackle this issue. Kerbal Engineer Redux seems to be able to calculate the total phase angle to the target including the number of orbits needed with 360 degrees as the denominator even though 1 degree on this readout is less than 1 degree on the interceptor\u0027s orbit.\u003C/p\u003E\u003Cp\u003EEDIT: Scratch that, I have fixed the issue of waiting for the correct time. The calculations are still woefully inaccurate, though. The intercept is typically about 80\u002B km off if the orbits aren\u0027t very close together. I\u0027m about to scrap this idea if I can\u0027t get any closer.\u003C/p\u003E\u003Cp\u003EI have a few more questions to anyone willing to answer:\u003C/p\u003E\u003Cp\u003ECan kOS read the \u0022target\u0022 velocity information as it appears above the navball when clicking the velocity indicator there? If not, how would I go about creating a script that zeroes one\u0027s velocity relative to another vessel?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-31T14:04:46Z\u0022 title=\u002212/31/2014 02:04  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 31, 2014\u003C/time\u003E by amiavamp\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VentZer0","CreatedById":130750,"CreatedDateTime":"2014-12-31T14:05:03Z","Content":"\n\u003Cp\u003EIs there a ETA for the update release? I really need the ship:facing:starboard stuff *_*\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-12-31T14:27:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VentZer0\u0022 data-cite=\u0022VentZer0\u0022\u003E\u003Cdiv\u003EIs there a ETA for the update release? I really need the ship:facing:starboard stuff *_*\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo you mean the things in the video Steven posted? Those are available already \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68096-kOS-Autopilot?p=1602904\u0026amp;viewfull=1#post1602904\u0022 rel=\u0022external nofollow\u0022\u003Ein the beta release\u003C/a\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-31T15:36:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022amiavamp\u0022 data-cite=\u0022amiavamp\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ECan kOS read the \u0022target\u0022 velocity information as it appears above the navball when clicking the velocity indicator there? If not, how would I go about creating a script that zeroes one\u0027s velocity relative to another vessel?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI thought about it but deliberately left it out because it\u0027s JUST a vector subtraction, and it\u0027s a better teaching tool to make people understand how to do vector subtraction and how useful it is for translation to new \u0022origins\u0022.\u003C/p\u003E\u003Cp\u003EAll you have to do is subtract myship:velocity:orbit from othership:velocity:orbit to get the relative velocity vector between the two.\u003C/p\u003E\u003Cp\u003EI can\u0027t speak for erendrake here but I\u0027m reluctant to add something like a target:relvelocity just because I see the ability to make TARGET have special abilities that other ships don\u0027t get to have as really being in the realm of manual piloting to help give visual aids to the pilot. To the autopilot, why give TARGET any special abilities that the other VESSEL(\u0022some name\u0022)\u0027s don\u0027t get to have too? Just make it part of the generic interface you can use on ANY vessel. There may be a use for VESSEL:RELVELFROM(otherVessel), but that would *really* just be subtracting one vessel\u0027s velocity from the other.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EHave you guys thought about talking to TeacherGaming about kOS to go with KerbalEDU?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile it would really be cool... at the same time I don\u0027t know if kerboscript is a good enough language for that purpose. Maybe it could become such, but at the moment the fact that you can\u0027t even write a callable function sort of limits how much it can be used to teach children about good programming practices.\u003C/p\u003E\n"},{"CreatedByName":"VentZer0","CreatedById":130750,"CreatedDateTime":"2014-12-31T16:17:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EDo you mean the things in the video Steven posted? Those are available already \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68096-kOS-Autopilot?p=1602904\u0026amp;viewfull=1#post1602904\u0022 rel=\u0022external nofollow\u0022\u003Ein the beta release\u003C/a\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eoh YESSSSSSSSSSSSSSSSS *_*\u003C/p\u003E\u003Cp\u003Ebtw is there progress on local variables?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-31T16:21:03Z\u0022 title=\u002212/31/2014 04:21  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 31, 2014\u003C/time\u003E by VentZer0\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-12-31T16:24:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWhile it would really be cool... at the same time I don\u0027t know if kerboscript is a good enough language for that purpose. Maybe it could become such, but at the moment the fact that you can\u0027t even write a callable function sort of limits how much it can be used to teach children about good programming practices.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would not undersell what you already have \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Though I do agree that some of the peculiarities might be troublesome for newcomers, it certainly is a very powerful learning tool. Programming often is somewhat dry if you are just getting started, but combining it with an environment like KSP can make it very exciting indeed.\u003C/p\u003E\u003Cp\u003EI locked myself inside for an entire summer just to program broken versions of Block Breaker and Pong in Qbasic. If I would have had something like this, who knows how long I would have gone without seeing the sun \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-12-31T17:19:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI would not undersell what you already have \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Though I do agree that some of the peculiarities might be troublesome for newcomers, it certainly is a very powerful learning tool. Programming often is somewhat dry if you are just getting started, but combining it with an environment like KSP can make it very exciting indeed.\u003Cp\u003EI locked myself inside for an entire summer just to program broken versions of Block Breaker and Pong in Qbasic. If I would have had something like this, who knows how long I would have gone without seeing the sun \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree, while it is not a perfect language it could be useful for teaching many programming basics. If teaching proper programming was a goal, ruby wouldn\u0027t be so common in education. /flameon \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-12-31T20:04:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VentZer0\u0022 data-cite=\u0022VentZer0\u0022\u003E\u003Cdiv\u003Eoh YESSSSSSSSSSSSSSSSS *_*\u003Cp\u003Ebtw is there progress on local variables?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELocal to what? I\u0027ve thought that local variables sort of need function calls first.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI agree, while it is not a perfect language it could be useful for teaching many programming basics. If teaching proper programming was a goal, ruby wouldn\u0027t be so common in education. /flameon \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, that\u0027s a good point. I remember when college courses were taught in mostly Pascal (that will date me). And that was a terrible language. The problem is that while Pascal made it hard to write bad code, it ALSO made it hard to write good code. The exact reasons why are off topic here. (This is where I just deleted two paragraphs of verbose crud here before posting.)\u003C/p\u003E\u003Cp\u003EIt might be worth thinking about, that\u0027s true. One thing that KerbalEDU would make me do is change my thinking about what the nextmost important topic for me to work on would be.\u003C/p\u003E\u003Cp\u003EUp until now I\u0027ve thought that once 0.90 is fully squared away the next enhancement to kOS I should devote time to should be the remotable terminal, which also brings with it keyboard input/output (they\u0027re sort of tied together into the same code).\u003C/p\u003E\u003Cp\u003EBut if kerboscript were to become an educational tool, then maybe proper function calls really should come next.\u003C/p\u003E\u003Cp\u003EBut yeah, the more I think about it, one of the big problems with trying to teach kids to program is how early textbook examples are all doing something really really boring to a kid. No kid gives a darn about averaging numbers, or finding the areas of circles, or balancing a checkbook. But I started learning on my dad\u0027s Commodore 64 in the basement in the 1980\u0027s (again, dating myself here) and one of the first major things I made was a BASIC program to do a little Zork-like text adventure. Granted it wasn\u0027t a very good text adventure, but it caused me to learn some programming design patterns that I didn\u0027t even realize HAD already been well described and had been given names (i.e. I first made the rooms map as a giant 2D array where most of the locations were dummy (i.e. to go north from room(4,5) you end up at room(4,4), decrementing the second index of the array). But this was really inefficient and ate up all the memory fast as I grew the adventure and made the map bigger and bigger. Most elements of the array were dummies representing \u0022there is no room here\u0022 (this was in early basic, where you really can\u0027t have null placeholders). So I reworked it into a set of parallel 1-D arrays, one called \u0022N\u0022, one called \u0022E\u0022, one called \u0022S\u0022 and so on. If S(4)=7 what that means is going south from room 4 will land you in room 7. E(5)=-1 meant that you can\u0027t go east from room 5. I had no idea that what I\u0027d just done was actually a design pattern that had a name and was called \u0022implementing the edges of an N-way graph packed inside parallel arrays.\u0022 I also didn\u0027t know that implementing an array of structures, in a language that doesn\u0027t really have structures, by instead making a lot of parallel arrays each to hold one of the fields of the \u0022structure\u0022 is also what I was doing, and was a known technique. I\u0027d never heard of \u0027nodes and edges\u0027 and I\u0027d never heard of a \u0027struct\u0027. My 12 year old brain was just trying to make the game work and it looked like a way that might work, and I had naively thought I\u0027d just come up with something brand new all on my own.\u003C/p\u003E\u003Cp\u003EAs I think back on that.... I am starting to think that it could be pretty cool for a grade school to be teaching some basic programming by having the kids do something FUN with it like fly a Kerbal Space rocket.\u003C/p\u003E\u003Cp\u003E\u0022Tricking\u0022 a kid into learning while doing something fun is a great idea, and yeah, having kids play around with a problem for a while trying to find their own solution before you hand them one makes it stick a LOT better. You\u0027ll remember the teaching better if it was dealing with an area you were just trying to think your way through on your own. Then you better understand why the solution is doing what it\u0027s doing.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-31T20:29:05Z\u0022 title=\u002212/31/2014 08:29  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 31, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"VentZer0","CreatedById":130750,"CreatedDateTime":"2015-01-01T03:08:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003ELocal to what? I\u0027ve thought that local variables sort of need function calls first.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELocal to the vessel, I had to crafts using the same programm, executed an volume 1 from each craft and their behavior at points were VERY weird\u003C/p\u003E\u003Cp\u003EYou answered my next question already, there is no way I can have 2 scripts running on the same craft at the same time, right?\u003C/p\u003E\u003Cp\u003EOr what happens if I have a \u0027run xyz.\u0027 in my program that executes a special portion of code and then what happens when it ends, does it continue with the program it was called from ?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-01T04:05:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VentZer0\u0022 data-cite=\u0022VentZer0\u0022\u003E\u003Cdiv\u003ELocal to the vessel, I had to crafts using the same programm, executed an volume 1 from each craft and their behavior at points were VERY weird\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EVariables already should be local to the vessel. If you found a case where a script running on one vessel causes a change to a variable on a different vessel, then that\u0027s a really major bug. The only exception to this is the CONFIG: variables, which are written out to kOS/Plugins/PluginData/kOS/config.xml and affect the entire plugin. Every OTHER variable should only exist on the one vessel that\u0027s running it (more so, it should only exist on the one SCS part that\u0027s running it. Two kOS computers on the same vessel should have their own distinct set of variables from each other).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EYou answered my next question already, there is no way I can have 2 scripts running on the same craft at the same time, right?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou could if you put two SCS parts on the same vessel. I have not yet tried to see what happens if you try to put both of them in control of their shared vessel, and give them opposing commands (like having one LOCK STEERING TO PROGRADE while the other one does a LOCK STEERING TO RETROGRADE.) I have no idea what that would do. I never tried it. I\u0027m thinking most likely both would try to tell KSP how to set the ship controls, and KSP would end up obeying whichever set of controls it was told about last, effectively ignoring whatever the first one said to do.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOr what happens if I have a \u0027run xyz.\u0027 in my program that executes a special portion of code and then what happens when it ends, does it continue with the program it was called from ?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOne program can call another program (you can use the RUN command from inside a program). And that\u0027s a LITTLE bit like having function calls...uh.. sort of. All variables OTHER than the parameters passed to the RUN command are global, though, which is the thing I thought you were talking about.\u003C/p\u003E\n"},{"CreatedByName":"Entropius","CreatedById":104709,"CreatedDateTime":"2015-01-01T08:40:41Z","Content":"\n\u003Cp\u003EI\u0027m attempting to setup all my mods for KSP 0.90. And in the process, I\u0027ve noticed a glitch that I think might be due to kOS (0.15.4) but I\u0027m not totally certain.\u003C/p\u003E\u003Cp\u003EI load or quickload a vessel in orbit, and (sometimes) the ship seems to split in 2. A look at the log says there\u0027s a structural failure between \u0022CX-4181 Scriptable Control System\u0022 and some other part (sometimes a solar panel, sometimes a fuel tank). The ESC menu to go back to the KSC can appear, but often fails to actually do anything when buttons are clicked. And the log seems to have a lot of NullReferenceException spam at some point. \u003C/p\u003E\u003Cp\u003ESince the kOS Scriptable Control system seems to be the constant in the structural failures that preceded all this, I\u0027m guessing kOS was the cause. Further fueling my suspicion that it\u0027s kOS was the fact that when I removed any kOS parts from the craft, I didn\u0027t have a single incident. I\u0027m curious if anybody can prove or disprove it though. Logs are available here: \u003Ca href=\u0022https://www.dropbox.com/sh/jlyvawfapoglucz/AACv8Sk52qi1gZmYDqqA7NBKa?dl=0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.dropbox.com/sh/jlyvawfapoglucz/AACv8Sk52qi1gZmYDqqA7NBKa?dl=0\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-01T15:36:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Entropius\u0022 data-cite=\u0022Entropius\u0022\u003E\u003Cdiv\u003EI\u0027m attempting to setup all my mods for KSP 0.90. And in the process, I\u0027ve noticed a glitch that I think might be due to kOS (0.15.4) but I\u0027m not totally certain.\u003Cp\u003EI load or quickload a vessel in orbit, and (sometimes) the ship seems to split in 2. A look at the log says there\u0027s a structural failure between \u0022CX-4181 Scriptable Control System\u0022 and some other part (sometimes a solar panel, sometimes a fuel tank). The ESC menu to go back to the KSC can appear, but often fails to actually do anything when buttons are clicked. And the log seems to have a lot of NullReferenceException spam at some point. \u003C/p\u003E\u003Cp\u003ESince the kOS Scriptable Control system seems to be the constant in the structural failures that preceded all this, I\u0027m guessing kOS was the cause. Further fueling my suspicion that it\u0027s kOS was the fact that when I removed any kOS parts from the craft, I didn\u0027t have a single incident. I\u0027m curious if anybody can prove or disprove it though. Logs are available here: \u003Ca href=\u0022https://www.dropbox.com/sh/jlyvawfapoglucz/AACv8Sk52qi1gZmYDqqA7NBKa?dl=0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.dropbox.com/sh/jlyvawfapoglucz/AACv8Sk52qi1gZmYDqqA7NBKa?dl=0\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve suspected for a while now that there\u0027s something off about the SCS part model\u0027s coordinates. I\u0027ve noticed that when I attach two of them stacked together, there\u0027s visual texture \u0022garble\u0022 at the spot where they join, as if their join point was actually being overlapped.\u003C/p\u003E\u003Cp\u003EThe problem is that when we took over from Kevin Laity when he went missing, the only thing that was checked into the GPL3\u0027d source code was the EXPORTED model file for the SCS part, not its original Unity source file. This makes it a bit hard to pull it into the unity editor and have a look at it. (It\u0027s a bit like trying to fix a bug in a mod when all you have is the compiled DLL file and not the source CSharp files.)\u003C/p\u003E\u003Cp\u003E(Basically, KSP uses its own homebrewed model files that it *exports* from Unity and has you put into you plugins. This is generated by a tool SQUAD provides to modders called their \u0022PartTools\u0022 unity exension. If all you have is the result of that export, and not the original files unity read, then I\u0027m not sure how to actually look into the problem.)\u003C/p\u003E\u003Cp\u003EIt may be the case that solving it will require just ditching the current part model entirely and making new ones from scratch. My problem is that this gets into an area I know very little about. My training is on the programming end of things, not the graphic design end of things.\u003C/p\u003E\n"},{"CreatedByName":"Snoman314","CreatedById":106370,"CreatedDateTime":"2015-01-01T20:44:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Entropius\u0022 data-cite=\u0022Entropius\u0022\u003E\u003Cdiv\u003EI\u0027m attempting to setup all my mods for KSP 0.90. And in the process, I\u0027ve noticed a glitch that I think might be due to kOS (0.15.4) but I\u0027m not totally certain.\u003Cp\u003EI load or quickload a vessel in orbit, and (sometimes) the ship seems to split in 2. A look at the log says there\u0027s a structural failure between \u0022CX-4181 Scriptable Control System\u0022 and some other part (sometimes a solar panel, sometimes a fuel tank). The ESC menu to go back to the KSC can appear, but often fails to actually do anything when buttons are clicked. And the log seems to have a lot of NullReferenceException spam at some point. \u003C/p\u003E\u003Cp\u003ESince the kOS Scriptable Control system seems to be the constant in the structural failures that preceded all this, I\u0027m guessing kOS was the cause. Further fueling my suspicion that it\u0027s kOS was the fact that when I removed any kOS parts from the craft, I didn\u0027t have a single incident. I\u0027m curious if anybody can prove or disprove it though. Logs are available here: \u003Ca href=\u0022https://www.dropbox.com/sh/jlyvawfapoglucz/AACv8Sk52qi1gZmYDqqA7NBKa?dl=0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.dropbox.com/sh/jlyvawfapoglucz/AACv8Sk52qi1gZmYDqqA7NBKa?dl=0\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah it\u0027s totally messed up for me as well. The scs parts fall off the rocket on the launchpad, but still remain part of the rocket. It\u0027s really weird. I\u0027ve just added kOS modules to all capsules and abandoned the kOS parts.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIt may be the case that solving it will require just ditching the current part model entirely and making new ones from scratch. My problem is that this gets into an area I know very little about. My training is on the programming end of things, not the graphic design end of things.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat brings up the tantalising prospect of new parts in the future, that get upgrades as the tech tree develops. I hope you find a modeller to help out!\u003C/p\u003E\n"},{"CreatedByName":"VentZer0","CreatedById":130750,"CreatedDateTime":"2015-01-01T21:23:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EVariables already should be local to the vessel. If you found a case where a script running on one vessel causes a change to a variable on a different vessel, then that\u0027s a really major bug. The only exception to this is the CONFIG: variables, which are written out to kOS/Plugins/PluginData/kOS/config.xml and affect the entire plugin. Every OTHER variable should only exist on the one vessel that\u0027s running it (more so, it should only exist on the one SCS part that\u0027s running it. Two kOS computers on the same vessel should have their own distinct set of variables from each other).\u003Cp\u003EYou could if you put two SCS parts on the same vessel. I have not yet tried to see what happens if you try to put both of them in control of their shared vessel, and give them opposing commands (like having one LOCK STEERING TO PROGRADE while the other one does a LOCK STEERING TO RETROGRADE.) I have no idea what that would do. I never tried it. I\u0027m thinking most likely both would try to tell KSP how to set the ship controls, and KSP would end up obeying whichever set of controls it was told about last, effectively ignoring whatever the first one said to do.\u003C/p\u003E\u003Cp\u003EOne program can call another program (you can use the RUN command from inside a program). And that\u0027s a LITTLE bit like having function calls...uh.. sort of. All variables OTHER than the parameters passed to the RUN command are global, though, which is the thing I thought you were talking about.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI see, so the individual SCS parts act as if they are an independent system? One variable called the same thing running on 2 different SCS parts will not interfere? Good then I should have no problems in theory.\u003C/p\u003E\u003Cp\u003EIn the context of using run/function calls what do you mean with global here, global for the SCS meaning a variable set in the main program and a variableset within the run/function called the same, will override the first one for this SCS part or all of them in universe?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-01-01T22:03:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022VentZer0\u0022 data-cite=\u0022VentZer0\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIn the context of using run/function calls what do you mean with global here, global for the SCS meaning a variable set in the main program and a variableset within the run/function called the same\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes that.\u003C/p\u003E\u003Cp\u003EIf program 1 does \u0022SET X TO 5.\u0022 and then runs program 2, and program 2 does a \u0022SET X TO 10\u0022 then, there was only ever 1 \u0022X\u0022, and Program 2 just changed Program 1\u0027s X from 5 to 10. I mean global in that sense.\u003C/p\u003E\u003Cp\u003EHowever, is there is ALSO a variable X on a completely different SCS part, then it shouldn\u0027t be affected.\u003C/p\u003E\n"},{"CreatedByName":"Entropius","CreatedById":104709,"CreatedDateTime":"2015-01-01T22:45:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI\u0027ve suspected for a while now that there\u0027s something off about the SCS part model\u0027s coordinates. I\u0027ve noticed that when I attach two of them stacked together, there\u0027s visual texture \u0022garble\u0022 at the spot where they join, as if their join point was actually being overlapped.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBased on the description of the \u0022garble\u0022, maybe what you\u0027re seeing is \u003Ca href=\u0022https://en.wikipedia.org/wiki/Z-fighting\u0022 rel=\u0022external nofollow\u0022\u003EZ-fighting\u003C/a\u003E? \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe problem is that when we took over from Kevin Laity when he went missing, the only thing that was checked into the GPL3\u0027d source code was the EXPORTED model file for the SCS part, not its original Unity source file. This makes it a bit hard to pull it into the unity editor and have a look at it. (It\u0027s a bit like trying to fix a bug in a mod when all you have is the compiled DLL file and not the source CSharp files.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI personally doubt the model is the problem since I\u0027d like to think that if old part models were causing new problems, we\u0027d see it happening among more part-mods. And more importantly, why didn\u0027t the part simply explode? (rather than causing NullReferenceExceptions and non-working GUI buttons?) I\u0027m fearful that the structural failure may be a symptom of something deeper.\u003C/p\u003E\u003Cp\u003EBut nonetheless, if we don\u0027t have the original raw files for creating a part, I\u0027m inclined to say we need a new part model anyway, if for no other reason than ensuring complete control over all parts of kOS. (I\u0027ve always felt the 2.5 m part should be a bit thinner anyway\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIt may be the case that solving it will require just ditching the current part model entirely and making new ones from scratch. My problem is that this gets into an area I know very little about. My training is on the programming end of things, not the graphic design end of things.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile I\u0027m skeptical that\u0027ll be the solution, I hope it will be. A quick-n-dirty way to try this may be to make a MM config that replaces the SCS part model with the stock 2.5 m probe core model. If that works, then keep it that way until we can cook up a new custom model. I\u0027m sure if we put out a call for modelers, somebody will oblige.\u003C/p\u003E\n"}]}