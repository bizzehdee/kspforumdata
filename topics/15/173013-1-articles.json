{"TopicId":173013,"ForumId":15,"TopicTitle":"Tutorial for a basic Landing Leg","CreatedByName":"Eleusis La Arwall","CreatedById":116286,"CreatedDateTime":"2018-03-25T22:01:14Z","PageNum":1,"Articles":[{"CreatedByName":"Eleusis La Arwall","CreatedById":116286,"CreatedDateTime":"2018-03-25T22:01:14Z","Content":"\n\u003Cp\u003E\nLanding gear and wheels are not easy and even though there is quite some information spread across the forum it took me very long to get working results. One thing I really missed was a step-by-step tutorial that tells me what is required, where stuff needs to be placed and so on. A couple of days ago, I had successfully created my first working landing leg. It\u0027s very simple with just a suspension and rotateable foot but it works! Now I wanna try to write down a step-by-step tutorial on how to create the most basic landing legs. I also hope to get some feedback to improve my assembly of landing legs and/or this tutorial.\n\u003C/p\u003E\n\u003Cp\u003E\nSoftware:\u003Cbr\u003E\n- Blender (v2.79)\u003Cbr\u003E\n- Gimp (v2.8.22)\u003Cbr\u003E\n- Unity (5.4.0p4)\u003Cbr\u003E\n- Part Tools\u003Cbr\u003E\n- NotePad/NotePad\u002B\u002B\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003E\u003Cstrong\u003E1. Blender\u003C/strong\u003E\u003C/u\u003E\u003Cbr\u003E\nThe Blender part is rather easy just make sure to build the retracted version. Create the objects as shown in the picture and drag them in the correct hirearchy. What I found to be important is that the center of foot-hinge is at 0,0,0 and the model is build around it.\u00A0 All objects should have their origin at 0,0,0, rotation 0,0,0 and scale 1,1,1.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022pdoQBcs.png\u0022 class=\u0022ipsImage\u0022 height=\u0022501\u0022 src=\u0022https://i.imgur.com/pdoQBcs.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cu\u003E\u003Cstrong\u003E2. Unity\u003C/strong\u003E\u003C/u\u003E\u003Cbr\u003E\n1.) Start with a New Scene and delete everything in it. \u0022Create Empty\u0022 (Ctrl\u002BShift\u002BN) and set position to 0,0,0.\u003Cbr\u003E\n2.) Make sure the Layers are set up correctly in unity. The following are required: Layer26: WheelCollidersIgnore, Layer27: wheelColliders, Layer30: SurfaceFX. If the Layers aren\u0027t set up already, expand the Layers, click \u0022Add Layer\u0022 and enter the Layer names at the corresponding User Layer.\u003Cbr\u003E\n3.) Add the Part Tools script and set up Model Name, URL and Texture Format.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022nto8UCO.png\u0022 class=\u0022ipsImage\u0022 height=\u0022648\u0022 src=\u0022https://i.imgur.com/nto8UCO.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n1.) Drag the TestLeg.blend file to the newly created GameObject (I use the .blend file directly with .fbx conversion done in the background)\u003Cbr\u003E\n2.) Select \u0022ExampleLandingLeg\u0022 and remove the Animator Component (right click / Remove Component).\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022CIqrvfL.png\u0022 class=\u0022ipsImage\u0022 height=\u0022649\u0022 src=\u0022https://i.imgur.com/CIqrvfL.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n1.) Create an Empty, rename it to \u0022wheelCollider\u0022 and drag it as child of \u0022GameObject\u0022.\u003Cbr\u003E\n2.) Create an Empty, rename it to \u0022deployTgt\u0022\u0022 and drag it as child of \u0022ChassisBlue\u0022.\u003Cbr\u003E\n3.) Make sure their position is 0,0,0.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022Of4RwJl.png\u0022 class=\u0022ipsImage\u0022 height=\u0022647\u0022 src=\u0022https://i.imgur.com/Of4RwJl.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nNow all objects except the PistonCollider (comes later) are present and they can be configured. Start with the deploy animation.\u003Cbr\u003E\n1.) Select \u0022ExampleLandingLeg\u0022.\u003Cbr\u003E\n2.) Hit \u0022Add Component / Miscellaneous / Animation\u0022 (Note that AnimatoR and AnimatioN are two different things!).\u003Cbr\u003E\n3.) Click \u0022 Window / Animation\u0022 (or Ctrl \u002B 6).\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022y0zI5id.png\u0022 class=\u0022ipsImage\u0022 height=\u0022648\u0022 src=\u0022https://i.imgur.com/y0zI5id.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nThe Animation Window pops up. Click \u0022Create\u0022 and enter a name like \u0022deployLegAnim\u0022.\u003Cbr\u003E\n1.) Click \u0022Add Property\u0022 and navigate to \u0022ChassisBlue / PistonRed / Transform\u0022.\u003Cbr\u003E\n2.) Add the \u0022Position\u0022 entry by hitting the small \u002B.\u003Cbr\u003E\n3.) Change to CurveView.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00225krmA7g.png\u0022 class=\u0022ipsImage\u0022 height=\u0022694\u0022 src=\u0022https://i.imgur.com/5krmA7g.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n1.) Go to Frame 60.\u003Cbr\u003E\n2.) Set Z position to -2 (suspension-distance).\u003Cbr\u003E\n3.) Animation is done, close the Animation window.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022pTkN93v.png\u0022 class=\u0022ipsImage\u0022 height=\u0022689\u0022 src=\u0022https://i.imgur.com/pTkN93v.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n1.) Select \u0022ChassisCollider\u0022.\u003Cbr\u003E\n2.) Remove the MeshRenderer Component (right click / Remove Component).\u003Cbr\u003E\n3.) Hit \u0022Add Component / Physics / MeshCollider\u0022 and check the \u0022Convex\u0022 box.\u003Cbr\u003E\n4.) Set layer to \u0022WheelCollidersIgnore\u0022 (26).\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022WJaieDQ.png\u0022 class=\u0022ipsImage\u0022 height=\u0022648\u0022 src=\u0022https://i.imgur.com/WJaieDQ.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n1.) Select \u0022wheelCollider\u0022.\u003Cbr\u003E\n2.) Hit \u0022Add Component / Physics / Wheel Collider\u0022 and configure it as shown in the picture (non-default values are marked red).\u003Cbr\u003E\nMass: IDK, just works\u003Cbr\u003E\nRadius: The distance from hinge-origin (0,0,0) to the lowest point of the foot (while retracted)\u003Cbr\u003E\nSuspension Distance: As the name says (should be the same distance covered by the animation)\u003Cbr\u003E\nSpring: Springhardness\u003Cbr\u003E\nDamper: IDK, just works\u003Cbr\u003E\nTarget Position: Default suspension position. 1 is fully deployed (landing gear), 0.5 is half deployed (wheels).\u003Cbr\u003E\n3.) Set Layer to \u0022wheelColliders\u0022 (27).\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022En4dYS3.png\u0022 class=\u0022ipsImage\u0022 height=\u0022648\u0022 src=\u0022https://i.imgur.com/En4dYS3.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nThere is one last step but I highly recommend to save the unity scene at this point and exported/test the model. Once the PistonCollider is added, it becomes much harder to verify that the wheelCollider is in the right position (in KSP).\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00222UeJD4M.png\u0022 class=\u0022ipsImage\u0022 height=\u0022648\u0022 src=\u0022https://i.imgur.com/2UeJD4M.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nSwitch to a filebrowser and navigate to the GameData folder of the KSP installation. Create a new folder \u0022ExampleLandingLeg\u0022 and copy modelELL.mu and the texture in that folder. Also Create or copy a new config file in that folder and paste the following (the config already references \u0022PistonCollider\u0022 which is not yet included but don\u0027t worry):\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nPART\n{\n\t// General parameters\n\tname = ExampleLandingLeg\n\tmodule = Part\n\tauthor = YourName\n\n\t// Asset parameters\n\tmesh = TestLeg.mu\n\tscale = 1\n\trescaleFactor = 1\n\n\t// Node definitions - Position X, Position Y, Position Z, Up X, Up Y, Up Z\n\tnode_attach = 0.0, 1.5, -0.19, 0.0, 0.0, 1.0, 1\n\n\t// Editor parameters\n\tTechRequired = advLanding\n\tentryCost = 1\n\tcost = 1\n\tcategory = Utility\n\tsubcategory = 0\n\ttitle = ExampleLandingLeg\n\tmanufacturer = None\n\tdescription = Soon TM\n\ttags = example landing leg\n\n\t// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\n\tattachRules = 0,1,0,0,0\n\n\t// Standard part parameters\n\tmass = 1.0\n\tbulkheadProfiles = srf\n\n\t// Drag\n\tdragModelType = default\n\tmaximum_drag = 0.2\n\tminimum_drag = 0.2\n\tangularDrag = 2\n\n\t// Damage and Temperature\n\tcrashTolerance = 40\n\tmaxTemp = 2200\n\n\t// Resources\n\n\t// Modules\n\tMODULE\n\t{\n\t\tname = ModuleWheelBase\n\t\twheelColliderTransformName = wheelCollider\t\t// object with WheelCollider-Component\n\t\twheelType = LEG\n\t\tFitWheelColliderToMesh = False\t\t\t\t// setting this to true will override the radius and center parameters\n\t\tradius = 0.1\t\t\t\t\t\t// Same as set in unity\n\t\tcenter = 0,0,0\t\t\t\t\t\t// Same as set in unity\n\t\tmass = 0.05\t\t\t\t\t\t// Same as set in unity\n\t\tautoFrictionAvailable = False\n\t\tclipObject = PistonCollider\t\t\t\t// Moving Collider for the piston. Causes trouble if not set.\n\t\tTooltipTitle = none\n\t\tTooltipPrimaryField = \n\t\tgroundHeightOffset = 4\n\t}\n\tMODULE\n\t{\n\t\tname = ModuleWheelSuspension\n\t\tbaseModuleIndex = 0\t\t\t\t\t// Reference to the location of \u0022ModuleWheelBase\u0022 in the config (first module is 0)\n\t\tsuspensionTransformName = PistonRed\t\t\t// object (and children) that will be moved by suspension\n\t\tsuspensionColliderName = PistonCollider\t\t\t// Moving Collider for the piston. Causes trouble with the wheelCollider if not configured\n\t\tsuspensionDistance = 2\t\t\t\t\t// Same as set in unity\n\t\tsuspensionOffset = 0\t\t\t\t\t// IDK. There is some interaction with the position of deployTgt in unity\n\t\ttargetPosition = 1\t\t\t\t\t// Same as set in unity; With no force applied the suspension will be fully deployed\n\t\tspringRatio = 20\t\t\t\t\t// Same as set in unity; Springhardness\n\t\tdamperRatio = 1\t\t\t\t\t\t// Same as set in unity\n\t}\n\tMODULE\n\t{\n\t\tname = ModuleWheelDeployment\n\t\tbaseModuleIndex = 0\t\t\t\t\t// Reference to the location of \u0022ModuleWheelBase\u0022 in the config (first module is 0).\n\t\tanimationTrfName = ExampleLandingLeg\t\t\t// object with Animation Component (not the animated object!)\n\t\tanimationStateName = deployLegAnim\t\t\t// name of the animation\n\t\tdeployedPosition = 1\n\t\tdeployTargetTransformName = deployTgt\t\t\t// object that will become the wheelCollider when deployed\n\t\tTsubSys = 1\t\t\t\t\t\t// When will wheelCollider switch during the animation. 1=end, 0=start\n\t}\n\tMODULE\n\t{\n\t\tname = ModuleWheelLock\n\t\tmaxTorque = 500\n\t}\n\tMODULE\n\t{\n\t\tname = ModuleWheelBogey\n\t\tbaseModuleIndex = 0\t\t\t\t\t// Reference to the location of \u0022ModuleWheelBase\u0022 in the config (first module is 0)\n\t\tbogeyTransformName = FootYellow\t\t\t\t// Object that will act as foot\n\t\tdeployModuleIndex = 2\t\t\t\t\t// Reference to the location of \u0022ModuleWheelDeployment\u0022 in the config (third module is 2)\n\t\tmaxPitch = 160\t\t\t\t\t\t// Degree. Maximum positiv deflection\n\t\tminPitch = -160\t\t\t\t\t\t// Degree. Maximum negative deflection\n\t\trestPitch = 0\t\t\t\t\t\t// Degree. Position with no influences\n\t\tpitchResponse = 100\n\t\tbogeyAxis = 1, 0, 0\t\t\t\t\t// Axis to rotate around\n\t\tbogeyUpAxis = 0, 0, 1\t\t\t\t\t// Axis pointing upward. Can be 0, 1 or -1\n\t}\n}\u003C/pre\u003E\n\u003Cp\u003E\nSave the config and fire up KSP. Choose a Pod, add four legs around it and launch vessel (it may jump a bit at first, use launchclamps to avoid). If everthing went well, the foot should be exactly level with the ground and the suspension should work as well. Hit Alt \u002B F12 to bring up the cheatmenu and play a bit with the gravity to see if everthing is alright. Hit \u0022g\u0022 to retract the landing gear and deploy it afterwards again. The piston will go in the ground and the vessel jumps high at the end of deployment. So the PistonCollider needs to be set up to avoid this. Close or minimize KSP and go back to unity.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003E\u003Cstrong\u003EThe PistonCollider:\u003C/strong\u003E\u003C/u\u003E\u003Cbr\u003E\n1.) Create another empty GameObject, name it \u0022PistonCollider\u0022, make sure it is at 0,0,0 and set it as child of \u0022PistonRed\u0022\u003Cbr\u003E\n2.) Add Component \u0022Physics / CapsuleCollider\u0022 and configure it as shown. The lower end should match the center of the wheelcollider (0,0,0)\u003Cbr\u003E\n3.) Set Layer to \u0022SurfaceFX\u0022 (30)\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022KKkycGW.png\u0022 class=\u0022ipsImage\u0022 height=\u0022648\u0022 src=\u0022https://i.imgur.com/KKkycGW.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nRe-export the model, fire up KSP or Reload the Database and test the deploy mechanic. Done!\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://imgur.com/a/eJpTj\u0022 rel=\u0022external nofollow\u0022\u003Eimgur album\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nMy sincere thanks to the people on the forum who shared their experience and knowledge about landing legs and wheels!\u003Cbr\u003E\u003Cspan style=\u0022background:rgba(220,220,220,.5) url(\u0026quot;//forum.kerbalspaceprogram.com/applications/core/interface/ckeditor/ckeditor/plugins/widget/images/handle.png\u0026quot;) repeat scroll 0% 0%;\u0022\u003E\u003C/span\u003EEmbersArc for the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/138871-13-kre-kerbal-reusability-expansion/\u0026amp;page=8\u0022 rel=\u0022\u0022\u003Echeat-sheet\u003C/a\u003E\u003Cbr\u003E\nNecroBones and nli2work for the information provided in the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/135250-landing-legs-in-11/\u0026amp;page=3\u0022 rel=\u0022\u0022\u003ELanding Legs 1.1 thread\u003C/a\u003E\u003Cbr\u003E\nSpannerMonkey(smce) for information provided in the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/160831-setup-for-the-most-basic-wheel/\u0022 rel=\u0022\u0022\u003Emost basic wheel thread\u003C/a\u003E\u003Cbr\u003E\nblackheart612 for the guide to making \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/170127-a-guide-to-making-deploying-landing-gears/\u0022 rel=\u0022\u0022\u003EDeployable Landing Gears\u003C/a\u003E\u003Cbr\u003E\nNils266 for the \u0022LandingLeg2\u0022 part from PlanetaryBaseSystems, it was a very usefull example.\u003Cbr\u003E\nNifty255 and linuxgurugamer for \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/151558-131-kerbal-object-inspector-continued-view-all-game-objects-in-ksp/\u0022 rel=\u0022\u0022\u003EKerbal Object Inspector Continued\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"blackheart612","CreatedById":42741,"CreatedDateTime":"2018-03-28T01:35:05Z","Content":"\n\u003Cp\u003E\nAwesome! I linked this post to mine as well for ease of access to those who need cross reference\u00A0\u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022:wink:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Eleusis La Arwall","CreatedById":116286,"CreatedDateTime":"2018-03-28T15:53:37Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/42741-blackheart612/\u0026amp;do=hovercard\u0022 data-mentionid=\u002242741\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/42741-blackheart612/\u0022 rel=\u0022\u0022\u003E@blackheart612\u003C/a\u003E Thank you very much \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nSome more Landing Leg stuff:\n\u003C/p\u003E\n\u003Cp\u003E\nAfter the basic landig leg I\u0027ve tried to achive some more complex builds. Especially the second example took me lot of time to figure out. I won\u0027t explain them as detailed as before but hopefully enough to rebuild them. I save the blend file under a different name and start with a new unity scene for each example. Also the animation names change, so you may need to adapt the config (\u0022\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EanimationTrfName\u003C/span\u003E\u0022 and \u0022\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EanimationStateName\u003C/span\u003E\u0022 in ModuleWheelDeployment).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003E\u003Cstrong\u003E1.) Position\u003C/strong\u003E\u003C/u\u003E\u003Cbr\u003E\nThis example extends the whole leg 1 m to the side before deploying the piston and it also uses constraints (Pneuma objects). The hierarchy has changed a little and therefor all new or moved objects are marked in blender. The ChassisCollider is now a child of ChassisBlue, the rest is new. The Pneuma objects have the origin at their individual hinge points and PneumaHullRed is 180\u00B0 rotated around the x-axis to make Z\u002B face down.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022TDYTUHk.png\u0022 class=\u0022ipsImage\u0022 height=\u0022535\u0022 src=\u0022https://i.imgur.com/TDYTUHk.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nThe unity setup is pretty much the same as before. StaticCollider must be set up and the animation needs some new keys for the sideway-movement.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022MBePdDR.png\u0022 class=\u0022ipsImage\u0022 height=\u0022646\u0022 src=\u0022https://i.imgur.com/MBePdDR.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nConfig also stays the same, just the constraints need a new module:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\tMODULE\n\t{\n\t\tname = FXModuleLookAtConstraint            \n\t\tCONSTRAINLOOKFX\n\t\t{\n\t\t\ttargetName = PneumaStickYellow\n\t\t\trotatorsName = PneumaHullRed\n\t\t}\n\t\tCONSTRAINLOOKFX\n\t\t{\n\t\t\ttargetName = PneumaHullRed\n\t\t\trotatorsName = PneumaStickYellow\n\t\t}\n\t}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNow check the wheelCollider position in KSP. I usually set gravity to 0.04 and move the vessel to the side on the launchpad until it drops down:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00221CLP4sN.png\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/1CLP4sN.png\u0022 width=\u0022718\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nThe constraints work as well.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003E\u003Cstrong\u003E2. Rotation\u003C/strong\u003E\u003C/u\u003E\u003Cbr\u003E\nThis example rotates the leg by 30\u00B0 before deploying the piston and this is where it gets messy. First I\u0027ll explain my unsuccessfull attempt and show the problem that arises:\u003Cbr\u003E\nThe blender setup is the same as the example above just the origin of ChassisBlue has been set to the hinge-point. All children except the PneumaStickYellow still have their origin at 0,0,0 (global coordinates).\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022fBbeoZr.png\u0022 class=\u0022ipsImage\u0022 height=\u0022552\u0022 src=\u0022https://i.imgur.com/fBbeoZr.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nUnity setup is again the same, just the animation needs rotate keys instead of position.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022FRDcBSf.png\u0022 class=\u0022ipsImage\u0022 height=\u0022647\u0022 src=\u0022https://i.imgur.com/FRDcBSf.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nConfig is also the same again.\n\u003C/p\u003E\n\u003Cp\u003E\nWhen I verify the position of the wheelCollider, it is off. First thing I noticed is a minimal vertical offset but the main problem is the horizontal offset. For hours I\u0027ve tried everything I could come up with but the result is always the same (or a broken model).\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00225vuEa4E.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022323\u0022 src=\u0022https://i.imgur.com/5vuEa4E.jpg\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cu\u003E\u003Cem\u003EMy thoughts on deployTgt mechanic:\u003C/em\u003E\u003C/u\u003E\u003Cbr\u003E\nWhen the leg deploys in KSP, the animation is played and at a given point during this animation (\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003ETsubSys\u003C/span\u003E key in ModuleWheelDeployment), the suspension-object and all children are \u0022moved\u0022 to the location of deployTgt. The (local) position of the suspension-object and children is identical to their position on the last frame of the animation. Y\u002B of the deployTgt also sets the axis for the suspension. The \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EsuspensionOffset\u003C/span\u003E in ModuleWheelSuspension is an offset for the \u0022moved\u0022 suspension-object along the Y axis of deployTgt. What I don\u0027t know/understand is how the wheelCollider gets its offset from deployTgt position. So currently my best guess is that the wheelCollider is not lowered along the Y-axis of deployTgt but instead along the global Y-axis.\n\u003C/p\u003E\n\u003Cp\u003E\nI was about to write this down up to this point and ask for help when I realized that the model could be rotated by 30\u00B0 in retracted state. This way the suspension is always along the global Y axis. The model would need to be rotated manually in the config file later. A quick look at the stock legs revealed that the models are rotated:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E...\n\tnode_attach = 0.0, 0.0, 0.0, 0.0, 0.3756781, 0.9267502\n...\n// From landingLeg1\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cu\u003E\u003Cstrong\u003EThe solution\u003C/strong\u003E\u003C/u\u003E\u003Cbr\u003E\n1.) In blender set the cursor to the hinge-point of ChassisBlue\u003Cbr\u003E\n2.) Make sure pivot point is 3D cursor\u003Cbr\u003E\n3.) Select ChassisBlue and PneumaHullRed and rotate them 30\u00B0 around the X axis.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022wLbxblN.png\u0022 class=\u0022ipsImage\u0022 height=\u0022553\u0022 src=\u0022https://i.imgur.com/wLbxblN.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nSave and go to unity. Some of the animation keys need to be set up again but everything else should be fine. Export the model and open the config.\u003Cbr\u003E\nNow a direction vector is required that is perpendicular to the flat sides of StaticGray. It needs to be parallel to the green arrow in the picture above (the one on the textured model). 0.0, 0.5, 1.0 is such a vector and the config should look like this\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\tnode_attach = 0.0, 2.4384, -0.26651, 0.0, 0.5, 1.0, 1\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAnother thing I forgot to mention in the tutorial is Center of Mass Offset. It should be set to move it away from the foot.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\tCoMOffset = 0.0, 2.4, 0.0\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nFire up KSP and verify that the wheelCollider is in place now\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022glpii6d.png\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/glpii6d.png\u0022 width=\u0022702\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nDone! The attachment of the legs to the capsule is a bit off but it should be easy to fix with some trial and error on the attach node.\n\u003C/p\u003E\n\u003Cp\u003E\nI will add the additions to \u003Cabbr title=\u00221. Original Post(er). The first post in a thread, or the person who posted it. 2. Overpowered. A part or mechanic that upsets game balance by being too powerful.\u0022\u003EOP\u003C/abbr\u003E after I did dome more experiments with legs (and maybe wheels ?!).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}