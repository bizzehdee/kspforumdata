{"TopicId":143809,"ForumId":15,"TopicTitle":"Asset Bundles - Use for Part Models - Info and Questions - Enable use of BlendShapes animations","CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-07-14T20:48:59Z","PageNum":1,"Articles":[{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-07-14T20:49:00Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EThe problems:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBlendShapes are unsupported in .mu files / PartTools, but will load in an AssetBundle.\u003Cbr\u003E\nAssetBundles do not by default load models in a way that is accessible to use in a part through a MODEL node.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EThe solution (so far):\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nProper setup of the AssetBundle in Unity, custom AssetBundle extension, and some custom plugin code to load the model into the GameDatabase.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EUseful Information Summary:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nThis method uses custom asset bundle naming and composition.\u00A0 Only a single .prefab GameObject model should reside in each bundle (currently; investigating multi-model-loading capabilities).\u00A0 Textures should reside in a standard folder beside the asset bundle; in essence you can treat the AssetBundle-Model as if it were a .mu model file.\n\u003C/li\u003E\n\u003Cli\u003E\nAssetBundles need a custom extension to trigger loading by the DatabaseLoader code.\u00A0 This can be whatever you want to use, but SHOULD NOT BE be the .ksp extension (as that is used by asset bundles that the game will load). See the code examples below.\n\u003C/li\u003E\n\u003Cli\u003E\nOnce successfully loaded the models can be used in a part just as any other model can.\u00A0 The URL for the model will be the path and name of the asset-bundle, minus extension.\n\u003C/li\u003E\n\u003Cli\u003E\nSee below for information regarding BlendShapes; basically though they \u0027just work\u0027.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EBlendShape Animation Info:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nModels loaded through AssetBundles have full support for SkinnedMeshRenderer and BlendShape based animations.\u00A0\n\u003Cul\u003E\u003Cli\u003E\nCreate the animation in Unity with keyframes for the BlendShape key weights, and reference that animation through a ModuleAnimateGeneric or any other animation handling module.\n\u003C/li\u003E\n\u003Cli\u003E\nSee the information above and the code below for details on how to get the models added to parts\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ECode Examples:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nDatabaseLoader based loading code (inspired/derived from \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0026amp;do=hovercard\u0022 data-mentionid=\u002275857\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/75857-xevilreeperx/\u0022 rel=\u0022\u0022\u003E@xEvilReeperx\u003C/a\u003E example below); mildly WIP, but should work for most uses.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nusing UnityEngine;\nusing System.Collections;\nusing System.IO;\n\nnamespace SSTUTools\n{\n    [DatabaseLoaderAttrib((new string[] { \u0022smf\u0022 }))]\n    public class SMFBundleDefinitionReader : DatabaseLoader\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;GameObject\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    {\n        public override IEnumerator Load(UrlDir.UrlFile urlFile, FileInfo file)\n        {\n            // KSP-PartTools built AssetBunldes are in the Web format, \n            // and must be loaded using a WWW reference; you cannot use the \n            // AssetBundle.CreateFromFile/LoadFromFile methods unless you \n            // manually compiled your bundles for stand-alone use\n            WWW www = CreateWWW(urlFile.fullPath);\n            //not sure why the yield statement here, have not investigated removing it.\n            yield return www;\n\n            if (!string.IsNullOrEmpty(www.error))\n            {\n                MonoBehaviour.print(\u0022Error while loading AssetBundle model: \u0022 \u002B www.error);\n                yield break;\n            }\n            else if (www.assetBundle == null)\n            {\n                MonoBehaviour.print(\u0022Could not load AssetBundle from WWW - \u0022 \u002B www);\n                yield break;\n            }\n\n            AssetBundle bundle = www.assetBundle;\n                        \n            //TODO clean up linq\n            string modelName = bundle.GetAllAssetNames().FirstOrDefault(assetName =\u0026gt; assetName.EndsWith(\u0022prefab\u0022));\n            AssetBundleRequest abr = bundle.LoadAssetAsync\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;GameObject\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(modelName);\n            while (!abr.isDone) { yield return abr; }//continue to yield until the asset load has returned from the loading thread\n            if (abr.asset == null)//if abr.isDone==true and asset is null, there was a major error somewhere, likely file-system related\n            {\n                MonoBehaviour.print(\u0022ERROR: Failed to load model from asset bundle!\u0022);\n                yield break;\n            }\n            GameObject model = GameObject.Instantiate((GameObject)abr.asset);//make a copy of the asset\n            setupModelTextures(urlFile.root, model);\n            this.obj = model;\n            this.successful = true;\n            //this unloads the compressed assets inside the bundle, but leaves any instantiated models in-place\n            bundle.Unload(false);\n        }\n\n        /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        /// Creates a WWW URL reference for the input file-path\n        /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;param\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022atv\u0022\u003E\u0022bundlePath\u0022\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u0026lt;/param\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        /// \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;returns\u0026gt;\u0026lt;/returns\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        private static WWW CreateWWW(string bundlePath)\n        {\n            try\n            {\n                string name = Application.platform == RuntimePlatform.WindowsPlayer ? \u0022file:///\u0022 \u002B bundlePath : \u0022file://\u0022 \u002B bundlePath;\n                return new WWW(Uri.EscapeUriString(name));\n            }\n            catch (Exception e)\n            {\n                MonoBehaviour.print(\u0022Error while creating AssetBundle request: \u0022 \u002B e);\n                return null;\n            }\n        }\n\n        private static void setupModelTextures(UrlDir dir, GameObject model)\n        {\n            Renderer[] renders = model.GetComponentsInChildren\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Renderer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(true);\n            Material m;\n            List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Material\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E adjustedMaterials = new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Material\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n            foreach (Renderer render in renders)\n            {\n                m = render.sharedMaterial;\n                if (adjustedMaterials.Contains(m)) { continue; }//already fixed that material (many are shared across transforms), so skip it\n                else { adjustedMaterials.Add(m); }                \n                replaceTexture(m, \u0022_MainTex\u0022, false);\n                replaceTexture(m, \u0022_BumpMap\u0022, true);\n                replaceTexture(m, \u0022_Emissive\u0022, false);\n            }\n        }\n\n        private static void replaceTexture(Material m, string name, bool nrm = false)\n        {\n            Texture tex = m.GetTexture(name);\n            if (tex != null \u0026amp;\u0026amp; !string.IsNullOrEmpty(tex.name))\n            {\n                Texture newTex = findTexture(tex.name, nrm);\n                if (newTex != null)\n                {\n                    m.SetTexture(name, newTex);\n                }\n            }\n        }\n\n        private static Texture2D findTexture(string name, bool nrm = false)\n        {\n            //TODO clean up foreach\n            foreach (GameDatabase.TextureInfo t in GameDatabase.Instance.databaseTexture)\n            {\n                if (t.file.url.EndsWith(name))\n                {\n                    if (nrm) { return t.normalMap; }\n                    return t.texture;\n                }\n            }\n            return null;\n        }\n        \n    }\n\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cstrong\u003EExample part-config (abridged):\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nExample no longer needed; use the model just like you would any other model file though a MODEL node.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance for any information offered, and hopefully others\u0027 can make some use out of what I have discovered so far.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-19T16:47:47Z\u0022 title=\u002207/19/2016 04:47  PM\u0022 data-short=\u00227 yr\u0022\u003EJuly 19, 2016\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-07-14T22:53:23Z","Content":"\n\u003Cp\u003E\nEdit: See above post for information so far.\n\u003C/p\u003E\n\u003Cp\u003E\nNext will be investigations on how textures and materials are handled through the AssetBundle system.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-15T00:30:18Z\u0022 title=\u002207/15/2016 12:30  AM\u0022 data-short=\u00227 yr\u0022\u003EJuly 15, 2016\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2016-07-15T08:33:01Z","Content":"\n\u003Cp\u003E\nHave you considered writing a DatabaseLoader instead of using a PartModule? Here\u0027s a version of mine I tweaked to handle dependencies like you want that can replace the Mu exporter. Create an AssetBundle with exactly one GameObject prefab in it, rename the extension to \u0022ru\u0022 and then treat it exactly like you would a .mu. It supports loading dependencies from KSPs and other RUs. It\u0027s still rough proof of concept code though so there are probably some bugs\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\n[DatabaseLoaderAttrib((new[] {\u0022ru\u0022}))]\npublic class RuPartBundleDefinitionReader : DatabaseLoader\u0026lt;GameObject\u0026gt;\n{\n    private const string ManifestSuffix = \u0022_bundle.xml\u0022;\n\n    public override IEnumerator Load(UrlDir.UrlFile urlFile, FileInfo file)\n    {\n        Debug.Log(\u0022Load (RU): \u0022 \u002B urlFile.url);\n\n        // load the AssetBundle\n        var www = CreateWWW(urlFile.fullPath);\n\n        yield return www;\n\n        if (!string.IsNullOrEmpty(www.error))\n        {\n            Debug.LogError(\u0022Error while loading AssetBundle: \u0022 \u002B www.error);\n            yield break;\n        } else if (www.assetBundle == null)\n        {\n            Debug.LogError(\u0022Could not load AssetBundle\u0022);\n            yield break;\n        }\n\n        var bundle = www.assetBundle;\n\n        AssetLoader.LoadedBundles.Add(bundle); // just in case something goes wrong in the next few lines\n\n        // Grab its manifest\n        var manifest = bundle.GetAllAssetNames().FirstOrDefault(assetName =\u0026gt; assetName.EndsWith(ManifestSuffix));\n\n        if (string.IsNullOrEmpty(manifest))\n        {\n            Debug.LogWarning(\u0022No manifest found for this bundle.\u0022);\n            yield break;\n        }\n\n        var request = bundle.LoadAssetAsync\u0026lt;TextAsset\u0026gt;(manifest);\n\n        yield return request;\n\n        if (request.asset == null)\n        {\n            Debug.LogError(\u0022Failed to load manifest: \u0022 \u002B manifest);\n            yield break;\n        }\n\n        try\n        {\n            var xmlManifest = (TextAsset) request.asset;\n            var bundleDefinition = LoadBundleDefinition(xmlManifest);\n\n            bundleDefinition.path = urlFile.fullPath;\n\n            // not added to BundleDefinitions/AssetDefinitions because the AssetLoader will wipe those lists shortly\n\n            AssetBundlePartLoadingSystem.AddTarget(bundleDefinition, urlFile);\n        }\n        finally\n        {\n            AssetLoader.LoadedBundles.Remove(bundle);\n            bundle.Unload(true);\n        }\n    }\n\n    private static BundleDefinition LoadBundleDefinition([NotNull] TextAsset asset)\n    {\n        if (asset == null) throw new ArgumentNullException(\u0022asset\u0022);\n\n        var bundleDefinition = BundleDefinition.CreateFromText(asset.text);\n\n        bundleDefinition.assets.ForEach(ad =\u0026gt; ad.bundle = bundleDefinition);\n\n        return bundleDefinition;\n    }\n\n\n\n    private static WWW CreateWWW(string bundlePath)\n    {\n        try\n        {\n            return \n                new WWW(\n                    Uri.EscapeUriString(Application.platform == RuntimePlatform.WindowsPlayer\n                        ? \u0022file:///\u0022 \u002B bundlePath\n                        : \u0022file://\u0022 \u002B bundlePath));\n        }\n        catch (Exception e)\n        {\n            Debug.LogError(\u0022Error while creating AssetBundle request: \u0022 \u002B e);\n            return null;\n        }\n    }\n}\n  \n[KSPAddon(KSPAddon.Startup.Instantly, true)]\npublic class AssetBundlePartLoadingSystem : LoadingSystem\n{\n    struct BundleInfo\n    {\n        public BundleDefinition Definition { get; private set; }\n        public UrlDir.UrlFile File { get; private set; }\n\n        public BundleInfo(BundleDefinition definition, UrlDir.UrlFile file) : this()\n        {\n            if (definition == null) throw new ArgumentNullException(\u0022definition\u0022);\n            if (file == null) throw new ArgumentNullException(\u0022file\u0022);\n\n            Definition = definition;\n            File = file;\n        }\n    }\n\n    struct BundleComparer : IComparer\u0026lt;BundleInfo\u0026gt;\n    {\n        public int Compare(BundleInfo x, BundleInfo y)\n        {\n            if (x.Definition.dependencyBundles.Contains(y.Definition)) return 1;\n            if (y.Definition.dependencyBundles.Contains(x.Definition)) return -1;\n            return 0;\n        }\n    }\n\n    private static readonly List\u0026lt;BundleInfo\u0026gt; Targets = new List\u0026lt;BundleInfo\u0026gt;();\n\n    private int _currentTarget = 0;\n    private string _progressTitle;\n    private bool _busy = false;\n\n    public static void AddTarget(BundleDefinition definition, UrlDir.UrlFile file)\n    {\n        Targets.Add(new BundleInfo(definition, file));\n    }\n\n\n    private void Awake()\n    {\n        var loaders = LoadingScreen.Instance.loaders;\n        loaders.Insert(loaders.IndexOf(GameDatabase.Instance) \u002B 1, this); // after GameDatabase\n    }\n\n    public override bool IsReady()\n    {\n        return Targets.Count == 0;\n    }\n\n    public override void StartLoad()\n    {\n        base.StartLoad();\n\n        // GameDatabase:AssetLoader will have wiped these lists, add them back\n\n        AssetLoader.BundleDefinitions.AddRange(Targets.Select(t =\u0026gt; t.Definition));\n        AssetLoader.AssetDefinitions.AddRange(Targets.SelectMany(t =\u0026gt; t.Definition.assets));\n\n \n        MatchDependencyNamesToDefinitions();\n\n        foreach (var dependenciesNotMet in Targets.Where(t =\u0026gt; !t.Definition.dependenciesFound))\n            Debug.LogWarning(\u0022The following dependency/dependencies for \u0022 \u002B dependenciesNotMet.File.url \u002B\n                                \u0022 are missing: \u0022 \u002B\n                                string.Join(\u0022,\u0022, dependenciesNotMet.Definition.dependencyNames.ToArray()));\n\n        Targets.RemoveAll(t =\u0026gt; !t.Definition.dependenciesFound);\n        Targets.Sort(new BundleComparer());\n\n#if DEBUG\n        foreach (var t in Targets)\n        {\n            Log.Warning(\u0022Will load: \u0022 \u002B t.Definition.name);\n\n            foreach (var d in t.Definition.dependencyBundles)\n                Log.Warning(\u0022  has dependency: \u0022 \u002B d.urlName \u002B \u0022, \u0022 \u002B d.path);\n        }\n#endif\n\n        StartCoroutine(BeginLoading());\n\n    }\n\n    public override float ProgressFraction()\n    {\n        return Targets.Count == 0 ? 1f : _currentTarget / (float) Targets.Count;\n    }\n\n    public override string ProgressTitle()\n    {\n        return _progressTitle;\n    }\n\n\n    private static void MatchDependencyNamesToDefinitions()\n    {\n        foreach (var target in Targets)\n            target.Definition.dependenciesFound = CollectDependencies(target.Definition, out target.Definition.dependencyBundles);\n    }\n\n\n\n    private static bool CollectDependencies(BundleDefinition definition, out List\u0026lt;BundleDefinition\u0026gt; dependencyDefinitions)\n    {\n        dependencyDefinitions = new List\u0026lt;BundleDefinition\u0026gt;();\n\n        foreach (var dependencyName in definition.dependencyNames)\n        {\n            var dependencyDefinition =\n                AssetLoader.LoadedBundleDefinitions.FirstOrDefault(bd =\u0026gt; bd.urlName == dependencyName) ??\n                AssetLoader.BundleDefinitions.FirstOrDefault(bd =\u0026gt; bd.urlName == dependencyName);\n\n            if (dependencyDefinition != null)\n                dependencyDefinitions.Add(dependencyDefinition);\n        }\n\n        return dependencyDefinitions.Count == definition.dependencyNames.Count;\n    }\n\n\n    private IEnumerator BeginLoading()\n    {\n        _currentTarget = 0;\n\n        for (; _currentTarget \u0026lt; Targets.Count; \u002B\u002B_currentTarget)\n        {\n            try\n            {\n                var current = Targets[_currentTarget];\n                AssetDefinition prefabDefinition = null;\n\n                if (!GetPrefabAssetDefinition(current.Definition, out prefabDefinition))\n                    continue;\n\n                var title = \u0022Loading RU: \u0022 \u002B Targets[_currentTarget].File.url;\n                _progressTitle = title;\n                Debug.Log(title);\n\n                _busy = true;\n\n                AssetLoader.LoadAssets(l =\u0026gt;\n                {\n                    AddModel(l, current.File);\n                }, prefabDefinition);\n            }\n            catch (Exception e)\n            {\n                Debug.LogError(\u0022Failed to load target due to: \u0022 \u002B e);\n                _busy = false;\n            }\n\n            while (_busy) yield return null;\n            \n        }\n\n        Targets.Clear();\n    }\n\n\n    private void AddModel(AssetLoader.Loader loader, UrlDir.UrlFile file)\n    {\n        _busy = false;\n\n        try\n        {\n            var prefab = (GameObject) loader.objects.Single();\n\n            prefab.name = file.url;\n            GameDatabase.Instance.databaseModel.Add(prefab);\n            GameDatabase.Instance.databaseModelFiles.Add(file);\n        }\n        catch (Exception e)\n        {\n            Debug.LogError(\u0022Failed to load RuPart\u0022);\n        }\n    }\n\n\n    private static bool GetPrefabAssetDefinition(BundleDefinition definition, out AssetDefinition prefabDefinition)\n    {\n        var assets = definition.GetAssetsWithType(typeof (GameObject));\n\n        if (assets.Length != 1)\n        {\n            prefabDefinition = null;\n            return false;\n        }\n\n        prefabDefinition = assets.First();\n        return true;\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-07-15T17:09:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222676930\u0022 data-ipsquote-contentid=\u0022143809\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221468571581\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHave you considered writing a DatabaseLoader instead of using a PartModule? Here\u0027s a version of mine I tweaked to handle dependencies like you want that can replace the Mu exporter. Create an AssetBundle with exactly one GameObject prefab in it, rename the extension to \u0022ru\u0022 and then treat it exactly like you would a .mu. It supports loading dependencies from KSPs and other RUs. It\u0027s still rough proof of concept code though so there are probably some bugs\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nVery interesting; I was not aware such capability existed.\u00A0 Ohh what I would give for for full source access and a properly documented API.\u00A0 Thanks for the detailed code example, should go a long ways towards helping me get this all sorted out.\n\u003C/p\u003E\n\u003Cp\u003E\nWill do some investigation on this tonight; seems like it will end up being a more compatible way to load those models up.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m still curious though as to how the textures for models loaded through AssetBundles are supposed to work/going to work; during my investigations last night I could not get the textures to load up properly when included in the bundle with the model, nor could I find how to use existing textures from other sources.\u00A0 The materials appeared to load up properly (appeared to, but could not verify due to texture problems), but the textures were simply \u003Cabbr title=\u0022Missing in action\u0022\u003EMIA\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nWith this database-loader driven method, can the textures simply reside in the same folder as the .ru model (asset-bundle) file (as would be done with a .mu)?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nAnyhow, thanks again for the information, will update later this evening after I have time to play around with it a bit.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2016-07-15T19:36:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222677413\u0022 data-ipsquote-contentid=\u0022143809\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221468602559\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n39 minutes ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWith this database-loader driven method, can the textures simply reside in the same folder as the .ru model (asset-bundle) file (as would be done with a .mu)?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe textures will be embedded inside the bundle itself (unless they\u0027ve been specifically assigned to another bundle: .ru or .ksp will work). You could definitely have it override whatever texture was in the bundle though\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-07-16T16:06:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222676930\u0022 data-ipsquote-contentid=\u0022143809\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221468571581\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn Friday, July 15, 2016 at 2:33 AM, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHave you considered writing a DatabaseLoader instead of using a PartModule?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks again for the hint towards and examples on the DatabaseLoader method; it did turn out to be a much cleaner implementation, and allowed me to load the models to be accessed just like any other while using textures just as any other model would (e.g. textures are not in any bundle and reside in the folder with the model).\n\u003C/p\u003E\n\u003Cp\u003E\nI had to do manual re-assignment of the textures as they were not part of the bundle that I exported, but the texture names were present in the Material for the model, so was easy enough to recover them / find them and slot them into the material.\u00A0 This allows for re-use of existing textures from other models / shared textures / anything else that could be done with a .mu model.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll post up my bit of code after I do some cleanup and further testing.\u00A0 It is certainly working well with this one simple test case, but there is always a chance for bugs/issues as it gets used for more complex setups.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-16T16:14:33Z\u0022 title=\u002207/16/2016 04:14  PM\u0022 data-short=\u00227 yr\u0022\u003EJuly 16, 2016\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-07-30T22:52:48Z","Content":"\n\u003Cp\u003E\nNVM got it wrong.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-09-30T22:07:59Z\u0022 title=\u002209/30/2016 10:07  PM\u0022 data-short=\u00227 yr\u0022\u003ESeptember 30, 2016\u003C/time\u003E by JPLRepo\u003C/strong\u003E\n\u003C/span\u003E\n"}]}