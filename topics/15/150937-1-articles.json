{"TopicId":150937,"ForumId":15,"TopicTitle":"No Alpha/Cutoff in part list","CreatedByName":"Sharpy","CreatedById":145504,"CreatedDateTime":"2016-10-27T08:24:53Z","PageNum":1,"Articles":[{"CreatedByName":"Sharpy","CreatedById":145504,"CreatedDateTime":"2016-10-27T08:24:53Z","Content":"\n\u003Cp\u003E\nI have a part, where a rather complex \u0027set of holes\u0027 in the shape is achieved through the KSP/Alpha/Cutoff shader.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd it works just fine in Blender, Unity, KSP \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, KSP flight... except not in the part \u0022thumbnails\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022FiB34Zt.png\u0022 class=\u0022ipsImage\u0022 src=\u0022http://i.imgur.com/FiB34Zt.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nOn the right, the part \u0027deployed\u0027 in \u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E. On the left (upper left corner) - the part as seen in part list of \u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E, \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E and R\u0026amp;D.\n\u003C/p\u003E\n\u003Cp\u003E\nHow can I get it to render the transparent areas correctly in the part list?\n\u003C/p\u003E\n"},{"CreatedByName":"InsaneDruid","CreatedById":137849,"CreatedDateTime":"2016-10-27T11:03:13Z","Content":"\n\u003Cp\u003E\nSlightly OT: I would not built this using alpha tested textures in the first place.\n\u003C/p\u003E\n\u003Cp\u003E\nThe shape can be built by approx. 92 additional vertices per side (2*10 per trapezoid hole, plus 2*6\u002B for the middle hole) which is near nothing. But it would solve the horrid aliasing that all alpha testing produces, and that can only be reduced by using super sampling transparency antialiasing, which in turn will make the part eat probably more fps than its all-solid-mesh counterpart, that can be anti-aliased more cheaply. (And doesn\u0027t look like made of cardboard).\n\u003C/p\u003E\n"},{"CreatedByName":"Sharpy","CreatedById":145504,"CreatedDateTime":"2016-10-27T11:26:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222825758\u0022 data-ipsquote-contentid=\u0022150937\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221477566193\u0022 data-ipsquote-userid=\u0022137849\u0022 data-ipsquote-username=\u0022InsaneDruid\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 minutes ago, InsaneDruid said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSlightly OT: I would not built this using alpha tested textures in the first place.\n\u003C/p\u003E\n\u003Cp\u003E\nThe shape can be built by approx. 92 additional vertices per side (2*10 per trapezoid hole, plus 2*6\u002B for the middle hole) which is near nothing. But it would solve the horrid aliasing that all alpha testing produces, and that can only be reduced by using super sampling transparency antialiasing, which in turn will make the part eat probably more fps than its all-solid-mesh counterpart, that can be anti-aliased more cheaply. (And doesn\u0027t look like made of cardboard).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe \u0027horrid aliasing\u0027 is caused by the part being really tiny, and the screenshot taken in a really small window of KSP set to absolute minimum parameters (this computer really can\u0027t handle more; the one at home is much better and it looks much better there too.) In every normal configuration that would be unnoticeable. And the whole thing being 64 vertices - 368 extra vertices is a rather significant growth. \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E Plus I\u0027m pretty sure a little more TLC to the texture would fix the worst of aliasing woes.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"InsaneDruid","CreatedById":137849,"CreatedDateTime":"2016-10-27T12:01:26Z","Content":"\n\u003Cp\u003E\n400 Vertices would be much in 1995. \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003EDrake in drakes fortune 2, drake was 30k, main characters were 15-30k, basic enemies were 12-15k, in gears of war Marcus was 15k, Alyx in halflife 2 was 8k, back in 2004, shepherd in mass effect is 20-25k depending on the weapons and armor. (Source \u003C/em\u003E\u003Ca href=\u0022https://forum.unity3d.com/threads/3d-model-polygon-count-how-much-is-optimal.54832/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://forum.unity3d.com/threads/3d-model-polygon-count-how-much-is-optimal.54832/)\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs I often say there is a mod where a single parachute (!) has about 70000k, and performance is ok, and nobody seems to notice. IMHO, people are too much \u0022afraid\u0022 of using some vertices here and there where it really would help. Sure there is the rule of diminishing returns and a sphere with 400000 polys will not that much better than with 4000, but (physiqued) part count, count and shape of colliders (sphere\u0026lt;capsule\u0026lt;box\u0026lt;mesh collider in terms of fps hit) are much more a problem in ksp that pure vertex count. Don\u0027t overdo it, and try to optimize where possible, but don\u0027t over-optimize.\n\u003C/p\u003E\n\u003Cp\u003E\nThe Unity Online Manual sees vertex count as a \u0022less-common bottleneck\u0022:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u0022 The GPU has too many vertices to process. The number of vertices that is acceptable to ensure good performance depends on the GPU and the complexity of vertex shaders. Generally speaking, aim for no more than 100,000 vertices on mobile. \u003Cstrong\u003EA PC manages well even with several million vertices\u003C/strong\u003E, but it is still good practice to keep this number as low as possible through optimization.\u0022\u003C/em\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://docs.unity3d.com/Manual/OptimizingGraphicsPerformance.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://docs.unity3d.com/Manual/OptimizingGraphicsPerformance.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs for aliasing, the problem with aliasing is not a still image, its when parts are moving and all the edges are like moving sawtooth.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBack to your initial question though:\n\u003C/p\u003E\n\u003Cp\u003E\nAs also the squad launchclamp mesh is not alpha tested in the preview window, I think it is not possible at all. You could make the visual impact less obvious by not making the transparent areas black, but rather a colour not too different from the part and or the background. Generally speaking, you should avoid colouring the transparent areas differently to the rest of the parts or only colour it a tiny bit darker than the opaque material to avoid the black artefacts around the alpha tested area. It would look better if there was just the aliasing, but not a blackish border AND the aliasing around the holes.\n\u003C/p\u003E\n"}]}