{"TopicId":66013,"ForumId":15,"TopicTitle":"Main and Nose Landing Gear Rigging/Animating","CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-03-16T22:51:29Z","PageNum":5,"Articles":[{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-13T22:51:44Z","Content":"\n\u003Cp\u003EI adjusted the target\u0027s positions, but whether the two arms are in a dependency loop or not doesn\u0027t appear to affect their behaviour in any appreciable sense. I\u0027ve since adjust the heirarchy order to do without the loop, keeping the new target\u0027s positions at the same point where the two arm tips join. Originally I kept the upper arm target offset beyond the tip. \u003C/p\u003E\u003Cp\u003EWhat you are getting might have to do with the order the CONSTRAINFX blocks are ordered in the config file, they are processed in that order each frame, and if the order changes, their orientation per frame changes as well.\u003C/p\u003E\u003Cp\u003Ethere is one benefit of setting up everything correctly before exporting though. the part list icon doesn\u0027t have active constraints, so it shows the part as it is exported and you get this, \u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/vTlcDAi.jpg\u0022 alt=\u0022vTlcDAi.jpg\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-13T22:58:14Z\u0022 title=\u002209/13/2014 10:58  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 13, 2014\u003C/time\u003E by nli2work\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-13T23:02:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003EI adjusted the target\u0027s \u003Cstrong\u003Epositions\u003C/strong\u003E...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis has nothing to do with what I\u0027ve been saying. I\u0027m not changing the positions of the look-at targets directly. I\u0027m talking about changing their relative position in the space of the gear leg, by rotating the arm objects. Maybe some pictures will help. Give me a few minutes.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Ethere is one benefit of setting up everything correctly before exporting though. the part list icon doesn\u0027t have active constraints\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI didn\u0027t know; that\u0027s good info. Thanks.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEDIT\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EHere it is. If you rotate the arms so that the targets are in front, then the arms will meet in front. If you rotate the arms so the targets are in the back, then the arms will meet in the back.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/wxnBuBC.png\u0022 alt=\u0022wxnBuBC.png\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-13T23:40:01Z\u0022 title=\u002209/13/2014 11:40  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 13, 2014\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-11-02T16:22:41Z","Content":"\n\u003Cp\u003EIf anyone has experience with Firespitter FSWheel module, then if you could help, that would be appreciated.\u003C/p\u003E\u003Cp\u003EI\u0027ve rigged the main (two-wheel) landing gear in the same way as the nose gear, with the exception of the steering object and module, which I left out for obvious reasons. I tried following the documentation, but it looks like the wheelcolliders are being ignored completely. There\u0027s no suspension and the part drags on the ground without rolling. I\u0027m using the latest (afaik still unreleased) 0.25 version of Firespitter.dll. By the way I\u0027ve deleted everything except that dll. I know it\u0027s partly working at least because the parts that use FSAnimateGeneric are working correctly.\u003C/p\u003E\u003Cp\u003EThe cfg\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPART\u003Cbr\u003E{\u003Cbr\u003E// --- general parameters ---\u003Cbr\u003Ename = KipEngSkylonMainGearLeft\u003Cbr\u003Emodule = Part\u003Cbr\u003Eauthor = Cpt. Kipard\u003Cbr\u003E\u003Cbr\u003E// --- asset parameters ---\u003Cbr\u003Escale = 1.0\u003Cbr\u003ErescaleFactor = 1\u003Cbr\u003E\u003Cbr\u003EMODEL\u003Cbr\u003E{\u003Cbr\u003E\tmodel = KipEng/parts/SkylonC2/SkylonMainGearLeft\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E// --- FX definitions ---\u003Cbr\u003E\u003Cbr\u003E// --- Sound FX definition ---\u003Cbr\u003E\u003Cbr\u003E// --- editor parameters ---\u003Cbr\u003ETechRequired = landing\u003Cbr\u003EentryCost = 3200\u003Cbr\u003Ecost = 450\u003Cbr\u003Ecategory = Utility\u003Cbr\u003Esubcategory = 0\u003Cbr\u003Etitle = Skylon Main Gear Left\u003Cbr\u003Emanufacturer = Kip. Engineering\u003Cbr\u003Edescription = Skylon Main Gear Left\u003Cbr\u003E\u003Cbr\u003E// --- node definitions ---\u003Cbr\u003E// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003Cbr\u003EattachRules = 1,0,0,0,0\u003Cbr\u003E\u003Cbr\u003ENODE\u003Cbr\u003E{\u003Cbr\u003E\tname = gearnode\u003Cbr\u003E\ttransform = n_gear\u003Cbr\u003E\tsize = 2\u003Cbr\u003E\tmethod = FIXED_JOINT\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E// --- standard part parameters ---\u003Cbr\u003Emass = 2\u003Cbr\u003EdragModelType = default\u003Cbr\u003Emaximum_drag = 0.3\u003Cbr\u003Eminimum_drag = 0.2\u003Cbr\u003EangularDrag = 1\u003Cbr\u003EcrashTolerance = 7\u003Cbr\u003EmaxTemp = 1800\u003Cbr\u003EcrashTolerance = 50\u003Cbr\u003EbreakingForce = 50\u003Cbr\u003EbreakingTorque = 50\u003Cbr\u003E\u003Cbr\u003E// --- modules ---\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = FSwheel\u003Cbr\u003E\twheelColliderName = wheelCollider, wheelCollider2\u003Cbr\u003E\tboundsCollider = Bounds\u003Cbr\u003E\twheelMeshName = Wheel, Wheel2\u003Cbr\u003E\tsuspensionParentName = suspensionParent\u003Cbr\u003E\tnumberOfWheels = 2\u003Cbr\u003E\twheelRotationAxis = 1,0,0\u003Cbr\u003E\tdisableColliderWhenRetracted = False\u003Cbr\u003E\tdisableColliderWhenRetracting = False\u003Cbr\u003E\tanimationName = MainGearAnimStandalone\u003Cbr\u003E\tanimationLayer = 1\u003Cbr\u003E\tdeploymentCooldown = 0.5\u003Cbr\u003E\tbrakeTorque = 15\u003Cbr\u003E\tbrakeSpeed = 0.5\u003Cbr\u003E\trotationAdjustment = 1\u003Cbr\u003E\tdeployedDrag = 0.5\u003Cbr\u003E\tretractedDrag = 0\u003Cbr\u003E\tguiActiveUnfocused = False\u003Cbr\u003E\tunfocusedRange = 5\u003Cbr\u003E\thasMotor = False\t\u003Cbr\u003E\tdebugMode = True\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E// ------------ Torque Arms ---------------\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = FXModuleLookAtConstraint\u003Cbr\u003E\tCONSTRAINLOOKFX \u003Cbr\u003E\t{\u003Cbr\u003E\t\ttargetName = MainTorqueArmTop1Tip\u003Cbr\u003E\t\trotatorsName = MainTorqueArmBottom1\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tCONSTRAINLOOKFX\u003Cbr\u003E\t{\u003Cbr\u003E\t\ttargetName = MainTorqueArmBottom1Tip\u003Cbr\u003E\t\trotatorsName = MainTorqueArmTop1\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tCONSTRAINLOOKFX \u003Cbr\u003E\t{\u003Cbr\u003E\t\ttargetName = MainTorqueArmTop2Tip\u003Cbr\u003E\t\trotatorsName = MainTorqueArmBottom2\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tCONSTRAINLOOKFX\u003Cbr\u003E\t{\u003Cbr\u003E\t\ttargetName = MainTorqueArmBottom2Tip\u003Cbr\u003E\t\trotatorsName = MainTorqueArmTop2\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-11-02T17:15:17Z","Content":"\n\u003Cp\u003EI\u0027m gonna hazzard a guess, you need two suspensionParent objects? two different wheelColliders fighting over control of 1 suspensionParent probably does strange things.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-11-02T18:39:28Z","Content":"\n\u003Cp\u003EI\u0027m not sure what to do in that case. The suspensionParent and the wheelCollider and wheelCollider2 are on the same hierarchical level, and there\u0027s only one suspension mesh, which should have both wheels attached to it. both wheelColliders should influence the suspension, depending on which one of them is on the ground. Most of the time it\u0027ll be both of them.\u003C/p\u003E\u003Cp\u003EI tried dividing the hierarchy branches up, \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eand even tried it with just one wheel\u003C/span\u003E; it\u0027s the same story.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003E\u003Cstrong\u003EEdit\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EI made a spelling mistake in the cfg. It works with one wheel, except the entire branch of the suspensionParent is offset to be in line with the wheelCollider.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-02T18:51:42Z\u0022 title=\u002211/02/2014 06:51  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 2, 2014\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-02T20:53:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003Eboth wheelColliders should influence the suspension, depending on which one of them is on the ground. Most of the time it\u0027ll be both of them.\u003Cp\u003EI made a spelling mistake in the cfg. It works with one wheel, except the entire branch of the suspensionParent is offset to be in line with the wheelCollider.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003EFrom what I remember of the FS code, you\u0027re not going to get away with that. Nor with the stock module. What\u0027s happening is this: The wheels are parsed into lists of wheel colliders and suspension components. The code runs through the lists moving the named suspension gameobjects the correct amount after reading the corresponding \u003C/span\u003Esuspension\u003Cspan style=\u0022font-size:10px;\u0022\u003E compression modelled by the wheel collider raycast. This happens sequentially every frame, so your one suspension GO is getting moved initially by the first set of definitions in the list, then another amount by the second (this should explain the offset). You\u0027re thinking it will average the two, which it will not do (though I like your thinking!). Details may vary, but that\u0027s it roughly.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003EThe only option you\u0027ve got (without writing a bunch of code to reinvent the wheel) is to use the trick with the collider placed right under the strut to model its movement, then create the illusion that the swing beam works by using a second wheel collider at the rear with a LookAt moving it. You don\u0027t have to have the rear set hanging lower than the front if you don\u0027t want that particular setup. I know it doesn\u0027t seem \u0027right\u0027, but it\u0027s easy and effective. I posted a couple of screen grabs somewhere, though I can\u0027t remember where...\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003EBTW, there are some tricks you can use with the LookAt controllers which may help if they decide to go a bit weird like they were for nli2work on the torque arms, but hopefully all is well on that front. Looks good though, and glad you got the bendy joints nailed.\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-11-02T21:06:59Z","Content":"\n\u003Cp\u003EIf you could find those screen grabs that would help. I\u0027m not sure what you mean by moving the collider with LookAt.\u003C/p\u003E\u003Cp\u003EIf I understand the rest though I should place the main wheelCollider between the wheel meshes, right under the suspension.\u003C/p\u003E\u003Cp\u003EThe torque arms are all set, thanks.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-02T21:27:38Z","Content":"\n\u003Cp\u003EGood stuff!\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/omXEJuW.png\u0022 alt=\u0022omXEJuW.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EWhat I did was this: configured the central collider to support the full weight the leg needs to take. The rear collider I configured with a very soft spring. You don\u0027t want it supporting weight, it\u0027s there to drive movement of a gameobject which the swing arm points towards. The swing arm Z axis is aligned to the right in that view, so as the suspension GO of the rear wheel gets moved the swing arm follows. No mesh attached to the rear GO, it\u0027s just there to derive the swing arm angle via the LookAt. \u003C/p\u003E\u003Cp\u003EIt\u0027s what I used to set this up:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/hagRnLzNdjk?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EYou can play with placement and setting to derive the particular motion you want, which is probably a little different to the 747.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-11-02T22:04:11Z","Content":"\n\u003Cp\u003EActually the swing beam is not moveable. I didn\u0027t know FS could do that. Also is that example using FS or your plug-in? I tried that hierarchy, as closely as possible, because the objects are slightly different, and it\u0027s not working again.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-02T22:42:24Z","Content":"\n\u003Cp\u003EI honestly can\u0027t remember! It\u0027s a topological trick though, rather than something plugin specific, so will be the same if you use KF, FS or stock. I\u0027ve been playing with this sort of stuff extensively doing crazy things for my wheels and tracks, so I\u0027ve got fairly good at pushing the tools to do things you wouldn\u0027t necessarily think they could do. I don\u0027t have massive experience with FS, but usually not working at all means it\u0027s got its knickers in a twist about a named GO not being present or something like that. IIRC, the error handling in FS is good enough to disable the module, rather than spew ugly null-ref spam over the log. Feel free to send the part over though and I\u0027ll see what\u0027s going on.\u003C/p\u003E\u003Cp\u003EIs the swing beam really not movable? Looked like it was designed to follow the angle of the runway against the plane to save overloading the rear wheel. I suppose they\u0027re pseudo-technical concept drawings you\u0027re working from though, so the guy that drew them may have been an artist not an engineer and anything is possible. Annoyingly, that actually makes it more difficult! I\u0027ll have to think on that one...\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-11-02T22:46:23Z","Content":"\n\u003Cp\u003Ehere\u0027s what I deciphered from Lo-fi\u0027s rig. \u003Cimg src=\u0022http://i.imgur.com/KmiOtTT.jpg\u0022 alt=\u0022KmiOtTT.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003Ethe 2ndary wheelColliderR moves a LookAt Target for the main beam that holds the two sets of wheels. the main wheelCollider does all the visual work of suspension and spinning the wheels.\u003C/p\u003E\u003Cp\u003EwheelColliderR has longer suspension and very light spring, when it hits the ground, it moves the LookAt Target up; and the main beam will rotate to look at the target, and rotates both sets of wheels about it\u0027s pivot, front set down, rear set up.\u003C/p\u003E\u003Cp\u003Ethen the main wheelCollider hits the ground, and that compresses the suspension piston and all the torque arms that are driven by the main compression action.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-02T23:08:38Z","Content":"\n\u003Cp\u003EPerfect explanation \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-11-02T23:09:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EI honestly can\u0027t remember! It\u0027s a topological trick though, rather than something plugin specific, so will be the same if you use KF, FS or stock. I\u0027ve been playing with this sort of stuff extensively doing crazy things for my wheels and tracks, so I\u0027ve got fairly good at pushing the tools to do things you wouldn\u0027t necessarily think they could do. I don\u0027t have massive experience with FS, but usually not working at all means it\u0027s got its knickers in a twist about a named GO not being present or something like that. IIRC, the error handling in FS is good enough to disable the module, rather than spew ugly null-ref spam over the log. Feel free to send the part over though and I\u0027ll see what\u0027s going on.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks. I\u0027ll do it tomorrow.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EIs the swing beam really not movable? Looked like it was designed to follow the angle of the runway against the plane to save overloading the rear wheel. I suppose they\u0027re pseudo-technical concept drawings you\u0027re working from though, so the guy that drew them may have been an artist not an engineer and anything is possible. Annoyingly, that actually makes it more difficult! I\u0027ll have to think on that one...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually the gear is based on photos of a disassembled Concorde main gear, and I made the model as realistic as possible in the hopes that one day the beam might move. Right now if I got your way working, I would need nine LookAt constraints. Four for the torque arms, four for the beam pistons, and one for the beam itself.\u003C/p\u003E\u003Cp\u003EFor the moment though it\u0027s all joined into one mesh.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#006400;\u0022\u003Eedit\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#006400;\u0022\u003EI just realised I still can\u0027t do that because the retract animation relies on the beam being parallel to the ground. That\u0027s why I was so interested in Orbitus\u0027s plugin development. I hoped he\u0027d make it possible.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Ehere\u0027s what I deciphered from Lo-fi\u0027s rig.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think I get it now. If I had the config it would make everything clear, especially knowing what module it\u0027s using and all the settings.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-02T23:16:48Z\u0022 title=\u002211/02/2014 11:16  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 2, 2014\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-11-03T21:03:17Z","Content":"\n\u003Cp\u003EI just realised another problem. The way lo-fi configured that gear is too imprecise. The wheelcollider moves up and down, but the attachment point for the wheel mesh on the beam will not be moving up and down. it will follow an arc obviously because the beam is rotating. It\u0027s no good. There will be some discrepancy between the respective vertical position of wheelR and wheelColliderR\u003C/p\u003E\n"},{"CreatedByName":"mintme","CreatedById":61058,"CreatedDateTime":"2016-02-21T07:52:48Z","Content":"\n\u003Cp\u003E\nHey Guys, i have been following along most of the way, everything working mint apart from the spring just keep pushing my vessel up and up. its obvious the link targets and arms are not working together i am using nli2work\u0027s lateral landing gear for practice. i\u0027m wondering if someone has the working config for it. here\u0027s a pic of where i\u0027m at (\u003Ca href=\u0022https://www.dropbox.com/s/m8o3f37sx1w3dkx/config_unity.jpg?dl=0\u0022 rel=\u0022external nofollow\u0022\u003EConfig \u0026amp; Unity Example\u003C/a\u003E). like i said all working mint bar the constraints. could someone please help me.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks,\n\u003C/p\u003E\n\u003Cp\u003E\nMintme\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-02-21T08:07:26Z\u0022 title=\u002202/21/2016 08:07  AM\u0022 data-short=\u00228 yr\u0022\u003EFebruary 21, 2016\u003C/time\u003E by mintme\u003C/strong\u003E\n\u003C/span\u003E\n"}]}