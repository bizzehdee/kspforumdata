{"TopicId":75142,"ForumId":15,"TopicTitle":"Rover Wheel problems, New fault finding info UNITY wheel build package","CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2014-06-15T19:15:44Z","PageNum":1,"Articles":[{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2014-06-15T19:15:44Z","Content":"\n\u003Cp\u003ERover Wheels the black art.\u003C/p\u003E\u003Cp\u003ESo I\u0027ve challenged myself to make at least one of every type of part, mostly because in a couple of years of modding KSP there are a couple of items that I fail on. The most annoying of which are rover wheels and landing gear, in fact any wheel has confounded me, and I\u0027ve tried many times.\u003C/p\u003E\u003Cp\u003EIt seems that no real info on wheels exist apart from the \u003Ca href=\u0022http://i.imgur.com/XHZoV2G.png\u0022 rel=\u0022external nofollow\u0022\u003Estock rover wheel pic\u003C/a\u003E thats linked to every time this subject comes up and really for a complete noob it\u0027s not a lot of help.\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/WGZg9\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003EImportant info that you need to know, most of the object in the hierarchy are colliders or bare named GameObject transforms, the rotation of the models transform/pivots is critical to a wheels functioning. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEDIT Much later still\u003C/strong\u003E More info you need to know,\u003C/p\u003E\u003Cp\u003E I was troubled by gaps in the suspension arms on one of my latest tests, so as usual i began tweaking and reloading. I have now discovered the \u003Cstrong\u003E suspensionTraverse\u003C/strong\u003E, transform sets the apparent arc of the suspension, my trouble was due to the wheels having a large offset, that is that the dish and mounting face of the wheel was set way out toward the front face of the wheel on a wheel half a meter wide so placing the suspensionTraverse transform on the bottom bracket (see item bracket in labelled pic) had the effect of increasing the arc, spreading the suspension joints to far apart, the remedy is to move the suspensionTraverse transform closer to the center of the wheel. Experiments continue.......\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENewEdit\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EFurther hours past.... So it\u0027s been a productive week, i\u0027ve got this wheel thing pretty much nailed now, now to experiment.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENotes on transforms\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAs mentioned earlier on in this post you need several game object transforms for various parenting jobs, my preferred method , now I\u0027ve learned sumfin:P ,\u003C/p\u003E\u003Cp\u003E Once you have your model in the scene and you have the wheel at 0,0,0 , and before you do anything else create the transforms you will need by selecting GameObject and selecting create empty, set this game object at 0\u00270\u00270 which should be the center of your wheel, if it\u0027s not find out why, rename that game object to suspensionNeutralPoint, steering, suspensionTraverse, trackSteering or whatever transform you need, and leave them outside the hierarchy until you need them. This way they all be done, they\u0027ll all have a 0,0,0 origin to start and trust me it\u0027ll make the whole job a lot quicker\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENOTE, although these transforms all start at 0,0,0 you will move the trackSteering position after this to another location, but all the others stay at that point in space, note also that they will be moved into different parts of the hierarchy for use, \u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIt seems all transforms are quite happy with the std rotation applied by unity except those parts named susp1-1, 1-2 etc these will need to be rotated so the the Z axis face each other along the component, this is due to the LOOKFX that is used to ensure the alignment of these parts\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#0000FF;\u0022\u003EBefore you combine these transforms with your GameObject make sure that the all all correctly rotated and scaled, scale should be 1,1,1, .\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#0000FF;\u0022\u003E Once combined into the hierarchy it can be a real pain to sort out, and will make things very weird if the error makes it into game \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003ENotes on Brakes and Braking speed\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EHi all brake torque is one of those many things that will never be perfect for all occasions, ideally it would be adjustable for each rover you built. However watch this space, as in the near future the standard ksp rover will be rebuilt to use a very special and very clever custom wheel module, that makes the wheels behave so much better than the standard module that is controlling the wheels currently . In the meantime you can either (A) alter the brake speed and brake torque in the cfg, by altering the following\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EbrakeTorque = 10\u003Cbr\u003E\tbrakeSpeed = 0.5\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBrake torque is fairly obviously the amount of torque applied to stop the wheel rotating, and brake speed less obviously is the speed at which the braking torque goes from 0 to full on, tests have proved that altering the brake speed is a better adjustment than brake torque, as it still allows firstly for a decent stopping power, while creating the effect of heavier vehicles taking longer than light vehicles to come to a stop and a much nicer effect of adjust brake speed is that you can safely apply small amounts of braking in low g without taking off or flipping.\u003C/p\u003E\u003Cp\u003E(\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E build heavier rovers\u003C/p\u003E\u003Cp\u003Eor of course \u00A9 put up with it for a little while\u003C/p\u003E\u003Cp\u003E \u003Cem\u003E \u003C/em\u003E\u003Cstrong\u003E\u003Cem\u003EBelow is my original post left here just in case somebody else runs into the same issues and by following the tips and steps above will soon achieve wheel nirvana\u003C/em\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E\u003Cspan style=\u0022color:#A9A9A9;\u0022\u003E\u003Cem\u003ENow this is my problem I have created after many hours, working, steering etc all functions are there, rover wheels, the snag is the suspension seems way too soft, I ve tried, setting the wheel colliders spring rate to some stupid high figure but this just makes the wheel behave bizarrely, I\u0027ve tried moving the models origin from the center of the mount being set on zero, setting the wheel center mount as zero, the bottom of the tire as zero and apart from more weirdness it\u0027s been very unproductive.\u003C/em\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E\u003Cspan style=\u0022color:#A9A9A9;\u0022\u003E\u003Cem\u003EI\u0027m fairly convinced that its something to do with the wheel transforms/pivots but can\u0027t work it out. My hierarchy differs only in the position of parts susp3-1 and 3-1 I changed this from the example as they did not move in the manner i wanted but that aside I have two other similar models that have exactly the same layout and behave in the same way.\u003C/em\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E\u003Cspan style=\u0022color:#A9A9A9;\u0022\u003E\u003Cem\u003E You can see that in the pics of the wheels fitted to my spacecab that the vehicle seems to hover even though the wheels rotate , steer and propel the vehicle, even the brakes work. It\u0027s as if the suspensions 0 point is not where I think it should be and rather than extending the wheel collider suspension etc is contracting to place the wheel at zero, moving the model in max didnt help, could the bounds be still there ? is my hierarchy right? what am I missing???\u003C/em\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EPS yes the cab does have an\u003Ca href=\u0022http://i.imgur.com/TarU1Q3.png\u0022 rel=\u0022external nofollow\u0022\u003E IVA \u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EEDIT.... sometime later YAY Fixed\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EFixed it , turns out all my transforms are right and the wheels position really needs to be centered 0/zero, 0/zero, 0/zero, your life will be so much easier. What does matter though is how you generate the wheel collider and collision enhancer objects, I\u0027d been using a sphere then deleting the mesh render and mesh filter, although this looks OK it turn out its not, for some reason unfathomable the radius of the sphere is listed as twice its actual size, so it\u0027s really showing the diameter.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EDo this instead \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Eduplicate your wheel and drag it out of the hierarchy, you must do this otherwise if you have already attached the part tools script ,unity may start throwing nre errors,\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003Enow depending what object you want, you rename your wheel to wheelCollider or collisionEnhancer, in the case of the former now select physics and wheel collider, now remove other colliders from the duplicated wheel, also remove the mesh render and mesh filter, and lo you now have a transform with a wheel collider attached and its in exactly the right position, for the collision enhancer just add a capsule collider and remove the mesh render and mesh filter as before. \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/83200-Rover-Wheel-problems-SOLUTIONS-and-info-updated-24-July-2014-at-17-05?p=1315537\u0026amp;viewfull=1#post1315537\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003EUpdated hierarchy and multiple wheel setup in my last post\u003C/strong\u003E\u003C/a\u003E\u003Cstrong\u003E, I will get this tidied up once i get a moment\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#0000FF;\u0022\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003E\u003Cstrong\u003EAugust 23 2014Adding unity wheel package\u003C/strong\u003E\u003C/span\u003E\u003C/span\u003E\u003Cstrong\u003E \u003C/strong\u003E \u003C/p\u003E\u003Cp\u003EFor all those looking for an easy in to making Rover Wheels I have created in UNITY3 a DIY wheel package using a Squad KSP TR 2L reworked to suit.\u003C/p\u003E\u003Cp\u003EIn the package you will find a complete ready to build project.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIMPORTANT\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E To use this package create a new project in unity version 3 upwards,\u003C/p\u003E\u003Cp\u003E Once you have created an empty project access the menu at the ASSETS tab in select import package, then select custom package,\u003C/p\u003E\u003Cp\u003E Having done this browse to the location of your downloaded and unzipped unity package and select it,\u003C/p\u003E\u003Cp\u003E Unity will now import all thats needed for you to start understanding and building basic rover wheels.\u003C/p\u003E\u003Cp\u003E Plus a full set of the transforms unused for reference.\u003C/p\u003E\u003Cp\u003EAS always any questions I\u0027m happy to help when I can.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThe package is complete you will not need to add anything all Part Tools, models textures and scripts are already in place, all layers are set all tags are set, I have set all the layers I know, along with tags so this would make a starting project for anyone from novice to experienced.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe model that can be produced has been thoroughly tested in game and is suitable for 23.5 onwards\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EPossibly asked questions\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EWhy unity 3 I use unity 4.x?\u003C/p\u003E\u003Cp\u003EI made the package in unity 3 as it is a fairly common to creators version and unity 4 will open unity 3 packages without issues.\u003C/p\u003E\u003Cp\u003EWhy a TR 2L it\u0027s horrible?\u003C/p\u003E\u003Cp\u003E Mainly because its the simplest most effective design to learn with , it has the basics of suspension and steering without the complication of added extras like torque arms and shock absorbers, and the quality of wheel function that you will produce with this package is far from the TR 2L\u0027s behavior and performance. The little yellow rover in the gif animation shown in the gallery above has very similar setup to this project\u003C/p\u003E\u003Cp\u003EWill you make a package with a more funky suspension so I can see how that works?\u003C/p\u003E\u003Cp\u003EWatch this space\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/s/zvdr2emgye49b93/UnityKspBasicWheelPackage.rar?dl=1\u0022 rel=\u0022external nofollow\u0022\u003ETHE Package\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/s/6eg8dqsqnx9o6jp/UnityDemoWheel.rar?dl=1\u0022 rel=\u0022external nofollow\u0022\u003EA tested in game version of the wheel\u003C/a\u003E with CFG that you can use in your project\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cp\u003EAnd when you\u0027ve worked it out you\u0027ll have a wheel that can do this \u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/lm1PhVp.png\u0022 alt=\u0022lm1PhVp.png\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#0000FF;\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003EFault finding information\u003C/strong\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ENow that so many people are able to and actually are making wheels now, I thought a little section on how to find a fix common wheel faults.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EProblem. Wheel sinks into the ground. \u003C/span\u003E\u003C/p\u003E\u003Cp\u003Epossible cause and most likely is that the actual wheelCollider is not l on the wheelCollider layer ( layer 27 ) , If that fails always check the transforms in unity and your cfg for correct names, they are case sensitive.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EProblem. Wheel and suspension are slamming up and down at launch and whenever weight is taken off the wheel.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EThe primary and only known cause for this behavior is that the wheelCollider is interacting /hitting with another collider that is not on the wheelColidersIgnore layer (layer 26) simply sorting that will stop the cycle. Important to note that adding to this layer stops things interacting with wheelColliders, but also makes them invisible. In the case for example that one of your colliders on the base/mounting part of your model is being hit by the active wheelcollider, do not set the bases collider to the ignore layer, instead temove the base parts collider , create a GameObject in the correct location , name it base_Collider or something, and add a simple box collider to the transform, then set your base_Collider as a child of the base/mounting. \u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EProblem. Wheel hover or gaps in the suspension arms or dampers.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EThis is simply because you have transforms, that the wheel requires to be in a certain way, set up incorrectly. \u003C/p\u003E\u003Cp\u003EOr you have not allowed sufficient mesh in your model to allow for the unusual way in which stock suspension works. Unlike real world suspension which moves in an arc around it\u0027s mountings, stock KSP suspension simply moves up and down, which means the pivot points at full compression are very different to those at full extension, being much further away, the model should be built to allow this to happen.\u003C/p\u003E\u003Cp\u003EThere are plenty more I\u0027m sure but they are the most common faults I am asked about.\u003C/p\u003E\u003Cp\u003EA little soap box bit tl;dr here so tune out if you want.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EWheel building and Transform naming\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve read recently a lot of people asking if \u0022X transform has to be called jellybeans and why can\u0027t it be called furball? \u0022\u003C/p\u003E\u003Cp\u003EYou can obviously call it what you want as long as you set the appropriate values in cfg , so that the game knows where to look. But, it may be a personal but, you are just making your own life difficult.\u003C/p\u003E\u003Cp\u003E I always use exactly the same set of transforms and part names every time I build a wheel, sounds dull maybe? But this is the but it means I know exactly what everything does, where it goes and that every wheel I do will be easy on the cfg, as the parts names dont change, only requiring small changes from cut an paste. and perhaps more importantly behaves in a predictable way . Also it makes finding glitches easier because you know the x transform is always called x it should not be called X in the cfg.\u003C/p\u003E\u003Cp\u003EI can\u0027t exactly say how long it takes me to put a new wheel through unity and into game but it\u0027s minutes not hours, through no other reason that a routine has been developed that works, without having to dig around for info or reference images. So do yourself a favor get something you are happy with and stick with it and of course profit!\u003C/p\u003E\u003Cp\u003EHappy rolling.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-10T12:36:17Z\u0022 title=\u002209/10/2014 12:36  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 10, 2014\u003C/time\u003E by SpannerMonkey(smce)\u003C/strong\u003E\n\u003Cbr\u003EAdded diy unity package and download\n\u003C/span\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-16T09:50:48Z","Content":"\n\u003Cp\u003ENice work, I\u0027ve been doing similar myself \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EOne comment, though. Make the collider mesh for the wheel smaller in diameter than the WheelCollider. Its only there for if the craft tips over and the WheelCollider is no longer effective, so it doesn\u0027t drop through the ground. If it\u0027s too large, it will \u0027catch\u0027 on the terrain horribly sometimes while driving, rather than letting the simulation do its work.\u003C/p\u003E\u003Cp\u003EI\u0027ve also worked out a neat trick to make the wheel move in an arc with the suspension joints, instead of straight up and down if you\u0027re interested?\u003C/p\u003E\n"},{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2014-06-16T09:59:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003ENice work, I\u0027ve been doing similar myself \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EI\u0027ve also worked out a neat trick to make the wheel move in an arc with the suspension joints, instead of straight up and down if you\u0027re interested?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think just putting that out therre like that is a bit off:sticktongue: , so share tell all, that\u0027d make them move as they should, hopefully it resolves the push pull on the suspension arms that can create a gap between parts as well\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-16T10:41:34Z","Content":"\n\u003Cp\u003EHaha! Sorry, I shouldn\u0027t tease \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E Just didn\u0027t want to hijack your thread. It needs quite a bit of explaining as it breaks the classic hierarchy and uses some tricks with dummy objects and position/rotation controllers, so I\u0027ll do a full write-up similar to yours this evening when I have a few hours clear \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EJust quickly, this is how it looks:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/ukF5wGtxaR0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n"},{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2014-06-16T11:01:07Z","Content":"\n\u003Cp\u003EThats lovely articulation you\u0027ve got there, very interested in your method of hierarchy stacking\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-16T11:16:48Z","Content":"\n\u003Cp\u003ECheers \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E All will be revealed \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E Was going to do a write-up anyway, just been busy trying to get everything sorted for release. We need to keep sharing knowledge like this to save the next guys from reinventing the wheel (if you\u0027ll pardon the pun)!\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-16T22:37:58Z","Content":"\n\u003Cp\u003EOk, so really quickly:\u003C/p\u003E\u003Cp\u003EEver notice the entries in wheel part.cfg\u0027s that read\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE{\u003Cbr\u003E    name = FXModuleConstrainPosition\u003Cbr\u003E    matchRotation = true\u003Cbr\u003E    matchPosition = false\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = steering\u003Cbr\u003E        moversName = trackSteering\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWell, it caught may attention. Steering is a Gameobject which contains the WheelCollider. The rotation is changed when steering is activated, and the wheelcollider follows because it is a child of steering in the hierarchy. trackSteering is the container for the mesh parts - usually the axle and wheel. It is this that sets the steering axis and here is the important bit: it is told to follow the angles of the steering GameObject by this line in the .cfg. Notice well the lines \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    matchRotation = true\u003Cbr\u003E    matchPosition = false\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWe also have \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    name = FXModuleLookAtConstraint    CONSTRAINLOOKFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = MovedBySusTrav\u003Cbr\u003E        rotatorsName = WishBoneLower\u003Cbr\u003E    }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo we have two functions we can call via the .cfg that will rotate and move parts in different ways...\u003C/p\u003E\u003Cp\u003ESo, my solution is this:\u003C/p\u003E\u003Cp\u003Eby adding a few dummy objects - these have no mesh and no collision mesh. One, which I\u0027ve named MovedBySusTrav is a child of suspensionTraverse. It gets moved by the WheelCollider suspension, so it I get the wishbone to look at this dummy object, it makes the arms move correctly. However, I now need to attach all the other stuff to the end of it... I have an object called Axle which the hub and wheel attach to. Here comes the clever bit:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022%5Bimg%5Dhttp%3A//i.imgur.com/gY3QYeA.png\u0022 alt=\u0022gY3QYeA.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnother dummy object is created called RodEnd. This is placed on the end of the lower suspension arm. Now, it moves in an arc with the end of the suspension arm, but if we place the hub, wheel and axle as a child, they will rotate as well, so we use:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE{\u003Cbr\u003E    name = FXModuleConstrainPosition\u003Cbr\u003E    matchRotation = false\u003Cbr\u003E    matchPosition = true\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = RodEnd\u003Cbr\u003E        moversName = Axle\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe script ties Axle\u0027s position to RodEnd but \u003Cstrong\u003Enot its rotation!!! \u003C/strong\u003EGreat, we\u0027re half way there. You\u0027ll notice there is a dummy object called steeringDummy. the trackSteering GameObject is told to match its position using \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE{\u003Cbr\u003E    name = FXModuleConstrainPosition\u003Cbr\u003E    matchRotation = false\u003Cbr\u003E    matchPosition = true\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = trackSteeringDummy\u003Cbr\u003E        moversName = trackSteering\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E this is what ties all the mesh child objects beneath it to the arc of the suspension movement. The upper wishbone is moved by \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    name = FXModuleConstrainPosition    matchRotation = true\u003Cbr\u003E    matchPosition = false\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = steering\u003Cbr\u003E        moversName = trackSteering\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = WishBoneLower\u003Cbr\u003E        moversName = WishBoneUpper\u003Cbr\u003E    }\u003C/pre\u003E\u003Cp\u003E in the same way trackSteering follows Steering.\u003C/p\u003E\u003Cp\u003ESuspB and SuspT should now be self explanatory!\u003C/p\u003E\u003Cp\u003ENotice also:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022%5Bimg%5Dhttp%3A//i.imgur.com/JPt8T6g.png\u0022 alt=\u0022JPt8T6g.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe wheelCollider is not in the middle of the wheel, it is almost at the outside. For wide wheels, this gives greatest track width and greatest stability. Also, should it tip, it stops the collider mesh from hitting the floor until almost 90 degrees. Also, you\u0027ll see it is half the diameter of the WheelCollider setting. Again, this stops random collisions that plague the TR-2L etc.\u003C/p\u003E\u003Cp\u003EI know it\u0027s not simple, and it takes some getting your head around. Full part.cfg is here:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPART{\u003Cbr\u003Ename = KF_WheelLarge\u003Cbr\u003Emodule = Part\u003Cbr\u003Eauthor = Squad\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Emesh = LargeWheel.mu\u003Cbr\u003Escale = 1\u003Cbr\u003ErescaleFactor = 1\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Enode_attach = 0.0, 0.0, 0.0, 1.0, 0.0, 0.0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ETechRequired = advancedMotors\u003Cbr\u003EentryCost = 6000\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ecost = 580\u003Cbr\u003Ecategory = Utility\u003Cbr\u003Esubcategory = 0\u003Cbr\u003Etitle = KF-2L Large wheel for planetary operations\u003Cbr\u003Emanufacturer = Kerbal Foundaries\u003Cbr\u003Edescription = Optimised for Kerbin straight out of its wooden crate - though tweakable for higher gravity - this wheel is designed for large, high-mobility planetary rovers. Criticised for being power-hungry, but never for being over powered!\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EattachRules = 0,1,0,1,0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Emass = 0.5\u003Cbr\u003EdragModelType = default\u003Cbr\u003Emaximum_drag = 0.3\u003Cbr\u003Eminimum_drag = 0.2\u003Cbr\u003EangularDrag = 1\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EmaxTemp = 3600 \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EcrashTolerance =3000\u003Cbr\u003EbreakingForce = 5000\u003Cbr\u003EbreakingTorque = 5000\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = ModuleWheel\u003Cbr\u003E    hasMotor = true\u003Cbr\u003E    resourceName = ElectricCharge\u003Cbr\u003E        resourceConsumptionRate = 4.0\u003Cbr\u003E    canSteer = true\u003Cbr\u003E    controlAxisType = Forward\u003Cbr\u003E    steeringModeType = AutomaticSteer\u003Cbr\u003E    brakeTorque = 150\u003Cbr\u003E    brakeSpeed = 2.5\u003Cbr\u003E    impactTolerance = 3000\u003Cbr\u003E    overSpeedDamage = 60\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    WHEEL\u003Cbr\u003E    {\u003Cbr\u003E        wheelName = wheel\u003Cbr\u003E        wheelColliderName = wheelCollider\u003Cbr\u003E        suspensionTransformName = suspensionTraverse\u003Cbr\u003E        suspensionNeutralPointName = suspensionNeutralPoint\u003Cbr\u003E\u003Cbr\u003E        rotateX = 1\u003Cbr\u003E        rotateY = 0\u003Cbr\u003E        rotateZ = 0\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    steeringCurve\u003Cbr\u003E     {\u003Cbr\u003E        key = 0 27.5\u003Cbr\u003E     key = 15 17.5\u003Cbr\u003E       key = 40 7\u003Cbr\u003E     }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    torqueCurve\u003Cbr\u003E    {\u003Cbr\u003E      key = 0 275 0 0 \u003Cbr\u003E      key = 15 150 0 0\u003Cbr\u003E      key = 40 0 0 0\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = FXModuleLookAtConstraint\u003Cbr\u003E    CONSTRAINLOOKFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = MovedBySusTrav\u003Cbr\u003E        rotatorsName = WishBoneLower\u003Cbr\u003E    }\u003Cbr\u003E    CONSTRAINLOOKFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = SuspT\u003Cbr\u003E        rotatorsName = SuspB\u003Cbr\u003E    }\u003Cbr\u003E    CONSTRAINLOOKFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = SuspB\u003Cbr\u003E        rotatorsName = SuspT\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = FXModuleConstrainPosition\u003Cbr\u003E    matchRotation = true\u003Cbr\u003E    matchPosition = false\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = steering\u003Cbr\u003E        moversName = trackSteering\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = WishBoneLower\u003Cbr\u003E        moversName = WishBoneUpper\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = FXModuleConstrainPosition\u003Cbr\u003E    matchRotation = false\u003Cbr\u003E    matchPosition = true\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = RodEnd\u003Cbr\u003E        moversName = Axle\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = FXModuleConstrainPosition\u003Cbr\u003E    matchRotation = false\u003Cbr\u003E    matchPosition = true\u003Cbr\u003E    CONSTRAINFX\u003Cbr\u003E    {\u003Cbr\u003E        targetName = trackSteeringDummy\u003Cbr\u003E        moversName = trackSteering\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = WheelTweaks\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-16T22:44:26Z","Content":"\n\u003Cp\u003EAnyway, I hope that helps! Apologies for the rambling, I\u0027m short on time trying to get my wheels sorted for release. Do shout if I can clear anything up, I\u0027ll keep an eye on the thread.\u003C/p\u003E\n"},{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2014-06-16T23:57:40Z","Content":"\n\u003Cp\u003EI like that , very neat, only really just discovered the LOOKFX stuff and although nice it all seemed a bit arbitary, your layout clears that vagueness of where the rigs pivots are and from your vid gives very realistic movement. I\u0027ve got another set cooking in max at the moment and am definately gonna spend the time to get it done your way, after all it\u0027s only tricky till you\u0027ve done it a couple of times, I\u0027m on my fourth (working!!) std group now and have finally got the hierarchy written on the back of my eyeballs!!!. \u003C/p\u003E\u003Cp\u003E Some great info there especially the wheel collider position as the edges of the wide wheels sinking below ground level was beginning to bug me a tad. Cheers\u003C/p\u003E\u003Cp\u003ESpanner\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-17T00:10:31Z","Content":"\n\u003Cp\u003ECheers, do shout if you want the rigged Unity scene. I just set it up for the new dimensions and bung fresh mesh in for a new design, saves a lot of bother. \u003C/p\u003E\u003Cp\u003EGlad I was of some help, that knowledge was hard-won so worth sharing! \u003C/p\u003E\u003Cp\u003EI have a plugin in development that allows you to tweak wheelcollider suspension settings in VAB/SPH. I was told this wasn\u0027t possible in KSP. You\u0027re welcome to test/use/distribute with your wheels when it\u0027s done, though all my stuff is pre-release I\u0027m afraid, I\u0027ve only been at this a few weeks!\u003C/p\u003E\u003Cp\u003ENice work, btw \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2014-06-17T00:39:27Z","Content":"\n\u003Cp\u003EJust a query, whats the simplest working wheel that can be created in KSP? I\u0027m considering doing a few for my Infernal Robotics Model Rework, based on NASA designs and there\u0027s not much in the way of visible suspension. Essentially I would like to do all the wheels in this image:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://www.nasa.gov/externalflash/moseslake/hi-resjpgs/7.jpg\u0022 alt=\u00227.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EThanks, and appologies if this isn\u0027t the best place to ask\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-17T00:52:13Z","Content":"\n\u003Cp\u003EFunnily enough, I\u0027m about to work on something like the wheels in the foreground. They can be as simple as you like, though there are a couple of caveats in terms of object names the wheel module code expects to see. You can just set the suspension to very little or no travel if you want and the models can be nothing more than a body and a wheel, should you wish. I\u0027ve not yet tried multiple wheels on a part, though depends exactly what you\u0027ve got in mind?\u003C/p\u003E\u003Cp\u003ELove your work, btw!\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2014-06-17T01:07:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EThey can be as simple as you like, though there are a couple of caveats in terms of object names the wheel module code expects to see.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI expected as much. Found the same when creating variants of the stock struts too.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EYou can just set the suspension to very little or no travel if you want and the models can be nothing more than a body and a wheel, should you wish. I\u0027ve not yet tried multiple wheels on a part, though depends exactly what you\u0027ve got in mind?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t mind giving the parts suspension but it would be purely a linear piston of some sort, rather than an off-to-the-side thing. I presume multiple wheels can be tricked by making a single wide wheel that looks like two in the mesh? The main thing I want to do with such wheels is add an IR Rework attachment point above the rotation axis, so that they can be used with Rotatrons and the like, maybe even allow for this:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://www-robotics.jpl.nasa.gov/images/athleteFig6.jpg\u0022 alt=\u0022athleteFig6.jpg\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ELove your work, btw!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks!\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-17T01:31:27Z","Content":"\n\u003Cp\u003EYep, that should all work fine as far as I can see. My suspension arms are setup exactly as you suggest for the wheels - as two separate elements in a single mesh that sit fore and aft of the body. Keeps the lookat stuff easy having a central pivot, will work a treat for the wheel. Linear suspension is so easy to set up compared to arms too, you can just track suspensionTraverse and jobs done. Should be some pretty cool parts!\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-06-17T19:08:41Z","Content":"\n\u003Cp\u003EAwesome post \u003C/p\u003E\u003Cp\u003Ewhat piece controls the wheel rolling animation? the WheelCollider?\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-18T00:04:20Z","Content":"\n\u003Cp\u003EThe physics object wheelCollider controls that, yes. It calculates based on its diameter and the speed it\u0027s going. The lines in the config call code which ties the mesh rotation to the result of that calculation:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E  \u003Cbr\u003EWHEEL\u003Cbr\u003E    {\u003Cbr\u003E        wheelName = wheel\u003Cbr\u003E        wheelColliderName = wheelCollider\u003Cbr\u003E        suspensionTransformName = suspensionTraverse\u003Cbr\u003E        suspensionNeutralPointName = suspensionNeutralPoint\u003Cbr\u003E\u003Cbr\u003E        rotateX = 1\u003Cbr\u003E        rotateY = 0\u003Cbr\u003E        rotateZ = 0\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe visible mesh is called \u0027wheel\u0027. Something to note is that in KSP the wheelcollider doesn\u0027t work if \u0027wheel\u0027 is not present or not in the same position as the other objects named in that code snippet. TrackSteering can be elsewhere.\u003C/p\u003E\u003Cp\u003EChange the rotateX value to -1 in a wheel config and the wheel mesh will rotate the wrong way is an easy way to demonstrate \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EUseful for fixing that issue if it comes up, as it did in one of my models.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-19T22:22:43Z","Content":"\n\u003Cp\u003EFurther to earlier information:\u003C/p\u003E\u003Cp\u003EIf standard components named in ModuleWheel in the part.cfg are not present, the physical simulation may not work. The wheel will drop through the ground on launch and nothing else will happen. The object \u0027wheel\u0027 is a great example of this, though it does not have to be a mesh; an empty GameObject will do. This may also be true if transforms (pivots) of steering, wheelCollider, suspensionTraverse and suspensionNeutralPoint do not occupy the same position in the Unity model (the exception is trackSteering, this can be anywhere). Check everything in the hierarchy, it\u0027s easy to get thing screwed up if you\u0027ve moved stuff around\u003C/p\u003E\u003Cp\u003EFXModuleConstrainPosition with matchPosition enabled will move the targeted object to the position of the pivot of the mover. It does not tie them together maintaining the same relative positions the two objects start in. This is quite important!\u003C/p\u003E\u003Cp\u003EFXModuleConstrainPosition with matchRotation enabled will leave the position of the targeted object unchanged and simply match rotation. Relative positions are preserved. This is how trackSteering works.\u003C/p\u003E\u003Cp\u003EFXModuleLookAtConstraint points the local Z (blue) axis of the named object at the named target object. If you\u0027ve assigned this to a part and wonder why it looks fine in Unity but everything is all over the place in-game, this is why.\u003C/p\u003E\u003Cp\u003EWheels surface mount at the pivot of the root GameObject. This is handy to know if you find your wheels are mounting too high on the side of the rover body. Move all child objects down in the Y axis will fix this.\u003C/p\u003E\u003Cp\u003ETo set up wheels for the correct orientation in the VAB/SPH, you model should have the mount point to the right and the wheel on the end of the suspension when viewed from the back in Unity. It is normal even for stock wheels to need a 90 degree turn to be the right way up in SPH.\u003C/p\u003E\u003Cp\u003EThat\u0027s it for the moment. If I think of anything more I\u0027ll add to the thread.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-19T22:47:27Z\u0022 title=\u002206/19/2014 10:47  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 19, 2014\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-06-19T22:30:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003Esteering, wheelCollider, suspensionTraverse and suspensionNeutralPoint do not occupy the same position in the model \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eby this you mean their transforms must be at the same position and have same orientation in Unity correct? They can be in different parts in the wheel hierarchy?\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-19T22:45:24Z","Content":"\n\u003Cp\u003EYep, exactly. Not sure about orientation and I\u0027ve not fully tested, but my experience is that things get weird if they aren\u0027t in the same position. Sorry, should have been clearer - I\u0027ll amend OP. Yes, they can be in different parts in the hierarchy.\u003C/p\u003E\u003Cp\u003EHoping to make a YouTube tutorial at some point.\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2014-06-19T23:41:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EHoping to make a YouTube tutorial at some point.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA video going through the unity setup process would be extremely useful. There\u0027s things that just aren\u0027t captured in these pictures. A simple wheel with just vertical translational suspension and no steering would be perfect for me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E (\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/65365-WIP-MSI-s-Infernal-Robotics-Model-Rework-(Pre-Releases-Updated-16-06)?p=1222646\u0026amp;viewfull=1#post1222646\u0022 rel=\u0022external nofollow\u0022\u003Esee\u003C/a\u003E)\u003C/p\u003E\n"},{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2014-06-20T00:08:24Z","Content":"\n\u003Cp\u003EFor the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/65365-WIP-MSI-s-Infernal-Robotics-Model-Rework-(Pre-Releases-Updated-16-06)?p=1222646\u0026amp;viewfull=1#post1222646\u0022 rel=\u0022external nofollow\u0022\u003Eawesome critter\u003C/a\u003E in that post you really need the alternate hierarchy that lo-fi posted early in this thread, especially if you want those legs to be nice and flexible ,should have nice organic qualty, not done an instructional vid of anything before, usually use teamviewer for showing people how to do things like this, but i\u0027ll give it a go over the weekend.\u003C/p\u003E\u003Cp\u003EI\u0027m currently experimenting with multiple wheels on a single part and the results are if at the moment so i dont know how you\u0027ll get on if that is a one part creature, not an issue if it\u0027s a normal multi pa\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2014-06-20T00:22:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SpannerMonkey(smce)\u0022 data-cite=\u0022SpannerMonkey(smce)\u0022\u003E\u003Cdiv\u003EI\u0027m currently experimenting with multiple wheels on a single part and the results are if at the moment so i dont know how you\u0027ll get on if that is a one part creature, not an issue if it\u0027s a normal multi pa\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s multi-part \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. Pretty much all of it is Infernal Robotics, which has an element of springyness to it anyway (maybe too much). The wheel itself is quite simple in comparision to what you guys have shown off so far, or at least it seems like it should be.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-20T00:25:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022 data-cite=\u0022ZodiusInfuser\u0022\u003E\u003Cdiv\u003EA video going through the unity setup process would be extremely useful. There\u0027s things that just aren\u0027t captured in these pictures. A simple wheel with just vertical translational suspension and no steering would be perfect for me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E (\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/65365-WIP-MSI-s-Infernal-Robotics-Model-Rework-(Pre-Releases-Updated-16-06)?p=1222646\u0026amp;viewfull=1#post1222646\u0022 rel=\u0022external nofollow\u0022\u003Esee\u003C/a\u003E)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll see what I can do, buddy. Never done any tutorials before, so I\u0027m working out how to record and make everything properly visible, as well as some sort of script so I\u0027m not rambling too much! I\u0027d like to do a series; I really struggled when I first started modding a few weeks ago as a lot of info is out of date now and I had no experience with Unity. Be nice to pass on some of that hard-earned knowledge. Tiberian\u0027s tutorial was invaluable.\u003C/p\u003E\u003Cp\u003EAnother little gotcha with wheels is they stop working if you disable the steering (this is NOT the same as locking the steering in-game). Better to zero the curves in the part.cfg. ModuleWheel does some funny things and throws its toys right out of the pram if you change too much from the norm.\u003C/p\u003E\u003Cp\u003EAnd That. Looks. Awesome!\u003C/p\u003E\u003Cp\u003EI\u0027ve just been playing with wheels like that, but I\u0027m struggling with surface placement AND keeping them steering correctly in-flight. I\u0027m guessing you\u0027re going to have attach nodes to marry up with the IR parts and steering with be with rotatatrons? Happy to help you set up in Unity - I rigged a scene this eve to test which would probably suit that design.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-20T00:31:27Z\u0022 title=\u002206/20/2014 12:31  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 20, 2014\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-20T00:43:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022 data-cite=\u0022ZodiusInfuser\u0022\u003E\u003Cdiv\u003EIt\u0027s multi-part \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. Pretty much all of it is Infernal Robotics, which has an element of springyness to it anyway (maybe too much). The wheel itself is quite simple in comparision to what you guys have shown off so far, or at least it seems like it should be.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI made semi-flexible IR stuff by messing with the JointSpring line in the .cfg - worked like a charm \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Wouldn\u0027t be hard to add as a tweakable actually... What stage are you at with the wheels?\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2014-06-20T00:57:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EAnother little gotcha with wheels is they stop working if you disable the steering (this is NOT the same as locking the steering in-game). Better to zero the curves in the part.cfg. ModuleWheel does some funny things and throws its toys right out of the pram if you change too much from the norm.\u003Cp\u003EAnd That. Looks. Awesome!\u003C/p\u003E\u003Cp\u003EI\u0027ve just been playing with wheels like that, but I\u0027m struggling with surface placement AND keeping them steering correctly in-flight. I\u0027m guessing you\u0027re going to have attach nodes to marry up with the IR parts and steering with be with rotatatrons? Happy to help you set up in Unity - I rigged a scene this eve to test which would probably suit that design.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh ok. If I have to have them support some amount of steering then I\u0027ll model it in, however as you guessed, the main intention is for them to be controlled by rotatrons via the attachment node style I\u0027ve adopted. I can imagine when IR supports KOS scripts this will become a really powerful feature as you could coordinate all the wheels to do some amazing motions \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E. Surface attachment would also be allowed but not the main use case. Assistance with setting up the unity scene when I get to that stage would be most welcome \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EI made semi-flexible IR stuff by messing with the JointSpring line in the .cfg - worked like a charm \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Wouldn\u0027t be hard to add as a tweakable actually... What stage are you at with the wheels?\u003C/div\u003E\u003C/blockquote\u003EAh yea, I remember that. Flexible suspension \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cp\u003EVery early, i.e. modelled it from scratch a few hours ago, more to see the viability of the idea more than anything.\u003C/p\u003E\n"}]}