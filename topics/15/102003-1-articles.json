{"TopicId":102003,"ForumId":15,"TopicTitle":"\u0022Baking\u0022 mesh animation based on hooks/constraints?","CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-03-15T08:54:40Z","PageNum":1,"Articles":[{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-03-15T08:54:40Z","Content":"I have a set of deployable solar panels similar to the stock 1x6 panels, with rigged animation and all that goodness. This imports into Unity just fine. The problem, however, is the mesh collider I\u0027m trying to use to approximate the panels in both compacted and deployed states, and everything in between. It\u0027s essentially a bounding box that I\u0027ve tied to to the rig via an ugly mess of empties, hooks, constraints, and parenting (empties to the rig).\n\nThis mesh deforms just fine within Blender, but as soon as I import into Unity, nothing happens. \u0022Ah,\u0022 thought I, na\u00C3\u0192\u00C2\u00AFvely, \u0022I\u0027ll just bake the animation and that will solve all my problems!\u0022 Unfortunately, since the animation of a mesh is not the same as object animation, and it\u0027s not tied to simple editing of the object\u0027s transform, this doesn\u0027t seem to work within Blender. So, is there some way to bake the animation on a mesh-level instead of an object level?\n\nI\u0027m open to other ways of doing this as well, if you think this is the wrong way to approach the problem."},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-03-15T10:07:47Z","Content":"Can\u0027t you just animate the vertexes movement directly in blender to enlarge the box as the panel deploys? I use 3D studio myself, but that would be my approach.\n\nYou could set up a skinned mesh, of course, but I can\u0027t think of a way to make that work in Unity."},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-03-15T12:23:22Z","Content":"\u003E \n\u003E Can\u0027t you just animate the vertexes movement directly in blender to enlarge the box as the panel deploys?\n\nWhether I do it via the vertices directly or object scaling and movement, both have the same issue--tracking the expansion of the panels. Though it makes a sine-ish shaped curve, even playing with the bezier handles and keying at both ends I couldn\u0027t get it anywhere close to the motion of the rig. To truly track it well over 180 frames requires an immense amount of keyframes, and calculating and entering the variables by hand is unbelievably tedious. I thought I could do it with a Python script, but Python makes Malbolge look like an easy language to script in, and more often than not I ended up doing horrible and essentially irreversible (if not for reverting to a save) damage to the mesh."},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2015-03-15T13:38:00Z","Content":"split the panels out to individual pieces and link them in a chain. skinned mesh colliders don\u0027t work in Unity AFAIK. I don\u0027t think blendshapes works for colliders either. Closest thing I\u0027ve seen to what I think you are trying to do are the procedural wing/tank plugins like pWings by DYJ or B9. \n\nif you want a smooth unfurling motion you can animate them in max using spline IK or wire paramters, and bake the frames down, then apply box/mesh collider to each panel in Unity. You can use frame reduction in Unity to lighten up the animation clip a bit. or do it in Max before exporting."},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-03-16T02:26:58Z","Content":"\u003E \n\u003E split the panels out to individual pieces and link them in a chain.\n\nThis is already working, as I said in the first post. The problem is just with the collider.\n\n\u003E \n\u003E skinned mesh colliders don\u0027t work in Unity AFAIK. I don\u0027t think blendshapes works for colliders either. Closest thing I\u0027ve seen to what I think you are trying to do are the procedural wing/tank plugins like pWings by DYJ or B9.\n\nIt\u0027s not, strictly speaking, a skinned mesh collider, as it\u0027s just moving hooks around based on empties, though the empties are linked to the bones. Here\u0027s an example frame part-way through the animation, with empties visible:\n\n![cxlyyb.png](http://a.pomf.se/cxlyyb.png)\n\nI don\u0027t think pWing\u0027s is the proper analog as it has no animation of the colliders. Anything using \u0022ModuleDeployableSolarPanel\u0022 should be much closer to my needs, but the only ones I know of are of course in mu format, and the blender mu plugin will not load animation\n\n\u003E \n\u003E if you want a smooth unfurling motion you can animate them in max using spline IK or wire paramters, and bake the frames down, then apply box/mesh collider to each panel in Unity.\n\nAs I said, the panels are already unfoolding smoothly, and while the bounding box is \u0022smooth\u0022, it\u0027s still not something I can approximate without a huge number of keyframes. And baking the animation is the whole problem, as it doesn\u0027t seem possible to bake a mesh animation in blender. As for \u0022max\u0022, are you referring to 3ds max? Because, I don\u0027t own that and have no plans on buying it, as I just can\u0027t justify it with the small number of parts I\u0027ve made/plan on making, and having to spend the time to learn a new 3D modeling program.\n\nLastly, as for using a collider for each individual part linked the rig, I don\u0027t think that\u0027s an option performance-wise. Right now with a bounding box I\u0027d have a total of 92 tris for the colliders alone (for the entire part; already pretty high), and if I went to per-piece I\u0027d have 308 tris.\n\n**Edited \u003Ctime datetime=\u00222015-03-16T02:37:22Z\u0022 title=\u002203/16/2015 02:37  AM\u0022 data-short=\u00229 yr\u0022\u003EMarch 16, 2015\u003C/time\u003E by Orum**"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-03-16T09:10:34Z","Content":"You\u0027re way over thinking this, I think. Does it really matter if the collider doesn\u0027t perfectly match the panel for the whole extension animation? I understand your reasoning, but really an approximation is fine, and nobody is going to notice a small difference while playing the game."},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2015-03-16T14:49:56Z","Content":"I misread earlier posts and thought you were using max as well.\n\nsplit the panels out to individual pieces and link them in a chain. then apply box/mesh collider to each panel in Unity. a collider that changes shape don\u0027t work in Unity AFAIK, and definitely don\u0027t work in KSP. There\u0027s nothing in KSP that has collider boxes that changes shape in Flight mode. the only ones that allows it are the mods I mentioned, and they only work in Editor mode where there\u0027s no physics. \n\nprimitive colliders are very cheap, use those unless your panels are trapazoidal or 5\u002Bgon shaped. If you have 90\u002B colliders you might need to reconsider the design. but if I read correctly you have half a dozen total of few hundred triangles. not a performance issue. If the panels use box colliders that\u0027s less than 50 triangles total between 7 colliders, that\u0027s nothing really.\n\n**Edited \u003Ctime datetime=\u00222015-03-16T14:55:01Z\u0022 title=\u002203/16/2015 02:55  PM\u0022 data-short=\u00229 yr\u0022\u003EMarch 16, 2015\u003C/time\u003E by nli2work**"},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-03-18T13:22:36Z","Content":"\u003E \n\u003E a collider that changes shape don\u0027t work in Unity AFAIK, and definitely don\u0027t work in KSP. There\u0027s nothing in KSP that has collider boxes that changes shape in Flight mode. the only ones that allows it are the mods I mentioned, and they only work in Editor mode where there\u0027s no physics.\n\nI know this isn\u0027t true, and I\u0027ve verified it experimentally with another part I created recently. Mesh colliders I created \u0026 animated (via scale) in Blender imported into Unity worked just fine.\n\n\u003E \n\u003E primitive colliders are very cheap, use those unless your panels are trapazoidal or 5\u002Bgon shaped. If you have 90\u002B colliders you might need to reconsider the design. but if I read correctly you have half a dozen total of few hundred triangles. not a performance issue. If the panels use box colliders that\u0027s less than 50 triangles total between 7 colliders, that\u0027s nothing really.\n\nYeah, the main issue with primitive colliders is they have to be created in unity, and can\u0027t be done in blender.\n\n\u003E \n\u003E You\u0027re way over thinking this, I think. Does it really matter if the collider doesn\u0027t perfectly match the panel for the whole extension animation? I understand your reasoning, but really an approximation is fine, and nobody is going to notice a small difference while playing the game.\n\nNo, but I\u0027d certainly like it to be as good as possible, given that it\u0027s already an approximation. An approximation of an approximation can start to really show. I did find someone on IRC though who was willing to help with scripting this in blender, and using only scaling/translation (which unity can import) and keying every single frame. Ugly, but there\u0027s no other way to it Blender and have it import correctly into Unity."},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2015-03-18T19:16:27Z","Content":"I think you are confusing mesh collider and skinned mesh. mesh colliders don\u0027t scale, much less animate as skinned mesh, in Unity4. if you wanted to scale a collision mesh, you have to export a new mesh with the scale changed baked in to use as a collision mesh. Unity5 supports collision mesh scaling with new physx implementation, but KSP won\u0027t be on Unity 5 for a while. You can animate some mesh in Blender and import to Unity 4, but whatever it is, it won\u0027t work as a collision mesh.\n\nSkinned mesh will work in Unity4 and KSP. Skinned mesh has a bounding box, that appear similar to a collision mesh, but isn\u0027t a collision mesh. it\u0027s only for checking visibility in relation to camera frustum.\n\nSquad\u0027s solar panels are simple heirarchy chains with panels as separate objects. each panel has it\u0027s own box collider. if your panels are odd shapes, then use a mesh collider, otherwise use primitive colliders.\n\n**Edited \u003Ctime datetime=\u00222015-03-18T19:27:21Z\u0022 title=\u002203/18/2015 07:27  PM\u0022 data-short=\u00229 yr\u0022\u003EMarch 18, 2015\u003C/time\u003E by nli2work**"},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-03-22T15:26:16Z","Content":"\u003E \n\u003E I think you are confusing mesh collider and skinned mesh. mesh colliders don\u0027t scale, much less animate as skinned mesh, in Unity4. if you wanted to scale a collision mesh, you have to export a new mesh with the scale changed baked in to use as a collision mesh. Unity5 supports collision mesh scaling with new physx implementation, but KSP won\u0027t be on Unity 5 for a while. You can animate some mesh in Blender and import to Unity 4, but whatever it is, it won\u0027t work as a collision mesh.\n\nNo, this just isn\u0027t true. Here\u0027s an example (an \u0022iris\u0022 style door) as proof, in Blender first, with colliders visible:\n\n![bksrew.jpg](http://a.pomf.se/bksrew.jpg)\n\nAnd then in Unity 4, again with colliders visible:\n\n![szscap.jpg](http://a.pomf.se/szscap.jpg)\n\nAnd finally in game, first with doors closed, Jeb standing on top:\n\n![nibtpu.jpg](http://a.pomf.se/nibtpu.jpg)\n\n...And falling through as the door opens:\n\n![cijbcw.jpg](http://a.pomf.se/cijbcw.jpg)"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2015-03-22T17:10:06Z","Content":"I am wrong, thanks for the pics. I assume the shutter blades have mesh colliders? I think there is still a performance cost to do it based on this \u0022In Unity 5.0 we\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2ve reduced the cost of scaling Mesh Colliders. Previously, when scaling a Mesh Collider, you would have to create a new mesh with scale baked into the vertices, and that required valuable time and memory. With PhysX3 we are able to support non-negative scaling without any baking. It\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s basically free.\u0022 \n\nThe same does not work for\n\n\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/qdJdzU2wbd8?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n nor\n\n\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/CjQYcdcG_o0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n; which is what I think you are attempting to do from the OP.\nnevertheless, based on how your solar panel part appears to work, separate objects with box colliders is the best way to go performance and setup complexity wise. if your solar panel works like the shutter, then rotating and/or scaling colliders would certainly work better.\n\n**Edited \u003Ctime datetime=\u00222015-03-22T19:02:48Z\u0022 title=\u002203/22/2015 07:02  PM\u0022 data-short=\u00229 yr\u0022\u003EMarch 22, 2015\u003C/time\u003E by nli2work**"},{"CreatedByName":"Orum","CreatedById":97814,"CreatedDateTime":"2015-03-23T01:42:59Z","Content":"\u003E \n\u003E I assume the shutter blades have mesh colliders? I think there is still a performance cost to do it based on this \u0022In Unity 5.0 we\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2ve reduced the cost of scaling Mesh Colliders. Previously, when scaling a Mesh Collider, you would have to create a new mesh with scale baked into the vertices, and that required valuable time and memory. With PhysX3 we are able to support non-negative scaling without any baking. It\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s basically free.\u0022\n\nYes, I think this may at least be due to how animation is imported into Unity (\u0022Legacy\u0022 mode), though I\u0027m unsure if this is a Unity or a KSP/.mu requirement (but I generally assume the latter as the other import methods appear to work in Unity as far as I can tell).\n\nEDIT: I also think it\u0027s worth noting that I would have liked to use true \u0022Box\u0022 colliders from within Unity, but matching the opening of the iris is harder to do there compared to just doing an animated mesh in blender. Yes, it\u0027s probably less efficient than doing box colliders, but I have even less success at scripting things in Unity compared to blender, and it\u0027s as simple as adding two key-frames in blender and it matches the blades of the door very closely.\n\n\u003E \n\u003E The same does not work for\n\u003E \n\u003E \u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/qdJdzU2wbd8?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n\u003E  nor\n\u003E \n\u003E \u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/CjQYcdcG_o0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n\u003E ; which is what I think you are attempting to do from the OP.\n\u003E nevertheless, based on how your solar panel part appears to work, separate objects with box colliders is the best way to go performance and setup complexity wise. if your solar panel works like the shutter, then rotating and/or scaling colliders would certainly work better.\n\nRight, I\u0027m trying to get the bounding box to scale. I know it\u0027s possible via scripting, but Python is such a...unique (being as polite as possible here) language that it proves to be very difficult for me to script in it. I have an offer from someone to help but real-life obligations have kept me extremely busy as of late, and I haven\u0027t been on IRC when he is and had time to spare.\n\n**Edited \u003Ctime datetime=\u00222015-03-23T01:47:48Z\u0022 title=\u002203/23/2015 01:47  AM\u0022 data-short=\u00229 yr\u0022\u003EMarch 23, 2015\u003C/time\u003E by Orum**"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2015-03-23T16:51:55Z","Content":"well, keep us posted on your progress. I know I\u0027m not the only one interested in seeing what you have cooking."}]}