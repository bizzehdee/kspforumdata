{"TopicId":85580,"ForumId":15,"TopicTitle":"WIP: Creating an Asset from start to finish.","CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-27T23:06:58Z","PageNum":1,"Articles":[{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-27T23:06:58Z","Content":"\n\u003Cp\u003E:confused:Creating an Asset from start to finish.\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\u003Cp\u003E-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EEDITED: OK, just to have a little update spot at the top :\u003Cp\u003E Here is where I am at. \u003C/p\u003E\u003Cp\u003ELesson one still needs to be updated to more current information.\u003C/p\u003E\u003Cp\u003E I have had a chance to look at Blender and I have finished my JGS version of 3DS \u0022Animated Battle Scene\u0022 tutorial, SKILL LEVEL: BEGINNER. \u003C/p\u003E\u003Cp\u003E I have had a chance to look over a lot of the 3ds Tutorial stuff now and I don\u0027t think I will be working in 3dsMax, at least not much from now on.\u003C/p\u003E\u003Cp\u003EWhat I have done has made Blender make a lot more sense to me and i feel comfortable enough with it to start using it.\u003C/p\u003E\u003Cp\u003E I am now working on some Blender Tutorials and will make at least one tutorial for blender b4 moving back to updating Lesson One and adding these drawing tutorials to the top, so we can actually get started MODDING \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E (intending on placing them in the Selecting your program box)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E Thanks to everyone!\u003C/p\u003E\u003Cp\u003E \u003Cimg src=\u0022https://forum.kerbalspaceprogram.com/images/misc/quote_icon.png\u0022 alt=\u0022quote_icon.png\u0022\u003E Originally Posted by \u003Cstrong\u003EClaw\u003C/strong\u003E \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php?p=1440130#post1440130\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022https://forum.kerbalspaceprogram.com/images/buttons/viewpost-right.png\u0022 alt=\u0022viewpost-right.png\u0022\u003E\u003C/a\u003E \u003C/p\u003E\u003Cp\u003E If your aim is to repackage the wiki information, please be very clear about that. It can be insulting to some people when they see their works copied and pasted elsewhere. Also, the whole point of the wiki is for users to be able to edit and update information along the way. Feel free to get an account and update links/info up there. The better the info on the wiki, the more useful it is.\u003C/p\u003E\u003Cp\u003ECheers,\u003C/p\u003E\u003Cp\u003E~Claw\u003C/p\u003E\u003Cp\u003E My aim is to become proficient in Visual C\u002B\u002B and if this helps other GREAT. Im not trying to repackage anything, Im just trying to learn this. But, I guess I am inadvertently \u0022repackaging\u0022 it AND fixing dead or broken links. This could be used to update the links in KSP WiKi when i am done, if i continue.\u003C/p\u003E\u003Cp\u003E Im hoping a few people will join me learning because 2 minds are better than one. I am retired and learning this for fun. Please do not be offended if you see your work here! Your work is VERY VALUABLE!!!! And I have sited links to ALL the reference material because i want to make sure your recognized for your work. After all, I could not have learned what I have without it. If I need to site extra recognition, I don\u0027t have a problem with that! I wouldn\u0027t mind if anyone whos work i am using to learn, follows along and helps me and who ever might join this thread.\u003C/p\u003E\u003Cp\u003Enice to meet ya Claw\u003C/p\u003E\u003Cp\u003EMy intention is NOT to offend anyone. \u003C/p\u003E\u003Cp\u003EThat is why I said from the start that 99% of this is NOT my work, right now. I will be adding, at least one example of my own. \u003C/p\u003E\u003Cp\u003EWhen I am reading to learn I take notes, I have to, and i do it in an outline. I realized that I was organizing all of this info and making it sequence, plus I have found links to relevant information where I was finding dead links.\u003C/p\u003E\u003Cp\u003EI just got so frustrated with KSP wiki breaking my concentration every 2 min\u0027s with a dead or broken link. When everything is a clicking and you hit a dead link... it breaks the \u0026amp;^^%% out of my concentration, and its hard to get going again, I don\u0027t know about you.\u003C/p\u003E\u003Cp\u003EIf you guys don\u0027t want me to post this, fine, I won\u0027t. but i already have it a lot done and when I finish with my first asset this could be a great tutorial... Plus I might get some help and help others learn.\u003C/p\u003E\u003Cp\u003EI really love this game, so much so that i am learning this. Im FREE HELP USE ME LOL but seriously, I have a lot of time on my hands and Im not afraid to say no if I don\u0027t want to do something.\u003C/p\u003E\u003Cp\u003EEDIT 2 PLEASE READ THE ENTIRE POST B4 YOU ask questions or comment, your answer may already be here! \u003C/p\u003E\u003Cp\u003E ------------------------------------------------------------------------------------------------------------------------------------------------------------\u003C/p\u003E\u003Cp\u003EOk, I\u0027m an old guy here and I know a couple OLD computer languages but Im Kinda new to Visual C\u002B\u002B\u003C/p\u003E\u003Cp\u003EI am self taught and by no means self proficient in C yet. I am learning and that is the point of this Thread.\u003C/p\u003E\u003Cp\u003EI did some mods with a few friends on a game when i was in college but haven\u0027t messed with C much since then.\u003C/p\u003E\u003Cp\u003EI went to school for Computer Information Systems (basically system annalist... Cobol stuff) CADD and Mechanical ENGR/Design,\u003C/p\u003E\u003Cp\u003Eand minored in psychology.... Wouldn\u0027t ya know I ended up working in a hospital and not on computers, much.\u003C/p\u003E\u003Cp\u003EWell, Im retired now, both my kids are about grown and gone, Im single, I love this game lol, I want to become proficient\u003C/p\u003E\u003Cp\u003Ewith C\u002B\u002B and all I do now is play, its kinda nice. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_kiss.gif\u0022 alt=\u0022:kiss:\u0022\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E\u003C/p\u003E\u003Cp\u003EReason # 2 that I am posting this Thread\u003C/p\u003E\u003Cp\u003EI tend to be kinda unorganized... looking, but I can find everything in my madness:huh: lol\u003C/p\u003E\u003Cp\u003EThe information is out there and available but its freaking everywhere and not all the links work.\u003C/p\u003E\u003Cp\u003EWhen the links don\u0027t work it breaks my concentration and I lose my place, then start making mistakes and break my game not knowing what the #@%# I did wrong. lol:P\u003C/p\u003E\u003Cp\u003EMy Plan is to break this down to single entry\u0027s, kinda like steps in creating your asset.\u003C/p\u003E\u003Cp\u003EI have not written MOST of this but i have reorganized ALL of it AND added Links (where I could, of the broken ones)\u003C/p\u003E\u003Cp\u003EI have a lot of time on my hands right now so I have been working on this almost everyday.\u003C/p\u003E\u003Cp\u003EI am not going to go back to everything that brought me to this point, unless I need a refresher at some point.\u003C/p\u003E\u003Cp\u003EAnyone is welcome to join in... or just follow along.\u003C/p\u003E\u003Cp\u003ETo keep my time on this forum to a minim, so I can keep learning, I will only check this once per day UNTIL I get to the end of creating my first asset.\u003C/p\u003E\u003Cp\u003ESo when this is finished, the last post will be up todate and should contain EVERYTHING you need to build your Asset.\u003C/p\u003E\u003Cp\u003EThis is NOT going to be finished over night but i will be moving fast, try to keep up if your doing this with me.\u003C/p\u003E\u003Cp\u003ENew posts will be added when I get tired and stop for the day.\u003C/p\u003E\u003Cp\u003EIn the post I will note where I stopped and there will be info after that so i know what i didn\u0027t get to so I can remember where i left off,\u003C/p\u003E\u003Cp\u003Emy memory sucks, I gotta take notes, or I WONT remember.\u003C/p\u003E\u003Cp\u003EIf I forget something don\u0027t get mad cuz I forgot, remember. lol\u003C/p\u003E\u003Cp\u003EAnyway, this next post will be the Start. Day one Outline ONE.\u003C/p\u003E\u003Cp\u003EIm tired and ready to quit for the day, after I get this posted.\u003C/p\u003E\u003Cp\u003EThanks in advance for anyone who would like to join me learning\u003C/p\u003E\u003Cp\u003Eor help US learn.\u003C/p\u003E\u003Cp\u003EThis is my Kerbin/Earth conversion. Its going to be a future Earth, Hot and Dry. It is a work in progress, I just started it last night.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i245.photobucket.com/albums/gg61/jhg2007/Earth/Aussi_zps32a19849.png\u0022 alt=\u0022Aussi_zps32a19849.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EHave a GREAT Night SQUAD, AND THANK YOU ALL for such an awesome game!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-06T04:30:12Z\u0022 title=\u002210/06/2014 04:30  AM\u0022 data-short=\u00229 yr\u0022\u003EOctober 6, 2014\u003C/time\u003E by Enriched Uranium\u003C/strong\u003E\n\u003Cbr\u003EJust updating \u0026#039;where Im at\u0026#039;\n\u003C/span\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-27T23:20:08Z","Content":"\n\u003Cp\u003EEdited *draft 2* Lesson ONE\u003C/p\u003E\u003Cp\u003EFirst I would like to say that This is my second draft. I am CURRENTLY taking a break, You may read but know this is a long way from finished.\u003C/p\u003E\u003Cp\u003EIf you do read this and see points that are obviously wrong and i need to find updated info, feel free to point it out. If nobody else has.\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 alt=\u0022:sticktongue:\u0022\u003E\u003C/p\u003E\u003Cp\u003EMy plan is to be the first person to use this tutorial. So when I am finished... if you learn, close to the way I do, you will be able to follow\u003C/p\u003E\u003Cp\u003Ethis, step by step until your mod is finished and working. (That is my hope for the mod I will be creating as my example.)\u003C/p\u003E\u003Cp\u003EAt this point, I am planning for my mod to be a small, modular, Beer/Soda cooler for Jeb when he is out on a moon rover somewhere.\u003C/p\u003E\u003Cp\u003EI don\u0027t know if Ill be able to make it follow the rover around or not but that is what i am hoping. As I said, it will be modular so you will be able \u003C/p\u003E\u003Cp\u003Eto build it how you would like, in game, but I hope to make it look... somewhat like R2D2 lol... It may be more work than i know what im getting\u003C/p\u003E\u003Cp\u003Emyself into but I would also like for Jeb to be able to use it as a UAV and have the option of giving it the ability to fly.\u003C/p\u003E\u003Cp\u003E (kinda like the UAV\u0027s infantry use to get a better view of... the battle field.)\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.army.mil/article/103969/UAV_pilots_maintain_situational_awareness_above_battlefield/\u0022 rel=\u0022external nofollow\u0022\u003ESomething like this but much much smaller\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAnyway, Here it is:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[URL=\u0022http://wiki.kerbalspaceprogram.com/wiki/Main_Page\u0022]SPECIAL THANKS TO\u003Cbr\u003E  [/URL][URL=\u0022http://wiki.kerbalspaceprogram.com/w/index.php?title=User:Darrknox\u0026amp;action=edit\u0026amp;redlink=1\u0022]Darrknox[/URL][URL=\u0022http://wiki.kerbalspaceprogram.com/wiki/Making_an_asset_from_start_to_finish\u0022] \u0026amp; [/URL][URL=\u0022http://wiki.kerbalspaceprogram.com/w/index.php?title=User:Killerhurtz\u0026amp;action=edit\u0026amp;redlink=1\u0022]Killerhurtz \u003Cbr\u003E [/URL][URL=\u0022http://wiki.kerbalspaceprogram.com/wiki/Making_an_asset_from_start_to_finish\u0022]FOR THE WORK THEY HAVE CONTRIBUTED TO KSP WIKI[/URL]\u003Cbr\u003E\u003Cbr\u003E[URL=\u0022http://forum.kerbalspaceprogram.com/threads/7529-Plugin-Posting-Rules-And-Official-Documentation?p=156430\u0026amp;viewfull=1#post156430\u0022]This is a special Thanks to Mu for posting his hard work, and allowing us to use it so we can learn this stuff.\u003Cbr\u003EAwesome work Mu, i couldn\u0027t have even started this without the work you have already put into this, i hope\u003Cbr\u003Eyou like how this turns out.[/URL]\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ECreating a Mod\u003C/p\u003E\u003Cp\u003EStep 1 - Choosing your programs\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    A list of 3d software with links to download goes here - plus a conversation about selecting your programs with a tutorial using 3ds and one using Blender.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EStep 2 - Understanding Folder Design\u003C/p\u003E\u003Cp\u003EFirst of all, there\u0027s your main folder. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EYou can name this folder anything you would like to, just make sure there\u0027s no underscore. \u003Cbr\u003E\u003Cbr\u003EThis Folder has what i call a VariableName, simply meaning you\u003Cbr\u003Ecan name it what ever you would like to. HOWEVER, you want to keep your\u003Cbr\u003EVariableName folders as short as you can yet allow youself to easily identify it.\u003Cbr\u003EDO NOT USE AN UNDERSCORE ON THIS FOLDER!\u003Cbr\u003E\u003Cbr\u003EFor my example, My main folder will be named JGSMods\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EKeep those names short and identifiable, by you.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EWhen you test your mod and extract it into your game, your folder names will \u003Cbr\u003Ework fine but you do not know the install location of the final user.\u003Cbr\u003E\u003Cbr\u003EIf the User is using, for example, a Steam version of KSP, it could be located as deep\u003Cbr\u003Einto their directory as:\u003Cbr\u003E\u003Cbr\u003Ec:\\Program Files (x86)\\Steam\\SteamApps\\common\\Kerbal Space Program\\GameData\\VariableName\u003Cbr\u003E\u003Cbr\u003ESo, you can see how, if your mods directory structer goes very deep, the end user might end up\u003Cbr\u003Ewith an error during extraction that the folder name is too long and anything that was in those\u003Cbr\u003Efolders will not be extracted into their game. Then your mod will not work for them and you might hear about it.\u003Cbr\u003EThere is an easy work around for the user, if they know it, but they will never get it working if they don\u0027t know it.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDid you know that you can trace from Christopher Columbus to Nikola Tesla with an EGG!\u003C/p\u003E\u003Cp\u003EIf I told you that you could place an egg, standing on end, on a table and it would stay like that...\u003C/p\u003E\u003Cp\u003Euntil it rotted, you could try all day and never succeed until I tell you how to do it... Or if you\u003C/p\u003E\u003Cp\u003Ealready know about the story of Christopher Columbus, Nikola Tesla, and the egg. I would let you try \u003C/p\u003E\u003Cp\u003Euntil you gave up, then simply stand the egg on end, press down until the egg cracks (but not let the inner sack break)\u003C/p\u003E\u003Cp\u003Eand the egg will stand until it rots, or you throw it away... or eat it lol\u003C/p\u003E\u003Cp\u003EThe point of comparing these two stories is to show that there can be more than one acceptable solution,\u003C/p\u003E\u003Cp\u003Eto the goal of your code.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Egg_of_Columbus\u0022 rel=\u0022external nofollow\u0022\u003EChristoper Columbus Egg Story Wiki\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E \u003Ca href=\u0022http://www.pes.ee.ethz.ch/uploads/tx_ethstudies/Tueysuez_Tesla__s_Egg_SAMAFS2014.pdf\u0022 rel=\u0022external nofollow\u0022\u003EProf. Dr. J. W. Kolar\u0027s \u0027Tesla\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s Egg of Columbus:...\u0027\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESteam Version Users\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[Steam Version NOTE]\u003Cbr\u003EEDITED: If you have the Steam Version, I recommend trying to get a refund and buying it \u003Cbr\u003E             Threw the KSP store. I am done with Steam! Im in the process of removing Steam \u003Cbr\u003E             and, it looks like I will have to re-purchase some software I bought threw them.\u003Cbr\u003E\u003Cbr\u003EI had the Steam version of the game, and i ran it in Steam most of the time.\u003Cbr\u003E If you have the Steam version of KSP, you do not have to run it from the Steam Folder.\u003Cbr\u003EI have found that sometimes the game will run from c:\\(your folder name)\\ Kerbal Space Program\u003Cbr\u003Ewhen you have problems with a mod and the game crashes from the Steam install location.\u003Cbr\u003E\u003Cbr\u003EI am still not sure what causes the crash but i think it is the Steam Overlay (when your \u003Cbr\u003Emods messing up and your game is unstable because of it). So if using Steam, and your game crashs,\u003Cbr\u003Etry running it from a different location so you can get to debugging, might save you some time. Or you\u003Cbr\u003Ecan try to get a refund and buy it from the KSP store.\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E 2. Allowed sub-folders\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            a. Textures    - Your texture must be in the folder labeled Textures. (a drawing for the game) \u003Cbr\u003E                                  That \u0022s\u0022 is important, tiny things like that will corrupt your part.\u003Cbr\u003E\u003Cbr\u003E            b. Resources  - your model mesh (usually a .dae) Your part.DAE is simply your exported mesh and\u003Cbr\u003E                                   its collision\u003Cbr\u003E\u003Cbr\u003E            c. Parts          - Part.CFG is your text config file correlating all of your names (case sensitive) so the\u003Cbr\u003E                                   game can run from the locations. \u003Cbr\u003E\u003Cbr\u003E            d. sounds       - If you wish to include sounds, an additional folder named \u0022sounds\u0022 should be created.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EStep 3 - Creating The Asset (Asset being the modifcation, or mod, that you are making in the game)\u003C/p\u003E\u003Cp\u003E A. Some things to keep in your mind while creating an asset(s); \u003C/p\u003E\u003Cp\u003E Triscount, Unwrapping, Textures, and Boundingbox (Collision mesh)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        1. Triscount \u003Cbr\u003E            a. Tris are what every model is made out of in any 3D game to date.\u003Cbr\u003E                No matter what program you use a game engine will split your model into the smallest geometric\u003Cbr\u003E                shape; a triangle. This should be your unit of measure when judging the complexity of a model.\u003Cbr\u003E                The vanilla, or stock parts, default pieces issued with the game are the best judge for what the \u003Cbr\u003E                KSP is built for, and the mod packs on the forums are the best judge for what the limit is. \u003Cbr\u003E\u003Cbr\u003E            b. The triscount for most of the stock pieces are around 300 tris for small pieces like the\u003Cbr\u003E                TT-38K Radial Decoupler, and 2000 tris for pieces like the LV-T30 Liquid Fuel Engine \u003Cbr\u003E                and a general 1000 tris count for the boosters, fuel tanks, and pods.\u003Cbr\u003E\u003Cbr\u003E            c. When assessing your tris count it\u0027s necessarily to keep in mind you want an optimized number.\u003Cbr\u003E               You want to have the lowest tricount possible, without taking away from the integrity of the\u003Cbr\u003E               model\u0027s silhouette.\u003Cbr\u003E\u003Cbr\u003E            d. When modeling one can get lost in adding detail, and whilst finishing up its important to give \u003Cbr\u003E                your model a twice over. Don\u0027t feel bad if you aren\u0027t quite satisfied with your model:\u003Cbr\u003E                remember that what gives a soul to the model really is the texture.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EStep 4 - Creating The Collision Mesh\u003C/p\u003E\u003Cp\u003E 2. Boundingbox (Collision mesh)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E            a. This will be the object KSP uses to calculate collisions and physics with respect to your part.\u003Cbr\u003E\u003Cbr\u003E                It is simply a matter of creating another separate mesh in the program you are using that has a\u003Cbr\u003E                reasonably close resemblance to the object you have made. It must be convex, and must NOT\u003Cbr\u003E                be parented/joined to the main mesh.\u003Cbr\u003E\u003Cbr\u003E             b. This collision mesh is to be called -\u003Cbr\u003E\u003Cbr\u003E                 \u0022node_collider\u0022\u003Cbr\u003E\u003Cbr\u003E               Once it is named, add one empty material to it, and you are set to go.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Step 5 - Unwrapping Your Asset\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E - This step varies from program to program. Refer to your program\u0027s documentation to make sure. \u003Cbr\u003E\u003Cbr\u003E        1. Essentially, this part binds the faces of your model to a specific spot in your texture file. \u003Cbr\u003E           There really isn\u0027t much to be said about this; experience is what makes good unwraps.\u003Cbr\u003E\u003Cbr\u003E        2. Once you have distributed the faces around the UV plan, make sure to make a render/snapshot \u003Cbr\u003E            of the UV position, saving the resulting image in a PNG file that has a format in powers of two\u003Cbr\u003E            (128x128 or 256x256 is ideal, 512x512 for high-detail meshes. 1024x1024 is beginning to be a bit large.)\u003Cbr\u003E\u003Cbr\u003E    **Location of the UV unwrapping tool in...\u003Cbr\u003E\u003Cbr\u003E        Maya: Polygon menu set, upper left. There\u0027s an icon for it at the very end of the lane.\u003Cbr\u003E\u003Cbr\u003E        3ds Max: Select an object or a group of objects. Open Modifiers menu, on the right, and select UV Unwrap.\u003Cbr\u003E                      Scroll down, click edit.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Step 6 - Exporting Your Asset\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        1. Again, it depends on the program, but usually you\u0027re going to want to export it using the \u003Cbr\u003E            COLLADA exporter plugin.\u003Cbr\u003E            (for Maya and 3ds, it\u0027s available on the Autodesk website).\u003Cbr\u003E\u003Cbr\u003E        2. Export it as a .dae - although here\u0027s a list of things to make sure your plugin is well configured: \u003Cbr\u003E            a. -Your axes: make sure that the plugin is set to convert your model to the Y-up convention, \u003Cbr\u003E                    else you risk having a sideways model.\u003Cbr\u003E\u003Cbr\u003E            b. -The scale: set your plugin to convert your model to a scale of 1unit=1m \u003Cbr\u003E                                 (setting the units measurements to meters) or You\u0027re going to have \u003Cbr\u003E                                 an oversized/undersized model.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E**************************this is your spot***********************************************\u003C/p\u003E\u003Cp\u003E Step 7 - Preliminary configuration\u003C/p\u003E\u003Cp\u003E 1. At this point, you may open the part.cfg to allow partslab to load it (refer to this tutorial for the format).\u003C/p\u003E\u003Cp\u003E\u0026gt;\u0026gt; \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/User:Greys/The_CFG_File_and_ConfigNodes\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/User:Greys/The_CFG_File_and_ConfigNodes\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u0026gt;\u0026gt;\u003C/p\u003E\u003Cp\u003E\u0026gt;\u0026gt; **this is another page explaining CFG_File and ConfigNodes** \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/User:Greys/The_CFG_File_and_ConfigNodes\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/User:Greys/The_CFG_File_and_ConfigNodes\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u0026gt;\u0026gt;*************************************************************************************************************************************************\u003Cbr\u003E\u0026gt;\u0026gt;                            Tutorials \u0026gt;\u0026gt; [URL]http://wiki.kerbalspaceprogram.com/wiki/Tutorials[/URL]\u003Cbr\u003E\u0026gt;\u0026gt;                           \u003Cbr\u003E\u0026gt;\u0026gt;            Complete up to asset parameters, inclusively - the rest isn\u0027t too important for now. \u003Cbr\u003E\u0026gt;\u0026gt;\u003Cbr\u003E\u0026gt;\u0026gt;\u0026gt; From above - Preliminary configuration - [URL]http://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation[/URL]\u003Cbr\u003E\u003Cbr\u003EI. Basic Part Making Guidelines\u003Cbr\u003E    A. Ensure that the model itself will not break the game on loading:\u003Cbr\u003E    B. The file must be a .dae file.\u003Cbr\u003E        C. Every\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACeven the collision mesh\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACmesh must have a material.\u003Cbr\u003E        D. The parts must be correctly named; e.g., the collision mesh should always be called \u0022node_collider\u0022\u003Cbr\u003E\u003Cbr\u003E    E. Ultimately KSP will need a .mu file to load the file into the Game Database.\u003Cbr\u003E        Unity contains a .mu exporting function with the KSP Part Tools.\u003Cbr\u003E\u003Cbr\u003E        1. 0.23 PartTools by - Mu - Developer - *might be install issues - this must be added to Unity, then using tools set it to KSP GameData directory.*\u003Cbr\u003E\u003Cbr\u003E            a. Here is the link for the 0.23 PartTools package.\u003Cbr\u003E                [URL]https://kerbalspaceprogram.com/parttools/PartTools023.zip[/URL]\u003Cbr\u003E                Not much else has changed really but will now let you export .mu files with KSPParticleEmitters for use in your mods.\u003Cbr\u003E\u003Cbr\u003E            b. KSPParticleEmitter was built because Unity particle emitters are notoriously hard to script and serialize.\u003Cbr\u003E               It was impossible to save/load them from files without a wrapper of some kind.\u003Cbr\u003E               Sadly it does lead to some limitations in the space orientation and spawning of the particles.\u003Cbr\u003E               However for simple thrust and rcs jets it should be fine.\u003Cbr\u003E               If Unity ever open the particle emitters up to be able to script for them properly then we will update KSPParticleEmitter\u003Cbr\u003E               to match.\u003Cbr\u003E\u003Cbr\u003E            c. If you require more extreme particle emitters then you will need UnityPro and AssetBundles to export them,\u003Cbr\u003E               alternatively you can spawn our inbuilt ones via code. -- might be\u003Cbr\u003E\u003Cbr\u003E        2. PartTools - from README within package - ??0.20 WTF?? this is 0.23 - ok whatever---\u003Cbr\u003E\u003Cbr\u003E            a. Overview -\u003Cbr\u003E                 PartTools has had a refresh and is now a lot easier to use. It comes in precompiled dlls and a nicer directory structure\u003Cbr\u003E                 and supports some more advanced features. Because of the ability to read another model\u0027s textures by name, it no longer\u003Cbr\u003E                 forces renaming of textures to modelXXX. The \u0027model name\u0027 is now used as the actual filename of the model.\u003Cbr\u003E                 Do not add an extension to  this field.\u003Cbr\u003E\u003Cbr\u003E             b. To make PartTools work -\u003Cbr\u003E                1. you need to add the new package to Unity and then set your GameData directory via Tools -\u003Cbr\u003E\u003Cbr\u003E                2. Tools -  \u0026gt;KSP PartTools. This will set the GameData directory and make all paths used in PartTools relative to that.\u003Cbr\u003E\u003Cbr\u003E                3. KSPParticleEmitter -\u003Cbr\u003E                    a. PartTools now also supports a particle emitter, KSPParticleEmitter which is included in the PartTools package.\u003Cbr\u003E                             Unity native particle emitters will not work as they are not fully serializable. KSPParticleEmitter\u003Cbr\u003E                            is based upon the legacy particle emitter, see the unity docs for information, however it also\u003Cbr\u003E                            supports a variety of emitter shapes. The KSPParticleEmitter is fully animatable via the standard\u003Cbr\u003E                            unity animation system like other PartTools assets.\u003Cbr\u003E\u003Cbr\u003E                     b. To create a material for a KSPParticleEmitter use the two included KSP/Particle shaders. There is an alpha blended and additive shader.\u003Cbr\u003E\u003Cbr\u003E                4. PropTools - PropTools, the system to create internal spaces for KSP, has had a major rebuild. It can now load and save internal space configs\u003Cbr\u003E                       and also load models and textures of the props and internal spaces. No longer having to use the awful proxy system!\u003Cbr\u003E\u003Cbr\u003E                     a. If you are working on an existing internal space then open the PartTools window (Tools-\u0026gt;KSP PartTools), set the game\u0027s GameData\u003Cbr\u003E                       directory and then you can instantiate internal spaces and props via that window.\u003Cbr\u003E\u003Cbr\u003E                     b. If you are creating a new internal space then you currently need to create an INTERNAL config manually. That can then be loaded by PartTools.\u003Cbr\u003E\u003Cbr\u003E                 NOTE: Always keep the PartTools window open as it assists in prop selection to sidestep a Unity editor bug.\u003Cbr\u003E\u003Cbr\u003EII. Part file creation -\u003Cbr\u003E\u003Cbr\u003E    A. Save an empty notepad file, which will become the .cfg\u003Cbr\u003E          in the directory of your addon\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACusually \u0022\u003Cbr\u003E        ../KerbalSpaceProgramDirectory/Parts/yourAddon\u0022.\u003Cbr\u003E\u003Cbr\u003E        This empty file will become the .cfg (your config file)\u003Cbr\u003E\u003Cbr\u003E    B. Config file order -\u003Cbr\u003E\u003Cbr\u003E        PART {\u003Cbr\u003E\u003Cbr\u003E            // Title\u003Cbr\u003E            // Name of your part\u003Cbr\u003E            //\u003Cbr\u003E\u003Cbr\u003E            // --- general parameters ---\u003Cbr\u003E\u003Cbr\u003E            // --- asset parameters ---\u003Cbr\u003E\u003Cbr\u003E            // --- node definitions ---\u003Cbr\u003E\u003Cbr\u003E            // --- FX definitions ---\u003Cbr\u003E\u003Cbr\u003E            // --- Sound FX definition ---\u003Cbr\u003E\u003Cbr\u003E            // --- editor parameters ---\u003Cbr\u003E\u003Cbr\u003E            // --- attachment rules: stck, srfAttach, allowStack, allowSrfAttach, allowCollision ---\u003Cbr\u003E\u003Cbr\u003E            // --- standard part parameters ---\u003Cbr\u003E\u003Cbr\u003E            // --- specific part parameters ---\u003Cbr\u003E\u003Cbr\u003E            MODULE {\u003Cbr\u003E\u003Cbr\u003E                // ---specific module parameters ---\u003Cbr\u003E\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            // --- other MODULEs ---\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    note - The slashes before each title indicate that the line thereof has been commented out; the program ignores such lines. (rem lines)\u003Cbr\u003E\u003Cbr\u003E    C. Title -\u003Cbr\u003E\u003Cbr\u003E        1. Atop most part files are a couple of lines that resemble the ones below:\u003Cbr\u003E\u003Cbr\u003E        // Kerbal Space Program - Configuration file\u003Cbr\u003E        // My super awesome engine that can go at a kajillion miles per hour, lol\u003Cbr\u003E\u003Cbr\u003E        2. These lines are useful when others want to learn from your part file.\u003Cbr\u003E           The first line states that this file is a part file for KSP; the second states its name.\u003Cbr\u003E\u003Cbr\u003E        // Kerbal Space Program - Part CFG file\u003Cbr\u003E        // Mark V Rocket Engine\u003Cbr\u003E\u003Cbr\u003E\u0026gt;\u0026gt; Onwards!\u003Cbr\u003E\u003Cbr\u003E    D. General Parameters -\u003Cbr\u003E\u003Cbr\u003E        // --- general parameters ---\u003Cbr\u003E\u003Cbr\u003E        1. This section follows the title and describes several properties of all parts. Below is a list of what goes under General Parameters:\u003Cbr\u003E\u003Cbr\u003E            name = solidBooster\u003Cbr\u003E            //Leave this next line as is unless you have a reason\u003Cbr\u003E            module = Part\u003Cbr\u003E            author = Il Carnefice\u003Cbr\u003E\u003Cbr\u003E            a. name - It can be anything that is unique, one word, and without an underscore;\u003Cbr\u003E               it\u0027s not commented out because KSP will internally (the user will not see this name) thus refer to the part.\u003Cbr\u003E\u003Cbr\u003E                name = solidBooster\u003Cbr\u003E\u003Cbr\u003E            b. module - This used to describe the specific part class behavior but now this is handled by the Module tags later in the file.\u003Cbr\u003E               Set it to Part.\u003Cbr\u003E\u003Cbr\u003E                module = Part\u003Cbr\u003E\u003Cbr\u003E            d. author - Author name\u003Cbr\u003E\u003Cbr\u003E            e. Parts -  \u003Cbr\u003E\u003Cbr\u003E                Part Name         Description\u003Cbr\u003E\u003Cbr\u003E                SolidRocket         Resembles a solid rocket booster - a continually burning rocket that lacks thrust control and\u003Cbr\u003E                            cannot be deactivated once lit.\u003Cbr\u003E\u003Cbr\u003E                LiquidEngine         Resmebles an orbital maneuvering system - a rocket engine with controllable thrust.\u003Cbr\u003E\u003Cbr\u003E                FuelTank         Contains fuel.\u003Cbr\u003E\u003Cbr\u003E                CommandPod         Contains crew and a control system.\u003Cbr\u003E\u003Cbr\u003E                SASModule         Holds course.\u003Cbr\u003E\u003Cbr\u003E                SASModule2         ???\u003Cbr\u003E\u003Cbr\u003E                Strut             Connects rocket parts. Has no special abilities.\u003Cbr\u003E\u003Cbr\u003E                Decoupler         Connects rocket parts and can jettison itself and the parts it\u0027s connected to.\u003Cbr\u003E\u003Cbr\u003E                RadialDecoupler     Connects and can jettison parts much as does a Decoupler, but radially.\u003Cbr\u003E\u003Cbr\u003E                Parachutes         Deploys a parachute.\u003Cbr\u003E\u003Cbr\u003E                ControlSurface         Movable wing-like surface. Can act as a rudder, aileron, elevator, canard or other\u003Cbr\u003E                            aerodynamic control surface - function depends on placement on a ship.\u003Cbr\u003E\u003Cbr\u003E                WarpEngine         A warp engine. Not functional as of 0.15.2.\u003Cbr\u003E\u003Cbr\u003E                Winglet         A fixed, lifting part.\u003Cbr\u003E\u003Cbr\u003E                Stabilizer         Similar to ControlSurface (recommend to not use)\u003Cbr\u003E\u003Cbr\u003E                StrutConnector         ???\u003Cbr\u003E\u003Cbr\u003E                RCSFuelTank         A RCS tank.\u003Cbr\u003E\u003Cbr\u003E                RCSModule         A RCS thruster.\u003Cbr\u003E\u003Cbr\u003E                AtmosphericEngine     Atmospheric engine with air flow parameters.\u003Cbr\u003E\u003Cbr\u003E                AdvSASModule         An SAS-type module that alters user input allowing for control of RCS, pod torque,\u003Cbr\u003E                            gimballing engines and control surfaces.\u003Cbr\u003E\u003Cbr\u003E                DecouplerGUI         A normal decoupler that can be disconnected via the right-click GUI.\u003Cbr\u003E\u003Cbr\u003E                DockingPort         An unfinished docking port?\u003Cbr\u003E\u003Cbr\u003E                FuelLine         Transfers fuel.\u003Cbr\u003E\u003Cbr\u003E                FuelTankGUI         A fuel tank with a right-click GUI to disable flow.\u003Cbr\u003E\u003Cbr\u003E                LandingLeg         A moving landing leg, using .cfg parameters to move.\u003Cbr\u003E\u003Cbr\u003E                HLandingLeg         A moving landing leg, using animations to move.\u003Cbr\u003E\u003Cbr\u003E                HParachutes         An animated parachute module?\u003Cbr\u003E\u003Cbr\u003E                LandingGear         Wheeled, animated landing gear for spaceplanes.\u003Cbr\u003E\u003Cbr\u003E                SatELight         A flash-light module.\u003Cbr\u003E\u003Cbr\u003E                LiquidFuelEngine     A liquid fuel engine that uses Thrust and Isp, rather than Thrust and fuel units.\u003Cbr\u003E\u003Cbr\u003E\u0026gt;\u0026gt;\u0026gt;            f. Part Modules - Please read: \u00220.15 code update - PartModule, KSPField, KSPEvent, ConfigNode and PartResource\u0022\u003Cbr\u003E\u0026gt;\u0026gt;\u0026gt; \u003Cbr\u003E\u0026gt;\u0026gt;\u003Cbr\u003E%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E***************************************this is your place***********************************************************\u003C/p\u003E\u003Cp\u003E Step 8 - Texturing your Asset\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        1. Open your UV render in your image editing program of choice\u003Cbr\u003E         (I personally recommend Gimp or Photoshop, but MSPaint is fine too).\u003Cbr\u003E        2. Get artistic, following the lines of the UV map so it actually shows on your model.\u003Cbr\u003E        3. Save it the same format, but try not overwriting the UV - it\u0027s always handy to have.\u003Cbr\u003E        4. Again, here, there is only experience which will make you good \u003Cbr\u003E            - although a quick tip: premade textures are quite handy to have \u003Cbr\u003E            (such as metal textures and such) if you\u0027re feeling lazy/unambitious/unskilled.\u003Cbr\u003E             Trial and error is quite often used here. \u003Cbr\u003E\u003Cbr\u003E****        5. You may use the PartLab, available on the download page, to check the progress/if it\u0027s right.\u003Cbr\u003E            Some say it\u0027s possible to do so before exporting the model by importing the texture into the 3d modelling program,\u003Cbr\u003E            but I have never found out how. Keep me updated (Killerhurtz on the forums) on how to do this if you figure it out.\u003Cbr\u003E                side note - Nutt007 Capsule Communicator - PartLab is very out dated, and probably cannot read .mu. \u003Cbr\u003E                                        I recommend not using it 11th October 2012, 12:30 #2\u003Cbr\u003E***********************************************************************************************\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E Step 9 - Back to the config\u003Cbr\u003E\u003Cbr\u003E        1. Now that you\u0027re satisfied with your texture, it\u0027s time to finalize your .cfg file.\u003Cbr\u003E             Again, refer to the documentation as to how to outfit it.\u003Cbr\u003E\u003Cbr\u003E        2.Quick tips:\u003Cbr\u003E            a. -NODES- Having your mesh open can help setting the different nodes \u003Cbr\u003E                      (under 3ds Max, there is even a plugin to get the correct, high-accuracy node vector available with the SDK).\u003Cbr\u003E            b. The angles aren\u0027t really angles: they show the second point of a line with which the model is going to align itself.\u003Cbr\u003E\u003Cbr\u003E            c. -EFFECTS\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACGraphical effects You may refer to this thread for a list of effects you may use for your parts. (dead link)\u003Cbr\u003E\u003Cbr\u003E Step 10 - The Last Checkup and the preparation\u003Cbr\u003E\u003Cbr\u003E        1. Now, in theory, you should have your full part.\u003Cbr\u003E             However, don\u0027t get ahead of yourself - you\u0027ll only attract shrapnel if you jump right in.\u003Cbr\u003E            Be sure to test your part thoroughly \u003Cbr\u003E                (an easy way to do this is to have a clean install dedicated to testing new parts to make sure it works\u003Cbr\u003E                 before sending it into your main install).\u003Cbr\u003E\u003Cbr\u003E        2. Tweak it as you want it to feel. \u003Cbr\u003E            Once you\u0027re satisfied, make sure to take a few screenshots of what your part(s) look like.\u003Cbr\u003E             Upload your pictures and part(s) somewhere, and save the links.\u003Cbr\u003E                (I wouldn\u0027t recommend dropbox - too high traffic might get your public folder disabled for sharing)\u003Cbr\u003E\u003Cbr\u003E        3. Once all of this is done, you may proceed to...\u003Cbr\u003E\u003Cbr\u003E  Step 11 - The Release\u003Cbr\u003E\u003Cbr\u003E        1. Using the links you have previously acquired, make a thread in the Projects and Release section of the KSP forums. \u003Cbr\u003E            Post it, wait, and bask in your newfound success! \u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E*********************************************************************************************************************************************************             \u003Cbr\u003E\u003Cbr\u003E  - Preliminary configuration - [URL]http://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation[/URL]\u003Cbr\u003E\u003Cbr\u003EI. Basic Part Making Guidelines\u003Cbr\u003E    A. Ensure that the model itself will not break the game on loading:\u003Cbr\u003E    B. The file must be a .dae file.\u003Cbr\u003E        C. Every\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACeven the collision mesh\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACmesh must have a material.\u003Cbr\u003E        D. The parts must be correctly named; e.g., the collision mesh should always be called \u0022node_collider\u0022 \u003Cbr\u003E\u003Cbr\u003E    E. Ultimately KSP will need a .mu file to load the file into the Game Database. \u003Cbr\u003E        Unity contains a .mu exporting function with the KSP Part Tools. \u003Cbr\u003E\u003Cbr\u003E        1. 0.23 PartTools by - Mu - Developer - *might be install issues - this must be added to Unity, then using tools set it to KSP GameData directory.*\u003Cbr\u003E\u003Cbr\u003E            a. Here is the link for the 0.23 PartTools package.\u003Cbr\u003E                [URL]https://kerbalspaceprogram.com/parttools/PartTools023.zip[/URL]\u003Cbr\u003E                Not much else has changed really but will now let you export .mu files with KSPParticleEmitters for use in your mods.\u003Cbr\u003E\u003Cbr\u003E            b. KSPParticleEmitter was built because Unity particle emitters are notoriously hard to script and serialize. \u003Cbr\u003E               It was impossible to save/load them from files without a wrapper of some kind. \u003Cbr\u003E               Sadly it does lead to some limitations in the space orientation and spawning of the particles. \u003Cbr\u003E               However for simple thrust and rcs jets it should be fine. \u003Cbr\u003E               If Unity ever open the particle emitters up to be able to script for them properly then we will update KSPParticleEmitter \u003Cbr\u003E               to match.\u003Cbr\u003E\u003Cbr\u003E            c. If you require more extreme particle emitters then you will need UnityPro and AssetBundles to export them, \u003Cbr\u003E               alternatively you can spawn our inbuilt ones via code. -- might be\u003Cbr\u003E\u003Cbr\u003E        2. PartTools - from README within package - ??0.20 WTF?? this is 0.23 - ok whatever---\u003Cbr\u003E\u003Cbr\u003E            a. Overview -\u003Cbr\u003E                 PartTools has had a refresh and is now a lot easier to use. It comes in precompiled dlls and a nicer directory structure\u003Cbr\u003E                 and supports some more advanced features. Because of the ability to read another model\u0027s textures by name, it no longer\u003Cbr\u003E                 forces renaming of textures to modelXXX. The \u0027model name\u0027 is now used as the actual filename of the model. \u003Cbr\u003E                 Do not add an extension to  this field.\u003Cbr\u003E\u003Cbr\u003E             b. To make PartTools work - \u003Cbr\u003E                1. you need to add the new package to Unity and then set your GameData directory via Tools - \u003Cbr\u003E\u003Cbr\u003E                2. Tools -  \u0026gt;KSP PartTools. This will set the GameData directory and make all paths used in PartTools relative to that.\u003Cbr\u003E\u003Cbr\u003E                3. KSPParticleEmitter -\u003Cbr\u003E                    a. PartTools now also supports a particle emitter, KSPParticleEmitter which is included in the PartTools package. \u003Cbr\u003E                             Unity native particle emitters will not work as they are not fully serializable. KSPParticleEmitter\u003Cbr\u003E                            is based upon the legacy particle emitter, see the unity docs for information, however it also \u003Cbr\u003E                            supports a variety of emitter shapes. The KSPParticleEmitter is fully animatable via the standard \u003Cbr\u003E                            unity animation system like other PartTools assets.\u003Cbr\u003E\u003Cbr\u003E                     b. To create a material for a KSPParticleEmitter use the two included KSP/Particle shaders. There is an alpha blended and additive shader.\u003Cbr\u003E\u003Cbr\u003E                4. PropTools - PropTools, the system to create internal spaces for KSP, has had a major rebuild. It can now load and save internal space configs\u003Cbr\u003E                       and also load models and textures of the props and internal spaces. No longer having to use the awful proxy system!\u003Cbr\u003E\u003Cbr\u003E                     a. If you are working on an existing internal space then open the PartTools window (Tools-\u0026gt;KSP PartTools), set the game\u0027s GameData \u003Cbr\u003E                       directory and then you can instantiate internal spaces and props via that window.\u003Cbr\u003E\u003Cbr\u003E                     b. If you are creating a new internal space then you currently need to create an INTERNAL config manually. That can then be loaded by PartTools.\u003Cbr\u003E\u003Cbr\u003E                 NOTE: Always keep the PartTools window open as it assists in prop selection to sidestep a Unity editor bug.\u003Cbr\u003E\u003Cbr\u003EII. Part file creation - \u003Cbr\u003E\u003Cbr\u003E    A. Save an empty notepad file, which will become the .cfg\u003Cbr\u003E          in the directory of your addon\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACusually \u0022\u003Cbr\u003E        ../KerbalSpaceProgramDirectory/Parts/yourAddon\u0022.\u003Cbr\u003E\u003Cbr\u003E        This empty file will become the .cfg (your config file)\u003Cbr\u003E\u003Cbr\u003E    B. Config file order - \u003Cbr\u003E\u003Cbr\u003E        PART {\u003Cbr\u003E\u003Cbr\u003E            // Title\u003Cbr\u003E            // Name of your part\u003Cbr\u003E            // \u003Cbr\u003E\u003Cbr\u003E            // --- general parameters ---\u003Cbr\u003E\u003Cbr\u003E            // --- asset parameters ---\u003Cbr\u003E\u003Cbr\u003E            // --- node definitions ---\u003Cbr\u003E\u003Cbr\u003E            // --- FX definitions ---\u003Cbr\u003E\u003Cbr\u003E            // --- Sound FX definition ---\u003Cbr\u003E\u003Cbr\u003E            // --- editor parameters ---\u003Cbr\u003E\u003Cbr\u003E            // --- attachment rules: stck, srfAttach, allowStack, allowSrfAttach, allowCollision ---\u003Cbr\u003E\u003Cbr\u003E            // --- standard part parameters ---\u003Cbr\u003E\u003Cbr\u003E            // --- specific part parameters ---\u003Cbr\u003E\u003Cbr\u003E            MODULE {\u003Cbr\u003E\u003Cbr\u003E                // ---specific module parameters ---\u003Cbr\u003E\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            // --- other MODULEs ---\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    note - The slashes before each title indicate that the line thereof has been commented out; the program ignores such lines. (rem lines)\u003Cbr\u003E\u003Cbr\u003E    C. Title - \u003Cbr\u003E\u003Cbr\u003E        1. Atop most part files are a couple of lines that resemble the ones below: \u003Cbr\u003E\u003Cbr\u003E        // Kerbal Space Program - Configuration file\u003Cbr\u003E        // My super awesome engine that can go at a kajillion miles per hour, lol\u003Cbr\u003E\u003Cbr\u003E        2. These lines are useful when others want to learn from your part file. \u003Cbr\u003E           The first line states that this file is a part file for KSP; the second states its name. \u003Cbr\u003E\u003Cbr\u003E        // Kerbal Space Program - Part CFG file\u003Cbr\u003E        // Mark V Rocket Engine\u003Cbr\u003E\u003Cbr\u003E\u0026gt;\u0026gt; Onwards! \u003Cbr\u003E\u003Cbr\u003E    D. General Parameters -\u003Cbr\u003E\u003Cbr\u003E        // --- general parameters ---\u003Cbr\u003E\u003Cbr\u003E        1. This section follows the title and describes several properties of all parts. Below is a list of what goes under General Parameters: \u003Cbr\u003E\u003Cbr\u003E            name = solidBooster\u003Cbr\u003E            //Leave this next line as is unless you have a reason\u003Cbr\u003E            module = Part\u003Cbr\u003E            author = Il Carnefice\u003Cbr\u003E\u003Cbr\u003E            a. name - It can be anything that is unique, one word, and without an underscore;\u003Cbr\u003E               it\u0027s not commented out because KSP will internally (the user will not see this name) thus refer to the part. \u003Cbr\u003E\u003Cbr\u003E                name = solidBooster\u003Cbr\u003E\u003Cbr\u003E            b. module - This used to describe the specific part class behavior but now this is handled by the Module tags later in the file.\u003Cbr\u003E               Set it to Part.\u003Cbr\u003E\u003Cbr\u003E                module = Part\u003Cbr\u003E\u003Cbr\u003E            d. author - Author name\u003Cbr\u003E\u003Cbr\u003E            e. Parts -  \u003Cbr\u003E\u003Cbr\u003E                Part Name         Description\u003Cbr\u003E\u003Cbr\u003E                SolidRocket         Resembles a solid rocket booster - a continually burning rocket that lacks thrust control and\u003Cbr\u003E                            cannot be deactivated once lit.\u003Cbr\u003E\u003Cbr\u003E                LiquidEngine         Resmebles an orbital maneuvering system - a rocket engine with controllable thrust.\u003Cbr\u003E\u003Cbr\u003E                FuelTank         Contains fuel.\u003Cbr\u003E\u003Cbr\u003E                CommandPod         Contains crew and a control system.\u003Cbr\u003E\u003Cbr\u003E                SASModule         Holds course.\u003Cbr\u003E\u003Cbr\u003E                SASModule2         ???\u003Cbr\u003E\u003Cbr\u003E                Strut             Connects rocket parts. Has no special abilities.\u003Cbr\u003E\u003Cbr\u003E                Decoupler         Connects rocket parts and can jettison itself and the parts it\u0027s connected to.\u003Cbr\u003E\u003Cbr\u003E                RadialDecoupler     Connects and can jettison parts much as does a Decoupler, but radially.\u003Cbr\u003E\u003Cbr\u003E                Parachutes         Deploys a parachute.\u003Cbr\u003E\u003Cbr\u003E                ControlSurface         Movable wing-like surface. Can act as a rudder, aileron, elevator, canard or other\u003Cbr\u003E                            aerodynamic control surface - function depends on placement on a ship.\u003Cbr\u003E\u003Cbr\u003E                WarpEngine         A warp engine. Not functional as of 0.15.2.\u003Cbr\u003E\u003Cbr\u003E                Winglet         A fixed, lifting part.\u003Cbr\u003E\u003Cbr\u003E                Stabilizer         Similar to ControlSurface (recommend to not use)\u003Cbr\u003E\u003Cbr\u003E                StrutConnector         ???\u003Cbr\u003E\u003Cbr\u003E                RCSFuelTank         A RCS tank.\u003Cbr\u003E\u003Cbr\u003E                RCSModule         A RCS thruster.\u003Cbr\u003E\u003Cbr\u003E                AtmosphericEngine     Atmospheric engine with air flow parameters.\u003Cbr\u003E\u003Cbr\u003E                AdvSASModule         An SAS-type module that alters user input allowing for control of RCS, pod torque,\u003Cbr\u003E                            gimballing engines and control surfaces.\u003Cbr\u003E\u003Cbr\u003E                DecouplerGUI         A normal decoupler that can be disconnected via the right-click GUI.\u003Cbr\u003E\u003Cbr\u003E                DockingPort         An unfinished docking port?\u003Cbr\u003E\u003Cbr\u003E                FuelLine         Transfers fuel.\u003Cbr\u003E\u003Cbr\u003E                FuelTankGUI         A fuel tank with a right-click GUI to disable flow.\u003Cbr\u003E\u003Cbr\u003E                LandingLeg         A moving landing leg, using .cfg parameters to move.\u003Cbr\u003E\u003Cbr\u003E                HLandingLeg         A moving landing leg, using animations to move.\u003Cbr\u003E\u003Cbr\u003E                HParachutes         An animated parachute module?\u003Cbr\u003E\u003Cbr\u003E                LandingGear         Wheeled, animated landing gear for spaceplanes.\u003Cbr\u003E\u003Cbr\u003E                SatELight         A flash-light module.\u003Cbr\u003E\u003Cbr\u003E                LiquidFuelEngine     A liquid fuel engine that uses Thrust and Isp, rather than Thrust and fuel units. \u003Cbr\u003E\u003Cbr\u003E\u0026gt;\u0026gt;\u0026gt;            f. Part Modules - Please read: \u00220.15 code update - PartModule, KSPField, KSPEvent, ConfigNode and PartResource\u0022\u003Cbr\u003E\u0026gt;\u0026gt;\u0026gt;            \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/7529-Plugin-Posting-Rules-And-Official-Documentation?p=156430\u0026amp;viewfull=1#post156430\u0022 rel=\u0022external nofollow\u0022\u003EOfficial PartModule Documentation\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E Welcome to the 0.15 patch.\u003C/p\u003E\u003Cp\u003E I want to outline a number of new bits that have come in and show you how to use them. These bits have filtered down from the new code which has been written to be easier to work with and easier to expand.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E   Please note that modding functionality has not changed at all.\u003Cbr\u003E   You can continue to use whatever interface you were using, and everything currently, should be backwards compatible.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003Cp\u003E However we are moving away from functional code in Part for reasons outlined below.\u003C/p\u003E\u003Cp\u003EII - What and why\u003C/p\u003E\u003Cp\u003E Firstly however I want to talk about the reasons for the change so you can understand (and comment on) the\u003C/p\u003E\u003Cp\u003E direction moving to 0.16 and beyond.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            Originally KSP was designed as a single-vessel orbital physics game.\u003Cbr\u003E\u003Cbr\u003E            As the success of the project increased, people obviously wanted more, so more features were added\u003Cbr\u003E            into the code. (Multiple vessels, etc.)\u003Cbr\u003E\u003Cbr\u003E            The community plugin development also wasn\u0027t originally planned and was tacked on at some point. \u003Cbr\u003E\u003Cbr\u003E            All these factors combined means that the core code is not easy for us to expand upon or,\u003Cbr\u003E            easy for you lot to write plugins for.\u003Cbr\u003E\u003Cbr\u003E            No doubt we all have big plans for KSP and to implement them properly we need to expand \u003Cbr\u003E            the base and make it fit for purpose.\u003Cbr\u003E\u003Cbr\u003E   Note - Personally, I am doing all my modding in the 64bit version of KSP, its time folks! I have been trying to\u003Cbr\u003E            to use only 64bit programs for the last 2 computers (about 10 years now). x64 is not new anymore\u003Cbr\u003E            and its freakn AWESOME. Things do have to be just right, i guess, (from some of the issues I have seen) \u003Cbr\u003E            but i don\u0027t seem to be having those issues. I have had my game, in x64, with up to 10.3Gb loaded into \u003Cbr\u003E            memory. Granted, not all the mods were working together correctly, but the game was running, decently,\u003Cbr\u003E            even with all the errors (I had well over 100 mods added to the game). The 32 bit version can not handle\u003Cbr\u003E            1/4 of what the 64bit version can, from what I have seen personally.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is my current x64 mod list.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i245.photobucket.com/albums/gg61/jhg2007/Kerbal%20Space%20Program%20Stuff/Tutorial%20images/ModlistPic_zpsbc75f676.png\u0022 alt=\u0022ModlistPic_zpsbc75f676.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EWith all my custom textures, this just can\u0027t run in 32-bit but it is running nicely in x64.\u003C/p\u003E\u003Cp\u003EI had to do a few things to get them to work, so don\u0027t expect that \u003C/p\u003E\u003Cp\u003Eyou can just download these mods and they will automatically all work together. \u003C/p\u003E\u003Cp\u003E(not getting into what I did for them all to work... mainly cuz i don\u0027t remember everything I did lol)\u003C/p\u003E\u003Cp\u003EI am not finished adding mods to this either. When this game is finished loading, Im sitting at 5.9Gb\u003C/p\u003E\u003Cp\u003Eused memory and the game is stable!\u003C/p\u003E\u003Cp\u003E Note2 - If everyone can get use to accomplishing tasks within their mods, in the same way and order, the code will flow\u003C/p\u003E\u003Cp\u003E better and the game will be more stable, in my opinion.\u003C/p\u003E\u003Cp\u003E So the plan has been to abstract what a Part and a Vessel actually are.\u003C/p\u003E\u003Cp\u003E A Vessel =\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        A vessel is a collection of connected parts, but with some orbit stuff tacked on.\u003Cbr\u003E\u003Cbr\u003E            - Vessel gets split into PartAssembly (a list of Parts) and Vessel (some orbit stuff).\u003Cbr\u003E\u003Cbr\u003E            - Having PartAssembly seperate from Vessel means that we can create other types of groups of parts.\u003Cbr\u003E            - Internal spaces, virtual cockpits, kerbal personalities, buildings, etc. Thus one editor screen can\u003Cbr\u003E              function as an editor for all types of assembly.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E A part =\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        A part is a physical object which can be connected to another, also has some code tacked on too.\u003Cbr\u003E\u003Cbr\u003E            - Part gets split into Part (model \u0026amp; physical connection) and PartModule (functional code).\u003Cbr\u003E\u003Cbr\u003E            - Having PartModule seperate from Part means we get to a smaller group of core parts which just define\u003Cbr\u003E              types of attachment logic and they can be have many (or none) code behaviours layered onto it.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E A PartModule\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    Basically a PartModule, Part or Vessel can send messages to things and recieve events from things.\u003Cbr\u003E\u003Cbr\u003E           code module ideally should be coded that it is ignorant of anything outside it. There are cases where you\u003Cbr\u003E           may want a group of modules to communicate with eachother, these can either be done with the messaging\u003Cbr\u003E           or ofc through direct references as before.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E    D. Defining attributes in your module code of KSPEvent (on methods) or KSPField (on fields) exposes that \u003Cbr\u003E        event/field to the internal reflection. These attributes also contain data for linking the event/field to the\u003Cbr\u003E        part action gui. You can also alter the values for your event and field attributes at runtime to control the\u003Cbr\u003E        flow of your code.\u003Cbr\u003E        - That last bit sounds confusing. When you see it in action later it\\\u0027ll sink in.\u003Cbr\u003E\u003Cbr\u003E    E. Lastly we need a simple, easy and powerful way of defining configuration files. For this purpose\u003Cbr\u003E        ConfigNode was born. Its an incredibly simple recursive node/value list and can be used a few ways.\u003Cbr\u003E        It contains all the code for reading and writing all the config files for the game.\u003Cbr\u003E\u003Cbr\u003E        1. PartModule - So, the long awaited PartModule class.\u003Cbr\u003E\u003Cbr\u003E            a. This is a piece of code which can be attached to any Part in its config file. You can add as many as you like and add\u003Cbr\u003E               multiple of the same type should you need to. They are added to the Part GameObject itself and you still have access to\u003Cbr\u003E               part and vessel directly from PartModule.\u003Cbr\u003E\u003Cbr\u003E            b. PartModules are very simple and currently contain only 6 overrides (compared to Part\\\u0027s.. err.. 34).\u003Cbr\u003E               Here is a PartModule showing all of its overrides in place... \u003Cbr\u003E                [Spoiler: code]\u003Cbr\u003E--------------------------------------------------------------------------------------------------------------------------------------------------------\u003Cbr\u003E\u003Cbr\u003Epublic class ModuleTest : PartModule\u003Cbr\u003E{\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Constructor style setup.\u003Cbr\u003E  /// Called in the Part\\\u0027s Awake method. \u003Cbr\u003E  /// The model may not be built by this point.\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnAwake()\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Called during the Part startup.\u003Cbr\u003E  /// StartState gives flag values of initial state\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnStart(StartState state)\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Per-frame update\u003Cbr\u003E  /// Called ONLY when Part is ACTIVE!\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnUpdate()\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Per-physx-frame update\u003Cbr\u003E  /// Called ONLY when Part is ACTIVE!\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnFixedUpdate()\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Called when PartModule is asked to save its values.\u003Cbr\u003E  /// Can save additional data here.\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  /// \u0026lt;param name=\u0027node\u0027\u0026gt;The node to save in to\u0026lt;/param\u0026gt;\u003Cbr\u003E  public override void OnSave(ConfigNode node)\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Called when PartModule is asked to load its values.\u003Cbr\u003E  /// Can load additional data here.\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  /// \u0026lt;param name=\u0027node\u0027\u0026gt;The node to load from\u0026lt;/param\u0026gt;\u003Cbr\u003E  public override void OnLoad(ConfigNode node)\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E--------------------------------------------------------------------------------------------------------------------------------------------------------- \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDefining Attributes in your modification.\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E \u003Cbr\u003E   Defining attributes in your module code of KSPEvent (on methods) or KSPField (on fields) exposes that \u003Cbr\u003E   event/field to the internal reflection. \u003Cbr\u003E\u003Cbr\u003E   These attributes also contain data for linking the event/field to the  part action gui. \u003Cbr\u003E   You can also alter the values for your event and field attributes at runtime to control the\u003Cbr\u003E   flow of your code.\u003Cbr\u003E        - That last bit sounds confusing. When you see it in action later it\u0027ll sink in.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDefining configuration files -\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ELastly we need a simple, easy and powerful way of defining configuration files. For this purpose\u003Cbr\u003E   ConfigNode was born. Its an incredibly simple recursive node/value list and can be used a few ways.\u003Cbr\u003E   It contains all the code for reading and writing all the config files for the game.\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E PartModule - So, the long awaited PartModule class.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E                     -This is a piece of code which can be attached to any Part in its config file. \u003Cbr\u003E                     -You can add as many as you like. You can also add more than one of the same type should you need to.\u003Cbr\u003E                     -They are  added to the Part GameObject itself and  you still have access to both, part and vessel, directly from  PartModule.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EPartModules are very simple and currently contain only 6 overrides (compared to Part\\\u0027s.. err.. 34).\u003C/p\u003E\u003Cp\u003E Here is a PartModule showing all of its overrides in place - \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E--------------------------------------------------------------------------------------------------------------------------------------------------------\u003Cbr\u003E\u003Cbr\u003Epublic class ModuleTest : PartModule\u003Cbr\u003E{\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Constructor style setup.\u003Cbr\u003E  /// Called in the Part\\\u0027s Awake method. \u003Cbr\u003E  /// The model may not be built by this point.\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnAwake()\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Called during the Part startup.\u003Cbr\u003E  /// StartState gives flag values of initial state\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnStart(StartState state)\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Per-frame update\u003Cbr\u003E  /// Called ONLY when Part is ACTIVE!\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnUpdate()\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Per-physx-frame update\u003Cbr\u003E  /// Called ONLY when Part is ACTIVE!\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnFixedUpdate()\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Called when PartModule is asked to save its values.\u003Cbr\u003E  /// Can save additional data here.\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  /// \u0026lt;param name=\u0027node\u0027\u0026gt;The node to save in to\u0026lt;/param\u0026gt;\u003Cbr\u003E  public override void OnSave(ConfigNode node)\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Called when PartModule is asked to load its values.\u003Cbr\u003E  /// Can load additional data here.\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  /// \u0026lt;param name=\u0027node\u0027\u0026gt;The node to load from\u0026lt;/param\u0026gt;\u003Cbr\u003E  public override void OnLoad(ConfigNode node)\u003Cbr\u003E  {\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E---------------------------------------------------------------------------------------------------------------------------------------------------------   \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/APIartModule\u0022 rel=\u0022external nofollow\u0022\u003ENote - check this link when you start writing from scratch:\u003C/a\u003E (the page is blank at this time, not sure what happened to what was there)\u003C/p\u003E\u003Cp\u003E Looks rather simple doesnt it and thats because it is.\u003C/p\u003E\u003Cp\u003E Its not set in stone and if we need more we can add them.\u003C/p\u003E\u003Cp\u003E In reality I hope you only have to use very few of those overrides for any given module. \u003C/p\u003E\u003Cp\u003E Most of the loading and saving will be taken care of by KSPField attributes unless you want to save complicated stuff.\u003C/p\u003E\u003Cp\u003EUnity -\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EYou can use any Unity MonoBehaviour method apart from Awake. \u003Cbr\u003E\u003Cbr\u003EYou can use OnDestroy as a destructor.\u003Cbr\u003E\u003Cbr\u003E Update and FixedUpdate, are perfectly fine, but there is no guarantee of having a\u003Cbr\u003E                                     rigidbody attached in the standard FixedUpdate.\u003Cbr\u003E                                     (you should check if the part  is controllable first)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EExample #1 - KSPEvents and KSPFields - \u003C/p\u003E\u003Cp\u003ESo lets look a more complicated example with communication between two modules and some KSPEvent/KSPField malarky. \u003C/p\u003E\u003Cp\u003EHere is ModuleCommand.\u003C/p\u003E\u003Cp\u003E It would sit on a command pod and scream orders to everything else. In this case it just screams one order, InputGearToggle.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[Spoiler: code]\u003Cbr\u003E______________________________________________________________________________________________________________\u003Cbr\u003E\u003Cbr\u003Epublic class ModuleCommand : PartModule\u003Cbr\u003E{\u003Cbr\u003E  public override void OnUpdate()\u003Cbr\u003E  {\u003Cbr\u003E    if (FlightInputHandler.state.gearDown || FlightInputHandler.state.gearUp)\u003Cbr\u003E    {\u003Cbr\u003E      part.SendEvent(\u0027InputGearToggle\u0027);\u003Cbr\u003E    }\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E__________________________________________________________________________________________________________\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ekey feature of ModuleCommand - \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EThe key feature of ModuleCommand is part.SendEvent(evtName) this tells its host part to send an event into the assembly.\u003Cbr\u003E\u003Cbr\u003EThe Part sends the event to all of its modules and all of  its attached  neighbours, who in turn send it to their modules, ad infinitum.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E So we need something to respond to that order.\u003C/p\u003E\u003Cp\u003E Here is ModuleAnimatorLandingGear. Technically it doesnt animate anything. It just changes a float from 0 to 1 and renames its gui event to reflect its current state.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E-------------------------------------------------------------------------------------------------------------------------------------------------------\u003Cbr\u003Epublic class ModuleAnimatorLandingGear : PartModule\u003Cbr\u003E{\u003Cbr\u003E  [KSPField]\u003Cbr\u003E  public float gearExtension = 0f;\u003Cbr\u003E\u003Cbr\u003E  [KSPEvent(guiActive = true, guiName = \u0027Toggle Gear\u0027)]\u003Cbr\u003E  public void InputGearToggle()\u003Cbr\u003E  {\u003Cbr\u003E    if (gearExtension == 0f)\u003Cbr\u003E    {\u003Cbr\u003E      gearExtension = 1f;\u003Cbr\u003E\u003Cbr\u003E      Events[\u0027InputGearToggle\u0027].guiName = \u0027Retract gear\u0027;\u003Cbr\u003E    }\u003Cbr\u003E    else\u003Cbr\u003E    {\u003Cbr\u003E      gearExtension = 0f;\u003Cbr\u003E\u003Cbr\u003E      Events[\u0027InputGearToggle\u0027].guiName = \u0027Extend gear\u0027;\u003Cbr\u003E    }\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  public override void OnLoad(ConfigNode node)\u003Cbr\u003E  {\u003Cbr\u003E    if (gearExtension == 0f)\u003Cbr\u003E    {\u003Cbr\u003E      Events[\u0027InputGearToggle\u0027].guiName = \u0027Extend gear\u0027;\u003Cbr\u003E    }\u003Cbr\u003E    else\u003Cbr\u003E    {\u003Cbr\u003E      Events[\u0027InputGearToggle\u0027].guiName = \u0027Retract gear\u0027;\u003Cbr\u003E    }\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E_________________________________________________________________________________________________________________________________________________________   \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETherefore..\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u0027All very well and good\u0027, you say, \u0027but its a complicated horrible mess of interconnectedness how are we gonna deal with that?\u003Cp\u003E Eh? Eh?!\u0027. A fine question, ignorance is bliss, data and structure should be on a need to know basis.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EMu, \u0022\u003Cstrong\u003E\u003Cem\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EHaving to learn how a specific thing works is a chore\u003C/span\u003E\u003C/em\u003E\u003C/strong\u003E.\u0022\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E So to deal with this is an in built event messaging system. It deals, from your point of view, in strings.\u003C/p\u003E\u003Cp\u003E (It doesnt ofc, it uses pre-reflection and ints for lil extra performance).\u003C/p\u003E\u003Cp\u003EPlenty new going on here!\u003C/p\u003E\u003Cp\u003E - We have one field, gearExtension which has the KSPField attribute applied. \u003C/p\u003E\u003Cp\u003E - This makes this field persistant and it will be written to/from any saves as required. \u003C/p\u003E\u003Cp\u003E - After KSPFields are parsed by PartModule then the OnLoad method is fired. \u003C/p\u003E\u003Cp\u003E - As we have nothing else to load, we use OnLoad as a method for working out\u003C/p\u003E\u003Cp\u003E - what to do with our data. In this instance that means setting the event\u003C/p\u003E\u003Cp\u003E - gui name to be correct.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E          The limitation for adding the KSPField attribute is that it can only be applied to classes \u003Cbr\u003E          which implement the IConfigNode interface or one of the types;\u003Cbr\u003E                                         - string, bool, int, float, Vector2, Vector3, Vector4 or Quaternion\u003Cbr\u003E                                           ([URL=\u0022https://github.com/Anatid/XML-Docume...c/KSPField.cs]\u0022]more on this later[/URL] )\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Here KSPField attribute from the game source..\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E-------------------------------------------------------------------------------------------------------------------------------------------------------\u003Cbr\u003E/// \u0026lt;summary\u0026gt;\u003Cbr\u003E/// Attribute applied to fields to make them persistant or available to the part action GUI\u003Cbr\u003E/// \u003Cbr\u003E/// Automatic persistance can only be applied to types which implement the IConfigNode interface or\u003Cbr\u003E/// one of the following..\u003Cbr\u003E/// string, bool, int, float, Vector2, Vector3, Vector4 or Quaternion\u003Cbr\u003E/// \u0026lt;/summary\u0026gt;\u003Cbr\u003E[System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple = false)]\u003Cbr\u003Epublic class KSPField : System.Attribute\u003Cbr\u003E{\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Is this field persistant?\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public bool isPersistant;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Is this field active on gui\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public bool guiActive;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Is this field active on gui\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public string guiName;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Is this field active on gui\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public string guiUnits;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// The gui format string for this field (D4, F2, N0, etc). Blank if none\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public string guiFormat;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// string category id\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public string category;\u003Cbr\u003E\u003Cbr\u003E  public KSPField()\u003Cbr\u003E  {\u003Cbr\u003E    this.isPersistant = true;\u003Cbr\u003E    this.guiName = \u0027\u0027;\u003Cbr\u003E    this.guiUnits = \u0027\u0027;\u003Cbr\u003E    this.guiFormat = \u0027\u0027;\u003Cbr\u003E    this.category = \u0027\u0027;\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E________________________________________________________________________________________________________________________________________________________   \u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMethod - InputGearToggle\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EThe method InputGearToggle has the KSPEvent attribute applied.\u003Cbr\u003E This makes this event able to be internally reflected and recieve events thus is the entry point for most functionality. \u003Cbr\u003EIt will be  fired in response to the ModuleCommand\\\u0027s part.SendEvent.\u003Cbr\u003E\u003Cbr\u003E       KSPEvent also makes this method available to the gui in form of a   labelled button. You can change the guiActive, guiName or any\u003Cbr\u003E       other KSPEvent value at run time by using the Events list.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E - Here is the KSPEvent attribute from the game source..\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E/// \u0026lt;summary\u0026gt;\u003Cbr\u003E/// Tells the compiler that this method is an action and allows you to set up\u003Cbr\u003E/// the KSP specific stuff. \u003Cbr\u003E/// ** REQUIRED BY ALL ACTION METHODS **\u003Cbr\u003E/// \u0026lt;/summary\u0026gt;\u003Cbr\u003E[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple = true)]\u003Cbr\u003Epublic class KSPEvent : System.Attribute\u003Cbr\u003E{\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// The external name of this action\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public string name;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Is this action assigned as the part\\\u0027s default? \u003Cbr\u003E  /// * Will override any previous default *\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public bool isDefault;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Is this action initially active?\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public bool active;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Is this action available to the user?\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public bool guiActive;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// The guiIcon name (guiAction must be true)\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public string guiIcon;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// The gui name for this action (userAction must be true)\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public string guiName;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// A string category id so can display all actions of certain types\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public string category;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  public KSPEvent()\u003Cbr\u003E  {\u003Cbr\u003E    this.name = \u0027\u0027;\u003Cbr\u003E\u003Cbr\u003E    this.isDefault = false;\u003Cbr\u003E    this.active = true;\u003Cbr\u003E    this.allowStaging = false;\u003Cbr\u003E    this.autoStaging = false;\u003Cbr\u003E    this.guiActive = false;\u003Cbr\u003E    this.guiIcon = \u0027\u0027;\u003Cbr\u003E    this.guiName = \u0027\u0027;\u003Cbr\u003E    this.category = \u0027\u0027;\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ERe: 0.15 code update - PartModule, KSPField, KSPEvent and ConfigNode\u003C/p\u003E\u003Cp\u003E**** Example #2 - IConfigNode and ConfigNode\u003C/p\u003E\u003Cp\u003E Ok so time for something more meaty. \u003C/p\u003E\u003Cp\u003EHere is my take on an aerodynamic lift module.\u003C/p\u003E\u003Cp\u003EIt uses a class called FloatCurve to create the lift/drag vs angle of attack graphs for standard aerofoils.\u003C/p\u003E\u003Cp\u003EFloatCurve also implements IConfigNode so it can be used with KSPField.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic class ModuleAerodynamicLift : PartModule\u003Cbr\u003E{\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Planform area of lifting surface in m^2\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  [KSPField]\u003Cbr\u003E  public float planformArea = 10f;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Overall lift factor for this wing\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  [KSPField]\u003Cbr\u003E  public float liftFactor = 1f;\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Overall drag factor for this wing\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  [KSPField]\u003Cbr\u003E  public float dragFactor = 1f;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// FloatCurve of lift vs angle of attack. Angle is abs cosine of angle (0 -\u0026gt; 1)\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  [KSPField]\u003Cbr\u003E  public FloatCurve liftAoA;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// FloatCurve of drag vs angle of attack. Angle is abs cosine of angle (0 -\u0026gt; 1)\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  [KSPField]\u003Cbr\u003E  public FloatCurve dragAoA;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Model transform name for center of lift\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  [KSPField]\u003Cbr\u003E  public string centerOfLiftTransformName;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// grabbed OnStart from the model transform named liftTransformName\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public Transform centerOfLiftTransform;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Sets up the float curves if they\\\u0027re not already set up\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnAwake()\u003Cbr\u003E  {\u003Cbr\u003E    if (liftAoA == null)\u003Cbr\u003E      liftAoA = new FloatCurve();\u003Cbr\u003E    if (dragAoA == null)\u003Cbr\u003E      dragAoA = new FloatCurve();\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Grabs center of lift transform from model\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  /// \u0026lt;param name=\u0027state\u0027\u0026gt;\u0026lt;/param\u0026gt;\u003Cbr\u003E  public override void OnStart(StartState state)\u003Cbr\u003E  {\u003Cbr\u003E    if (centerOfLiftTransform == null)\u003Cbr\u003E    {\u003Cbr\u003E      centerOfLiftTransform = part.FindModelTransform(centerOfLiftTransformName);\u003Cbr\u003E\u003Cbr\u003E      if (centerOfLiftTransform == null)\u003Cbr\u003E        Debug.LogError(\u0027ModuleAerodynamicLift: liftTransform is null!\u0027);\u003Cbr\u003E    }\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Calculates and applied the lift/drag force from the aerofoil\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  public override void OnFixedUpdate()\u003Cbr\u003E  {\u003Cbr\u003E    if (centerOfLiftTransform == null)\u003Cbr\u003E      return;\u003Cbr\u003E\u003Cbr\u003E    Vector3 force = CalculateForce();\u003Cbr\u003E\u003Cbr\u003E    part.Rigidbody.AddForceAtPosition(force, centerOfLiftTransform.position, ForceMode.Force);\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  /// \u0026lt;summary\u0026gt;\u003Cbr\u003E  /// Calculates lift/drag according the simple aerofoil equations...\u003Cbr\u003E  /// Lift: L = (CL)(1/2)(dens)(V^2)(area)  or  L = (CL)(q)(S)    q(dyn pressure) = (1/2)(dens)(V^2)\u003Cbr\u003E  /// Drag: D = (CD)(1/2)(dens)(V^2)(area)  or  D = (CD)(q)(S)\u003Cbr\u003E  /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E  /// \u0026lt;returns\u0026gt;Overall force vector\u0026lt;/returns\u0026gt;\u003Cbr\u003E  private Vector3 CalculateForce()\u003Cbr\u003E  {\u003Cbr\u003E    // grab world point and relative velocity\u003Cbr\u003E    Vector3 worldVelocity = part.Rigidbody.GetPointVelocity(centerOfLiftTransform.position);\u003Cbr\u003E\u003Cbr\u003E    // note we use centerOfLiftTransfrom from the model to calculate relative. This will take into account any part mirroring \u003Cbr\u003E    Vector3 relativeVelocity = centerOfLiftTransform.InverseTransformDirection(worldVelocity);\u003Cbr\u003E    Vector3 velocityNorm = relativeVelocity.normalized;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    // only need the speed squared - saves us a square root\u003Cbr\u003E    float speedSqr = relativeVelocity.sqrMagnitude;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    // calc the angle of attack\u003Cbr\u003E    float vDot = Vector3.Dot(velocityNorm, centerOfLiftTransform.up.normalized);\u003Cbr\u003E    float vDotNorm = (vDot \u002B 1f) * 0.5f;\u003Cbr\u003E\u003Cbr\u003E    float absVDot = Mathf.Abs(vDot);\u003Cbr\u003E    float abs1MVDot = 1f - absVDot;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    // dynamic pressure \u003Cbr\u003E    float dynPressure = 0.5f * (float)vessel.atmDensity * speedSqr;\u003Cbr\u003E\u003Cbr\u003E    // calc coefficient of lift and drag from the factors and the float curves\u003Cbr\u003E    float cL = liftFactor * liftAoA.Evaluate(abs1MVDot);\u003Cbr\u003E    float cD = dragFactor * dragAoA.Evaluate(abs1MVDot);\u003Cbr\u003E\u003Cbr\u003E    // calc lift, drag and add to get overall\u003Cbr\u003E    Vector3 lift = centerOfLiftTransform.up * (cL * dynPressure * planformArea);\u003Cbr\u003E    Vector3 drag = -(worldVelocity.normalized) * (cD * dynPressure * planformArea);\u003Cbr\u003E    Vector3 force = lift \u002B drag;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    // some debug stuff\u003Cbr\u003E    string str = \u0027\u0027;\u003Cbr\u003E    str \u002B= \u0027AoA: \u0027 \u002B abs1MVDot;\u003Cbr\u003E    str \u002B= \u0027 cL: \u0027 \u002B cL;\u003Cbr\u003E    str \u002B= \u0027 cD: \u0027 \u002B cD;\u003Cbr\u003E    Debug.Log(str);\u003Cbr\u003E\u003Cbr\u003E    Debug.DrawLine(centerOfLiftTransform.position, centerOfLiftTransform.position \u002B lift * 100f, Color.green);\u003Cbr\u003E    Debug.DrawLine(centerOfLiftTransform.position, centerOfLiftTransform.position \u002B drag * 100f, Color.cyan);\u003Cbr\u003E    Debug.DrawLine(centerOfLiftTransform.position, centerOfLiftTransform.position \u002B worldVelocity * 100f, Color.magenta);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    // et voila\u003Cbr\u003E    return force;\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EReally its a very simple module. All of its persistence is handled by its KSPField\u0027s and it basically adds lift/drag based on\u003C/p\u003E\u003Cp\u003Estandard aerofoil model. The FloatCurve class is a Unity AnimationCurve wrapped up in an IConfigNode extending\u003C/p\u003E\u003Cp\u003Einterface. Remember in order to use KSPField on a class successfully it needs to implement IConfigNode.\u003C/p\u003E\u003Cp\u003E \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation#Part_file_creation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/w..._file_creation\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/API:ConfigNode\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/API:ConfigNode\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EHere is the IConfigNode interface. It requires two methods.\u003C/p\u003E\u003Cp\u003E1. Load(ConfigNode) \u003C/p\u003E\u003Cp\u003E2. Save(ConfigNode)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E/// \u0026lt;summary\u0026gt;\u003Cbr\u003E/// Can this item be saved using a KSPField persitance object. KSPField creates a subnode for this type\u003Cbr\u003E/// \u0026lt;/summary\u0026gt;\u003Cbr\u003Epublic interface IConfigNode\u003Cbr\u003E{\u003Cbr\u003E  void Load(ConfigNode node);\u003Cbr\u003E\u003Cbr\u003E  void Save(ConfigNode node);\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe implementing class must be able to be instantiated blind and then have OnLoad called to load its values in.\u003C/p\u003E\u003Cp\u003EConfigNode consists of a recursive node/value list.\u003C/p\u003E\u003Cp\u003EIn essence it looks like this.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic class ConfigNode\u003Cbr\u003E{\u003Cbr\u003E  public string name;\u003Cbr\u003E  public List\u0026lt;ConfigNode\u0026gt; nodes;\u003Cbr\u003E  public List\u0026lt;ConfigNode.Value\u0026gt; values;\u003Cbr\u003E\u003Cbr\u003E  public class Value\u003Cbr\u003E  {\u003Cbr\u003E   public string name;\u003Cbr\u003E   public string value;\u003Cbr\u003E  }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFor loading use; HasValue, GetValue, GetValues, HasNode, GetNode \u0026amp; GetNodes\u003C/p\u003E\u003Cp\u003EFor saving use; AddValue or AddNode\u003C/p\u003E\u003Cp\u003EEvery value you add is a string and should be parsable to/from what you set it to.\u003C/p\u003E\u003Cp\u003ENow lets have a look in FloatCurve to see that in action..\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E[system.Serializable]\u003C/p\u003E\u003Cp\u003Epublic class FloatCurve : IConfigNode\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E [serializeField]\u003C/p\u003E\u003Cp\u003E private AnimationCurve fCurve;\u003C/p\u003E\u003Cp\u003E public float minTime { get; private set; }\u003C/p\u003E\u003Cp\u003E public float maxTime { get; private set; }\u003C/p\u003E\u003Cp\u003E public FloatCurve()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E fCurve = new AnimationCurve();\u003C/p\u003E\u003Cp\u003E minTime = float.MaxValue;\u003C/p\u003E\u003Cp\u003E maxTime = float.MinValue;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E public void Add(float time, float value)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E fCurve.AddKey(time, value);\u003C/p\u003E\u003Cp\u003E minTime = Mathf.Min(minTime, time);\u003C/p\u003E\u003Cp\u003E maxTime = Mathf.Max(maxTime, time);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E public float Evaluate(float time)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E return fCurve.Evaluate(time);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E private static char[] delimiters = new char[] { \\\u0027 \\\u0027, \\\u0027,\\\u0027, \\\u0027;\\\u0027, \\\u0027\\t\\\u0027 };\u003C/p\u003E\u003Cp\u003E public void Load(ConfigNode node)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E string[] values = node.GetValues(\u0027key\u0027);\u003C/p\u003E\u003Cp\u003E int vCount = values.Length;\u003C/p\u003E\u003Cp\u003E string[] valueSplit;\u003C/p\u003E\u003Cp\u003E for (int i = 0; i \u0026lt; vCount; i\u002B\u002B)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E valueSplit = values\u003Cem\u003E.Split(delimiters, System.StringSplitOptions.RemoveEmptyEntries);\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E if (valueSplit.Length \u0026lt; 2)\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E {\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E Debug.LogError(\u0027FloatCurve: Invalid line. Requires two values, \\\u0027time\\\u0027 and \\\u0027value\\\u0027\u0027);\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E }\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E Add(float.Parse(valueSplit[0]), float.Parse(valueSplit[1]));\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E }\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E }\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E public void Save(ConfigNode node)\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E {\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E for (int i = 0; i \u0026lt; fCurve.keys.Length; i\u002B\u002B)\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E {\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E node.AddValue(\u0027key\u0027, fCurve.keys\u003C/em\u003E\u003Cem\u003E\u003Cem\u003E.time \u002B \u0027 \u0027 \u002B fCurve.keys\u003C/em\u003E\u003C/em\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E.value);\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E}\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EAs you can see it has a list of values called \\\u0027key\\\u0027 and each value is made up of a space separated time/value pair.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E I\u0027ve added extra delimiters into the code because we might forget and comma separate them or something.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EExample #3 - part.cfg\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003ESo now we get to the point of adding these things into a part\\\u0027s config file. \u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EYou should know that every config file is parsed by ConfigNode now so can be considered in the node/value list paradigm.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EHere is ModuleAerodynamicLift module from example #2 added to the end of DeltaWing\\\u0027s part.cfg\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E[spoiler: code]\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EMODULE\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E{\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E name = ModuleAerodynamicLift\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E liftFactor = 0.001\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E dragFactor = 0.001\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E liftTransformName = CenterOfLift\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E liftAoA\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.0 1\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.2 3\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.4 4\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.6 1\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.7 0\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 1.0 -1\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E dragAoA\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.0 1\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.2 3\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.5 5\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 0.7 6\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   key = 1.0 7\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E}\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EMODULE is a subnode of Part and you can have as many as you like.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EThis particular module relys on you having the transform named \u0027CenterOfLift\u0027 somewhere in the DeltaWing heirarchy,\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E which it may not when we go to press. Most of the KSPField values are in the usual style of valueName=value however\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E you can see how the two IConfigNode implementing FloatCurves are represented as subnodes of the module node.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E KSPField will make any IConfigNode implementing class a subnode. Alternatively you can add/find your own\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E subnodes in the OnLoad or OnSave methods.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EIn this next example we\\\u0027ll add two modules, ModuleAnimatorLandingGear (from Example #1) and an as yet \u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003Eunknown module called ModuleAnimateHeat.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EMODULE\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E{\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E name = ModuleAnimatorLandingGear\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E}\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EMODULE\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E{\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E name = ModuleAnimateHeat\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E ThermalAnim = HeatAnimationEmissive;\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E}\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EHere is ModuleAnimateHeat.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003Epublic class ModuleAnimateHeat : PartModule\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E{\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  [KSPField]\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  public string ThermalAnim = \u0027HeatAnimationEmissive\u0027;\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  public float draperPoint = 525f; // Draper point is when solid objects begin to emit heat.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  public AnimationState[] heatAnimStates;\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  public override void OnStart(StartState state)\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    HeatEffectStartup();\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  public void Update()\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    UpdateHeatEffect();\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  private void HeatEffectStartup()\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    Animation[] heatAnims = part.FindModelAnimators(ThermalAnim);\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    heatAnimStates = new AnimationState[heatAnims.Length];\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    int i = 0;\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    foreach (Animation a in heatAnims)\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E      AnimationState aState = a[ThermalAnim];\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E      aState.speed = 0;\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E      aState.enabled = true;\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E      a.Play(ThermalAnim);\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E      heatAnimStates[i\u002B\u002B] = aState;\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  private void UpdateHeatEffect()\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    float temperatureValue = Mathf.Clamp01((part.temperature - draperPoint) / (part.maxTemp - draperPoint));\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    foreach (AnimationState a in heatAnimStates)\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E      a.normalizedTime = temperatureValue;\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E    }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E  }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E}\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EThis was written to handle all of emissive heat glowing by heated parts. The heat is represented in the models\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003Eas animations going from 0-\u0026gt;1 (none to full heat)\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EConclusion\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EWell hopefully you learned vaguely how to use PartModule and ConfigNode from all that. It was all written to be\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E really simple and thus I hope it turns out to be. I\\\u0027m always open to questions and feedback, send me a mail if\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E you really need to. I will hold a few dev sessions over the coming weeks to get some feedback and answer\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E more detailed questions.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EIn part #2 I\u0027ll talk about resources, how to define them and how to use them.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003ETHANK YOU, TO EVERYONE WHO SHARES THEIR THOUGHTS ABOUT THIS PROJECT.\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EThis still needs a lot of work,\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E************************************************** ************************************ \u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E// JG you need to go threw this b4 moving on: \u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E// \u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/94638-New-Mod-Development-Links-Compilation\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003Ehttp://forum.kerbalspaceprogram.com/...ks-Compilation\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/7529-Plugin-Posting-Rules-And-Official-Documentation?p=156430\u0026amp;viewfull=1#post156430\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003Ehttp://forum.kerbalspaceprogram.com/...l=1#post156430\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EBelow is my stuff/cut and paste example stuff: IM LEARNING HERE i DO NOT KNOW THIS IS WORKING - SO DON\u0027T USE THIS!!!!\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E*****************************************************************************************************************************************************\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003EPART {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // Kerbal Space Program - Configuration file - example part config\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // Mark V Rocket Engine\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // \u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // Kerbal Space Program - Part CFG file\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // Mark V Rocket Engine\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- General Parameters ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   name = LiquidThrusterV\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   module = Part\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   author = YourName\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- asset parameters ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- node definitions ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- FX definitions ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- Sound FX definition ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- editor parameters ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- attachment rules: stck, srfAttach, allowStack, allowSrfAttach, allowCollision ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- standard part parameters ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- specific part parameters ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   MODULE {\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E       // ---specific module parameters ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   }\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E   // --- other MODULEs ---\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cem\u003E\u003Cem\u003E\u003Cem\u003E}\u003C/em\u003E\u003C/em\u003E\u003C/em\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-07T03:16:45Z\u0022 title=\u002210/07/2014 03:16  AM\u0022 data-short=\u00229 yr\u0022\u003EOctober 7, 2014\u003C/time\u003E by Enriched Uranium\u003C/strong\u003E\n\u003Cbr\u003EDraft 2 *done for the day*\n\u003C/span\u003E\n"},{"CreatedByName":"dzikakulka","CreatedById":116606,"CreatedDateTime":"2014-09-27T23:25:05Z","Content":"\n\u003Cp\u003EUhm, did you just like.... copypasted a few pages from wiki.kerbalspaceprogram.com ?\u003C/p\u003E\u003Cp\u003ELike \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Tutorial:Making_an_asset_from_start_to_finish\u0022 rel=\u0022external nofollow\u0022\u003Ethat one\u003C/a\u003E for example?\u003C/p\u003E\u003Cp\u003E edit: Heh of course you did, there are even reference links left. I\u0027m a bit sleepy.\u003C/p\u003E\u003Cp\u003EDid I just got baited?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-27T23:28:08Z\u0022 title=\u002209/27/2014 11:28  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 27, 2014\u003C/time\u003E by dzikakulka\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-27T23:37:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022dzikakulka\u0022 data-cite=\u0022dzikakulka\u0022\u003E\u003Cdiv\u003EUhm, did you just like.... copypasted a few pages from wiki.kerbalspaceprogram.com ?\u003Cp\u003ELike \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Tutorial:Making_an_asset_from_start_to_finish\u0022 rel=\u0022external nofollow\u0022\u003Ethat one\u003C/a\u003E for example?\u003C/p\u003E\u003Cp\u003E edit: Heh of course you did, there are even reference links left. I\u0027m a bit sleepy.\u003C/p\u003E\u003Cp\u003EDid I just got baited?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIm a bit sleepy too, I have learned a lot today and Im about to go play lol.\u003C/p\u003E\u003Cp\u003EThat is EXACTLY what I have done, including WORKING links where they were broken.... or it goes to relevant information. I think I will put a not on what links were broken and I have provided links to relevant info.\u003C/p\u003E\u003Cp\u003EI am including reference links for EVERYTHING because this isn\u0027t my work. I just reorganized it and fixed links so I can learn this with less interruptions. I thought Id share what im working on because i wish I could have found something like this when I first started. It COULD have saved me some time, I think.\u003C/p\u003E\u003Cp\u003EBut like I said, at this point, 99% of this is not my work its just reorganized into an outline.\u003C/p\u003E\u003Cp\u003EIm not sure what you mean by asking if you got baited\u00C3\u201A\u00C2\u00BF\u003C/p\u003E\u003Cp\u003EIm just trying to learn this stuff and I think this will help.\u003C/p\u003E\u003Cp\u003EAnyway, nice to meet ya dzikakulka.\u003C/p\u003E\n"},{"CreatedByName":"dzikakulka","CreatedById":116606,"CreatedDateTime":"2014-09-27T23:45:37Z","Content":"\n\u003Cp\u003EOkay, I\u0027m stupid. Sorry for the mess \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-09-27T23:57:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Enriched Uranium\u0022 data-cite=\u0022Enriched Uranium\u0022\u003E\u003Cdiv\u003EFirst I would like to say that I have NOT edited this for mistakes. I have done ALL of this today and im done for the day but I wanted to get this posted so I don\u0027t Forget, remember. lol:sticktongue:\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf your aim is to repackage the wiki information, please be very clear about that. It can be insulting to some people when they see their works copied and pasted elsewhere. Also, the whole point of the wiki is for users to be able to edit and update information along the way. Feel free to get an account and update links/info up there. The better the info on the wiki, the more useful it is.\u003C/p\u003E\u003Cp\u003ECheers,\u003C/p\u003E\u003Cp\u003E~Claw\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-28T00:37:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Claw\u0022 data-cite=\u0022Claw\u0022\u003E\u003Cdiv\u003EIf your aim is to repackage the wiki information, please be very clear about that. It can be insulting to some people when they see their works copied and pasted elsewhere. Also, the whole point of the wiki is for users to be able to edit and update information along the way. Feel free to get an account and update links/info up there. The better the info on the wiki, the more useful it is.\u003Cp\u003ECheers,\u003C/p\u003E\u003Cp\u003E~Claw\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy aim is to become proficient in Visual C\u002B\u002B and if this helps other GREAT. Im not trying to repackage anything, Im just trying to learn this. But, I guess I am inadvertently \u0022repackaging\u0022 it AND fixing dead or broken links. This could be used to update the links in KSP WiKi when i am done, if i continue.\u003C/p\u003E\u003Cp\u003E Im hoping a few people will join me learning because 2 minds are better than one. I am retired and learning this for fun. Please do not be offended if you see your work here! Your work is VERY VALUABLE!!!! And I have sited links to ALL the reference material because i want to make sure your recognized for your work. After all, I could not have learned what I have without it. If I need to site extra recognition, I don\u0027t have a problem with that! I wouldn\u0027t mind if anyone whos work i am using to learn, follows along and helps me and who ever might join this thread.\u003C/p\u003E\u003Cp\u003Enice to meet ya Claw\u003C/p\u003E\u003Cp\u003EMy intention is NOT to offend anyone. \u003C/p\u003E\u003Cp\u003EThat is why I said from the start that 99% of this is NOT my work, right now. I will be adding, at least one example of my own. \u003C/p\u003E\u003Cp\u003EWhen I am reading to learn I take notes, I have to, and i do it in an outline. I realized that I was organizing all of this info and making it sequence, plus I have found links to relevant information where I was finding dead links.\u003C/p\u003E\u003Cp\u003EI just got so frustrated with KSP wiki breaking my concentration every 2 min\u0027s with a dead or broken link. When everything is a clicking and you hit a dead link... it breaks the \u0026amp;^^%% out of my concentration, and its hard to get going again, I don\u0027t know about you.\u003C/p\u003E\u003Cp\u003EIf you guys don\u0027t want me to post this, fine, I won\u0027t. but i already have it a lot done and when I finish with my first asset this could be a great tutorial... Plus I might get some help and help others learn.\u003C/p\u003E\u003Cp\u003EI really love this game, so much so that i am learning this. Im FREE HELP USE ME LOL but seriously, I have a lot of time on my hands and Im not afraid to say no if I don\u0027t want to do something.\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-28T01:08:01Z","Content":"\n\u003Cp\u003Ealot of the information on the Wiki is outdated. you are better off looking through the links here\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/94638-New-Mod-Development-Links-Compilation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/94638-New-Mod-Development-Links-Compilation\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Claw","CreatedById":100668,"CreatedDateTime":"2014-09-28T01:14:27Z","Content":"\n\u003Cp\u003EThat\u0027s totally cool. The community can always use more help/expertise. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe forum is a great place for works in progress. Hopefully you didn\u0027t miss that I said you can also edit the wiki directly. Even if you\u0027re not ready for directly changing stuff, you can update links and add more info. I\u0027m not much of a wiki or mod creator myself, so help dabbling into this area is always welcome.\u003C/p\u003E\u003Cp\u003EAlso, I\u0027ve moved this to a more appropriate area so that it\u0027ll get the right attention.\u003C/p\u003E\u003Cp\u003EGood luck!\u003C/p\u003E\u003Cp\u003E~Claw\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-28T01:21:44Z\u0022 title=\u002209/28/2014 01:21  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 28, 2014\u003C/time\u003E by Claw\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-28T01:20:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Ealot of the information on the Wiki is outdated. you are better off looking through the links here\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/94638-New-Mod-Development-Links-Compilation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/94638-New-Mod-Development-Links-Compilation\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESweet, Thank you! Ill check this out tomorrow. the outdated info is another reason Im doing this. I keep finding im learing old stuff that doesn\u0027t work anymore lol I forgot who said it but i agree, it is a lot of work to learn and understand this stuff. And its the.... logic, i guess you could say. I don\u0027t know all the rules, so I make assumptions based on my other programing experience and sometimes it just doesn\u0027t work.\u003C/p\u003E\u003Cp\u003EWell, it my bed time Gnite all\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-29T04:54:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Claw\u0022 data-cite=\u0022Claw\u0022\u003E\u003Cdiv\u003EThat\u0027s totally cool. The community can always use more help/expertise. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cp\u003EAlso, I\u0027ve moved this to a more appropriate area so that it\u0027ll get the right attention.\u003C/p\u003E\u003Cp\u003EGood luck!\u003C/p\u003E\u003Cp\u003E~Claw\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESweet, Thanks Claw!\u003C/p\u003E\u003Cp\u003EI kinda ran into a detour today that took all my time. I recently upgraded my system and im having trouble getting my video cards running in SLI correctly. \u003C/p\u003E\u003Cp\u003EAnyway, my plan is to work on this tomorrow and then Ill work on my system again Tuesday. I should be able to finish up on my system in one more day... if everything works right after I do what I gotta do lol\u003C/p\u003E\u003Cp\u003EHave a Great night everyone.\u003C/p\u003E\u003Cp\u003Eps, Ill look into updating Wiki... Im not sure what all that will involve\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-29T05:01:57Z\u0022 title=\u002209/29/2014 05:01  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 29, 2014\u003C/time\u003E by Enriched Uranium\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"noonespecial","CreatedById":81942,"CreatedDateTime":"2014-09-29T06:54:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ECreating a Mod\u003Cp\u003EStep 1 - Choosing the program\u003C/p\u003E\u003Cp\u003E A. I am using 3ds Max as my animation program.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you\u0027re just writing (rewriting/compiling) this just for yourself, cool. But if you are looking to add to the community, I have a suggestion for this part.\u003C/p\u003E\u003Cp\u003EChoosing a 3D Modeling program can be daunting, especially for those of us who had zero 3D modeling experience before deciding to mod. There are so many choices, most of which are very expensive. Not to mention, the learning curve on most of them is pretty monstrous. So here is my recommendation for this first part based on my own experience. I first wanted to mod about 6 months before I actually started. I downloaded Unity and Blender. Open blender, saw a cube and panicked. Couldn\u0027t figure out what to do and quickly became discouraged and gave up. Months later, I came across a video that wasn\u0027t using blender, but was using a completely different program, Google SketchUp. It is much more user friendly and intuitive to a new modeler (caveat: it is horrible for making 3D models for KSP though). So at first, I made the models exclusively in SketchUp. A little later, I made most of the model in SketchUp and used Blender as a finishing/post-processing tool, originally just for cleaning up the vertex mess that SketchUp creates and for doing the UVMapping. As I became more comfortable with blender, I eventually migrated exclusively to blender. Blender is a good program, but I still found it rather inadequate in many areas. At this point, the I had enough experience in modeling to download virtually every high end 3D software out there that offered a trial and be able to make a decision based on my personal preferences and needs.... which I\u0027m still doing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E. Haven\u0027t settled on my final choice yet, but I\u0027m leaning toward zBrush.\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-29T13:35:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022noonespecial\u0022 data-cite=\u0022noonespecial\u0022\u003E\u003Cdiv\u003EIf you\u0027re just writing (rewriting/compiling) this just for yourself, cool. But if you are looking to add to the community, I have a suggestion for this part.\u003Cp\u003EChoosing a 3D Modeling program can be daunting, especially for those of us who had zero 3D modeling experience before deciding to mod. There are so many choices, most of which are very expensive. Not to mention, the learning curve on most of them is pretty monstrous. So here is my recommendation for this first part based on my own experience. I first wanted to mod about 6 months before I actually started. I downloaded Unity and Blender. Open blender, saw a cube and panicked. Couldn\u0027t figure out what to do and quickly became discouraged and gave up. Months later, I came across a video that wasn\u0027t using blender, but was using a completely different program, Google SketchUp. It is much more user friendly and intuitive to a new modeler (caveat: it is horrible for making 3D models for KSP though). So at first, I made the models exclusively in SketchUp. A little later, I made most of the model in SketchUp and used Blender as a finishing/post-processing tool, originally just for cleaning up the vertex mess that SketchUp creates and for doing the UVMapping. As I became more comfortable with blender, I eventually migrated exclusively to blender. Blender is a good program, but I still found it rather inadequate in many areas. At this point, the I had enough experience in modeling to download virtually every high end 3D software out there that offered a trial and be able to make a decision based on my personal preferences and needs.... which I\u0027m still doing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E. Haven\u0027t settled on my final choice yet, but I\u0027m leaning toward zBrush.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYa know, Im not quite ready to start coding, or drawing yet so i had not thought too much about this point. Thanks for bringing this up. Personally, I went to school to learn solid modeling. If I remember correctly the classes were called CADD for lvl 1 and Plane Geometry for lvl2, Industrial Fluid Power for lvl 3. These 3 classes covered 3 semesters, One 2d program (can\u0027t remember the name) and a solid modeling program called SilverScreen. So I was in school for a good 6 months before I touched a 3D program for the first time.\u003C/p\u003E\u003Cp\u003E Your right, solid modeling programs are tough, you have to know the terminology and it simply takes time to learn the toolbars and menu\u0027s.\u003C/p\u003E\u003Cp\u003E Im not sure if much has changed since I have exported a solid model. It wasn\u0027t called configNode... and I don\u0027t remember what they called it, but the other game that I have written mods for (with help lol)... In order to set the nodes, you had to import the model into the program i used (called Rino 3.0), place the nodes and use that second program to export your model into the correct format, because silver screen couldn\u0027t export in the format I needed.\u003C/p\u003E\u003Cp\u003E I see that Rhinoceros is now up to version 5 ( \u003Ca href=\u0022http://www.rhino3d.com/download\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.rhino3d.com/download\u003C/a\u003E ) and i do not know the cost of this program. Some of these modeling programs cost THOUSANDS of dollars and require key so that you can send your models to a plotter. Most individuals will never have a need for that key and you can get student versions of most 3D software if you look around. So, if your in school you can look at your class catalog for their CADD classes, find a class called something like \u0022Plane Geometry\u0022, and go to the book store and get the software package for that class (just make sure its 3D and not 2D). If you do this, you can get a student version of the software for much much less. If you not in school, try to make friends with a college student ;-) or take a cheep intro class, get the student ID, go get your program and drop the class if you want to. Most schools will offer a 100% refund for the class if you drop it by their deadline date.\u003C/p\u003E\u003Cp\u003ESilver Screen was about $1500 for a full version with a key, the student version was under $100... I think it was under $50 but that was a long time ago. \u003C/p\u003E\u003Cp\u003ENow my plan here is not to teach people how to use their drawing program, but I will help with specific questions if I know anything about the program they are using.\u003C/p\u003E\u003Cp\u003ENice to meet ya, \u003Cstrong\u003Enoonespecial. \u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAh, an idea... if you read this, could you post which solid modeling program you use so I can get an idea of what most people are using?\u003C/p\u003E\u003Cp\u003E If I end up having to learn a new modeling program, It may as well be what ever people are using the most, on KSP. \u003C/p\u003E\u003Cp\u003EKeep in mind, it does not matter which program you use, as long as you can become comfortable with it. \u003C/p\u003E\u003Cp\u003E(I have been drawing long enough that i can pick up a new program fairly fast, I am a little rusty with my isometrics due to the fact I have been drawing 2D for the last few years)\u003C/p\u003E\u003Cp\u003E ***** \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022:wink:\u0022\u003E I was thinking I was going to use 3dMax, but this is open for change. If I get a few replies on which program most people are using... ill use the most popular one for this \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E *****\u003C/p\u003E\u003Cp\u003EList of programs people are currently using:\u003C/p\u003E\u003Cp\u003E1. leaning toward zBrush. (single user License $795.00 Win/Mac $449.95 student version)\u003C/p\u003E\u003Cp\u003E OWCH - this tells me that once I choose the program I will use for this, Ill have the trial time to finish this. lol\u003C/p\u003E\u003Cp\u003EEdit : I have requested a quote from \u003Ca href=\u0022http://www.zwsoft.com/zw3d/\u0022 rel=\u0022external nofollow\u0022\u003EZW3D\u003C/a\u003E and asked if we can purchase student versions. (this one advertised low cost\u003C/p\u003E\u003Cp\u003E and affordable)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-29T13:50:31Z\u0022 title=\u002209/29/2014 01:50  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 29, 2014\u003C/time\u003E by Enriched Uranium\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-29T13:58:49Z","Content":"\n\u003Cp\u003EI suggest blender, it\u0027s free and it is by far most popular for KSP modders, you\u0027ll most likedly to get help here with blender questions. There\u0027re few max users here; and maybe one or two maya users. maybe one lightwave person. if you use Rhino or Modo or ZW3D, you are pretty much on your own as far as KSP modding goes.\u003C/p\u003E\u003Cp\u003Eand if you are looking to do a diary of your learning progress, the Blog option might be better. Forum is mostly for specific questions and people don\u0027t really want to read pages and pages of stuff you copied and pasted from somewhere else.\u003C/p\u003E\n"},{"CreatedByName":"noonespecial","CreatedById":81942,"CreatedDateTime":"2014-09-29T14:37:05Z","Content":"\n\u003Cp\u003EI think the greater point of my post, through it may have gotten lost in the rambling, was to start with 3DMax if that is what you are comfortable with, but eventually progress to blender. Or if you\u0027re brave, just jump straight into blender. To echo what nli2work said, I do believe that the vast majority of KSP modders exclusively use Blender and.... as he said... it\u0027s free \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-29T15:56:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003EI suggest blender, it\u0027s free and it is by far most popular for KSP modders, you\u0027ll most likedly to get help here with blender questions. There\u0027re few max users here; and maybe one or two maya users. maybe one lightwave person. if you use Rhino or Modo or ZW3D, you are pretty much on your own as far as KSP modding goes.\u003Cp\u003Eand if you are looking to do a diary of your learning progress, the Blog option might be better. Forum is mostly for specific questions and people don\u0027t really want to read pages and pages of stuff you copied and pasted from somewhere else.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E:cool:Sweet, Cant\u0027 beat a free program with a stick.\u003C/p\u003E\u003Cp\u003E I have modeling software I use that I know really well, its old and won\u0027t export in the format i need for this but i can get it there. With Blender being free, and a majority of KSP\u0027ers using it, I think thats going to be the one I use, still not sure on that yet but Im getting closer to my decision.\u003C/p\u003E\u003Cp\u003EGive me some time to get this going, I don\u0027t think you guys are seeing my vision here... and I may not be good at explaining it with out just doing it and showing you. I learn, the way I was taught to learn this stuff so as I get farther into this You going to see its.... Kinda like a lesson plan from... I don\u0027t know, maybe Intro to C\u002B\u002B... Im not a teacher, Im more of an Engineer... who got stuck working in a hospital because i met a girl, ended up marrying her lol.\u003C/p\u003E\u003Cp\u003EIf someone visits my Thread and doesn\u0027t want to read this stuff, all in one spot, sequentially, in a follow step by step format... They don\u0027t have to! They can wade threw all the information, like I am now, and learn it as they can find it. Its no skin off my back because im not doing anything extra, just what I need to, so I KNOW this stuff.\u003C/p\u003E\u003Cp\u003EMy brother, a few states over, is in Intro to C\u002B\u002B right now and is planning on joining us, if he can find some extra time. He has a family, school, and work so he does not have the free time i have. We have, and will have better, education tools and materials. \u003C/p\u003E\u003Cp\u003Ehonestly, Im more interested in becoming proficient, than teaching others but it dang sure can\u0027t hurt to have a possible source for... MORE BRAIN POWER. LOL \u003C/p\u003E\u003Cp\u003EWe also have a real world project we just started and both of us have to be proficient with C\u002B\u002B for that. Eventually Ill post some pictures of it but we are going to build it in a Sim first. So what that means is, we can actually put our little robot into this game and see it work before we ever build the first one. HOW COOL IS THAT. LOL\u003C/p\u003E\u003Cp\u003Econclusion: Im not doing any extra work here because this is the way I learn. If others learn the way I do, they will be able to follow right along and this should be a very cool tutorial, in the end. \u003C/p\u003E\u003Cp\u003EWe have to wait and see what happens, I am flying by the seat of my pants and have no idea what direction this could turn.\u003C/p\u003E\u003Cp\u003EFor me, this is all about having fun and learning. Ill have lesson one ready soon, maybe tonight (working on it now, and hope to include part of my example). \u003C/p\u003E\u003Cp\u003EIt will be a second draft, so still not done but closer to what Im trying to do here.\u003C/p\u003E\u003Cp\u003EI realize that this thread will get messy looking, so this will be the development Thread for my mod, and hopefully our real world robot someday. \u003C/p\u003E\u003Cp\u003EWhen I get finished with... this part of it, Ill post it in releases and change it up a bit but ill also post a good tutorial. \u003C/p\u003E\u003Cp\u003EI have already been working on this for quite some time but it just recently took a turn that made me decide to post this Thread... and see if there are others trying to do what I am so we can help each other.\u003C/p\u003E\u003Cp\u003EI do spend hours working on this, almost everyday, so why not share the info in a format that is so much easier... for me to follow, even if others logic doesn\u0027t flow like mine lol\u003C/p\u003E\u003Cp\u003Ewell, I gotta get back at it if im going to get done, what I have planned today... It will be late this afternoon - ... late tonight. lol IDK, Im feeling good and refreshed right now, so I hope to get a lot done.\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-29T16:11:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022noonespecial\u0022 data-cite=\u0022noonespecial\u0022\u003E\u003Cdiv\u003EI think the greater point of my post, through it may have gotten lost in the rambling, was to start with 3DMax if that is what you are comfortable with, but eventually progress to blender. Or if you\u0027re brave, just jump straight into blender. To echo what nli2work said, I do believe that the vast majority of KSP modders exclusively use Blender and.... as he said... it\u0027s free \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIm looking at 3DMax still, I have not been able to get it installed on my system... but i haven\u0027t tried that hard either. I just started their internet install program, it failed, and i decided to look at it again later. I may have clicked the wrong download, not sure.\u003C/p\u003E\u003Cp\u003EI will try to focus on Blender, but honestly, I haven\u0027t even looked at that one yet. So, I have no idea if ill like it or not. I like my old Silver Screen over AutoCad, but that just because I know Silver Screen so well. AutoCad is much more powerful.\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-29T16:49:24Z","Content":"\n\u003Cp\u003EI suggest not using CAD programs (Rhino; AutoCAD; SilverScreen). They are not meant for creating real-time 3d assets and you\u0027ll most likely run into issues that no one here will be able to help you with.\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-29T20:04:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003EI suggest not using CAD programs (Rhino; AutoCAD; SilverScreen). They are not meant for creating real-time 3d assets and you\u0027ll most likely run into issues that no one here will be able to help you with.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh I already know, If i do use my old silver screen it will be a pain. Ill have to import it into another program to export it in a format that a third program can export in the format i need it SO... most likly I will not be using SilverScreen, much. I have been drawing for a long long time so getting drawing in the format I need them is not too much of a problem, most of the time. KSP doesn\u0027t need all the triangles my CADD software would render so I would spend a lot of time... shrinking them, na ill just use a program that can do what I need it too. picking up a new program for me, is like learning to ride a Harley when You have been on a Honda for the last 10 years lol.\u003C/p\u003E\n"},{"CreatedByName":"AlphaAsh","CreatedById":105348,"CreatedDateTime":"2014-09-30T15:01:23Z","Content":"\n\u003Cp\u003EYou are correct that some of the information out there is outdated. A lot of the information out there is in fact outdated. For example:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E a. This will be the object KSP uses to calculate collisions and physics with respect to your part.\u003Cp\u003E It is simply a matter of creating another separate mesh in the program you are using that has a\u003C/p\u003E\u003Cp\u003E reasonably close resemblance to the object you have made. It must be convex, and must NOT\u003C/p\u003E\u003Cp\u003E be parented/joined to the main mesh.\u003C/p\u003E\u003Cp\u003E b. This collision mesh is to be called -\u003C/p\u003E\u003Cp\u003E \u0022node_collider\u0022\u003C/p\u003E\u003Cp\u003E Once it is named, add one empty material to it, and you are set to go.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom personal experience. This. This isn\u0027t remotely right. Not anymore.\u003C/p\u003E\n"},{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2014-09-30T16:16:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AlphaAsh\u0022 data-cite=\u0022AlphaAsh\u0022\u003E\u003Cdiv\u003EYou are correct that some of the information out there is outdated. A lot of the information out there is in fact outdated. For example: snip\u003Cp\u003EFrom personal experience. This. This isn\u0027t remotely right. Not anymore.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan\u0027t actually remember the last time in made a separate collision mesh for anything that wasn\u0027t a wheel or a sphere, wheels because they have to be just so, and spheres because they can easily run into the maximum triangle limit in unity if using a normal convex mesh collider derived from the spheres mesh , Unity has always done the job quite well enough to avoid having to bother with this seemingly unnecessary ( for most new modders ) step.\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-30T17:09:04Z","Content":"\n\u003Cp\u003EUntil, I get closer to finished, I expect there to be mistakes in this. I have been using old info from KSP Wiki and someone just gave me a link to more up to date info, but I have not had time to go threw it yet. Don\u0027t worry, Ill get the old info updated as soon as i can but I need to finish with what I already have b4 I can go threw the new links and update my old stuff. When that Lesson One says FINAL draft... or something like that, then its time to pick out my mistakes. Thanks for the input, though and please don\u0027t stop, if i miss something.\u003C/p\u003E\u003Cp\u003E I did end up working on my system today, and this new video card is being a pain in the butt to get setup SLI with it as primary and my old card as secondary. If I let it choose for me it puts PhysX on the new card and runs my old card as primary. but If i assign physX to my old gpu, then my old GPU just sits there, not doing much. Gotta find a way, cuz I have a reason i need my old card as secondary even if Nvida says its the better card.... So, EVGA wants me to benchmark both cards individualy, in each of my PCI-E slots... Im about half way done with their... to do list. I have my fingers crossed that I will finish it all today. I wasn\u0027t thinking I was going to have to benchmark each one... jeeze lol\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-09-30T17:21:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SpannerMonkey(smce)\u0022 data-cite=\u0022SpannerMonkey(smce)\u0022\u003E\u003Cdiv\u003ECan\u0027t actually remember the last time in made a separate collision mesh for anything that wasn\u0027t a wheel or a sphere, wheels because they have to be just so, and spheres because they can easily run into the maximum triangle limit in unity if using a normal convex mesh collider derived from the spheres mesh , Unity has always done the job quite well enough to avoid having to bother with this seemingly unnecessary ( for most new modders ) step.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHonestly I haven\u0027t gotten that far yet, on this. I have not drawn any of my part yet, all I have is a sketch on... on a napkin lol jk. Back when I was in College and we were modding... what ever that game was, we had to have both. That was 10 years ago, so... See, it all looks... Unfinished... but fairly good, until I start reading the newer info lol\u003C/p\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-10-01T09:04:52Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Main_Page\u0022 rel=\u0022external nofollow\u0022\u003ETHIS POST IS RESERVED\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Main_Page\u0022 rel=\u0022external nofollow\u0022\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-01T17:34:38Z\u0022 title=\u002210/01/2014 05:34  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 1, 2014\u003C/time\u003E by Enriched Uranium\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Enriched Uranium","CreatedById":120032,"CreatedDateTime":"2014-10-02T17:24:03Z","Content":"\n\u003Cp\u003EOh, man! lol I just had a chance to look at blender. Ok, I was so wrong. It is so different from what I am use to and has many features that I do not understand. This one is going to have a learning curve for me. I think I understand... the drawing part of it but it uses different terms than my old software. I am not sure about this yet, but I am trying to add to the community here, so I think I will start with 3dMax and then move up to Blender when I understand the features, on Blender, that I don\u0027t understand right now. I can\u0027t tell you how surprised I am of how different these programs are. Since I am going to be learning these anyway, I will be adding some drawing tutorials as I go threw the steps.... like I already said I wasn\u0027t planning on doing.\u003C/p\u003E\n"}]}