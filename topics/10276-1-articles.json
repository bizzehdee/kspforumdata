{"TopicId":10276,"ForumId":36,"TopicTitle":"0.15 code update - PartModule, KSPField, KSPEvent, ConfigNode and PartResource","CreatedByName":"thorfinn","CreatedById":8349,"CreatedDateTime":"2012-05-08T23:55:23Z","PageNum":1,"Articles":[{"CreatedByName":"thorfinn","CreatedById":8349,"CreatedDateTime":"2012-05-08T23:55:23Z","Content":"\n\u003Cp\u003EVery very very interesting, but just one thing about the formatting for now: did you notice that the code boxes inside spoilers collapse to a single line? I suppose you didn\\\u0027t want them to do that.\u003C/p\u003E\n"},{"CreatedByName":"Capt\u0026#039;n Skunky","CreatedById":1261,"CreatedDateTime":"2012-05-09T00:00:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thorfinn\u0022 data-cite=\u0022thorfinn\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EVery very very interesting, but just one thing about the formatting for now: did you notice that the code boxes inside spoilers collapse to a single line? I suppose you didn\\\u0027t want them to do that.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThey aren\\\u0027t doing that for me. I get about a 15 line code box.\u003C/p\u003E\u003Cp\u003EArrr!\u003C/p\u003E\u003Cp\u003ECapt\\\u0027n Skunky\u003C/p\u003E\n"},{"CreatedByName":"C7Studios","CreatedById":3895,"CreatedDateTime":"2012-05-09T00:16:22Z","Content":"\n\u003Cp\u003EI checked on my own machine here. The code looking like that seems to be caused by google chrome. I tried firefox and IE (shudder) they both show about 15 lines instead of 1.\u003C/p\u003E\n"},{"CreatedByName":"FlutteryChicken","CreatedById":22399,"CreatedDateTime":"2012-05-19T13:44:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022C7Studios\u0022 data-cite=\u0022C7Studios\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI checked on my own machine here. The code looking like that seems to be caused by google chrome. I tried firefox and IE (shudder) they both show about 15 lines instead of 1.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have noticed that on chrome as well, it\\\u0027s because the code tag is having a style attribute attached to it (\u0027style=\u0027height: 20px;\u0027), where as the one\\\u0027s that are fine don\\\u0027t have this.\u003C/p\u003E\u003Cp\u003Eit\\\u0027s caused by this code in the theme.js?fin20\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efunction smf_codeBoxFix()\u003Cbr\u003E{\u003Cbr\u003E\tvar codeFix = document.getElementsByTagName(\\\u0027code\\\u0027);\u003Cbr\u003E\tfor (var i = codeFix.length - 1; i \u0026gt;= 0; i--)\u003Cbr\u003E\t{\u003Cbr\u003E\t\tif (is_webkit \u0026amp;\u0026amp; codeFix[i].offsetHeight \u0026lt; 20)\u003Cbr\u003E\t\t\tcodeFix[i].style.height = (codeFix[i].offsetHeight \u002B 20) \u002B \\\u0027px\\\u0027;\u003Cbr\u003E\u003Cbr\u003E\t\telse if (is_ff \u0026amp;\u0026amp; (codeFix[i].scrollWidth \u0026gt; codeFix[i].clientWidth || codeFix[i].clientWidth == 0))\u003Cbr\u003E\t\t\tcodeFix[i].style.overflow = \\\u0027scroll\\\u0027;\u003Cbr\u003E\u003Cbr\u003E\t\telse if (\\\u0027currentStyle\\\u0027 in codeFix[i] \u0026amp;\u0026amp; codeFix[i].currentStyle.overflow == \\\u0027auto\\\u0027 \u0026amp;\u0026amp; (codeFix[i].currentStyle.height == \\\u0027\\\u0027 || codeFix[i].currentStyle.height == \\\u0027auto\\\u0027) \u0026amp;\u0026amp; (codeFix[i].scrollWidth \u0026gt; codeFix[i].clientWidth || codeFix[i].clientWidth == 0) \u0026amp;\u0026amp; (codeFix[i].offsetHeight != 0))\u003Cbr\u003E\t\t\tcodeFix[i].style.height = (codeFix[i].offsetHeight \u002B 24) \u002B \\\u0027px\\\u0027;\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe problem occurs when the spoiler tag is wrapped around the code tag.\u003C/p\u003E\u003Cp\u003EThe easiest fix would be to change the line \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif (is_webkit \u0026amp;\u0026amp; codeFix[i].offsetHeight \u0026lt; 20)\u003C/pre\u003E\u003Cp\u003E to \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif (is_webkit \u0026amp;\u0026amp; codeFix[i].offsetHeight \u0026lt; 20 \u0026amp;\u0026amp; codeFix[i].parentNode.style.display != \u0027none\u0027)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Papa_Joe","CreatedById":10788,"CreatedDateTime":"2012-05-20T02:36:59Z","Content":"\n\u003Cp\u003EThanks for this Mu. I\\\u0027ve been wanting to get into plugin dev, so this will be awesome. I\\\u0027ll share when there is something worth sharing.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-20T03:11:32Z","Content":"\n\u003Cp\u003E Thanks Mu, I\\\u0027m still a bit dazed processing this, but great job taking the time to explain things for us.\u003C/p\u003E\u003Cp\u003E I had a couple initial questions/issues that came to mind:\u003C/p\u003E\u003Cp\u003E \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E1. Is there a way to manipulate or read which modules are running on a Part runtime? Specifically, is it possible to add a module, or retrieve a list of modules that are attached to an arbitrary Part reference through code?\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E Looks like there\\\u0027s\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic PartModule AddModule(ConfigNode node);\u003Cbr\u003Epublic PartModule AddModule(string moduleName);\u003Cbr\u003Eand\u003Cbr\u003Epublic PartModuleList Modules { get; }\u003Cbr\u003Eand\u003Cbr\u003Epublic void RemoveModule(PartModule module);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E@-\u0026gt;2. How are conflicting resource definitions handled? As in multiple mod/plugins specifying the same resource name (LOX or LH2) with differing parameters (lbs/ft^3 or kg/m^3 or kilobananas/doo-hickey). Also, is there anything in place to allow differently named resources (LOX and LiquidOxygen) that should resolve to the same physical substance \u0027object\u0027 to do so?\u003C/p\u003E\u003Cp\u003E \u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E3. Perhaps I\\\u0027m still a bit out of it, but in your \u0027generic reaction engine\u0027 example, how exactly are you calling part.RequestResource(p.id, p.currentRequirement);\u003C/span\u003E Seems the module class has a \u0027part\u0027 member that presumably gets set to the relevant part.\u003C/p\u003E\u003Cp\u003E@-\u0026gt;4. The fuel feed system seems to be massively bugged in the initial .15 release. Even once that is fixed, some of us prefer to specify our own \u0027resource distribution\u0027 scheme. If we use part.RequestResource(), are we locked into the default distribution rules? Can we explicitly call a something-or-other on a specific part reference to get it to specifically handle resource...stuff only within itself(as in not propagating the task beyond itself)?\u003C/p\u003E\u003Cp\u003E I think that\\\u0027s it, but you\\\u0027re finally forcing me to learn reflection, attributes, and a whole bunch of that other silly C# stuff I\\\u0027d been ignoring, so um...what was I saying again? Anyway, thanks again for explaining it to us.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EEdit: Thought of another thing, is there a way to add a new resource entry in code at runtime?\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ELooks like there\\\u0027s\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic PartResource AddResource(ConfigNode node);\u003Cbr\u003Epublic PartResourceList Resources { get; }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E@-\u0026gt;Edit 2: In light of the changes to the structure of the part cfg files, does the new paradigm extend to the actual Part definition, and if so, could you please give us an example of what a blank part cfg should look like? As in just a static do-nothing part before any module stuff is added?\u003C/p\u003E\u003Cp\u003E@-\u0026gt;Edit 3: Fuel handling is usually done by mass flow, not volume flow(At least in calculations or stat listings of rocket engines, ie Isp, dry/wet mass, stoichiometrics). Having the resources specified in tank and requests in units of volume rather than mass necessitates more spreadsheet work when setting up parts.\u003C/p\u003E\u003Cp\u003E@-\u0026gt;Edit 4: This post looks like a huge mess now, but I was wondering how the part GUI\\\u0027s, and icon infoboxes are to be handled. Still working on creating your generic rocket module example, but how/if it interacts with the game GUI is still a mystery. Same goes for a modularized fueltank, especially as I have it set up for dual fuel storage and burn right now.\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-05-22T12:48:36Z","Content":"\n\u003Cp\u003EAm I getting it right that the list of \u003Cem\u003EKSPFields\u003C/em\u003E cannot be altered at run-time? \u003C/p\u003E\u003Cp\u003EIs there some other way to implement a dynamic list of items in part\\\u0027s context menu (e.g. a list of nearest vessels with an ability to click one of them)? We can surely add, well, 5 pre-defined fields \u003Cem\u003E\u0027vessel1, vessel2, ... vessel5\u0027 \u003C/em\u003Eand change their \u003Cem\u003EguiActive/guiName \u003C/em\u003Eas the list changes; but is it the \u003Cem\u003Eright\u003C/em\u003E way? o_O\u003C/p\u003E\n"},{"CreatedByName":"RC1062","CreatedById":10709,"CreatedDateTime":"2012-05-22T13:02:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022C7Studios\u0022 data-cite=\u0022C7Studios\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI checked on my own machine here. The code looking like that seems to be caused by google chrome. I tried firefox and IE (shudder) they both show about 15 lines instead of 1.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESafari displays it incorrectly aswell if that helps.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-23T10:59:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tosh\u0022 data-cite=\u0022Tosh\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAm I getting it right that the list of \u003Cem\u003EKSPFields\u003C/em\u003E cannot be altered at run-time? \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EIs there some other way to implement a dynamic list of items in part\\\u0027s context menu (e.g. a list of nearest vessels with an ability to click one of them)? We can surely add, well, 5 pre-defined fields \u003Cem\u003E\u0027vessel1, vessel2, ... vessel5\u0027 \u003C/em\u003Eand change their \u003Cem\u003EguiActive/guiName \u003C/em\u003Eas the list changes; but is it the \u003Cem\u003Eright\u003C/em\u003E way? o_O\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E I haven\\\u0027t gotten around to messing with the GUI stuff yet, but I think we ran into the same underlying issue. The [KSPField] attribute requires one of the listed types, or a class that implements the IConfigNode interface. What you\\\u0027re specifically asking for is to pass a List\u0026lt;T\u0026gt; to whatever it is that handles the GUI. I am also \u0027losing\u0027 my list through nonpersistance, as [KSPField] doesn\\\u0027t handle List\u0026lt;T\u0026gt; objects.\u003C/p\u003E\u003Cp\u003E What I think will work, and am going to try is to wrap my list inside a class that implements IConfigNode, and the Load/Save members to resolve the strings back into a list. If that works like I think it should, I can then apply [KSPField] to an object of my wrapper class type, and it\\\u0027ll persist properly. What you will probably need to do is add more stuff to the wrapper class to let whatever the GUI code is resolve it to whatever it needs to.\u003C/p\u003E\u003Cp\u003E As far as actually adding [KSPField] stuff at runtime, I found something \u003Ca href=\u0022http://msdn.microsoft.com/en-us/library/system.componentmodel.typedescriptor.aspx\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E that may not work due to it\\\u0027s specific limitations, and \u003Ca href=\u0022http://www.codeproject.com/Articles/1811/Creating-and-Using-Attributes-in-your-NET-applicat\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E that may work using reflection.emit to assemble and manufacture a custom class at runtime.\u003C/p\u003E\u003Cp\u003E In general though, because [KSPField] is an attribute, it\\\u0027s in no way dynamic at runtime, unless a reflection.emit class assembler and factory class scheme work out. But that is really, really more involved than modding a game should ever become.\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-05-23T11:15:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kellven\u0022 data-cite=\u0022kellven\u0022\u003E\u003Cdiv\u003EIn general though, because [KSPField] is an attribute, it\\\u0027s in no way dynamic at runtime, unless a reflection.emit class assembler and factory class scheme work out. But that is really, really more involved than modding a game should ever become.\u003C/div\u003E\u003C/blockquote\u003EWell, I bet it\\\u0027s \u003Cem\u003EPartModule.Fields \u003C/em\u003Eiterator used when building context menu. And it \u003Cem\u003Emay \u003C/em\u003E(or may \u003Cem\u003Enot\u003C/em\u003E) be just a \u003Cem\u003Estatic \u003C/em\u003Elist initialized in constructor with all the \u003Cem\u003EKSPFields \u003C/em\u003Eavailable at \u003Cem\u003Ethat \u003C/em\u003Emoment, and may be not updated in run-time... \u003Cp\u003ENeeds testing :\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-23T12:50:35Z","Content":"\n\u003Cp\u003E You might very well be right, but there is Part.AddModule(), which I was assuming is available at runtime to plugins, which would necessitate the list of fields being dynamic. If it\\\u0027s not going to work properly, that\\\u0027s another problem in itself.\u003C/p\u003E\u003Cp\u003E I think the fields list is actually a \u0027public BaseFieldList Fields { get; }\u0027, I tried looking in BaseFieldList, but couldn\\\u0027t make much sense of it, too much hidden code.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-24T03:14:59Z","Content":"\n\u003Cp\u003E I moved my persistent persistence grievance to the Dev forum as a bug, as that\\\u0027s what I\\\u0027ve concluded it is.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-25T07:16:30Z","Content":"\n\u003Cp\u003E I still don\\\u0027t understand how the data loaded into an IConfigNode class is supposed to persist through scenes once it gets loaded from part.cfg, but I have a basic order of operations for the PartModule in action, so I\\\u0027ll share that.\u003C/p\u003E\u003Cp\u003E-\u0026gt;part is created(added to scene, or created from part.cfg)\u003C/p\u003E\u003Cp\u003E1. PartModule constructor called\u003C/p\u003E\u003Cp\u003E2. PartModule OnAwake called\u003C/p\u003E\u003Cp\u003E3. : IConfigNode class constructors for [KSPField] fields in PartModule class\u003C/p\u003E\u003Cp\u003E4a. : IConfigNode class Load() called \u0027\u0027 if this is the part.cfg reading scene \u0026lt;-This is not done elsewhere\u003C/p\u003E\u003Cp\u003E4b. : IConfigNode class Save() called \u0027\u0027 this seems to happen when launching from VAB, and starting flightscene. It appears to be tied to the flightstate saving. It is not called after reading part.cfg.\u003C/p\u003E\u003Cp\u003E5a. PartModule OnLoad() called \u0027\u0027 \u0026lt;-This is done when reading part.cfg, nowhere else\u003C/p\u003E\u003Cp\u003E5b. PartModule OnSave() called \u0027\u0027 \u0026lt;-This is done when saving the flightstate, after the [KSPField] Save() calls\u003C/p\u003E\u003Cp\u003E6. PartModule OnStart called \u0026lt;-This is not done when reading part.cfg, but is done in VAB/Flightscene. Flightscene happens just before \u003C/p\u003E\u003Cp\u003EPQS (KerbinOcean) UpdateInit=3.098877s (1252 quads)\u003C/p\u003E\u003Cp\u003EPQS (OceanPQS) UpdateInit=0.001693726s (44 quads)\u003C/p\u003E\u003Cp\u003E7. OnUpdate etc called once the part is activated. This could be problematic for parts that should update when inactive.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-26T11:20:32Z","Content":"\n\u003Cp\u003E My workaround for custom type persistence:\u003C/p\u003E\u003Cp\u003E 1. Add a [KSPField] string to your PartModule, and override OnAwake and OnLoad like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003Epublic class MyModule : PartModule\u003Cbr\u003E{\u003Cbr\u003E [KSPField]\u003Cbr\u003E public string MyPersistantData;\u003Cbr\u003E\u003Cbr\u003E public MyDataStructure MDS0 = new MyDataStructure();\u003Cbr\u003E\u003Cbr\u003E public override void OnAwake()\u003Cbr\u003E {\u003Cbr\u003E if (MDS0 == null)\u003Cbr\u003E MDS0 = new MyDataStructure();\u003Cbr\u003E DeSerialize(); //read all the data stored in MyPersistantData back into the relevant places.\u003Cbr\u003E base.OnAwake();\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E public override void OnLoad(ConfigNode node)\u003Cbr\u003E {\u003Cbr\u003E foreach (ConfigNode subnode in node.nodes)\u003Cbr\u003E {\u003Cbr\u003E switch (subnode.name)\u003Cbr\u003E {\u003Cbr\u003E case \u0027DuelingInts\u0027:\u003Cbr\u003E {\u003Cbr\u003E MDS0.Load(subnode);\u003Cbr\u003E break;\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E Serialize(); //store all necessary data into MyPersistantData\u003Cbr\u003E base.OnLoad(node);\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E public void Serialize()\u003Cbr\u003E {\u003Cbr\u003E MyPersistantData = string.Empty;\u003Cbr\u003E if (MDS0 != null)\u003Cbr\u003E MyPersistantData \u002B= MDS0.ToString();\u003Cbr\u003E //can store more data here, just use a delimiter like in the class\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E public void DeSerialize()\u003Cbr\u003E {\u003Cbr\u003E if (string.IsNullOrEmpty(MyPersistantData))\u003Cbr\u003E return;//fail if nothing was saved\u003Cbr\u003E //can split the string into substrings here like in the class if you\\\u0027re packing multiple objects into it\u003Cbr\u003E MDS0.Read(MyPersistantData);\u003Cbr\u003E //this returns a bool for handling multiple object packing\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E 2. Setup your class you need persistent data storage for like so:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E//need this for culture normalization, crazy Euros use all kinds of funny stuff \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003Cbr\u003Eusing System.Globalization;\u003Cbr\u003E//\u003Cbr\u003E\u003Cbr\u003Epublic class MyDataStructure\u003Cbr\u003E{\u003Cbr\u003E public int Data0;\u003Cbr\u003E public int Data1;\u003Cbr\u003E\u003Cbr\u003E //These two just keep things consistent\u003Cbr\u003E private static CultureInfo cult = CultureInfo.InvariantCulture;\u003Cbr\u003E private static NumberStyles style = NumberStyles.Float | NumberStyles.AllowThousands;\u003Cbr\u003E //\u003Cbr\u003E private static string[] Delimiter = new string[] { \u0027*\u0027 };\u003Cbr\u003E private static int NumEntries = 2;\u003Cbr\u003E\u003Cbr\u003E /* Just an example of validating data\u003Cbr\u003E private bool ValidateMe(int i)\u003Cbr\u003E {\u003Cbr\u003E if (i \u0026lt; 17 \u0026amp;\u0026amp; i \u0026gt; 3)\u003Cbr\u003E return true;\u003Cbr\u003E return false;\u003Cbr\u003E }\u003Cbr\u003E */\u003Cbr\u003E\u003Cbr\u003E //as this class does not use the IConfigNode interface or loading mechanism, this method can be named anything\u003Cbr\u003E public void Load(ConfigNode node)\u003Cbr\u003E {\u003Cbr\u003E if (node == null)\u003Cbr\u003E return;\u003Cbr\u003E //used tryparse here as that does not throw exceptions\u003Cbr\u003E int.TryParse(node.GetValue(\u0027inta\u0027), out Data0);\u003Cbr\u003E int.TryParse(node.GetValue(\u0027intb\u0027), out Data1);\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E public bool Read(string s)\u003Cbr\u003E {\u003Cbr\u003E if (string.IsNullOrEmpty(s))\u003Cbr\u003E return false;//Failure\u003Cbr\u003E string[] strarr = s.Split(Delimiter, System.StringSplitOptions.RemoveEmptyEntries);//Holds array of string encoded values\u003Cbr\u003E if (strarr.Length != NumEntries)\u003Cbr\u003E return false;//Failure, incorrect number of serialized elements, or corruption\u003Cbr\u003E int[] intvals = new int[NumEntries];//will hold array of decoded values\u003Cbr\u003E bool valid = true;\u003Cbr\u003E for (int i = 0; i \u0026lt; NumEntries; i\u002B\u002B)\u003Cbr\u003E {\u003Cbr\u003E valid \u0026amp;= int.TryParse(strarr[i], style, cult, out intvals[i]);//Try to decode values, and keep a running failure check\u003Cbr\u003E //valid \u0026amp;= ValidateMe(intvals[i]); //Example of another check to make sure the value is valid.\u003Cbr\u003E }\u003Cbr\u003E if (valid) //if all the data decoded and validated right, fill it in\u003Cbr\u003E {\u003Cbr\u003E Data0 = intvals[0];\u003Cbr\u003E Data1 = intvals[1];\u003Cbr\u003E }\u003Cbr\u003E return valid;\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E public override string ToString()\u003Cbr\u003E {\u003Cbr\u003E string s = string.Empty;\u003Cbr\u003E s \u002B= Data0.ToString(cult);\u003Cbr\u003E s \u002B= Delimiter;\u003Cbr\u003E s \u002B= Data1.ToString(cult);\u003Cbr\u003E return s;\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E 3. Setup part.cfg like so:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E// Kerbal Space Program - Part Config\u003Cbr\u003E// \u003Cbr\u003E// \u003Cbr\u003E\u003Cbr\u003E// --- general parameters ---\u003Cbr\u003Ename = KISConnect\u003Cbr\u003Emodule = Strut\u003Cbr\u003Eauthor = Kellven\u003Cbr\u003E\u003Cbr\u003E// --- asset parameters ---\u003Cbr\u003Emesh = ConnectV2.dae\u003Cbr\u003Escale = 1\u003Cbr\u003Etexture = ConnectV2.png\u003Cbr\u003EspecPower = 0.1\u003Cbr\u003ErimFalloff = 3\u003Cbr\u003EalphaCutoff = 0\u003Cbr\u003E\u003Cbr\u003E// --- node definitions ---\u003Cbr\u003Enode_attach = 0.0, 0.0, -0.10, 0.0, 0.0, 1.0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- editor parameters ---\u003Cbr\u003Ecost = 1000\u003Cbr\u003Ecategory = 1\u003Cbr\u003Esubcategory = 0\u003Cbr\u003Etitle = KIS Connect v2\u003Cbr\u003Emanufacturer = Kellvonic Imperial Spaceyard\u003Cbr\u003Edescription = Stick just one of these on your ship, and it will automagically make the parts connect better. Adding more than one will not increase connection betterness.\u003Cbr\u003E\u003Cbr\u003E// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003Cbr\u003EattachRules = 0,1,0,1,1\u003Cbr\u003E\u003Cbr\u003E// --- standard part parameters ---\u003Cbr\u003Emass = 0.000001\u003Cbr\u003EdragModelType = default\u003Cbr\u003Emaximum_drag = 0\u003Cbr\u003Eminimum_drag = 0\u003Cbr\u003EangularDrag = 0\u003Cbr\u003EcrashTolerance = 100\u003Cbr\u003EbreakingForce = 1000\u003Cbr\u003EbreakingTorque = 1000\u003Cbr\u003EmaxTemp = 2900\u003Cbr\u003E\u003Cbr\u003EfullExplosionPotential = 0.0\u003Cbr\u003EemptyExplosionPotential = 0.0\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E name = MyModule\u003Cbr\u003E\u003Cbr\u003E DuelingInts\u003Cbr\u003E {\u003Cbr\u003E inta = 1\u003Cbr\u003E intb = 2\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Just used my own part as an example. It\\\u0027s a strut, shows up in strut section, and does nothing but read two ints from part.cfg into a data structure, but it should persist that structure through the various scenes. There might be a couple of errors in here still, I did a quick rewrite of my code into a general purpose example, but the general workaround idea does work in game.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-05-29T19:33:10Z","Content":"\n\u003Cp\u003EI tried the resource system with my solar panels and some power consuming modules. It works, but the tank gives/takes the resources only in case the modules can reach it through crossfeed capable parts. However for some systems like electricity it could be better to have access RCS way. Maybe there could be additional parameter that changes request logic implemented?\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-30T05:15:58Z","Content":"\n\u003Cp\u003E Alchemist, I assume you\\\u0027re using the part.RequestResource thing. Have you tried modifying part.Resources[0].amount directly? I\\\u0027m curious as to whether or not that also modifies the return value of part.GetResourceMass.\u003C/p\u003E\u003Cp\u003E The part.mass remains constant (as in the old drymass value), and I\\\u0027m not entirely sure whether or not the mass from resources is thrown into the gravity, CoM, and applyforce calculations, or is just ignored. I was going to add micro-resource tanks to my part-engines for air, oxidizer, and fuel, so they would work as a complete-engine-in-a-part instead of the multiple-parts-per-engine we seem to be having now. Probably not a big thing, but would be nice is the wetmass of the engine was used when applying the force, instead of the drymass, empty/full fuel tanks are something else entirely.\u003C/p\u003E\u003Cp\u003E If there\\\u0027s an additional \u0027RequestMode\u0027 param added to the part.RequestResource, I\\\u0027d like to see an option to lock it to a specific part, so it would assume there\\\u0027s no crossfeed paths connected, and just pull from itself. To pull from a tank, you\\\u0027d have to call the method on a ref to the specific tank you wanted to draw from.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-30T07:56:40Z","Content":"\n\u003Cp\u003E That was interesting, it seems the [KSPField] persistence might still be having problems, but a separate static class with a static ConfigNode field will persist (Just doesn\\\u0027t get cleaned up I guess).\u003C/p\u003E\u003Cp\u003E If that will work with a List\u0026lt;ConfigNode\u0026gt; also, can just call a static member inside OnLoad to check if the part is already in the list, and if not, add a new ConfigNode(\u0027PartName here\u0027) to the list. Then in OnStart call another member to return a node by \u0027PartName here\u0027, and send it to whatever Load(ConfigNode) members need it to re-initialize the part data. Eliminates the need to read/write from disk.\u003C/p\u003E\n"},{"CreatedByName":"I got BCed","CreatedById":18121,"CreatedDateTime":"2012-06-28T12:27:14Z","Content":"\n\u003Cp\u003Eguys I\\\u0027m currently developing a system where all parts will consume a resource when the recive certain in flight messages, (like the ones to fire RCS, or move canards, or lower legs, or... (you get the idea)) I\\\u0027m havving to problems with this:\u003C/p\u003E\u003Cp\u003E1. how do I override the default PartModual classes without overriding there existing contents, or how do I obtain the existing code so I can paste it in with what I want to add.\u003C/p\u003E\u003Cp\u003E2. I have no idea what the message strings are, what are they? (all of them) \u003C/p\u003E\n"},{"CreatedByName":"BlackBicycle","CreatedById":29657,"CreatedDateTime":"2012-06-28T13:02:27Z","Content":"\n\u003Cp\u003EI am sure you will be better off starting a new thread here:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?board=39.0\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/forum/index.php?board=39.0\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-04-30T21:17:43Z","Content":"\n\u003Cp\u003ESince this thread is now in the correct forum, I\u0027ll go ahead and reply to it and get discussion started again.\u003C/p\u003E\u003Cp\u003EI had a solution to the following, but it was bugged, so I\u0027m scrapping it and starting over. Knowing how \u0022official\u0022 modules handle this would be ideal.\u003C/p\u003E\u003Cp\u003E1. How do modules like moduleEngines currently store/retrieve List\u0026lt;\u0026gt;s like moduleEngines\u0027 Propellants? Clearly it works for these modules, so I\u0027d like to know how it\u0027s being done.\u003C/p\u003E\u003Cp\u003E2. Secondarily, if I change a part\u0027s Resources in the editor, how do I get those changes to propagate to the version that spawns on the launchpad?\u003C/p\u003E\u003Cp\u003EHere\u0027s my code, if it helps:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/Ialdabaoth/modularFuelTanks/blob/master/modularFuelTank.cs\u0022 rel=\u0022external nofollow\u0022\u003EmodularFuelTanks.cs\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-05-01T00:41:32Z\u0022 title=\u002205/01/2013 12:41  AM\u0022 data-short=\u002211 yr\u0022\u003EMay 1, 2013\u003C/time\u003E by ialdabaoth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Morolas","CreatedById":62725,"CreatedDateTime":"2013-05-23T09:23:12Z","Content":"\n\u003Cp\u003Ewhat happened to the first post? it was VERY helpful!\u003C/p\u003E\n"},{"CreatedByName":"EndlessWaves","CreatedById":41302,"CreatedDateTime":"2013-05-23T13:38:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Morolas\u0022 data-cite=\u0022Morolas\u0022\u003E\u003Cdiv\u003Ewhat happened to the first post? it was VERY helpful!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/7529-Plugin-Posting-Rules-And-Official-Documentation?p=156430\u0026amp;viewfull=1#post156430\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/showthread.php/7529-Plugin-Posting-Rules-And-Official-Documentation?p=156430\u0026amp;viewfull=1#post156430\u003C/a\u003E\u003C/p\u003E\n"}]}