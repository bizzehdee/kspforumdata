{"TopicId":29185,"ForumId":34,"TopicTitle":"[0.20] Modular Fuel System 1.3/realistic fuels, reconfigurable fuel tanks and engines","CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-05-26T01:00:23Z","PageNum":6,"Articles":[{"CreatedByName":"erbmur","CreatedById":57112,"CreatedDateTime":"2013-06-19T13:30:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Chestburster\u0022 data-cite=\u0022Chestburster\u0022\u003E\u003Cdiv\u003ENo, thats working as intended (atm) since in their primary mode they only use LH2. When the HybridEngine module gets added it will be working like the rocket engines.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for the explanations Chesterbuster.\u003C/p\u003E\n"},{"CreatedByName":"Chestburster","CreatedById":69476,"CreatedDateTime":"2013-06-19T13:35:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ialdabaoth\u0022 data-cite=\u0022ialdabaoth\u0022\u003E\u003Cdiv\u003ERemember that you need to specify mixtures as volume ratios in KSP, not as mass ratios! That has bit me in the ass a few times.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs there a formula or something to help me getting the right mixture ratios? I\u0027m using \u003Ca href=\u0022http://www.braeunig.us/space/propel.htm\u0022 rel=\u0022external nofollow\u0022\u003Ethis site\u003C/a\u003E for information gathering atm.\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-19T16:44:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Chestburster\u0022 data-cite=\u0022Chestburster\u0022\u003E\u003Cdiv\u003EIs there a formula or something to help me getting the right mixture ratios? I\u0027m using \u003Ca href=\u0022http://www.braeunig.us/space/propel.htm\u0022 rel=\u0022external nofollow\u0022\u003Ethis site\u003C/a\u003E for information gathering atm.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep, let\u0027s walk through it with Liquid Oxygen \u002B Liquid Hydrogen.\u003C/p\u003E\u003Cp\u003ELOX: \u003C/p\u003E\u003Cp\u003EDensity - 1.14\u003C/p\u003E\u003Cp\u003ERESOURCE_DEFINITION density - 1.14 * 0.00625 = 0.007\u003C/p\u003E\u003Cp\u003ERatio - 5.00\u003C/p\u003E\u003Cp\u003Edensity ratio: 5.00 / 1.141 = 4.38\u003C/p\u003E\u003Cp\u003ELH2:\u003C/p\u003E\u003Cp\u003EDensity - 0.071\u003C/p\u003E\u003Cp\u003ERESOURCE_DEFINITION density - 0.071 * 0.00625 = 0.00044\u003C/p\u003E\u003Cp\u003ERatio - 1.00\u003C/p\u003E\u003Cp\u003Edensity ratio: 1.00 / 0.071 = 14.1\u003C/p\u003E\u003Cp\u003Eso your density ratios are 4.38 and 14.1; or, if you want to make them add to 1, 4.38 / (4.38 \u002B 14.1) = 0.24 and 14.1 / (4.38 \u002B 14.1) = 0.76. I believe I used closer to a 6:1 ratio instead of a 5:1 ratio, which is also a NASA standard, so I wound up with 0.27 and 0.73.\u003C/p\u003E\u003Cp\u003EDoes that make sense?\u003C/p\u003E\u003Cp\u003EOh! Also, all your files have @MaxTemp instead of @maxTemp, this won\u0027t work. KSP\u0027s node system is case-sensitive.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T16:47:19Z\u0022 title=\u002206/19/2013 04:47  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by ialdabaoth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Chestburster","CreatedById":69476,"CreatedDateTime":"2013-06-19T16:58:42Z","Content":"\n\u003Cp\u003EI call shenanigans! Notepad\u002B\u002B must be playing pranks on me.. xD\u003C/p\u003E\u003Cp\u003EGoing to figure that whole mixture out later when i get home. its currently way to hot here..\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMFS Configs V1.2b released!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E- fixed the maxTemp issue.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.file-upload.net/download-7734140/MFS_Configs_V1.2b.zip.html\u0022 rel=\u0022external nofollow\u0022\u003EDownload V1.2b\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EDidnt notice that since DeadlyReentry automaticly did what i did there^^\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T17:14:39Z\u0022 title=\u002206/19/2013 05:14  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by Chestburster\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erbmur","CreatedById":57112,"CreatedDateTime":"2013-06-19T17:20:47Z","Content":"\n\u003Cp\u003EMe again, sorry.\u003C/p\u003E\u003Cp\u003EI still don\u0027t quite get how this is supposed to work.\u003C/p\u003E\u003Cp\u003EUsing an FL-T400 tanks with an LV-909:\u003C/p\u003E\u003Cp\u003Estandard liquidfuel \u002B oxidizer, action group menu says 370 isp, mechjeb delta-v/engineer redux give 3663 delta-v\u003C/p\u003E\u003Cp\u003EliquidH2 \u002B LiquidOxygen, action group menu says 460 isp, which would lead me to believe that it would be a lot more efficient and therefore provide more delta-v, but mechjeb/engineering redux say 1481 delta-v\u003C/p\u003E\u003Cp\u003ESeriously, what is is i\u0027m missing with this mod?\u003C/p\u003E\n"},{"CreatedByName":"Chestburster","CreatedById":69476,"CreatedDateTime":"2013-06-19T17:22:52Z","Content":"\n\u003Cp\u003EThats currently a bug and it will get fixed with the next version as fas as i know.\u003C/p\u003E\n"},{"CreatedByName":"erbmur","CreatedById":57112,"CreatedDateTime":"2013-06-19T17:29:31Z","Content":"\n\u003Cp\u003EJesus child LEAVE ME ALONE!!!\u003C/p\u003E\u003Cp\u003EBut thank you for the quick answer \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-19T17:51:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erbmur\u0022 data-cite=\u0022erbmur\u0022\u003E\u003Cdiv\u003EMe again, sorry.\u003Cp\u003EI still don\u0027t quite get how this is supposed to work.\u003C/p\u003E\u003Cp\u003EUsing an FL-T400 tanks with an LV-909:\u003C/p\u003E\u003Cp\u003Estandard liquidfuel \u002B oxidizer, action group menu says 370 isp, mechjeb delta-v/engineer redux give 3663 delta-v\u003C/p\u003E\u003Cp\u003EliquidH2 \u002B LiquidOxygen, action group menu says 460 isp, which would lead me to believe that it would be a lot more efficient and therefore provide more delta-v, but mechjeb/engineering redux say 1481 delta-v\u003C/p\u003E\u003Cp\u003ESeriously, what is is i\u0027m missing with this mod?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually, this isn\u0027t bugged. Look at the mass of your rocket.\u003C/p\u003E\u003Cp\u003ELiquidH2 is significantly more efficient than LiquidFuel, kilogram-for-kilogram. But it is much, MUCH lighter.\u003C/p\u003E\u003Cp\u003ETry this instead:\u003C/p\u003E\u003Cp\u003EFill with standard liquidfuel \u002B oxidizer, note delta-V.\u003C/p\u003E\u003Cp\u003ENow, empty and refill with liquidH2 \u002B liquidOxygen, and then *keep adding more fuel tanks* until you reach the same vehicle mass that you had with liquidfuel \u002B oxidizer.\u003C/p\u003E\u003Cp\u003ETHOSE are the delta-V\u0027s you should be comparing.\u003C/p\u003E\u003Cp\u003EThis is why LiquidH2 is usually an upper-stage decision in real life, btw - because the consideration isn\u0027t just how much delta-V you can get, it\u0027s how much delta-V you can fit in an upper stage with a given payload weight.\u003C/p\u003E\u003Cp\u003EYour bottom stages are better off with LiquidFuel \u002B LiquidOxygen; down in the lower atmosphere the delta-V differences won\u0027t be that substantial anyways. Save the LH2 for when you reach space, unless you\u0027re using SABREs or something.\u003C/p\u003E\n"},{"CreatedByName":"Chestburster","CreatedById":69476,"CreatedDateTime":"2013-06-19T18:08:56Z","Content":"\n\u003Cp\u003EWell, something is bugged. If you take an engine, like the Titan-T1, and put it into LF\u002BLOX you get 320 ISP with engineer, switching it to LH2\u002BLOX or LF\u002BOX doesnt change the ISP in engineer (and the MFS UI) and leading to miscalculated dV. Its just an VAB/SPH bug, on the launchpad the ISP and dV are correct.\u003C/p\u003E\n"},{"CreatedByName":"cardajowol","CreatedById":71101,"CreatedDateTime":"2013-06-19T18:40:30Z","Content":"\n\u003Cp\u003EThere is also alot of \u003C/p\u003E\u003Cp\u003E\u0022[Exception]: NullReferenceException: Object reference not set to an instance of an object \u0022\u003C/p\u003E\u003Cp\u003EWhen I go in to the action menu and very laggy at times... this suppose to be doing this?\u003C/p\u003E\n"},{"CreatedByName":"CaptainArbitrary","CreatedById":28110,"CreatedDateTime":"2013-06-19T21:00:02Z","Content":"\n\u003Cp\u003EI\u0027ve got a bit of a stupid question, I\u0027m afraid. What\u0027s the purpose and function of the \u0022modded\u0022 parameter to ModuleEngineConfigs? From glancing through the source code, it \u003Cem\u003Elooks like\u003C/em\u003E if you set \u0022modded = true\u0022 in your config file, the mod is supposed to replace the part\u0027s ModuleEngines with the one from ModuleEngineConfigs whose name parameter matches the module\u0027s configuration parameter. In other words, if your config (run through ModuleManager, duh) looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[someEngine]\u003Cbr\u003E{\u003Cbr\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ModuleEngineConfigs\u003Cbr\u003E\t\tconfiguration = someConfig\u003Cbr\u003E\t\tmodded = true\u003Cbr\u003E\t\tCONFIG\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tname = someConfig\u003Cbr\u003E\t\t\tet cetera\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen as soon as that part gets loaded, either in the editor or on the pad, its engine config is supposed to be completely replaced by the one from ModuleEngineConfigs. Do I have that right?\u003C/p\u003E\u003Cp\u003EThis isn\u0027t working for me. If I set up a config file exactly that way, the engine still comes into the VAB configured according to the default parameters given in its part.cfg. Is using \u0022modded = true\u0022 this way something that\u0027s not currently working and I should ignore it, or am I getting it wrong somehow or what?\u003C/p\u003E\u003Cp\u003EIt\u0027s totally not a big deal. It only matters in that if I want to \u003Cem\u003Ereplace\u003C/em\u003E the default engine configuration entirely, not just add other options that can be chosen in the VAB, then I have to both have a ModuleEngineConfigs config and also use the @-syntax of ModuleManager to change the part\u0027s configuration directly. It works fine, I just have to have the same information in two places in the config file, and I\u0027ve been making a lot of dumb mistakes involving forgetting to change both when I tweak something, et cetera.\u003C/p\u003E\u003Cp\u003EThanks for the mod. It\u0027s super-rad.\u003C/p\u003E\n"},{"CreatedByName":"SchroedingersHat","CreatedById":60782,"CreatedDateTime":"2013-06-19T21:57:21Z","Content":"\n\u003Cp\u003EThere\u0027s a bug somewhere involving this. At least there\u0027s something odd going on with some of the KW rocketry engines with regards to this. I\u0027ve had a vague inkling that something is off with a few designs, but I tested the KW Vesta (120 kN 1.25m one) against the wildcat (230kN).\u003C/p\u003E\u003Cp\u003EGiving them identical tanks, the Vesta ran out first. Also a single long 1.25m tank of H2 \u002B LOX is enough to get the apoapsis out past Jool with the wildcat.\u003C/p\u003E\u003Cp\u003EIt looks like it might have something to do with using the H2\u002BLOX at the same rate as the fuel the engine started with as the vesta defaults to H2 (i think) and I first started to notice it with other similar engines (default to liquid fuel and changable to H2)\u003C/p\u003E\u003Cp\u003EEdit: Just tested with one of the default engines (1.25m vectored one) and the same thing happens.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T22:11:08Z\u0022 title=\u002206/19/2013 10:11  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by SchroedingersHat\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Chestburster","CreatedById":69476,"CreatedDateTime":"2013-06-19T23:03:09Z","Content":"\n\u003Cp\u003ECheck the weight of your rocket. Thats just 3 tons with 220 KN thrust. Its no wonder why it can go as far out as Jool \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E H2 doesnt weight much, its supposed to propell lighter upper stages. Add something with more weight and it wont go very far. Even a 0.7t payload wont make it far (260km if you go straight up xD).\u003C/p\u003E\u003Cp\u003EEdit: But after testing the vesta with LH2\u002BLOX and RP-1\u002BLOX i found out that with the RP-1 setup the ISP wont stop at 380, instead going up to 465 like the LH2 version o.O\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-19T23:30:12Z\u0022 title=\u002206/19/2013 11:30  PM\u0022 data-short=\u002211 yr\u0022\u003EJune 19, 2013\u003C/time\u003E by Chestburster\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erbmur","CreatedById":57112,"CreatedDateTime":"2013-06-19T23:47:28Z","Content":"\n\u003Cp\u003EI appear to be having the same issue as Hades described a couple of pages back.\u003C/p\u003E\u003Cp\u003EThe configurable ASAS modules for the core probes appear to make them uncontrollable. They only rotate if they are turned by a gimbled rocket engine. Apart from that, they no longer want to turn.\u003C/p\u003E\u003Cp\u003EAny hints on how I should be setting up the Kp/Kd values?\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-20T06:29:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erbmur\u0022 data-cite=\u0022erbmur\u0022\u003E\u003Cdiv\u003EI appear to be having the same issue as Hades described a couple of pages back.\u003Cp\u003EThe configurable ASAS modules for the core probes appear to make them uncontrollable. They only rotate if they are turned by a gimbled rocket engine. Apart from that, they no longer want to turn.\u003C/p\u003E\u003Cp\u003EAny hints on how I should be setting up the Kp/Kd values?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI just figured out what\u0027s causing that bug, actually - apparently, I accidentally disabled the internal gyro forces. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E Working on a fix now.\u003C/p\u003E\n"},{"CreatedByName":"grom","CreatedById":57418,"CreatedDateTime":"2013-06-20T06:33:12Z","Content":"\n\u003Cp\u003E@ialdabaoth are you aware that you have already unpacked RealFuels? I only wanted the basic edition for being able to have empty (or partial full) tanks and the configurable ASAS. So I copied the ModularFuelTanks folder deleting out RuelFuels. Also what is ExsurgentEngineering used for? I never copied that over either.\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-20T08:55:38Z","Content":"\n\u003Cp\u003EExsurgentEngineering was a compatability fix for B9; it will no longer be included as of the next version of ModularFuelSystem.\u003C/p\u003E\u003Cp\u003EI will make sure to keep RealFuels.zip packed in the next release, thank you.\u003C/p\u003E\n"},{"CreatedByName":"SchroedingersHat","CreatedById":60782,"CreatedDateTime":"2013-06-20T08:57:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Chestburster\u0022 data-cite=\u0022Chestburster\u0022\u003E\u003Cdiv\u003ECheck the weight of your rocket. Thats just 3 tons with 220 KN thrust. Its no wonder why it can go as far out as Jool \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E H2 doesnt weight much, its supposed to propell lighter upper stages. Add something with more weight and it wont go very far. Even a 0.7t payload wont make it far (260km if you go straight up xD).\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe issue isn\u0027t thrust, it\u0027s how long the H2 lasts (an equal volume tank should run out much quicker in some circumstances). That\u0027s well over 5000 delta-V (my ascent profile wasn\u0027t very efficient) on a mass ratio of 2. \u003C/p\u003E\u003Cp\u003EFor that test rocket here is some maths:\u003C/p\u003E\u003Cp\u003EDry mass of 2.87\u003C/p\u003E\u003Cp\u003EFull mass of 4.96\u003C/p\u003E\u003Cp\u003EBang that into the rocket equation gives you 5.37 * Isp of delta-V or 2470m/s\u003C/p\u003E\u003Cp\u003EIn further testing, the mechjeb ascent stats say I am getting 6000m/s of dV which seems right as I\u0027m moving at 4000m/s on escape from Kerbal and I know from experience it takes about 5000m/s to encounter Jool. This gives an effective Isp of 1120s -- mostly in atmosphere.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEdit: But after testing the vesta with LH2\u002BLOX and RP-1\u002BLOX i found out that with the RP-1 setup the ISP wont stop at 380, instead going up to 465 like the LH2 version o.O\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEngines on different fuels are reporting the same Isp during flight for me too. This is the Isp of their default fuel.\u003C/p\u003E\u003Cp\u003ENext experiment:\u003C/p\u003E\u003Cp\u003ETwo wildcats on LiquidFuel/Oxidizer and one on H2/LOX. \u003C/p\u003E\u003Cp\u003EAll three have their own tank.\u003C/p\u003E\u003Cp\u003EPut 100 fuel in each tank.\u003C/p\u003E\u003Cp\u003EThey ran out at almost exactly the same time (there was 1.6 out of 73 units of H2 left when the LiquidFuel ran out)\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHypothesis\u003C/strong\u003E:\u003C/p\u003E\u003Cp\u003EThe modified engines are burning their alternate fuel at the Isp of their default confguration in the correct ratios but as if it had the mass of LiquidFuel.\u003C/p\u003E\u003Cp\u003E-------------------------------------\u003C/p\u003E\u003Cp\u003EAddendum:\u003C/p\u003E\u003Cp\u003EExperiment 3:\u003C/p\u003E\u003Cp\u003E1 nerva, 100 units of H2.\u003C/p\u003E\u003Cp\u003EEverything works correctly\u003C/p\u003E\u003Cp\u003EExperiment 4:\u003C/p\u003E\u003Cp\u003EVesta running on H2 then LiquidFuel\u003C/p\u003E\u003Cp\u003EThe Vesta works correctly and performs as MechJeb and manual calculations predict when running on H2/LOX.\u003C/p\u003E\u003Cp\u003EPutting a similar amount (but much greater mass) of LiquidFuel/Oxidizer in produced slightly lower dV.\u003C/p\u003E\u003Cp\u003EExperiments 3 and 4 agree with my hypothesis.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-06-20T09:08:01Z\u0022 title=\u002206/20/2013 09:08  AM\u0022 data-short=\u002211 yr\u0022\u003EJune 20, 2013\u003C/time\u003E by SchroedingersHat\u003C/strong\u003E\n\u003Cbr\u003EExtra Experiments\n\u003C/span\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-06-20T09:02:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SchroedingersHat\u0022 data-cite=\u0022SchroedingersHat\u0022\u003E\u003Cdiv\u003EThe issue isn\u0027t thrust, it\u0027s how long the H2 lasts. That\u0027s well over 5000 delta-V (my ascent profile wasn\u0027t very efficient) on a mass ratio of 2. \u003Cp\u003EFor that test rocket here is some maths:\u003C/p\u003E\u003Cp\u003EDry mass of 2.87\u003C/p\u003E\u003Cp\u003EFull mass of 4.96\u003C/p\u003E\u003Cp\u003EBang that into the rocket equation gives you 5.37 * Isp of delta-V or 2470m/s\u003C/p\u003E\u003Cp\u003EIn further testing, the mechjeb ascent stats say I am getting 6000m/s of dV which seems right as I\u0027m moving at 4000m/s on escape from Kerbal and I know from experience it takes about 5000m/s to encounter Jool. This gives an effective Isp of 1120s -- mostly in atmosphere.\u003C/p\u003E\u003Cp\u003EEngines on different fuels are reporting the same Isp during flight for me too. This is the Isp of their default fuel.\u003C/p\u003E\u003Cp\u003ENext experiment:\u003C/p\u003E\u003Cp\u003ETwo wildcats on LiquidFuel/Oxidizer and one on H2/LOX. \u003C/p\u003E\u003Cp\u003EAll three have their own tank.\u003C/p\u003E\u003Cp\u003EPut 100 fuel in each tank.\u003C/p\u003E\u003Cp\u003EThey ran out at almost exactly the same time (there was 1.6 out of 73 units of H2 left when the LiquidFuel ran out)\u003C/p\u003E\u003Cp\u003EHypothesis:\u003C/p\u003E\u003Cp\u003EThe modified engines are burning their alternate fuel at the Isp of their default confguration in the correct ratios but as if it had the mass of LiquidFuel.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EConfirmed; this will be fixed for the next release. This is what happens when you muck with ModuleEngines blind. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E Squad could really use a \u0027decompiling any class descended from PartModule for the express purpose of plugin compatability\u0027 exception to their EULA.\u003C/p\u003E\n"},{"CreatedByName":"SchroedingersHat","CreatedById":60782,"CreatedDateTime":"2013-06-20T11:37:38Z","Content":"\n\u003Cp\u003ESuggestion for some time in the future: Burn rate and propellant amount control for solid motors.\u003C/p\u003E\n"},{"CreatedByName":"intidragon","CreatedById":67643,"CreatedDateTime":"2013-06-21T12:21:03Z","Content":"\n\u003Cp\u003EI got a weird problem. . . my tanks seem to generate their own fuel all of a sudden. @_@ I just downloaded your mod, installed it, and tried it out.\u003C/p\u003E\n"},{"CreatedByName":"erbmur","CreatedById":57112,"CreatedDateTime":"2013-06-21T12:42:05Z","Content":"\n\u003Cp\u003EYeah, I seem to have this happen on occasion. But it only happens as long as the ship is connected to the stability enhancers. As soon as I launch and leave the docking clamps the fuel is consumed as per normal.\u003C/p\u003E\n"},{"CreatedByName":"CaptainArbitrary","CreatedById":28110,"CreatedDateTime":"2013-06-21T16:23:20Z","Content":"\n\u003Cp\u003EI\u0027ve got a feature request wrapped inside a bug report, having to do with how tank definitions are initially applied.\u003C/p\u003E\u003Cp\u003ESay you set up a tank definition like this \u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 \u0027cause I have:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// RP1-LOX\u003Cbr\u003E\u003Cbr\u003ETANK_DEFINITION\u003Cbr\u003E{\u003Cbr\u003E\tname = CommonBulkheadStandard\u003Cbr\u003E\tbasemass = 0.000108649774484067 * volume\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LH2\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\ttemperature = -253.8\u003Cbr\u003E\t\tloss_rate = 0.0000000000422720017314612 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t\tamount = 0.0 // liters\u003Cbr\u003E\t\tmaxAmount = 0.0 // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = RP1\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\tamount = 0.35 * volume // liters\u003Cbr\u003E\t\tmaxAmount = 0.35 * volume // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LOX\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\ttemperature = -184\u003Cbr\u003E\t\tloss_rate = 0.0000000000567356572258533 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t\tamount = 0.65 * volume // liters\u003Cbr\u003E\t\tmaxAmount = 0.65 * volume // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Hydrazine\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\tamount = 0.0 // liters\u003Cbr\u003E\t\tmaxAmount = 0.0 // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EJust to make my intentions clear: This tank \u003Cem\u003Ecan hold\u003C/em\u003E LH\u00C3\u00A2\u00E2\u20AC\u0161\u00E2\u20AC\u0161, RP1, LOX and hydrazine. But by default, it holds only RP1 and LOX. The volume is meant to be divided 35% RP1 and 65% LOX, and each tank in the part has a utilization factor of 85%. That\u0027s the idea, kay?\u003C/p\u003E\u003Cp\u003EThen you create a tank part config file what looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[fuelTank]:Final\u003Cbr\u003E{\u003Cbr\u003E\t!RESOURCE[LiquidFuel] {}\u003Cbr\u003E\t!RESOURCE[Oxidizer] {}\u003Cbr\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ModuleFuelTanks\u003Cbr\u003E\t\tvolume = 2100 // liters\u003Cbr\u003E\t\ttype = CommonBulkheadStandard\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is supposed to take the stock fuelTank part, remove the LiquidFuel and Oxidizer resources entirely, then configure it using the above tank definition, with a total volume of 2100 liters. Kay so far?\u003C/p\u003E\u003Cp\u003EWhat I expect to happen, given this setup, is that the tank will come into the VAB with its 2100 liters of interior volume divided up into \u003Cstrong\u003E624.75 liters of RP1\u003C/strong\u003E and \u003Cstrong\u003E1160.25 liters of LOX\u003C/strong\u003E, \u00C3\u201A\u00C2\u00B1 a liter or so for rounding. That\u0027s 2100 liters \u00C3\u0192\u00E2\u20AC\u201D 35% \u00C3\u0192\u00E2\u20AC\u201D 85% for the RP1, and 2100 liters \u00C3\u0192\u00E2\u20AC\u201D 65% \u00C3\u0192\u00E2\u20AC\u201D 85% for the LOX.\u003C/p\u003E\u003Cp\u003EWhat actually happens is that the tank comes into the VAB with \u003Cstrong\u003E735 liters of RP1\u003C/strong\u003E and \u003Cstrong\u003E1049 liters of LOX\u003C/strong\u003E, and I don\u0027t know why.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/bxeH0EW.png\u0022 alt=\u0022bxeH0EW.png\u0022\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf I add an RP1 engine, then use the \u0022remove all tanks\u0022 and \u0022configure remaining volume for engines\u0022, the results end up being correct.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/qlhOypn.png\u0022 alt=\u0022qlhOypn.png\u0022\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo try to nail this down, I tried swapping the positions in the config file of the RP1 and LOX tank entries, so LOX came before RP1, like so:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// LOX-RP1\u003Cbr\u003E\u003Cbr\u003ETANK_DEFINITION\u003Cbr\u003E{\u003Cbr\u003E\tname = CommonBulkheadStandard\u003Cbr\u003E\tbasemass = 0.000108649774484067 * volume\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LOX\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\ttemperature = -184\u003Cbr\u003E\t\tloss_rate = 0.0000000000567356572258533 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t\tamount = 0.65 * volume // liters\u003Cbr\u003E\t\tmaxAmount = 0.65 * volume // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LH2\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\ttemperature = -253.8\u003Cbr\u003E\t\tloss_rate = 0.0000000000422720017314612 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t\tamount = 0.0 // liters\u003Cbr\u003E\t\tmaxAmount = 0.0 // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = RP1\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\tamount = 0.35 * volume // liters\u003Cbr\u003E\t\tmaxAmount = 0.35 * volume // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Hydrazine\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\tamount = 0.0 // liters\u003Cbr\u003E\t\tmaxAmount = 0.0 // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAgain, I don\u0027t know why, but I got the wrong answer in the VAB. It\u0027s 1365 liters of LOX, which adds up to 2100 liters \u00C3\u0192\u00E2\u20AC\u201D 65% leaving 735 liters left over, but there\u0027s only 420.7 liters of RP1, which is like 57.2% of that and which doesn\u0027t add up to anything. So I haven\u0027t figure out where that came from. But the point here is that the order of the tank config nodes in a tank definition matters.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/lx9Lh3I.png\u0022 alt=\u0022lx9Lh3I.png\u0022\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENext test was to try combining proportional maxAmounts with fixed ones. This tank definition is the same as the first one I showed you, only it also has 100 liters of hydrazine monopropellant in it.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// RP1-LOX-Hydrazine\u003Cbr\u003E\u003Cbr\u003ETANK_DEFINITION\u003Cbr\u003E{\u003Cbr\u003E\tname = CommonBulkheadStandard\u003Cbr\u003E\tbasemass = 0.000108649774484067 * volume\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LH2\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\ttemperature = -253.8\u003Cbr\u003E\t\tloss_rate = 0.0000000000422720017314612 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t\tamount = 0.0 // liters\u003Cbr\u003E\t\tmaxAmount = 0.0 // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = RP1\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\tamount = 0.35 * volume // liters\u003Cbr\u003E\t\tmaxAmount = 0.35 * volume // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LOX\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\ttemperature = -184\u003Cbr\u003E\t\tloss_rate = 0.0000000000567356572258533 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t\tamount = 0.65 * volume // liters\u003Cbr\u003E\t\tmaxAmount = 0.65 * volume // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Hydrazine\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\tamount = 100.0 // liters\u003Cbr\u003E\t\tmaxAmount = 100.0 // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHere I expect the tank to end up with 100 liters of hydrazine, 590 liters of RP1 and 1095 liters of LOX. (See below for how I got there.) Instead, I get this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/FHBnfzJ.png\u0022 alt=\u0022FHBnfzJ.png\u0022\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that this is exactly the same as the first example, only with the \u003Cem\u003Etiny\u003C/em\u003E leftover space (left out by rounding off) filled with hydrazine. Which isn\u0027t right at all. Again, if I go into the UI, remove all tanks, \u003Cem\u003Emanually\u003C/em\u003E create a 100-liter hydrazine tank, then tell it to auto-configure for an RP1/LOX engine, I get the right result:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/BwUwskm.png\u0022 alt=\u0022BwUwskm.png\u0022\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EJust to confirm things, I then edited the config file to move the hydrazine entry to the top, like so:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Hydrazine-RP1-LOX\u003Cbr\u003E\u003Cbr\u003ETANK_DEFINITION\u003Cbr\u003E{\u003Cbr\u003E\tname = CommonBulkheadStandard\u003Cbr\u003E\tbasemass = 0.000108649774484067 * volume\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Hydrazine\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\tamount = 100.0 // liters\u003Cbr\u003E\t\tmaxAmount = 100.0 // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LH2\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\ttemperature = -253.8\u003Cbr\u003E\t\tloss_rate = 0.0000000000422720017314612 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t\tamount = 0.0 // liters\u003Cbr\u003E\t\tmaxAmount = 0.0 // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = RP1\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\tamount = 0.35 * volume // liters\u003Cbr\u003E\t\tmaxAmount = 0.35 * volume // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LOX\u003Cbr\u003E\t\tfillable = true\u003Cbr\u003E\t\tefficiency = 0.85 // common bulkhead\u003Cbr\u003E\t\tmass = 0.0\u003Cbr\u003E\t\ttemperature = -184\u003Cbr\u003E\t\tloss_rate = 0.0000000000567356572258533 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t\tamount = 0.65 * volume // liters\u003Cbr\u003E\t\tmaxAmount = 0.65 * volume // liters\u003Cbr\u003E\t\tnote = \u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAgain, I got the wrong answer in the VAB.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:center;\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/oTuBz4i.png\u0022 alt=\u0022oTuBz4i.png\u0022\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe 100 liters of hydrazine is right, obviously. But the other two are both wrong, and I haven\u0027t figured out how the plugin got them.\u003C/p\u003E\u003Cp\u003ESo there\u0027s the bug-report part of this: The plugin is assembling tanks incorrectly. If you use both proportional tanks (\u0022## * volume\u0022) and efficiencies of less than 1, the plugin does the math wrong.\u003C/p\u003E\u003Cp\u003EMy workaround is to leave all maxAmounts in the tank definition set to zero, then build my tanks manually in the VAB. This gives me the right answers always; the auto-configure button has never failed me so far. But it\u0027s an extra step for every single tank on every single spacecraft, and that\u0027s annoying. It works, it doesn\u0027t stop me using your (super-awesome) mod, but it\u0027s annoying.\u003C/p\u003E\u003Cp\u003EHere\u0027s the feature-request part. In messing around with this, it occurred to me that the way tank definitions work could be changed to make it all much simpler. Now, I\u0027m about to propose a \u003Cem\u003Ebig\u003C/em\u003E change, one that breaks compatibility, so I won\u0027t be offended if you laugh and walk away at this point.\u003C/p\u003E\u003Cp\u003EThe tank definition syntax could look like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ETANK_DEFINITION\u003Cbr\u003E{\u003Cbr\u003E\tname = CommonBulkheadStandard\u003Cbr\u003E\tbasemass = 0.000108649774484067 * volume\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tresourceName = Hydrazine\u003Cbr\u003E\t\tutilization = 0.85 // common bulkhead\u003Cbr\u003E\t\ttype = fixed\u003Cbr\u003E\t\tmaxAmount = 100.0 // liters\u003Cbr\u003E\t\tamount = 100.0 // liters\u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tresourceName = LOX\u003Cbr\u003E\t\tutilization = 0.80 // common bulkhead, insulated\u003Cbr\u003E\t\ttype = proportional\u003Cbr\u003E\t\tmaxAmount = 0.65 // 65% of the remaining usable volume\u003Cbr\u003E\t\tamount = 1.0 // this tank starts out 100% full\u003Cbr\u003E\t\ttemperature = -184\u003Cbr\u003E\t\tloss_rate = 0.0000000000567356572258533 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E1. Change \u0022name\u0022 to \u0022resourceName\u0022 for consistency.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThis confused me at first. The name parameter to the TANK_DEFINITION node can be anything you want, but the name parameter under the TANK node must match a resource name. The stock modules tend to use resourceName for this, so I suggest it be changed.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E2. Change \u0022efficiency\u0022 to \u0022utilization\u0022 for clarity.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThis one might only make sense to me. In the literature (aw haw haw haw, how good of you to come for tea Lord Wobblypants) there\u0027s consistent talk of utilization fractions of propellant tanks, given as a percentage. You could adopt the same vocabulary if you wanted. I think it\u0027d be a little clearer, but it might only be clearer to me.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E3. Give tanks a \u0022type\u0022 that\u0027s either \u0022fixed\u0022 or \u0022proportional.\u0022\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m not married to the terms, obviously. The idea is that either a tank is defined to have a \u003Cem\u003Especific number of volumetric units\u003C/em\u003E of the resource in it (both maxAmount and amount), or it\u0027s defined in a proportional way, such that maxAmount is the fraction of the tank\u0027s usable volume and amount is the fraction of the tank\u0027s capacity.\u003C/p\u003E\u003Cp\u003EHow\u0027s this work in practice? Lemme walk you through a kinda complex example.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ETANK_DEFINITION\u003Cbr\u003E{\u003Cbr\u003E\tname = ServiceModule\u003Cbr\u003E\tbasemass = 0.000108649774484067 * volume\u003Cbr\u003E\u003Cbr\u003E\t// Oxygen supply, for use with IonCross\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tresourceName = CompressedOxygen\u003Cbr\u003E\t\tutilization = 0.90\u003Cbr\u003E\t\ttype = fixed\u003Cbr\u003E\t\tmaxAmount = 10.0 // liters\u003Cbr\u003E\t\tamount = 10.0 // liters\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t// Waste CO\u00C3\u00A2\u00E2\u20AC\u0161\u00E2\u20AC\u0161, again for IonCross\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tresourceName = CarbonDioxide\u003Cbr\u003E\t\tutilization = 0.90\u003Cbr\u003E\t\ttype = fixed\u003Cbr\u003E\t\tmaxAmount = 1.0 // liters\u003Cbr\u003E\t\tamount = 0.0 // liters\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t// RCS monopropellant\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tresourceName = Hydrazine\u003Cbr\u003E\t\tutilization = 0.85 // common bulkhead\u003Cbr\u003E\t\ttype = fixed\u003Cbr\u003E\t\tmaxAmount = 200.0 // liters\u003Cbr\u003E\t\tamount = 200.0 // liters\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t// Bipropellants for the main SPS engine\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tresourceName = RP1\u003Cbr\u003E\t\tutilization = 0.85 // common bulkhead\u003Cbr\u003E\t\ttype = proportional\u003Cbr\u003E\t\tmaxAmount = 0.35 // 35% of the remaining usable volume\u003Cbr\u003E\t\tamount = 1.0 // this tank starts out 100% full\u003Cbr\u003E\t}\u003Cbr\u003E\tTANK\u003Cbr\u003E\t{\u003Cbr\u003E\t\tresourceName = LOX\u003Cbr\u003E\t\tutilization = 0.80 // common bulkhead, insulated\u003Cbr\u003E\t\ttype = proportional\u003Cbr\u003E\t\tmaxAmount = 0.65 // 65% of the remaining usable volume\u003Cbr\u003E\t\tamount = 1.0 // this tank starts out 100% full\u003Cbr\u003E\t\ttemperature = -184\u003Cbr\u003E\t\tloss_rate = 0.0000000000567356572258533 // 0.1% per day at 20\u00C3\u201A\u00C2\u00B0C\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is a notional tank definition file for an Apollo-esque service module. It\u0027s got life support tanks (assuming you\u0027re using IonCross, \u0027cause really, who isn\u0027t?) and a monopropellant tank, both of which have fixed volumes. The rest of the usable volume is divided up into 35% RP1 and 65% LOX for the SPS engine. That\u0027s the contrived example.\u003C/p\u003E\u003Cp\u003ETo parse this, start by setting the tank\u0027s remaining usable volume to its total volume, obviously. In this example, I\u0027m gonna say that\u0027s 3000 liters, just to pick a round number.\u003C/p\u003E\u003Cp\u003ENow iterate over the \u0022TANK\u0022 nodes. For each one of type \u0022fixed,\u0022 divide the maxAmount by the utilization and subtract that from the remaining usable volume. In pseudocode:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EremainingVolume = volume\u003Cbr\u003Eforeach tank {\u003Cbr\u003E\tif tank is fixed {\u003Cbr\u003E\t\tremainingVolume -= tank.maxAmount / tank.utilization\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EJust to walk through that, in this case we\u0027d start out with a volume of 3000 liters, then subtract 10.0 \u00C3\u0192\u00C2\u00B7 0.9 from it (2988.8), then subtract 1.0 \u00C3\u0192\u00C2\u00B7 0.9 (2987.7), then subtract 200.0 \u00C3\u0192\u00C2\u00B7 0.85, leaving us with about 2752.5 of remaining volume.\u003C/p\u003E\u003Cp\u003EThen we iterate again, looking this time at the proportional tanks. For each one, take the remaining usable volume, multiply it by the amount (which is a fraction less than or equal to one), then multiply by the utilization.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eforeach tank {\u003Cbr\u003E\tif tank is proportional {\u003Cbr\u003E\t\ttank.maxAmount = remainingVolume * tank.maxAmount * tank.utilization\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHere we have two proportional tanks, RP1 and LOX. For RP1, that\u0027d be 2752.5 liters \u00C3\u0192\u00E2\u20AC\u201D 0.35 \u00C3\u0192\u00E2\u20AC\u201D 0.85, or about 818.9 liters. For LOX, it\u0027s 2752.5 liters \u00C3\u0192\u00E2\u20AC\u201D 0.65 \u00C3\u0192\u00E2\u20AC\u201D 0.80, or 1431.3 liters.\u003C/p\u003E\u003Cp\u003EIf we add it all up to check our work, we have the 10 liters of O\u00C3\u00A2\u00E2\u20AC\u0161\u00E2\u20AC\u0161, the liter of CO\u00C3\u00A2\u00E2\u20AC\u0161\u00E2\u20AC\u0161, 200 liters of hydrazine, 818.9 liters of RP1 and 1431.3 liters of LOX, all of which come to a total of 2461.2 liters, giving us an \u003Cem\u003Eoverall\u003C/em\u003E utilization fraction of 82.04%, which is right on the money.\u003C/p\u003E\u003Cp\u003ENow, just to reiterate, \u003Cem\u003Ethis is only a suggestion.\u003C/em\u003E I think this would be an easy-to-use, (relatively) easy-to-code and pretty darned flexible system for allocating tank volume. It wouldn\u0027t be \u003Cem\u003Eway\u003C/em\u003E better than what you have now, but I think it\u0027d be better, and if I\u0027m suggesting you need to open up the patient anyway, \u0027cause of my aforementioned bug, then I think changes along these lines might be worth considering.\u003C/p\u003E\u003Cp\u003EBottom line, though? Spectacular mod, as always, and thanks very much for it.\u003C/p\u003E\n"},{"CreatedByName":"nsnipe","CreatedById":34699,"CreatedDateTime":"2013-06-21T17:15:32Z","Content":"\n\u003Cp\u003EI notice that pressing Configure Remaining volume for engines button several times fills tanks completely until there is no space for other fuel.\u003C/p\u003E\n"},{"CreatedByName":"8749236","CreatedById":27470,"CreatedDateTime":"2013-06-22T01:59:34Z","Content":"\n\u003Cp\u003EHelp!\u003C/p\u003E\u003Cp\u003EWhen I apply this mod to my game, My game freezes when loading into game..\u003C/p\u003E\u003Cp\u003EIf I remove it, game works fine...\u003C/p\u003E\u003Cp\u003EMods I have:\u003C/p\u003E\u003Cp\u003ERemoteTech\u003C/p\u003E\u003Cp\u003EKethane 5.1\u003C/p\u003E\u003Cp\u003EDummyWeight\u003C/p\u003E\u003Cp\u003EMechJeb2.0\u003C/p\u003E\n"}]}