{"TopicId":125693,"ForumId":29,"TopicTitle":"How to manipulate action groups in the editor?","CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2015-11-17T02:49:06Z","PageNum":1,"Articles":[{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2015-11-17T02:49:06Z","Content":"\nA user in the editor can assign a particular action for a part to a particular action group for the vessel. For example, \u0022take this solar panel and assign it to action group Custom1\u0022.\u003Cbr\u003E\n\u003Cbr\u003E\nHow can I do essentially the same thing via code?\u003Cbr\u003E\n\u003Cbr\u003E\nContext: I know my way around coding, C#, Visual Studio, etc., but I\u0026#39;m new to KSP modding. I\u0026#39;ve been tinkering around and I\u0026#39;ve figured out how to trap editor events. I can write code so that every time a new part is created in the editor, my function gets called. What I\u0026#39;d like to do at that point is tinker with the part so that I can assign a certain action from the part to a certain action group.\u003Cbr\u003E\n\u003Cbr\u003E\nI can see the parts, the modules, on them, etc. But I\u0026#39;m darned if I can figure out how to do the above. I\u0026#39;ve been going round in circles looking at Part, PartModule, BaseActionList, BaseAction, but haven\u0026#39;t been able to find how to get at this functionality. Hunting through this forum, I find various references to action groups, but they\u0026#39;re usually people who want to [I][U]activate[/U][/I] them programmatically. I\u0026#39;m not trying to do that, I want to tinker with them in the VAB.\u003Cbr\u003E\n\u003Cbr\u003E\nDoes anyone have any advice?\u003Cbr\u003E\n\u003Cbr\u003E\nOn a side note: The source of input info I\u0026#39;ve been working with is F12 in Visual Studio ;) plus the documentation available here: [url]http://anatid.github.io/XML-Documentation-for-the-KSP-API/annotated.html[/url] ...if anyone would like to suggest any additional sources of documentation / tutorials / etc. I\u0026#39;d love to hear it. :)\u003Cbr\u003E\n\u003Cbr\u003E\nThanks for any help!\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-11-17T19:11:37Z","Content":"\nOuch, welcome to the [i]fun times.[/i]\u003Cbr\u003E\n\u003Cbr\u003E\n/sarcasm mode off\u003Cbr\u003E\n\u003Cbr\u003E\nI\u0026#39;ve gone through all this for my Action Groups Extended mod and it\u0026#39;s not pretty unfortunately.\u003Cbr\u003E\n\u003Cbr\u003E\nFirst, if you are making a new action, you can flag the action as part of the KSPAction attribute to automatically add itself to an action group. This is how brakes and lights automatically add themselves to those groups. If this works for you, you can avoid messing around in code.\u003Cbr\u003E\n\u003Cbr\u003E\nIf that doesn\u0026#39;t work for you and you still need to do it in code, things get interesting.\u003Cbr\u003E\n\u003Cbr\u003E\nThe action groups an action are assigned to is stored in the BaseAction.actionGroup enum. As this enum is used as multiple independent values, you have to use bitwise operations to set/unset values.\u003Cbr\u003E\n\u003Cbr\u003E\nIE: If the action is currently assigned to group 1 and you do this: BaseAction.actionGroup = KSPActionGroup.Custom02; then the assignment to group 1 is lost because this command sets all assignments to false, except what is listed (group 2).\u003Cbr\u003E\n\u003Cbr\u003E\nInstead, you have to do: BaseAction.actionsGroup = BaseAction.actionGroup | KSPActionGroup.Custom02; as a bitwise operation so that only the Custom02 bit is changed, the other enum values keep their values this way.\u003Cbr\u003E\n\u003Cbr\u003E\nThen use: BaseAction.actionGroup = BaseAction.actionGroup \u0026 ~KSPActionGroup.Custom02; to unassign an action.\u003Cbr\u003E\n\u003Cbr\u003E\nYou can shortcut unassigning all actions though, BaseAction.actionGroup = KSPActionGroup.None; will unassign the action from all groups.\u003Cbr\u003E\n\u003Cbr\u003E\nHope that helps,\u003Cbr\u003E\n\u003Cbr\u003E\nD.\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-17T20:39:22Z\u0022 title=\u002211/17/2015 08:39  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 17, 2015\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2015-11-17T20:53:20Z","Content":"\nThank you!\u003Cbr\u003E\n\u003Cbr\u003E\n[quote name=\u0027Diazo\u0027]Ouch, welcome to the [I]fun times.[/I]\u003Cbr\u003E\n\u003Cbr\u003E\n/sarcasm mode off[/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nYeah, I went round in circles on this for a while before I posted here. :)\u003Cbr\u003E\n\u003Cbr\u003E\n\u003Cbr\u003E\n[quote name=\u0027Diazo\u0027]I\u0026#39;ve gone through all this for my Action Groups Extended mod and it\u0026#39;s not pretty unfortunately.[/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nHeh, I was kinda wondering whether you\u0026#39;d be the one to respond... when I go hunting for working examples of code that works with action groups, you\u0026#39;re pretty much the only name that comes up...\u003Cbr\u003E\n\u003Cbr\u003E\n\u003Cbr\u003E\n[quote name=\u0027Diazo\u0027]First, if you are making a new action, you can flag the action as part of the KSPAction attribute to automatically add itself to an action group. This is how brakes and lights automatically add themselves to those groups. If this works for you, you can avoid messing around in code.[/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nI saw that, but that\u0026#39;s not what I want to do. I\u0026#39;m not introducing any new actions. I have existing stock parts that have their own existing actions. In the editor, I want to be able to say \u0022Take [I][U]this[/U][/I] standard action on [I][U]this[/U][/I] part and assign it to [I][U]that[/U][/I] action group.\u0022\u003Cbr\u003E\n\u003Cbr\u003E\n[quote name=\u0027Diazo\u0027]The action groups an action are assigned to is stored in the BaseAction.actionGroup enum. As this enum is used as multiple independent values, you have to use bitwise operations to set/unset values.\u003Cbr\u003E\n\u003Cbr\u003E\nIE: If the action is currently assigned to group 1 and you do this: BaseAction.actionGroup = KSPActionGroup.Custom02; then the assignment to group 1 is lost because this command sets all assignments to false, except what is listed (group 2).\u003Cbr\u003E\n\u003Cbr\u003E\nInstead, you have to do: ...[/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nYeah, I figured that much out on my own as soon as I saw the \u0022flags\u0022 attribute on the KSPActionGroup enum-- I\u0026#39;m a software engineer, I\u0026#39;m comfortable with bitwise operations, and I\u0026#39;ve got a few years of C# under my belt.\u003Cbr\u003E\n\u003Cbr\u003E\nNo, my problem is actually dumber than that. :)\u003Cbr\u003E\n\u003Cbr\u003E\nHow do I:\u003Cbr\u003E\n\u003Cbr\u003E\n[LIST]\u003Cbr\u003E\n[*]Find out what action groups a given action on a given part is currently assigned to?\u003Cbr\u003E\n[*]Tell it to assign it to a particular action group?\u003Cbr\u003E\n[/LIST]\u003Cbr\u003E\n\u003Cbr\u003E\nI went round and round with debug-log messages in the editor on this. For example, let\u0026#39;s say I\u0026#39;m in the editor and I add a Mk1 spotlight to my ship. It gets put in the \u0022Lights\u0022 action group, right? So let\u0026#39;s say I trap the editor event when the part is created (i.e. when I click on the button in the parts tab), and tell it to iterate through part.Actions to see all the actions. I\u0026#39;d expect to see the \u0022Lights\u0022 action for it, right?\u003Cbr\u003E\n\u003Cbr\u003E\nExcept that I don\u0026#39;t see anything. Its part.Actions is empty.\u003Cbr\u003E\n\u003Cbr\u003E\nMaybe \u0022create\u0022 is too soon and I have to wait until I attach it to the ship? So I tried trapping that event and checking the actions then, too. Still no dice. Empty list. I\u0026#39;m sitting there in the editor, if I bring up the action groups UI I can see that the part is in the Lights group, but I can\u0026#39;t seem to find that information programmatically anywhere.\u003Cbr\u003E\n\u003Cbr\u003E\nIs there something simple and stupid that I\u0026#39;m missing?\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-17T20:59:31Z\u0022 title=\u002211/17/2015 08:59  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 17, 2015\u003C/time\u003E by Snark\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-11-17T21:24:47Z","Content":"\nHeh, I do seem to have made something of a study on how actions work in KSP.\u003Cbr\u003E\n\u003Cbr\u003E\n[quote name=\u0027Snark\u0027]\u003Cbr\u003E\nExcept that I don\u0026#39;t see anything. Its part.Actions is empty.[/quote]\u003Cbr\u003E\n\u003Cbr\u003E\nI think this is the largest source of confusion, parts don\u0026#39;t have actions, partModules have actions.\u003Cbr\u003E\n\u003Cbr\u003E\nSo the lights action you are looking for lives in ModuleLightsPartModule.Actions\u003Cbr\u003E\n\u003Cbr\u003E\nPartModule.Actions being a list of BaseActions, then you use the name so ModuleLights.Actions[\u0022ActionName\u0022] returns the BaseAction obejct that is the lights action. You\u0026#39;ll have to list all actions on the partModule to the log to get the names, Squad is unfortunately inconsistent with their naming. A toggle action will probably be called \u0022Toggle\u0022 or at least have toggle in its name though, I know the ModuleDeployableSolarPanel toggle action is named \u0022Toggle Panel\u0022.\u003Cbr\u003E\n\u003Cbr\u003E\nThis means to get all actions on a part, you have to .AddRange each partModule\u0026#39;s .Actions list into one big list of your own. For completions sake I also add the part.Actions list, but I\u0026#39;m not aware of any part in the game with actions attached to it, as so:\u003Cbr\u003E\n[code]\u003Cbr\u003E\nPart p = //part reference you establish in code.\u003Cbr\u003E\nList\u0026lt;BaseAction\u0026gt; allActionsOnPart = new List\u0026lt;BaseAction\u0026gt;();\u003Cbr\u003E\nallActionsOnPart.AddRange(p.Actions);\u003Cbr\u003E\nforeach(PartModule pm in p.Modules)\u003Cbr\u003E\n{\u003Cbr\u003E\nallActionsOnPart.AddRange(pm.Actions);\u003Cbr\u003E\n}\u003Cbr\u003E\n//allActionsOnPart now contains all actions on the part in one place and you can work with them.[/code]\u003Cbr\u003E\n\u003Cbr\u003E\n\u003Cbr\u003E\n\u003Cbr\u003E\n[quote]\u003Cbr\u003E\n[LIST]\u003Cbr\u003E\n[*]Tell it to assign it to a particular action group?\u003Cbr\u003E\n[/LIST]\u003Cbr\u003E\n[/quote]\u003Cbr\u003E\n\u003Cbr\u003E\nThis was in my previous post, once you have a BaseAction reference: BaseAction.actionsGroup = BaseAction.actionGroup | KSPActionGroup.Custom02; will assign it to Custom Actiongroup 2.\u003Cbr\u003E\n\u003Cbr\u003E\n[quote]\u003Cbr\u003E\n[LIST]\u003Cbr\u003E\n[*]Find out what action groups a given action on a given part is currently assigned to?\u003Cbr\u003E\n[/LIST]\u003Cbr\u003E\n[/quote]\u003Cbr\u003E\n\u003Cbr\u003E\nThis one was tricky, I [i]think[/i] the following works:\u003Cbr\u003E\n\u003Cbr\u003E\n[code]\u003Cbr\u003E\nif (KSPActionGroup.Custom01 == (BaseAction.ActionGroup ^ KSPActionGroup.Custom01))\u003Cbr\u003E\n{\u003Cbr\u003E\n//run code here if Custom1 is assigned to the action, IF statement above returns false if it isn;t.\u003Cbr\u003E\n}\u003Cbr\u003E\n[/code]\u003Cbr\u003E\n\u003Cbr\u003E\nI do use the code above for checking a group\u0026#39;s state myself, but in stripping out my own references I\u0026#39;m not 100% confident I kept the bitwise syntax intact so do be sure to test it.\u003Cbr\u003E\n\u003Cbr\u003E\nHope that helps,\u003Cbr\u003E\n\u003Cbr\u003E\nD.\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-17T21:34:32Z\u0022 title=\u002211/17/2015 09:34  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 17, 2015\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2015-11-18T04:42:12Z","Content":"\n[quote name=\u0027Diazo\u0027]I think this is the largest source of confusion, parts don\u0026#39;t have actions, partModules have actions.[/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nThat was the secret sauce I was missing. All the bitwise manipulations of the enums I can handle in my sleep, that sort of thing has been my bread and butter for years. It\u0026#39;s the fact that [I]actions live on the modules[/I] that was throwing me. That, and I also got a wire crossed in my head and was thinking of BaseAction as a by-value thing rather than a by-reference thing (i.e. thinking \u0022I need to add a new BaseAction object\u0022 rather than \u0022I need to find the existing BaseAction and modify it\u0022).\u003Cbr\u003E\n\u003Cbr\u003E\nThat\u0026#39;s all I needed to get unwedged. I\u0026#39;m now discovering all sorts of interesting things about editor event logic, such as:\u003Cbr\u003E\n\u003Cbr\u003E\n[LIST]\u003Cbr\u003E\n[*]you don\u0026#39;t get a \u0022created\u0022 event when you copy a part; that\u0026#39;s a \u0022copy\u0022 event [I][U]instead of[/U][/I] \u0022created\u0022 \u003Cbr\u003E\n[*]you don\u0026#39;t get \u0022created\u0022 or \u0022copied\u0022 events for all the symmetry counterparts when you add a symmetry group; you have to wait for the \u0022attached\u0022 event \u003Cbr\u003E\n[*]...and only the object you\u0026#39;re actually attaching gets an \u0022attached\u0022 event. Not any of its children. Not any of its symmetry counterparts. \u003Cbr\u003E\n[/LIST]\u003Cbr\u003E\n\u003Cbr\u003E\nSo I\u0026#39;ve been able to figure out how to work around all those things, but just discovering the hard way that I [I][U]need[/U][/I] to work around them has been a long but highly educational voyage of discovery.\u003Cbr\u003E\n\u003Cbr\u003E\nAnyway, I\u0026#39;m now pretty close to putting the finishing touches on my next mod. Thank you for the excellent help, it was just what I needed!\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-11-18T05:06:14Z","Content":"\nGood to hear you seem to have figured it out.\u003Cbr\u003E\n\u003Cbr\u003E\n[quote name=\u0027Snark\u0027][LIST]\u003Cbr\u003E\n[*]you don\u0026#39;t get \u0022created\u0022 or \u0022copied\u0022 events for all the symmetry counterparts when you add a symmetry group; you have to wait for the \u0022attached\u0022 event \u003Cbr\u003E\n[/LIST][/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nIf you find a graceful solution to this please let me know. My workaround was to save the part reference, start a delay timer and then run the code I needed to on the symmetry counterparts once the timer had expired. Works, but it feels like a very hacky way to do things.\u003Cbr\u003E\n\u003Cbr\u003E\nD.\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2015-11-18T17:49:40Z","Content":"\n[quote name=\u0027Diazo\u0027]Good to hear you seem to have figured it out.\u003Cbr\u003E\n\u003Cbr\u003E\nIf you find a graceful solution to this please let me know. My workaround was to save the part reference, start a delay timer and then run the code I needed to on the symmetry counterparts once the timer had expired. Works, but it feels like a very hacky way to do things.[/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nGot it all worked out, and the [URL=\u0022http://forum.kerbalspaceprogram.com/threads/139920\u0022]mod is posted[/URL]. :) Thanks again for all the help!\u003Cbr\u003E\n\u003Cbr\u003E\nI started by just wanting \u0022make it so that cockpit lights are added to the Light action group by default\u0022, and ended up making the mod more general than that, so that it\u0026#39;s possible for anyone to write a snippet of ModuleManager config to put any action from any part into whatever default action group they want.\u003Cbr\u003E\n\u003Cbr\u003E\nThe logic I finally settled on to \u0022handle each new part when it\u0026#39;s added\u0022 was:\u003Cbr\u003E\n[LIST]\u003Cbr\u003E\n[*]Handle \u0022on create\u0022 event (this is needed for the initial root part that\u0026#39;s placed in the editor) \u003Cbr\u003E\n[*]Handle \u0022on attach\u0022 event. In this event, handle the part itself, and recurse through all of its children. Also iterate through all of the part\u0026#39;s symmetry counterparts and recurse through [I]their[/I] children. \u003Cbr\u003E\n[/LIST]\u003Cbr\u003E\n\u003Cbr\u003E\nThat got me what I wanted.\u003Cbr\u003E\n\u003Cbr\u003E\nIt has a wart, in that if you move a part after placing it, the logic gets executed a second time. For example, using my mod: you place a cockpit part, it gets its \u0022toggle lights\u0022 action added to the Light action group. You decide you don\u0026#39;t like that, you go and manually remove that action group assignment. Then you move the part and re-attach it. The wart is that it will get re-added. That bothered me, and I was about to start tearing my hair out to figure out how to work around it, but then on a whim I tested the behavior of a stock Mk1 spotlight and it did the same thing! So I guess I\u0026#39;m off the hook, I don\u0026#39;t feel the need to be smarter than stock in this regard. ;)\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-11-18T17:54:34Z","Content":"\n[quote name=\u0027Snark\u0027]The logic I finally settled on to \u0022handle each new part when it\u0026#39;s added\u0022 was:\u003Cbr\u003E\n[LIST]\u003Cbr\u003E\n[*]Handle \u0022on attach\u0022 event. In this event, handle the part itself, and recurse through all of its children. Also iterate through all of the part\u0026#39;s symmetry counterparts and recurse through [I]their[/I] children. \u003Cbr\u003E\n[/LIST]\u003Cbr\u003E\n\u003Cbr\u003E\nThat got me what I wanted.\u003Cbr\u003E\n[/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nYou actually got this to work?\u003Cbr\u003E\n\u003Cbr\u003E\nWhen I tried that, i found that the .symmetryCounterparts field was empty on the Update() frame that the .onEditorPartAttach event fired, it wasn\u0026#39;t until the next Update() frame that .symmetryCounterparts was populated. Hence my hack with the timer above.\u003Cbr\u003E\n\u003Cbr\u003E\nThis was KSP 0.90 or so though, maybe the behavior\u0026#39;s changed.\u003Cbr\u003E\n\u003Cbr\u003E\nedit: [url=https://github.com/KSPSnark/DefaultActionGroups/blob/master/src/DefaultActionGroupBehaviour.cs#L43]This bit here always returned empty unless I delayed by one Update() frame.[/url]\u003Cbr\u003E\n\u003Cbr\u003E\n[quote]It has a wart, in that if you move a part after placing it, the logic gets executed a second time. For example, using my mod: you place a cockpit part, it gets its \u0022toggle lights\u0022 action added to the Light action group. You decide you don\u0026#39;t like that, you go and manually remove that action group assignment. Then you move the part and re-attach it. The wart is that it will get re-added. That bothered me, and I was about to start tearing my hair out to figure out how to work around it, but then on a whim I tested the behavior of a stock Mk1 spotlight and it did the same thing! So I guess I\u0026#39;m off the hook, I don\u0026#39;t feel the need to be smarter than stock in this regard.[/quote]\u003Cbr\u003E\n\u003Cbr\u003E\nThis is a quirk of how the editor actually deletes a part when you remove it from the vessel and makes a new part when you reattach it. (KSPFields may retain their values but not sure, nothing else does.) Even when the part\u0026#39;s \u0026#39;ghost\u0026#39; is attached to your mouse cursor, that isn\u0026#39;t an actual part you can interact with. (Well, it might be, but it\u0026#39;s not the part that gets attached to the vessel as that is created new when you click the mouse button to attach it.)\u003Cbr\u003E\n\u003Cbr\u003E\nD.\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-18T17:59:00Z\u0022 title=\u002211/18/2015 05:59  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 18, 2015\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Snark","CreatedById":125662,"CreatedDateTime":"2015-11-18T20:29:49Z","Content":"\n[quote name=\u0027Diazo\u0027]You actually got this to work?\u003Cbr\u003E\n\u003Cbr\u003E\nWhen I tried that, i found that the .symmetryCounterparts field was empty on the Update() frame that the .onEditorPartAttach event fired, it wasn\u0026#39;t until the next Update() frame that .symmetryCounterparts was populated. Hence my hack with the timer above.[/QUOTE]\u003Cbr\u003E\n\u003Cbr\u003E\nI\u0026#39;m not using onEditorPartAttached, I\u0026#39;m using onEditorPartEvent with a ConstructionEventType of partAttached. That seems to work.\u003Cbr\u003E\n\u003Cbr\u003E\n([URL=\u0022https://github.com/KSPSnark/DefaultActionGroups/blob/master/src/DefaultActionGroupBehaviour.cs\u0022]source code[/URL])\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-11-18T20:49:36Z","Content":"\nHmm, must be a timing thing.\u003Cbr\u003E\n\u003Cbr\u003E\nSomething like OnEditorPartAttached firing immediately after attaching the part, so before the symmetry counterparts are created, but OnEditorPartEvent fires later (at the end up the update frame?) so symmetryCounterparts is populated by that time.\u003Cbr\u003E\n\u003Cbr\u003E\nInteresting factoid I\u0026#39;ll have to keep in mind for future, no plans to go back and rewrite my code that is working.\u003Cbr\u003E\n\u003Cbr\u003E\nD.\n"}]}