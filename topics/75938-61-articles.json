{"TopicId":75938,"ForumId":36,"TopicTitle":"[1.0.x] [V1.9f] Kerbal Foundries wheels, anti-grav repulsors and tracks","CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-25T17:24:04Z","PageNum":61,"Articles":[{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2014-11-15T02:35:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EJoin the dark side. It is your destiny... Ahem.\u003Cp\u003EI have another model for the APU, I just keep forgetting to update it...\u003C/p\u003E\u003Cp\u003EI\u0027ll need to add something into the plugin to be used as a TS exponent - will try and get to that soon. Setting up TS configs would be much appreciated \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGotcha. I assumed (don\u0027t really understand the DLL though obviously) that if I had the name of the variable used to determine strength of a repulsor, or the height, for example, I could already write a TS thing as-is... But I gather that\u0027s not how it works! =(\u003C/p\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2014-11-15T03:02:49Z","Content":"\n\u003Cp\u003EAlso wanted to share what may be an unusual behavior with the tracks. They are scaled up, however, so I don\u0027t know if that\u0027s the cause. They cause a vehicle to very suddenly stop and turn if you\u0027re moving forward at moderate speed and suddenly steer. I\u0027ve made a video (sorry it\u0027s a bit crappy, first I\u0027ve ever made!) to show what I mean:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://dl.dropboxusercontent.com/u/59567837/TracksTurning.mp4\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dl.dropboxusercontent.com/u/59567837/TracksTurning.mp4\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENo embed, sorry, but it\u0027s around 1MB so isn\u0027t huge to DL.\u003C/p\u003E\n"},{"CreatedByName":"oniontrain","CreatedById":2465,"CreatedDateTime":"2014-11-15T03:47:30Z","Content":"\n\u003Cp\u003ELo-fi, your inbox is full and I got some questions, send me a PM when you get the chance.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-15T09:04:50Z","Content":"\n\u003Cp\u003EInbox cleared.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure if I need one or more extra variables yet, and I\u0027d hate to have you go through loads of work to then turn around and give you different info. I\u0027ll get back to you shortly..\u003C/p\u003E\u003Cp\u003EReally not sure what\u0027s going on with the trip, would be interesting if you get the same thing not scaled. If definitely looks like a collider catching on the floor, but you\u0027re on flat ground and they\u0027re carefully designed for that not to happen. I certainly can\u0027t think of anything in the plugin which would cause that kind of behaviour. Is it always in the same place?\u003C/p\u003E\u003Cp\u003EYou could try setting breakingTorque and breakingForce on the tracks quite low, which will result in the offending article being ripped from the vehicle if it is non wheel collider contact with the ground that\u0027s causing the problem, which would tell us something.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-15T12:33:27Z","Content":"\n\u003Cp\u003EBah! This TweakScale thing is a nightmare.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/brLfBZg.png\u0022 alt=\u0022brLfBZg.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EA little reading reveals this seems to be a known issue with symmetry that has yet to be fixed, but I didn\u0027t dig too deep. Tired, bored and moving on. There is now a public variable in KFWheel called suspensionCorrector, if anyone who has more experience wants to have a go.\u003C/p\u003E\u003Cp\u003EI\u0027ve been using: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = TweakScale\u003Cbr\u003E    type = free\u003Cbr\u003E    scaleFactors = 0.5, 1.0, 1.5\u003Cbr\u003E    scaleNames = Small, Medium, Large\u003Cbr\u003E    defaultScale = 1.0\u003Cbr\u003E\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = KFWheel\u003Cbr\u003E        suspensionCorrector = 0.5, 1.0, 1.5\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhich works sometimes, but TS seems to move my parts around in flight and not scale the symmetry counterparts correctly. Always fine going back into SPH, but there seems to be some kind of disconnect between SPH and flight :/\u003C/p\u003E\n"},{"CreatedByName":"MonaBabii","CreatedById":52027,"CreatedDateTime":"2014-11-15T15:52:22Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E\u002Blo-fi\u003C/strong\u003E Not sure if this will help for your parts specifically as it may be something else entirely, but I\u0027ve found that in order to get \u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003ETweakScale\u003C/strong\u003E\u003C/span\u003E to \u003Cstrong\u003Ework 100%\u003C/strong\u003E of the time on every part \u003Cstrong\u003Ewithout some symmetric parts being completely left out\u003C/strong\u003E, I do the following:\u003C/p\u003E\u003Cp\u003E1) Grab the part from the parts list with -1x- symmetry first (aka no symmetry).\u003C/p\u003E\u003Cp\u003E2) Place it on your craft anywhere you want, remember to place it without symmetry.\u003C/p\u003E\u003Cp\u003E3) re-take that part and apply symmetry, then put it back down.\u003C/p\u003E\u003Cp\u003E4) Finally tweak its scale.\u003C/p\u003E\u003Cp\u003ESame goes for people using \u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003EKerbPaint\u003C/strong\u003E\u003C/span\u003E and experiencing \u003Cstrong\u003Eissues when painting symmetrical things\u003C/strong\u003E... well not the same thing but there\u0027s also a \u003Cstrong\u003Equick-ish work-around\u003C/strong\u003E for a similar issue. Let\u0027s say you\u0027re painting a pair of symmetric wings on a plane:\u003C/p\u003E\u003Cp\u003E1) Paint one wing however you want it; create your custom color, paint as many layers as you want (primary, secondary or tertiary). Doesn\u0027t matter which wing you pick first.\u003C/p\u003E\u003Cp\u003E2) Once the one wing is painted, re-open the KerbPaint window on that first painted wing and click \u0022copy set\u0022.\u003C/p\u003E\u003Cp\u003E3) Open the KerbPaint window on the \u003Cspan style=\u0022text-decoration:underline;\u0022\u003Esymmetric clone\u003C/span\u003E of that wing even though it will appear to be correctly painted at first.\u003C/p\u003E\u003Cp\u003E4) Click Paste Set once on any of the layers (primary, secondary or tertiary), and then select a second layer (say you first picked the primary color, now select the secondary or tertiary) and click Paste Set again.\u003C/p\u003E\u003Cp\u003EThat will successfully apply the entire color set of the first wing and ensure that your craft will be fully painted when in or out of the assembly buildings and safely saved.\u003C/p\u003E\u003Cp\u003EHope that helps \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-15T15:59:25Z\u0022 title=\u002211/15/2014 03:59  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 15, 2014\u003C/time\u003E by MonaBabii\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-15T17:08:09Z","Content":"\n\u003Cp\u003ECheers dude, that\u0027s really helpful. I\u0027ll drop into the TS thread and see what the latest is - I assume someone is working on it.\u003C/p\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2014-11-15T19:14:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = TweakScale\u003Cbr\u003E    type = free\u003Cbr\u003E    scaleFactors = 0.5, 1.0, 1.5\u003Cbr\u003E    scaleNames = Small, Medium, Large\u003Cbr\u003E    defaultScale = 1.0\u003Cbr\u003E\u003Cbr\u003E    [B]TWEAKSCALEEXPONENTS[/B]\u003Cbr\u003E    {\u003Cbr\u003E        name = KFWheel\u003Cbr\u003E        suspensionCorrector = 0.5, 1.0, 1.5\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhich works sometimes, but TS seems to move my parts around in flight and not scale the symmetry counterparts correctly. Always fine going back into SPH, but there seems to be some kind of disconnect between SPH and flight :/\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not exactly sure either, but I think that you need \u0022TWEAKSCALEEXPONENTS\u0022 and not another MODULE tag inside the TS module. I think if you go in ScaleExponents.cfg in the TS directory, too, you can define it globally like so:\u003C/p\u003E\u003Cp\u003ETWEAKSCALEEXPONENTS\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003Ename = KFWheel\u003C/p\u003E\u003Cp\u003EsuspensionCorrector = \u003Cstrong\u003E1\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EApplying the exponent of 1 should make it scale linearly - 2x scaled size, 2x the value for that, and it should work for any scale people want to come up with. Far better not to define it for individual scale values.\u003C/p\u003E\u003Cp\u003EEDIT: actually I have no idea if you have to put that in scaleexponents.cfg - you may be able to put that in any cfg anywhere so long as it is NOT inside another MODULE{}\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-15T19:16:13Z\u0022 title=\u002211/15/2014 07:16  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 15, 2014\u003C/time\u003E by AccidentalDisassembly\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2014-11-15T19:35:41Z","Content":"\n\u003Cp\u003EYou can define your own exponents in a separate config. That\u0027s the nice thing about these custom nodes, you can define them anywhere (inside or outside of a part, below a part in the same file, a completely separate file, an MM patch to insert them into the official file) it really doesn\u0027t matter at all, as long as the formatting is done correctly. For instance, if you look at IR they have some specific code for their use that makes use of a Tweakscale redistributable and they have their own exponent definition file, plus some separate exponent definitions in a few of the specific parts. These are sometimes defined as a separate node in the part config, and sometimes they are defined in the tweakscale node itself. I\u0027ve even seen two of them in one part file, one for generic exponents and one for a specific module.\u003C/p\u003E\u003Cp\u003EOn the other hand, there have been a lot of weird things to happen and it\u0027s a bit hard to track down if you do not have all of your tweakscale modules in a single MM patch, and your exponents in a separate config on the side. It might be a good idea to look into the ways that a plugin-writer can interface with tweakscale as well for your more complicated needs. Also worth noting is that Tweakscale is being actively developed. They recently updated it with compatibility for the FS fuel switching module.\u003C/p\u003E\u003Cp\u003EOn the topic of symmetry issues, I always find it a good practice to remove my symmetry one I am happy with the product and ready to launch with scaled or painted parts. I use \u0022PartWizard\u0022 to switch off, or optionally re-group, my symmetrical parts to ensure launch stability. I even took at 8x symmetrical arm-piece and separated it into two 4x symmetrical groups to aid in creating a probe out of the PunyProbe parts which had four prop engines and four monoprop engines staggered around the central core. The reason I had to use PartWizard to pull this off was that I was using a modified thrust plate adapter (tweakable node size/number/offset on a flat plate of tweakable size itself) to provide stack nodes to attach the arms to. In an 8-node configuration I had a node for each of my two sets of four engines. When placing different connections to those arm pieces, I was being forced to use 8x symmetry. After re-grouping them I could create the two sets separately while still, technically, arrayed in 8x symmetry. Normally, I would have had to rely solely on surface attachment do pull this off, which is sometimes unreliable.\u003C/p\u003E\u003Cp\u003EI may not be an ingenious pod-racer builder but I do have some mad skills with all these little tools and such.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EOkay, so I took a look at your config updates and I\u0027ve decided to write up some example configs for you.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003ENote: all of this can be defined in the same file, and even put into the part configs. I like to put them in separate files for modularity.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFirst is our scale type:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESCALETYPE\u003Cbr\u003E{\u003Cbr\u003E    name = KFWheel  //or whatever you feel like calling it.\u003Cbr\u003E    freeScale = false  //you can imitate free scaling by providing lots of specific scale options..\u003Cbr\u003E    scaleFactors = 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.25, 3.5, 3.75, 4, 4.25, 4.5, 4.75, 5, 5.25, 5.5, 7.5, 6\u003Cbr\u003E    minScale = 0.25  //minimum scale factor.\u003Cbr\u003E    maxScale = 6  //maximum scale factor.\u003Cbr\u003E    scaleNames = 0.25x, 0.5x, 0.75x, 1x, 1.25x, 1.5x, 1.75x, 2x, 2.25x, 2.5x, 2.75x, 3x, 3.25x, 3.5x, 3.75x, 4x, 4.25x, 4.5x, 4.75x, 5x, 5.25x, 5.5x, 7.5x, 6x\u003Cbr\u003E    defaultScale = 1\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EYeah, writing all those scale factors is a pain but at the least it\u0027s consistent between different parts. Free scale is limited by the size of the slider and the lack of configurable scale increment size. You could hit a spot where you get 1.14 scale factor with one part, but with another part you may have only 1.19 or 1.11 to select from due to the limited space and the limited pixels you can click on within the selection bar. With some experimentation, you might be able to expand on the tweakscale implementation to allow for a Procedural Fairings style incrementation slider which allows you to set a base incrementation for the arrow buttons, while still allowing use of the double-arrow buttons to increment a static amount, and then using the slider you can increment to the factor of 0.1 on the base scale incrementation setting. This allows for the ultimate in scale control without needing to find a way to make the context menu super huge or frustrate users with free scaling.\u003C/p\u003E\u003Cp\u003ENext is the Exponents section.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ETWEAKSCALEEXPONENTS\u003Cbr\u003E{\u003Cbr\u003E    name = KFWheel  //the name of the module being manipulated along with the scale module.\u003Cbr\u003E    \u0026lt;your parameter name here\u0026gt; = \u0026lt;your desired factor here\u0026gt;\u003Cbr\u003E    \u0026lt;etc.\u0026gt; = \u0026lt;etc.\u0026gt;\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is another way that exponents can be defined in the part itself, or the MM patch to plug it into the part:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = TweakScale\u003Cbr\u003E    type = IR_RoboticDocking\u003Cbr\u003E    TWEAKSCALEEXPONENTS\u003Cbr\u003E    {\u003Cbr\u003E        mass = 0.0125, 0.025, 0.05\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIn this example, the mass has three values which correspond with the first three scale factors defined in the scale type. This way specific exponential factors can be defined for fine tuning performance for a specific scale. I believe this can be done in the previous example as well.\u003C/p\u003E\u003Cp\u003EThen, finally is your own implementation for the part itself which comes in the simple form of:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = TweakScale\u003Cbr\u003E    type = KFwheel  //corresponding to your scale type\u003Cbr\u003E    defaultScale = 1  //for specific scale-settings that override the scale type.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EYou can override any values in the scale type, and even the exponents as shown in the IR example, by placing them in the module for the part. The most common is \u0022defaultScale\u0022 for parts that fall in line with traditional scaling factors for stack rocket parts. In the KF situation, it might be useful to set the really large wheels to default at scale 5 or something, since you\u0027d want to give users the flexibility of scaling those down a ton, but don\u0027t necessarily want to account for KSC-sized super-wheels when they are scaled from 1 to 6 where 1 is equal to their current size. I believe tweakscale scales all the other values that control scaling as if the default was actually at the value of 6, and doesn\u0027t simply scale the part to 6x upon being loaded. I have not confirmed this, but it seems to not do anything weird when I set up my own custom scale factors.\u003C/p\u003E\u003Cp\u003EHope this helps somebody out there. Also worth noting is that repulsors of both types seem to function out of the box with tweakscale, but you may want to look into any specific factors on their functionality you might want to tweak with their scale. Perhaps you could scale their max/minimum height range based on their scale, and energy usage as well. I believe that scale exponents can attach to anything that is definable in a part config, as long as you specify the module that it is manipulating.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-15T20:41:30Z\u0022 title=\u002211/15/2014 08:41  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 15, 2014\u003C/time\u003E by Gaalidas\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2014-11-15T20:18:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaalidas\u0022 data-cite=\u0022Gaalidas\u0022\u003E\u003Cdiv\u003EYou can define your own exponents in a separate config. That\u0027s the nice thing about these custom nodes, you can define them anywhere (inside or outside of a part, below a part in the same file, a completely separate file, an MM patch to insert them into the official file) it really doesn\u0027t matter at all, as long as the formatting is done correctly. For instance, if you look at IR they have some specific code for their use that makes use of a Tweakscale redistributable and they have their own exponent definition file, plus some separate exponent definitions in a few of the specific parts. These are sometimes defined as a separate node in the part config, and sometimes they are defined in the tweakscale node itself. I\u0027ve even seen two of them in one part file, one for generic exponents and one for a specific module.\u003Cp\u003EOn the other hand, there have been a lot of weird things to happen and it\u0027s a bit hard to track down if you do not have all of your tweakscale modules in a single MM patch, and your exponents in a separate config on the side. It might be a good idea to look into the ways that a plugin-writer can interface with tweakscale as well for your more complicated needs. Also worth noting is that Tweakscale is being actively developed. They recently updated it with compatibility for the FS fuel switching module.\u003C/p\u003E\u003Cp\u003EOn the topic of symmetry issues, I always find it a good practice to remove my symmetry one I am happy with the product and ready to launch with scaled or painted parts. I use \u0022PartWizard\u0022 to switch off, or optionally re-group, my symmetrical parts to ensure launch stability. I even took at 8x symmetrical arm-piece and separated it into two 4x symmetrical groups to aid in creating a probe out of the PunyProbe parts which had four prop engines and four monoprop engines staggered around the central core. The reason I had to use PartWizard to pull this off was that I was using a modified thrust plate adapter (tweakable node size/number/offset on a flat plate of tweakable size itself) to provide stack nodes to attach the arms to. In an 8-node configuration I had a node for each of my two sets of four engines. When placing different connections to those arm pieces, I was being forced to use 8x symmetry. After re-grouping them I could create the two sets separately while still, technically, arrayed in 8x symmetry. Normally, I would have had to rely solely on surface attachment do pull this off, which is sometimes unreliable.\u003C/p\u003E\u003Cp\u003EI may not be an ingenious pod-racer builder but I do have some mad skills with all these little tools and such.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIR is a big mess when it comes to the tweakscale stuff - so sad, too, I wish I could make absolutely enormous IR parts without having everything go haywire. TS stuff written into every single part CFG. You are absolutely right it is far, far better to put everything you need in an MM patch!\u003C/p\u003E\u003Cp\u003EReason I bring it up is that IR defines individual TWEAKSCALEEXPONENTS values for most modules in those part CFGs, inside individual TS MODULE{} things, as opposed to defining just a few different types and basing them on an exponent. Whatever you do, don\u0027t integrate tweakscale into the wheels in such a way that you have to define every single value for a given variable at every scale - pretty please! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT: Also, to be clear about what was happening in the video I posted, the wheels are NOT catching on some terrain feature. That lurch happens when you steer after having built up some speed. Steering from a stop is fine, steering as you accelerate is fine, but if you steer after you are moving straight ahead at reasonably fast speeds, hitting A or D will cause an apparent insta-brake on one side of the vehicle or the other (maybe?). Closer you are to top speed, more violent the lurch.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-15T20:36:19Z\u0022 title=\u002211/15/2014 08:36  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 15, 2014\u003C/time\u003E by AccidentalDisassembly\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2014-11-15T20:52:46Z","Content":"\n\u003Cp\u003ENote, I edited my last post with a lot of useful stuff, some of which might\u003Cem\u003E help\u003C/em\u003E explain what is being discussed about super-brakes on turning and whatnot.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-15T21:41:13Z\u0022 title=\u002211/15/2014 09:41  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 15, 2014\u003C/time\u003E by Gaalidas\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2014-11-15T21:54:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaalidas\u0022 data-cite=\u0022Gaalidas\u0022\u003E\u003Cdiv\u003ENote, I edited my last post with a lot of useful stuff, some of which might\u003Cem\u003E help\u003C/em\u003E explain what is being discussed about super-brakes on turning and whatnot.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESaw it - The one thing I would recommend is simply that when lo-fi settles on variable names and whatnot, the TWEAKSCALEEXPONENTS be defined inside the SCALETYPE that is applied to wheels/tracks or that it be defined globally (like TS does in ScaleExponents.cfg). If you do this in an individual part:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EMODULE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = TweakScale\u003C/p\u003E\u003Cp\u003E type = IR_RoboticDocking\u003C/p\u003E\u003Cp\u003E TWEAKSCALEEXPONENTS\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E mass = 0.0125, 0.025, 0.05\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAnd actually if you do individual definitions for masses or any variable, in general:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ETWEAKSCALEEXPONENTS\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E mass = 0.0125, 0.025, 0.05\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou have to update that list of masses every time you add a new rescaleFactor to the SCALETYPE. It\u0027s really annoying, it\u0027s what IR does, it\u0027s very difficult to work with for people like me that don\u0027t always like the particular choices someone makes about the exact sizes their parts ought to be. The number of masses there has to equal the number of rescaleFactor definitions, is my impression, or things get real weird real fast. But I could be wrong on that!\u003C/p\u003E\u003Cp\u003EEDIT: also tried the crazy lurching problem with non-scaled tracks, and it seems to work fine. So maybe whatever force is responsible for causing steering to happen is simply being scaled inappropriately right now with TweakScale - seems plausible...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-15T22:08:14Z\u0022 title=\u002211/15/2014 10:08  PM\u0022 data-short=\u00229 yr\u0022\u003ENovember 15, 2014\u003C/time\u003E by AccidentalDisassembly\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-16T02:08:33Z","Content":"\n\u003Cp\u003EThanks guys!\u003C/p\u003E\u003Cp\u003ESeems clear I would need to add some more stuff into the plugin to deal with the catching issues, I know exactly what\u0027s going on there now. Unity wheel colliders \u0027torque\u0027 is actually just force, not force over moment. The tracks have to apply quite a strong braking force on the inside track to turn, so when scaled up this will give an epic force. Not good, and will require some thinking about. If it\u0027s too much of a pain I\u0027ll just write it off as a no-go - it may be simpler to make separate configs for larger or smaller parts or just write a part chooser than mess about with the plugin and MM patches I don\u0027t want to maintain for a dependency I don\u0027t want to distribute.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-16T02:31:27Z\u0022 title=\u002211/16/2014 02:31  AM\u0022 data-short=\u00229 yr\u0022\u003ENovember 16, 2014\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2014-11-16T06:41:48Z","Content":"\n\u003Cp\u003EI hear you on the updating of specific parameters for the scale factors. That was the main reason why people had problems making IR parts larger than they were intended. I fixed that on my local install by adding another set in their exponents for the ExtraLarge scale factor I wanted to introduce. Without adding another set to the exponents I\u0027d have been stuck with a really slow joint for the extralarge parts.\u003C/p\u003E\u003Cp\u003EThough, I must admit that after all that trouble to fix everything for that larger size, I\u0027ve never actually used it.\u003C/p\u003E\u003Cp\u003ESo, in reality...\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThe number of masses there has to equal the number of rescaleFactor definitions, is my impression, or things get real weird real fast. But I could be wrong on that!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn this you are absolutely correct. It\u0027ll work, sorta, but it\u0027ll be really wonky in some situations.\u003C/p\u003E\u003Cp\u003EIt\u0027s just something to keep in mind, lo-fi. You\u0027ve got your hands full already with all the crazy stuff you\u0027re developing. I wouldn\u0027t write anything off and a no-go just yet. Lets get these babies into a beta stage before we worry about making them compatible with other modifications. The important thing is that they work with their natively intended scales and configurations.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-16T06:50:20Z\u0022 title=\u002211/16/2014 06:50  AM\u0022 data-short=\u00229 yr\u0022\u003ENovember 16, 2014\u003C/time\u003E by Gaalidas\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-16T11:28:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaalidas\u0022 data-cite=\u0022Gaalidas\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe important thing is that they work with their natively intended scales and configurations.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think you\u0027re absolutely right there. I\u0027m at least going to wait until the issues with TS are fixed, it just makes it too hard trying to work out if it\u0027s something I\u0027ve messed up or a bug in TS. Probably a lot of messing required to get it working properly anyway - from experience, the Unity wheel colliders don\u0027t react well to be scaled.\u003C/p\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2014-11-16T16:49:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaalidas\u0022 data-cite=\u0022Gaalidas\u0022\u003E\u003Cdiv\u003EI hear you on the updating of specific parameters for the scale factors. That was the main reason why people had problems making IR parts larger than they were intended. I fixed that on my local install by adding another set in their exponents for the ExtraLarge scale factor I wanted to introduce. Without adding another set to the exponents I\u0027d have been stuck with a really slow joint for the extralarge parts.\u003Cp\u003EThough, I must admit that after all that trouble to fix everything for that larger size, I\u0027ve never actually used it.\u003C/p\u003E\u003Cp\u003ESo, in reality...\u003C/p\u003E\u003Cp\u003EIn this you are absolutely correct. It\u0027ll work, sorta, but it\u0027ll be really wonky in some situations.\u003C/p\u003E\u003Cp\u003EIt\u0027s just something to keep in mind, lo-fi. You\u0027ve got your hands full already with all the crazy stuff you\u0027re developing. I wouldn\u0027t write anything off and a no-go just yet. Lets get these babies into a beta stage before we worry about making them compatible with other modifications. The important thing is that they work with their natively intended scales and configurations.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve tried using an MM patch to duplicate IR parts and create large versions (8x scale, so they could then be scaled down to 4x and 2x) but have really spotty luck with it. Some of them seem to work, sometimes, and then something happens so that a gantry stops using its full range of motion or a rotatron won\u0027t move. Still haven\u0027t figured it out =(\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-16T17:18:30Z","Content":"\n\u003Cp\u003EKnowing what little I do about it, what TS does is not straightforward. Thinking about it, and looking back at that screen grab I posted, I reckon there is an error that doesn\u0027t show up in the logs. On the wheels that didn\u0027t scale, TS had moved their positions ready to be scaled, but hadn\u0027t actually done so. Also, the variable in my module had not been changed, so this tells me something went wrong in the program flow and TS went \u0022meh\u0022, shrugged its shoulders in a fashion only the French usually know how to do and went to have a pint on work time. I\u0027m not going to go code diving, because I\u0027ll want to try and fix it!\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2014-11-16T20:32:32Z","Content":"\n\u003Cp\u003EThat\u0027s the danger of code diving other people\u0027s work. You always need to fix everything.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-17T11:36:03Z","Content":"\n\u003Cp\u003EThere\u0027s a new version out, which I tried. It now wants to make wheels the root part, unmountable and unselectable. Let\u0027s just hang that on the fridge and forget about it.\u003C/p\u003E\u003Cp\u003ENot much will happen this week, I have a ridiculous amount of work to do. Happy Kerbal throwing, guys \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2014-11-17T18:32:03Z","Content":"\n\u003Cp\u003EWait, does that mean you have a life outside of Kerbal Foundries? I\u0027m shocked.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-17T18:57:13Z","Content":"\n\u003Cp\u003ELol. About the only thing I\u0027m not involved in at the moment is sleeping.\u003C/p\u003E\n"},{"CreatedByName":"jediKatana","CreatedById":129446,"CreatedDateTime":"2014-11-17T19:10:46Z","Content":"\n\u003Cp\u003EI actually use the repulsors in all the spaceplanes I make. They\u0027re far superior to landing gears. I can barely wait for the beta!\u003C/p\u003E\u003Cp\u003EEDIT: I just realized none of the wheels work. They just say low charge.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-18T02:47:02Z\u0022 title=\u002211/18/2014 02:47  AM\u0022 data-short=\u00229 yr\u0022\u003ENovember 18, 2014\u003C/time\u003E by jediKatana\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Madrias","CreatedById":89995,"CreatedDateTime":"2014-11-17T20:00:30Z","Content":"\n\u003Cp\u003EWould probably be hard to sleep, being there at the Kerbal Space Center. Heard rumors that Jeb tried to land a Mainsail powered rocket on the roof of the VAB this morning.\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2014-11-17T20:46:09Z","Content":"\n\u003Cp\u003EThat was only half of it. The engine was a mainsail, and Jeb was at the controls, but what they didn\u0027t include in the report was the large tank of fuel hanging precariously off of a half-broken truss that Jeb apparently clipped a type B asteroid with. This thing was ready to fall off at any moment, and it was structurally compromised, so the chances of a catastrophic fuel leak, or worse an explosion, were pretty high. I won\u0027t estimate the damages, or any fatalities, at this time... lets just say the VAB is safe for the time being, and Jeb is napping in the corner surrounded by debris from the cleanup. The ground keepers are gonna be royally displeased.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-11-17T21:39:00Z","Content":"\n\u003Cp\u003EYou have no idea how much we\u0027ve had to bribe the cleanup crews to keep on working. It\u0027s the fifth time this month. Funny you should mention using the repulsors as landing gear, JediKatana.. The amount of space plane debris that\u0027s piling up at the end of the runway is phenomenal; Jeb keeps using them and forgetting to add enough batteries. He lands, throttles down, and Kaboom! It\u0027s all well and dandy while at full throttle trying to buzz the new intern at the front desk of the admin building in an inverted dive, but as soon as he figured out that it\u0027s acceptable to throttle \u003Cem\u003Edown\u003C/em\u003E for landing, and the alternators don\u0027t kick out so much charge all hell has broken loose. Still, at least there is no penalty for his crazy designs that simply won\u0027t take off, reach the end of the runway and swan dive off like an entrant to the Red Bull pier jump. We have a boat standing by about a mile offshore just in case wings become \u0027sissy\u0027 and fall out of fashion again. Still, never a dull moment.\u003C/p\u003E\n"}]}