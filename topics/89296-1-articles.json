{"TopicId":89296,"ForumId":29,"TopicTitle":"Ksp api","CreatedByName":"DrDam","CreatedById":93049,"CreatedDateTime":"2014-11-03T11:09:57Z","PageNum":1,"Articles":[{"CreatedByName":"DrDam","CreatedById":93049,"CreatedDateTime":"2014-11-03T11:09:57Z","Content":"\n\u003Cp\u003EHi everyone.\u003C/p\u003E\u003Cp\u003ELast week, I have rework some of my little web-caculators for KSP and I have a interrogation.\u003C/p\u003E\u003Cp\u003EThere is some of ksp-helpers on the web, and many of them use part configuration ( weight, drag, engin ISP/Thrust ... ), I thinks there all are using custom database of ksp parts data.\u003C/p\u003E\u003Cp\u003ESo I want to know if I work on a \u0022web api\u0022 which parse all config parts files ( stock or mods) and expose a web services of this data, that can be usefull for someone ? \u003C/p\u003E\u003Cp\u003EIf it\u0027s usefull, Please tell me what do you need, or idea for devs.\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003EDrDam\u003C/p\u003E\n"},{"CreatedByName":"ratchet freak","CreatedById":119895,"CreatedDateTime":"2014-11-03T11:13:02Z","Content":"\n\u003Cp\u003Eisn\u0027t that all already in the gameData folder, you can extract the data from there yourself\u003C/p\u003E\n"},{"CreatedByName":"DrDam","CreatedById":93049,"CreatedDateTime":"2014-11-03T11:21:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ratchet freak\u0022 data-cite=\u0022ratchet freak\u0022\u003E\u003Cdiv\u003Eisn\u0027t that all already in the gameData folder, you can extract the data from there yourself\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe global idea will be to use this data for web-based-application. \u003C/p\u003E\u003Cp\u003EI\u0027ll imagine making a parser will extract data from conf files and save this datas to a database web-disponible.\u003C/p\u003E\n"},{"CreatedByName":"katateochi","CreatedById":35181,"CreatedDateTime":"2014-11-03T18:13:09Z","Content":"\n\u003Cp\u003EI\u0027m interested!\u003C/p\u003E\u003Cp\u003ESo if I understand it, you want to provide a web service that provides information about stock and mod parts? If that is the case I could find that very useful.\u003C/p\u003E\u003Cp\u003EI\u0027m developing \u003Ca href=\u0022http://KerbalX.com\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://KerbalX.com\u003C/a\u003E, a craft sharing site that can identify the parts that craft use and thereby know what mods they require. KerbalX has a knowledge base of parts and which mods they belong to and users can contribute to the knowledge base by running a \u0022PartMapper\u0022 tool. That basically scans their GameData folder, finds all .cfg files and produces a list of what parts exists and what mods they belong to. That data is then uploaded to KerbalX and is used to influence the associations in the knowledge base (the associations are weighted, so it adapts by associations being voted up or down). \u003C/p\u003E\u003Cp\u003EFor a number of reasons the PartMapper only transmits the names of parts and mods, so all that KerbalX knows is what parts are called and what mod they belong to. This is sufficient info to detect the parts in craft files and determine what mods a craft uses, but it would be nice to have additional information about the parts. For example I don\u0027t have enough information to calculate dV from a craft file, but if I could use your service to calculate craft stats that would be amazing!! \u003C/p\u003E\u003Cp\u003Equestions;\u003C/p\u003E\u003Cp\u003EHow are you planning to mine the data about mod parts? Will you have to manually install and scan them? \u003C/p\u003E\u003Cp\u003EHow are you planning on dealing with different versions of mods?\u003C/p\u003E\n"},{"CreatedByName":"DrDam","CreatedById":93049,"CreatedDateTime":"2014-11-03T19:09:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022katateochi\u0022 data-cite=\u0022katateochi\u0022\u003E\u003Cdiv\u003EHow are you planning to mine the data about mod parts? Will you have to manually install and scan them? \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually, I plan to parse part directories and scan part files. So I imagine processing mod parts in different directories at the same. The goal is to use \u0022complete\u0022 mod game_data folder because I\u0027ll would check updates.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022katateochi\u0022 data-cite=\u0022katateochi\u0022\u003E\u003Cdiv\u003EHow are you planning on dealing with different versions of mods?\u003C/div\u003E\u003C/blockquote\u003E I think deal with the last version of mod, but I don\u0027t see any problems too versionning mods.\u003Cp\u003Ethanks for your message, and \u0022stay tuned\u0022 \u003C/p\u003E\u003Cp\u003EPS: I\u0027m not english-native ... but you\u0027ll have already seen it.\u003C/p\u003E\n"},{"CreatedByName":"katateochi","CreatedById":35181,"CreatedDateTime":"2014-11-04T00:26:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DrDam\u0022 data-cite=\u0022DrDam\u0022\u003E\u003Cdiv\u003EActually, I plan to parse part directories and scan part files. So I imagine processing mod parts in different directories at the same. The goal is to use \u0022complete\u0022 mod game_data folder because I\u0027ll would check updates.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI do the same, the PartMapper tool for KerbalX parses the directories and scans all the .cfg files (for stock and mod parts), then sends the info to KerbalX. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EIf you\u0027re interested in my code for the partmapper it\u0027s \u003Ca href=\u0022https://github.com/Sujimichi/KerbalX\u0022 rel=\u0022external nofollow\u0022\u003Ehere on github\u003C/a\u003E. It is written in Ruby, which is probably not the language your using, but ruby is easy to read and it might help. I\u0027ve been developing the PartMapper for almost a year, first as part of another project and now as part of KerbalX, so it\u0027s had some good field testing and I\u0027ve overcome some of the more querky edge cases (like parts that use module manager), so if you want any help on this do give me a yell.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EMy question was more to do with how you plan to discover new mods. So if I understand your plan, you\u0027ll have a tool that can parse the directories of a \u0022complete\u0022 mod GameData folder, but how do you define what \u0022complete\u0022 is. New mods come out all the time and while there are the \u0022main stream\u0022 ones, we all have different definitions of what those are. So I guess my question is more; how do you define what a \u0022complete mod game_data folder\u0022 is?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DrDam\u0022 data-cite=\u0022DrDam\u0022\u003E\u003Cdiv\u003E I think deal with the last version of mod, but I don\u0027t see any problems too versionning mods.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think that using the last version of the mod is the only way to go (for now).\u003C/p\u003E\u003Cp\u003EThe problem I see with tracking mod versions is that there is no standard format that mods use to display their version info. So it\u0027s very hard (or impossible) to determine the version in code when scanning a GameData folder (it\u0027s slightly more possible if you still have the zips for each mod, but still there\u0027s no standard so its not reliable).\u003C/p\u003E\u003Cp\u003EThe other problem is there is no way to determine the version when reading a craft file. So for example you have a craft with a part called engine_1. engine_1 comes from a mod that has several versions and in each version engine_1 has a different ISP. From the craft file there is no way to tell which version of engine_1 was used when building it, so the only thing to do is use the most current version and assume that\u0027s right. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DrDam\u0022 data-cite=\u0022DrDam\u0022\u003E\u003Cdiv\u003Ethanks for your message, and \u0022stay tuned\u0022 \u003Cp\u003EPS: I\u0027m not english-native ... but you\u0027ll have already seen it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI certainly shall stay tuned! (and your english is perfectly understandable).\u003C/p\u003E\n"},{"CreatedByName":"DrDam","CreatedById":93049,"CreatedDateTime":"2014-11-04T07:58:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022katateochi\u0022 data-cite=\u0022katateochi\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIf you\u0027re interested in my code for the partmapper it\u0027s \u003Ca href=\u0022https://github.com/Sujimichi/KerbalX\u0022 rel=\u0022external nofollow\u0022\u003Ehere on github\u003C/a\u003E. It is written in Ruby, which is probably not the language your using, but ruby is easy to read and it might help. I\u0027ve been developing the PartMapper for almost a year, first as part of another project and now as part of KerbalX, so it\u0027s had some good field testing and I\u0027ve overcome some of the more querky edge cases (like parts that use module manager), so if you want any help on this do give me a yell.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, I\u0027ll check it\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022katateochi\u0022 data-cite=\u0022katateochi\u0022\u003E\u003Cdiv\u003EMy question was more to do with how you plan to discover new mods. So if I understand your plan, you\u0027ll have a tool that can parse the directories of a \u0022complete\u0022 mod GameData folder, but how do you define what \u0022complete\u0022 is. New mods come out all the time and while there are the \u0022main stream\u0022 ones, we all have different definitions of what those are. So I guess my question is more; how do you define what a \u0022complete mod game_data folder\u0022 is?\u003C/div\u003E\u003C/blockquote\u003EI already don\u0027t know how. I imagine something like a md5 sum of \u0022datas\u0022 folder, and if it differ than a reference, I check all folder contents in it ( or maybe a md5 sub-tree for each subfolder. If a sum differ or not exist, the folder must be parsed).\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022katateochi\u0022 data-cite=\u0022katateochi\u0022\u003E\u003Cdiv\u003EI think that using the last version of the mod is the only way to go (for now).\u003Cp\u003EThe problem I see with tracking mod versions is that there is no standard format that mods use to display their version info. So it\u0027s very hard (or impossible) to determine the version in code when scanning a GameData folder (it\u0027s slightly more possible if you still have the zips for each mod, but still there\u0027s no standard so its not reliable).\u003C/p\u003E\u003Cp\u003EThe other problem is there is no way to determine the version when reading a craft file. So for example you have a craft with a part called engine_1. engine_1 comes from a mod that has several versions and in each version engine_1 has a different ISP. From the craft file there is no way to tell which version of engine_1 was used when building it, so the only thing to do is use the most current version and assume that\u0027s right. \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E That are the reason while I\u0027ll work on the stocke parts, and when it stable, on mods parts, and only after think about versionning\n"},{"CreatedByName":"DrDam","CreatedById":93049,"CreatedDateTime":"2014-11-18T22:09:03Z","Content":"\n\u003Cp\u003EHi everybody,\u003C/p\u003E\u003Cp\u003EI update this topic with the first test version of the API.\u003C/p\u003E\u003Cp\u003EPlease note that is a 0.0.0.0 version.\u003C/p\u003E\u003Cp\u003EActualy, the parsing \u0026amp; conservation of parsed datas are stable, and the API propose many lists out and a url for taking datas of parts.\u003C/p\u003E\u003Cp\u003EThe output format are JSON, and a XML format are on developement.\u003C/p\u003E\u003Cp\u003EIf you want test it, please first read README.md file in github : \u003Ca href=\u0022https://github.com/DrDam/KSP-API\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/DrDam/KSP-API\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAnd try it on \u003Ca href=\u0022http://kspapi.chezdamien.net\u0022 rel=\u0022external nofollow\u0022\u003Ekspapi.chezdamien.net\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThanks and I waiting for yours question and critics.\u003C/p\u003E\u003Cp\u003EDrDam\u003C/p\u003E\n"},{"CreatedByName":"katateochi","CreatedById":35181,"CreatedDateTime":"2015-01-20T18:12:13Z","Content":"\n\u003Cp\u003EHey DrDam, just checking in to see how this project is going. I see you\u0027ve got it working for stock parts and deadly re-entry. Basic API seems fine, but if you don\u0027t mind I\u0027d suggest you simplify the response structure.\u003C/p\u003E\u003Cp\u003ESo for example if I go to \u003Ca href=\u0022http://kspapi.chezdamien.net/get/parts?partname=Mark2Cockpit\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kspapi.chezdamien.net/get/parts?partname=Mark2Cockpit\u003C/a\u003E what I get back has a structure that has the data inside two hashes that only have 1 key each (so they\u0027re not really doing anything). It would be nicer if when I go to a specific part I just get straight to the data\u003C/p\u003E\u003Cp\u003EIn other words; rather than needing to do this;\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  string = get \u0022http://kspapi.chezdamien.net/get/parts?partname=Mark2Cockpit\u0022\u003Cbr\u003E  JSON.parse(string)[\u0022Parts\u0022][\u0022Mark2Cockpit\u0022][\u0026lt;the_thing_I_want\u0026gt;]\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI do this;\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  string = get \u0022http://kspapi.chezdamien.net/get/parts?partname=Mark2Cockpit\u0022\u003Cbr\u003E  JSON.parse(string)[\u0026lt;the_thing_I_want\u0026gt;]\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAlso it would be nice to not have an array of hashes in the response for get/list/parts.\u003C/p\u003E\u003Cp\u003ESo if I parse the response from get/list/parts, then step into \u0022Parts\u0022 in the outer hash and then into \u0022Squad\u0022 I then get an array and each element is a hash with 1 key (part_name) which entails a hash with 1 key (title) which returns the full name. What I\u0027d find more useful is if it was either just an array of part names inside each mod, or a hash of partname =\u0026gt; full_partname. It just means I don\u0027t have to process the response to extract a list of parts names from /get/list/parts, its either just [\u0022Parts\u0022][\u0026lt;mod_name\u0026gt;] or [\u0022Parts\u0022][\u0026lt;mod_name\u0026gt;].keys to get an array-of-partnames.\u003C/p\u003E\u003Cp\u003ESo I could really put this service to use with what I\u0027m doing on KerbalX, but I really need more mod info than you have right now. Have you heard of CKAN? I only recently heard about it, but it provides an API to a repository of meta-data about mods, name, author, download_url etc. Unfortunately their API (\u003Ca href=\u0022http://api.ksp-ckan.org/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://api.ksp-ckan.org/\u003C/a\u003E) seems to be down right now, but you can still see the data on github \u003Ca href=\u0022https://github.com/KSP-CKAN/CKAN-meta\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-CKAN/CKAN-meta\u003C/a\u003E (that\u0027s a-lotta-mods you gotta process!)\u003C/p\u003E\u003Cp\u003EIf you want to see a list of the mods that I need info on currently you can see that here - \u003Ca href=\u0022http://kerbalx.com/mods\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalx.com/mods\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EOr you can read that via a JSON API (that I put in literally last night) GET \u003Ca href=\u0022http://kerbalx.com/mods.json\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalx.com/mods.json\u003C/a\u003E and you\u0027ll get a hash of mod_name =\u0026gt; database_id You can then go to \u003Ca href=\u0022http://kerbalx.com/mods/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalx.com/mods/\u0026lt;database_id\u0026gt;.json\u003C/a\u003E for a hash of info for the given id. Some of the mods listed on KerbalX now have download urls, but that is only a few and that\u0027s sourced by users adding them in so its not 100% reliable. \u003C/p\u003E\u003Cp\u003EBut CKAN is all about download urls! So I\u0027m planning to have KerbalX scan CKAN from time to time and get updated download urls. I\u0027m also planning on writing a script that I\u0027ll run on my local machine rather than on the site\u0027s server, that will go through CKAN and follow each download url, download and unpack the mod, read the mod info for KerbalX and send it to the site. That way KerbalX will know about everything that CKAN knows about. But I wouldn\u0027t want to run that very often. Could you also do something similar, where you scan CKAN and download the mods so you can scan them with your tool? And then also maybe have some way of tracking when a mod on CKAN updates so keeping up-to-date won\u0027t be so much overhead?\u003C/p\u003E\u003Cp\u003EAnyway, if you do get this tracking lots of mods then it would solve my problem of needing to know specific part details in order to calc detlaV, TWR etc for craft on KerbalX, so it would be \u003Cem\u003Eextremely\u003C/em\u003E useful to me!\u003C/p\u003E\n"},{"CreatedByName":"hakan","CreatedById":92934,"CreatedDateTime":"2015-01-20T18:55:47Z","Content":"\n\u003Cp\u003EOne tiny nitpick: Make sure to send your output with an HTTP type of \u0022application/json\u0022 instead of \u0022text/html\u0022. Make life much easier for parser clients \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"DrDam","CreatedById":93049,"CreatedDateTime":"2015-01-21T08:13:40Z","Content":"\n\u003Cp\u003E@hakan : oups ... I\u0027ll correct that ASAP\u003C/p\u003E\u003Cp\u003E@katateochi : Thanks for your return. I\u0027ll note all and try to make a 0.0.0.1 version.\u003C/p\u003E\u003Cp\u003EFor CKAN, I check.\u003C/p\u003E\u003Cp\u003EMy primary objectiv are to \u0022make more visible\u0022 some data for parts :\u003C/p\u003E\u003Cp\u003E- Mass\u003C/p\u003E\u003Cp\u003E- ISP curve\u003C/p\u003E\u003Cp\u003E- Thrust curve\u003C/p\u003E\u003Cp\u003E- Volume of \u0022ressource\u0022\u003C/p\u003E\u003Cp\u003EStay tuned and Thanks\u003C/p\u003E\n"},{"CreatedByName":"hakan","CreatedById":92934,"CreatedDateTime":"2015-01-21T12:32:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022katateochi\u0022 data-cite=\u0022katateochi\u0022\u003E\u003Cdiv\u003EI only recently heard about it, but it provides an API to a repository of meta-data about mods, name, author, download_url etc. Unfortunately their API (\u003Ca href=\u0022http://api.ksp-ckan.org/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://api.ksp-ckan.org/\u003C/a\u003E) seems to be down right now, but you can still see the data on github \u003Ca href=\u0022https://github.com/KSP-CKAN/CKAN-meta\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-CKAN/CKAN-meta\u003C/a\u003E (that\u0027s a-lotta-mods you gotta process!)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI will look into what happened to the API generator... Seems like another one of our daemons breaks things left and right...\u003C/p\u003E\n"}]}