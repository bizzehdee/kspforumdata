{"TopicId":61827,"ForumId":34,"TopicTitle":"[1.3] kOS Scriptable Autopilot System v1.1.3.0","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T16:40:58Z","PageNum":42,"Articles":[{"CreatedByName":"Feldhaus","CreatedById":68131,"CreatedDateTime":"2014-06-29T17:18:58Z","Content":"\n\u003Cp\u003EHey, I\u0027m new to this, is there a way to directly get the Fuel consumption rate that you can find in brackets in you resource overview?\u003C/p\u003E\u003Cp\u003ECurrently I\u0027m doing it like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset Y1 to ship:liquidfuel.\u003Cbr\u003Ewait 10.\u003Cbr\u003Eset Y2 to ship:liquidfuel.\u003Cbr\u003Eset cps to ((y1-y2)/10).\u003Cbr\u003Eprint cps.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe Liquidfuel is measured every 10 sec and the consumption rate is the difference divided by 10.\u003C/p\u003E\u003Cp\u003EThe Problem is, ship:liquidfuel always gives a whole number so if your fuel consumption rate is e.g. 0.04, the displayed amount of liquid fuel doesn\u0027t change within 10 sec. Of course I could do even larger intervals between the measurements but I don\u0027t really want to do that.\u003C/p\u003E\u003Cp\u003EIs there a way to get the fuel consumption rate directly? I couldn\u0027t find anything in the documentation..\u003C/p\u003E\u003Cp\u003EThanks!\u003C/p\u003E\n"},{"CreatedByName":"Dr_Goddard","CreatedById":100796,"CreatedDateTime":"2014-06-29T17:27:21Z","Content":"\n\u003Cp\u003EProgrammed a gyro stabilizer in kOS.\u003C/p\u003E\u003Cp\u003EThanks to infernal robotics.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022459\u0022 height=\u0022344\u0022 src=\u0022https://www.youtube.com/embed/t3R97DRe2rg?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-29T21:24:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dr_Goddard\u0022 data-cite=\u0022Dr_Goddard\u0022\u003E\u003Cdiv\u003EProgrammed a gyro stabilizer in kOS.\u003Cp\u003EThanks to infernal robotics.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI like it. So the purpose is to keep the central part level?\u003C/p\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-06-29T22:39:40Z","Content":"\n\u003Cp\u003E@Steve Madding: \u003C/p\u003E\u003Cp\u003EYour tutorial is awesome! I love it, and it\u0027s wonderful, and I learned some things that I didn\u0027t know even though I\u0027ve been writing functional scripts for a while now. \u003C/p\u003E\u003Cp\u003EI would request just one tiny addition: Find some excuse to go over a more complicated data structure, like body, vessel, or engine... Just something to give the reader a handle on how to access sub properties of an object - I know the code in the tutorial shows this already, but it might not click with some readers without being super blatant. \u003C/p\u003E\u003Cp\u003EThanks for the great work!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-30T03:26:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Astral_Nomad\u0022 data-cite=\u0022Astral_Nomad\u0022\u003E\u003Cdiv\u003Ecan anyone please tell me how I can get the fuel amount of a single tank? for staging purposes.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou can get the resources of a whole vessel or a stage, but not for a single part (I don\u0027t think). I wonder if that would be a good feature to add to the Part structure.\u003C/p\u003E\n"},{"CreatedByName":"Dr_Goddard","CreatedById":100796,"CreatedDateTime":"2014-06-30T10:48:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI like it. So the purpose is to keep the central part level?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECorrect. The idea came from a comment about a self levelling lander... this is going to happen soon.\u003C/p\u003E\u003Cp\u003ELanding on uneven surfaces shouldn\u0027t mean a tip-over any more.\u003C/p\u003E\u003Cp\u003EI think this is going to be the core for a few new ideas.\u003C/p\u003E\n"},{"CreatedByName":"Laie","CreatedById":110461,"CreatedDateTime":"2014-06-30T21:31:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022IronGremlin\u0022 data-cite=\u0022IronGremlin\u0022\u003E\u003Cdiv\u003E@Steve Madding: \u003Cp\u003EYour tutorial is awesome! I love it, and it\u0027s wonderful, and I learned some things that I didn\u0027t know even though I\u0027ve been writing functional scripts for a while now. \u003C/p\u003E\u003Cp\u003EI would request just one tiny addition: Find some excuse to go over a more complicated data structure, like body, vessel, or engine... Just something to give the reader a handle on how to access sub properties of an object - I know the code in the tutorial shows this already, but it might not click with some readers without being super blatant. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u002B1 to both points: that tutorial is great, and it stops too early.\u003C/p\u003E\u003Cp\u003EI can list engines and their stats, but I can\u0027t do anything useful with it. Like, pick a particular value.\u003C/p\u003E\u003Cp\u003EI can not figure out where my vessel is pointing. I\u0027m just giving it directions and assume that it does as it\u0027s told. That approach goes a long way, but sometimes I\u0027d like to do better than that.\u003C/p\u003E\u003Cp\u003EI think I understand how to set up a manuever node (toss in figures, check X:OBT:APOAPSIS until I like the result), but I have no idea how to execute one.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-01T00:01:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Laie\u0022 data-cite=\u0022Laie\u0022\u003E\u003Cdiv\u003E\u002B1 to both points: that tutorial is great, and it stops too early.\u003Cp\u003EI can list engines and their stats, but I can\u0027t do anything useful with it. Like, pick a particular value.\u003C/p\u003E\u003Cp\u003EI can not figure out where my vessel is pointing. I\u0027m just giving it directions and assume that it does as it\u0027s told. That approach goes a long way, but sometimes I\u0027d like to do better than that.\u003C/p\u003E\u003Cp\u003EI think I understand how to set up a manuever node (toss in figures, check X:OBT:APOAPSIS until I like the result), but I have no idea how to execute one.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmm. We were talking about this topic before - the basic conflicting goals are:\u003C/p\u003E\u003Cp\u003E* kOS should not be Mechjeb. It should not just *give* you completed code that does everything for you.\u003C/p\u003E\u003Cp\u003E* To show how to use kOS you need real world examples that solve realistic use-case scenarios.\u003C/p\u003E\u003Cp\u003ESo... how do I make an ascent script example that covers all the basic topics without being so complete that you never need to write your own ascent script and you can instead just copy the example?\u003C/p\u003E\u003Cp\u003EThat\u0027s the basic dilemma I\u0027m trying to deal with.\u003C/p\u003E\u003Cp\u003ETo answer your specific issues:\u003C/p\u003E\u003Cp\u003E1. The LIST command has an analogous LIST IN command that looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ELIST thingy IN myOwnVariableName.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAfter that, myOwnVariableName will be a variable of type LIST, that you can iterate over as described here:\u003C/p\u003E\u003Cp\u003E \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/list/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/structure/list/index.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThus you can LIST ENGINES IN MYLIST, and then MYLIST[0] is the first engine, MYLIST[1] is the next engine, and so on.\u003C/p\u003E\u003Cp\u003Ehere\u0027s an example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET numOut TO 0.\u003Cbr\u003ELIST ENGINES IN EngList.\u003Cbr\u003EFOR eng in EngList {\u003Cbr\u003E  IF eng:FLAMEOUT {\u003Cbr\u003E    numOut to numOut \u002B 1.\u003Cbr\u003E  }.\u003Cbr\u003E}.\u003Cbr\u003EPRINT \u0022There are \u0022 \u002B EngList:LENGTH \u002B \u0022 engines on the ship, of which \u0022 \u002B numOut \u002B \u0022 are flamed out.\u0022.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E2. Which way the vessel is pointing: SHIP:FACING.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET wantDir to HEADING(0,50).\u003Cbr\u003ELOCK STEERING TO wantDir.\u003Cbr\u003ELOCK curDir to SHIP:FACING.\u003Cbr\u003E// Now the difference between wantDir and curDir is how far off the ship is from its desired pointing.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe ugly thing with Directions like facing is that there are literally an infinite number of possible rotation tuple combinations ( R(a,b,c) ) that result in the exact same thing: For example, imagine starting from a ship facing due east, with its\u0027 roof facing the sky, and then applying a pitch of 180 degrees and a roll of 180 degrees, versus just yawing 180 degrees. They\u0027re the same thing. You end up facing west, and with the same side \u0027on top\u0027. There\u0027s any number of other similar combinations that are identical in their result. So it\u0027s hard to tell if two rotations are \u0022close\u0022 to each other or not. The way I\u0027d do it is to convert the rotations to vectors first and then work out how close the angle betwen the vectors is. This will become easier in the next release, as all Directions will now have a working :VECTOR suffix that returns a unit vector pointing the same as the rotation does.\u003C/p\u003E\u003Cp\u003E3. To execute a maneuver node, use its DELTAV suffix. That\u0027s not just a scalar number. It\u0027s a vector, which means it can be used to steer by, like so:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ESET nodeVector to myNode:DELTAV.\u003Cbr\u003ELOCK STEERING TO nodeVector.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen you can check the node\u0027s time into the future with the ETA suffix. myNode:ETA would be the time until the burn. Node that a proper burn means starting the burn *prior* to the ETA so the burn time straddles the ETA time, and that\u0027s your task to work out how to do that.\u003C/p\u003E\u003Cp\u003ETo know if you\u0027ve burned long enough, just remember what your velocity was at the start of your burn and compare that the the current velocity. When the difference is equal in magnitude to your node\u0027s deltaV, then you\u0027ve burned long enough.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-01T00:02:33Z\u0022 title=\u002207/01/2014 12:02  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 1, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003Cbr\u003Emismatched [ code ] tags in the BBcode.\n\u003C/span\u003E\n"},{"CreatedByName":"armeg","CreatedById":70016,"CreatedDateTime":"2014-07-01T20:16:13Z","Content":"\n\u003Cp\u003EMy EDIT command seems to not do anything. I can\u0027t seem to get the file editor to pop-up no matter what I do. I\u0027m definitely typing it correctly since it doesn\u0027t complain about any syntax errors.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-01T20:42:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022armeg\u0022 data-cite=\u0022armeg\u0022\u003E\u003Cdiv\u003EMy EDIT command seems to not do anything. I can\u0027t seem to get the file editor to pop-up no matter what I do. I\u0027m definitely typing it correctly since it doesn\u0027t complain about any syntax errors.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe editor is only in the pre-release. If you\u0027re using the full-release it\u0027s not there yet. You can get the pre-release from the github site.\u003C/p\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-07-01T21:52:29Z","Content":"\n\u003Cp\u003E@Steve Madding:\u003C/p\u003E\u003Cp\u003EJust write irrelevant code for your tutorial. Something that prints ETA to app in an unending loop, etc. It doesn\u0027t have to do something useful to teach useful concepts.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-01T22:36:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022IronGremlin\u0022 data-cite=\u0022IronGremlin\u0022\u003E\u003Cdiv\u003E@Steve Madding:\u003Cp\u003EJust write irrelevant code for your tutorial. Something that prints ETA to app in an unending loop, etc. It doesn\u0027t have to do something useful to teach useful concepts.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe problem is that to do that for *every* possible thing kOS supports means making literally hundreds of examples for all the possible terms on every possible structure. How can I know that people have more of a problem with understanding NODE:ETA than, say, understanding SHIP:ORBIT:APOAPSIS, or MUN:POSITION?\u003C/p\u003E\u003Cp\u003EThat\u0027s the difficulty I face. It\u0027s not practical to write out an example of literally every single suffix on every single object type. So I have to figure out which ones are giving the biggest problems and stick to them.\u003C/p\u003E\u003Cp\u003EThings I figure do need examples are:\u003C/p\u003E\u003Cp\u003E* Something with one example of a LIST traversal through a loop doing something practical, since people don\u0027t seem to understand it even though there\u0027s an example of it right on the LIST page. It seems that it has to be an example of doing something real with it for it to \u0027gel\u0027 when reading the docs. I already do have examples that take the \u0027do something useless\u0027 approach of saying \u0027okay so you\u0027ve got some list \u0022foo\u0022 that has the values [\u0022hello\u0022,\u0022bonjour\u0022,and \u0022aloha\u0022], here\u0027s how you can print them out...\u0027 and that just doesn\u0027t seem to cut it.\u003C/p\u003E\u003Cp\u003E* Something practical that uses one of the many ETA\u0027s - since it doesn\u0027t seem to gel to just describe it as the amount of time until a thing.\u003C/p\u003E\u003Cp\u003E* There are places where the types of things are not mentioned - that *is* a flaw in the documentation. I\u0027m a bit reluctant to spend too much time on it though, as there\u0027s talk behind the scenes of some possible better automation of suffix term handling that could include automatic type documentation.\u003C/p\u003E\u003Cp\u003E* Something using argument passing into subprograms. There\u0027s no concrete example for that yet.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-01T22:45:06Z\u0022 title=\u002207/01/2014 10:45  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 1, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-07-02T01:13:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe problem is that to do that for *every* possible thing kOS supports means making literally hundreds of examples for all the possible terms on every possible structure. How can I know that people have more of a problem with understanding NODE:ETA than, say, understanding SHIP:ORBIT:APOAPSIS, or MUN:POSITION?\u003Cp\u003EThat\u0027s the difficulty I face. It\u0027s not practical to write out an example of literally every single suffix on every single object type. So I have to figure out which ones are giving the biggest problems and stick to them.\u003C/p\u003E\u003Cp\u003EThings I figure do need examples are:\u003C/p\u003E\u003Cp\u003E* Something with one example of a LIST traversal through a loop doing something practical, since people don\u0027t seem to understand it even though there\u0027s an example of it right on the LIST page. It seems that it has to be an example of doing something real with it for it to \u0027gel\u0027 when reading the docs. I already do have examples that take the \u0027do something useless\u0027 approach of saying \u0027okay so you\u0027ve got some list \u0022foo\u0022 that has the values [\u0022hello\u0022,\u0022bonjour\u0022,and \u0022aloha\u0022], here\u0027s how you can print them out...\u0027 and that just doesn\u0027t seem to cut it.\u003C/p\u003E\u003Cp\u003E* Something practical that uses one of the many ETA\u0027s - since it doesn\u0027t seem to gel to just describe it as the amount of time until a thing.\u003C/p\u003E\u003Cp\u003E* There are places where the types of things are not mentioned - that *is* a flaw in the documentation. I\u0027m a bit reluctant to spend too much time on it though, as there\u0027s talk behind the scenes of some possible better automation of suffix term handling that could include automatic type documentation.\u003C/p\u003E\u003Cp\u003E* Something using argument passing into subprograms. There\u0027s no concrete example for that yet.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m sorry, we seem to be suffering from a rather profound miscommunication.\u003C/p\u003E\u003Cp\u003EI don\u0027t think it\u0027s really necessary to pick sticky case examples - As you made mention of earlier, those are bound to change soon as kOs grows - I mean literally, there are people who don\u0027t know what a data object IS. The idea that you could do something like KERBIN:POSITION at all is foreign to people who are new to this stuff. They don\u0027t understand what the colons are representing there, conceptually, or that it\u0027s the same basic idea as ETA:NODE. I don\u0027t mean tutorials on all data objects, I mean A tutorial on the concept of objects that have sub-properties. Let people refer to documentation to work out sticky particulars.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-02T02:41:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022IronGremlin\u0022 data-cite=\u0022IronGremlin\u0022\u003E\u003Cdiv\u003Ethere are people who don\u0027t know what a data object IS. The idea that you could do something like KERBIN:POSITION at all is foreign to people who are new to this stuff.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThen what you\u0027re asking for is too gargantuan a task. It\u0027s a textbook not a tutorial. Once I start assuming that a few examples plus the explicit information in the reference docs aren\u0027t good enough to get people the idea of how the language works, then I\u0027m talking about actually explaining basic programming concepts in details as if it was a college course. Explaining that is just too much work.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-02T03:22:47Z\u0022 title=\u002207/02/2014 03:22  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 2, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Matrix Aran","CreatedById":59037,"CreatedDateTime":"2014-07-02T10:20:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThen what you\u0027re asking for is too gargantuan a task. It\u0027s a textbook not a tutorial. Once I start assuming that a few examples plus the explicit information in the reference docs aren\u0027t good enough to get people the idea of how the language works, then I\u0027m talking about actually explaining basic programming concepts in details as if it was a college course. Explaining that is just too much work.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUltimately learning to use kOS is going to have to be a bit like learning Kerbal Space Program. Much like having to learn some basic orbital mechanics to get to the Mun or Duna, the user is going to have to accept that they\u0027re going to have to do some homework about programming before they\u0027ll be able to get kOS to do what they want.\u003C/p\u003E\u003Cp\u003EI think perhaps the best approach is to make tutorials in the same way as one would make a tutorial for KSP. Show how to do something simple, use that to illustrate *some* of the basic concepts they might not be familiar with, and then leave the rest as one big sandboxy playground that they can dive into at their leisure if they enjoyed their experience with the tutorial.\u003C/p\u003E\u003Cp\u003EIf folks aren\u0027t satisfied with this, then they\u0027re free to make their own tutorials to fill whatever they find missing. Its not up to one person to teach everything.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-02T10:22:27Z\u0022 title=\u002207/02/2014 10:22  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 2, 2014\u003C/time\u003E by Matrix Aran\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"luckielordie","CreatedById":68726,"CreatedDateTime":"2014-07-02T14:04:50Z","Content":"\n\u003Cp\u003ECan kOS work with Mechjeb? Like send off a command to tell mechjeb to pull of a circularise manoeuvre with the parameters available in mechjeb?\u003C/p\u003E\n"},{"CreatedByName":"Crown","CreatedById":18262,"CreatedDateTime":"2014-07-03T16:25:02Z","Content":"\n\u003Cp\u003EI have a quite simple question but the \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/\u0022 rel=\u0022external nofollow\u0022\u003Ereference\u003C/a\u003E didn\u0027t help me: \u003C/p\u003E\u003Cp\u003EHow do I read out the current throttle and the current thrust of a ship I control?\u003C/p\u003E\u003Cp\u003EWhen I try to use \u0022PRINT engine:thrust.\u0022 in a terminal window it gives me an error but as far as I understand the section \u003Cem\u003EStructure Reference\u003C/em\u003E that\u0027s how it\u0027s done.\u003C/p\u003E\u003Cp\u003EWhat do I wrong?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-03T16:57:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Crown\u0022 data-cite=\u0022Crown\u0022\u003E\u003Cdiv\u003EI have a quite simple question but the \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/\u0022 rel=\u0022external nofollow\u0022\u003Ereference\u003C/a\u003E didn\u0027t help me: \u003Cp\u003EHow do I read out the current throttle and the current thrust of a ship I control?\u003C/p\u003E\u003Cp\u003EWhen I try to use \u0022PRINT engine:thrust.\u0022 in a terminal window it gives me an error but as far as I understand the section \u003Cem\u003EStructure Reference\u003C/em\u003E that\u0027s how it\u0027s done.\u003C/p\u003E\u003Cp\u003EWhat do I wrong?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cem\u003Eengine\u003C/em\u003E is a type of variable, not the name of a variable. You get a list of them with \u003Cem\u003ELIST ENGINES IN MYVAR.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EFor what you want, try this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Elock throttle to myvalue. // pick a myvalue in the range 0.0 .. 1.0\u003Cbr\u003Eprint \u0022cur thrust is \u0022 \u002B ship:maxthrust * myvalue.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eworks if all engines are liquid fuel. solid fuels are maxthrust regardless of throttle so that doesn\u0027t quite work if you have any of them.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-07-04T00:45:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022luckielordie\u0022 data-cite=\u0022luckielordie\u0022\u003E\u003Cdiv\u003ECan kOS work with Mechjeb? Like send off a command to tell mechjeb to pull of a circularise manoeuvre with the parameters available in mechjeb?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou can do that within kOS, so I do not really see the use of that.\u003C/p\u003E\n"},{"CreatedByName":"curiousepic","CreatedById":60039,"CreatedDateTime":"2014-07-04T03:28:46Z","Content":"\n\u003Cp\u003EIs it possible for a non-focused vessel to be running a KOS program?\u003C/p\u003E\u003Cp\u003EHas anyone done this in order to create \u0022AI\u0022 opponents for combat?\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-07-04T03:53:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022curiousepic\u0022 data-cite=\u0022curiousepic\u0022\u003E\u003Cdiv\u003EIs it possible for a non-focused vessel to be running a KOS program?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am quite sure you can at least control certain aspects of other craft via a kOS unit on your own craft, so creating opponents should be possible. Running on a non-focussed craft is also possible, as I have used that for air-to-air docking. It can be quite quirky though.\u003C/p\u003E\u003Cp\u003EI have not seen anyone creating enemies through kOS, so it looks like you have a job to do \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-04T07:56:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022curiousepic\u0022 data-cite=\u0022curiousepic\u0022\u003E\u003Cdiv\u003EIs it possible for a non-focused vessel to be running a KOS program?\u003Cp\u003EHas anyone done this in order to create \u0022AI\u0022 opponents for combat?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI haven\u0027t done it for that purpose, but I did make a simple docking script and then test that it functioned while I was focussed on the target vessel receiving the dock rather than the vessel running the docking program.\u003C/p\u003E\u003Cp\u003EIt should work, but the vessel running the code does have to be fully loaded into the physics engine or the kOS computer won\u0027t be given any update notices by KSP, and it will freeze execution.\u003C/p\u003E\u003Cp\u003E(In other works, the kOS CPU has a clock speed of zero while the vessel is on rails, so it\u0027s not particularly useful unless the other vessel is near enough to stay fully loaded.)\u003C/p\u003E\u003Cp\u003EWe went through and tried to diligently find all the areas where the old Kevin Laity code wasn\u0027t making the proper distinction between \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/summary_topics/CPU_vessel/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ethe CPU\u0027s vessel\u003C/a\u003E and KSP\u0027s current active vessel, and tried to fix all of them. I hope there aren\u0027t any we missed.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-07-04T08:07:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWe went through and tried to diligently find all the areas where the old Kevin Laity code wasn\u0027t making the proper distinction between \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/summary_topics/CPU_vessel/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ethe CPU\u0027s vessel\u003C/a\u003E and KSP\u0027s current active vessel, and tried to fix all of them. I hope there aren\u0027t any we missed.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, that should have fixed most of the odd things I have seen going on. I must admit it has been a while since I tried.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-04T10:03:26Z","Content":"\n\u003Cp\u003EI just finished a major walk through the documentation adding a lot of missing stuff and making sure all the suffix fields are in the same format, with the same information about them.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/\u0022 rel=\u0022external nofollow\u0022\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EDocumentation link:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EImportant updates in that documentation:\u003C/p\u003E\u003Cp\u003E* All suffix terms explicitly mentioned, after a long walk through the code.\u003C/p\u003E\u003Cp\u003E* I had a \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/command/list/index.html\u0022 rel=\u0022external nofollow\u0022\u003Epage for the LIST BLAG IN FOO command\u003C/a\u003E and had never realized that it had never been linked to from anywhere and was never included in any of the git commits so it was missing from the public site. No wonder there were so many questions about how you get to the Engines and so on.\u003C/p\u003E\u003Cp\u003E* Better organization of the inherited things like Orbitable-\u0026gt;vessel and body, and Part-\u0026gt;Engine and DockingPort\u003C/p\u003E\u003Cp\u003E* \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/bindings/index.html\u0022 rel=\u0022external nofollow\u0022\u003EList of bound variable names and what they do.\u003C/a\u003E Important since so many of the things you do in kOS are done through these variables.\u003C/p\u003E\u003Cp\u003E* More structure pages have examples, and all of them mention how you go about getting an instance of the type in question. I didn\u0027t like doing this but there weren\u0027t good places to put that information some of the time.\u003C/p\u003E\u003Cp\u003E* Removed very misleading sentence from the front page that obfuscated the difference between instances of structures (i.e. SHIP, TARGET) versus the structure itself (i.e. VESSEL). Once upon a time the structures list was a mishmash of SOME things being something there can be multiple instances of and SOME things being hardcoded structures there was only ever one instance of. That sentence was causing undue confusion, I think, and must have been leftover from a much older version of kOS and never removed.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-04T10:04:22Z\u0022 title=\u002207/04/2014 10:04  AM\u0022 data-short=\u002210 yr\u0022\u003EJuly 4, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003Cbr\u003Efirst URL link had no text in the body of the link to click on\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-04T10:09:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EAh, that should have fixed most of the odd things I have seen going on. I must admit it has been a while since I tried.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESadly I just discovered as part of the documentation update when I walked through all the structure\u0027s Csharp code by eyeball, that it looks like SHIP:SENSORS is violating this rule. It checks whether or not the current CPU Vessel has the right sensor, but then if it does it pulls the data from the flight globals for \u0022current state\u0022, which of course KSP thinks of as the where the \u0022current vessel\u0022 is, not the CPU vessel. \u003C/p\u003E\u003Cp\u003EThat was the only such place I found, though.\u003C/p\u003E\n"}]}