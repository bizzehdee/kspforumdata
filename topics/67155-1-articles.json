{"TopicId":67155,"ForumId":15,"TopicTitle":"TriCount v. Textures","CreatedByName":"RoverDude","CreatedById":105198,"CreatedDateTime":"2014-03-29T19:33:52Z","PageNum":1,"Articles":[{"CreatedByName":"RoverDude","CreatedById":105198,"CreatedDateTime":"2014-03-29T19:33:52Z","Content":"\n\u003Cp\u003ESo in working with a part that will likely be part of a ship with partcounts in the 200 or so range, and assuming smaller or compressed textures (idealy single color 64x64 ones), what kind of tricount should I aim for as a reasonable upper limit? I\u0027m trying to figure out how much detail I can safely add before hitting issues, but at the same time, don\u0027t want to be so conservative that I avoid adding further detail to a model.\u003C/p\u003E\u003Cp\u003EThanks!\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-03-29T22:03:01Z","Content":"\n\u003Cp\u003EI\u0027m gonna skip ahead and come back. If you have a texture that is a single color, there\u0027s no reason for it to be more that one pixel, and 64 square isn\u0027t big enough to do much with emissives, normals, etcs. So save yourself the rest and round down to 1x1.\u003C/p\u003E\u003Cp\u003ETextures can be expensive in that they take up a lot of memory, but drawing them onto geometry doesn\u0027t change a whole lot by the texel density because the number of pixels they take up on screen is pretty much unrelated.\u003C/p\u003E\u003Cp\u003EMesh can be expensive because the graphics card has to simulate a space with them in it and figure out how a bunch of stuff adds up to result in the scene, so having simpler geometry can make that faster.\u003C/p\u003E\u003Cp\u003EThat all said, textures take up memory, mesh take up GPU Utilization, and what makes KSP\u0027s physics get bogged down is not either of those.\u003C/p\u003E\u003Cp\u003EShips with super high part counts are hard for KSP because KSP simulates the physics of every part separately, ships are bendy not rigid, and every part has it\u0027s own collision mesh, which admittedly is culled a bit by making ships clip through themselves.\u003C/p\u003E\u003Cp\u003EMaking your collision mesh simpler and using primitive colliders instead of mesh colliders wherever possible will improve performance but the issue is quantity of parts more than it is the complexity of those parts\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-30T03:32:55Z\u0022 title=\u002203/30/2014 03:32  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 30, 2014\u003C/time\u003E by Greys\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-03-29T22:40:37Z","Content":"\n\u003Cp\u003ERegarding poly count of objects, I get some data modders may found interesting.\u003C/p\u003E\u003Cp\u003EI\u0027m curious about how GPU intensive KSP/Unity can be, so I create a crazy thing.\u003C/p\u003E\u003Cp\u003Estats: \u003C/p\u003E\u003Cp\u003E57780 polygons\u003C/p\u003E\u003Cp\u003E112860 triangles\u003C/p\u003E\u003Cp\u003E56538 vertices\u003C/p\u003E\u003Cp\u003Ecollada object size: 14043 Kb\u003C/p\u003E\u003Cp\u003Emu object size: 4229 Kb\u003C/p\u003E\u003Cp\u003E(the object is so big, it is split in unity into 2 separate objects !)\u003C/p\u003E\u003Cp\u003EIn game: surprise......... NO slowdown at all !!!!\u003C/p\u003E\u003Cp\u003EFar less than having a 500 parts ships, GPU not so much used (piece of cake for them)\u003C/p\u003E\u003Cp\u003EOn my test install, I haven\u0027t yet add showfps library, I\u0027ll redo some test with it.\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/Vg5UZ\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll update later with part download link.\u003C/p\u003E\u003Cp\u003EConclusion: we should stop making ugly low poly objects, and start to make things smooth !\u003C/p\u003E\n"},{"CreatedByName":"Dispatcher","CreatedById":78707,"CreatedDateTime":"2014-03-30T00:49:27Z","Content":"\n\u003Cp\u003EThat\u0027s cool! However, do you consider your computer to be of average, below average or above average hardware; such as RAM, CPU, graphics card, etc.?\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-03-30T08:22:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dispatcher\u0022 data-cite=\u0022Dispatcher\u0022\u003E\u003Cdiv\u003EThat\u0027s cool! However, do you consider your computer to be of average, below average or above average hardware; such as RAM, CPU, graphics card, etc.?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E It\u0027s pretty high-end for now: a gamer laptop Asus G750JH-T4024H with a i7-4700HQ 2.4 GHz, Nv GTX-780M 4GB, 32 GB ram, ... but a ship with almost 500 parts, I got only 5-8 FPS, and GPU are always under used.\u003C/p\u003E\u003Cp\u003EFor info: Far Cry 3 (badly coded) is almost smooth at max, max ok for Crysis 2, Saint Row the 3rd, Shift 2, Red Faction Guerilla, ...\u003C/p\u003E\u003Cp\u003EI\u0027ll try some other unity games, it might be interresting.\u003C/p\u003E\n"},{"CreatedByName":"NovaSilisko","CreatedById":3897,"CreatedDateTime":"2014-03-30T08:31:11Z","Content":"\n\u003Cp\u003EPolygons are generally cheap as hell to render. A decent computer can handle millions and millions of them (plain ones, minimal shader weirdness) on screen at a time before slowing down.\u003C/p\u003E\u003Cp\u003ETry some ships of 50 to 500 or so parts with your high poly objects, vs the same stress tests using some low poly objects with the same texture (just overwrite the model, perhaps, so you can use the exact same test craft). I\u0027d be interested in seeing how much difference it makes. While you\u0027re at it, maybe try the same tests with a 2048x2048 texture applied to those same high and low poly models.\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-03-30T09:36:05Z","Content":"\n\u003Cp\u003EThis is the \u003Ca href=\u0022http://www./download/b8j3ghn7cmbzetd/high-poly-object-test.zip\u0022 rel=\u0022external nofollow\u0022\u003Efile\u003C/a\u003E (max scene \u002B collada object included), \u0022released\u0022 under my whatever license (see my stuffes for details).\u003C/p\u003E\u003Cp\u003ETried with showfps plug-in: as I guess, 60 FPS except when hyperedit do its job and when physics get stabilized.\u003C/p\u003E\u003Cp\u003EThe collider used is a mere big box around.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NovaSilisko\u0022 data-cite=\u0022NovaSilisko\u0022\u003E\u003Cdiv\u003EPolygons are generally cheap as hell to render. A decent computer can handle millions and millions of them (plain ones, minimal shader weirdness) on screen at a time before slowing down.\u003Cp\u003ETry some ships of 50 to 500 or so parts with your high poly objects, vs the same stress tests using some low poly objects with the same texture (just overwrite the model, perhaps, so you can use the exact same test craft). I\u0027d be interested in seeing how much difference it makes. While you\u0027re at it, maybe try the same tests with a 2048x2048 texture applied to those same high and low poly models.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EInteresting challenge but I\u0027m pretty sure we\u0027ll reach CPU limit first and it will bias the final result as unless we have access to Unity internal profiling/statistics data, how can we be 100% sure that is the polycounts/textures which create the slowdown or the physics ?\u003C/p\u003E\u003Cp\u003EOf course I can track GPU usage with nvidia inspector \u002B CPU/disk/ram usage with integrated win7 task manager, but it will be indirect view.\u003C/p\u003E\u003Cp\u003EAs I wrote earlier, I get low fps (9 top) with a bit less than 500 parts using stock parts and 1 Talisar\u0027s spherical tank, 17 mechjeb control units, a few KAS end pipe point and 16 basic SCANsat sensors.\u003C/p\u003E\u003Cp\u003EOn my system, it\u0027s always CPU which kill KSP performance, I don\u0027t play fullscreen but I think resolution is irrelevant anyway. GPU just work a little.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-03-30T12:34:52Z","Content":"\n\u003Cp\u003EIf you have a cheap laptop you can do your testing on it.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-03-30T15:24:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Justin Kerbice\u0022 data-cite=\u0022Justin Kerbice\u0022\u003E\u003Cdiv\u003EInteresting challenge but I\u0027m pretty sure we\u0027ll reach CPU limit first and it will bias the final result as unless we have access to Unity internal profiling/statistics data, how can we be 100% sure that is the polycounts/textures which create the slowdown or the physics ?\u003Cp\u003EOf course I can track GPU usage with nvidia inspector \u002B CPU/disk/ram usage with integrated win7 task manager, but it will be indirect view.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETurn off physics for the part in the cfg file. I can\u0027t remember the exact line, but you can check the cubic octagonal strut file and copy it from there.\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-03-30T16:02:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003ETurn off physics for the part in the cfg file. I can\u0027t remember the exact line, but you can check the cubic octagonal strut file and copy it from there.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eis this PhysicsSignificance = 1 ?\u003C/p\u003E\u003Cp\u003EThere is a talk \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/36738-physicssignificance-what-is-this?highlight=PhysicsSignificance\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E and a link pointing to something I don\u0027t have access to. \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/8367-Texture-Decals?highlight=PhysicsSignificance\u0022 rel=\u0022external nofollow\u0022\u003EHere \u003C/a\u003Eis another data.\u003C/p\u003E\u003Cp\u003EDoing this for all parts used in a 500 or more parts ship... may need some parsing helper \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. I\u0027ll perhaps try this one day.\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-03-31T21:05:07Z","Content":"\n\u003Cp\u003EJuts as an experiment, I have tried to put as much as possible of these physicless octo strut, the result is a 542 parts thing with only a few cube and a command pod, I get less performance that way. I don\u0027t think it\u0027s 7 parts with physics enable which eat the performance.\u003C/p\u003E\u003Cp\u003EAlbum updated with new pics of the thing.\u003C/p\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-03-31T21:48:21Z","Content":"\n\u003Cp\u003EThis seems to confirm what i was thinking about triscounts. They can be crazy high as the only thing in the scene is usually the rocket(s) and some lod reduced planets terrain. Compare this to other modern games where you often have entire high geometry cities with lots of breakable objects in the scene (think battlefield 4 etc.) Unity may not be the most optimized engine for modern graphics but its still quite good. I think one can even on low end rigs have models with 10-15k tris for engines and other parts that are used in low numbers and around 3-7k on other parts. What to mainly focus on instead are the physics colliders(i never generate colliders in unity from meshes as this creates really complex colliders. Instead i build them as seperate super simple geometry objects ) need to be pretty optimized and another thing iwe noticed is that unity dont handle many seperate objects well(ie. Many drawcalls) but from what i can gather this issue can be virtually eliminated by joining objects (the meshes are still seperate in the object but dont create more than one drawcall) this can also be done with colliders (exept those that need to be seperate objects so that ksp can designate them as ladders/hatches etc.) Something iwe been working on recently is using mesh deformation/vertex groups to do animations(each mesh inside the object is assigned to a bone via vertex groups so all legacy animated objects can be single meshes. This way no deformation of the meshes are performed and they move as if they where seperate objects) still some stuff like landing gears where some springing etc is performed inside ksp probably need some of its objects seperate and parented in the traditional way. But overall this method reduces drawcalls on animated parts dramatically.\u003C/p\u003E\u003Cp\u003Ei Hope this post was informative for some ppl. It summarizes the things iwe been able to gather over the past months. And i apologize for my poor english. Im norwegian\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-31T21:54:55Z\u0022 title=\u002203/31/2014 09:54  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 31, 2014\u003C/time\u003E by landeTLS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Absolution","CreatedById":4156,"CreatedDateTime":"2014-04-04T00:55:29Z","Content":"\n\u003Cp\u003EWithout giving a definitive answer I say \u0022the fewer the better\u0022. Sure, polygons are relatively cheap to produce on low end machines but you have to consider the bigger picture. You can easily get away with a single part with 40k triangles but what happens when you put a dozen of those parts together? It can really add up quickly.\u003C/p\u003E\u003Cp\u003EFor my mods I put an upper limit of 4k on most parts and only go above that for extremely fancy parts (like an engine). You\u0027d be surprised just how nice a part can look with so \u0022few\u0022 polygons. In my experience the texture has a much more profound impact on how good the part looks (unfortunately I suck at texturing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E ). If you add in Normal maps you got yourself a recipe for some really nice stuff with relatively few polygons.\u003C/p\u003E\n"},{"CreatedByName":"PolecatEZ","CreatedById":58008,"CreatedDateTime":"2014-04-04T06:15:02Z","Content":"\n\u003Cp\u003EBut with those nice Normals and Textures you start hitting another limitation, the almighty RAM cap, which you really need to keep under 2.7 on a fresh load if you don\u0027t want your game to randomly crash when it decides to suddenly eat a lot.\u003C/p\u003E\u003Cp\u003EMy framerate with my GTX770 did take a hit when I was playing with making objects and put in a block of spheres with a poly count of 77,000. I lost a whole 10fps (from the capped 61) when I threw the object on the floor in the VAB. I came here hunting for what the acceptable limit would be, and I see its still under debate. Roundy objects just don\u0027t quite look right without a high poly count, unless I\u0027m missing a trick (likely, just got Blender yesterday).\u003C/p\u003E\n"},{"CreatedByName":"NoMrBond","CreatedById":69263,"CreatedDateTime":"2014-04-04T07:30:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022PolecatEZ\u0022 data-cite=\u0022PolecatEZ\u0022\u003E\u003Cdiv\u003ERoundy objects just don\u0027t quite look right without a high poly count, unless I\u0027m missing a trick (likely, just got Blender yesterday).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou possibly need to apply the Smooth shading modifier which has been moved to Edit mode under Blender 2.70 (which is good because now you can select by face/edge/vertex rather than by whole mesh only from when it was under Object mode). While in Edite Mode it\u0027s under the Shading/UVs tab on the left hand edge now.\u003C/p\u003E\n"}]}