{"TopicId":176833,"ForumId":36,"TopicTitle":"Yet Another Remote Kontroller","CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2018-07-18T18:21:48Z","PageNum":1,"Articles":[{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2018-07-18T18:21:48Z","Content":"\n\u003Cp\u003E\nYARK plugin can be be downloaded \u003Ca href=\u0022https://github.com/c4ooo/YARK/releases/download/1.0/YARK.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EYet Another Remote Kontroller (YARK)\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nYARK is a plugin that allows for the remote control and flight data monitoring of vessels through a TCP socket connection. YARK could be used to build \u0022remote\u0022 control\u00A0panels powered by Raspberry PIs or other linux based computers with WIFI, or for writing remote control scripts. YARK isn\u0027t meant to be as extensive as kRPC, being tailored more for people making control panel rather then remote control scripts.\n\u003C/p\u003E\n\u003Cp\u003E\nYARK is heavily based on, and wouldn\u0027t be possible without,\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/11842-zitronen/\u0026amp;do=hovercard\u0022 data-mentionid=\u002211842\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/11842-zitronen/\u0022 rel=\u0022\u0022\u003E@zitronen\u003C/a\u003E\u0027s KSPSerialIO plugin.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cb\u003ESome of YARK\u0027s\u00A0features:\u00A0\u003C/b\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003ECraft orientation (Pitch, Roll, Heading)\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u002211th\u0022 \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E mode, allowing you to point the vessel at an arbitrary vector (Experimental)\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nAxisInput (Controlling Throttle/Pitch/Roll/Yaw/TXYZ)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003EControl and monitoring of Action Group, \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E, \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E, Brakes etc.\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nNavball vectors (Prograde, Target, Maneuver)\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003EAlt, Velocity, etc\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003EOrbital Information\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003EFuel Levels\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003EGetting and\u00A0settings timewarp mode, \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E and speed modes, and other miscellaneous\u00A0 stuff.\u003C/span\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EUsing YARK\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI have provided a set of \u003Ca href=\u0022https://github.com/c4ooo/YARK/tree/master/Bindings/CPP\u0022 rel=\u0022external nofollow\u0022\u003EC\u002B\u002B\u003C/a\u003E\u00A0and \u003Ca href=\u0022https://github.com/c4ooo/YARK/tree/master/Bindings/JAVA\u0022 rel=\u0022external nofollow\u0022\u003EJava bindings\u003C/a\u003E\u00A0for using YARK, rather then trying to explain the protocol. Along\u00A0with the bindings, I have also provided a sample script which should show how to use the bindings. The script simply\u00A0checks if the rocket is falling and executes a simple abort procedure. The bindings might have slight\u00A0differences between the Java and C\u002B\u002B versions, but should function the same.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EClient documentation:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nClass: Client\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#6f42c1;font-size:12px;\u0022\u003EClient\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E():\u003C/span\u003E\u00A0Constructor\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#d73a49;font-size:12px;\u0022\u003Evoid\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#6f42c1;font-size:12px;\u0022\u003EConnect\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E(\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003EString\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003EIP\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E, \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#d73a49;font-size:12px;\u0022\u003Eint\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003EPORT\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E)\u003C/span\u003E\u003Cspan\u003E:\u00A0\u003C/span\u003EAsyn\u003Cspan style=\u0022font-size:14px;\u0022\u003Echronou\u003C/span\u003Esly Starts a new connection and returns\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022color:#e74c3c;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);font-size:12px;\u0022\u003EStatusPacket \u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022color:#9b59b6;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);font-size:12px;\u0022\u003EStatus\u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E: \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(36,41,46);\u0022\u003EHolds status information about the craft. (See\u00A0\u003Ca href=\u0022https://github.com/c4ooo/YARK/blob/master/Bindings/CPP/Client/Structs.h#L167-L172\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0for\u00A0members)\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022color:#e74c3c;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);font-size:12px;\u0022\u003EVesselPacket \u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022color:#9b59b6;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);font-size:12px;\u0022\u003EVessel\u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E: \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(36,41,46);\u0022\u003EHolds flight data about the craft.\u00A0(See\u00A0\u003Ca href=\u0022https://github.com/c4ooo/YARK/blob/master/Bindings/CPP/Client/Structs.h#L174-L259\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0for\u00A0members)\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022color:#e74c3c;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);font-size:12px;\u0022\u003EControlPacket \u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022color:#9b59b6;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);font-size:12px;\u0022\u003EControl\u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E: \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(36,41,46);\u0022\u003EUsed to control craft.\u00A0(See \u003Ca href=\u0022https://github.com/c4ooo/YARK/blob/master/Bindings/CPP/Client/Structs.h#L81-L165\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0for\u00A0members)\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#d73a49;font-size:12px;\u0022\u003Evoid\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#6f42c1;font-size:12px;\u0022\u003ESendControls\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E(): \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(36,41,46);\u0022\u003ESends controls to YARK.\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#d73a49;font-size:12px;\u0022\u003Evoid\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#6f42c1;font-size:12px;\u0022\u003EWaitForConnection\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E(): \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(36,41,46);\u0022\u003EHalts until the client connects\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#d73a49;font-size:12px;\u0022\u003Eint\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#6f42c1;font-size:12px;\u0022\u003EGetState\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E(): \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(36,41,46);\u0022\u003EReturns connection state (TCP_CONNECTING, TCP_CONNECTED,\u00A0 or TCP_FAILED)\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#d73a49;font-size:12px;\u0022\u003Evoid\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#6f42c1;font-size:12px;\u0022\u003ESendControls\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E(): \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(36,41,46);\u0022\u003ESends control packet to YARK server\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#d73a49;font-size:12px;\u0022\u003Evoid\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E \u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#6f42c1;font-size:12px;\u0022\u003EShutdown\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E(): \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(36,41,46);\u0022\u003ECloses connection\u003C/span\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cspan style=\u0022color:#e74c3c;\u0022\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);font-size:12px;\u0022\u003EString\u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);\u0022\u003E\u003Cspan style=\u0022color:#e74c3c;\u0022\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003E \u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022color:#9b59b6;\u0022\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003Eerror\u003C/span\u003E\u003C/span\u003E\u003Cfont color=\u0022#24292e\u0022\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003E: \u003C/span\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EIf \u003C/span\u003E\u003C/font\u003E\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#6f42c1;font-size:12px;\u0022\u003EGetState\u003C/span\u003E\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:12px;\u0022\u003E()\u003C/span\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);\u0022\u003E\u003Cfont color=\u0022#24292e\u0022\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E == TCP_FAILED, holds an error message.\u003C/span\u003E\u003C/font\u003E\u003C/span\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003EVesselPacket and ControlPacket also have some helper methods to, these should alleviate you having to do bitmath and such.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003E\u003Cstrong\u003EConfiguring YARK:\u00A0\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003EYARK has two\u00A0settings found\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(53,60,65);\u0022\u003E\u00A0in the PluginData\u003C/span\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(53,60,65);\u0022\u003E\uFEFF\u003C/span\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(53,60,65);\u0022\u003E\u00A0\u003C/span\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(53,60,65);\u0022\u003E\uFEFF\u003C/span\u003E\u003Cspan style=\u0022background-color:rgb(255,255,255);color:rgb(53,60,65);\u0022\u003Efolder. The \u0022TCPPort\u0022 field configures the port on which YARK hosts the server\u00A0(defaults to 9999), and \u0022UpdatesPerSecond\u0022 is the number of updates\u00A0the server will attempt to send per second. If left zero, the server will simply send an update every frame. (UpdatesPerSecond defaults to 0/every-frame)\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003E\u003Cstrong\u003ECompiling YARK:\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:14px;\u0022\u003EYARK can be compiled like any other KSP plugin from the source code found \u003Ca href=\u0022https://github.com/c4ooo/YARK/tree/master/YARK_PLUGIN\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E. Just point MSVS to the required unity reference DLLs, and make sure you compile for .NET 3.5.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cstrong\u003EMulti-Functional Display (MFD) (\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/177545-external-multi-function-display/\u0022 rel=\u0022\u0022\u003EMain Thread\u003C/a\u003E)\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe YARK-MFD is a multifunctional display written in c\u002B\u002B with openGL that uses YARK to fetch and display flight data. Read the main thread for more info.\n\u003C/p\u003E\n\u003Cp\u003E\nScreenshot:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022N6ARZbB.png\u0022 class=\u0022ipsImage\u0022 height=\u0022576\u0022 src=\u0022https://i.imgur.com/N6ARZbB.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-01-22T01:26:22Z\u0022 title=\u002201/22/2019 01:26  AM\u0022 data-short=\u00225 yr\u0022\u003EJanuary 22, 2019\u003C/time\u003E by c4ooo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2018-07-23T20:09:47Z","Content":"\n\u003Cp\u003E\nSo, do you have documentation for this. I am in the process of rebuilding and would like to consider all alternatives.\n\u003C/p\u003E\n"},{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2018-07-23T21:07:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223420917\u0022 data-ipsquote-contentid=\u0022176833\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221532376587\u0022 data-ipsquote-userid=\u0022111048\u0022 data-ipsquote-username=\u0022Freshmeat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 7/23/2018 at 4:09 PM, Freshmeat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo, do you have documentation for this. I am in the process of rebuilding and would like to consider all alternatives.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI will try to have to have more or less finalized documentation by the end of this week. (Tomorrow I plan on fixing how the desktop-client renders the navball)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003ERight now, the current setup acts this way:\u00A0\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003EOnce the client connects, it will automatically start receiving packets from the server. Each packet starts with a 3 byte header. The first two bytes are always 0xDEAD (lame, I know\u00A0\u003Cimg alt=\u0022:rolleyes:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 title=\u0022:rolleyes:\u0022\u003E), and the third byte identifies what type of packet it is. The first type (0x01) is a \u0022Status Packet\u0022, which notifies the client of whether there is a vessel currently in flight, and what name of that vessel is, and other \u0022static\u0022 data about the vessel. It gets sent when the client first connects, when the flight starts/ends, or when the vessel is switched. The second type of packet (0x02) is the \u0022Vessel Data Packet\u0022 which gets sent every frame, as long as there is a vessel in flight, and holds \u0022dynamic\u0022 data about the vessel such as altitude, attitude, fuel, etc.\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EEdit:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003Enot relevant\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-01-22T01:12:06Z\u0022 title=\u002201/22/2019 01:12  AM\u0022 data-short=\u00225 yr\u0022\u003EJanuary 22, 2019\u003C/time\u003E by c4ooo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2018-07-24T20:29:30Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EEDIT:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003EIrrelevant\u00A0\u003C/b\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003C/p\u003E\n\u003Cp\u003E\nOK so, I pushed the most recent code to github. (Well actually, I haven\u0027t pushed most of the Client because it uses a large SDL/openGL wrapper I wrote, and I think I will make that a separate repo.\u0026lt;sidetrack\u0026gt; All my c\u002B\u002B openGL projects use this wrapper in different stages of its development, and because I was always simply copy and pasting the wrapper from the previous project to the next, the whole thing is a huge mess. \u0026lt;sidetrack\u0026gt;)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/c4ooo/YARK/tree/master/YARK_CLIENT/YARK_CLIENT/Client\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/c4ooo/YARK/tree/master/YARK_CLIENT/YARK_CLIENT/Client\u003C/a\u003E\u00A0contains a very simple c\u002B\u002B TCP client to receive data from the plugin. If you wanted to use that code, you would have to write a main method, #including Client.h, and in which you would create a new Client() object , passing the appropriate params to the constructor. Once Client.state is equal to\u00A0\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:14px;\u0022\u003ETCPCLIENT_CONNECTED, you can\u003C/span\u003E\u00A0\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:14px;\u0022\u003Estart reading the appropriate data from Client.status (the \u0022static\u0022 data packet) and Client.dataIn (the \u0022dynamic\u0022 data packet) and writing to Client.CP (the control packet). To actually send the control packet you need to call Client.SendControls().\u00A0\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:14px;\u0022\u003EThe structs are defined in:\u00A0\u003Ca href=\u0022https://github.com/c4ooo/YARK/blob/master/YARK_CLIENT/YARK_CLIENT/Client/Struts.h\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/c4ooo/YARK/blob/master/YARK_CLIENT/YARK_CLIENT/Client/Struts.h\u003C/a\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:14px;\u0022\u003EYea, I know everything is messy and confusing right now, but I will be working to clean it up as well as writing a proper documentation and stuff.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:14px;\u0022\u003EOhh and, the plugin\u0027s server is started on port 9999, I will make this configurable ASAP.\u00A0\u00A0\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:14px;\u0022\u003EEdit:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#24292e;font-size:14px;\u0022\u003EJust a screenshot: \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00221AtDEWd.png\u0022 class=\u0022ipsImage\u0022 height=\u0022576\u0022 src=\u0022https://i.imgur.com/1AtDEWd.png\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003C/p\u003E\n\u003Cbr\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-01-22T01:11:25Z\u0022 title=\u002201/22/2019 01:11  AM\u0022 data-short=\u00225 yr\u0022\u003EJanuary 22, 2019\u003C/time\u003E by c4ooo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"c4ooo","CreatedById":168905,"CreatedDateTime":"2019-01-22T01:25:44Z","Content":"\n\u003Cp\u003E\nI hate to triple post, but it\u0027s been a while an I\u0027ve made some changes. First of all, I have refactored most of the plugin code into separate files, and moved the MFD code into a separate repository. This should make everything easier for me to manage, and the refactor will allow me to add support for multiple client connections. when I get around to it.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSecondly, I improved the protocol. Instead of trying to reexplain\u00A0the protocol every time i change it, which probably has led to some confusion, I simply have created a set of Java and C\u002B\u002B bindings. The bindings come with an example script, and I think providing the\u00A0bindings should make this plugin easy to work with.\n\u003C/p\u003E\n\u003Cp\u003E\nI have added some\u00A0features to YARK, such as\u00A0an \u002211th\u0022 \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E mode that allows the client to specify a custom vector to point the ship at.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf anyone is confused by the helper methods in the ControlPacket Class/Struct, I will be happy to document them!\n\u003C/p\u003E\n"}]}