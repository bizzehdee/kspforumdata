{"TopicId":195007,"ForumId":20,"TopicTitle":"Module Manager scripts","CreatedByName":"Monniasza","CreatedById":199337,"CreatedDateTime":"2020-06-24T11:54:38Z","PageNum":1,"Articles":[{"CreatedByName":"Monniasza","CreatedById":199337,"CreatedDateTime":"2020-06-24T11:54:38Z","Content":"\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nThis thread has been created on request by\u00A0\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/73653-tranceaddict/\u0022 rel=\u0022\u0022\u003ETranceaddicT\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nThe associated issue is located at\u00A0\u003Ca href=\u0022https://github.com/sarbian/ModuleManager/issues/157\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/sarbian/ModuleManager/issues/157\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:36px;\u0022\u003EOverview\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nStrings must be now explicitly stated either by single or double quotation marks, otherwise, they will be treated as variables, which might cause errors.\n\u003C/p\u003E\n\u003Cp\u003E\nTo create a new key, you must place \u0027\u002B\u0027 or \u0027$\u0027 before the setter\n\u003C/p\u003E\n\u003Cp\u003E\nAll other existing syntax will be preserved\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EFunctions\u003C/span\u003E\u003Cbr\u003E\n- getVar(variable)\u00A0\u00A0get a variable, starting here\u003Cbr\u003E\n- getVarRoot(variable)\u00A0- get a variable by the name, starting from root\u003Cbr\u003E\nor key correspondingly. The first parameter is optional and is used to track the number of calls.\u00A0\u003Cbr\u003E\n- Variables belonging to the local node are obtained by simply typing their name.\u003Cbr\u003E\n- To get variables from ancestors, use ##$...$ instead.\u003Cbr\u003E\n- regexp(pattern,string)\u00A0- run regexp expression on a string\u003Cbr\u003E\n- sin, cos, tan, log10, ln, log2, expE, exp10, mod, exp, sec, csc, sqrt, curt, root, log - math functions\u003Cbr\u003E\n- getKey(...)\u00A0:\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: name, index - get a single **key** by **index**\u003Cbr\u003E\n\u00A0\u00A0- 1 input: name - get all **keys** by name\u003Cbr\u003E\n\u00A0\u00A0- 1 input: key - get key\u0027s value\u003Cbr\u003E\n\u00A0\u00A0- no inputs - get all keys under all names\u003Cbr\u003E\n- getKeyValue(...): Like getKey(...), but gets values, not the keys themselves.\u003Cbr\u003E\n- setKey(...) :\u003Cbr\u003E\n\u00A0\u00A0- 3 inputs: key name, index, value - set given key at the given index to the given value\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: key, value: sets given a key to a given value\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: keys, value: sets all given keys to a single value\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: keys, values: sets keys to the corresponding values\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: key name, values: sets keys under given name to the corresponding values\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: key name, value: sets keys under given name to a single value\u003Cbr\u003E\n\u00A0\u00A0- If you want to set multiple keys to a list, use setKeyDuplicate function\u003Cbr\u003E\n- setKeyDuplicate(...):\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: key name, value: sets keys under given name to a single value\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: keys, value: sets all given keys to a single value\u003Cbr\u003E\n- call(func, inputs): calls a function with given list of inputs\u003Cbr\u003E\n- getKey(...) :\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: name, index - get a single **key** by **index**\u003Cbr\u003E\n\u00A0\u00A0- 1 input: name - get all **keys** by name\u003Cbr\u003E\n\u00A0\u00A0- 1 input: key - get key\u0027s value\u003Cbr\u003E\n\u00A0\u00A0- no inputs - get all keys under all names\u003Cbr\u003E\n- getNodeValue(...): Like getNode(...), but gets values, not the nodes themselves.\u003Cbr\u003E\n- setNode(...) :\u003Cbr\u003E\n\u00A0\u00A0- 3 inputs: node name, index, value - set given node at the given index to the given value\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: node, value: sets given a node to a given value\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: nodes, value: sets all given nodes to a single value\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: nodes, values: sets nodes to the corresponding values\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: node name, values: sets nodes under given name to the corresponding values\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: node name, value: sets nodes under given name to a single value\u003Cbr\u003E\n\u00A0\u00A0- If you want to set multiple nodes to a list, use setKeyDuplicate function\u003Cbr\u003E\n- setNodeDuplicate(...):\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: node name, value: sets nodes under given name to a single value\u003Cbr\u003E\n\u00A0\u00A0- 2 inputs: nodes, value: sets all given nodes to a single value\u003Cbr\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003ESetter prefixes\u003C/span\u003E\u003Cbr\u003E\n\u0027$\u0027 as a modifier - creates a temporary variable\u003Cbr\u003E\n\u0027$$\u0027 as a modifier - creates a long-term variable, but it is removed after all scripts finish.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EBasic data types\u003C/span\u003E\u003Cbr\u003E\nString, node, key, number, boolean, list, anonymous function\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EAdvanced data types\u003C/span\u003E\u003Cbr\u003E\nAchieved through specialized functions.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EOperators\u003C/span\u003E\u003Cbr\u003E\n- \\\u002B adddition\u003Cbr\u003E\n- \\- substraction\u003Cbr\u003E\n- \\* multiplication\u003Cbr\u003E\n- / division\u003Cbr\u003E\n- ^ exponent\u003Cbr\u003E\n- | OR\u003Cbr\u003E\n- ! NOT\u003Cbr\u003E\n- \u0026amp; AND\u003Cbr\u003E\n- \\ XOR\u003Cbr\u003E\n- !| NOR\u003Cbr\u003E\n- !\u0026amp; NAND\u003Cbr\u003E\n- !\\ XNOR\u003Cbr\u003E\n- = equal\u003Cbr\u003E\n- \\\u0026gt; more\u003Cbr\u003E\n- \u0026lt; less\u003Cbr\u003E\n- \u0026lt;= !\u0026gt; not more\u003Cbr\u003E\n- \\\u0026gt;= !\u0026lt; not less\u003Cbr\u003E\n- \u0026lt;\u0026gt; != not equal\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EGrouping\u003C/span\u003E\u003Cbr\u003E\n- () parentheses\u003Cbr\u003E\n- \u0026lt;% ... %\u0026gt; code sections (they do not start a new node).\u003Cbr\u003E\n- [[...]] - list\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EWhere?\u003C/span\u003E\u003Cbr\u003E\nIt will need a new file format - which distinguishes it from simpler patches.\u003Cbr\u003E\nSuggestions for file extension:\n\u003C/p\u003E\n\u003Cp\u003E\n- mm - from \u0027**m**odule **m**anager\u0027\u003Cbr\u003E\n- akp - from \u0027**a**dvanced **k**erbal **p**atch\u0027\u003Cbr\u003E\n- kscript - from \u0027**k**erbal **script**\u0027\u003Cbr\u003E\n- kpscript - from \u0027**k**erbal **p**atch **script**\u0027\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EWhy?\u003C/span\u003E\u003Cbr\u003E\n- KSP API is too complex for beginners\u003Cbr\u003E\n- Existing capabilities are insufficient for extremely advanced users\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EHow?\u003C/span\u003E\u003Cbr\u003E\nExisting patches should not be called \u0027scripts\u0027 - they will be more advanced form of data.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:24px;\u0022\u003EConstructs\u003C/span\u003E\u003Cbr\u003E\n- Define function: FUNCTIONDEF[...] \u0026lt;%...%\u0026gt;. Place inputs within square brackets, and in double curly brackets place code. The FUNCTIONDEF is a reserved name in this programming language (but not in CFG files). The first input names the function, following ones are input variable names.\u003Cbr\u003E\n- Define anonymous function: FUNCTIONANONYM[...] \u0026lt;%...%\u0026gt;. Place inputs within square brackets, and in double curly brackets place code. The FUNCTIONANONYM is a reserved name in this programming language (but not in CFG files).\u003Cbr\u003E\n- for($x = 0; #$x# \u0026lt; 10; @x \u002B= 1) - a \u0027for\u0027 loop\u003Cbr\u003E\n- foreach($x = 0;@NODE[y]) \u0026lt;%...%\u0026gt; or foreach($x = 0;#key) \u0026lt;%...%\u0026gt;and \u00A0- runs an action for every node or key\u00A0\u003Cbr\u003E\n- if(cond) \u0026lt;%...%\u0026gt; elseif(cond2) \u0026lt;%...%\u0026gt;} else \u0026lt;%...%\u0026gt;} - conditional statement\u003Cbr\u003E\n- fornode(node) \u0026lt;%...%\u0026gt; - run given code for a given node\u003Cbr\u003E\n- try \u0026lt;%...%\u0026gt; catch($exc) \u0026lt;%...%\u0026gt; - if first block throws an error or exception, call second block\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cspan style=\u0022font-size:24px;\u0022\u003E\u0027-\u0027 with text\u003C/span\u003E\u003Cbr\u003E\n\u0022qwertyuiop\u0022 - 3 = \u0022qwertyu\u0022\u003Cbr\u003E\n3 - \u0022qwertyuiop\u0022 = \u0022rtyuiop\u0022\u003Cbr\u003E\n3 - \u0022qwertyuiop\u0022 - 3 = \u0022rtyu\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nRemove the last instance:\u003Cbr\u003E\n\u0022anobnoa\u0022 -\u0026lt; \u0022no\u0022 = \u0022anoba\u0022 Remove last instance\u003Cbr\u003E\n\u0022anobnoa\u0022 \u0026gt;- \u0022no\u0022 = \u0022abnoa\u0022 Remove first instance\u003Cbr\u003E\n\u0022anobnoa\u0022 - \u0022no\u0022 = \u0022aba\u0022 Remove all instances\n\u003C/p\u003E\n"},{"CreatedByName":"Nightside","CreatedById":150244,"CreatedDateTime":"2020-06-24T13:43:45Z","Content":"\n\u003Cp\u003E\nWhat problems would this solve?\n\u003C/p\u003E\n\u003Cp\u003E\nWould existing patches still work?\n\u003C/p\u003E\n"},{"CreatedByName":"Monniasza","CreatedById":199337,"CreatedDateTime":"2020-06-24T15:59:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223808588\u0022 data-ipsquote-contentid=\u0022195007\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221593006225\u0022 data-ipsquote-userid=\u0022150244\u0022 data-ipsquote-username=\u0022Nightside\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Nightside said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat problems would this solve?\n\u003C/p\u003E\n\u003Cp\u003E\nWould existing patches still work?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n1. Parts could now have spaces in the name, and SMURFF could shrink a lot.\n\u003C/p\u003E\n\u003Cp\u003E\n2. Yes, because scripts would have separate file format.\n\u003C/p\u003E\n"},{"CreatedByName":"Nightside","CreatedById":150244,"CreatedDateTime":"2020-06-24T20:12:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223808646\u0022 data-ipsquote-contentid=\u0022195007\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221593014371\u0022 data-ipsquote-userid=\u0022199337\u0022 data-ipsquote-username=\u0022Monniasza\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Monniasza said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n1. Parts could now have spaces in the name, and SMURFF could shrink a lot.\n\u003C/p\u003E\n\u003Cp\u003E\n2. Yes, because scripts would have separate file format.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n1a. \u00A0I thought this was a limitation of KSP?\n\u003C/p\u003E\n\u003Cp\u003E\n1b.\u00A0 This might be useful to me. I have a long neglected project (See \u0022Transmogrifier\u0022 in my sig) which is basically an add-on to SMURFF which resizes models to realistic dimensions and recalculates resource capacities as well.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n2. Oh, yeah. Good idea.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Monniasza","CreatedById":199337,"CreatedDateTime":"2020-08-02T10:18:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223808794\u0022 data-ipsquote-contentid=\u0022195007\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221593029526\u0022 data-ipsquote-userid=\u0022150244\u0022 data-ipsquote-username=\u0022Nightside\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/24/2020 at 10:12 PM, Nightside said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n1a. \u00A0I thought this was a limitation of KSP?\n\u003C/p\u003E\n\u003Cp\u003E\n1b.\u00A0 This might be useful to me. I have a long neglected project (See \u0022Transmogrifier\u0022 in my sig) which is basically an add-on to SMURFF which resizes models to realistic dimensions and recalculates resource capacities as well.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n2. Oh, yeah. Good idea.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nDo you have any plans for these scripts? I plan to use scripts extensively in LPG module of \u003Cabbr title=\u0022Single Stage to Orbit\u0022\u003ESSTO\u003C/abbr\u003E Project.\n\u003C/p\u003E\n"}]}