{"TopicId":52976,"ForumId":29,"TopicTitle":"Surface position calculations are off after returning from map view.","CreatedByName":"Scotti","CreatedById":83895,"CreatedDateTime":"2013-11-13T15:55:41Z","PageNum":1,"Articles":[{"CreatedByName":"Scotti","CreatedById":83895,"CreatedDateTime":"2013-11-13T15:55:41Z","Content":"\n\u003Cp\u003ESo I use the follow calculations in flight mode regular view to draw some stuff on the ground.\u003C/p\u003E\u003Cp\u003E \u003Cstrong\u003EVector3d surfaceNVector = vessel.mainBody.GetSurfaceNVector(geoCoord.Latitude.NormalAngle, geoCoord.Longitude.NormalAngle);\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E Vector3d surfaceVector3D = vessel.mainBody.position \u002B (vessel.mainBody.Radius * surfaceNVector);\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI press M to go into map view and then M again to return and now those numbers are way off. Why would they be so different after returning from map view? Everything still looks correct, just the surfaceVector3D is very different.\u003C/p\u003E\u003Cp\u003EExample. I\u0027m using DoubleConverter to fetch the whole double to string. I added vessel position in vector3 just to show that my ships position had not changed.\u003C/p\u003E\u003Cp\u003EBefore mapview.\u003C/p\u003E\u003Cp\u003Evessel.position= (1442.5, -46.4, -302.2)\u003C/p\u003E\u003Cp\u003Ebody.position= 129187.193202878246665932238101959228515625, -6156.2309592617975795292295515537261962890625, 686391.0464513562619686126708984375\u003C/p\u003E\u003Cp\u003ESurfaceNVector= -0.0887034059184583778545629684231244027614593505859375, 0.00578425817552570553647939277652767486870288848876953125, -0.9960412883690235030798021398368291556835174560546875\u003C/p\u003E\u003Cp\u003Ebody.Radius= 600000\u003C/p\u003E\u003Cp\u003ERadius * surfaceNVector= -53222.043551075024879537522792816162109375, 3470.55490531542318421998061239719390869140625, -597624.773021414061076939105987548828125\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EsurfaceVector3D= 75965.14965180322178639471530914306640625, -2685.67605394637439530924893915653228759765625, 88766.273429942200891673564910888671875\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAfter coming back from mapview.\u003C/p\u003E\u003Cp\u003Evessel.position= (1442.6, -46.4, -301.7)\u003C/p\u003E\u003Cp\u003Ebody.position= 121576.205192791647277772426605224609375, -5910.33500358540550223551690578460693359375, 687781.159533579251728951930999755859375\u003C/p\u003E\u003Cp\u003ESurfaceNVector= -0.202680362274793690602336937445215880870819091796875, 0.0098522251209750520695163089612833573482930660247802734375, -0.97919538622704094255055906614870764315128326416015625\u003C/p\u003E\u003Cp\u003Ebody.Radius= 600000\u003C/p\u003E\u003Cp\u003ERadius * surfaceNVector= -121608.21736487621092237532138824462890625, 5911.3350725850314120179973542690277099609375, -587517.2317362246103584766387939453125\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EsurfaceVector3D= -32.01217208456364460289478302001953125, 1.0000689996259097824804484844207763671875, 100263.927797354641370475292205810546875\u003C/strong\u003E\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2013-11-14T00:21:50Z","Content":"\n\u003Cp\u003EYou complain that you cannot save the data? Well, the reference frame can change quite a lot for whatever reason, and KSP is pretty flexible in that regard. FloatingOrigin (xy-offset), Krakensbane (velocity), planet rotation (did you know that usually, unity-kerbin only rotates once you are at least 100km above sea level?). My guess for your example would be planet rotation. So make sure to save your data in a format / with a reference frame you know and convert it via the current values or using a given converter when you need them.\u003C/p\u003E\n"},{"CreatedByName":"Scotti","CreatedById":83895,"CreatedDateTime":"2013-11-14T04:35:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003EYou complain that you cannot save the data? Well, the reference frame can change quite a lot for whatever reason, and KSP is pretty flexible in that regard. FloatingOrigin (xy-offset), Krakensbane (velocity), planet rotation (did you know that usually, unity-kerbin only rotates once you are at least 100km above sea level?). My guess for your example would be planet rotation. So make sure to save your data in a format / with a reference frame you know and convert it via the current values or using a given converter when you need them.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFaark,\u003C/p\u003E\u003Cp\u003EThanks for your reply. I\u0027ve very new to all of this so I really appreciate the assistance. \u003C/p\u003E\u003Cp\u003EThe difference in real time between going in and out of map view is about 5 seconds those numbers are updated every OnFixedUpdate I\u0027m not saving any data. From the camera point of view my marker was on the ground and now it looks like its right up by the vessel. I\u0027m not sure what I would use as a known reference. Also, I tried using CelestialBody.GetWorldSurfacePosition and the the same thing happens.\u003C/p\u003E\u003Cp\u003EMaybe a better question to ask is what is a reliable way given Lat, Long, to get a Vector3d that is relative to the world position of the vessel of that position on a bodies surface?\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2013-11-14T14:17:31Z","Content":"\n\u003Cp\u003EHave you tried CelestialBody\u0027s GetLatitude(pos), GetLongitude(pos), GetAltitude(pos) and GetWorldSurfacePosition(lat, lon, alt), respectively?\u003C/p\u003E\n"},{"CreatedByName":"EndlessWaves","CreatedById":41302,"CreatedDateTime":"2013-11-14T16:12:27Z","Content":"\n\u003Cp\u003EIt may be that your surface normal isn\u0027t reflecting terrain before you open map view and is afterwards (or vice versa).\u003C/p\u003E\u003Cp\u003EThe way I\u0027d get the Vector that passes between the vessel and the center of the body is to subtract the two positions from each other - i.e. vessel.position - vessel.mainBody.position (or vice versa depending on which way round you want the vector). Then scale as appropriate. It doesn\u0027t involve latitude and longitude though.\u003C/p\u003E\n"},{"CreatedByName":"Scotti","CreatedById":83895,"CreatedDateTime":"2013-11-15T03:24:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003EHave you tried CelestialBody\u0027s GetLatitude(pos), GetLongitude(pos), GetAltitude(pos) and GetWorldSurfacePosition(lat, lon, alt), respectively?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes. I started out with that and everything was working great until I hopped into and out of map view. ( Planetarium? ) Then I started Googling for snipits of example code and found out that calculation above basically generated the same numbers as GetWorldSurfacePostion(lat, lon, 0.0f).\u003C/p\u003E\n"},{"CreatedByName":"Scotti","CreatedById":83895,"CreatedDateTime":"2013-11-15T06:04:47Z","Content":"\n\u003Cp\u003EThank you Faark and EndlessWaves. I figured out what my issue was and it didn\u0027t have anything to do with any of the methods from CelestialBody. My issue was that I was using \u0022\u003Cstrong\u003ECamera.main\u003C/strong\u003E.WorldToScreenPoint()\u0022. It seems that jumping from Flight to Map view and back changes Camera.main to the UICamera instead of Camera 00. So I\u0027m now using \u0022FlightCamera.fetch.mainCamera\u0022 as my reference.\u003C/p\u003E\u003Cp\u003EFaark, you were right on in thinking that my issue could be the re-positioning of objects. During my debugging ( writing LOTS of traces ) I think I learned a lot about how Krakensbane might work. I can at least write what I think I learned for the benefit of others. Please let me know how close I get.\u003C/p\u003E\u003Cp\u003EVector3d surfaceNVector = vessel.mainBody.GetSurfaceNVector(geoCoord.Latitud e.NormalAngle, geoCoord.Longitude.NormalAngle);\u003C/p\u003E\u003Cp\u003EVector3d surfaceVector3D = vessel.mainBody.position \u002B (vessel.mainBody.Radius * surfaceNVector);\u003C/p\u003E\u003Cp\u003EsurfaceNVector is the relative direction to the surface where lat long is. Multiplying it by Radius takes you to the relative surface position of lat long. Adding it to body.position makes that relative position a world position.\u003C/p\u003E\u003Cp\u003Efrom time to time and when you jump in and out of map view. Krakensbane takes your vessel and makes it the center of the universe and re-positions everything around you to fit within Unity\u0027s Vector3 floats. Jumping into Map view seems to shrink or scale everything down so the entire solar system can fit within the Vector3. Which is why the ship position is reset when you return from it, I guess. This is why my my SurfaceVector3D reset to being straight below the vessel.\u003C/p\u003E\u003Cp\u003EWith all that said. It would be nice if Squad could create a Development Build with Script Debugging so we can set breakpoints and step through things. Being able to do that would have saved a lot of time. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThanks again y\u0027all.\u003C/p\u003E\n"}]}