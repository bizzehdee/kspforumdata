{"TopicId":88513,"ForumId":29,"TopicTitle":"Adding / removing MeshFilter nodes in the VAB?","CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2014-10-26T00:08:12Z","PageNum":1,"Articles":[{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2014-10-26T00:08:12Z","Content":"\n\u003Cp\u003EI\u0027m experimenting with a \u0022procedural parts\u0022 plugin, but instead of deforming a mesh to resize the part, I\u0027d like to add or remove meshes (defined with MODEL { } nodes, maybe?) from the part in the VAB. I\u0027ve found I can iterate over the list of MeshFilter parts with part.FindModelComponents\u0026lt;MeshFilter\u0026gt;(). Is there a way to add and remove objects from this list? The fallback option would be to include all of the possible MODEL { } nodes in the part, and then rescale hidden elements of the list (or is there a way to say \u0022skip drawing this mesh\u0022?). It\u0027s a new area of KSP modding code for me, so feedback would be welcome.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-26T04:04:22Z","Content":"\n\u003Cp\u003ENodes in files get converted to actual objects/components/etc once the PART{} is compiled into a Part. Yes, you can definitely add and remove MeshFilter components; I forget the exact code, but Unity docs should tell you how.\u003C/p\u003E\u003Cp\u003EJust how procedural do you want to get? Proc Fairings and Proc Parts actually generate the meshes, so you don\u0027t need to add and remove MeshFilters, just change their vertices and face lists.\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2014-10-26T12:38:47Z","Content":"\n\u003Cp\u003EI\u0027ve got a model that\u0027s broken up in \u0022top\u0022, \u0022bottom\u0022, and \u0022middle\u0022 pieces that are more complex than bezier curves can easily represent. Instead of having a continuous range of sizes, I want discrete steps. Ideally, for each step, I add/remove one of the middle meshes from the list in the part and reposition the other meshes \u0026amp; attach nodes. It might be that I can add/remove vertices from an existing mesh. That might be cheaper, since I can bake the vertex translations into the vertex positions when I add them, and Unity doesn\u0027t have to traverse additional transform matrices every draw call.\u003C/p\u003E\n"}]}