{"TopicId":63056,"ForumId":29,"TopicTitle":"How to find the transform of a part","CreatedByName":"Ishkur","CreatedById":102933,"CreatedDateTime":"2014-02-13T06:19:18Z","PageNum":1,"Articles":[{"CreatedByName":"Ishkur","CreatedById":102933,"CreatedDateTime":"2014-02-13T06:19:18Z","Content":"\n\u003Cp\u003EI am using empty gameobjects in unity to assign the attach nodes for my part. How do I get the transform object that I\u0027ve assigned to the part, without returning the transform of a different part\u0027s transform.\u003C/p\u003E\u003Cp\u003EMy current method of getting the transform:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic override void OnStart(StartState state)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tDebug.Log (GameObject.Find (\u0022topAttach\u0022).transform.position);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESure it works, but when there\u0027s multiple of these parts in play, I can\u0027t be sure I\u0027m getting the right transform of the corresponding part...\u003C/p\u003E\u003Cp\u003EOn a side note, do you know why I\u0027m getting two logs to console when I put the ship on the pad? Shouldn\u0027t it be called only once?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-13T06:23:28Z\u0022 title=\u002202/13/2014 06:23  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 13, 2014\u003C/time\u003E by Ishkur\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-02-13T06:50:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ishkur\u0022 data-cite=\u0022Ishkur\u0022\u003E\u003Cdiv\u003EI am using empty gameobjects in unity to assign the attach nodes for my part. How do I get the transform object that I\u0027ve assigned to the part\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you\u0027re looking for a particular transform in the Part\u0027s model hierarchy, there\u0027s Part.FindModelTransform and Part.FindHeirarchyTransform. There\u0027s also findAttachNode(string), although I seem to recall having some trouble getting that one to work in the past. Part.transform.Find may also work.\u003C/p\u003E\u003Cp\u003EJust in case you get thrown a curveball, something to check is whether the above will return transforms outside of the part\u0027s normal model hierarchy. For example, your part (near the top of the vessel tree) connected to a child octostrut. The octostrut doesn\u0027t have physics of its own* when attached to a parent that does, so it\u0027s possible that the above functions (minus perhaps findAttachNode) will also search the octostrut\u0027s model which is probably undesired. Using the part\u0027s prefab hierarchy instead should solve that if it does come up\u003C/p\u003E\u003Cp\u003E*has no rigidbody nor joint and instead its transform becomes a child of the part\u0027s transform\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-13T06:52:11Z\u0022 title=\u002202/13/2014 06:52  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 13, 2014\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003Cbr\u003EClarity\n\u003C/span\u003E\n"},{"CreatedByName":"Ishkur","CreatedById":102933,"CreatedDateTime":"2014-02-15T18:24:59Z","Content":"\n\u003Cp\u003EThanks a lot, part.FindModelTransform did it for me!\u003C/p\u003E\u003Cp\u003EFor some reason, though, I had to use underscore part.FindModelTransform rather than your suggested uppercase Part.FindModelTransform (there wasn\u0027t any code completion for the uppercase spelling).\u003C/p\u003E\u003Cp\u003EAny idea why that is? I would\u0027ve found the method myself if I had looked through the completion for part. rather than Part.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-02-15T18:43:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ishkur\u0022 data-cite=\u0022Ishkur\u0022\u003E\u003Cdiv\u003EThanks a lot, part.FindModelTransform did it for me!\u003Cp\u003EFor some reason, though, I had to use underscore part.FindModelTransform rather than your suggested uppercase Part.FindModelTransform (there wasn\u0027t any code completion for the uppercase spelling).\u003C/p\u003E\u003Cp\u003EAny idea why that is? I would\u0027ve found the method myself if I had looked through the completion for part. rather than Part.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, you found the right one. I specify the class name when describing a function because whatever you\u0027re working with might not have a variable named \u0022part\u0022 in scope (a simple MonoBehaviour working with a vessel, for example). Sorry if that caused any confusion. I\u0027ll try to be clearer in the future.\u003C/p\u003E\n"},{"CreatedByName":"Ishkur","CreatedById":102933,"CreatedDateTime":"2014-02-15T18:50:31Z","Content":"\n\u003Cp\u003EI think that\u0027s more my inexperience with code, since I still don\u0027t understand what you said haha.\u003C/p\u003E\u003Cp\u003EI don\u0027t have \u0022part\u0022 defined anywhere in my class, but it still worked for some reason.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace PartTesting\u003Cbr\u003E{\u003Cbr\u003E\tpublic class TestPart: PartModule\u003Cbr\u003E\t{\u003Cbr\u003E\t\tTransform axle;\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnStart(StartState state)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\taxle = part.FindModelTransform(\u0022axle\u0022);\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tpublic override void OnUpdate()\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tthis.transform.RotateAround(axle.position, Vector3.up, Time.deltaTime*20);\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-02-15T19:23:57Z","Content":"\n\u003Cp\u003EYour class inherits that variable (and lots of other variables and functions) from its base class PartModule, which itself inherits some variables and functions and so on\u003C/p\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2014-02-25T21:41:13Z","Content":"\n\u003Cp\u003EIf you are using Visual Studio then you can put the cursor on the word PartModule and hit f12 (Go to definition) and it will show you the whole class declaration (not the actual guts of the code but the data and function signatures of all the class members). You can use f12 on any variable, function, class or type name and it will show you the definition in context, e.g. if you put the cursor on the \u0022part\u0022 of \u0022this.part\u0022 and hit f12 it will show you the PartModule class (as that is where part is defined) and it will highlight the \u0022public Part part { get; set; }\u0022 line. So the part member variable is of the Part class. Doing f12 on \u0022Part\u0022 shows you the definition of the Part class allowing you to find all the handy functions...\u003C/p\u003E\n"}]}