{"TopicId":106498,"ForumId":29,"TopicTitle":"Is it o.k to extend a pre-existing partmodule?","CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2015-05-01T06:50:58Z","PageNum":1,"Articles":[{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2015-05-01T06:50:58Z","Content":"I am trying to write some code for the [heating management](https://forum.kerbalspaceprogram.com/threads/118189-1-0-Heat-Management-Heatsink-and-Radiator-parts-%28VERY-stockalike%29-Version-update-) mod. My initial approach was to extend the ModuleDeployableSolarPanel Module and adjust it so that it rotates itself parralell to the sun instead of perpendicular. After looking in the assembly browser I found a field called sunAOA, so I thought perfect, I\u0027ll just write a property for this that modifies it\u0027s value so that it rotates away from the sun. However, when I tried this nothing happened. the debug statements don\u0027t even show up. So now I\u0027m stuck and have no idea what i\u0027m doing wrong. any suggestions.\n\nHere is my code: \n\n    using System;using UnityEngine;namespace HeatManagement{    public class ModuleDeployableRadiator : ModuleDeployableSolarPanel    {//        public override void OnStart (StartState state)//        {//            print(\u0022TESTING\u0022);////        }        private float modSunAOA = 0;        public new float sunAOA        {            get            {                print (\u0022TESTING\u0022);                return modSunAOA;            }            set            {                print(\u0022[HEATMANAGER] sunAOA: \u0022 \u002B sunAOA);                modSunAOA = Math.Abs(value - 1);                print(\u0022[HEATMANAGER] value: \u0022 \u002B value);            }        }    }}\n\n- - - Updated - - -\n\nNew Development (pun intended)! I tried adding a kspField to the start of my property, just to see what would happen. I changed the GUI name so I could see if it worked and when I opened the right click menu It was still \u0022Sun Exposure\u0022, the old GUI name.\n\nnew code: \n\n    using System;using UnityEngine;namespace HeatManagement{    public class ModuleDeployableRadiator : ModuleDeployableSolarPanel    {//        public override void OnStart (StartState state)//        {//            print(\u0022TESTING\u0022);////        }        private float _sunAOA;        [KSPField (guiName = \u0022radiator occlusion\u0022, guiUnits = \u0022 \u0022, guiFormat = \u0022F2\u0022, guiActive = true)]        public new float sunAOA        {            get            {                print (\u0022TESTING\u0022);                return _sunAOA;            }            set            {                print(\u0022[HEATMANAGER] sunAOA: \u0022 \u002B sunAOA);                _sunAOA = Math.Abs(value - 1);                print(\u0022[HEATMANAGER] value: \u0022 \u002B value);            }        }    }}"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-05-01T07:08:59Z","Content":"Putting a Field tag on a property won\u0027t work is my experience."},{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2015-05-01T07:24:40Z","Content":"oh. any ideas on what I could do then?"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-05-01T07:38:53Z","Content":"1) Rename the module to your own name PartModule in the part cfg and add a RadiatorAoA entry\n\n2) something like this should work\n\n    [KSPField]public float RadiatorAoA;public override void OnStart(StartState state){    SunAOA = RadiatorAoA;}"}]}