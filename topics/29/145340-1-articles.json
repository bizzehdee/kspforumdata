{"TopicId":145340,"ForumId":29,"TopicTitle":"The Lifecycle of a Part Module - A Primer","CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-04T01:34:46Z","PageNum":1,"Articles":[{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-04T01:34:46Z","Content":"\n\u003Cp\u003E\nI\u0027ve answered a number of questions related to this in recent times, so I figured I\u0027d explain in detail the entire life cycle of a PartModule. \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EBirth\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhen parsing a part from the game database, KSP looks for \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EMODULE\u003C/span\u003E nodes to parse as part modules. \u00A0It looks for a \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003Ename = XXX\u003C/span\u003E value in the \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EMODULE\u003C/span\u003E node and tries to find a class that derives from \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EPartModule\u003C/span\u003E with that name. \u00A0If it finds one, it will attach an instance to the part\u0027s \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EGameObject\u003C/span\u003E (part modules are Unity components and can only exist attached to game objects). \u00A0The newly created module will then be added to the part\u0027s module list. \u00A0\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003ELoad(ConfigNode)\u003C/span\u003E will be called on the module with that node. \u00A0This loads any fields with the \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003E[KSPField]\u003C/span\u003E attribute automatically, and calls \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnLoad(ConfigNode)\u003C/span\u003E with the same node to allow parsing of any custom data.\n\u003C/p\u003E\n\u003Cp\u003E\nKSP stores the part (and its modules) as what\u0027s called a prefab - any time the part actually needs to exist in the game, this prefab is copied.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EInstantiation in the Editor\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhen adding a part the the editor, KSP will instantiate (copy) the part prefab. \u00A0In order to do this, Unity serializes the entire part and then deserializes it as a new instance (see\u00A0\u003Ca href=\u0022https://docs.unity3d.com/Manual/script-Serialization.html\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E\u00A0for more information on serialization in Unity). \u00A0This is often a source of grief with part modules because custom data frequently does not get serialized (brief note on this below, I will dive into more depth on this issue in a future post)\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nUnity\u0027s docs say that it will serialize any custom type with the [Serializable] attribute, but that\u0027s not strictly true. \u00A0It also must be present when Unity starts, which means that anything in a KSP mod assembly does not work because KSP loads mod assemblies dynamically.\n\u003C/p\u003E\n\u003Cp\u003E\nPotential workarounds are (1) Serialize data yourself by implementing ISerializationCallbackReceiver (store it in a string or something else) (2) Derive from MonoBehaviour or ScriptableObject, which Unity will serialize regardless (3) Store the relevant objects outside the part module then copy them back when a new instance is created (4) Save the original ConfigNode (either on the module as a string or off the module as a \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EConfigNode\u003C/span\u003E and load it later\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nOnce all the editor setup is done, the part\u0027s \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EStart\u003C/span\u003E method will call the module\u0027s \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnStart\u003C/span\u003E method, then Unity will call the module\u0027s \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EStart\u003C/span\u003E method.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ELife in the Editor\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnUpdate\u003C/span\u003E will be called by the part and Update by Unity every visual frame. \u00A0\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnFixedUpdate\u003C/span\u003E and \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EFixedUpdate\u003C/span\u003E the same every physics frame (even though there\u0027s no physics in the editor).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EEditor Copy\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe user may copy an existing part in the editor or change the symmetry mode. \u00A0Either way, KSP makes a copy of the existing part. \u00A0Instead of copying the prefab as before, KSP will instantiate the existing part instance. \u00A0The same serialization rules apply.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EEditor Save\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhen the craft is saved in the editor, \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003ESave\u003C/span\u003E is called on each part module to save its state. \u00A0Save writes any \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EKSPField\u003C/span\u003E with \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EisPersistent = true\u003C/span\u003E to the saved node, saves data about events and action groups, and calles \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnSave\u003C/span\u003E, which can be used to save any custom data\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EEditor Death\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhen the part is removed in the editor (or a new craft is loaded) the part and all its modules are destroyed completely. \u00A0No data that wasn\u0027t already saved will survive.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003ECreation in Flight\u003C/b\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis behaves very similar to creation in the editor. \u00A0The part prefab is instantiated (again, by serializing and deserializing), \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003ELoad\u003C/span\u003E is called with any saved data (which again calls \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnLoad\u003C/span\u003E to do any custom loading), \u00A0\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnStart\u003C/span\u003E is called by the part, then \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EStart\u003C/span\u003E by Unity once everything is set up.\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s one odd case of this, and that is when dealing with the root part of a vessel already in flight. \u00A0KSP does instantiate the part prefab (and by extension its modules), but then copies its fields to a new part with new modules. \u00A0I\u0027m not sure why this is done and it usually doesn\u0027t matter, but still something that can cause occasional issues.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ELife in Flight\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnUpdate\u003C/span\u003E will be called by the part and Update by Unity every visual frame. \u00A0\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EFixedUpdate\u003C/span\u003E will be called every physics frame, and \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnFixedUpdate\u003C/span\u003E will be called every physics frame once the part has been activated (i.e. staged).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EFlight Save\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBasically the same as in the editor, \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003ESave\u003C/span\u003E is called on each part module, which writes any \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EKSPField\u003C/span\u003E with \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EisPersistent = true\u003C/span\u003E to the saved node, saves data about events and action groups, and calles \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnSave\u003C/span\u003E, which can be used to save any custom data\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EEditor Death\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhen the flight scene is exited, the craft goes out of physics range, or the part explodes, the part is destroyed completely, along with all of its modules.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve probably missed some stuff here, so feel free to ask questions etc.\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2016-08-05T15:46:26Z","Content":"\n\u003Cp\u003E\nAlso note that OnStart is called after Load, so all persistent KSPFields are already parsed for OnStart.\n\u003C/p\u003E\n\u003Cp\u003E\nThere is an OnAwake method that is called before all of the loading steps, in case you want to do something before loading. Just be careful not to use the standard Unity Awake method, that would hide the base module\u0027s Awake and screw things up. I don\u0027t think there is a base Start method, but you are probably better off using OnStart in most cases.\n\u003C/p\u003E\n\u003Cp\u003E\nThe persistent\u00A0KSPFields are saved and loaded \u003Cem\u003Ebefore\u00A0\u003C/em\u003EOnLoad and OnSave are called. So if you want to change anything for those values in OnSave you\u0027ll either have to directly modify the config node, or use your own fields.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd there is also the LateUpdate method, called each frame after all Update calls have been made. I don\u0027t think there is an OnLateUpdate method, just the standard Unity method.\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-08-06T01:04:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222705709\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470411986\u0022 data-ipsquote-userid=\u002257416\u0022 data-ipsquote-username=\u0022DMagic\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, DMagic said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nthat would hide the base module\u0027s Awake\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nStart/Update/FixedUpdate/OnDestroy are all safe, it\u0027s just Awake that you need to steer clear of AFAIK.\u003Cbr\u003E\nIt\u0027s also worth bearing in mind that The On\u0026lt;*\u0026gt;Update methods are only called when a part is activated (staged in most cases) while Update/FixedUpdate are always functional\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-06T17:31:50Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222706382\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470445449\u0022 data-ipsquote-userid=\u002292871\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, Crzyrndm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nStart/Update/FixedUpdate/OnDestroy are all safe, it\u0027s just Awake that you need to steer clear of AFAIK.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRight, because PartModule actually uses the Awake() method. \u00A0Fortunately it provides an OnAwake() method which you can override (and is just called by Awake() )\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222706382\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470445449\u0022 data-ipsquote-userid=\u002292871\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, Crzyrndm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s also worth bearing in mind that The On\u0026lt;*\u0026gt;Update methods are only called when a part is activated (staged in most cases) while Update/FixedUpdate are always functional\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think this is true for OnFixedUpdate but OnUpdate is called regardless.\n\u003C/p\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-08-06T19:56:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222707142\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470504710\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nRight, because PartModule actually uses the Awake() method. \u00A0Fortunately it provides an OnAwake() method which you can override (and is just called by Awake() )\n\u003C/p\u003E\n\u003Cp\u003E\nI think this is true for OnFixedUpdate but OnUpdate is called regardless.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPartModule.OnUpdate is only called if the PartModule is Enabled. This does not occur in the Editor for one.\u003Cbr\u003E\nI believe the same goes for PartModule.OnFixedUpdate\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-06T19:58:12Z\u0022 title=\u002208/06/2016 07:58  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 6, 2016\u003C/time\u003E by JPLRepo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-06T20:14:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222707312\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470513417\u0022 data-ipsquote-userid=\u0022114736\u0022 data-ipsquote-username=\u0022JPLRepo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, JPLRepo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPartModule.OnUpdate is only called if the PartModule is Enabled. This does not occur in the Editor for one.\u003Cbr\u003E\nI believe the same goes for PartModule.OnFixedUpdate\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EisEnabled \u003C/span\u003Eis true in the editor. \u00A0It\u0027s mostly just used for completely disabling certain modules, e.g. \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EMultiModeEngine \u003C/span\u003Edisables the inactive engine module. \u00A0Both \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnUpdate \u003C/span\u003Eand \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnFixedUpdate \u003C/span\u003Ewill only fire if isEnabled is true, but\u00A0\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnFixedUpdate \u003C/span\u003Ehas another check of \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003Epart.state == PartStates.ACTIVE\u003C/span\u003E.\n\u003C/p\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-08-06T20:16:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222707338\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470514485\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EisEnabled \u003C/span\u003Eis true in the editor. \u00A0It\u0027s mostly just used for completely disabling certain modules, e.g. \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EMultiModeEngine \u003C/span\u003Edisables the inactive engine module. \u00A0Both \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnUpdate \u003C/span\u003Eand \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnFixedUpdate \u003C/span\u003Ewill only fire if isEnabled is true, but\u00A0\u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnFixedUpdate \u003C/span\u003Ehas another check of \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003Epart.state == PartStates.ACTIVE\u003C/span\u003E.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInteresting. I had a PartModule that was definitely not Enabled in the editor and was not running OnUpdate.\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2016-08-09T02:16:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222705709\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470411986\u0022 data-ipsquote-userid=\u002257416\u0022 data-ipsquote-username=\u0022DMagic\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 8/5/2016 at 9:46 AM, DMagic said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAlso note that OnStart is called after Load, so all persistent KSPFields are already parsed for OnStart\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI will caution that this needs testing, I\u0027ve run into inconsistent behavior where sometimes Load runs then Start, and sometimes Start runs then Load depending on which mode (Editor/Flight) you are in.\n\u003C/p\u003E\n\u003Cp\u003E\nThis may have been on a KSPAddon instead of a PartModule also, but as they are so similar it is something to be aware of.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-09T04:54:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222710252\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470708961\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI will caution that this needs testing, I\u0027ve run into inconsistent behavior where sometimes Load runs then Start, and sometimes Start runs then Load depending on which mode (Editor/Flight) you are in.\n\u003C/p\u003E\n\u003Cp\u003E\nThis may have been on a KSPAddon instead of a PartModule also, but as they are so similar it is something to be aware of.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis has been pretty consistent with PartModules in my experience. \u00A0If Load is called at all, it is before Start. \u00A0Load isn\u0027t called in the case when you\u0027re creating a new part in the editor from the part catalog.\n\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2016-08-19T19:55:34Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222703622\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221470274486\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 4.8.2016 at 3:34 AM, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis loads any fields with the \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003E[KSPField]\u003C/span\u003E attribute automatically, and calls \u003Cspan style=\u0022font-family:\u0027courier new\u0027, courier, monospace;\u0022\u003EOnLoad(ConfigNode)\u003C/span\u003E with the same node to allow parsing of any custom data.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cs\u003EI\u0027d like to execute code on the prefab before parts are copied from it. In my tests with the TweakScale partModule it looks like OnLoad is not called in the editor. I put a simple debug output at the start of the method and it appears in flight (so I guess that OnLoad is declared correctly) but not in the editor. Am I doing something wrong?\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003ESource: \u003Ca href=\u0022https://github.com/pellinor0/TweakScale/blob/master/Scale.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pellinor0/TweakScale/blob/master/Scale.cs\u003C/a\u003E\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cs\u003EThe code already postpones its setup to OnStart when in the editor, so this behavior is probably not new.\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: Found it, earlier in the log than expected. And the one from the flight scene is probably for loading the persistent data from the craft file. Slowly things start to make sense...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-19T20:10:08Z\u0022 title=\u002208/19/2016 08:10  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 19, 2016\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-19T20:30:11Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/85299-pellinor/\u0026amp;do=hovercard\u0022 data-mentionid=\u002285299\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/85299-pellinor/\u0022 rel=\u0022\u0022\u003E@pellinor\u003C/a\u003E\u00A0Yep, sounds like you mostly figured it out. \u00A0Load/OnLoad may not be called in the editor at all, depending on whether the part is freshly created or from a craft/subassembly. \u00A0In flight, it will be called to load data from the saved craft.\n\u003C/p\u003E\n\u003Cp\u003E\nFor code I want to run on the prefab (e.g. icon setup), I usually use OnLoad, but have some code to detect whether it\u0027s being run on the prefab or not. \u00A0At that point in the part\u0027s life, part.partInfo will be null (though that\u0027s not the only way to check).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-19T20:33:31Z\u0022 title=\u002208/19/2016 08:33  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 19, 2016\u003C/time\u003E by blowfish\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Van Disaster","CreatedById":58876,"CreatedDateTime":"2016-08-19T21:24:14Z","Content":"\n\u003Cp\u003E\nCopying seems to call OnInitialize(), is there anywhere else?\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-19T22:10:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222722748\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471641854\u0022 data-ipsquote-userid=\u002258876\u0022 data-ipsquote-username=\u0022Van Disaster\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n44 minutes ago, Van Disaster said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCopying seems to call OnInitialize(), is there anywhere else?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt seems to be called any time a part is created in the editor or in flight (but only after the entire vessel is loaded if loading a vessel). \u00A0I haven\u0027t tested extensively though, so I could be wrong about this.\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2016-08-20T00:47:53Z","Content":"\n\u003Cp\u003E\nI realized something interesting\u00A0while playing around with using RESOURCE nodes and ModuleResource to handle all resource usage for my parts. Whenever a new part is spawned in the editor or loaded during flight, it is instantiated from the prefab (obviously...), the interesting part is that this clones the prefab\u0027s Part Modules and carries along all public fields to the new part.\n\u003C/p\u003E\n\u003Cp\u003E\nKSPFields, obviously get cloned, but also, any public field will get cloned.\n\u003C/p\u003E\n\u003Cp\u003E\nFor instance, I was adding RESOURCE nodes directly to the SCANsat module\u0027s in the config files and loading the data in OnLoad:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleResource\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E resourceInputs = new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleResource\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n  \npublic override void OnLoad(ConfigNode node)\n\t\t{\n\t\t\tif (node.HasNode(\u0022RESOURCE\u0022))\n\t\t\t\tresourceInputs = new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;ModuleResource\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n\t\t\telse\n\t\t\t\treturn;\n\n\t\t\tConfigNode[] resources = node.GetNodes(\u0022RESOURCE\u0022);\n\n\t\t\tint l = resources.Length;\n\n\t\t\tfor (int i = 0; i \u0026lt; l; i\u002B\u002B)\n\t\t\t{\n\t\t\t\tConfigNode resource = resources[i];\n\t\t\t\tModuleResource mod = new ModuleResource();\n\t\t\t\tmod.Load(resource);\n\t\t\t\tresourceInputs.Add(mod);\n\t\t\t}\n\t\t}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWhen OnLoad is run for the prefab it loads its data directly from the config file, which has a module like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\tMODULE\n\t{\n\t\tname = SCANsat\n\t\t...\n\t\tRESOURCE\n\t\t{\n\t\t\tname = ElectricCharge\n\t\t\trate = 0.4\n\t\t}\n\t}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSo it sees the RESOURCE node and populates the ModuleResource list. But that RESOURCE node is never saved to the persistent file, or in a craft\u00A0file (unless you manually save it), so the resourceInputs list is only ever set when loading the prefab, not when spawning a new part. If you set that list to private it doesn\u0027t work anymore, so only public fields can be cloned.\n\u003C/p\u003E\n\u003Cp\u003E\nI guess it\u0027s sort of obvious if you are familiar with cloning and how Unity instantiates game objects. But since a lot us probably aren\u0027t so familiar with that it could be useful information. And it sort of relates to the order of PartModule methods, since the prefab OnLoad can be thought of as a different, earlier version of OnLoad for an active vessel.\n\u003C/p\u003E\n\u003Cp\u003E\nJust to be clear, the ConfigNode that is being passed to the OnLoad method comes from the .cfg file for the part when loading the prefab, and it comes from the save file when loading a vessel with that part. The only fields that are written to the save file are KSPFields with IsPersistent = true, and anything that you manually save.\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-20T02:54:17Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57416-dmagic/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257416\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57416-dmagic/\u0022 rel=\u0022\u0022\u003E@DMagic\u003C/a\u003E\u00A0Correct, any public field of a type that Unity can serialize will be copied from the prefab to the instantiated part/module. \u00A0This actually has nothing to do with KSPField, it\u0027s all Unity\u0027s serialization. \u00A0If you don\u0027t want it serialized, you can mark the field [NonSerialized] ... similarly, if you want it to serialize a private field you can mark it [SerializeField]\n\u003C/p\u003E\n"},{"CreatedByName":"Van Disaster","CreatedById":58876,"CreatedDateTime":"2016-08-20T05:36:49Z","Content":"\n\u003Cp\u003E\nThere are some unserializeable things which get copied too when there\u0027s a clone, I noticed - Material is one that comes to mind, which has a method specifically for copying values - so somewhere in there is something extra, I think.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-20T05:37:37Z\u0022 title=\u002208/20/2016 05:37  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 20, 2016\u003C/time\u003E by Van Disaster\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-20T07:18:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222723162\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471671409\u0022 data-ipsquote-userid=\u002258876\u0022 data-ipsquote-username=\u0022Van Disaster\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Van Disaster said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere are some unserializeable things which get copied too when there\u0027s a clone, I noticed - Material is one that comes to mind, which has a method specifically for copying values - so somewhere in there is something extra, I think.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMaterial derives from UnityEngine.Object, meaning that it\u0027s serializable. \u00A0There are weird cases like Vector3 where Unity\u0027s documentation doesn\u0027t necessarily say explicitly that it\u0027s serializable but it is. \u00A0I think as a general rule most built-in Unity types are serializable, however.\n\u003C/p\u003E\n"},{"CreatedByName":"Van Disaster","CreatedById":58876,"CreatedDateTime":"2016-08-20T08:34:15Z","Content":"\n\u003Cp\u003E\nHmm, OK - VS explicitly tells me UnityEngine.Material isn\u0027t serializable, but the chance of me having a setup issue there is probably high.\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-08-20T14:51:40Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222723230\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471682055\u0022 data-ipsquote-userid=\u002258876\u0022 data-ipsquote-username=\u0022Van Disaster\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, Van Disaster said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHmm, OK - VS explicitly tells me UnityEngine.Material isn\u0027t serializable, but the chance of me having a setup issue there is probably high.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n.NET has its own serialization system, and under that Material\u00A0isn\u0027t serializable (since it doesn\u0027t have the [Serializable] attribute). \u00A0Unity\u0027s serialization system is completely separate, and I would be surprised if VS knew anything about it.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-20T14:55:43Z\u0022 title=\u002208/20/2016 02:55  PM\u0022 data-short=\u00227 yr\u0022\u003EAugust 20, 2016\u003C/time\u003E by blowfish\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Van Disaster","CreatedById":58876,"CreatedDateTime":"2016-08-22T07:22:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222722800\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221471644618\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 19/08/2016 at 11:10 PM, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt seems to be called any time a part is created in the editor or in flight (but only after the entire vessel is loaded if loading a vessel). \u00A0I haven\u0027t tested extensively though, so I could be wrong about this.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUsually called after Awake() - loading a craft into the flight scene ( well the active craft ) seems to call it twice, one after Awake() \u0026amp; one after the ship is placed. Called between OnLoad() \u0026amp; OnSave() when loading a saved craft into the editor.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-08-22T10:10:10Z\u0022 title=\u002208/22/2016 10:10  AM\u0022 data-short=\u00227 yr\u0022\u003EAugust 22, 2016\u003C/time\u003E by Van Disaster\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Sigma88","CreatedById":113260,"CreatedDateTime":"2017-11-15T12:43:33Z","Content":"\n\u003Cp\u003E\nI am trying to write a partmodule and I am having problems saving the node\n\u003C/p\u003E\n\u003Cp\u003E\nduring OnLoad I read the node and store the data on \u00A0public ConfigNode of the module (this.node)\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem is that the information is not there anymore at OnSave\n\u003C/p\u003E\n\u003Cp\u003E\nIf i print the this.node it is empty\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhat should I do to keep a field retain its value between OnLoad and OnSave?\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2017-11-15T16:37:00Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223219861\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221510749813\u0022 data-ipsquote-userid=\u0022113260\u0022 data-ipsquote-username=\u0022Sigma88\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Sigma88 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI am trying to write a partmodule and I am having problems saving the node\n\u003C/p\u003E\n\u003Cp\u003E\nduring OnLoad I read the node and store the data on \u00A0public ConfigNode of the module (this.node)\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem is that the information is not there anymore at OnSave\n\u003C/p\u003E\n\u003Cp\u003E\nIf i print the this.node it is empty\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhat should I do to keep a field retain its value between OnLoad and OnSave?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe idea is that information will be stored in instance variables between the two (loaded into instance variables from the node in OnLoad, and then saved back into the node in OnSave).\u00A0 For KSPField fields, it will only save those with isPersistent = true (i.e. those that might be modified by user actions)\n\u003C/p\u003E\n"},{"CreatedByName":"Sigma88","CreatedById":113260,"CreatedDateTime":"2017-11-15T16:40:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223220004\u0022 data-ipsquote-contentid=\u0022145340\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221510763820\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe idea is that information will be stored in instance variables between the two (loaded into instance variables from the node in OnLoad, and then saved back into the node in OnSave).\u00A0 For KSPField fields, it will only save those with isPersistent = true (i.e. those that might be modified by user actions)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI solved by generating a static database of objects, they are too complicated to be saved on cfg\n\u003C/p\u003E\n"}]}