{"TopicId":138529,"ForumId":29,"TopicTitle":"Orbit state vectors not reproducible?","CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2016-04-30T08:00:30Z","PageNum":1,"Articles":[{"CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2016-04-30T08:00:30Z","Content":"\n\u003Cp\u003E\nI found something weird when trying to debug a new feature in Custom Asteroids (\u003Ca href=\u0022https://github.com/Starstrider42/Custom-Asteroids/issues/26\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Starstrider42/Custom-Asteroids/issues/26\u003C/a\u003E). Can somebody explain this to me?\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nLoad Custom Asteroids with the following config only:\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nAsteroidSets\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0\u00A0\u00A0 ASTEROIDGROUP\u003Cbr\u003E\n\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0name = xy\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0title = X-Y Plane\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0centralBody = Sun\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0spawnRate = 1.0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0orbitSize\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0type = SemimajorAxis\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0min\u00A0 = Ratio(Jool.sma, 0.9)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0max\u00A0 = Ratio(Jool.sma, 0.9)\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0inclination\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0avg = 0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0periapsis\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0type = Longitude\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0min = 90.0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0max = 90.0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0ascNode\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0min = 90.0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0max = 90.0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0orbitPhase\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0type = MeanLongitude\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0epoch = Now\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0min = 0.0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0max = 0.0\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n}\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n(For those not familiar with CA config syntax, this creates asteroids on a fixed orbit, always spawning at the same place).\n\u003C/p\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cp\u003E\nStart a new KSP (1.1.0) game and let the spawner log the orbital elements and state vectors of new asteroids:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\norbit: a = 61896183895.8152 m, e = 0, i = 0, argPe = 0, lAn = 90, mEp = -1.5707963267949 at epoch 84989.5893112183\u003Cbr\u003E\nUT = 84989.5893112183\u003Cbr\u003E\nx_0 (relativePositionAtUT) = [-39771554371.5685, 47427429233.872, 0]\u003Cbr\u003E\nv_0 (orbitalVelocityAtUT) = [-3334.71870588347, -2796.41900991061, 0]\u003Cbr\u003E\nx_0 (positionAtUT) = [-48493074463.4069, 1014.90997314453, 57861748376.7216]\u003Cbr\u003E\nx_0 (truePositionAtUT) = [-48493074463.4069, 1014.90997314453, 57861748376.7216]\u003Cbr\u003E\nv_0 (frameVelAtUT) = [-3334.71870588347, -2796.41900991061, 0]\n\u003C/p\u003E\n\u003Cp\u003E\norbit: a = 61896183895.8152 m, e = 0, i = 0, argPe = 0, lAn = 90, mEp = -1.5707963267949 at epoch 219281.928708191\u003Cbr\u003E\nUT = 219281.928708191\u003Cbr\u003E\nx_0 (relativePositionAtUT) = [-39771554371.5685, 47427429233.872, 0]\u003Cbr\u003E\nv_0 (orbitalVelocityAtUT) = [-3334.71870588347, -2796.41900991061, 0]\u003Cbr\u003E\nx_0 (positionAtUT) = [-48493074463.4069, 1014.90997314453, 57861748376.7216]\u003Cbr\u003E\nx_0 (truePositionAtUT) = [-48493074463.4069, 1014.90997314453, 57861748376.7216]\u003Cbr\u003E\nv_0 (frameVelAtUT) = [-3334.71870588347, -2796.41900991061, 0]\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cp\u003E\nExit KSP, restart KSP, load the game from step 2, and let some more asteroids spawn:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\norbit: a = 61896183895.8152 m, e = 0, i = 0, argPe = 0, lAn = 90, mEp = -1.5707963267949 at epoch 330370.966731021\u003Cbr\u003E\nUT = 330370.966731021\u003Cbr\u003E\nx_0 (relativePositionAtUT) = [39152943915.2026, -47939384264.2724, 0]\u003Cbr\u003E\nv_0 (orbitalVelocityAtUT) = [3370.71554502888, 2752.92296311742, 0]\u003Cbr\u003E\nx_0 (positionAtUT) = [49392906256.6498, 1014.90997314453, -56890084838.7397]\u003Cbr\u003E\nx_0 (truePositionAtUT) = [49392906256.6498, 1014.90997314453, -56890084838.7397]\u003Cbr\u003E\nv_0 (frameVelAtUT) = [3370.71554502888, 2752.92296311742, 0]\n\u003C/p\u003E\n\u003Cp\u003E\norbit: a = 61896183895.8152 m, e = 0, i = 0, argPe = 0, lAn = 90, mEp = -1.5707963267949 at epoch 455458.894602115\u003Cbr\u003E\nUT = 455458.894602115\u003Cbr\u003E\nx_0 (relativePositionAtUT) = [39152943915.2026, -47939384264.2724, 0]\u003Cbr\u003E\nv_0 (orbitalVelocityAtUT) = [3370.71554502888, 2752.92296311742, 0]\u003Cbr\u003E\nx_0 (positionAtUT) = [49392906256.6498, 1014.90997314453, -56890084838.7397]\u003Cbr\u003E\nx_0 (truePositionAtUT) = [49392906256.6498, 1014.90997314453, -56890084838.7397]\u003Cbr\u003E\nv_0 (frameVelAtUT) = [3370.71554502888, 2752.92296311742, 0]\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/li\u003E\n\u003C/ol\u003E\u003Cp\u003E\nThe tracking station shows the asteroids spawning on the same orbit in the same spot. The orbital elements are identical. Yet the state vectors have not only absolute values different by about a percent, but OPPOSITE SIGNS in the two sessions. Why is this?\n\u003C/p\u003E\n\u003Cp\u003E\nIn case anybody wants it, the code behind the logging:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\ndouble\u00A0ut\u00A0=\u00A0Planetarium.GetUniversalTime();\u003Cbr\u003E\nVector3d\u00A0x\u00A0=\u00A0orbit.getRelativePositionAtUT(ut);\u003Cbr\u003E\nVector3d\u00A0v\u00A0=\u00A0orbit.getOrbitalVelocityAtUT(ut);\u003Cbr\u003E\u003Cbr\u003E\nDebug.Log(\u0022Transforming\u00A0orbit\u00A0from\u00A0frame\u00A0\u0022\u00A0\u002B\u00A0plane);\u003Cbr\u003E\nDebug.Log(\u0022orbit:\u00A0a\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.semiMajorAxis\u00A0\u002B\u00A0\u0022\u00A0m,\u00A0e\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.eccentricity\u00A0\u002B\u00A0\u0022,\u00A0i\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.inclination\u003Cbr\u003E\n\u00A0\u00A0\u00A0 \u002B\u00A0\u0022,\u00A0argPe\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.argumentOfPeriapsis\u00A0\u002B\u00A0\u0022,\u00A0lAn\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.LAN\u00A0\u002B\u00A0\u0022,\u00A0mEp\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.meanAnomalyAtEpoch\u00A0\u002B\u00A0\u0022\u00A0at\u00A0epoch\u00A0\u0022\u00A0\u002B\u00A0orbit.epoch);\u003Cbr\u003E\nDebug.Log(\u0022UT\u00A0=\u00A0\u0022\u00A0\u002B\u00A0ut);\u003Cbr\u003E\nDebug.Log(\u0022x_0\u00A0(relativePositionAtUT)\u00A0=\u00A0\u0022\u00A0\u002B\u00A0x);\u003Cbr\u003E\nDebug.Log(\u0022v_0\u00A0(orbitalVelocityAtUT)\u00A0=\u00A0\u0022\u00A0\u002B\u00A0v);\u003Cbr\u003E\nDebug.Log(\u0022x_0\u00A0(positionAtUT)\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.getPositionAtUT(ut));\u003Cbr\u003E\nDebug.Log(\u0022x_0\u00A0(truePositionAtUT)\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.getTruePositionAtUT(ut));\u003Cbr\u003E\nDebug.Log(\u0022v_0\u00A0(frameVelAtUT)\u00A0=\u00A0\u0022\u00A0\u002B\u00A0orbit.GetFrameVelAtUT(ut));\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-30T08:05:02Z\u0022 title=\u002204/30/2016 08:05  AM\u0022 data-short=\u00228 yr\u0022\u003EApril 30, 2016\u003C/time\u003E by Starstrider42\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2016-05-04T06:04:56Z","Content":"\n\u003Cp\u003E\nFor those who might stumble across this post later:\n\u003C/p\u003E\n\u003Cp\u003E\nIt turns out that, while the coordinates do change between game instances, KSP always handles them self-consistently in the sense that the statement\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\norbit.UpdateFromStateVectors(orbit.getRelativePositionAtUT(ut), orbit.getOrbitalVelocityAtUT(ut), orbit.referenceBody, ut);\u003C/pre\u003E\n\u003Cp\u003E\nnever changes the orbit. However, the coordinates are in the frame given by Planetarium.ZupRotation, so any attempts to transform those coordinates need to include rotations by ZupRotation and/or its inverse.\n\u003C/p\u003E\n"}]}