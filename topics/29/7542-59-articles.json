{"TopicId":7542,"ForumId":29,"TopicTitle":"The official unoffical \u0026quot;help a fellow plugin developer\u0026quot; thread","CreatedByName":"Cephei","CreatedById":2555,"CreatedDateTime":"2012-03-04T10:02:40Z","PageNum":59,"Articles":[{"CreatedByName":"Kobymaru","CreatedById":107372,"CreatedDateTime":"2014-12-20T15:05:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nlight\u0022 data-cite=\u0022nlight\u0022\u003E\u003Cdiv\u003EDon\u0027t even think twice about this, compiling C# projects is much easier than C\u002B\u002B ones, so you\u0027ll have no issues \u003Cp\u003E...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EAs you are familiar with programming already, the quick and dirty setup method:\u003Cp\u003E...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EI come from Java and the transition was not hard. C# is mostly Java done right \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003Cp\u003E... Have a look at the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/94638-New-Mod-Development-Links-Compilation\u0022 rel=\u0022external nofollow\u0022\u003ELink Compilation\u003C/a\u003E post and you ll find some example and tutorials near the end of the first post.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks a lot for your help, guys! Turns out the \u0022recompiling\u0022 part is \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/93685-0-24-0-25-Trajectories-v1-0-0-%282014-11-17%29-atmospheric-predictions-FAR-NEAR?p=1616810\u0026amp;viewfull=1#post1616810\u0022 rel=\u0022external nofollow\u0022\u003Epretty easy\u003C/a\u003E. Now I just have to get me going in the Unity/KSP API world, but I\u0027ll figure that out, I hope.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-20T15:12:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Robotengineer\u0022 data-cite=\u0022Robotengineer\u0022\u003E\u003Cdiv\u003EHow do I use ConfigNode.Load()?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou don\u0027t say what you are wanting to do exactly, so this is the way I use ConfigNode.Load is to save/load a file from disk to persist data.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E ConfigNode TWR1Node = ConfigNode.Load(KSPUtil.ApplicationRootPath \u002B \u0022GameData/Diazo/TWR1/TWR1.cfg\u0022); //load file\u003Cbr\u003E\u003Cbr\u003Eand\u003Cbr\u003E\u003Cbr\u003ETWR1Node.Save(KSPUtil.ApplicationRootPath \u002B \u0022GameData/Diazo/TWR1/TWR1.cfg\u0022); //save the ConfigNode to disk\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis requires the KSO.IO namepspace, so add \u0022using KSP.IO;\u0022 to the start of your .cs file.\u003C/p\u003E\u003Cp\u003ENote that in this case. TWR1.cfg can never be empty. Always add a dummy value when you create the config node because if you try to ConfigNode.Load an empty file, KSP throws a critical error and does not load it.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/SirDiazo/TWR1/blob/master/TWR1/TWR1.cs#L180\u0022 rel=\u0022external nofollow\u0022\u003EHere\u0027s my source code using it.\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EHope that helps,\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-20T15:15:00Z\u0022 title=\u002212/20/2014 03:15  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 20, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Robotengineer","CreatedById":104525,"CreatedDateTime":"2014-12-20T17:08:07Z","Content":"\n\u003Cp\u003EThanks, I\u0027ll try that.\u003C/p\u003E\n"},{"CreatedByName":"Alewx","CreatedById":102791,"CreatedDateTime":"2014-12-21T14:41:32Z","Content":"\n\u003Cp\u003EHeyho everyone,\u003C/p\u003E\u003Cp\u003EWith 0.9 there were a lot of changes.\u003C/p\u003E\u003Cp\u003EAnd one of the things that worked before was the \u0022Click Through Prevention\u0022.\u003C/p\u003E\u003Cp\u003EWith 0.9 the old EditorLogic.fetch.lock, has become obsolete and the InputLockManager got focused.\u003C/p\u003E\u003Cp\u003EBut after fooling around with it for the night and half day. I must say, it is nolonger possible with it to prevent the release of a selected part.\u003C/p\u003E\u003Cp\u003EI can lock a GUI.window so that it does prevents clicking at a part behind it, but I\u0027m not able to prevent the clicking in the same window for release a selected part.\u003C/p\u003E\u003Cp\u003EMy question, is the feature just gone, or is there a Workaround, or didn\u0027t I just not find the correct methods?\u003C/p\u003E\u003Cp\u003EEdit: noticed that the applicationlauncher in the editor has the \u0022part release prevention\u0022 also the stating, so what is it?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-21T14:52:14Z\u0022 title=\u002212/21/2014 02:52  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 21, 2014\u003C/time\u003E by Alewx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Fred4106","CreatedById":78992,"CreatedDateTime":"2014-12-21T20:02:52Z","Content":"\n\u003Cp\u003EDoes anybody know the replacement for this line?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EEditorPartList.Instance.categorySelected\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt worked in .25 and after a 4 hours of searching for the correct method/variable, it does not seem to be possible. The goal is to enable mouse scrolling between pages and shift\u002Bmouse scrolling to change categories.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\n"},{"CreatedByName":"Alewx","CreatedById":102791,"CreatedDateTime":"2014-12-21T20:51:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fred4106\u0022 data-cite=\u0022Fred4106\u0022\u003E\u003Cdiv\u003EDoes anybody know the replacement for this line?\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EEditorPartList.Instance.categorySelected\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt worked in .25 and after a 4 hours of searching for the correct method/variable, it does not seem to be possible. The goal is to enable mouse scrolling between pages and shift\u002Bmouse scrolling to change categories.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m looking for the same but could not find something fitting.\u003C/p\u003E\u003Cp\u003EQuickscoll provides already the scrolling \u00C3\u0192\u00C2\u00ACn the part list, but I make a similar mod.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-12-22T00:14:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fred4106\u0022 data-cite=\u0022Fred4106\u0022\u003E\u003Cdiv\u003EDoes anybody know the replacement for this line?\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EEditorPartList.Instance.categorySelected\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt worked in .25 and after a 4 hours of searching for the correct method/variable, it does not seem to be possible. The goal is to enable mouse scrolling between pages and shift\u002Bmouse scrolling to change categories.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe editor categories are handled in the PartCategorizer class now. I think you want to do something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//Gets the \u0022Filter by Function\u0022 category\u003Cbr\u003EPartCategorizer.Category filterByFunction = PartCategorizer.Instance.filters.Find(f =\u0026gt; f.button.categoryName == \u0022Filter by Function\u0022), activeCategory = null;\u003Cbr\u003E\u003Cbr\u003E//If the \u0022Filter by Function\u0022 button is activated\u003Cbr\u003Eif (filterByFunction.button.activeButton.State == RUIToggleButtonTyped.ButtonState.TRUE)\u003Cbr\u003E{\u003Cbr\u003E    //Gets the category which has it\u0027s button set to true, will throw an error if theres more than one (shouldn\u0027t be happenning\u003Cbr\u003E    activeCategory = filterByFunction.subcategories.Single(s =\u0026gt; s.button.activeButton.State == RUIToggleButtonTyped.ButtonState.TRUE);\u003Cbr\u003E\u003Cbr\u003E    //You can then know the name of the category using this\u003Cbr\u003E    string name = activeCategory.button.categoryName;\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBasically, there is only a selected part category when it\u0027s on the Filter by Function tab. Also, some mods may add more buttons to this, like RealChute which adds a \u0022Parachutes\u0022 category to this all, and this cannot be found in the PartCategories enum.\u003C/p\u003E\n"},{"CreatedByName":"Alewx","CreatedById":102791,"CreatedDateTime":"2014-12-22T01:21:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EThe editor categories are handled in the PartCategorizer class now. I think you want to do something like this:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//Gets the \u0022Filter by Function\u0022 category\u003Cbr\u003EPartCategorizer.Category filterByFunction = PartCategorizer.Instance.filters.Find(f =\u0026gt; f.button.categoryName == \u0022Filter by Function\u0022), activeCategory = null;\u003Cbr\u003E\u003Cbr\u003E//If the \u0022Filter by Function\u0022 button is activated\u003Cbr\u003Eif (filterByFunction.button.activeButton.State == RUIToggleButtonTyped.ButtonState.TRUE)\u003Cbr\u003E{\u003Cbr\u003E    //Gets the category which has it\u0027s button set to true, will throw an error if theres more than one (shouldn\u0027t be happenning\u003Cbr\u003E    activeCategory = filterByFunction.subcategories.Single(s =\u0026gt; s.button.activeButton.State == RUIToggleButtonTyped.ButtonState.TRUE);\u003Cbr\u003E\u003Cbr\u003E    //You can then know the name of the category using this\u003Cbr\u003E    string name = activeCategory.button.categoryName;\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBasically, there is only a selected part category when it\u0027s on the Filter by Function tab. Also, some mods may add more buttons to this, like RealChute which adds a \u0022Parachutes\u0022 category to this all, and this cannot be found in the PartCategories enum.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks mate, that is already a huge help.\u003C/p\u003E\u003Cp\u003Esomehow PartCategorizer slipped through unnoticed for me.\u003C/p\u003E\u003Cp\u003EHow are your exams going,when do you await the results?\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-12-22T01:30:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alewx\u0022 data-cite=\u0022Alewx\u0022\u003E\u003Cdiv\u003EThanks mate, that is already a huge help.\u003Cp\u003Esomehow PartCategorizer slipped through unnoticed for me.\u003C/p\u003E\u003Cp\u003EHow are your exams going,when do you await the results?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAll cleared, and I passed everything, thanks for caring \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Alewx","CreatedById":102791,"CreatedDateTime":"2014-12-23T01:48:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EAll cleared, and I passed everything, thanks for caring \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECool means you will now get a degree as master of Engineering?\u003C/p\u003E\u003Cp\u003EFound out what is used to change the category of the \u0022Filter By Function\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPartCategorizer.SetPanel_FunctionFuelTank();\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut this sets the editorLogic.mode to SIMPLE no matter it was used in ADVANCED.\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-23T05:16:11Z","Content":"\n\u003Cp\u003EAvailablePart.partPath and AvailablePart.parturl are both returning null strings. Is there another way to access that information?\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-12-23T06:44:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alewx\u0022 data-cite=\u0022Alewx\u0022\u003E\u003Cdiv\u003ECool means you will now get a degree as master of Engineering?\u003Cp\u003EFound out what is used to change the category of the \u0022Filter By Function\u0022\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPartCategorizer.SetPanel_FunctionFuelTank();\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut this sets the editorLogic.mode to SIMPLE no matter it was used in ADVANCED.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m pretty sure Part\u0026lt;Categorizer also has a function that says \u0022SetADVANCED()\u0022 or something, you could check to see which state it is in and force set it back to advance afterwards.\u003C/p\u003E\u003Cp\u003EAnd nah for the diploma, Quebec is weird on the school system, I\u0027ve been out of high school since \u002711, but I\u0027m entering University in January in Physics \u0026amp; Computer Science \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022 data-cite=\u0022Crzyrndm\u0022\u003E\u003Cdiv\u003EAvailablePart.partPath and AvailablePart.parturl are both returning null strings. Is there another way to access that information?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EApparently not. The best thing about this, is that when the PartLoader loads the part configs, it also throws out the \u0022name\u0022 value, so you can\u0027t even lookup all the configs in GameDatabase and find the right part. Fabulous right?\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-23T06:54:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EFabulous right?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAbsolutely infuriating...\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-12-23T07:03:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022 data-cite=\u0022Crzyrndm\u0022\u003E\u003Cdiv\u003EAbsolutely infuriating...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe madness only begins. Usually there are other workarounds, so if you tell us what you want to do we could help \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-23T07:17:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EThe madness only begins. Usually there are other workarounds, so if you tell us what you want to do we could help \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s for \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/104231-0-90-Filter-Extensions-1-2-%28Dec-23%29-Parts-list-filters-using-cfg-s-icon-loader\u0022 rel=\u0022external nofollow\u0022\u003EFilter Extensions\u003C/a\u003E. I want to add a \u0022filter by mod\u0022, which to me means filtering by the folder folowing GameData. The alternative is to do it by author, but that will still need configs (which prevents me auto-generating a \u0022Filter by Mod\u0022 category.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-12-23T07:29:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022 data-cite=\u0022Crzyrndm\u0022\u003E\u003Cdiv\u003EIt\u0027s for \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/104231-0-90-Filter-Extensions-1-2-%28Dec-23%29-Parts-list-filters-using-cfg-s-icon-loader\u0022 rel=\u0022external nofollow\u0022\u003EFilter Extensions\u003C/a\u003E. I want to add a \u0022filter by mod\u0022, which to me means filtering by the folder folowing GameData. The alternative is to do it by author, but that will still need configs (which prevents me auto-generating a \u0022Filter by Mod\u0022 category.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, you can still use System.IO to locate and manually load all the configs, check if they are parts, check their names, and if so mark the folder. Though that could be pretty expansive to do each time you enter the editor, so you could do it during the loading sequence of the game and store everything in a Dictionary\u0026lt;AvailablePart, string\u0026gt; where the string is the path.. Kinda sucks, but I don\u0027t believe there is an easy way to get the location of each part otherway\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-23T07:34:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EWell, you can still use System.IO to locate and manually load all the configs, check if they are parts, check their names, and if so mark the folder. Though that could be pretty expansive to do each time you enter the editor, so you could do it during the loading sequence of the game and store everything in a Dictionary\u0026lt;AvailablePart, string\u0026gt; where the string is the path.. Kinda sucks, but I don\u0027t believe there is an easy way to get the location of each part otherway\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESounds about right. I already tried that, just didn\u0027t know that the name was the url so couldn\u0027t work it out \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_angry.gif\u0022 alt=\u0022:mad:\u0022\u003E (tyvm once again)\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-12-23T08:03:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EWell, you can still use System.IO to locate and manually load all the configs, check if they are parts, check their names, and if so mark the folder.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou needn\u0027t go quite that far... The info is still there to be hunted down:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// RepairAvailablePartUrl(PartLoader.getPartInfoByName(\u0022mk1pod\u0022));\u003Cbr\u003E// Log.Normal(\u0022mk1pod url: \u0022 \u002B PartLoader.getPartInfoByName(\u0022mk1pod\u0022).partUrl);\u003Cbr\u003E// // mk1pod url: Squad/Parts/Command/mk1pod/mk1Pod/mk1pod\u003Cbr\u003E// // note: not an error; there can be multiple parts defined in a config\u003Cbr\u003Eprivate void RepairAvailablePartUrl(AvailablePart ap)\u003Cbr\u003E{\u003Cbr\u003E    var url = GameDatabase.Instance.GetConfigs(\u0022PART\u0022)\u003Cbr\u003E        .FirstOrDefault(u =\u0026gt; u.name.Replace(\u0027_\u0027, \u0027.\u0027) == ap.name);\u003Cbr\u003E\u003Cbr\u003E    if (url == null)\u003Cbr\u003E        throw new System.IO.FileNotFoundException();\u003Cbr\u003E\u003Cbr\u003E    // repair missing name in config if desired\u003Cbr\u003E    if (!url.config.HasValue(\u0022name\u0022)) url.config.AddValue(\u0022name\u0022, url.name);\u003Cbr\u003E\u003Cbr\u003E    ap.partUrl = url.url;\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003Eprivate string GetPartPath(AvailablePart ap)\u003Cbr\u003E{\u003Cbr\u003E    if (string.IsNullOrEmpty(ap.partUrl))\u003Cbr\u003E        RepairAvailablePartUrl(ap);\u003Cbr\u003E\u003Cbr\u003E    var fileid = new UrlDir.UrlIdentifier(ap.partUrl);\u003Cbr\u003E\u003Cbr\u003E    // note: we ignore the last bit of the url because it refers to the specific entry\u003Cbr\u003E    // in a config file. All we care about is the path to that file\u003Cbr\u003E    return fileid.urlSplit.Take(fileid.urlDepth).Aggregate((s1, s2) =\u0026gt; s1 \u002B \u0022/\u0022 \u002B s2);\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-28T00:26:38Z\u0022 title=\u002212/28/2014 12:26  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 28, 2014\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003Cbr\u003ECorrected bug found by Crzyrndm\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2014-12-23T08:36:01Z","Content":"\n\u003Cp\u003EYou are an absolute lifesaver...\u003C/p\u003E\n"},{"CreatedByName":"Alewx","CreatedById":102791,"CreatedDateTime":"2014-12-23T11:11:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EI\u0027m pretty sure Part\u0026lt;Categorizer also has a function that says \u0022SetADVANCED()\u0022 or something, you could check to see which state it is in and force set it back to advance afterwards.\u003Cp\u003EAnd nah for the diploma, Quebec is weird on the school system, I\u0027ve been out of high school since \u002711, but I\u0027m entering University in January in Physics \u0026amp; Computer Science \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou mean an exam to even get access to University, quite high requirements..\u003C/p\u003E\u003Cp\u003ESetting the editormode to advanced manuall didn\u0027t work out so well in the night, maybe if I lock the Editor_Mide_Switch.\u003C/p\u003E\u003Cp\u003EWorth another try.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-12-23T16:55:32Z","Content":"\n\u003Cp\u003EJust a really quick question gang.. \u003Cstrong\u003EVessel.loaded\u003C/strong\u003E, besides the obvious \u0022Is the vessel loaded\u0022, what does that mean? What exactly does \u0022Loaded\u0022 mean? Does its On/Off rails status affect that? What is the difference between a loaded vessel and an unloaded vessel? If I want to scan every vessel that is \u0022on a mission\u0022 whether it is on rails or not, do I want to care about loaded status?\u003C/p\u003E\n"},{"CreatedByName":"Robotengineer","CreatedById":104525,"CreatedDateTime":"2014-12-23T16:59:51Z","Content":"\n\u003Cp\u003EIIRC, it deals with wether or not it is in the physics loading range, which is 2.5km from the active vessel. So if a vessel is loaded, it is with in 2.5km of your active vessel.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-23T17:44:13Z","Content":"\n\u003Cp\u003EAs far as I can tell, if a vessel is loaded, it exists in the fully loaded state that is within the physics sphere of the currently focused vessel \u003Cem\u003Eand\u003C/em\u003E it is has full physics being applied to it.\u003C/p\u003E\u003Cp\u003ENote that this means during timewarp (not physics timewarp) when the vessel is on rails, \u003Cstrong\u003Eall\u003C/strong\u003E vessels, including the currently focused vessel, are Vessel.loaded == false.\u003C/p\u003E\u003Cp\u003ENote I am not 100% sure about this. I know vessel goOnRails when under timewarp, I assume that also means vessel.loaded == false because that means you can\u0027t do physics operations on the vessel. \u003C/p\u003E\u003Cp\u003EHowever, I\u0027ve since learned about the Vessel.holdPhysics value, so I\u0027m no longer sure if vessel.loaded still goes false when onRails.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-23T17:46:56Z\u0022 title=\u002212/23/2014 05:46  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 23, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-12-23T17:57:55Z","Content":"\n\u003Cp\u003EHmm ok thank guys. Sounds like either way my best bet it so check all vessels, loaded or not.\u003C/p\u003E\n"},{"CreatedByName":"johnqevil","CreatedById":119237,"CreatedDateTime":"2014-12-26T17:25:52Z","Content":"\n\u003Cp\u003EOk, this is likely something stupid I\u0027m missing, but I can\u0027t seem to get Onsave() to function. I\u0027m trying the below code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing System.Threading;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003Eusing KSP;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Enamespace Kerbanomics\u003Cbr\u003E{\u003Cbr\u003E    [KSPAddon(KSPAddon.Startup.EveryScene, false)]\u003Cbr\u003E    public class Kerbanomics : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        private String save_folder;\u003Cbr\u003E        private bool billing_enabled = true;\u003Cbr\u003E        private bool autopayEnabled = false;\u003Cbr\u003E        private int threshold = 50;\u003Cbr\u003E        private int level0 = 10;\u003Cbr\u003E        private int level1 = 20;\u003Cbr\u003E        private int level2 = 40;\u003Cbr\u003E        private int level3 = 80;\u003Cbr\u003E        private int level4 = 140;\u003Cbr\u003E        private int level5 = 200;\u003Cbr\u003E        private float standbyPct = 50;\u003Cbr\u003E        private bool yearly = false;\u003Cbr\u003E\u003Cbr\u003E        private double bills = 0;\u003Cbr\u003E        private double loanAmount = 0;\u003Cbr\u003E        private float loanPayment = 0;\u003Cbr\u003E        int addPay = 0;\u003Cbr\u003E        int reqAmount = 0;\u003Cbr\u003E        float amountFinanced = 0;\u003Cbr\u003E        float estPayment = 0;\u003Cbr\u003E        int payments = 10;\u003Cbr\u003E        double pmt = 0;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private ConfigNode settings;\u003Cbr\u003E        private ConfigNode values;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        double _interval = 2300400;\u003Cbr\u003E        public static int _lastUpdate = 0;\u003Cbr\u003E        private Rect settingsWindow = new Rect(Screen.height / 8 \u002B 500, Screen.width / 4 , 300, 400);\u003Cbr\u003E        private Rect mainWindow = new Rect(Screen.width / 8 \u002B 100, Screen.height / 4, 400, 125); \u003Cbr\u003E        private Rect loanWindow = new Rect(Screen.width / 8 \u002B 500, Screen.height / 4 , 400, 125);\u003Cbr\u003E        private Rect payBills = new Rect(Screen.width / 8 \u002B 50, Screen.height / 4, 400, 125);\u003Cbr\u003E        public ApplicationLauncherButton button;\u003Cbr\u003E        public static Kerbanomics Instance;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void Awake()\u003Cbr\u003E        {\u003Cbr\u003E            LoadSettings();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            if (Instance != null)\u003Cbr\u003E            {\u003Cbr\u003E                Destroy(Instance);\u003Cbr\u003E            }\u003Cbr\u003E            Instance = this;\u003Cbr\u003E            GameEvents.onGUIApplicationLauncherReady.Add(OnGUIAppLauncherReady);\u003Cbr\u003E            save_folder = GetRootPath() \u002B \u0022/saves/\u0022 \u002B HighLogic.SaveFolder \u002B \u0022/\u0022;\u003Cbr\u003E            LoadSettings();\u003Cbr\u003E            SetInterval();\u003Cbr\u003E            UpdateLastUpdate();\u003Cbr\u003E            LoadData();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void DestroyButtons()\u003Cbr\u003E        {\u003Cbr\u003E            GameEvents.onGUIApplicationLauncherReady.Remove(OnGUIAppLauncherReady);\u003Cbr\u003E            ApplicationLauncher.Instance.RemoveModApplication(button);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public override void OnSave(ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            Debug.Log(\u0022IT\u0027S HERE, IT WORKED!\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        void Update()\u003Cbr\u003E        {\u003Cbr\u003E            if (HighLogic.LoadedSceneHasPlanetarium)\u003Cbr\u003E            {\u003Cbr\u003E                int currentPeriod = (int)Math.Floor(Planetarium.GetUniversalTime() / _interval);\u003Cbr\u003E                if (currentPeriod \u0026gt; _lastUpdate \u0026amp;\u0026amp; billing_enabled == true)\u003Cbr\u003E                {\u003Cbr\u003E                    GetInterval();\u003Cbr\u003E                    float multiplier = 106.5f;\u003Cbr\u003E                    if (yearly == true)\u003Cbr\u003E                        multiplier = 426.08f;\u003Cbr\u003E                    Debug.Log(\u0022Last Update=\u0022 \u002B _lastUpdate \u002B \u0022, Current Period=\u0022 \u002B currentPeriod);\u003Cbr\u003E                    _lastUpdate = (currentPeriod);\u003Cbr\u003E                    StringBuilder message = new StringBuilder();\u003Cbr\u003E                    message.AppendLine(\u0022Payroll is processed.\u0022);\u003Cbr\u003E                    message.AppendLine(\u0022Current staff:\u0022);\u003Cbr\u003E                    foreach (ProtoCrewMember crewMember in HighLogic.CurrentGame.CrewRoster.Crew)\u003Cbr\u003E                    {\u003Cbr\u003E                        //string crewMemberInfo = crewMember.name \u002B \u0022 \u0022 \u002B crewMember.rosterStatus.ToString() \u002B crewMember.experienceLevel;\u003Cbr\u003E                        message.Append(crewMember.name);\u003Cbr\u003E                        if (!crewMember.rosterStatus.Equals(ProtoCrewMember.RosterStatus.Dead) \u0026amp;\u0026amp; !crewMember.rosterStatus.Equals(ProtoCrewMember.RosterStatus.Missing))\u003Cbr\u003E                        {\u003Cbr\u003E                            float paycheck = GetWages(crewMember.experienceLevel, crewMember.rosterStatus.ToString()) * multiplier;\u003Cbr\u003E                            message.AppendLine(\u0022 is \u0022 \u002B crewMember.rosterStatus \u002B \u0022. Paycheck = \u0022 \u002B paycheck);\u003Cbr\u003E                            //Debug.Log(crewMemberInfo);\u003Cbr\u003E                            //Debug.Log(\u0022Roster Status: \u0022 \u002B crewMember.rosterStatus.ToString());\u003Cbr\u003E                            Debug.Log(\u0022Multiplier: \u0022 \u002B multiplier);\u003Cbr\u003E                            Debug.Log(\u0022Wages: \u0022 \u002B GetWages(crewMember.experienceLevel, crewMember.rosterStatus.ToString()));\u003Cbr\u003E                            bills = bills \u002B paycheck;\u003Cbr\u003E                            //Funding.Instance.AddFunds(-paycheck, 0);\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                    Funding.Instance.AddFunds(-PayLoan(loanPayment), 0);\u003Cbr\u003E                    message.AppendLine(\u0022Thank you for your loan payment in the amount of \u0022 \u002B loanPayment \u002B \u0022! Have a pleasant day!\u0022);\u003Cbr\u003E                    float externalFunding = 2500 \u002B (247.5f * Reputation.CurrentRep);\u003Cbr\u003E                    if (yearly == true)\u003Cbr\u003E                        externalFunding = 10000 \u002B (990 * Reputation.CurrentRep);\u003Cbr\u003E                    Funding.Instance.AddFunds(\u002BexternalFunding, 0);\u003Cbr\u003E                    message.AppendLine(\u0022Received Funding - \u0022 \u002B externalFunding);\u003Cbr\u003E                    message.AppendLine(\u0022Amount Due: \u0022 \u002B bills.ToString());\u003Cbr\u003E                    SaveData();\u003Cbr\u003E                    MessageSystem.Message m = new MessageSystem.Message(\u003Cbr\u003E                        \u0022New Bill Ready\u0022,\u003Cbr\u003E                        message.ToString(),\u003Cbr\u003E                        MessageSystemButton.MessageButtonColor.RED,\u003Cbr\u003E                        MessageSystemButton.ButtonIcons.ALERT);\u003Cbr\u003E                    MessageSystem.Instance.AddMessage(m);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E        private void SetInterval()\u003Cbr\u003E        {\u003Cbr\u003E            if (GameSettings.KERBIN_TIME \u0026amp;\u0026amp; yearly == false)\u003Cbr\u003E                _interval = 2300400;\u003Cbr\u003E            else if (!GameSettings.KERBIN_TIME \u0026amp;\u0026amp; yearly == false)\u003Cbr\u003E                _interval = 7884000;\u003Cbr\u003E            else if (GameSettings.KERBIN_TIME \u0026amp;\u0026amp; yearly == true)\u003Cbr\u003E                _interval = 9201600;\u003Cbr\u003E            else if (!GameSettings.KERBIN_TIME \u0026amp;\u0026amp; yearly == true)\u003Cbr\u003E                _interval = 31536000;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private double GetInterval()\u003Cbr\u003E        {\u003Cbr\u003E            double interval = _interval;\u003Cbr\u003E            return interval;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void UpdateLastUpdate()\u003Cbr\u003E        {\u003Cbr\u003E            _lastUpdate = (int)Math.Floor(Planetarium.GetUniversalTime() / GetInterval());\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public float GetWages(int level, string status)\u003Cbr\u003E        {\u003Cbr\u003E            float w = level0;\u003Cbr\u003E            switch (level)\u003Cbr\u003E            {\u003Cbr\u003E                case 0:\u003Cbr\u003E                    w = level0;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 1:\u003Cbr\u003E                    w = level1;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 2:\u003Cbr\u003E                    w = level2;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 3:\u003Cbr\u003E                    w = level3;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 4:\u003Cbr\u003E                    w = level4;\u003Cbr\u003E                    break;\u003Cbr\u003E                case 5:\u003Cbr\u003E                    w = level5;\u003Cbr\u003E                    break;\u003Cbr\u003E                default:\u003Cbr\u003E                    w = 10;\u003Cbr\u003E                    break;\u003Cbr\u003E            }\u003Cbr\u003E            if (status == \u0022Available\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                float pBuf = w / 100;\u003Cbr\u003E                w = pBuf * standbyPct;\u003Cbr\u003E            }\u003Cbr\u003E            return w;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void OnDestroy()\u003Cbr\u003E        {\u003Cbr\u003E            DestroyButtons();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        void OnGUIAppLauncherReady()\u003Cbr\u003E        {\u003Cbr\u003E            this.button = ApplicationLauncher.Instance.AddModApplication(\u003Cbr\u003E                onAppLauncherToggleOn,\u003Cbr\u003E                onAppLauncherToggleOff,\u003Cbr\u003E                null,\u003Cbr\u003E                null,\u003Cbr\u003E                null,\u003Cbr\u003E                null,\u003Cbr\u003E                ApplicationLauncher.AppScenes.SPACECENTER,\u003Cbr\u003E                (Texture)GameDatabase.Instance.GetTexture(\u0022EvilCorp/Textures/icon_button_stock\u0022, false));\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        void onAppLauncherToggleOn()\u003Cbr\u003E        {\u003Cbr\u003E            Debug.Log(\u0022Toggled on\u0022);\u003Cbr\u003E            RenderingManager.AddToPostDrawQueue(0, OnDraw);\u003Cbr\u003E            Debug.Log(\u0022Saving config to\u0022 \u002B save_folder);\u003Cbr\u003E            Debug.Log(\u0022billing_enabled = \u0022 \u002B billing_enabled);\u003Cbr\u003E            Debug.Log(\u0022autopayEnabled = \u0022 \u002B autopayEnabled);\u003Cbr\u003E            Debug.Log(\u0022threshold = \u0022 \u002B threshold);\u003Cbr\u003E            Debug.Log(\u0022level0 = \u0022 \u002B level0);\u003Cbr\u003E            Debug.Log(\u0022level1 = \u0022 \u002B level1);\u003Cbr\u003E            Debug.Log(\u0022level2 = \u0022 \u002B level2);\u003Cbr\u003E            Debug.Log(\u0022level3 = \u0022 \u002B level3);\u003Cbr\u003E            Debug.Log(\u0022level4 = \u0022 \u002B level4);\u003Cbr\u003E            Debug.Log(\u0022level5 = \u0022 \u002B level5);\u003Cbr\u003E            Debug.Log(\u0022standbyPct = \u0022 \u002B standbyPct);\u003Cbr\u003E            Debug.Log(\u0022yearly = \u0022 \u002B yearly);\u003Cbr\u003E            //ResetToDefault();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void OnDraw()\u003Cbr\u003E        {\u003Cbr\u003E            mainWindow = GUILayout.Window(854123, mainWindow, OnWindow, \u0022Kerbanomics\u0022); \u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void DrawSettings()\u003Cbr\u003E        {\u003Cbr\u003E            settingsWindow = GUILayout.Window(912361, settingsWindow, SettingsWind, \u0022Kerbanomics Settings\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void DrawLoanWindow()\u003Cbr\u003E        {\u003Cbr\u003E            //if (loanAmount \u0026gt; 0)\u003Cbr\u003E            //{\u003Cbr\u003E            //    loanWindow = GUILayout.Window(87441, loanWindow, LoanWindLayoutDeny, \u0022Loans\u0022);\u003Cbr\u003E            //}\u003Cbr\u003E            //else\u003Cbr\u003E            //{\u003Cbr\u003E                loanWindow = GUILayout.Window(56489, loanWindow, LoanWindLayoutApprove, \u0022Loans\u0022);\u003Cbr\u003E            //}\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private double CalculateThreshold()\u003Cbr\u003E        {\u003Cbr\u003E            double maxPayment = 0;\u003Cbr\u003E            float mult = threshold / 100;\u003Cbr\u003E            maxPayment = Funding.Instance.Funds * threshold;\u003Cbr\u003E            return maxPayment;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void DrawInvoiceWindow()\u003Cbr\u003E        {\u003Cbr\u003E            payBills = GUILayout.Window(81365, payBills, InvoiceWindow, \u0022Pending Bills\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void OnWindow(int windowId)\u003Cbr\u003E        {\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Outstanding Bills: \u0022 \u002B bills.ToString());\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            if (GUILayout.Button(\u0022Pay Bills\u0022))\u003Cbr\u003E            {\u003Cbr\u003E                RenderingManager.AddToPostDrawQueue(0, DrawInvoiceWindow);\u003Cbr\u003E            }\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Loan Balance: \u0022 \u002B Double.Parse(loanAmount.ToString()));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Next Loan Payment: \u0022 \u002B loanPayment.ToString());\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            if (GUILayout.Button(\u0022Loans\u0022, GUILayout.ExpandWidth(true)))\u003Cbr\u003E            {\u003Cbr\u003E                RenderingManager.AddToPostDrawQueue(0, DrawLoanWindow);\u003Cbr\u003E            }\u003Cbr\u003E            if(GUILayout.Button(\u0022Settings\u0022, GUILayout.ExpandWidth(true)))\u003Cbr\u003E            {\u003Cbr\u003E                RenderingManager.AddToPostDrawQueue(0, DrawSettings);\u003Cbr\u003E            }\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUI.DragWindow();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void SettingsWind(int windowId)\u003Cbr\u003E        {\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            billing_enabled = GUILayout.Toggle(billing_enabled, \u0022Enabled\u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            yearly = GUILayout.Toggle(yearly, \u0022Yearly Billing\u0022);\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            //GUILayout.BeginHorizontal();\u003Cbr\u003E            //GUILayout.Label(\u0022Maximum % of funds paid per period: \u0022);\u003Cbr\u003E            //GUILayout.FlexibleSpace();\u003Cbr\u003E            //threshold = Convert.ToInt32(GUILayout.TextField(threshold.ToString(), 3, GUILayout.Width(50)));\u003Cbr\u003E            //GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Level 0 Daily Wages: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            level0 = Convert.ToInt32(GUILayout.TextField(level0.ToString(), 4, GUILayout.Width(50)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Level 1 Daily Wages: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            level1 = Convert.ToInt32(GUILayout.TextField(level1.ToString(), 4, GUILayout.Width(50)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Level 2 Daily Wages: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            level2 = Convert.ToInt32(GUILayout.TextField(level2.ToString(), 4, GUILayout.Width(50)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Level 3 Daily Wages: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            level3 = Convert.ToInt32(GUILayout.TextField(level3.ToString(), 4, GUILayout.Width(50)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Level 4 Daily Wages: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            level4 = Convert.ToInt32(GUILayout.TextField(level4.ToString(), 4, GUILayout.Width(50)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Level 5 Daily Wages: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            level5 = Convert.ToInt32(GUILayout.TextField(level5.ToString(), 4, GUILayout.Width(50)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Percentage of Daily Wage for Standby: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            standbyPct = Convert.ToInt32(GUILayout.TextField(standbyPct.ToString(), 4, GUILayout.Width(50)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            if (GUILayout.Button(\u0022Save\u0022, GUILayout.ExpandWidth(true)))\u003Cbr\u003E            {\u003Cbr\u003E                SaveSettings();\u003Cbr\u003E                SetInterval();\u003Cbr\u003E                UpdateLastUpdate();\u003Cbr\u003E            }\u003Cbr\u003E            if (GUILayout.Button(\u0022Reset to Default\u0022, GUILayout.ExpandWidth(true)))\u003Cbr\u003E            {\u003Cbr\u003E                ResetToDefault();\u003Cbr\u003E                SaveSettings();\u003Cbr\u003E                SetInterval();\u003Cbr\u003E                UpdateLastUpdate();\u003Cbr\u003E            }\u003Cbr\u003E            if (GUILayout.Button(\u0022Close\u0022, GUILayout.ExpandWidth(true)))\u003Cbr\u003E            {\u003Cbr\u003E                RenderingManager.RemoveFromPostDrawQueue(0, DrawSettings);\u003Cbr\u003E            }\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUI.DragWindow();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void LoanWindLayoutApprove(int windowId)\u003Cbr\u003E        {\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Requested Amount: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            reqAmount = Convert.ToInt32(GUILayout.TextField(reqAmount.ToString(), 7, GUILayout.Width(75)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Interest Rate: \u0022 \u002B CalcInterest() \u002B \u0022%\u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022How many payments (Max 99)? \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            payments = Convert.ToInt32(GUILayout.TextField(payments.ToString(), 2, GUILayout.Width(75)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Estimated Payment Amount: \u0022 \u002B estPayment);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Total amount financed: \u0022 \u002B Double.Parse(amountFinanced.ToString()));\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            if (GUILayout.Button(\u0022Calculate\u0022))\u003Cbr\u003E            {\u003Cbr\u003E                float intMult = CalcInterest() / 100;\u003Cbr\u003E                amountFinanced = reqAmount * (intMult \u002B 1);\u003Cbr\u003E                estPayment = amountFinanced / payments;\u003Cbr\u003E                Debug.Log(\u0022Financed: \u0022 \u002B amountFinanced);\u003Cbr\u003E                Debug.Log(\u0022Estimated Payment: \u0022 \u002B estPayment);\u003Cbr\u003E                Debug.Log(\u0022Interest: \u0022 \u002B intMult);\u003Cbr\u003E            }\u003Cbr\u003E            if (amountFinanced != 0)\u003Cbr\u003E            {\u003Cbr\u003E                if (GUILayout.Button(\u0022Accept\u0022))\u003Cbr\u003E                {\u003Cbr\u003E                    Funding.Instance.AddFunds(reqAmount, 0);\u003Cbr\u003E                    loanAmount = loanAmount \u002B amountFinanced;\u003Cbr\u003E                    loanPayment = loanPayment \u002B (amountFinanced / payments);\u003Cbr\u003E                    SaveData();\u003Cbr\u003E                    RenderingManager.RemoveFromPostDrawQueue(0, DrawLoanWindow);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            if (GUILayout.Button(\u0022Close\u0022))\u003Cbr\u003E            {\u003Cbr\u003E                RenderingManager.RemoveFromPostDrawQueue(0, DrawLoanWindow);\u003Cbr\u003E                SaveData();\u003Cbr\u003E            }\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            if (loanAmount \u0026gt; 0)\u003Cbr\u003E            {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                GUILayout.BeginHorizontal();\u003Cbr\u003E                GUILayout.Label(\u0022Make a Payment: \u0022); \u003Cbr\u003E                GUILayout.FlexibleSpace();\u003Cbr\u003E                addPay = Convert.ToInt32(GUILayout.TextField(addPay.ToString(), 7, GUILayout.Width(75)));\u003Cbr\u003E                GUILayout.EndHorizontal();\u003Cbr\u003E                GUILayout.BeginHorizontal();\u003Cbr\u003E                GUILayout.Label(\u0022Total Financed: \u0022 \u002B loanAmount);\u003Cbr\u003E                GUILayout.FlexibleSpace();\u003Cbr\u003E                GUILayout.EndHorizontal();\u003Cbr\u003E                GUILayout.BeginHorizontal();\u003Cbr\u003E                if (GUILayout.Button(\u0022Pay\u0022, GUILayout.ExpandWidth(true)))\u003Cbr\u003E                {\u003Cbr\u003E                    Funding.Instance.AddFunds(-addPay, 0);\u003Cbr\u003E                    PayLoan(addPay);\u003Cbr\u003E                    SaveData();\u003Cbr\u003E                    RenderingManager.RemoveFromPostDrawQueue(0, DrawLoanWindow);\u003Cbr\u003E                }\u003Cbr\u003E                GUILayout.EndHorizontal();\u003Cbr\u003E            }\u003Cbr\u003E            GUI.DragWindow();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void LoanWindLayoutDeny(int windowId)\u003Cbr\u003E        {\u003Cbr\u003E                GUILayout.BeginHorizontal();\u003Cbr\u003E                GUILayout.FlexibleSpace();\u003Cbr\u003E                GUILayout.Label(\u0022You\u0027ve already borrowed money, you have to pay off your original loan before borrowing more!\u0022);\u003Cbr\u003E                GUILayout.FlexibleSpace();\u003Cbr\u003E                GUILayout.EndHorizontal();\u003Cbr\u003E                GUILayout.BeginHorizontal();\u003Cbr\u003E                GUILayout.FlexibleSpace();\u003Cbr\u003E                GUILayout.Label(\u0022Additional Loan Payment: \u0022);\u003Cbr\u003E                addPay = Convert.ToInt32(GUILayout.TextField(loanPayment.ToString(), 7));\u003Cbr\u003E                GUILayout.FlexibleSpace();\u003Cbr\u003E                GUILayout.EndHorizontal();\u003Cbr\u003E                GUILayout.BeginHorizontal();\u003Cbr\u003E                if(GUILayout.Button(\u0022Pay\u0022, GUILayout.ExpandWidth(true)))\u003Cbr\u003E                {\u003Cbr\u003E                    Funding.Instance.AddFunds(-addPay, 0);\u003Cbr\u003E                    PayLoan(addPay);\u003Cbr\u003E                    addPay = 0;\u003Cbr\u003E                    SaveData();\u003Cbr\u003E                    RenderingManager.RemoveFromPostDrawQueue(0, DrawLoanWindow);\u003Cbr\u003E                }\u003Cbr\u003E                if(GUILayout.Button(\u0022Close\u0022, GUILayout.ExpandWidth(true)))\u003Cbr\u003E                {\u003Cbr\u003E                    RenderingManager.RemoveFromPostDrawQueue(0, DrawLoanWindow);\u003Cbr\u003E                }\u003Cbr\u003E                GUILayout.EndHorizontal();\u003Cbr\u003E                GUI.DragWindow();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void InvoiceWindow(int windowId)\u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Amount Due: \u0022 \u002B bills);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(\u0022Payment: \u0022);\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            pmt = Convert.ToDouble(GUILayout.TextField(pmt.ToString(), 7, GUILayout.Width(75)));\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            if (GUILayout.Button(\u0022Pay\u0022, GUILayout.Width(75)))\u003Cbr\u003E            {\u003Cbr\u003E                Funding.Instance.AddFunds(-pmt, 0);\u003Cbr\u003E                bills = bills - pmt;\u003Cbr\u003E                SaveData();\u003Cbr\u003E                RenderingManager.RemoveFromPostDrawQueue(0, DrawInvoiceWindow);\u003Cbr\u003E            }\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            if (GUILayout.Button(\u0022Close\u0022, GUILayout.Width(75)))\u003Cbr\u003E            {\u003Cbr\u003E                RenderingManager.RemoveFromPostDrawQueue(0, DrawInvoiceWindow);\u003Cbr\u003E            }\u003Cbr\u003E            GUILayout.FlexibleSpace();\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E            GUI.DragWindow();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        void onAppLauncherToggleOff()\u003Cbr\u003E        {\u003Cbr\u003E            Debug.Log(\u0022Toggled off\u0022);\u003Cbr\u003E            RenderingManager.RemoveFromPostDrawQueue(0, OnDraw);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public static String GetRootPath()\u003Cbr\u003E        {\u003Cbr\u003E            String path = KSPUtil.ApplicationRootPath;\u003Cbr\u003E            path = path.Replace(\u0022\\\\\u0022, \u0022/\u0022);\u003Cbr\u003E            if (path.EndsWith(\u0022/\u0022)) path = path.Substring(0, path.Length - 1);\u003Cbr\u003E            return path;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void SaveSettings()\u003Cbr\u003E        {\u003Cbr\u003E            settings = new ConfigNode();\u003Cbr\u003E            settings.name = \u0022SETTINGS\u0022;\u003Cbr\u003E            settings.AddValue(\u0022Enabled\u0022, billing_enabled);\u003Cbr\u003E            settings.AddValue(\u0022Yearly\u0022, yearly);\u003Cbr\u003E            settings.AddValue(\u0022Threshold\u0022, threshold);\u003Cbr\u003E            settings.AddValue(\u0022Autopay\u0022, autopayEnabled);\u003Cbr\u003E            settings.AddValue(\u0022WagesLevel0\u0022, level0);\u003Cbr\u003E            settings.AddValue(\u0022WagesLevel1\u0022, level1);\u003Cbr\u003E            settings.AddValue(\u0022WagesLevel2\u0022, level2);\u003Cbr\u003E            settings.AddValue(\u0022WagesLevel3\u0022, level3);\u003Cbr\u003E            settings.AddValue(\u0022WagesLevel4\u0022, level4);\u003Cbr\u003E            settings.AddValue(\u0022WagesLevel5\u0022, level5);\u003Cbr\u003E            settings.AddValue(\u0022StandbyPercentage\u0022, standbyPct);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            settings.Save(save_folder \u002B \u0022Settings.cfg\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void LoadSettings()\u003Cbr\u003E        {\u003Cbr\u003E            settings = new ConfigNode();\u003Cbr\u003E            settings = ConfigNode.Load(save_folder \u002B \u0022Settings.cfg\u0022);\u003Cbr\u003E            if (settings != null)\u003Cbr\u003E            {\u003Cbr\u003E                if (settings.HasValue(\u0022Enabled\u0022)) billing_enabled = Boolean.Parse(settings.GetValue(\u0022Enabled\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022Yearly\u0022)) yearly = Boolean.Parse(settings.GetValue(\u0022Yearly\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022Threshold\u0022)) threshold = (Int32)Int32.Parse(settings.GetValue(\u0022Threshold\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022Autopay\u0022)) autopayEnabled = Boolean.Parse(settings.GetValue(\u0022Autopay\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022WagesLevel0\u0022)) level0 = (Int32)Int32.Parse(settings.GetValue(\u0022WagesLevel0\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022WagesLevel1\u0022)) level1 = (Int32)Int32.Parse(settings.GetValue(\u0022WagesLevel1\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022WagesLevel2\u0022)) level2 = (Int32)Int32.Parse(settings.GetValue(\u0022WagesLevel2\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022WagesLevel3\u0022)) level3 = (Int32)Int32.Parse(settings.GetValue(\u0022WagesLevel3\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022WagesLevel4\u0022)) level4 = (Int32)Int32.Parse(settings.GetValue(\u0022WagesLevel4\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022WagesLevel5\u0022)) level5 = (Int32)Int32.Parse(settings.GetValue(\u0022WagesLevel5\u0022));\u003Cbr\u003E                if (settings.HasValue(\u0022StandbyPercentage\u0022)) standbyPct = (Int32)Int32.Parse(settings.GetValue(\u0022StandbyPercentage\u0022));\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void SaveData()\u003Cbr\u003E        {\u003Cbr\u003E            values = new ConfigNode();\u003Cbr\u003E            values.name = \u0022VALUES\u0022;\u003Cbr\u003E            values.AddValue(\u0022OutstandingBills\u0022, bills);\u003Cbr\u003E            values.AddValue(\u0022LoanAmount\u0022, loanAmount);\u003Cbr\u003E            values.AddValue(\u0022LoanPayment\u0022, loanPayment);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            values.Save(save_folder \u002B \u0022Financials\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void LoadData()\u003Cbr\u003E        {\u003Cbr\u003E            values = new ConfigNode();\u003Cbr\u003E            values = ConfigNode.Load(save_folder \u002B \u0022Financials\u0022);\u003Cbr\u003E            if (values != null)\u003Cbr\u003E            {\u003Cbr\u003E                if (values.HasValue(\u0022OutstandingBills\u0022)) bills = (Double)Double.Parse(values.GetValue(\u0022OutstandingBills\u0022));\u003Cbr\u003E                if (values.HasValue(\u0022LoanAmount\u0022)) loanAmount = (Double)Double.Parse(values.GetValue(\u0022LoanAmount\u0022));\u003Cbr\u003E                if (values.HasValue(\u0022LoanPayment\u0022)) loanPayment = (Int32)Int32.Parse(values.GetValue(\u0022LoanPayment\u0022));\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void ResetToDefault()\u003Cbr\u003E        { \u003Cbr\u003E            billing_enabled = true;\u003Cbr\u003E            autopayEnabled = false;\u003Cbr\u003E            threshold = 50;\u003Cbr\u003E            level0 = 10;\u003Cbr\u003E            level1 = 20;\u003Cbr\u003E            level2 = 40;\u003Cbr\u003E            level3 = 80;\u003Cbr\u003E            level4 = 140;\u003Cbr\u003E            level5 = 200;\u003Cbr\u003E            standbyPct = 50;\u003Cbr\u003E            yearly = false;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        private float PayLoan(float payment)\u003Cbr\u003E        {\u003Cbr\u003E            loanAmount = loanAmount - payment;\u003Cbr\u003E            if (loanAmount == 0)\u003Cbr\u003E                loanPayment = 0;\u003Cbr\u003E            return payment;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void TakeLoan(int loaned, int credit)\u003Cbr\u003E        {\u003Cbr\u003E            if (loanAmount == 0)\u003Cbr\u003E                loanAmount = loaned * ((CalcInterest() \u002B 100) / 100);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private float CalcInterest()\u003Cbr\u003E        {\u003Cbr\u003E            int rate = 50;\u003Cbr\u003E            if (Reputation.CurrentRep \u0026gt;= 901)\u003Cbr\u003E                rate = 5;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 801) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 900))\u003Cbr\u003E                rate = 10;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 701) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 800))\u003Cbr\u003E                rate = 15;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 601) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 700))\u003Cbr\u003E                rate = 20;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 501) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 600))\u003Cbr\u003E                rate = 25;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 401) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 500))\u003Cbr\u003E                rate = 30;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 301) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 400))\u003Cbr\u003E                rate = 35;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 201) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 300))\u003Cbr\u003E                rate = 40;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 101) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 200))\u003Cbr\u003E                rate = 45;\u003Cbr\u003E            if ((Reputation.CurrentRep \u0026gt; 0) \u0026amp;\u0026amp; (Reputation.CurrentRep \u0026lt;= 100))\u003Cbr\u003E                rate = 50;\u003Cbr\u003E            return rate;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private float CalcLoanPayment(int amount, int interest)\u003Cbr\u003E        {\u003Cbr\u003E            int t = interest \u002B 100;\u003Cbr\u003E            interest = interest / 100;\u003Cbr\u003E            float total = amount * interest / 10;\u003Cbr\u003E            return total;\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhen I try to compile, I get \u0027Kerbanomics.Kerbanomics.OnSave(ConfigNode)\u0027: no suitable method found to override\u0027 in the error log. Like I said, I\u0027m sure it\u0027s something stupid, I\u0027ve just been at this for a couple hours with no progress.\u003C/p\u003E\n"}]}