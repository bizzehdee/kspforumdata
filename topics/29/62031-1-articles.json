{"TopicId":62031,"ForumId":29,"TopicTitle":"Needing help with adding resorces","CreatedByName":"Clockwork_werewolf","CreatedById":90749,"CreatedDateTime":"2014-02-03T08:49:31Z","PageNum":1,"Articles":[{"CreatedByName":"Clockwork_werewolf","CreatedById":90749,"CreatedDateTime":"2014-02-03T08:49:31Z","Content":"\n\u003Cp\u003EI struggling to find out how to add a resource to ship or part (doesn\u0027t really matter) while the ship is traveling.\u003C/p\u003E\u003Cp\u003ETo be clear I don\u0027t mean adding more of a resource like fuel to a ship, I mean adding a brand new resource like \u0022stellar dust\u0022 to a ship and giving this new resource a max and an amount.\u003C/p\u003E\u003Cp\u003EI pretty sure I need to add a new resource node or something to the ship but I can\u0027t get the syntax right or something. I wouldn\u0027t ask but this has me literally stuck for about 4 hours and I have written and remed out about 20 lines of code.\u003C/p\u003E\u003Cp\u003EI can think of a work around but it is messy and will look bad.\u003C/p\u003E\n"},{"CreatedByName":"LethalDose","CreatedById":92657,"CreatedDateTime":"2014-02-03T22:31:19Z","Content":"\n\u003Cp\u003EThey way I\u0027ve added new resources to the game is modify the \u0022Resource\u0022 file in the Game data files (I\u0027m currently at work, but I\u0027ll be able to give you the specific location when I get home). You need to define the resource name, density, a few transfer rules... and I think that\u0027s about it.\u003C/p\u003E\u003Cp\u003ETo add storage for the new resources, you need to add bit of code to the specific parts you want to use as a container. Each part in the game has it\u0027s own directory with a part config file in it. At the bottom of the config file for each part that can hold a resource, there\u0027s a section that defines resources they can hold, the amount they launch with, and the max amount they can store.\u003C/p\u003E\u003Cp\u003ESo, you don\u0027t need to add the resource node to the ship, you just need to add it the ship\u0027s parts.\u003C/p\u003E\u003Cp\u003EI hope that helps. I\u0027m still figuring out how to use the resources in new part modules.\u003C/p\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2014-02-04T00:11:33Z","Content":"\n\u003Cp\u003ELike LethalDose said, you need to add it to the GameData/Squad/Resources/ResourcesGeneric.cfg file. Here\u0027s the format:\u003C/p\u003E\u003Cp\u003ERESOURCE_DEFINITION\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = Stellar Dust\u003C/p\u003E\u003Cp\u003E density = 0.005\u003C/p\u003E\u003Cp\u003E flowMode = ALL_VESSEL\u003C/p\u003E\u003Cp\u003E transfer = PUMP\u003C/p\u003E\u003Cp\u003E isTweakable = true\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003ENow you have some dust, that weighs 0.005 tons per unit, and can be moved between any parts of the vessel. Now, you need some parts to do something with it. A simple dust bin might look like this (modified from the FL-T500 fuel tank:\u003C/p\u003E\u003Cp\u003EPART\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003Ename = dustBin\u003C/p\u003E\u003Cp\u003Emodule = Part\u003C/p\u003E\u003Cp\u003Eauthor = Clockwork_werewolf\u003C/p\u003E\u003Cp\u003E// --- asset parameters ---\u003C/p\u003E\u003Cp\u003Emesh = model.mu\u003C/p\u003E\u003Cp\u003Escale = 0.1\u003C/p\u003E\u003Cp\u003E// --- node definitions ---\u003C/p\u003E\u003Cp\u003Enode_stack_top = 0.0, 7.72552, 0.0, 0.0, 1.0, 0.0\u003C/p\u003E\u003Cp\u003Enode_stack_bottom = 0.0, -7.3, 0.0, 0.0, 1.0, 0.0\u003C/p\u003E\u003Cp\u003Enode_attach = 5.01, 0.0, 0.0, 1.0, 0.0, 0.0, 1\u003C/p\u003E\u003Cp\u003E// --- editor parameters ---\u003C/p\u003E\u003Cp\u003ETechRequired = basicRocketry\u003C/p\u003E\u003Cp\u003EentryCost = 1600\u003C/p\u003E\u003Cp\u003Ecost = 850\u003C/p\u003E\u003Cp\u003Ecategory = Science\u003C/p\u003E\u003Cp\u003Esubcategory = 0\u003C/p\u003E\u003Cp\u003Etitle = Stellar Dust Bin\u003C/p\u003E\u003Cp\u003Emanufacturer = KerMart\u003C/p\u003E\u003Cp\u003Edescription = Holds stellar dust!\u003C/p\u003E\u003Cp\u003E// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003C/p\u003E\u003Cp\u003EattachRules = 1,1,1,1,0\u003C/p\u003E\u003Cp\u003E// --- standard part parameters ---\u003C/p\u003E\u003Cp\u003Emass = 0.25\u003C/p\u003E\u003Cp\u003EdragModelType = default\u003C/p\u003E\u003Cp\u003Emaximum_drag = 0.2\u003C/p\u003E\u003Cp\u003Eminimum_drag = 0.3\u003C/p\u003E\u003Cp\u003EangularDrag = 2\u003C/p\u003E\u003Cp\u003EcrashTolerance = 6\u003C/p\u003E\u003Cp\u003EbreakingForce = 50\u003C/p\u003E\u003Cp\u003EbreakingTorque = 50\u003C/p\u003E\u003Cp\u003EmaxTemp = 2900\u003C/p\u003E\u003Cp\u003ERESOURCE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = Stellar Dust\u003C/p\u003E\u003Cp\u003E amount = 0\u003C/p\u003E\u003Cp\u003E maxAmount = 180\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EAnd if you want to collect some dust you can either write your own plugin code of some sort, or use something like this (modified from the circular intake):\u003C/p\u003E\u003Cp\u003EPART\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E// --- general parameters ---\u003C/p\u003E\u003Cp\u003Ename = DustScook\u003C/p\u003E\u003Cp\u003Emodule = Part\u003C/p\u003E\u003Cp\u003Eauthor = Clockwork_werewolf\u003C/p\u003E\u003Cp\u003E// --- asset parameters ---\u003C/p\u003E\u003Cp\u003Emesh = model.mu\u003C/p\u003E\u003Cp\u003Escale = 0.1\u003C/p\u003E\u003Cp\u003E// --- node definitions ---\u003C/p\u003E\u003Cp\u003E// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z\u003C/p\u003E\u003Cp\u003Enode_stack_bottom01 = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0\u003C/p\u003E\u003Cp\u003E// --- FX definitions ---\u003C/p\u003E\u003Cp\u003E// --- editor parameters ---\u003C/p\u003E\u003Cp\u003ETechRequired = supersonicFlight\u003C/p\u003E\u003Cp\u003EentryCost = 8800\u003C/p\u003E\u003Cp\u003Ecost = 680\u003C/p\u003E\u003Cp\u003Ecategory = Aero\u003C/p\u003E\u003Cp\u003Esubcategory = 0\u003C/p\u003E\u003Cp\u003Etitle = Dust Scoop\u003C/p\u003E\u003Cp\u003Emanufacturer = KerMart\u003C/p\u003E\u003Cp\u003Edescription = Scoops up stellar dust from SPACE!\u003C/p\u003E\u003Cp\u003E// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003C/p\u003E\u003Cp\u003EattachRules = 1,0,1,0,0\u003C/p\u003E\u003Cp\u003EstackSymmetry = 2\u003C/p\u003E\u003Cp\u003E// --- standard part parameters ---\u003C/p\u003E\u003Cp\u003Emass = 0.01\u003C/p\u003E\u003Cp\u003EdragModelType = default\u003C/p\u003E\u003Cp\u003Emaximum_drag = 0.3\u003C/p\u003E\u003Cp\u003Eminimum_drag = 0.3\u003C/p\u003E\u003Cp\u003EangularDrag = 1\u003C/p\u003E\u003Cp\u003EcrashTolerance = 20\u003C/p\u003E\u003Cp\u003EmaxTemp = 3400\u003C/p\u003E\u003Cp\u003EfuelCrossFeed = True\u003C/p\u003E\u003Cp\u003EMODULE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = ModuleResourceIntake\u003C/p\u003E\u003Cp\u003E resourceName = Stellar Dust\u003C/p\u003E\u003Cp\u003E checkForOxygen = false\u003C/p\u003E\u003Cp\u003E area = 0.008\u003C/p\u003E\u003Cp\u003E intakeSpeed = 10\u003C/p\u003E\u003Cp\u003E intakeTransformName = Intake \u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003ERESOURCE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = Stellar Dust\u003C/p\u003E\u003Cp\u003E amount = 0.2\u003C/p\u003E\u003Cp\u003E maxAmount = 0.2\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EI don\u0027t actually know if ModuleResourceIntake will work in space like that, but hey, that\u0027s why you write your own module to do it for you! Hope that helps a bit...\u003C/p\u003E\n"},{"CreatedByName":"Clockwork_werewolf","CreatedById":90749,"CreatedDateTime":"2014-02-04T07:45:52Z","Content":"\n\u003Cp\u003EI\u0027m afraid this really doesn\u0027t help. I have already added custom resources to ships and added and taken resources from the ship in flight using my own C# code.\u003C/p\u003E\u003Cp\u003EWhat I what is to be able to assign a brand new resource to the ship after it has taken off. I could make the empty space in the ship before hand and then assign it more resources under a condition in space but this is the ugly way of doing it I said above. What I want to be able to do is create a new resource using C# code. The reason for this is I want to be able to add a specific resource on launch for each Kerbal aboard but not for empty seats. I could use a part module and then part.protoModuleCrew.Count per module to fill the resource but there is nothing stopping another ship form docking and transferring over more resources then the Kerbals had at the start. This is why I wish to manipulate the MAX amount of resources available in flight.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-02-04T08:05:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Clockwork_werewolf\u0022 data-cite=\u0022Clockwork_werewolf\u0022\u003E\u003Cdiv\u003EI\u0027m afraid this really doesn\u0027t help. I have already added custom resources to ships and added and taken resources from the ship in flight using my own C# code.\u003Cp\u003EWhat I what is to be able to assign a brand new resource to the ship after it has taken off. I could make the empty space in the ship before hand and then assign it more resources under a condition in space but this is the ugly way of doing it I said above. What I want to be able to do is create a new resource using C# code. The reason for this is I want to be able to add a specific resource on launch for each Kerbal aboard but not for empty seats. I could use a part module and then part.protoModuleCrew.Count per module to fill the resource but there is nothing stopping another ship form docking and transferring over more resources then the Kerbals had at the start. This is why I wish to manipulate the MAX amount of resources available in flight.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m afraid you can\u0027t do that. Resources are defined in the part config, and our saved using the said config in the persistence file. If the resource is not originally present in the part, you will not be able to add, remove, and save it.\u003C/p\u003E\u003Cp\u003EThe only workaround I see is for you to redefine resource storage.\u003C/p\u003E\n"},{"CreatedByName":"Clockwork_werewolf","CreatedById":90749,"CreatedDateTime":"2014-02-04T09:37:03Z","Content":"\n\u003Cp\u003ECould the persistence file be modified? Would there be a way to add a savable variable to the game save to act as a virtual maximum? Actualy I might be able to use the crewnumbers as that without the need to save. I know that the ModuleManager mod is able to set new resources on load but is this then fixed after config loading?\u003C/p\u003E\u003Cp\u003EThank you for your help Chris what ever the answer.\u003C/p\u003E\n"},{"CreatedByName":"Clockwork_werewolf","CreatedById":90749,"CreatedDateTime":"2014-02-04T09:47:53Z","Content":"\n\u003Cp\u003EOh Also I know that TAC Life support is able to add its resources to an EVA Kerbal and then take them away again when he boards. This is so that kerbals on EVA can die of lock of oxygen too. I just don\u0027t really understand how. I\u0027m at the Better_Than_Starting_Manned stage of understanding Kerbal codeing. I can get my Kerbals to die and use resources but they do not use resources on EVA or when not in focus. I\u0027ve been poring over TAC code for days now (literally, well not poring but literally days) but I\u0027m not able to use or reverse engineer it yet.\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-02-04T10:08:08Z","Content":"\n\u003Cp\u003EIt is most likely possible with some ugly hacks (since PartResourceList can be messed with) that might break other stuff. It doesn\u0027t look like there is any proven solution for this so you might want to skip this specific feature for now and continue to complete the mod nonetheless. Otherwise you will spend more days to find a working solution and many more weeks fixing/handling all the stuff your \u0022hack\u0022 breaks. Please don\u0027t, unless everything else is done or you mod can\u0027t exist without it.\u003C/p\u003E\n"},{"CreatedByName":"Clockwork_werewolf","CreatedById":90749,"CreatedDateTime":"2014-02-04T10:38:54Z","Content":"\n\u003Cp\u003Ehmm I\u0027m not sure, I know that TAC life support gets along without crashes and is very popular so it must be possible to do it without crashes. \u003C/p\u003E\u003Cp\u003EThe basic idea behind the mod is this: It\u0027s a life support mod (yea another I know) with only 4 or 5 resources. Breathable_air, Food, Sanity and Radiation_level. The optional resource is lithium hydroxide which is a basic carbon dioxide remover.\u003C/p\u003E\u003Cp\u003EBreathable_air is made of oxygen sourced from Oxidizer (2.376 oxidizer per Kerbal per day based on human oxygen usage) and Carbon dioxide removal using Lithium hydroxide (1.866 per Kerbal per day), or a renewable system that uses energy or hydroponics.\u003C/p\u003E\u003Cp\u003EFood which is light but only make-able using hydroponics for which you need 10 tons per Kerbal (heavy but it also makes breathable air so its for infinite supply\u0027s).\u003C/p\u003E\u003Cp\u003ESanity is the first new style resource and one of the reason to make a new mod and not just modify someone else\u0027s mod. It is based on the number of Kerbals and their available space. One Kerbal cooped up in a tiny capsule will go mad after about 20 days (based on solitary confinement research and astronaut and cosmonaut testimony). One Kerbal with two seats has more space so goes mad slower. To set up a permanent colony you would need about 10 Kerbals and 20 seats.\u003C/p\u003E\u003Cp\u003EFor this resource I need to be able to on launch set the maximum sanity to 100 (100%) for each Kerbal but not 100 for each available seat in the craft. If a new craft were to dock they could transfer over sanity to the craft and you could end up with one Kerbal having 2000 sanity all to himself (2000% sanity?!). This is why I need to be able to modify the sanity max.\u003C/p\u003E\u003Cp\u003ERadiation_level is just that a safe radiation level. Radiation is added based on the atmosphere density so that Kerbals on Kerbin get none but Kerbals in space and on the mun get irradiated. There is radiation plating though so they can be shielded. This doesn\u0027t matter as much if it has higher maxes or radiation levels are transferred as this could be thought of as higher natural shielding on an object or adding new scrubbed objects or food to a station. I would prefer it not to be transferred and stay with a Kerbal like the sanity but its not so important.\u003C/p\u003E\u003Cp\u003EThere are bugs with the present code and system but I would rather be able to build it using good techniques rather than have to go back in a week or a month and rewrite half the code.\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-02-04T15:33:01Z","Content":"\n\u003Cp\u003EOkay, sanity. You want Kerbal-specific resources. Afaik sth like that was never done before. Kerbals on EVA are ships with a special KerbalEVA part. MM can modify this part to have resources. This is most likely what TAC does. There are no such objects for Kerbals that are in Vessels. I see two possibilities:\u003C/p\u003E\u003Cp\u003E- Give crew capsules sanity storage (0 to seats*100), threat them like a group \u0026amp; make sanity a non-transferable resource (PartResourceDefinition has both flowMode \u0026amp; transferMode, though i never tried them)\u003C/p\u003E\u003Cp\u003E- Store sanity manually and add visualization wherever possible (right click on the capsule, portrait, low-warnings, whatever)\u003C/p\u003E\u003Cp\u003EIn either case you have to add kerbal transfer logic, though the first one would be more complicated to never \u0022loose\u0022 a kerbals data. For that first solution you might also add some \u0022advanced\u0022 transfer logic to prevent abuse, like always taking mostly the more worse values when someone joins a group.\u003C/p\u003E\n"},{"CreatedByName":"Clockwork_werewolf","CreatedById":90749,"CreatedDateTime":"2014-02-04T17:07:38Z","Content":"\n\u003Cp\u003EThanks for the input. I think I might go with option one even with the chance of loss. I want players to be able to see it as a resource. Going to have to go with a transfer logic. I put this up about a day and a half ago and in that time I understand better what I am dealing with, with the resources as classes not just variables.\u003C/p\u003E\u003Cp\u003EAdding sanity might seem strange but I want people to not be able to just send one Kerbal to Eeloo and back in a tiny capsule, it didn\u0027t seem realistic and as far as I could tell astronauts going mad was the reason why. Also it gives players a reason to build large bases and space stations.\u003C/p\u003E\n"},{"CreatedByName":"LethalDose","CreatedById":92657,"CreatedDateTime":"2014-02-04T18:12:10Z","Content":"\n\u003Cp\u003EIt looks like TrueBorn beat me to it, sorry I wasn\u0027t able to get it posted last night.\u003C/p\u003E\u003Cp\u003EIn reading this now, I\u0027m confused: Why do you need to add the capacity for a resource mid-flight? I\u0027m pretty sure that TAC doesn\u0027t do this, i.e. TAC mods the kerbal EVA part to have all of those resources. I don\u0027t know how they get moved between the two craft (e.g. O2 deducted from the source ship and placed into the new EVA), but kerbals have that maximum now hardcoded into them.\u003C/p\u003E\n"}]}