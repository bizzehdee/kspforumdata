{"TopicId":64336,"ForumId":29,"TopicTitle":"Need info for a field in an MBM texture file.","CreatedByName":"Krupski","CreatedById":80925,"CreatedDateTime":"2014-02-26T18:09:36Z","PageNum":1,"Articles":[{"CreatedByName":"Krupski","CreatedById":80925,"CreatedDateTime":"2014-02-26T18:09:36Z","Content":"\n\u003Cp\u003EHi all,\u003C/p\u003E\u003Cp\u003EMBM texture files contain several fields in the header, each one being 4 bytes (32 bits) in size, little-endian.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[B][FONT=lucida console]hex addr\u003Cbr\u003E00000000   [COLOR=#b22222]03 4B 53 50[/COLOR]  [COLOR=#008000]00 02 00 00[/COLOR]  [COLOR=#0000ff]00 04 00 00[/COLOR]  [COLOR=#008080]01 00 00 00[/COLOR]  [COLOR=#8b4513]20 00 00 00[/COLOR][/FONT][/B]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Cstrong\u003E\u003Cspan style=\u0022color:#b22222;\u0022\u003Efirst\u003C/span\u003E\u003C/strong\u003E is the \u0022Magic Number\u0022 (0x034B5350) or \u00223KSP\u0022.\u003C/p\u003E\u003Cp\u003EThe \u003Cstrong\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003Esecond\u003C/span\u003E\u003C/strong\u003E is the texture bitmap width, in pixels. For example, 512 pixels is 0x00020000.\u003C/p\u003E\u003Cp\u003EThe \u003Cspan style=\u0022color:#0000ff;\u0022\u003E\u003Cstrong\u003Ethird\u003C/strong\u003E\u003C/span\u003E is the texture bitmap height, in pixels. For example, 1024 pixels is 0x00040000.\u003C/p\u003E\u003Cp\u003EThe \u003Cstrong\u003E\u003Cspan style=\u0022color:#8b4513;\u0022\u003Efifth\u003C/span\u003E\u003C/strong\u003E is the texture bitmap color depth, usually 24 or 32 (i.e. 0x18000000 or 0x20000000).\u003C/p\u003E\u003Cp\u003EThe \u003Cspan style=\u0022color:#008080;\u0022\u003E\u003Cstrong\u003EFOURTH\u003C/strong\u003E\u003C/span\u003E field is either a 0 or a 1. It seems as thought this field is a \u00221\u0022 in 32 bit color depth bitmaps and a \u00220\u0022 in 24 bit color depth bitmaps, but NOT ALWAYS. Once in a while, a 32 bit texture will have a \u00220\u0022 in this field.\u003C/p\u003E\u003Cp\u003ECan anyone tell me what this field represents? Does it maybe mean \u0022alpha layer yes/no\u0022?\u003C/p\u003E\u003Cp\u003EI currently have written an \u0022MBM to PNG\u0022 file converter to allow easy editing of textures, but I also wish to write a companion \u0022PNG to MBM\u0022 converter. The PNG to MBM converter is easy to do... all I need to do is correctly set the value of the \u0022mystery field\u0022 correctly... but of course I need to know what it does in order to set it properly.\u003C/p\u003E\u003Cp\u003EUsing MBM files is much better because they are uncompressed and load fast. If all the game textures are converted to PNG files, the game loads a LOT slower because each PNG has to be decompressed at load time (this is why I want the companion PNG to MBM converter).\u003C/p\u003E\u003Cp\u003EAnyone have any idea what field #4 is for?\u003C/p\u003E\u003Cp\u003EThanks!\u003C/p\u003E\u003Cp\u003E-- Roger\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-02-26T18:25:30Z","Content":"\n\u003Cp\u003EI believe it\u0027s a flag for normal map. I glanced at the source to \u003Ca href=\u0022http://kerbalspaceprogram.com/mbm-to-png-file-converter/\u0022 rel=\u0022external nofollow\u0022\u003Ethis \u003C/a\u003Eand it appears the author wasn\u0027t sure about it either\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-02-26T18:52:27Z","Content":"\n\u003Cp\u003ENo, it does load a lot slower since PNG uses unity\u0027s WWW (i barely got more than one file per frame that way... at best), while MBM\u0027s dos good old synchronous file IO.\u003C/p\u003E\u003Cp\u003EYes, its definitively a normal flag. (\u003Ca href=\u0022https://github.com/waka324/TextureCompressor/blob/master/TextureCompressor/TextureConverter.cs\u0022 rel=\u0022external nofollow\u0022\u003Etexture compression\u0027s converter\u003C/a\u003E)\u003C/p\u003E\n"}]}