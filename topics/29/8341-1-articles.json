{"TopicId":8341,"ForumId":29,"TopicTitle":"Any thoughts on a Lua Shell plugin?","CreatedByName":"Meatsauce","CreatedById":4499,"CreatedDateTime":"2012-03-19T14:36:49Z","PageNum":1,"Articles":[{"CreatedByName":"Meatsauce","CreatedById":4499,"CreatedDateTime":"2012-03-19T14:36:49Z","Content":"\n\u003Cp\u003EAnyone working on a plugin to support a LUA shell?\u003C/p\u003E\u003Cp\u003EIf so, I thought about how something like this might best be implemented. \u003C/p\u003E\u003Cp\u003EAfter seeing some code examples of drawing GUI and pulling data, and after trying out that sweet auto ascent computer and auto pilot - I first envisioned an environment that we could place on rockets in the form of a small model, perhaps an antenna or radial node - and a 1m or larger equivalent part for incorporation in larger designs. \u003C/p\u003E\u003Cp\u003EWhy we would want a small part became apparent to me while using IFE\\\u0027s SLS rocket system. I would have loved to have \u0027computer\u0027 capacity without having to dump the 1m module after payload deployment. \u003C/p\u003E\u003Cp\u003EPut another way, the Altair lander doesn\\\u0027t have room for a 1m module, and advanced flight controls should be usable for all craft. \u003C/p\u003E\u003Cp\u003EIf we had a shell, then we could simply run these types of plugins natively without parts; ones that load as part of a vehicle start up systems. \u003C/p\u003E\u003Cp\u003ESecondary to this, it would be fairly easy to draw up lua scripts to initialize a startup sequence, build on-screen preflight checklists, and trigger events with functions like sounds for better immersion. \u003C/p\u003E\u003Cp\u003EIf such a plugin could efficiently pull all the variables from parts, then you could create a system to monitor total vehicle integrity, and hunt down problem areas. It will also be cool to hear a master caution alarm go off seconds before a catastrophic failure.\u003C/p\u003E\n"},{"CreatedByName":"thorfinn","CreatedById":8349,"CreatedDateTime":"2012-03-19T15:17:42Z","Content":"\n\u003Cp\u003EI have this idea of trying to make a very simple \u003Ca href=\u0022https://en.wikipedia.org/wiki/Forth_(programming_language)\u0022 rel=\u0022external nofollow\u0022\u003EForth interpreter\u003C/a\u003E in a plugin. Hey, it IS a space-age language, besides being the easiest one to implement. But it\\\u0027s definitely a long-term project....\u003C/p\u003E\u003Cp\u003EIt would have to define Words in \u0027machine code\u0027 (C#, in reality) for all the required interfaces to KSP, but this would have a good side: programs for the virtual computer would be totally harmless to the player\\\u0027s machine.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2012-03-19T17:08:01Z","Content":"\n\u003Cp\u003EA plugin-based interpreter would have the advantages that it\\\u0027s self-contained and exposes a clean API. However, it has several disadvantages over equivalent C# code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cbr\u003E[li]C# is primarily an object-oriented language. Though KSP doesn\\\u0027t take full advantage of this, it \u003Cem\u003Edoes\u003C/em\u003E revolve around per-object events, so you\\\u0027d need some way to elegantly script those.[/li]\u003Cbr\u003E[li]Performance is an issue since some part events execute every frame. To optimize this you could compile a script object at run-time (using reflection, as with regular expressions) or \u003C/li\u003E\u003C/ul\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Microsoft_Roslyn\u0022 rel=\u0022external nofollow\u0022\u003ERoslyn\u003C/a\u003E when it comes out.[/li]\u003Cbr\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut the biggest problem, in my mind, is adoption. It\\\u0027s clear that a lot of amateur developers are having trouble building plugins, but I don\\\u0027t think it\\\u0027s because of the language. It\\\u0027s symptomatic of the way KSP classes are structured; they follow Unity conventions pretty closely, which is great for internal consistency. The problem is that Unity conventions are \u003Cem\u003Eabsolutely terrible\u003C/em\u003E. As a seasoned C# developer, I find the \u0027Unity way\u0027 is confusing, counterintuitive and problematic, so I can only imagine how difficult it must be for a beginner.\u003C/p\u003E\u003Cp\u003EIn other words, a scripting interface would make things easier, but primarily because you\\\u0027d have to neatly wrap KSP in a \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=7948.0\u0022 rel=\u0022external nofollow\u0022\u003Eclean, well-structured API\u003C/a\u003E.\u003C/p\u003E\n"},{"CreatedByName":"thorfinn","CreatedById":8349,"CreatedDateTime":"2012-03-20T00:21:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EPerformance is an issue since some part events execute every frame. To optimize this you could compile a script object at run-time (using reflection, as with regular expressions) or \u003Ca href=\u0022https://en.wikipedia.org/wiki/Microsoft_Roslyn\u0022 rel=\u0022external nofollow\u0022\u003ERoslyn\u003C/a\u003E when it comes out.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, but I\\\u0027d say we can afford inefficiency... we can easily afford to burn a hundred million cycles per second to run programs that would be very simple for today. I think that even something capable of simulating, say, 50000 high level\u003Cstrong\u003E*\u003C/strong\u003E \u0027instructions\u0027 per second would prove plenty fast for most purposes.\u003C/p\u003E\u003Cp\u003EReflection is powerful, but wouldn\\\u0027t that undermine the inherent safety of interpretation?\u003C/p\u003E\u003Cp\u003E(Besides, I like the idea of using Forth for personal reasons, and no, I\\\u0027m \u003Cem\u003Enot\u003C/em\u003E talking about a masochistic streak of mine. I suppose nobody will follow me on this though \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EBut the biggest problem, in my mind, is adoption.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, I don\\\u0027t dream of imposing any standard: we still haven\\\u0027t seen any documentation and the guy(s) behind Mechjeb have already done most of what I would have ^^ I\\\u0027d be making it to see if I can... of course I would be glad if somebody used it, someone else expanded on it. If a version that uses C# directly gets made, I would be very interested; me, I have no idea how to do that.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:right;\u0022\u003E\u003Cp\u003E(*) KSP function calls, mathematical functions, etc. would be single \u0027instructions\u0027 for the virtual computer.\u003C/p\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"RandomGuy5040","CreatedById":16801,"CreatedDateTime":"2012-03-21T14:31:31Z","Content":"\n\u003Cp\u003EI like Lua myself. It\\\u0027s a nice, clean language and it interfaces with C# very well as far as I know. I think a fully-documented Lua API would be wonderful for KSP. However, I would like to see the current one stay open as it offers more freedom to programmers. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Steve5451","CreatedById":18812,"CreatedDateTime":"2012-03-23T04:23:54Z","Content":"\n\u003Cp\u003EAdding support for several languages would mean more modders. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"N3X15","CreatedById":12073,"CreatedDateTime":"2012-03-24T02:29:34Z","Content":"\n\u003Cp\u003ELua for .NET is in .NET\\\u0027s flavor of C\u002B\u002B, Visual C\u002B\u002B, so it won\\\u0027t run on Windows. I\\\u0027d like to avoid this if possible.\u003C/p\u003E\n"}]}