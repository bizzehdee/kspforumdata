{"TopicId":124787,"ForumId":29,"TopicTitle":"Override Player Thrust Input","CreatedByName":"pulp_user","CreatedById":88024,"CreatedDateTime":"2015-11-09T08:37:36Z","PageNum":1,"Articles":[{"CreatedByName":"pulp_user","CreatedById":88024,"CreatedDateTime":"2015-11-09T08:37:36Z","Content":"\n\u003Cp\u003EThe title basically says it all: I want full control over the engine throttle, without the player being able to influence it. I have searched throught the Plugin Dev Help forum, but found nothing, although this has been done already by modders. Is this problem so trivial? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003ECurrently I\u0027m doing this:\u003C/p\u003E\u003Cp\u003Eengine.currentThrottle = newThrottle;\u003C/p\u003E\u003Cp\u003Eengine.finalThrust = engine.CalculateThrust();\u003C/p\u003E\u003Cp\u003Ewhich seems to do the job, but the engine overrides this with the player input. I currently have all the fuel consumption with none of the physics, and the throttle fluctuates.\u003C/p\u003E\u003Cp\u003EI have set engine.manuallyOverridden = true, but that seems to do nothing in this respect.\u003C/p\u003E\u003Cp\u003EI think that there are 3 solutions to this:\u003C/p\u003E\u003Cp\u003E1. Prevent the engine from reading the player throttle input\u003C/p\u003E\u003Cp\u003E2. replace the player input, so that the engine reads my input as player input\u003C/p\u003E\u003Cp\u003E3. Override the throttle-values, after the engine has pulled the player input, but before the physics get calculated\u003C/p\u003E\u003Cp\u003EI guess I don\u0027t have the right permission to do 1, and 3 may all happen in one method, so I maybe can\u0027t \u0022inject\u0022 the change between the player input read and the physics calculation.\u003C/p\u003E\u003Cp\u003ESo 2 is the way to go, I think.\u003C/p\u003E\u003Cp\u003EI\u0027d be glad, if anyone could help.\u003C/p\u003E\u003Cp\u003Egreetings\u003C/p\u003E\u003Cp\u003ESimon\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-11-09T11:26:30Z","Content":"\n\u003Cp\u003EIf you want to set it globally for all engines on the craft, that\u0027s very simple. In your fixed update loop, you can set the throttle percentage using:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EFlightInputHandler.state.mainThrottle = [COLOR=#ff0000]\u0026lt;0-1\u0026gt; float for throttle percentage on the active vessel. Will retain the value if your code is not constantly updating[/COLOR]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMore complex vessel control (other vessels and really any further control input) are typically handled through callbacks like \u003Ca href=\u0022https://github.com/Crzyrndm/Pilot-Assistant/blob/master/PilotAssistant/FlightModules/AsstVesselModule.cs#L56-L57\u0022 rel=\u0022external nofollow\u0022\u003Ethese\u003C/a\u003E (there are 4 in total, the linked two plus OnAutoPilotUpdate and OnFlyByWire. They are always called in the same order and which to use depends on what you need). The function you give the callback is passed the current control state and you can then modify it before it goes to the next stage (replacing the FixedUpdate loop in some cases) (\u003Ca href=\u0022https://github.com/Crzyrndm/Pilot-Assistant/blob/master/PilotAssistant/FlightModules/SurfSAS.cs#L104\u0022 rel=\u0022external nofollow\u0022\u003EExample usage\u003C/a\u003E). You can get the same effect most of the time by directly assigning to the vessel.ctrlState if you just want to keep things simple.\u003C/p\u003E\u003Cp\u003EAssuming you don\u0027t want to adjust the thrust limiter, the least hacky way of modifying throttle on a per engine basis would involve creating an engine subclass where you update either the output thrust or the maximum thrust with your custom calculation. Doing it outside the engine module just sounds like a PITA\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-09T11:38:06Z\u0022 title=\u002211/09/2015 11:38  AM\u0022 data-short=\u00228 yr\u0022\u003ENovember 9, 2015\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pulp_user","CreatedById":88024,"CreatedDateTime":"2015-11-09T11:51:02Z","Content":"\n\u003Cp\u003EI actually want to modify the thrust on a per engine basis, and thought about using the thrustlimiter, but I couldn\u0027t find it anywhere. It would be a pretty easy solution for my problem though, and I will handle the total thrust of the vessel elsewhere, so I don\u0027t see any problem. But where can I modify it? I didn\u0027t find it in the ModuleEngines.\u003C/p\u003E\u003Cp\u003EI will also look into your other solutions, but thrustlimiter seems to be the simplest and most promising right now.\u003C/p\u003E\u003Cp\u003Every helpfull post, thank you!\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-11-09T15:03:08Z","Content":"\n\u003Cp\u003EThe limiter is \u0022thrustPercentage\u0022. And I agree with Crzyrndm, you ll have to use a subClass if you don\u0027t want to handle a bunch of edge case.\u003C/p\u003E\n"},{"CreatedByName":"pulp_user","CreatedById":88024,"CreatedDateTime":"2015-11-09T18:41:58Z","Content":"\n\u003Cp\u003EWhat exactly do you mean by that? I could create a PartModule and append it to the part with the engine.\u003C/p\u003E\u003Cp\u003EOr would you rather derive a class from the ModuleEngines, and replace the old ModuleEngines?\u003C/p\u003E\u003Cp\u003Ebtw, I want to use this to create a mod that allows for asymetric spacecrafts, or ones that have shifting CoMs by adjusting the thrust of each engine (so that you don\u0027t have to balance them for hours) That would allow for some awesome cargo VTOL. I think I have the theory down, but I\u0027m struggling with the implimentation. Am I missing something obvious, which has all the other modders prevented from doing this?\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-11-09T19:35:39Z","Content":"\n\u003Cp\u003EYou\u0027ll want a subclass of ModuleEnginesFX, not ModuleEngines. The majority of engines don\u0027t use the older class anymore.\u003C/p\u003E\u003Cp\u003ETo have a part use your custom class, you\u0027ll want to use a module manager patch to change the name field of the engine module in all applicable parts (something close to the following should work)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// any part with a ModuleEngine or ModuleEnginesFX module (using the wildcard to catch both)\u003Cbr\u003E@PART\u003Cbr\u003E[*]:HAS[@MODULE[ModuleEngines*]]\u003Cbr\u003E{\u003Cbr\u003E    // Every module named ModuleEngines*\u003Cbr\u003E    @MODULE[ModuleEngines*],*\u003Cbr\u003E    {\u003Cbr\u003E        name = MyNewSubclass\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI know there\u0027s a few mods in this vein around. Davon Throttle Control and Throttle Controlled Avionics are the two that come to mind but there\u0027s probably others\u003C/p\u003E\n"}]}