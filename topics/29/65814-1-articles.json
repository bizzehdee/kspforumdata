{"TopicId":65814,"ForumId":29,"TopicTitle":"Determining Emitter Direction","CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-03-14T23:06:31Z","PageNum":1,"Articles":[{"CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-03-14T23:06:31Z","Content":"\n\u003Cp\u003EIf I\u0027m trying to determine the direction of an emitter, for the purpose of applying a force relative to it\u0027s y axis, is there any way to do that?\u003C/p\u003E\u003Cp\u003EI\u0027ve tried every way I can think to determine the y axis of the emitter, but the only thing that seems to work is \u0022this.rigidbody.AddRelativeForce(0,-particleEmitter.localVelocity.y,0 * appliedForce * 1)\u0022\u003C/p\u003E\u003Cp\u003EHonestly, that works pretty well, but I\u0027m told that it\u0027s also \u0022wrong\u0022. So, with that knowledge in hand I tried various other possibilities, like particleEmitter.localRotationAxis.y or particleEmitter.transform.rotation.y. None of those produce results.\u003C/p\u003E\u003Cp\u003EI\u0027d really appreciate some help in getting to the bottom of this. I\u0027m running out of noodles to throw against the wall. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-03-15T00:33:08Z","Content":"\n\u003Cp\u003EIts local y axis in worldspace? According to the unity docs your way seems fine, although localVelocity has the qualifier \u0022starting velocity\u0022. I would think rigidbody.transform.up or rigidbody.transform.rotation * Vector3.up would also give you correct results\u003C/p\u003E\n"},{"CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-03-15T04:16:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022 data-cite=\u0022xEvilReeperx\u0022\u003E\u003Cdiv\u003EIts local y axis in worldspace? According to the unity docs your way seems fine, although localVelocity has the qualifier \u0022starting velocity\u0022. I would think rigidbody.transform.up or rigidbody.transform.rotation * Vector3.up would also give you correct results\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmm. Thanks for the tip. I gave it a shot but in this case unfortunately it resulted in a \u0022[Exception]: NullReferenceException: Object reference not set to an instance of an object\u0022 error message.\u003C/p\u003E\u003Cp\u003EI tried using both of the below, and both generated that same error.\u003C/p\u003E\u003Cp\u003Ethis.rigidbody.AddRelativeForce(particleEffect.rigidbody.transform.rotation * Vector3.up * appliedForce * 1);\u003C/p\u003E\u003Cp\u003Ethis.rigidbody.AddRelativeForce(valveEffect.rigidbody.transform.up * appliedForce * 1);\u003C/p\u003E\u003Cp\u003ESomething so simple as getting the vector direction of an emitter is surprisingly difficult. I\u0027m still amazed that \u0022particleEmitter.localRotationAxis\u0022 doesn\u0027t do anything.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-03-15T06:03:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Firov\u0022 data-cite=\u0022Firov\u0022\u003E\u003Cdiv\u003EHmm. Thanks for the tip. I gave it a shot but in this case unfortunately it resulted in a \u0022[Exception]: NullReferenceException: Object reference not set to an instance of an object\u0022 error message.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s probable that whatever particleEffect and valveEffect are, they don\u0027t have rigid bodies attached to them. Just use their transforms instead\u003C/p\u003E\n"}]}