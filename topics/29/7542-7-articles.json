{"TopicId":7542,"ForumId":29,"TopicTitle":"The official unoffical \u0026quot;help a fellow plugin developer\u0026quot; thread","CreatedByName":"Cephei","CreatedById":2555,"CreatedDateTime":"2012-03-04T10:02:40Z","PageNum":7,"Articles":[{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-04-24T20:13:30Z","Content":"\n\u003Cp\u003Ein OnPartLoad call a hand-written parser, check the fx definition sections for the group names, then\u003C/p\u003E\u003Cp\u003Eif (\u003Cem\u003Epart\u003C/em\u003E.findFxGroup(\u003Cem\u003Efxgroupname\u003C/em\u003E) == null ){\u003Cem\u003Epart\u003C/em\u003E.fxGroups.Add(new FXGroup(\u003Cem\u003Efxgroupname\u003C/em\u003E));}\u003C/p\u003E\u003Cp\u003EAfter that it doesn\\\u0027t throw that error. \u003C/p\u003E\u003Cp\u003EOr just define all the necessary groups.\u003C/p\u003E\n"},{"CreatedByName":"Victor Ludorum","CreatedById":17681,"CreatedDateTime":"2012-04-25T18:25:35Z","Content":"\n\u003Cp\u003EYep, that appears to be the bit I was missing. Works great, thank you. I don\\\u0027t bother parsing the .cfg manual, just add the needed groups in onPartLoad() and it parses the fx_ lines properly.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-04-25T19:03:38Z","Content":"\n\u003Cp\u003EI\\\u0027m even not sure which way to use for my engine module. Imagine 36 nozzles each with its own fxgroup? Well, for N1 Block A engine (engine designers\\\u0027 worst nightmare) it could be possible to reduce logical nozzle number to 15 or less, but, for example, LOK (Block I) engine includes 2 engines (the bigger one has 2 chambers), several (I\\\u0027m not even sure how many) steering nozzles that are connected to the engines (but respond to attitude control, so each should be processed separately) and 16 RCS nozzles on the rear skirt.\u003C/p\u003E\u003Cp\u003EThe fun part is that some of the structures (at least arrays) are passed from what was parsed during loading when creating a new part but some (structs, objects) aren\\\u0027t. In some cases it\\\u0027s easier to call the main parser in onPartStart() or onFlightStart(), than to stick that amount of data in arrays and other structures, that are copied, and then process it again into what actually is used.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-04-26T03:13:31Z","Content":"\n\u003Cp\u003E Just wanted to mention, Alchemist, C# gets awful \u0027funny\u0027 when it comes to data structures. Most stuff is actually a pointer(lvalue), while some stuff is an actual rvalue, but C# hides both types behind variable types that don\\\u0027t necessarily correspond with what one might expect. MS calls it reference and value types, but it\\\u0027s really just a game of hiding the pointers. Unfortunately, since you can\\\u0027t see the actual pointer syntax, you can never be quite sure whether or not they need referencing, or a new heap block assigned.\u003C/p\u003E\u003Cp\u003E You mentioned arrays being parsed correctly, but structs not. AFAIK, arrays are actually pointers, and structs are actually rvalues. I can\\\u0027t see the parser code, or the part class constructor, but I bet it\\\u0027s a heap allocation problem.\u003C/p\u003E\n"},{"CreatedByName":"Emilio","CreatedById":12359,"CreatedDateTime":"2012-04-27T20:43:58Z","Content":"\n\u003Cp\u003EHey, i\\\u0027m actually working on a plugin that uses warp rate and i wondered... with the \u0027warp rate modifying\u0027 code (see wiki), can you set it up so you can go BACK IN TIME ??? \u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-04-28T09:08:13Z","Content":"\n\u003Cp\u003E If you mean \u0027run the clock backward\u0027, I have no idea, you\\\u0027d have to try it out yourself, none of us actually know what the tools we were given do under the hood.\u003C/p\u003E\u003Cp\u003E If you mean \u0027everything goes back the way it was\u0027, then no.\u003C/p\u003E\n"},{"CreatedByName":"BarryCarlyon","CreatedById":18782,"CreatedDateTime":"2012-04-28T09:11:37Z","Content":"\n\u003Cp\u003EI reckon going back in time as it were won\\\u0027t work, as KSP will recalculate the data involved, and depends if on rails or not will change the math involved.\u003C/p\u003E\u003Cp\u003ESo if it can run backward it won\\\u0027t work properly.\u003C/p\u003E\n"},{"CreatedByName":"Emilio","CreatedById":12359,"CreatedDateTime":"2012-04-28T09:25:01Z","Content":"\n\u003Cp\u003EI just tried it, but it seems i messed up something in my code... I\\\u0027ll retry it\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-02T16:15:40Z","Content":"\n\u003Cp\u003E Now I\\\u0027m very confused. I\\\u0027ve got a function to pack a bunch of cfg-parsed-fields into a list\u0026lt;\u0026gt; for iteration sanity. If I understand what Alchemist wrote, I can just call that function from OnPartLoad and be done with it.\u003C/p\u003E\u003Cp\u003E But I thought each physical part on the ship got it\\\u0027s own instance of the corresponding part class...how can the instance of a class possibly exist at game loading if it\\\u0027s not created until you pick it in the VAB? I\\\u0027m probably just tired and not thinking this through, otherwise Squad\\\u0027s invented a code time machine.\u003C/p\u003E\n"},{"CreatedByName":"Victor Ludorum","CreatedById":17681,"CreatedDateTime":"2012-05-02T18:06:43Z","Content":"\n\u003Cp\u003EI\\\u0027ve been looking at that recently because I\\\u0027ve been getting some really weird behaviour in plugins, with bugs appearing or disappearing depending on whether you construct a new ship in the VAB, restart with an unmodified ship in the VAB, or resume an already running ship etc.\u003C/p\u003E\u003Cp\u003EAs far as I can tell, after onPartLoad() is called (during the initial game loading) the game saves the state of the part using serialization. It doesn\\\u0027t seem to use the standard C#/.NET serialization routines (maybe Unity\\\u0027s built-in serialization but I can\\\u0027t find much info on it). Then when a part instance is created it deserializes the stored part.\u003C/p\u003E\u003Cp\u003EAnyway, it looks like it serializes only public fields so you should be able to declare your List\u0026lt;\u0026gt; as public and anything done in onPartLoad() should carry through to each part instance. \u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-14T01:09:09Z","Content":"\n\u003Cp\u003E After much testing, tinkering, and general screwing around, I can say that\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E protected override void onGamePause()\u003Cbr\u003E {\u003Cbr\u003E KFTDWindowCrap.Pause();\u003Cbr\u003E MonoBehaviour.print(\u0027K Paused\u0027);\u003Cbr\u003E MonoBehaviour.print(\u0027FD.Pause = \u0027 \u002B FlightDriver.Pause.ToString());\u003Cbr\u003E\u003Cbr\u003E base.onGamePause();\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E protected override void onGameResume()\u003Cbr\u003E {\u003Cbr\u003E KFTDWindowCrap.UnPause();\u003Cbr\u003E\u003Cbr\u003E MonoBehaviour.print(\u0027K Unpaused\u0027);\u003Cbr\u003E MonoBehaviour.print(\u0027FD.Pause = \u0027 \u002B FlightDriver.Pause.ToString());\u003Cbr\u003E\u003Cbr\u003E base.onGameResume();\u003Cbr\u003E }\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eshows the static property\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EFlightDriver.Pause\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eseems to be usable in place of onGamePause()/resume with one notable exception.\u003C/p\u003E\u003Cp\u003E-When switching flights with the tracking station, onGamePause() is called if you use the ESC menu to switch OUT of a flight. onGameResume() is NOT called when switching back INTO a flight. Unknown yet if FlightDriver.Pause updates itself in this instance, but I suspect it does, so if you really need to know if the game is paused, it might be better to check against FlightDriver.Pause than handling onGamePause()/resume.\u003C/p\u003E\u003Cp\u003ENow I\\\u0027ve got two questions:\u003C/p\u003E\u003Cp\u003E-Does anyone know of a way to catch when a flight is ended(as in switching flights, ending them, or whatever)? Ending a flight even through vessel switching seems to clear whatever GUI callbacks you had setup(with no additional code on your part), and this is giving me problems as I need to know if I have to reinstate the GUI callback.\u003C/p\u003E\u003Cp\u003E-RenderingManager.AddToPostDrawQueue() takes an int \u0027queueSpot\u0027 as it\\\u0027s first param, however, there doesn\\\u0027t seem to be a provided getter function to return a valid entry for this. At first, I assumed this was a sort of unique GUID so the wrapper can keep track of handles, but then I noticed there\\\u0027s also \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic Callback[] postDrawQueue;\u003C/pre\u003E\u003Cp\u003E which is an array, not a list, which would imply it has a predetermined number of elements.\u003C/p\u003E\u003Cp\u003E My questions, if anyone knows the answers are what are we supposed to pass as queueSpot, and are we limited to a predetermined number of registered callbacks, and if so, how many? \u003C/p\u003E\n"},{"CreatedByName":"Candre","CreatedById":15181,"CreatedDateTime":"2012-05-14T07:51:06Z","Content":"\n\u003Cp\u003EI\\\u0027m new to this, but here goes: how can I place text at some point in 3D space, like the pink indicator for other spacecraft?\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-05-14T09:30:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Candre\u0022 data-cite=\u0022Candre\u0022\u003E\u003Cdiv\u003EI\\\u0027m new to this, but here goes: how can I place text at some point in 3D space, like the pink indicator for other spacecraft?\u003C/div\u003E\u003C/blockquote\u003EThat\\\u0027s how it\\\u0027s done in Laser plugin:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E  void drawGUI() {\u003Cbr\u003E      Vector3 p = Camera.main.WorldToScreenPoint( some_point_in_3D );\u003Cbr\u003E      if( p.z \u0026gt;= 0 ) { // it\\\u0027s before the camera, not behind it\u003Cbr\u003E         p.y = Camera.main.pixelHeight - p.y;\u003Cbr\u003E         // now draw some text at \u0027p\u0027 point\u003Cbr\u003E      }\u003Cbr\u003E  }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-18T12:00:41Z","Content":"\n\u003Cp\u003E Looking through my output log, seems the plugin parser is trying to load stuff from subdirectories under Plugins. If you stuck your project folders in there, probably a good idea to move them out now.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-19T06:14:59Z","Content":"\n\u003Cp\u003E Found interesting data while trying to drain Kerbin\\\u0027s oceans, and fix the lag maybe.\u003C/p\u003E\u003Cp\u003E -FlightGlobals.fetch.bodies will give you an array of celestial bodies, of which one is named \u0027Kerbin\u0027 and one is \u0027Sun\u0027\u003C/p\u003E\u003Cp\u003E -Iterating that array for \u0027Kerbin\u0027 will give you it\\\u0027s CelestialBody\u003C/p\u003E\u003Cp\u003E -PlanetQuadTreeController CelestialBody.terrainController from one of those cb\\\u0027s yeilds null\u003C/p\u003E\u003Cp\u003E -However, PQS CelestialBody.pqsController is NOT null, have to play with this further\u003C/p\u003E\u003Cp\u003E -Also, CelestialBody.referenceBody called on Kerbin\\\u0027s cb will give you the \u0027Sun\u0027, might be helpful if r4m0n gets around to making MechJeb allow reverse hierarchy injection burns.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-22T12:49:26Z","Content":"\n\u003Cp\u003E Ok, I got Mu\\\u0027s \u0027generic reaction engine\u0027 example set up and (mostly) working (with dual fuel use/storage also), but there\\\u0027s something that\\\u0027s bugging me still.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003E[KSPField]\u003Cbr\u003Epublic string thrustVectorTransformName;\u003Cbr\u003E\u003Cbr\u003EthrustTransform = part.FindModelTransform(thrustVectorTransformName);\u003Cbr\u003E\u003Cbr\u003Eif (thrustTransform != null \u0026amp;\u0026amp; part.Rigidbody != null)\u003Cbr\u003E {\u003Cbr\u003E part.Rigidbody.AddForceAtPosition(-thrustTransform.forward * currentThrust, thrustTransform.position);\u003Cbr\u003E }\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E That\\\u0027s not what it looks like in my version, but there\\\u0027s potentially something there I can\\\u0027t figure, as I don\\\u0027t touch modeling \u0027art\u0027 stuff if I can avoid it.\u003C/p\u003E\u003Cp\u003EthrustVectorTransformName is supposed to be a string denoting \u0027something\u0027 that\\\u0027s got with\u003C/p\u003E\u003Cp\u003Epart.FindModelTransform(thrustVectorTransformName)\u003C/p\u003E\u003Cp\u003E I assume this is done either to confuse us, or to take into account mirroring/rotated parts with the VAB changes.\u003C/p\u003E\u003Cp\u003E I want to know exactly what this string value is supposed to be set to, or what the relevant code object is so I can pull it thataway. I have a strong suspicion it\\\u0027s something defined in the model heirarchy, but I just don\\\u0027t understand such things.\u003C/p\u003E\u003Cp\u003E Once I get some kind of readout on the tank contents, I\\\u0027ll put up the whole thing in this forum section for anyone who wants a concrete example of how to get the new module and resource stuff working.\u003C/p\u003E\n"},{"CreatedByName":"adlingtont","CreatedById":24348,"CreatedDateTime":"2012-05-22T17:42:27Z","Content":"\n\u003Cp\u003ENot sure if this has been asked already but I did have a quick search.\u003C/p\u003E\u003Cp\u003EWhat is the best way to get the distance between two vessels? Namely the vessel a modified part is attached to (currently being flown) and any other vessel in the world. I assume it would be using \u003Cem\u003EVessel.findWorldCenterOfMass();\u003C/em\u003E and doing some calculations on the coords.\u003C/p\u003E\u003Cp\u003EOn a related note, what are the coords relative to?\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-05-22T17:56:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022adlingtont\u0022 data-cite=\u0022adlingtont\u0022\u003E\u003Cdiv\u003ENot sure if this has been asked already but I did have a quick search.\u003Cp\u003EWhat is the best way to get the distance between two vessels? Namely the vessel a modified part is attached to (currently being flown) and any other vessel in the world. I assume it would be using \u003Cem\u003EVessel.findWorldCenterOfMass();\u003C/em\u003E and doing some calculations on the coords.\u003C/p\u003E\u003Cp\u003EOn a related note, what are the coords relative to?\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003EYes, exactly.\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Efloat distance = ( vessel1.findWorldCenterOfMass() - vessel2.findWorldCenterOfMass() ).magnitude;\u003C/pre\u003E\u003Cp\u003EWorld coordinates are measured relative to \u003Cem\u003E\u0027scene origin\u0027, \u003C/em\u003Esome arbitrary point in space \u003Cem\u003Ewhich constantly changes during the flight\u003C/em\u003E (Harv references it as \u003Cem\u003E\u0027floating origin\u0027\u003C/em\u003E). That shouldn\\\u0027t bother you either; just don\\\u0027t \u003Cem\u003Estore \u003C/em\u003Ethose coordinates, get newest ones \u003Cem\u003Ein each frame\u003C/em\u003E instead.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-23T02:44:34Z","Content":"\n\u003Cp\u003E Not sure if this helps, but there\\\u0027s also a static FlightGlobals.Vessels which should hold a List\u0026lt;Vessel\u0026gt; that you can get anywhere. Might also be easier to grab FlightGlobals.Vessels[0].rootPart.transform.position, and compare those values, once you find which one is your vessel. Just mentioned it, as those are all from statics, so you can pull the values from anywhere.\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-05-23T06:51:01Z","Content":"\n\u003Cp\u003E It seems that under the new regime, \u0026gt;model/obj_gimbal\u0026lt; is a string that gives me a working solution to my earlier problem:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kellven\u0022 data-cite=\u0022kellven\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E Ok, I got Mu\\\u0027s \u0027generic reaction engine\u0027 example set up and (mostly) working (with dual fuel use/storage also), but there\\\u0027s something that\\\u0027s bugging me still.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003E[KSPField]\u003Cbr\u003Epublic string thrustVectorTransformName;\u003Cbr\u003E\u003Cbr\u003EthrustTransform = part.FindModelTransform(thrustVectorTransformName);\u003Cbr\u003E\u003Cbr\u003Eif (thrustTransform != null \u0026amp;\u0026amp; part.Rigidbody != null)\u003Cbr\u003E {\u003Cbr\u003E part.Rigidbody.AddForceAtPosition(-thrustTransform.forward * currentThrust, thrustTransform.position);\u003Cbr\u003E }\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E That\\\u0027s not what it looks like in my version, but there\\\u0027s potentially something there I can\\\u0027t figure, as I don\\\u0027t touch modeling \u0027art\u0027 stuff if I can avoid it.\u003C/p\u003E\u003Cp\u003EthrustVectorTransformName is supposed to be a string denoting \u0027something\u0027 that\\\u0027s got with\u003C/p\u003E\u003Cp\u003Epart.FindModelTransform(thrustVectorTransformName)\u003C/p\u003E\u003Cp\u003E I assume this is done either to confuse us, or to take into account mirroring/rotated parts with the VAB changes.\u003C/p\u003E\u003Cp\u003E I want to know exactly what this string value is supposed to be set to, or what the relevant code object is so I can pull it thataway. I have a strong suspicion it\\\u0027s something defined in the model heirarchy, but I just don\\\u0027t understand such things.\u003C/p\u003E\u003Cp\u003E Once I get some kind of readout on the tank contents, I\\\u0027ll put up the whole thing in this forum section for anyone who wants a concrete example of how to get the new module and resource stuff working.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003E Whatever gets returned from part.FindModelTransform(\u0027model/obj_gimbal\u0027) not only is not null, but it actually works in my code for making the thing fly straight. What\\\u0027s very interesting about this, is that I\\\u0027m using C7\\\u0027s structural fuselage with that code. When exactly did fuselages get a obj_gimbal?\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E It IS null, I just commented out my debug spammer. Now I have to figure out a valid string to pass into part.FindModelTransform, as I\\\u0027m trying to test Mu\\\u0027s ModuleEngineRocketLiquid that\\\u0027s in the KSP assembly, and his version doesn\\\u0027t have a fail fallback setup like mine does.\u003C/p\u003E\u003Cp\u003E Anyone have a good string to pass into a C7 fuselage to get the main transform?\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-06-08T12:53:26Z","Content":"\n\u003Cp\u003EFun with Part Stage values:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E After testing, came to some conclusions about part stage values:\u003C/p\u003E\u003Cp\u003EFor \u0026lt;Part\u0026gt;:\u003C/p\u003E\u003Cp\u003Estages are 0 based ascending, comand pod starts in stage 0.\u003C/p\u003E\u003Cp\u003EinverseStage = the stage the part appears in the actual stage GUI(ie, final stage after all adjustments).\u003C/p\u003E\u003Cp\u003EinStageIndex = the index value of a part within a stage. Zero based.(ie if part is the third part in the fifth stage: inverseStage = 4 \u0026amp; inStageIndex = 2)\u003C/p\u003E\u003Cp\u003EoriginalStage = which stage the part was added to originally by the game. Zero based.\u003C/p\u003E\u003Cp\u003EdefaultInverseStage = appears the same as above, unclear difference.\u003C/p\u003E\u003Cp\u003EmanualStageOffset = what it says on the tin.\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"jhultgre","CreatedById":15519,"CreatedDateTime":"2012-06-08T21:02:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kellven\u0022 data-cite=\u0022kellven\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EinverseStage = the stage the part appears in the actual stage GUI(ie, final stage after all adjustments).\u003C/p\u003E\u003Cp\u003EoriginalStage = which stage the part was added to originally by the game. Zero based.\u003C/p\u003E\u003Cp\u003EdefaultInverseStage = appears the same as above, unclear difference.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI haven\\\u0027t checked these values in flight but as far as in the editor\u003C/p\u003E\u003Cp\u003EinverseStage = Usually is the stage that it appears in in the gui, however if you move all parts out of a stage and remove that empty stage this is no longer accurate. The game still thinks that empty stage exists even though it doesn\\\u0027t show up on the GUI. This may be a bug and is an issue i\\\u0027m still trying to solve for my engineer plugin.\u003C/p\u003E\u003Cp\u003EdefaultInverseStage = The stage where the game puts a part when you add it to a ship while in the editor at least.\u003C/p\u003E\u003Cp\u003EoriginalStage = seams to always be 0 in the editor possibly just not used there.\u003C/p\u003E\u003Cp\u003EinStageIndex = I\\\u0027ve seen negative values for this not sure what to make of it\u003C/p\u003E\u003Cp\u003Ethere are some more stage related values than what you listed they don\\\u0027t always make cense to me in the editor and may only have meaning in the flight scene\u003C/p\u003E\u003Cp\u003EchildStageOffset\u003C/p\u003E\u003Cp\u003EstageOffset\u003C/p\u003E\u003Cp\u003EstageAfter\u003C/p\u003E\u003Cp\u003EstageBefore\u003C/p\u003E\n"},{"CreatedByName":"kellven","CreatedById":16971,"CreatedDateTime":"2012-06-13T03:32:56Z","Content":"\n\u003Cp\u003EFun with Gimbals:\u003C/p\u003E\u003Cp\u003E For some reason, I have both .mu files, and .dae stuff in my LiquidEngine2 Part folder, not sure if I put them there, or Squad did.\u003C/p\u003E\u003Cp\u003E In any event, trying to grab hold of the gimbal transform, this is what I encountered:\u003C/p\u003E\u003Cp\u003E -Using the model.mu files:\u003C/p\u003E\u003Cp\u003E The following all fail, except the very last one, part.FindModelTransform(\u0027solid_rocket\u0027);\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003EGimbalTransform = part.transform.FindChild(\u0027model\u0027).FindChild(\u0027obj_gimbal\u0027);\u003Cbr\u003Eif (GimbalTransform == null)\u003Cbr\u003E {\u003Cbr\u003E Debug.Log(\u0027KIS fail0\u0027);\u003Cbr\u003E GimbalTransform = part.transform.Find(\u0027model/obj_gimbal\u0027);\u003Cbr\u003E if (GimbalTransform == null)\u003Cbr\u003E {\u003Cbr\u003E Debug.Log(\u0027KIS fail1\u0027);\u003Cbr\u003E GimbalTransform = part.FindModelTransform(\u0027obj_gimbal\u0027);\u003Cbr\u003E if (GimbalTransform == null)\u003Cbr\u003E {\u003Cbr\u003E Debug.Log(\u0027KIS fail2\u0027);\u003Cbr\u003E GimbalTransform = part.transform.Find(\u0027solid_rocket\u0027);\u003Cbr\u003E if (GimbalTransform == null)\u003Cbr\u003E {\u003Cbr\u003E Debug.Log(\u0027KIS fail3\u0027);\u003Cbr\u003E GimbalTransform = part.transform.FindChild(\u0027solid_rocket\u0027);\u003Cbr\u003E if (GimbalTransform == null)\u003Cbr\u003E {\u003Cbr\u003E Debug.Log(\u0027KIS fail4\u0027);\u003Cbr\u003E GimbalTransform = part.FindModelTransform(\u0027solid_rocket\u0027);\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E How did I get \u0027solid_rocket\u0027? I derived from LiquidEngine, and asked it nicely to tell me what \u0027fallbackGimbalName\u0027 in LiquidEngine was.\u003C/p\u003E\u003Cp\u003E -Now using the mystery liquidEngine2.DAE files I had:\u003C/p\u003E\u003Cp\u003E The first three attempts all succeed in acquiring the gimbal transform.\u003C/p\u003E\u003Cp\u003E The last three all fail.\u003C/p\u003E\u003Cp\u003E Conclusion:\u003C/p\u003E\u003Cp\u003E \u0027obj_gimbal\u0027 has been replaced with \u0027solid_rocket\u0027 in the LiquidEngine2 at least. The .name of the Transform assigned to the gimbal object also reports as \u0027solid_rocket\u0027, so I assume that\\\u0027s a fairly safe bet.\u003C/p\u003E\u003Cp\u003E Also, FindModelTransform called on a Part instance seems to be the preferred method of obtaining this thing, as it was the only function which successfully acquired the gimbal transform from the model.mu files, and also retrieved \u0027obj_gimbal\u0027 from the liquidEngine2.DAE without bothering with \u0027model\u0027.\u003C/p\u003E\u003Cp\u003E As always, expect someone to come correct me shortly.\u003C/p\u003E\n"},{"CreatedByName":"tinfoyle","CreatedById":19143,"CreatedDateTime":"2012-06-13T06:38:52Z","Content":"\n\u003Cp\u003EHey all! I\\\u0027ve been working on plugin that I am trying to make so that vertically mounted engines could be automatically controlled to hover at a set altitude. However, I am having some trouble in doing this. I have 90% of the code in place and the only thing that I am actually missing is the formula to calculate it. I\\\u0027ve been trying several different methods and as time is progressing they\\\u0027re becoming less rational.\u003C/p\u003E\u003Cp\u003EI\\\u0027ve got vertical speed and altitude already plugged in. Am I going to need to calculate mass/gravity and thrust also? The primary restraint is to have it work on any ship with enough thrust and vertically mounted engines. Please reply here or PM me. I\\\u0027d appreciate the help and credit will go right where it\\\u0027s due. \u003C/p\u003E\n"},{"CreatedByName":"The_Duck","CreatedById":1156,"CreatedDateTime":"2012-06-13T22:54:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tinfoyle\u0022 data-cite=\u0022tinfoyle\u0022\u003E\u003Cdiv\u003EAm I going to need to calculate mass/gravity and thrust also?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat sounds like the best way to do it. It\\\u0027s not too hard to compute the mass and thrust of your ship and the gravitational force acting on it. Check out the calculation of maxThrustAccel and localg here: \u003Ca href=\u0022http://svn.mumech.com/KSP/trunk/MuMechLib/VesselState.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://svn.mumech.com/KSP/trunk/MuMechLib/VesselState.cs\u003C/a\u003E . Here maxThrustAccel is the maximum acceleration that can be produced by the currently active engines, and localg is the acceleration due to gravity.\u003C/p\u003E\u003Cp\u003EThen if you thrust straight up, you\\\u0027ll accelerate upward at a rate given by (maxThrustAccel - localg). So I would pick a target vertical speed as a function of altitude, something like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Etarget vertical speed = ((target altitude) - (current altitude))/(10 seconds).\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis will cause you to try to descend if you\\\u0027re above your target and ascend if you\\\u0027re below your target. If you manage to follow this vertical speed profile, you\\\u0027ll gradually come to a hover at the target altitude. But of course we don\\\u0027t control our vertical speed, we control our vertical acceleration. To get your vertical speed to match the target vertical speed you might try something like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Etarget vertical acceleration = ((target vertical speed) - (current vertical speed))/(2 seconds)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis will cause you to try to accelerate if your speed is below your target and decelerate if your speed is above your target. Now, your actual acceleration is determined by your throttle setting (a number between 0 [min throttle] and 1 [max throttle]):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evertical acceleration = throttle * maxThrustAccel - localg\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd you can solve this equation for \u0027throttle\u0027 to figure out what throttle you need to achieve a target vertical acceleration.\u003C/p\u003E\u003Cp\u003EI haven\\\u0027t actually tried this algorithm, so no guarantees that it works, but it\\\u0027s what I\\\u0027d try first.\u003C/p\u003E\n"}]}