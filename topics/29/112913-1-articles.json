{"TopicId":112913,"ForumId":29,"TopicTitle":"[Answered] Detecting tab switches in the Astronaut Complex","CreatedByName":"JonDahm","CreatedById":145757,"CreatedDateTime":"2015-06-14T04:43:25Z","PageNum":1,"Articles":[{"CreatedByName":"JonDahm","CreatedById":145757,"CreatedDateTime":"2015-06-14T04:43:25Z","Content":"Is there any way to detect when the users switch tabs in the Astronaut Complex between available, assigned, and KIA kerbals? I can\u0027t find any hooks to execute code whenever the tab switches, and I really don\u0027t want to have to poll in an OnGUI method.\n\n**Edited \u003Ctime datetime=\u00222015-06-20T02:04:03Z\u0022 title=\u002206/20/2015 02:04  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 20, 2015\u003C/time\u003E by JonDahm**\n  \nMarking as answered."},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-06-14T07:11:47Z","Content":"You can build yourself a way in. This example attaches a simple MonoBehaviour to each list which invokes a callback when MonoBehaviour.OnEnable is called:\n\n    public class ListenerInstaller : MonoBehaviour{    public Action CallbackAction;    private class ListenForOnEnable : MonoBehaviour    {        public Callback Callback;        private void OnEnable() { if (Callback != null) Callback(); }    }    private void Start()    {        if (CallbackAction == null)        {            Debug.LogError(\u0022No CallbackAction set\u0022);            return;        }        AddCallbackToPanel(\u0022panel_available\u0022, AstronautComplexTest.Panel.Available);        AddCallbackToPanel(\u0022panel_assigned\u0022, AstronautComplexTest.Panel.Assigned);        AddCallbackToPanel(\u0022panel_kia\u0022, AstronautComplexTest.Panel.Missing);        CallbackAction(AstronautComplexTest.Panel.Available);        Destroy(this);    }    private void AddCallbackToPanel(string panelName, AstronautComplexTest.Panel which)    {        var panel = FindPanel(panelName);        if (panel == null)        {            Debug.LogError(\u0022Couldn\u0027t find a panel called \u0022 \u002B panelName);            return;        }        panel.gameObject.AddComponent().Callback = () =\u003E CallbackAction(which);    }    private UIPanel FindPanel(string name)    {        return GetComponentsInChildren().FirstOrDefault(p =\u003E p.name == name);    }    public static void Install(Action callback)    {        var complex = UIManager.instance.gameObject.GetComponentsInChildren(true).FirstOrDefault();        if (complex == null)        {            Debug.LogError(\u0022Didn\u0027t find CMAstronautComplex\u0022);            return;        }        complex.transform.Find(\u0022CrewPanels/panel_enlisted\u0022).gameObject.AddComponent().CallbackAction =            callback;    }}[KSPAddon(KSPAddon.Startup.SpaceCentre, false)]public class AstronautComplexTest : MonoBehaviour{    public enum Panel    {        Available,        Assigned,        Missing    }    private void Start()    {        ListenerInstaller.Install(OnActivePanelChanged);    }    private void OnActivePanelChanged(Panel which)    {        Debug.LogWarning(\u0022Panel changed to \u0022 \u002B which);    }}"},{"CreatedByName":"JonDahm","CreatedById":145757,"CreatedDateTime":"2015-06-20T00:24:22Z","Content":"Thank you so much, EvilReeper! That worked perfectly!"}]}