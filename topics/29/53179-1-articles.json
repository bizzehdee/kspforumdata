{"TopicId":53179,"ForumId":29,"TopicTitle":"IConfigNode and InternalModule","CreatedByName":"Mihara","CreatedById":59752,"CreatedDateTime":"2013-11-15T03:57:01Z","PageNum":1,"Articles":[{"CreatedByName":"Mihara","CreatedById":59752,"CreatedDateTime":"2013-11-15T03:57:01Z","Content":"\n\u003Cp\u003ETry as I might, I could not get IConfigNode-type KSPFields to work in InternalModule at all. I\u0027m not sure why, and no amount of voodoo managed to even get OnLoad to run. No amount of searching resulted in an answer on what I could possibly be doing wrong, people generally don\u0027t write much InternalModules, and they\u0027re apparently having problems getting KSPField/IConfigNode to work in regular parts as well, there are very few examples of published source using it.\u003C/p\u003E\u003Cp\u003EI have, nevertheless, stumbled onto an amusing roundabout method to get the functionality anyway, which I present here in case anyone tries to google for one:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E// Every config file is loaded in the GameDatabase tree of ConfigNodes.\u003Cbr\u003E// We can just ask the GameDatabase for all PROP config nodes -- i.e.\u003Cbr\u003E// configurations of all props.                      \u003Cbr\u003Eforeach (ConfigNode node in GameDatabase.Instance.GetConfigNodes (\u0022PROP\u0022)) {\u003Cbr\u003E\t// And then we can find the prop we live in by name, since prop names\u003Cbr\u003E\t// are meant to be unique.\u003Cbr\u003E\tif (node.GetValue (\u0022name\u0022) == internalProp.propName) {\u003Cbr\u003E\t\t// So this is the configuration of our prop after it got loaded. Nice place.\u003Cbr\u003E\t\t// We know it contains at least one MODULE node, us.\u003Cbr\u003E\t\t// And we know our moduleID, which is the number in order of being listed in the prop.\u003Cbr\u003E\t\t// Therefore the module section by that number is our module\u0027s own config node.\u003Cbr\u003E\t\tConfigNode ourConfigNode = node.GetNodes (\u0022MODULE\u0022) [moduleID];\u003Cbr\u003E\t\tbreak;\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EUpon which, ourConfigNode contains the root ConfigNode for our module configuration and from there on it\u0027s smooth sailing parsing out the section you couldn\u0027t get at with a KSPField.\u003C/p\u003E\n"}]}