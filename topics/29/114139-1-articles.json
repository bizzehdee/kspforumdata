{"TopicId":114139,"ForumId":29,"TopicTitle":"API for ModuleAlternator, and two litte questions related to the class Orbit","CreatedByName":"Tonnz","CreatedById":133260,"CreatedDateTime":"2015-06-25T16:30:59Z","PageNum":1,"Articles":[{"CreatedByName":"Tonnz","CreatedById":133260,"CreatedDateTime":"2015-06-25T16:30:59Z","Content":"Hello,\n\ni am searching for some info about the ModuleAlternator module in KSP.\n\nI couldn\u0027t find anything useful in the public KSP API Documentation, or somewhere else through google.\n\nSpecifically, *i need to find a way to get the resource consumption/creation rate (and of course what ressource it is) of the ModuleAlternator.*\n\nThat\u0027s my main question, anything below this is optional.\n\n**Some background info:**\n\nWhy?\n\nI am attempting to write my first mod, it is also my first attempt at creating something C# related on my own.\n\nIt would be a mod that enables timewarp while some engines (electric engines for example) are still running. Unfortunately there aren\u0027t any still around that work. I tried to fix one of them on/for my own, and partially succeeded; but there is one bug (found in all related mods) that i could not fix, but i think i have an idea\\*(see below). It\u0027s the issue where a craft \u0022pulls\u0022 it apoapsis around and cannot really pass it, no matter how low the acceleration is, messing the orbit up (basically rotating the orbit in it\u0027s plane). So, i thought i should try to roll out my own mod.\n\nWhy do i need ModuleAlternator? Because some engines use it (especially NF-electric engines in Realism Overhaul), and it would be a shame if they didn\u0027t work in timewarp (while the engine is running).\n\nI hope somebody knows more about ModuleAlternator, otherwise i would have to create another module only for this and use ModuleManager to set it to the ModuleAlternator-parameters for every part.\n\nThat would be easy, but i don\u0027t like this approach at all. A little too intrusive and unelegant, knowing how ModuleAlternator works and how to communicate with it would be much better.\n\n\\* All timewarp-engines-mods i have seen that also have this issue (all, basically) use the orbit.UpdateFromStateVectors(...) method to update the orbit. I narrowed the issue down to this method.\n\nI would try to use myOrbit.UpdateFromOrbitAtUT (**Orbit** orbit, **double** UT, **CelestialBody** toBody) method instead, creating another Orbit-class that has the correct parameters.\n\nWell, i would need to figure out some orbital physics/mathematics, but that is a minor issue. Google will help me out at finding the needed equations ![:wink:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)\n\n**My** **two** **other questions:**\n\nWhile i\u0027m at it, i have two other little questions:\n\nI found out (the hard way) that the Orbit class needs the y and z coordinates of vectors swapped, is it correct that this is the **only** class that does this?\n\nAnd concerning orbital mechanics, what is meant by \u0022epoch\u0022 in \u0022mean anomaly at epoch\u0022 in ksp? Wiki says *\u0022The value M0 denotes the mean anomaly at epoch, which is the mean anomaly at the time the measurement was taken\u0022* when was \u0022the measurement taken\u0022 in ksp? Is it at universalTime = 0 ?\n\nI hope somebody can help! Any opinion or hint (also not directly related to the questions) is very welcome! ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\nPlease note that this is my first attempt at programming mods for ksp, also my first real attempt at c#. My only experience at this is from looking at source files and manipulating existing mods to fit my needs ![:D](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif)\n\n**Edited \u003Ctime datetime=\u00222015-06-25T20:21:22Z\u0022 title=\u002206/25/2015 08:21  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 25, 2015\u003C/time\u003E by Tonnz**"},{"CreatedByName":"Tonnz","CreatedById":133260,"CreatedDateTime":"2015-06-25T18:35:24Z","Content":"Oh, forget about my first question.\n\nI found out that you can use the Object Browser of Visual Studio to find out more information about this kind of stuff.\n\nI used notepad\u002B\u002B to create, and the inbuilt windows command-line tool to compile .cs files ![:blush:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_embarrassed.gif)\n\nEDIT: Figured the Alternator thing out! ![:D](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif)\n\n**Edited \u003Ctime datetime=\u00222015-06-25T22:58:51Z\u0022 title=\u002206/25/2015 10:58  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 25, 2015\u003C/time\u003E by Tonnz**"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-25T20:26:05Z","Content":"The Y/Z switch originates with the vessel class. Y (up) is forward for a rocket on the launchpad (and thus vessel.up is facing for every vessel), and Z (forward) becomes down relative to the rocket. If you need to check vector orientations, fastest way is to draw them using the ArrowPointer class\n\n    ArrowPointer pointer;public void drawArrow(Vector3 dir){    if (pointer == null)        ArrowPointer.Create(part.transform, Vector3.zero, dir, 10, true);    else        pointer.direction = dir;// if used in release code, clean it up manually with: Destroy(pointer); after you\u0027re finished drawing}\n\n**Edited \u003Ctime datetime=\u00222015-06-25T21:15:45Z\u0022 title=\u002206/25/2015 09:15  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 25, 2015\u003C/time\u003E by Crzyrndm**"},{"CreatedByName":"Tonnz","CreatedById":133260,"CreatedDateTime":"2015-06-25T20:51:12Z","Content":"Thanks for helping! ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\nWell, i\u0027m confused a little:\n\nYou say that y is up for a rocket on the launchpad. How does z (forward) become \u0022down\u0022? Wouldn\u0027t \u0022down\u0022 be just the negative values for Y? I\u0027m confused. Are we talking about actual coordinates or pre-set directions, where z would return a vector that is \u0022forward\u0022 relative to the rocket? I\u0027m going to have a closer look at the ArrowPointer class. Will it actually draw the direction in-game? I\u0027ll have to try it out, would really be useful ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-25T21:27:20Z","Content":"Arrow pointer is an ingame visualisation (it\u0027s what stock uses for aero force display I believe) and yes it\u0027s extremely useful (except for the directions it refuses to draw in for some reason. Don\u0027t know why that happens. Make sure to spin around a bit if you can\u0027t see it).\n\nRE: facing vectors\n\nWell that was slightly confusing. It would seem you are talking about vector.x/y/z, while I was thinking about vessel.transform.forward(Z)/up(Y)/right(X). Anyway...\n\n    Transform t = vessel.transform; // the position and rotation of the root part of the vesselVector3 vesselFacing = t.up; // vessel relative forward is transform.up (vessel facing vector)Vector3 vesselRight = t.right; // vessel relative rightVector3 vesselDown = t.forward; // if up is forward and right is right, forward becomes vessel relative down\n\nYou should be able to use one of the three above vectors instead of manually switching y/z unless I am very much mistaken (Vector.y/z have no real meaning in KSP because world down can be any direction so switching it sounds very dangerous to me)"},{"CreatedByName":"Tonnz","CreatedById":133260,"CreatedDateTime":"2015-06-25T21:47:21Z","Content":"\u003E \n\u003E RE: facing vectors\n\u003E \n\u003E Well that was slightly confusing. It would seem you are talking about vector.x/y/z, while I was thinking about vessel.transform.forward(Z)/up(Y)/right(X). Anyway...\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     Transform t = vessel.transform; // the position and rotation of the root part of the vesselVector3 vesselFacing = t.up; // vessel relative forward is transform.up (vessel facing vector)Vector3 vesselRight = t.right; // vessel relative rightVector3 vesselDown = t.forward; // if up is forward and right is right, forward becomes vessel relative down\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E You should be able to use one of the three above vectors instead of manually switching y/z unless I am very much mistaken (Vector.y/z have no real meaning in KSP because world down can be any direction so switching it sounds very dangerous to me)\n\nThank you, now i get it. I was thinking about *positions* rather than directions. One further question: Are the y/z cord. swapped for all Transforms? Because this would give me a nice explanation for the problem i just ran into (my craft got dragged towards the planet i\u0027m orbiting, very subtle effect, but enough to drag me inside the atmosphere from LKO). I use an integration approach for calculating the distance a craft has travelled while on-rails warp (only accounting for the distance the running engines added). I use the thrustTransforms Transform from the ModuleEngines to determine the direction in which the engine fires, i base my calculation on this, and swap y/z when updating my orbit with it. If it was already swapped to begin with, it would mess everything up. I think it\u0027s time for me to use ArrowPointer \u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9and see what is going on. The velocity-change works fine though, and is also swapped. I\u0027ll have to take a closer look.\n\n**Edited \u003Ctime datetime=\u00222015-06-25T21:49:59Z\u0022 title=\u002206/25/2015 09:49  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 25, 2015\u003C/time\u003E by Tonnz**"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-25T22:08:07Z","Content":"Some things use .forward, some don\u0027t. Fastest way to check a whole lot at once is to project them onto vessel.up\n\n    float projectionLength = Vector3.Dot(vessel.up, vectorToCheck.normalised); // will be 1 or very close to it for aligned vectors, 0 for perpendicular vectors, -1 for opposing vectors. It\u0027s the cosine of the angle between them\n\nYou can just do one huge debug statement with all the vectors you want to check that way"},{"CreatedByName":"Tonnz","CreatedById":133260,"CreatedDateTime":"2015-06-25T22:57:55Z","Content":"\u003E \n\u003E Some things use .forward, some don\u0027t. Fastest way to check a whole lot at once is to project them onto vessel.up\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     float projectionLength = Vector3.Dot(vessel.up, vectorToCheck.normalised); // will be 1 or very close to it for aligned vectors, 0 for perpendicular vectors, -1 for opposing vectors. It\u0027s the cosine of the angle between them\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E You can just do one huge debug statement with all the vectors you want to check that way\n\nI should have thought about that ![:confused:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif). I\u0027m also going to try that one out.\n\n Thank you very much for your help so far. I\u0027ll get back if more questions/problems arise ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"}]}