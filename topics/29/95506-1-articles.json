{"TopicId":95506,"ForumId":29,"TopicTitle":"Applying effects to the flight camera","CreatedByName":"russnash37","CreatedById":77512,"CreatedDateTime":"2015-01-03T13:39:22Z","PageNum":1,"Articles":[{"CreatedByName":"russnash37","CreatedById":77512,"CreatedDateTime":"2015-01-03T13:39:22Z","Content":"\n\u003Cp\u003EHello!\u003C/p\u003E\u003Cp\u003EI\u0027m an oldie to programming but very much a newbie to C# and developing plugins for KSP. At the moment I am working on a mod that will simulate the effects on a pilot of g-forces, for example, red-outs and black-outs and FOV changes in response to different g-force situations.\u003C/p\u003E\u003Cp\u003EThe only part that is eluding me is how to apply simple effects to the flight camera, the FOV changes are easy enough but I could really use some advice on the best way of applying simple color filtering to the camera. For example, if I create a red Texture2D and apply different levels of opacity to it how do I then go about placing this texture as the last thing drawn by the camera on each frame?\u003C/p\u003E\u003Cp\u003EI am most grateful for any direction that anyone could kindly give \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-01-03T14:31:03Z","Content":"\n\u003Cp\u003EI\u0027ve no idea myself, but the code from this wonderful mod may well point you in the right direction: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/101681-0-25-WIP-MovieTime-v0-1-%28Nov-30%29-Olde-Timey-Movie-and-TV-Effects\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/101681-0-25-WIP-MovieTime-v0-1-%28Nov-30%29-Olde-Timey-Movie-and-TV-Effects\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"russnash37","CreatedById":77512,"CreatedDateTime":"2015-01-03T15:34:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EI\u0027ve no idea myself, but the code from this wonderful mod may well point you in the right direction: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/101681-0-25-WIP-MovieTime-v0-1-%28Nov-30%29-Olde-Timey-Movie-and-TV-Effects\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/101681-0-25-WIP-MovieTime-v0-1-%28Nov-30%29-Olde-Timey-Movie-and-TV-Effects\u003C/a\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for the pointer, I\u0027ll take a look!\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EAfter looking through the MovieTime mod code I was lead to this function in Unity which looks like the key:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/MonoBehaviour.OnRenderImage.html\u0022 rel=\u0022external nofollow\u0022\u003EMonoBehaviour.OnRenderImage(RenderTexture,RenderTexture)\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EHopefully, I\u0027ll be able to work this one out!\u003C/p\u003E\u003Cp\u003EThanks again for the pointer, lo-fi.\u003C/p\u003E\n"},{"CreatedByName":"Daid","CreatedById":32171,"CreatedDateTime":"2015-01-03T15:43:49Z","Content":"\n\u003Cp\u003EMost likely you want to look at the \u0022RenderingManager.AddToPreDrawQueue\u0022 or \u0022RenderingManager.AddToPostDrawQueue\u0022. As this should allow you to do drawing. Check the Unity documentation on how to draw GUI elements on how to draw a full screen colored overlay. (Don\u0027t think you need to create a texture to do this)\u003C/p\u003E\n"},{"CreatedByName":"russnash37","CreatedById":77512,"CreatedDateTime":"2015-01-03T21:41:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Daid\u0022 data-cite=\u0022Daid\u0022\u003E\u003Cdiv\u003EMost likely you want to look at the \u0022RenderingManager.AddToPreDrawQueue\u0022 or \u0022RenderingManager.AddToPostDrawQueue\u0022. As this should allow you to do drawing. Check the Unity documentation on how to draw GUI elements on how to draw a full screen colored overlay. (Don\u0027t think you need to create a texture to do this)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you for your input, Daid. It definitely seems to be easier using your method, I came up with the following code snippet which ended up needing a texture. I just created a 32x32 solid white png for that:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.IO;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace G_Force\u003Cbr\u003E{\u003Cbr\u003E    [KSPAddon(KSPAddon.Startup.Flight, true)]\u003Cbr\u003E    public class G_Force : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        double currentG;\u003Cbr\u003E        float initialFOV;\u003Cbr\u003E        Color colorOut;\u003Cbr\u003E        float alpha;\u003Cbr\u003E        Texture2D whiteTexture = new Texture2D(32, 32, TextureFormat.ARGB32, false);\u003Cbr\u003E\u003Cbr\u003E        protected void Start()\u003Cbr\u003E        {\u003Cbr\u003E            DontDestroyOnLoad(this);\u003Cbr\u003E            initialFOV = FlightCamera.fetch.fovDefault;\u003Cbr\u003E            string path = KSPUtil.ApplicationRootPath.Replace(@\u0022\\\u0022, \u0022/\u0022) \u002B \u0022/GameData/G-Force/White32x32.png\u0022;\u003Cbr\u003E            byte[] texture = File.ReadAllBytes(path);\u003Cbr\u003E            whiteTexture.LoadImage(texture);\u003Cbr\u003E            RenderingManager.AddToPostDrawQueue(3, new Callback(postDraw));\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        void postDraw()\u003Cbr\u003E        {\u003Cbr\u003E            ScreenMessages.PostScreenMessage(currentG.ToString() \u002B \u0022 / \u0022 \u002B alpha.ToString());\u003Cbr\u003E            GUI.color = colorOut;\u003Cbr\u003E            GUI.DrawTexture(new Rect(0, 0, Screen.width, Screen.height), whiteTexture);\u003Cbr\u003E            GUI.color = Color.white;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        public void Update()\u003Cbr\u003E        {\u003Cbr\u003E            currentG = FlightGlobals.ActiveVessel.geeForce;\u003Cbr\u003E\u003Cbr\u003E            if (currentG \u0026gt; 1)\u003Cbr\u003E            {\u003Cbr\u003E                colorOut = Color.black;\u003Cbr\u003E                alpha = (float)currentG / 9;\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                colorOut = Color.red;\u003Cbr\u003E                alpha = 1 - (float)currentG;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            colorOut.A(alpha);\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EUnfortunately, the alpha component does not seem to be taking any effect. I only get solid black or solid red.\u003C/p\u003E\u003Cp\u003EMy best guess so far, from googleing the Unity pages, is that I can only use alpha transparency if I use a shader. This is new territory for me though and I\u0027m not sure if I\u0027m barking up the wrong tree for this problem.\u003C/p\u003E\u003Cp\u003EThanks for all the pointers everyone, I appreciate it.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EI found a mistake in my code, I was doing:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EcolorOut.A(alpha)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E...which didn\u0027t work. I needed to do:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EcolorOut.a = alpha\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhich did work!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-03T21:13:00Z\u0022 title=\u002201/03/2015 09:13  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 3, 2015\u003C/time\u003E by russnash37\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"bernierm","CreatedById":25648,"CreatedDateTime":"2015-01-10T15:38:21Z","Content":"\n\u003Cp\u003EYou could do it fairly easily using the MovieTime shader. Omit the vignette and overlay textures (and set their amounts to 1). Set the Monochrome variable to 1 and then set the MonoColor variable to the color you want to tint to (ie, red). Maybe the Brightness variable as well.\u003C/p\u003E\u003Cp\u003EIt\u0027s essentially the same as what I\u0027m doing with the night vision shader, but with a different color and without the overlays (though a growing tunnel-vision vignette would add to the black out/red out effect).\u003C/p\u003E\u003Cp\u003EShaders were a mystery to me when I started this, but this resource in particular: \u003Ca href=\u0022http://it-ebooks.info/book/2954/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://it-ebooks.info/book/2954/\u003C/a\u003E was extremely helpful. It didn\u0027t hurt that one of the examples was exactly what I wanted.\u003C/p\u003E\n"}]}