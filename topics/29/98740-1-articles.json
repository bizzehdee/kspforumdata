{"TopicId":98740,"ForumId":29,"TopicTitle":"[Help] NullReference when changing scene","CreatedByName":"Olympic1","CreatedById":79730,"CreatedDateTime":"2015-02-04T12:56:55Z","PageNum":1,"Articles":[{"CreatedByName":"Olympic1","CreatedById":79730,"CreatedDateTime":"2015-02-04T12:56:55Z","Content":"\n\u003Cp\u003EI\u0027m just a beginner in the coding but Ikeep getting a NullReference when change from a scene (ex: From Main Menu to Space Center)\u003C/p\u003E\u003Cp\u003EThis is my code where it throws the error\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid Start()\u003Cbr\u003E{\u003Cbr\u003E    foreach (var vessel in FlightGlobals.Vessels)\u003Cbr\u003E    {\u003Cbr\u003E        vessel.FindPartModulesImplementing\u0026lt;SkyLabExperiment\u0026gt;().ForEach(part =\u0026gt;\u003Cbr\u003E        {\u003Cbr\u003E            part.config = this;\u003Cbr\u003E        });\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI know that I need to \u0027destroy\u0027 this, but I just don\u0027t know how.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EYou can look into the code on my \u003C/strong\u003E\u003Ca href=\u0022https://github.com/Olympic1/Unofficial_LTech/tree/master/Source\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003EGitHub repo\u003C/strong\u003E\u003C/a\u003E\u003Cstrong\u003E.\u003C/strong\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-06T15:26:46Z\u0022 title=\u002202/06/2015 03:26  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 6, 2015\u003C/time\u003E by Olympic1\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-02-04T13:50:28Z","Content":"\n\u003Cp\u003EWrap your code in try-catch-blocks to get an idea where the exception comes from.\u003C/p\u003E\u003Cp\u003EOr you check each time when you are accessing an object if it\u0027s \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Enull\u003C/span\u003E.\u003C/p\u003E\u003Cp\u003EYou could also print to the log files what your mod is doing atm. This often gives an idea what went wrong.\u003C/p\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2015-02-04T13:59:28Z","Content":"\n\u003Cp\u003Eyour code asks for FlightGlobals.Vessels, afaik that is not available in Main Menu or at space center..\u003C/p\u003E\u003Cp\u003Eyou should add this \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Evoid Start()\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E if (HighLogic.LoadedSceneIsEditor || this.vessel == null)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E return;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E foreach (var vessel in FlightGlobals.Vessels)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E vessel.FindPartModulesImplementing\u0026lt;SkyLabExperiment\u0026gt;().ForEach(part =\u0026gt;\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E part.config = this;\u003C/p\u003E\u003Cp\u003E });\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ethen your code only runs in flight scene..\u003C/p\u003E\n"},{"CreatedByName":"Olympic1","CreatedById":79730,"CreatedDateTime":"2015-02-04T14:24:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022philotical\u0022 data-cite=\u0022philotical\u0022\u003E\u003Cdiv\u003Eyour code asks for FlightGlobals.Vessels, afaik that is not available in Main Menu or at space center..\u003Cp\u003Eyou should add this \u003C/p\u003E\u003Cp\u003Ethen your code only runs in flight scene..\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThx for that, I\u0027ll test it\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022philotical\u0022 data-cite=\u0022philotical\u0022\u003E\u003Cdiv\u003Eyour code asks for FlightGlobals.Vessels, afaik that is not available in Main Menu or at space center..\u003Cp\u003Eyou should add this \u003C/p\u003E\u003Cp\u003Ethen your code only runs in flight scene..\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo I then also need to create a \u0022 \u003Cem\u003Epublic object vessel { get; set; }\u003C/em\u003E \u0022\u003C/p\u003E\u003Cp\u003EBecause\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif (HighLogic.LoadedSceneIsEditor || this.[COLOR=\u0022#FF0000\u0022]vessel[/COLOR] == null)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eisn\u0027t defined nowhere\u003C/p\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-02-04T14:37:52Z","Content":"\n\u003Cp\u003EIt\u0027s obviouse you are still too inexperienced in programming. You should try to write some simple programs like tic tac toe or a calculator instead of modding KSP.\u003C/p\u003E\u003Cp\u003EThe reason is KSP uses some basic and advanced concepts you don\u0027t know about. I mean concepts like state machines, object-oriented programming (including inheritance, polymorphism, the difference between instances and classes, etc.), and so on. We can\u0027t simply tell how all that works - that could take years!\u003C/p\u003E\n"},{"CreatedByName":"Olympic1","CreatedById":79730,"CreatedDateTime":"2015-02-04T14:50:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022*Aqua*\u0022 data-cite=\u0022*Aqua*\u0022\u003E\u003Cdiv\u003EIt\u0027s obviouse you are still too inexperienced in programming. You should try to write some simple programs like tic tac toe or a calculator instead of modding KSP.\u003Cp\u003EThe reason is KSP uses some basic and advanced concepts you don\u0027t know about. I mean concepts like state machines, object-oriented programming (including inheritance, polymorphism, the difference between instances and classes, etc.), and so on. We can\u0027t simply tell how all that works - that could take years!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know that\u0027s why I said in the beginning that I\u0027m just a beginner in coding.\u003C/p\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-02-04T15:06:07Z","Content":"\n\u003Cp\u003EThat\u0027s why I suggested that you should to try some more simple programs instead of a KSP mod. It\u0027ll help you to learn all the basic concepts.\u003C/p\u003E\u003Cp\u003EI taught myself programming 16 years ago. I studied applied computer science and even I sometimes have problems figuring out what the game does. The lack of documentation doesn\u0027t make it easier. A beginner like you will have a lot more problems.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-02-04T16:36:38Z","Content":"\n\u003Cp\u003EAS a beginner, I\u0027d suggest you run through a bunch of \u003Ca href=\u0022http://unity3d.com/learn/tutorials/modules/beginner/scripting/scripts-as-behaviour-components\u0022 rel=\u0022external nofollow\u0022\u003EUnity scripting tutorials videos\u003C/a\u003E, they\u0027re really good. Unity is free to download, so you can follow and play around far more easily than you can in KSP. I started from cold in June, it\u0027s HARD. KSP makes things seriously frustrating because you have to restart it every time you change your code to get it to reload the plugin. It makes everything take 20x longer than it should while learning and you\u0027re making lots of mistakes, as I\u0027m sure you\u0027ve found. Playing in Unity, you\u0027ll quickly get a handle on how the language works, plus a good grounding in the Unity specific stuff (Classes, Types, etc.). From there, diving into the semi-documented KSP API won\u0027t seem quite so hard. Unity forums are an excellent source of information, and once you\u0027ve got a grasp on the basics, there are some incredibly helpful people round here for those niggly API bits. Don\u0027t forget to read source from other mods, it will teach you loads.\u003C/p\u003E\u003Cp\u003EDon\u0027t be disheartened, just take a step back and make life easy for yourself \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"michaelhester07","CreatedById":96470,"CreatedDateTime":"2015-02-04T20:49:04Z","Content":"\n\u003Cp\u003ELet\u0027s have a crash course (it\u0027s what kerbals do) in inheritance and then a crash course into your \u0022crash\u0022... heh. (i think i\u0027ll mod ksp tonight anyway:) I\u0027ve been sitting on new torus model for 3 months)\u003C/p\u003E\u003Cp\u003EAll Classes in c# are objects. This is the core of objected oriented programming. Objects are Referenced with pointers. Every variable in c# is also treated as a pointer. There are some crazy things you can do with this knowledge but for now we\u0027ll keep to the object definition. Think of your class as a physical object like a flashlight. It has variables (the state of the light, the battery power ,etc) and it has methods (turn on the light, turn off the light, open the battery compartment, etc). When you have a manufactured copy of that flashlight you can point to it with your finger. That flashlight\u0027s object is referenced with a pointer. It is one instance of the designed object. \u003C/p\u003E\u003Cp\u003EYour mod class uses a base object, defined like so\u003C/p\u003E\u003Cp\u003Eclass MyShipModule: Module ...\u003C/p\u003E\u003Cp\u003EThat little colon is telling the compiler that your class extends or inherits the methods and variables from the base class. In this case the module you inherited has a variable called \u0022vessel\u0022 which is an object of type Vessel. That\u0027s what the \u0022this.Vessel\u0022 is. this is a \u0022pointer\u0022 that points to your class\u0027s object. Basically you took someone else\u0027s flashlight and added features to it, like a laser pointer. You can add methods to the new class (turn on the laser, turn off the laser) but you can also still reference the original class\u0027s variables (battery power, state of the light, etc). You can access them through use of the \u0022this\u0022 pointer, which refers to the object that the method is being run on. The this pointer is not actually necessary. just saying Vessel in that if statement is the same.\u003C/p\u003E\u003Cp\u003ENow for the Null Reference Exception.\u003C/p\u003E\u003Cp\u003EIt is possible to have a pointer that does not actually have an object on the other end of it. You\u0027re potentially referencing a new flashlight but it hasn\u0027t arrived yet. This pointer carries a special value of \u0022null\u0022, meaning there is nothing at the other end of it. Your code is trying to use a feature on the flashlight that doesn\u0027t exist (turning on the flashlight). When this happens the computer \u0022throws an exception\u0022. This is the computer saying \u0022hey there is no object on the other end of this pointer, what should I do?\u0022. The exception mechanism allows you to then \u0022catch\u0022 an exception and tell the computer what to do when that happens. Your code is in error because you didn\u0027t tell the computer what to do when the object pointed to doesn\u0027t exist. \u003C/p\u003E\u003Cp\u003EIn this case you\u0027re trying to reference the container Vessels out of FlightGlobals, which is a null pointer. The computer can\u0027t find the object on the other end and throws an exception. There are several ways you can solve this problem.\u003C/p\u003E\u003Cp\u003E1. Prevent it. If you know that there is nothing on the other end of the variable (the game state is the main menu) and the code you\u0027re running won\u0027t apply in the current situation you can check for that and exit your code as there is nothing to do.\u003C/p\u003E\u003Cp\u003E2. Check for the null. You check for Null before you access the variable. If you use the variable a lot this can get tedious. You also have to figure out what to do when the variable is null.\u003C/p\u003E\u003Cp\u003E3. Catch the exception. Wrap it all in a try...catch block. The try block says that there might be an exception occurring in the second of code inside. If one occurs then you\u0027ll catch it with the catch block.\u003C/p\u003E\u003Cp\u003Etry and catch lets you catch any exception, even ones you didn\u0027t think about. What if you go out of bounds on the flight globals vessel list? What if you try to reference something that\u0027s supposed to be there on a vessel?\u003C/p\u003E\u003Cp\u003EWhen choosing how to handle when the variable is null there are slight performance issues to keep in mind.\u003C/p\u003E\u003Cp\u003EIf you chose the prevent it route then you\u0027ll only check the single state (main menu) and you\u0027ll exit out of your code. Any time you don\u0027t execute part of a code you\u0027ll gain some performance. In games this performance means higher framerates. If you do the check for null route then you\u0027ll have a higher performance cost but not too great. This is for if you want to execute your code still but want to handle missing objects on a case-by-case situation. The exception catching path is the slowest as there is \u0022overhead\u0022 in throwing and catching an exception. Exception catching should only be used when the objects you\u0027re using communicate with exceptions. Most of .NET functions are notorious for this. Chances are the code you write for a KSP mod won\u0027t be too complex so simply checking for null before you use an object is the best route.\u003C/p\u003E\u003Cp\u003EThat\u0027s our kerbal crashing course in c#.\u003C/p\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2015-02-05T01:06:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Olympic1\u0022 data-cite=\u0022Olympic1\u0022\u003E\u003Cdiv\u003EI know that\u0027s why I said in the beginning that I\u0027m just a beginner in coding.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBull ...., I started with c# in KSP last april..\u003C/p\u003E\u003Cp\u003EAqua might be right - but this is no answer for your question..\u003C/p\u003E\u003Cp\u003ENo, you don\u0027t need to define the vessel in this case..\u003C/p\u003E\u003Cp\u003Eyou are working on a \u0022PartModule\u0022 - they all come with some vars to work with.\u003C/p\u003E\u003Cp\u003E(inheritance)\u003C/p\u003E\u003Cp\u003EOne is the vessel this script runs on =\u0026gt; this.vessel \u003C/p\u003E\u003Cp\u003EWhile you controll this vessel, it\u0027s the same as \u0022FlightGlobals.ActiveVessel\u0022\u003C/p\u003E\u003Cp\u003EWhile you controll an other vessel, this.vessel still contains the same vessel reference - the one with the part module..\u003C/p\u003E\u003Cp\u003EIt\u0027s used for things like making sure your script only runs when you ARE controlling this vessel - example:\u003C/p\u003E\u003Cp\u003Eif(this.vessel == FlightGlobals.ActiveVessel)\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E //The vessel with this script is the active vessel\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EThat is why it\u0027s there - so you can figure out what\u0027s going on at runtime.\u003C/p\u003E\u003Cp\u003EOk - it\u0027s not there only for that, but that is how you use it mostly..\u003C/p\u003E\u003Cp\u003EThe second one is \u003C/p\u003E\u003Cp\u003Ethis.part\u003C/p\u003E\u003Cp\u003Eworks the same but references the part the module is running on..\u003C/p\u003E\u003Cp\u003EWith those two infos, you have alleady passed the tick tack toe state in my opinion...\u003C/p\u003E\u003Cp\u003EThe other terms Aqua mentined are usefull to know but not relelvant for your task here..\u003C/p\u003E\u003Cp\u003Ebtw - I also am a coder since decades - but c# and Unity and KSP is new to me\u003C/p\u003E\u003Cp\u003EPS: may beMichael explained all that allready - tl/dr before breakfast - if so, I appologize..\u003C/p\u003E\u003Cp\u003Eok - time for breakfast.. :-)\u003C/p\u003E\u003Cp\u003EEn scheene liebi l\u00C3\u0192\u00C2\u00BC\u00C3\u0192\u00C2\u00BCt...\u003C/p\u003E\u003Cp\u003Ethat\u0027s swiss german for: you all have a nice day pals..\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-02-05T02:11:48Z","Content":"\n\u003Cp\u003ESomething sounded strange about this, so I went and had a look at the source.\u003C/p\u003E\u003Cp\u003Etl;dr: It\u0027s not a partmodule and things here are heading way off course\u003C/p\u003E\u003Cp\u003EI am wondering why that section is split off from the part module, and why KSPAddon is used to initialise it rather than a constructor which looks to be more appropriate from my quick look.\u003C/p\u003E\u003Cp\u003Eie.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// in the partmodule OnStart()\u003Cbr\u003EthisClass test = new thisClass(/* initialisation parameters */)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAdd a constructor to the class that you are currently starting with KSPAddon and drop KSPAddon. The effect should be the same, but you get the code as part of the partmodule. If you want to enforce that only a single instance is running concurrently (may or may not be neccesary) then you can do things like use a \u003Ca href=\u0022https://msdn.microsoft.com/en-us/library/ff650316.aspx\u0022 rel=\u0022external nofollow\u0022\u003ESingleton\u003C/a\u003E variable instead of the constructor directly.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-05T02:30:02Z\u0022 title=\u002202/05/2015 02:30  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 5, 2015\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-02-05T05:26:01Z","Content":"\n\u003Cp\u003EI\u0027m sorry if I you think I\u0027m a dog in a manger. That wasn\u0027t my intension. I just wanted to point Olympic1 to some stuff in which he\u0027ll have quick success. Especially beginners need them as they can quickly get frustrated. They usually don\u0027t have that thick skin yet you sometimes need when programming complex stuff.\u003C/p\u003E\u003Cp\u003EBack to topic:\u003C/p\u003E\u003Cp\u003EI wrote about some common practices to debug a code:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EWrap your code in try-catch-blocks to get an idea where the exception comes from.\u003Cp\u003EOr you check each time when you are accessing an object if it\u0027s null.\u003C/p\u003E\u003Cp\u003EYou could also print to the log files what your mod is doing atm. This often gives an idea what went wrong. \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1) Try-catch-blocks lets you catch an exception which can occure in the try-block and lets you react on it in the catch-block. An exception itself is a state of a program where it can\u0027t continue without crashing because it tries something impossible. Exceptions usually occur when the programmer didn\u0027t make sure that his code only runs with the data it can process.\u003C/p\u003E\u003Cp\u003EThe two most common exceptions which you can accidently trigger when developing code are:\u003C/p\u003E\u003Cp\u003ENullPointerException - happens when you\u0027re trying to access an object that doesn\u0027t exist\u003C/p\u003E\u003Cp\u003EArgumentOutOfBoundsException - happens when you\u0027re trying to access data past the bounds of an array\u003C/p\u003E\u003Cp\u003EThere are a number of ways how to apply a try-catch-block to your code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid Start()\u003Cbr\u003E{\u003Cbr\u003E    try\u003Cbr\u003E    {\u003Cbr\u003E        // If an exception occures inside this block the execution will be aborted immediatly and the catch-block will be executed.\u003Cbr\u003E        // Note: This makes a program run a bit slower because it adds some checks to the enclosed code (invisible to you). So use it sparsely.\u003Cbr\u003E\u003Cbr\u003E        foreach (var vessel in FlightGlobals.Vessels)\u003Cbr\u003E        {\u003Cbr\u003E            vessel.FindPartModulesImplementing\u0026lt;SkyLabExperiment\u0026gt;().ForEach(part =\u0026gt;\u003Cbr\u003E            {\u003Cbr\u003E                part.config = this;\u003Cbr\u003E            });\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E    catch (Exception e)\u003Cbr\u003E    {\u003Cbr\u003E        // This only gets executed if an exception occured somewhere in the try-block above.\u003Cbr\u003E        Debug.LogError(\u0022An exception occured. Details:\\n\u0022 \u002B e.ToString());\u003Cbr\u003E\u003Cbr\u003E        // Normal code execution resumes after the following bracket like nothing happened.\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    // Be aware that you can\u0027t assume at this point in the code that the try-block executed without errors!\u003Cbr\u003E\u003Cbr\u003E    // ... do some other stuff...\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid Start()\u003Cbr\u003E{\u003Cbr\u003E    foreach (var vessel in FlightGlobals.Vessels)\u003Cbr\u003E    {\u003Cbr\u003E        try\u003Cbr\u003E        {\u003Cbr\u003E            // This time the try-catch-block is inside the foreach-loop.\u003Cbr\u003E            // You can do that if you know that the loop itself doesn\u0027t trigger the exception.\u003Cbr\u003E\u003Cbr\u003E            vessel.FindPartModulesImplementing\u0026lt;SkyLabExperiment\u0026gt;().ForEach(part =\u0026gt;\u003Cbr\u003E            {\u003Cbr\u003E                part.config = this;\u003Cbr\u003E            });\u003Cbr\u003E        }\u003Cbr\u003E        catch (Exception e)\u003Cbr\u003E        {\u003Cbr\u003E            Debug.LogError(\u0022An exception occured. Probably the vessel reference isn\u0027t set. Details:\\n\u0022 \u002B e.ToString());\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo be able to use exceptions you\u0027ll have to add the assembly which contains them. That is System.Exception. Add \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Eusing System.Exception;\u003C/span\u003E to the start of your code or use \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003ESystem.Exception e\u003C/span\u003E in the catch-block so the program knows where it can find it.\u003C/p\u003E\u003Cp\u003E2. If you know that a NullPointerException is the reason why your code fails you can do an explicit check for that instead of using a try-catch-block. The execution is a lot faster and you can usually pinpoint the code line where the error happens. Be aware that \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Enull\u003C/span\u003E is a special kind of literal which is usually only used to check for non-existing references, to initialize an reference* and to \u0022delete\u0022 an object (but that\u0027s a more complicated topic so I leave it out).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evoid Start()\u003Cbr\u003E{\u003Cbr\u003E    if (FlightGlobals.Vessels != null) // Check if the content of the Vessels property exists (= has a reference set)\u003Cbr\u003E    {\u003Cbr\u003E        foreach (var vessel in FlightGlobals.Vessels)\u003Cbr\u003E        {\u003Cbr\u003E            if (vessel != null) // Check if vessel exists. If it doesn\u0027t, it\u0027ll trigger the else-block.\u003Cbr\u003E            {\u003Cbr\u003E                vessel.FindPartModulesImplementing\u0026lt;SkyLabExperiment\u0026gt;().ForEach(part =\u0026gt;\u003Cbr\u003E                {\u003Cbr\u003E                    if (part.config != null)\u003Cbr\u003E                    {\u003Cbr\u003E                        part.config = this;\u003Cbr\u003E                    }\u003Cbr\u003E                    else\u003Cbr\u003E                    {\u003Cbr\u003E                        Debug.LogError(\u0022Error: part.config doesn\u0027t exist!\u0022);\u003Cbr\u003E                    }\u003Cbr\u003E                });\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                Debug.LogError(\u0022Error: vessel doesn\u0027t exist!\u0022);\u003Cbr\u003E            }\u003Cbr\u003E            // After the if- or else-block execution will continue at this point.\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E    else\u003Cbr\u003E    {\u003Cbr\u003E        Debug.LogError(\u0022Error: FlightGlobals.Vessels doesn\u0027t exist!\u0022);\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E* \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Enull\u003C/span\u003E can be used to initialize a reference:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EVessel myVessel; // declaration of the myVessel object of the type Vessel\u003Cbr\u003E// Note that myVessel does not have a value yet! There is no content so you can\u0027t even check for null.\u003Cbr\u003EmyVessel = null; // initialize with null\u003Cbr\u003E// Now myVessel contains something you can check for.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E3. The Unity engine provides a simple way to add your own messages to a log. KSP will use this log to create the \u0026lt;KSPdir\u0026gt;\\KSP.log (less detailed, easy to read) and \u0026lt;KSPdir\u0026gt;\\KSP_Data\\output_log.txt (more detailed but a bit more difficult to read) files and shows all the messages in the Alt\u002BF12 debug tool in the game at runtime.\u003C/p\u003E\u003Cp\u003EYou can use that to check what your code does.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// KSP.log: [LOG 01:23:45.678] A simple message in the log\u003Cbr\u003E// output_log.txt: (Filename: C:/BuildAgent/work/d63dfc6385190b60/artifacts/StandalonePlayerGenerated/UnityEngineDebug.cpp Line: 49)\u003Cbr\u003E//                  A simple message in the log\u003Cbr\u003EDebug.Log(\u0022A simple message in the log\u0022);\u003Cbr\u003E\u003Cbr\u003E// KSP.log: [WRN 01:23:45.678] A warning message in the log\u003Cbr\u003E// output_log.txt: (Filename: C:/BuildAgent/work/d63dfc6385190b60/artifacts/StandalonePlayerGenerated/UnityEngineDebug.cpp Line: 49)\u003Cbr\u003E//                  A warning message in the log\u003Cbr\u003EDebug.LogWarning(\u0022A warning message in the log\u0022);\u003Cbr\u003E\u003Cbr\u003E// KSP.log: [ERR 01:23:45.678] An error message in the log\u003Cbr\u003E// output_log.txt: (Filename: C:/BuildAgent/work/d63dfc6385190b60/artifacts/StandalonePlayerGenerated/UnityEngineDebug.cpp Line: 49)\u003Cbr\u003E//                  An error message in the log\u003Cbr\u003EDebug.LogError(\u0022An error message in the log\u0022);\u003Cbr\u003E\u003Cbr\u003E// There\u0027s also LogException but I never saw anyone using it.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-02-05T13:03:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022*Aqua*\u0022 data-cite=\u0022*Aqua*\u0022\u003E\u003Cdiv\u003E1) Try-catch-blocks lets you catch an exception [...]\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ecatch (Exception e)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile a catch all can have some use I would recommend to stay away from it as much as you can. It leads to some really bad coding habit where you just hide the exception and never resolve the real problem. (My code is not immune from that bad habit...)\u003C/p\u003E\u003Cp\u003ECatch specific exception ( DivideByZeroException, FileNotFoundException, ...) and make sure the catch is not commonly called in normal use because it\u0027s S L O W.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022*Aqua*\u0022 data-cite=\u0022*Aqua*\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E* \u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Enull\u003C/span\u003E can be used to initialize a reference:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EVessel myVessel; // declaration of the myVessel object of the type Vessel\u003Cbr\u003E// Note that myVessel does not have a value yet! There is no content so you can\u0027t even check for null.\u003Cbr\u003EmyVessel = null; // initialize with null\u003Cbr\u003E// Now myVessel contains something you can check for.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWut ?!? \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EVessel myVessel;\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs exactly the the same as\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EVessel myVessel = null; \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Efor a class or a reference.\u003C/p\u003E\u003Cp\u003EOr I just moved into some strange parallel universe.\u003C/p\u003E\u003Cp\u003E(Just don\u0027t be pedantic and talk about the Unity null check please)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-05T13:10:04Z\u0022 title=\u002202/05/2015 01:10  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 5, 2015\u003C/time\u003E by sarbian\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-02-05T16:34:38Z","Content":"\n\u003Cp\u003EYou found an error in a C# book I read! It explicitly says that a variable which is declared inside a method does not count as initialized and therefore has no default value (false, 0 or null). I don\u0027t link that book because it\u0027s in German. But what I can link to you is \u003Ca href=\u0022http://www.c-sharpcorner.com/uploadfile/prvn_131971/variables-in-C-Sharp/\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EA variable must have a value assigned to it before that value can be obtained. A variable that is assigned initially at declaration has a well-defined initial value and is always considered definitely assigned. \u003Cspan style=\u0022text-decoration:underline;\u0022\u003EAn initially unassigned variable has no initial value.\u003C/span\u003E For an initially unassigned variable to be considered definitely assigned at a certain location, an assignment to the variable must occur in every possible execution path leading to that location. \u003C/div\u003E\u003C/blockquote\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E(Underscore by me)\u003C/span\u003E\u003Cp\u003ELater it says all variables have a default value. It contradicts itself. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 alt=\u0022:rolleyes:\u0022\u003E\u003C/p\u003E\u003Cp\u003EOn the contrary the \u003Ca href=\u0022https://msdn.microsoft.com/en-us/library/aa691142(v=VS.71).aspx\u0022 rel=\u0022external nofollow\u0022\u003EMSDN\u003C/a\u003E, a \u003Ca href=\u0022https://en.wikibooks.org/wiki/C_Sharp_Programming/Variables\u0022 rel=\u0022external nofollow\u0022\u003Ewiki book\u003C/a\u003E and the \u003Ca href=\u0022http://www.ecma-international.org/publications/standards/Ecma-334.htm\u0022 rel=\u0022external nofollow\u0022\u003EECMA norm\u003C/a\u003E says that in C# variables are always initialized on declaration.\u003C/p\u003E\u003Cp\u003EThere are more people who get that wrong. It must be because of Java (\u003Cspan style=\u0022font-size:8px;\u0022\u003Einstance variables have default values, local variables don\u0027t\u003C/span\u003E) and C\u002B\u002B (\u003Cspan style=\u0022font-size:8px;\u0022\u003Ereference types don\u0027t have a default value, some other types get a value but it\u0027s a random one and the rest gets a 0 converted to that type\u003C/span\u003E) which behave differently.\u003C/p\u003E\u003Cp\u003EIf in question I would stick to what Microsoft says. And initialize variables always on declaration, just to be sure. It\u0027s also considered as good style.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-05T16:38:51Z\u0022 title=\u002202/05/2015 04:38  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 5, 2015\u003C/time\u003E by *Aqua*\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-02-05T18:18:48Z","Content":"\n\u003Cp\u003EThe articles you linked talk about Value, major V, like enum, float, int, ...\u003C/p\u003E\u003Cp\u003EVessel is a Class, so myVessel would be a reference and would have a default value, minor v, of null.\u003C/p\u003E\u003Cp\u003EIt is the same in Java.\u003C/p\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-02-05T18:43:33Z","Content":"\n\u003Cp\u003EIn Java you have primitive types like int, float, etc. There are circumstances in which they don\u0027t get a default value assigned.\u003C/p\u003E\u003Cp\u003EC# doesn\u0027t have primitive types, everything is an object.\u003C/p\u003E\u003Cp\u003EThat\u0027s seems to be one reason why people (like me) mix that up. Because of other programming languages I use, I\u0027m so used to the fact there isn\u0027t always a default value that I assumed it\u0027s the same in C#.\u003C/p\u003E\n"},{"CreatedByName":"michaelhester07","CreatedById":96470,"CreatedDateTime":"2015-02-05T18:44:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EWhile a catch all can have some use I would recommend to stay away from it as much as you can. It leads to some really bad coding habit where you just hide the exception and never resolve the real problem. (My code is not immune from that bad habit...)\u003Cp\u003ECatch specific exception ( DivideByZeroException, FileNotFoundException, ...) and make sure the catch is not commonly called in normal use because it\u0027s S L O W.\u003C/p\u003E\u003Cp\u003EWut ?!? \u003C/p\u003E\u003Cp\u003EIs exactly the the same as\u003C/p\u003E\u003Cp\u003Efor a class or a reference.\u003C/p\u003E\u003Cp\u003EOr I just moved into some strange parallel universe.\u003C/p\u003E\u003Cp\u003E(Just don\u0027t be pedantic and talk about the Unity null check please)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA note about this: \u003C/p\u003E\u003Cp\u003EVessel myVessel;\u003C/p\u003E\u003Cp\u003Evs\u003C/p\u003E\u003Cp\u003EVessel myVessel=null;\u003C/p\u003E\u003Cp\u003EIf you\u0027re compiling this in visual studio it will give you an error when you use variable from the first version and never assigned it. The first version is a declared but uninitialized variable. Used to be that compilers allowed this (c and c\u002B\u002B did) but that\u0027s a HORRRRRRIBLE practice because the variable would pickup whatever was in the memory space that the computer gave it when you ran the program. If you declared \u003C/p\u003E\u003Cp\u003Eint myVariable;\u003C/p\u003E\u003Cp\u003Ethere\u0027s no telling what was in the memory that the computer assigns for that variable and that could lead to unpredictable behavior out of your program. This especially goes for if that variable is supposed to be a pointer.\u003C/p\u003E\u003Cp\u003EC# the compiler correctly identifies this as an error if you try to use the uninitialized variable. Even to test if it\u0027s null. \u003C/p\u003E\u003Cp\u003EIf you create the variable and then assign a new object to it\u003C/p\u003E\u003Cp\u003EVessel myvessel = new Vessel() then you don\u0027t have to initialize. Otherwise you should initialize the variable when you create it.\u003C/p\u003E\u003Cp\u003EEdit: a PS or slashie if you will\u003C/p\u003E\u003Cp\u003E/Uninitialized variables are the cause of probably i\u0027d say 50% of crashes in computer programs (I don\u0027t know the exact percent but it\u0027s up there). The other half is caused by improperly handled multi-threading... something you hopefully don\u0027t have to handle while modding KSP.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-05T18:50:26Z\u0022 title=\u002202/05/2015 06:50  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 5, 2015\u003C/time\u003E by michaelhester07\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-02-05T22:52:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022michaelhester07\u0022 data-cite=\u0022michaelhester07\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEdit: a PS or slashie if you will\u003C/p\u003E\u003Cp\u003E/Uninitialized variables are the cause of probably i\u0027d say 50% of crashes in computer programs (I don\u0027t know the exact percent but it\u0027s up there). The other half is caused by improperly handled multi-threading... something you hopefully don\u0027t have to handle while modding KSP.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe other 50% comes from users. But don\u0027t tell them that.\u003C/p\u003E\n"},{"CreatedByName":"Olympic1","CreatedById":79730,"CreatedDateTime":"2015-02-06T15:24:33Z","Content":"\n\u003Cp\u003EFor the people who want to look into the full code I made a \u003Ca href=\u0022https://github.com/Olympic1/Unofficial_LTech/tree/master/Source\u0022 rel=\u0022external nofollow\u0022\u003EGitHub repo\u003C/a\u003E for it. It is the coding from someone else but I\u0027m updating his mod.\u003C/p\u003E\u003Cp\u003EI didn\u0027t started with the \u0022LTToolBar\u0022 folder yet.\u003C/p\u003E\n"}]}