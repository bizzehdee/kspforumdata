{"TopicId":111356,"ForumId":29,"TopicTitle":"Docking Port module Decouple option","CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-05-30T08:45:36Z","PageNum":1,"Articles":[{"CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-05-30T08:45:36Z","Content":"So I tried to make a part that behaves like a docking port. This is almost identical to existing stock docking part, but I do not have a decouple option, only a \u0022control from here\u0022 option. \n\nDoes that behavior not come with the ModuleDockingNode? Do I need to make a plugin that inherits from the DockingPort class?\n\nObviously plugins give you alot more control to implement custom code, but when you instead are trying to leverage existing stock behavior, what is the difference between using a module in a part config, versus inheriting from the part in a plugin?\n\n    PART {\tname = testPort\tmodule = Part\tauthor = aaron\tmesh = model.mu\tscale = 1\trescaleFactor = 1\tnode_stack_top = 0.0, 1, 0.0, 0.0, 1.0, 0.0, 1\tnode_stack_bottom = 0.0, -1, 0.0, 0.0, -1.0, 0.0, 3\t    node_attach = 0.0, 0, 0.0, 0.0, 0, 1.0\tTechRequired = advConstruction\tentryCost = 12500\tcost = 12500\tcategory = Utility\tsubcategory = 0\ttitle = Test\tmanufacturer = Test\tdescription = Test\tattachRules = 1,1,1,1,0\t// --- standard part parameters ---\tmass = 10\tdragModelType = override\tmaximum_drag = 0\tminimum_drag = 0\tangularDrag = 0\tcrashTolerance = 9\tbreakingForce = 600\tbreakingTorque = 600\tmaxTemp = 5000\tMODULE\t{\t\t name = ModuleDockingNode\t\t referenceAttachNode = top\t\t nodeType = size1\t\t}}"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-05-30T09:55:57Z","Content":"Inheriting from Part is what was done in KSP a long time ago. If you want to implement a function for a part you need to inherit from PartModule.\n\nAs for you problem the part needs a transform to position where the docking is actually done. By default the module search for a transform named \u0022dockingNode\u0022 or you can set nodeTransformName with the module config."}]}