{"TopicId":155577,"ForumId":29,"TopicTitle":"Sanity check, or a humble request to the mightier modders.","CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2017-01-25T19:34:22Z","PageNum":1,"Articles":[{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2017-01-25T19:34:22Z","Content":"\n\u003Cp\u003E\nI have begun modelling a part with a very specific purpose for one of my mods (REKT) however I\u00A0feel it would really benefit from a custom plugin.\n\u003C/p\u003E\n\u003Cp\u003E\nI was hoping to ask those of you knowledgeable in the ways of the plugin if this was viable as a part module:\n\u003C/p\u003E\n\u003Cp\u003E\nI was thinking along the lines of \u0027ModuleAbandonShip\u0027\n\u003C/p\u003E\n\u003Cp\u003E\nThe part would also have the stock \u0027ModuleDecouple\u0027 to which the REKT pods would attach (default set to high jettisoning\u00A0force).\n\u003C/p\u003E\n\u003Cp\u003E\nThe\u00A0\u0027ModuleAbandonShip \u0027\u00A0would have a toggle action of \u0027Abandon Ship\u0027 Which would (automatically) pull kerbals from surrounding parts from\u00A0the vessel, starting from the nearest part, and put them into a waiting REKT pod (attached to this part). With a REKT pod manned it would fire/trigger the ModuleDecouple without input from the player, jettisoning the pod to safety.\n\u003C/p\u003E\n\u003Cp\u003E\nI was thinking this would be done with a delay between each pod launch, both to reduce the strain on the physics/graphics loading and because I think that\u0027s how it would be done in real life too, to avoid collisions.\n\u003C/p\u003E\n\u003Cp\u003E\nOn top of this (and this may be a bigger ask) is the plan that each pod \u0027bay\u0027 on the part with ModuleAbandonShip would have it\u0027s own frangible seal over, which would behave like stock fairings (in the sense that its plays nicely with aerodynamics and the like for launches but when fired its becomes physic-less and disappears (is not debris). An alternative would be a single frangible cowl or faring\u00A0over all the pod \u0027bays\u0027 and when the first one is launched it jettisons the cowl).\n\u003C/p\u003E\n\u003Cp\u003E\nIs this something that a single .dll could do? If so, who do I buy beer/biscuits for that could help me achieve this?\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-25T20:50:09Z","Content":"\n\u003Cp\u003E\nThe issue is that you talk about \u0022a\u0022 part (singular) and part\u0022s\u0022 (plural) in your post.\n\u003C/p\u003E\n\u003Cp\u003E\nNotably you talk about ModuleDecouple (joins two parts together) and a part that has launch bays, but no mention of how the launch bays will hold pods.\n\u003C/p\u003E\n\u003Cp\u003E\nAre they going to be clip-in where you add the launch bays part, then add each pod to a bay in the editor? Or will it be one part where you add the launch bays part in editor and the pods magically appear when you actually abandon ship?\n\u003C/p\u003E\n\u003Cp\u003E\nBoth methods are possible, but very different in code.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2017-01-25T21:30:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222934419\u0022 data-ipsquote-contentid=\u0022155577\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485377409\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n29 minutes ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe issue is that you talk about \u0022a\u0022 part (singular) and part\u0022s\u0022 (plural) in your post.\n\u003C/p\u003E\n\u003Cp\u003E\nNotably you talk about ModuleDecouple (joins two parts together) and a part that has launch bays, but no mention of how the launch bays will hold pods.\n\u003C/p\u003E\n\u003Cp\u003E\nAre they going to be clip-in where you add the launch bays part, then add each pod to a bay in the editor? Or will it be one part where you add the launch bays part in editor and the pods magically appear when you actually abandon ship?\n\u003C/p\u003E\n\u003Cp\u003E\nBoth methods are possible, but very different in code.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nGood points, let me try to clarify;\u00A0take for instance the current REKT inline triple adapter. This part has three \u0027ModuleDecouple\u0027 in it\u0027s config, one for each of the door nodes that the REKT pods attach to.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMy current plan is that the future single part will X number of \u0027ModuleDecouple\u0027 corresponding to the recesses (bays)\u00A0on the mesh in the model. Each gets it\u0027s own transform (empty GameObject) for the \u0027ModuleDecouple\u0027 to work from. For instance the part \u0027REKT Launch-Bay 12\u0027 would be one part, one model, with 12 \u0027ModuleDecouple\u0027 in it\u0027s config, along with \u0027ModuleAbandonShip\u0027.\n\u003C/p\u003E\n\u003Cp\u003E\nThese \u0027ModuleDecouple\u0027 will also be the attachment nodes which the REKT pods attach too, so no magic materialisation of pods, the player\u00A0will have to manually add them in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E/\u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E.\n\u003C/p\u003E\n"},{"CreatedByName":"flywlyx","CreatedById":64436,"CreatedDateTime":"2017-01-27T16:55:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222934468\u0022 data-ipsquote-contentid=\u0022155577\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485379841\u0022 data-ipsquote-userid=\u0022168050\u0022 data-ipsquote-username=\u0022steedcrugeon\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/25/2017 at 4:30 PM, steedcrugeon said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nGood points, let me try to clarify;\u00A0take for instance the current REKT inline triple adapter. This part has three \u0027ModuleDecouple\u0027 in it\u0027s config, one for each of the door nodes that the REKT pods attach to.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMy current plan is that the future single part will X number of \u0027ModuleDecouple\u0027 corresponding to the recesses (bays)\u00A0on the mesh in the model. Each gets it\u0027s own transform (empty GameObject) for the \u0027ModuleDecouple\u0027 to work from. For instance the part \u0027REKT Launch-Bay 12\u0027 would be one part, one model, with 12 \u0027ModuleDecouple\u0027 in it\u0027s config, along with \u0027ModuleAbandonShip\u0027.\n\u003C/p\u003E\n\u003Cp\u003E\nThese \u0027ModuleDecouple\u0027 will also be the attachment nodes which the REKT pods attach too, so no magic materialisation of pods, the player\u00A0will have to manually add them in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E/\u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI would suggest make a ModuleEscapePod for pod and a ModulePodBay for podbay.\u00A0 ModuleEscapePod detach the pod itself and do some awesome maneuver after that,\u00A0ModulePodBay collect kerbonauts\uFF0Cdeploy them to pod and\u00A0tell every pod on it when to deploy. By doing so, your pod is independent from podbay and could work both together and separately.\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-27T16:56:04Z\u0022 title=\u002201/27/2017 04:56  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 27, 2017\u003C/time\u003E by flywlyx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ShotgunNinja","CreatedById":159391,"CreatedDateTime":"2017-01-30T14:39:22Z","Content":"\n\u003Cp\u003E\nIt is possible to move crew from a part to another one in-code. It is also possible to trigger decoupling\u00A0(or any other action)\u00A0in other modules (even if these are in other parts). The \u0027abandon ship\u0027 event in your module can be triggered by action groups (abort, or custom ones).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nPersonally I would go like this:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nhave a REKTpod module added to all your emergency pods\n\u003C/li\u003E\n\u003Cli\u003E\nhave a\u00A0\u0027get the hell out of here\u0027 \u003Cem\u003Eevent \u003C/em\u003Ein the pod module, and associated \u003Cem\u003Eaction\u003C/em\u003E\n\u003Cul\u003E\u003Cli\u003E\ncan be triggered by the player, clicking on a button in the part UI\n\u003C/li\u003E\n\u003Cli\u003E\ncan be triggered by action groups (it may even default to the abort action group)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nwhen\u00A0the \u0027get the hell out of here\u0027 event is triggered:\n\u003Cul\u003E\u003Cli\u003E\nscan the vessel for kerbals\n\u003C/li\u003E\n\u003Cli\u003E\nmove the first one inside the pod\n\u003C/li\u003E\n\u003Cli\u003E\nlook for a stock decoupler module in the emergency pod itself, or in the first parent part\n\u003C/li\u003E\n\u003Cli\u003E\ntrigger the decoupler module \u0027decouple\u0027 action\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\n"},{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2017-01-30T15:12:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222939040\u0022 data-ipsquote-contentid=\u0022155577\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485787162\u0022 data-ipsquote-userid=\u0022159391\u0022 data-ipsquote-username=\u0022ShotgunNinja\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n26 minutes ago, ShotgunNinja said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt is possible to move crew from a part to another one in-code. It is also possible to trigger decoupling\u00A0(or any other action)\u00A0in other modules (even if these are in other parts). The \u0027abandon ship\u0027 event in your module can be triggered by action groups (abort, or custom ones).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nPersonally I would go like this:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nhave a REKTpod module added to all your emergency pods\n\u003C/li\u003E\n\u003Cli\u003E\nhave a\u00A0\u0027get the hell out of here\u0027 \u003Cem\u003Eevent \u003C/em\u003Ein the pod module, and associated \u003Cem\u003Eaction\u003C/em\u003E\n\u003Cul\u003E\u003Cli\u003E\ncan be triggered by the player, clicking on a button in the part UI\n\u003C/li\u003E\n\u003Cli\u003E\ncan be triggered by action groups (it may even default to the abort action group)\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\nwhen\u00A0the \u0027get the hell out of here\u0027 event is triggered:\n\u003Cul\u003E\u003Cli\u003E\nscan the vessel for kerbals\n\u003C/li\u003E\n\u003Cli\u003E\nmove the first one inside the pod\n\u003C/li\u003E\n\u003Cli\u003E\nlook for a stock decoupler module in the emergency pod itself, or in the first parent part\n\u003C/li\u003E\n\u003Cli\u003E\ntrigger the decoupler module \u0027decouple\u0027 action\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis sounds like a good implementation, It would work with all the existing parts of REKT.\n\u003C/p\u003E\n\u003Cp\u003E\nif I was to try and extrapolate from, say Kerbalism, this sort of plugin language, where would you advise I look?\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t mind having a stab at writing my own but if I had some reference to similar instances of code I could at least try to reverse engineer the thing, possible.\n\u003C/p\u003E\n"},{"CreatedByName":"ShotgunNinja","CreatedById":159391,"CreatedDateTime":"2017-01-30T16:48:31Z","Content":"\n\u003Cp\u003E\nSee \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/135230-how-to-make-a-mod/#comment-2561343\u0022 rel=\u0022\u0022\u003Ehere\u003C/a\u003E\u00A0for some basic skeleton code that may get you started writing and compiling plugins.\n\u003C/p\u003E\n\u003Cp\u003E\nYou create a module class, inheriting from \u003Cem\u003EPartModule\u003C/em\u003E. Then you add an \u003Cem\u003EEvacuate() KSPEvent\u003C/em\u003E, and an \u003Cem\u003EEvacuateAction() KSPAction\u003C/em\u003E that simply call \u003Cem\u003EEvacuate()\u003C/em\u003E. Tweak both methods metadata (the \u003Cem\u003EKSPEvent/KSPAction\u003C/em\u003E properties) so that they show the string you want in the UIs, and so that the event button is only available in flight (and not in editor).\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECollections\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGeneric\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enamespace\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E REKT \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n \n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EREKTpod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EPartModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// this is the event: it add a button on the part UI\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan\u003EKSPEvent\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EguiActive \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E guiActiveEditor \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E guiName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Evacuate!\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E active \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEvacuate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// TODO: (1) find first available kerbal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// TODO: (2) move available kerbal inside REKTpod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// TODO: (3) find decoupler module in this part or the parent one\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// TODO: (4) trigger decoupler module \u0027Decouple\u0027 event\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// this is the action: it add an available action to the part, for use in action groups\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan\u003EKSPAction\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Get the hell out of here\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEvacuateAction\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EKSPActionParam\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E param\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003EEvacuate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// this function is called to generate the part tooltip info\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override string \u003C/span\u003E\u003Cspan\u003EGetInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022hey, this actually work!\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// REKT\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nNow you only need to implement \u003Cem\u003EEvacuate()\u003C/em\u003E itself\u00A0(note that the following has not been tested at all).\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E// (1), (2): get first crew member, move it into REKTpod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// here we scan all the parts in the vessel\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nforeach\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E p in vessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eparts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// we skip parts with no crew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ep\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECrewCapacity\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E||\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E p\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprotoModuleCrew\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECount\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Econtinue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// we get the first crew member\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E crew \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E p\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprotoModuleCrew\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// remove it from the part\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  p\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ERemoveCrewmember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecrew\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// and add it to the REKTpod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  part\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAddCrewmember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecrew\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// we moved the crew member, no reason to keep scanning other parts\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebreak\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// (3) find decoupler module\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// first we try to look in the REKTpod part itself\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003EModuleDecouple\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E decoupler \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E part\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfindModuleImplementing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EModuleDecouple\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// then we fallback to look in the parent part\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Edecoupler \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E part\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eparent \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E decoupler \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E part\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eparent\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfindModuleImplementing\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EModuleDecouple\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// (4) decouple\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// if a decoupler module was found\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Edecoupler \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// simply call its \u0027Decouple\u0027 event directly\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// this is equivalent to the user clicking on \u0027decouple\u0027 in the part UI\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  decoupler\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EDecouple\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-30T17:02:32Z\u0022 title=\u002201/30/2017 05:02  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 30, 2017\u003C/time\u003E by ShotgunNinja\u003C/strong\u003E\n\u003Cbr\u003Efixed some minor stuff\n\u003C/span\u003E\n"}]}