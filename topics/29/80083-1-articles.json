{"TopicId":80083,"ForumId":29,"TopicTitle":"Config Nodes, Serialization, and Reflection","CreatedByName":"Teknoman117","CreatedById":53200,"CreatedDateTime":"2014-07-30T08:00:48Z","PageNum":1,"Articles":[{"CreatedByName":"Teknoman117","CreatedById":53200,"CreatedDateTime":"2014-07-30T08:00:48Z","Content":"\n\u003Cp\u003EI\u0027m new to writing KSP plugins, and from what I gather, the proper way of providing configuration to your mods is the config node system. I\u0027ve been looking through some existing mods\u0027 usage of config nodes and usually I see a lot of ConfigNode value checking and if(has node) type stuff. I\u0027ve noticed that the PartModule system makes use of reflection information. You attribute your class members with KSPField and the configurations will be loaded when the game starts and written to automatically.\u003C/p\u003E\u003Cp\u003EIs there a way of doing this for generic configuration? I\u0027m working on a mod called Kopernicus, which aims to be a replacement for and improvement upon PlanetFactory. We want to be able to put .cfgs for the new planets in the plugin directory, and are wondering if there is some way built in to KSP for the corresponding classes to be instantiated when the config files are read, versus having a plugin hook the start instantly event and scrape the config directory manually with the large trees of config node reading. \u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/88168-Early-development-0-24-Kopernicus-Planetary-System-Modifier\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/88168-Early-development-0-24-Kopernicus-Planetary-System-Modifier\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E- Nathaniel R. Lewis\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-07-30T16:16:30Z","Content":"\n\u003Cp\u003ENot really. The best you could do is implement IConfigNode, and use [Persistent] attributes over some fields and then load the object through ConfigNode.LoadObjectFromConfig() (I think I wrote that right), but it\u0027s about as good as it gets. Though you can speed up the process By using \u003Ca href=\u0022https://github.com/StupidChris/RealChute/blob/master/RealChute/Extensions/ConfigNodeExtensions.cs\u0022 rel=\u0022external nofollow\u0022\u003Eexpansion methods\u003C/a\u003E on ConfigNode, \u003Ca href=\u0022https://github.com/StupidChris/RealChute/blob/master/RealChute/Parachute.cs#L472-L528\u0022 rel=\u0022external nofollow\u0022\u003Eas I did for RealChute\u003C/a\u003E. I believe I got toadicus to implement them within KSPAPIExpansion.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-07-30T20:19:52Z","Content":"\n\u003Cp\u003EYou mean swamp_ig. toadicus does Tweakable Everything \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI don\u0027t know of a way either to do what you\u0027re asking; the best approach here is to (as with so many KSP things) write it yourself. Then no one else has to...\u003C/p\u003E\n"},{"CreatedByName":"Teknoman117","CreatedById":53200,"CreatedDateTime":"2014-07-30T20:49:54Z","Content":"\n\u003Cp\u003EHaha, well I\u0027ll check out KSPAPIExpansion, and if it doesn\u0027t have the answer, I\u0027ll write it myself. Is KSP smart enough to sort out the order that assemblies need to be loaded in?\u003C/p\u003E\u003Cp\u003EEdit - Talked with NathanKell, it isn\u0027t smart enough to do that. 000_ConfigNodeWrangler here we go! I\u0027m going to be looking into how PartModules work and see if I can come up with something similar, but for generic mods.\u003C/p\u003E\u003Cp\u003E- Nathaniel Lewis\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-30T21:02:02Z\u0022 title=\u002207/30/2014 09:02  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 30, 2014\u003C/time\u003E by Teknoman117\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-07-30T21:15:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Teknoman117\u0022 data-cite=\u0022Teknoman117\u0022\u003E\u003Cdiv\u003E000_ConfigNodeWrangler\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPlease, don\u0027t. Use [assembly:KSPAssembly] instead.\u003C/p\u003E\n"},{"CreatedByName":"rbray89","CreatedById":48847,"CreatedDateTime":"2014-07-30T22:54:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Teknoman117\u0022 data-cite=\u0022Teknoman117\u0022\u003E\u003Cdiv\u003EI\u0027m new to writing KSP plugins, and from what I gather, the proper way of providing configuration to your mods is the config node system. I\u0027ve been looking through some existing mods\u0027 usage of config nodes and usually I see a lot of ConfigNode value checking and if(has node) type stuff. I\u0027ve noticed that the PartModule system makes use of reflection information. You attribute your class members with KSPField and the configurations will be loaded when the game starts and written to automatically.\u003Cp\u003EIs there a way of doing this for generic configuration? I\u0027m working on a mod called Kopernicus, which aims to be a replacement for and improvement upon PlanetFactory. We want to be able to put .cfgs for the new planets in the plugin directory, and are wondering if there is some way built in to KSP for the corresponding classes to be instantiated when the config files are read, versus having a plugin hook the start instantly event and scrape the config directory manually with the large trees of config node reading. \u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/88168-Early-development-0-24-Kopernicus-Planetary-System-Modifier\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/88168-Early-development-0-24-Kopernicus-Planetary-System-Modifier\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E- Nathaniel R. Lewis\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECheck out what I\u0027m doing in the overhaul release of EVE. I used the [persistent] tags in objects to be loaded by MonoBehaviours that are loaded up. EVEManager is the project you want to look at.\u003C/p\u003E\n"},{"CreatedByName":"Teknoman117","CreatedById":53200,"CreatedDateTime":"2014-07-31T07:43:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blizzy78\u0022 data-cite=\u0022blizzy78\u0022\u003E\u003Cdiv\u003EPlease, don\u0027t. Use [assembly:KSPAssembly] instead.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EC# is not a language I\u0027m extremely familiar with (mostly c, c\u002B\u002B, and objective-c), what exactly does that do and where does it go?\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-07-31T08:34:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Teknoman117\u0022 data-cite=\u0022Teknoman117\u0022\u003E\u003Cdiv\u003EC# is not a language I\u0027m extremely familiar with (mostly c, c\u002B\u002B, and objective-c), what exactly does that do and where does it go?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E[assembly: KSPAssembly] and [assembly: KSPAssemblyDependency] are used to declare your assembly as a KSP plugin, or declare a dependency on another KSP plugin, respectively. These go into your AssemblyInfo.cs file.\u003C/p\u003E\u003Cp\u003EExamples: \u003Ca href=\u0022https://github.com/blizzy78/ksp_voice_commander/blob/master/VoiceCommander/Properties/AssemblyInfo.cs#L38-L40\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/blizzy78/ksp_voice_commander/blob/master/VoiceCommander/Properties/AssemblyInfo.cs#L38-L40\u003C/a\u003E\u003C/p\u003E\n"}]}