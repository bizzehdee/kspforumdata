{"TopicId":82010,"ForumId":29,"TopicTitle":"Dislay part image in flight GUI window","CreatedByName":"O-Doc","CreatedById":95453,"CreatedDateTime":"2014-08-18T00:25:16Z","PageNum":1,"Articles":[{"CreatedByName":"O-Doc","CreatedById":95453,"CreatedDateTime":"2014-08-18T00:25:16Z","Content":"\n\u003Cp\u003EI\u0027ve searched high and low and cannot locate this information anywhere.\u003C/p\u003E\u003Cp\u003EProblem:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EI have the inflight vessel\u0027s part list and can access all properties and methods. Fine.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EI would like to take this list of vessel parts and display a list of images matching each part in the same way as the VAB/SPH parts list\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EI have no idea how to access the name of the image to display(the .mu file?), and the function calls for putting that image on a button like the VAB/SPH\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI have assumed this is possible given that it is being done in the VAB/SPH but, I don\u0027t know of any modules that do something similar. So, does anyone know how this can be done or, can you point me to some module code where this is being done?\u003C/p\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-08-19T03:03:05Z","Content":"\n\u003Cp\u003Eafaik, the (rotating) images are inside an \u0022animator\u0022 of the part..\u003C/p\u003E\u003Cp\u003EI have no details - but this is my understanding after making part in unity..\u003C/p\u003E\u003Cp\u003EI would try the first animator you find - but maybe I\u0027m wrong on this..\u003C/p\u003E\u003Cp\u003EIn my IDE, if I search in Object Browser, I get several results for \u003C/p\u003E\u003Cp\u003E\u0022PartIcon\u0022 - maybe that helps..\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-08-19T05:32:43Z","Content":"\n\u003Cp\u003EThose VAB icons aren\u0027t simple textures. As far as I know they use the actual part and make it rotate when you select it. It\u0027s easy to trigger this while in the VAB, but the readily accessible methods to do so don\u0027t work outside of the editor.\u003C/p\u003E\u003Cp\u003EThere is an EditorPartIcon class, which seems to get its info from an AvailablePart instance, and a PartListTooltips, but I\u0027m not sure how usable any of those are outside of the editor.\u003C/p\u003E\n"},{"CreatedByName":"O-Doc","CreatedById":95453,"CreatedDateTime":"2014-08-19T06:23:50Z","Content":"\n\u003Cp\u003EI hadn\u0027t considered that the model icon would be stored on the animator(component?) property. I\u0027m not a modeller so this would all be new territory for me. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe current \u003Ca href=\u0022http://anatid.github.io/XML-Documentation-for-the-KSP-API/class_part.html\u0022 rel=\u0022external nofollow\u0022\u003Ecommunity documentation on parts\u003C/a\u003E has:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EAnimation[]     FindModelAnimators ()\u003Cbr\u003EAnimation[]     FindModelAnimators (string clipName)\u003Cbr\u003ET               FindModelComponent\u0026lt; T \u0026gt; ()\u003Cbr\u003ET               FindModelComponent\u0026lt; T \u0026gt; (string childName)\u003Cbr\u003ET[]             FindModelComponents\u0026lt; T \u0026gt; ()\u003Cbr\u003ET[]             FindModelComponents\u0026lt; T \u0026gt; (string childName)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHow you pull out an image from an animation, or even play and animation in the GUI, is unknown at this point in time. Unfortunately, the above API describes the model components with the generic type(which is probably why I missed this) so, working with that is going to be a pain. Hopefully I can dig around and come up with same usable images from these collections.\u003C/p\u003E\u003Cp\u003EI\u0027ll update to where I\u0027m at with my current understanding of the problem:\u003C/p\u003E\u003Cp\u003EWhat I\u0027m looking to do exists in the UnityPro editor as \u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/AssetPreview.html\u0022 rel=\u0022external nofollow\u0022\u003EAssetPreview\u003C/a\u003E but, this is simply not available as it is productivity functionality only. Obviously to help sell the pro version.\u003C/p\u003E\u003Cp\u003EI suspect that in the VAB/SPH the parts are being listed using a \u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/GUI.Button.html\u0022 rel=\u0022external nofollow\u0022\u003EGUI.Button\u003C/a\u003E with the \u003Cstrong\u003Eimage\u003C/strong\u003E parameter being a \u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/Texture.html\u0022 rel=\u0022external nofollow\u0022\u003ETexture\u003C/a\u003E which is rendered from the part model using \u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/RenderTexture.html\u0022 rel=\u0022external nofollow\u0022\u003ERenderTexture\u003C/a\u003E class to convert the 3D model into a 2D image.\u003C/p\u003E\u003Cp\u003ETo do this, I think SQUAD has used the RenderTexture class when the game loads to generate temporary images from objects in scene snapshots to attach to the GameObjects. Which might help explain why loading objects takes so long.\u003C/p\u003E\u003Cp\u003EAs a side note, I\u0027ve been looking at \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/73236-WIP-Loading-textures-only-as-required\u0022 rel=\u0022external nofollow\u0022\u003ELoading textures only as required\u003C/a\u003E but this mod seems to loop through all the DameData folders to pull out all the model.mu files on load and stores them in the GameDatabase, which I have no idea what that is, against their part names. Then in flight all part names are found and the texture location is matached to the name of the part in the GameDatabase. So, far I have no clear indication how to call a function like part.getModelMesh, apart from the potential FindModelComponent method.\u003C/p\u003E\u003Cp\u003EEDIT: I didn\u0027t realize you could rotate those images!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-19T06:26:17Z\u0022 title=\u002208/19/2014 06:26  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 19, 2014\u003C/time\u003E by O-Doc\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"O-Doc","CreatedById":95453,"CreatedDateTime":"2014-08-19T06:47:46Z","Content":"\n\u003Cp\u003ESo, I\u0027m looking at the exception logs posted to Real Fuels and it seems that EditorLogic is the controller class and EditorPartList is a wrapper class for the parts navigation collection of EditorPartIcon objects which is a view class that holds some event handling in the editor. I get the feeling they will be pulling their data from the gerneric parts GameObject. Hopefully...\u003C/p\u003E\u003Cp\u003EThanks for the help peeps. Do keep it coming, this is the last piece of a larger puzzle which I want to solve before coding up a GUI.\u003C/p\u003E\n"},{"CreatedByName":"pizzaoverhead","CreatedById":26349,"CreatedDateTime":"2014-08-19T10:17:02Z","Content":"\n\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/80581-0-23-5-Vessel-Viewer\u0022 rel=\u0022external nofollow\u0022\u003EVessel Viewer\u003C/a\u003E renders parts (without their texture). It might be worth checking out if that method can help you.\n"},{"CreatedByName":"O-Doc","CreatedById":95453,"CreatedDateTime":"2014-08-19T11:10:52Z","Content":"\n\u003Cp\u003EThat\u0027s a good idea, thanks\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-08-19T11:36:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022O-Doc\u0022 data-cite=\u0022O-Doc\u0022\u003E\u003Cdiv\u003EHow you pull out an image from an animation\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think you\u0027re thinking of the wrong type of animation here. In Unity the common type of an \u0022animation\u0022 would be one where it\u0027s not a sequence of single static images (or key frames being interpolated a play time), but rather a sequence of value key frames. For example, an animation can be used to modify the transform of a 3D object to displace it, or have it rotate, or scale it, or have lights go on/off slowly, or flicker. So you see, there\u0027s quite a variety of things you can do with these animations, but they are not your typical movie animation with individual image frames (or key frames.)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022O-Doc\u0022 data-cite=\u0022O-Doc\u0022\u003E\u003Cdiv\u003EI suspect that in the VAB/SPH the parts are being listed using a \u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/GUI.Button.html\u0022 rel=\u0022external nofollow\u0022\u003EGUI.Button\u003C/a\u003E with the \u003Cstrong\u003Eimage\u003C/strong\u003E parameter being a \u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/Texture.html\u0022 rel=\u0022external nofollow\u0022\u003ETexture\u003C/a\u003E which is rendered from the part model using \u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/RenderTexture.html\u0022 rel=\u0022external nofollow\u0022\u003ERenderTexture\u003C/a\u003E class to convert the 3D model into a 2D image.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEither that, or they could be using several cameras. You can set up a camera so that its output (which is what you as the player see on screen) does not fill the whole screen, but only a tiny portion of the screen (such as an editor button.) In addition, because the object in question is part of the same scene, they would have to use layers so that the object does not interfere with the rest of the scene and vice versa (lighting and shadows, for example.)\u003C/p\u003E\n"},{"CreatedByName":"O-Doc","CreatedById":95453,"CreatedDateTime":"2014-08-20T04:22:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blizzy78\u0022 data-cite=\u0022blizzy78\u0022\u003E\u003Cdiv\u003EEither that, or they could be using several cameras. You can set up a camera so that its output (which is what you as the player see on screen) does not fill the whole screen, but only a tiny portion of the screen (such as an editor button.) In addition, because the object in question is part of the same scene, they would have to use layers so that the object does not interfere with the rest of the scene and vice versa (lighting and shadows, for example.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis seems to be the approach to take. Vessel Viewer is only pulling out the mesh of the part using the following code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            //now we need to get all meshes in the part\u003Cbr\u003E            List\u0026lt;MeshFilter\u0026gt; meshFList = new List\u0026lt;MeshFilter\u0026gt;();\u003Cbr\u003E            foreach (MeshFilter mf in part.transform.GetComponentsInChildren\u0026lt;MeshFilter\u0026gt;())\u003Cbr\u003E            {\u003Cbr\u003E                meshFList.Add(mf);\u003Cbr\u003E            }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI then takes this list of of mesh co-ordinates and draws the wireframes using \u003Cstrong\u003EVector3()\u003C/strong\u003E and \u003Cstrong\u003ErenderLine()\u003C/strong\u003E oupting straight to GL. Alot of the work is then focused on reshaping the draw to fit into the VV bounding box. Not exactly the approach I\u0027m looking for.\u003C/p\u003E\u003Cp\u003EIt did give me and understanding of GameObject components and lead me to \u003Ca href=\u0022http://crappycoding.com/2014/06/30/gameobject-image-using-render-textures/\u0022 rel=\u0022external nofollow\u0022\u003Ethis tutorial on rendering GameObjects\u003C/a\u003E. So I guess I need to figure out how to generate a camera on the fly. Lazor and HullCam seem to be the next steps in research.\u003C/p\u003E\u003Cp\u003EThese steps in that tutorial pretty much sum up the approach I\u0027ll need to take:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EWe\u0027ve set up a camera on its own layer.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWe cloned the object we want to take a picture of.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWe positioned the object in front of our camera, and changed the object to the render camera layer.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWe acquired a temporary render texture and assigned it as the camera\u0027s target texture.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWe told the camera to render.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"O-Doc","CreatedById":95453,"CreatedDateTime":"2014-08-20T04:58:44Z","Content":"\n\u003Cp\u003EHere\u0027s the code for instantiating a camera object from Lazor:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ego = new GameObject();\u003Cbr\u003Ego.name = name \u002B\u0022 \u0022\u002B go.GetInstanceID();\u003Cbr\u003Ecam = go.AddComponent\u0026lt;Camera\u0026gt;();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThat looks like enough to get an icon into my GUI. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-08-20T10:01:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022O-Doc\u0022 data-cite=\u0022O-Doc\u0022\u003E\u003Cdiv\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EWe acquired a temporary render texture and assigned it as the camera\u0027s target texture.\u003C/div\u003E\u003C/blockquote\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou can also just let the camera render to the viewport instead. In the case of editor buttons it shouldn\u0027t matter.\u003C/p\u003E\n"},{"CreatedByName":"O-Doc","CreatedById":95453,"CreatedDateTime":"2014-08-20T11:16:24Z","Content":"\n\u003Cp\u003EYep. My preference is still to put a texture on a button so I can easily use a scroll bar on the list rather than use the VAB/SPH style list navigation button.\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-08-20T11:30:54Z","Content":"\n\u003Cp\u003ERight, scrolling will be much easier with textures, of course.\u003C/p\u003E\n"}]}