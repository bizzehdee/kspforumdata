{"TopicId":92206,"ForumId":29,"TopicTitle":"OnStart Is Giving Me Conniptions","CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2014-12-07T18:33:12Z","PageNum":1,"Articles":[{"CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2014-12-07T18:33:12Z","Content":"\n\u003Cp\u003EI have a two parts with a single .DLL file. One part class (orbitscanner) is derived from another part (landscanner). For testing and reporting purposes, I reduced everything to their basics. Each part is a simple Cube with a collider mesh.\u003C/p\u003E\u003Cp\u003EThe problem: when I install a part using the orbitscanner part, it attaches correctly. When I attempt to attach the landscanner part (which is the base part), it refuses to attach; in fact, after that, nothing will attach. You will note in the source code that although orbit scanner is derived from and extends landscanner, it contains no code. It\u0027s a class about nothing (sounds like a Seinfeld episode).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003Eusing System;\u003C/p\u003E\u003Cp\u003Eusing System.Collections;\u003C/p\u003E\u003Cp\u003Eusing UnityEngine;\u003C/p\u003E\u003Cp\u003Enamespace MissionControllerEC\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E public class landscanner : PartModule\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E [KSPField(isPersistant = true, guiActive = false)]\u003C/p\u003E\u003Cp\u003E private bool boolDeployed = false;\u003C/p\u003E\u003Cp\u003E [KSPField(isPersistant = true, guiActive = false)]\u003C/p\u003E\u003Cp\u003E private bool isScanning = false;\u003C/p\u003E\u003Cp\u003E [KSPField(isPersistant = true, guiActive = false)]\u003C/p\u003E\u003Cp\u003E private Animation anim;\u003C/p\u003E\u003Cp\u003E public const string scannerType = \u0022ground\u0022;\u003C/p\u003E\u003Cp\u003E public const string modelType = \u0022egbs\u0022;\u003C/p\u003E\u003Cp\u003E public const string modelName = \u0022Enhanced Ground-based Scanner\u0022;\u003C/p\u003E\u003Cp\u003E public bool isDeployed // the deployment property\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E get\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E return boolDeployed;\u003C/p\u003E\u003Cp\u003E } \u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E public override void OnStart(PartModule.StartState state)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E anim = part.FindModelAnimators(\u0022Scene\u0022)[0];\u003C/p\u003E\u003Cp\u003E Deploy(boolDeployed); //restore deployment \u0026amp; scanning states\u003C/p\u003E\u003Cp\u003E base.OnStart(state);\u003C/p\u003E\u003Cp\u003E } \u003C/p\u003E\u003Cp\u003E [KSPEvent(active = true, guiActive = true, guiActiveEditor = false, guiName = \u0022Deploy\u0022)]\u003C/p\u003E\u003Cp\u003E public void ToggleDeploy()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E Deploy(!boolDeployed);\u003C/p\u003E\u003Cp\u003E return;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E public void Deploy(bool deployThis)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E boolDeployed = deployThis;\u003C/p\u003E\u003Cp\u003E if (boolDeployed) // deploy, start scanning\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E anim.Rewind();\u003C/p\u003E\u003Cp\u003E anim[\u0022Deploy\u0022].speed = 1f;\u003C/p\u003E\u003Cp\u003E anim[\u0022Deploy\u0022].normalizedTime = 0f;\u003C/p\u003E\u003Cp\u003E anim.Play(\u0022Deploy\u0022);\u003C/p\u003E\u003Cp\u003E isScanning = true;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E else // stop scanning, retract\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E isScanning = false;\u003C/p\u003E\u003Cp\u003E anim.Stop();\u003C/p\u003E\u003Cp\u003E anim.Rewind();\u003C/p\u003E\u003Cp\u003E anim[\u0022Deploy\u0022].speed = -1f;\u003C/p\u003E\u003Cp\u003E anim[\u0022Deploy\u0022].normalizedTime = 1f;\u003C/p\u003E\u003Cp\u003E anim.Play(\u0022Deploy\u0022);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E Events[\u0022ToggleDeploy\u0022].guiName = (boolDeployed ? \u0022Retract\u0022 : \u0022Deploy\u0022);\u003C/p\u003E\u003Cp\u003E return;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E// to test OnFixedUpdate, you MUST have at least one stage and Launch!!!\u003C/p\u003E\u003Cp\u003E public override void OnFixedUpdate()\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E// Debug.Log(\u0022onFixedUpdate: deployed= \u0022 \u002B boolDeployed \u002B \u0022, scanning= \u0022 \u002B isScanning \u002B \u0022, playing= \u0022 \u002B anim.isPlaying);\u003C/p\u003E\u003Cp\u003E if (isScanning \u0026amp;\u0026amp; !anim.isPlaying) // start scanner\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E anim.Rewind();\u003C/p\u003E\u003Cp\u003E anim[\u0022Scan\u0022].speed = 1f;\u003C/p\u003E\u003Cp\u003E anim[\u0022Scan\u0022].normalizedTime = 0f;\u003C/p\u003E\u003Cp\u003E anim.Play(\u0022Scan\u0022);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E base.OnFixedUpdate();\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E public class orbitscanner : landscanner\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003EThe models are the exact same file: landscanner.mu. Same for the texture file, UVscanner.mbm. The CFG files for the two parts are exactly the same with three exceptions: 1) part name (required by KSP); 2) part title (so you can see which is which in VAB); 3) module name (to determine which class).\u003C/p\u003E\u003Cp\u003EWhy do I think OnStart is the culprit? When I comment-out the line \u0022anim = part.FindModelAnimators(\u0022Scene\u0022)[0];\u0022, then I can attach the landscanner part. Of course, there are no animations as a result. The FBX and MU files contain one baked animation (Scene), plus two clips (Deploy, Scan).\u003C/p\u003E\u003Cp\u003ENote: this all used to work correctly. That is, I could attach both parts and the animations played. What changed? Nothing. When things started to fail, I actually simplified the code. I changed nothing in OnStart.\u003C/p\u003E\u003Cp\u003EWhy does landscanner fail and orbitscanner succeed when they are the same code? Note that I\u0027m using no other mods. There are only two folders in my GameData directory: Squad and RocketWorks (my part folder).\u003C/p\u003E\u003Cp\u003EI\u0027ve included the GameData, source code, Blender, FBX, and texture (PNG) files.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.dropbox.com/s/6snl1a3vgl7vqjb/RocketWorks.zip?dl=0\u0022 rel=\u0022external nofollow\u0022\u003EZIP file\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-07T19:31:28Z\u0022 title=\u002212/07/2014 07:31  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 7, 2014\u003C/time\u003E by Apollo13\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-08T01:17:54Z","Content":"\n\u003Cp\u003ECan you throw a Print statement in there to get a timestamp in the log to see when your OnState is running?\u003C/p\u003E\u003Cp\u003EThis is only tangentially related, but I had issues trying to use OnStart myself recently.\u003C/p\u003E\u003Cp\u003ENow, it was not the PartModule OnStart, but the KSPAddon.Flight OnStart, but it was running a lot earlier then I thought it did.\u003C/p\u003E\u003Cp\u003ENotably, it would run while the monitor was still displaying the black screen with the \u0022Loading\u0022 indicator in the bottom right and while it looks like objects existed at that point, the load was not finished and things went wonky when I tried to do anything to the vessel. \u003C/p\u003E\u003Cp\u003EI would think that simply finding animation clips would not be affected by running early as you are not interacting with the vessel or other objects, but maybe the animations are not initialized yet because you are still looking at at loading screen?\u003C/p\u003E\u003Cp\u003EA bit of a reach, I know. \u003C/p\u003E\u003Cp\u003EThe other test you could do it to put it in the Update frame and run it on the first frame where Vessel.holdPhysics goes false. At that point everything is finished loading and everything is good to go. This would not work as a permanent solution I don\u0027t think as switching vessels without loading would mess it up, but it is a way to run your code as a test after everything else is finished loading to prove it is in fact OnStart causing the issue.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-12-08T02:29:26Z","Content":"\n\u003Cp\u003EI would put this in fixedUpdate\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003Eif(anim = null)\u003Cbr\u003E{\u003Cbr\u003Eanim = part.FindModelAnimators(\u0022Scene\u0022)[0];\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ethis will throw some errors until the part is loaded, then it runs once \u003C/p\u003E\u003Cp\u003Eto prevent the NREs you can wrap it in try-catch\u003C/p\u003E\u003Cp\u003EI call that \u0022pragmatic init\u0022 - it tryes until it works..\u003C/p\u003E\u003Cp\u003Eno more headache.. - just keep all following dependent code in an \u0022if != null\u0022 thingy..\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-12-08T02:31:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Apollo13\u0022 data-cite=\u0022Apollo13\u0022\u003E\u003Cdiv\u003EThe problem: when I install a part using the orbitscanner part, it attaches correctly. When I attempt to attach the landscanner part (which is the base part), it refuses to attach; in fact, after that, nothing will attach. You will note in the source code that although orbit scanner is derived from and extends landscanner, it contains no code. It\u0027s a class about nothing (sounds like a Seinfeld episode).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFirst, make sure you\u0027re building for 3.5. I think I saw an attribute on the DLL that said it was targeting .NET 4.5 and you don\u0027t want that.\u003C/p\u003E\u003Cp\u003EThere are some clues in the debug log. If you attach the landscanner and look in the log (note: enable VERBOSE_DEBUG_OUTPUT in settings.cfg to show the full stack trace like this):\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://puu.sh/dlAti/fee57f5ed3.png\u0022 alt=\u0022fee57f5ed3.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ESo, something is wrong when the PartModule is saving and it has something to do with a field\u0027s type. That means the problem is here:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        [KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E        private bool boolDeployed = false;\u003Cbr\u003E        [KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E        private bool isScanning = false;\u003Cbr\u003E        [KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E        private Animation anim;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EPersistent KSPFields are sadly simple and only support a relatively limited set of types -- int, float, string, Vector2, Vector3, Quaternion and bool if I recall correctly -- so your attribute on anim is causing an exception.\u003C/p\u003E\u003Cp\u003EThe reason your derived type works is that anim is hidden from it (being a private member of the base class) and so KSP doesn\u0027t try to stuff it through this BaseFieldList.Save method it chokes on earlier\u003C/p\u003E\n"},{"CreatedByName":"Apollo13","CreatedById":74572,"CreatedDateTime":"2014-12-08T02:35:07Z","Content":"\n\u003Cp\u003EThank you, guys. I\u0027ll give those ideas a shot.\u003C/p\u003E\n"},{"CreatedByName":"rbray89","CreatedById":48847,"CreatedDateTime":"2014-12-10T21:36:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022 data-cite=\u0022xEvilReeperx\u0022\u003E\u003Cdiv\u003EFirst, make sure you\u0027re building for 3.5. I think I saw an attribute on the DLL that said it was targeting .NET 4.5 and you don\u0027t want that.\u003Cp\u003EThere are some clues in the debug log. If you attach the landscanner and look in the log (note: enable VERBOSE_DEBUG_OUTPUT in settings.cfg to show the full stack trace like this):\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://puu.sh/dlAti/fee57f5ed3.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://puu.sh/dlAti/fee57f5ed3.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESo, something is wrong when the PartModule is saving and it has something to do with a field\u0027s type. That means the problem is here:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        [KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E        private bool boolDeployed = false;\u003Cbr\u003E        [KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E        private bool isScanning = false;\u003Cbr\u003E        [KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E        private Animation anim;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EPersistent KSPFields are sadly simple and only support a relatively limited set of types -- int, float, string, Vector2, Vector3, Quaternion and bool if I recall correctly -- so your attribute on anim is causing an exception.\u003C/p\u003E\u003Cp\u003EThe reason your derived type works is that anim is hidden from it (being a private member of the base class) and so KSP doesn\u0027t try to stuff it through this BaseFieldList.Save method it chokes on earlier\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EVector2 doesn\u0027t work for me, and color is supported as well. Any classes that are added with the persistent tag and have persistent members are converted to a config item.\u003C/p\u003E\n"}]}