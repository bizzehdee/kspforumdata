{"TopicId":81528,"ForumId":29,"TopicTitle":"help with ModuleGenerator","CreatedByName":"adoronron","CreatedById":118685,"CreatedDateTime":"2014-08-12T17:00:47Z","PageNum":1,"Articles":[{"CreatedByName":"adoronron","CreatedById":118685,"CreatedDateTime":"2014-08-12T17:00:47Z","Content":"\n\u003Cp\u003Ewhat i am trying to do is make a generator that has a button to start and stop it. the first one is working, but has no buttons. the second on is just not working.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E MODULE{\u003Cbr\u003E  name = ModuleGenerator\u003Cbr\u003E  isAlwaysActive = True\u003Cbr\u003E  INPUT_RESOURCE\u003Cbr\u003E  {\u003Cbr\u003E   name = ElectricCharge\u003Cbr\u003E   rate = 2\u003Cbr\u003E  }\u003Cbr\u003E  OUTPUT_RESOURCE\u003Cbr\u003E  {      \u003Cbr\u003E   name = Tritium    \u003Cbr\u003E   rate = 10\u003Cbr\u003E  }\u003Cbr\u003E} \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMODULE{\u003Cbr\u003E  name = ModuleGenerator\u003Cbr\u003E  isAlwaysActive = True\u003Cbr\u003E  activateGUIName = Enable Deuterium\u003Cbr\u003E  shutdownGUIName = Disable Deuterium\u003Cbr\u003E  INPUT_RESOURCE\u003Cbr\u003E  {\u003Cbr\u003E   name = ElectricCharge\u003Cbr\u003E   rate = 2\u003Cbr\u003E  }\u003Cbr\u003E  OUTPUT_RESOURCE\u003Cbr\u003E  {      \u003Cbr\u003E   name = Tritium    \u003Cbr\u003E   rate = 10\u003Cbr\u003E  }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Zyrac","CreatedById":50037,"CreatedDateTime":"2014-08-12T19:29:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022adoronron\u0022 data-cite=\u0022adoronron\u0022\u003E\u003Cdiv\u003Ewhat i am trying to do is make a generator that has a button to start and stop it. the first one is working, but has no buttons. the second on is just not working.\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E MODULE{\u003Cbr\u003E  name = ModuleGenerator\u003Cbr\u003E  isAlwaysActive = True\u003Cbr\u003E  INPUT_RESOURCE\u003Cbr\u003E  {\u003Cbr\u003E   name = ElectricCharge\u003Cbr\u003E   rate = 2\u003Cbr\u003E  }\u003Cbr\u003E  OUTPUT_RESOURCE\u003Cbr\u003E  {      \u003Cbr\u003E   name = Tritium    \u003Cbr\u003E   rate = 10\u003Cbr\u003E  }\u003Cbr\u003E} \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMODULE{\u003Cbr\u003E  name = ModuleGenerator\u003Cbr\u003E  isAlwaysActive = True\u003Cbr\u003E  activateGUIName = Enable Deuterium\u003Cbr\u003E  shutdownGUIName = Disable Deuterium\u003Cbr\u003E  INPUT_RESOURCE\u003Cbr\u003E  {\u003Cbr\u003E   name = ElectricCharge\u003Cbr\u003E   rate = 2\u003Cbr\u003E  }\u003Cbr\u003E  OUTPUT_RESOURCE\u003Cbr\u003E  {      \u003Cbr\u003E   name = Tritium    \u003Cbr\u003E   rate = 10\u003Cbr\u003E  }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELooks like we have a new comer to KSP modding! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Well, you could make it with like that with a generator in a cfg. file, or if you want, you could do it with a plugin, though you\u0027d need a program like SharpDevelop. The first issue with what you have there is that isAlwaysActive is set as true, when it should be false, if you want the options to activate and deactivate the generator, so you could make that change to the first one. However, if you were interested in making a plugin, it would be very simple to create one. Like I said, you would need SharpDevelop (version 3.2 or later I think) and create a Class Library file when you load the program. To produce something that looked good you would want a code something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace yourpluginname\u003Cbr\u003E{\u003Cbr\u003E     public class yourpluginname : PartModule\u003Cbr\u003E     {\u003Cbr\u003E            // anything with \u0022//\u0022 before it doesn\u0027t do anything, it\u0027s just a little note\u003Cbr\u003E            // of course, you can replace any names for things like class, bool, string, etc.\u003Cbr\u003E\u003Cbr\u003E            // a bool is a value that returns true or false\u003Cbr\u003E            [KSPField(guiActive = true, guiName = \u0022\u0022 ,isPersistant = true)]\u003Cbr\u003E            public bool generatoractive = false;\u003Cbr\u003E\u003Cbr\u003E            // a string is a value that is in speech marks, usually a word, a phrase, etc.\u003Cbr\u003E            [KSPField(guiActive = true, guiName = \u0022\u0022 ,isPersistant = true)]\u003Cbr\u003E            public string generatorstatus = \u0022Generator Inactive\u0022;\u003Cbr\u003E\u003Cbr\u003E            // a float is a type of number value\u003Cbr\u003E            [KSPField(guiActive = true, guiName = \u0022\u0022 ,isPersistant = true)]\u003Cbr\u003E            public float totalElectricCharge = 0;\u003Cbr\u003E\u003Cbr\u003E            // this creates the buttons to activate and deactivate the generator\u003Cbr\u003E            [KSPEvent(guiActive = true, guiName = \u0022Activate\u0022, active = true)]\u003Cbr\u003E\t    public void Activate()\u003Cbr\u003E\t    {\u003Cbr\u003E\t\t\tEvents[\u0022Activate\u0022].active = false;\u003Cbr\u003E\t\t\tEvents[\u0022Deactivate\u0022].active = true;\u003Cbr\u003E                        generatoractive = true;\u003Cbr\u003E\t    }\u003Cbr\u003E\u003Cbr\u003E\t    [KSPEvent(guiActive = true, guiName = \u0022Deactivate\u0022, active = false)]\u003Cbr\u003E\t    public void Deactivate()\u003Cbr\u003E            {\u003Cbr\u003E\t\t \tEvents[\u0022Activate\u0022].active = true;\u003Cbr\u003E\t\t \tEvents[\u0022Deactivate\u0022].active = false;\u003Cbr\u003E                        generatoractive = false;\u003Cbr\u003E\t     }\u003Cbr\u003E\u003Cbr\u003E             void Update()\u003Cbr\u003E             {\u003Cbr\u003E                   if(generatoractive)\u003Cbr\u003E                   {\u003Cbr\u003E                        part.RequestResource(\u0022ElectricCharge\u0022, 2 * TimeWarp.deltaTime);\u003Cbr\u003E                        // this looks complicated but is necessary to check the electric charge amount of the whole vessel by finding and checking each part that contains electric charge\u003Cbr\u003E                        foreach(part partwithcharge in vessel.parts)\u003Cbr\u003E                        {\u003Cbr\u003E                             if(partwithcharge.Resources.Contains(\u0022ElectricCharge\u0022))\u003Cbr\u003E                             {\u003Cbr\u003E                                  totalElectricCharge \u002B= partwithcharge.Resources[\u0022ElectricCharge\u0022].amount\u003Cbr\u003E                             }\u003Cbr\u003E                             // this will check if you have any electric charge left\u003Cbr\u003E                             if(totalElectricCharge \u0026gt; 0)\u003Cbr\u003E                             {\u003Cbr\u003E                                  part.RequestResource(\u0022Tritium\u0022, -10 * TimeWarp.deltaTime);\u003Cbr\u003E                              }\u003Cbr\u003E                              // you want it set as 2 and -10 because RequestResource uses up the given resource, so a negative number will make it increase the resource\u003Cbr\u003E                        }\u003Cbr\u003E                   }\u003Cbr\u003E             }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E     }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd that should work, let me know if you hit any problems.\u003C/p\u003E\n"}]}