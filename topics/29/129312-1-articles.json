{"TopicId":129312,"ForumId":29,"TopicTitle":"First project: action group toggle using collider detection","CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2016-01-05T12:33:06Z","PageNum":1,"Articles":[{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2016-01-05T12:33:06Z","Content":"\n\u003Cp\u003E\nBecause I\u0027d love more ways of interaction in the kerbal Universe and I\u0027d have a ton of applications for it, I\u0027ve decided to try and make a switch. The principle is simple, if any collider interacts with the collider of the part model, it will trigger an action group and either reset or stay that way until a collider interacts again. Great for making automated machines, ignition system of a piston engine, pinball etc.\n\u003C/p\u003E\n\u003Cp\u003E\npizzaoverhead has helped with some basics and gave me the following text:\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nProgramming languages aren\u0027t easy for anyone to begin with, but with practice and experimentation, anyone can learn enough to make a KSP mod \u003Cimg alt=\u0022:)\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022\u003E Once you have the IDE set up, autocomplete shows you the possibilities for you can write, making it much easier.\n\u003C/p\u003E\n\u003Cp\u003E\nWhile I can\u0027t write the plugin for you as I have very little free time these days, I can give you an overview of how collisions work. There are six methods used:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nOnCollisionEnter\n\u003C/li\u003E\n\u003Cli\u003E\nOnCollisionStay\n\u003C/li\u003E\n\u003Cli\u003E\nOnCollisionExit\n\u003C/li\u003E\n\u003Cli\u003E\nOnTriggerEnter\n\u003C/li\u003E\n\u003Cli\u003E\nOnTriggerStay\n\u003C/li\u003E\n\u003Cli\u003E\nOnTriggerExit\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhen you give your part module methods that are public and have any of these names (and the right parameters, see the online Unity docs for full details), the code will be called when that part module experiences a collision. You can get details of the kind of collision from the parameters. Enter is called in the physics frame that the part starts touching something, stay is called every physics frame that the part continues touching something, and exit is called on the physics frame the part stops touching the object. The trigger versions of these are used for trigger colliders, aka trigger zones. These are colliders that don\u0027t physically interact with objects, but produce collision messages as if they did. Airlock and ladder colliders are an example of these in KSP.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you want to make a part that switches, you could create a switch model and place a trigger collider over it. OnTriggerEnter, you would move the switch and call whatever action you want it to perform (Smart Parts code for instance). To move the switch, you could fire an animation, or more simply, adjust the rotation of the switch rocker from code.\n\u003C/p\u003E\n\u003Cp\u003E\nBelow is the basic code to create a part module that writes collision messages to the Alt\u002BF2 debug log:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint\u0022\u003E\n\nusing System;\nusing UnityEngine;\n\nnamespace MyMod\n{\n    public class ModuleCollisionPrinter : PartModule\n    {\n        public void OnCollisionEnter(Collision collision)\n        {\n            Debug.Log(\u0022OnCollisionEnter \u0022 \u002B name);\n\n            // Example of using aspects of the collision\n            if (collision.relativeVelocity.magnitude \u0026gt; 5)\n            {\n                        // Hit too fast: Damage the switch\n            }\n        }\n\n        public void OnCollisionStay(Collision collision)\n        {\n            Debug.Log(\u0022OnCollisionStay \u0022 \u002B name);\n        }\n\n        private void OnCollisionExit(Collision collision)\n        {\n            Debug.Log(\u0022OnCollisionExit \u0022 \u002B name);\n        }\n\n        public void OnTriggerEnter(Collider other)\n        {\n            Debug.Log(\u0022OnTriggerEnter \u0022 \u002B other.transform);\n            // Change switch graphics and call Smart Parts here.\n        }\n\n        public void OnTriggerStay(Collider other)\n        {\n            Debug.Log(\u0022OnTriggerStay \u0022 \u002B other.transform);\n        }\n\n        public void OnTriggerExit(Collider other)\n        {\n            Debug.Log(\u0022OnTriggerExit \u0022 \u002B other.transform);\n        }\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nGood luck!\n\u003C/p\u003E\n\u003Cp\u003E\n- Pizzaoverhead.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nUsing Unity 4.2.2 I have set up Monodevelop with the correct references. Right now I\u0027m trying to find the basics like syntax, code structure, code for manipulating action groups, calling a context menu etc. The amount of information is enormous and being a person who visualizes everything, trying to translate code into a picture or movie and never coded before, it will be a slow process.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll be writing about my progress and occasionally ask the good people on this forum for a little help. Any spontaneous tips and all help will be appreciated and will be mentioned when the plugin/mod is released.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-05T12:34:48Z\u0022 title=\u002201/05/2016 12:34  PM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 5, 2016\u003C/time\u003E by Azimech\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2016-01-05T12:45:24Z","Content":"\n\u003Cp\u003E\nI think I\u0027ve seen a first error: 4.2.2 is nice for creating new models but not nice for coding in 1.0.5. I\u0027ll install the right version (I\u0027ll have to look it up) on my laptop instead and keep this one on my PC.\n\u003C/p\u003E\n"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2016-01-05T13:03:57Z","Content":"\n\u003Cp\u003E\nI\u0027ve found some code examples.\n\u003C/p\u003E\n\u003Cp\u003E\nFrom Taranis Elsu\u0027s topic i\u0027ve stored:\u003Cbr\u003E\nSimplePartlessPlugin.cs\u003Cbr\u003E\nPartRightClick.cs\u003Cbr\u003E\nSimplePartModule.cs\u003Cbr\u003E\nActionGroupsModule.cs\n\u003C/p\u003E\n\u003Cp\u003E\nHe\u0027s provided a lot of comments, very helpful.\n\u003C/p\u003E\n"},{"CreatedByName":"Stone Blue","CreatedById":77721,"CreatedDateTime":"2016-01-05T15:40:31Z","Content":"\n\u003Cp\u003E\nNice.... This sounds like it might have interesting possibilities.... I\u0027ll be watching to see what you, or others, come up with... :thumbsup:\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-05T15:40:52Z\u0022 title=\u002201/05/2016 03:40  PM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 5, 2016\u003C/time\u003E by Stone Blue\u003C/strong\u003E\n\u003C/span\u003E\n"}]}