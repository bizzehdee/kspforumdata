{"TopicId":60745,"ForumId":29,"TopicTitle":"Toggle Staging Icon","CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-01-22T18:04:26Z","PageNum":1,"Articles":[{"CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-01-22T18:04:26Z","Content":"\n\u003Cp\u003EI\u0027m trying to set up a part that can be removed from the staging list via a toggle that\u0027s only visible in the VAB or SPH. However, while I can get it to work properly in the editor whenever it loads into a new scene, during launch for example, the icon shows up in the staging list again. I have code in \u0022OnStart\u0022 that should remove that icon, but it doesn\u0027t appear to work. You can see the code I\u0027m using below.\u003C/p\u003E\u003Cp\u003EI\u0027ve had some luck in using an if statement that checks to see if \u0022stageStatus\u0022 is on before setting the StagingIcon in \u0022OnStart\u0022, but the problem there is that I can\u0027t create that icon until I load into a new scene if I go back to the editor while the stage display is off. For example, if I set it to off and go to the launchpad, the icon won\u0027t show up. Unfortunately, if I then revert to the VAB and click on the Stage Activation toggle to show it again it will show a blank icon until I go back to the launchpad.\u003C/p\u003E\u003Cp\u003EAm I just on the wrong track here? How can I ensure that the icon won\u0027t show up when switching scenes if it\u0027s toggled off?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        // Field\u003Cbr\u003E        [KSPField(isPersistant = true, guiActive = false, guiActiveEditor = true, guiName = \u0022Stage Activation\u0022)]\u003Cbr\u003E        public string stageStatus = \u0022On\u0022;\u003Cbr\u003E\u003Cbr\u003E        //Event\u003Cbr\u003E        [KSPEvent(guiName = \u0022Stage Activation\u0022, guiActive = false, guiActiveEditor = true)]\u003Cbr\u003E        public void toggleStage()\u003Cbr\u003E        {\u003Cbr\u003E            if (stageStatus == \u0022On\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                stageStatus = \u0022Off\u0022;\u003Cbr\u003E                this.part.stackIcon.RemoveIcon();\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                stageStatus = \u0022On\u0022;\u003Cbr\u003E                this.part.stackIcon.CreateIcon();\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        //OnStart\u003Cbr\u003E        public override void OnStart(StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            this.part.stagingIcon = \u0022RCS_MODULE\u0022;\u003Cbr\u003E            if (stageStatus == \u0022Off\u0022) {\u003Cbr\u003E                this.part.stackIcon.RemoveIcon();\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-22T18:07:05Z\u0022 title=\u002201/22/2014 06:07  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 22, 2014\u003C/time\u003E by Firov\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Rhidian","CreatedById":101171,"CreatedDateTime":"2014-01-22T19:42:02Z","Content":"\n\u003Cp\u003EMy guess would be because while you remove the StackIcon from the Part, Staging still has the icon registered, so when you go to the launchpad it shows that icon. And in the VAB, because you changed the part\u0027s PartIcon directly to be removed, it will be blank.\u003C/p\u003E\u003Cp\u003ESo I would try using something like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EStaging.RemoveIcon(Staging.FindIcon(this.part));\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Einstead of this.part.stackIcon.RemoveIcon() like you\u0027re trying now.\u003C/p\u003E\n"},{"CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-01-22T19:58:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rhidian\u0022 data-cite=\u0022Rhidian\u0022\u003E\u003Cdiv\u003EMy guess would be because while you remove the StackIcon from the Part, Staging still has the icon registered, so when you go to the launchpad it shows that icon. And in the VAB, because you changed the part\u0027s PartIcon directly to be removed, it will be blank.\u003Cp\u003ESo I would try using something like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EStaging.RemoveIcon(Staging.FindIcon(this.part));\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Einstead of this.part.stackIcon.RemoveIcon() like you\u0027re trying now.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EInteresting idea! Thanks. I\u0027ll give this a shot and report back.\u003C/p\u003E\n"},{"CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-01-22T20:57:26Z","Content":"\n\u003Cp\u003EOkay, I tested it and it does work reasonably well. Unfortunately, it\u0027s still incapable of drawing the right icon if you disable staging and then reenable it, at least until you change scenes, at which point it properly creates the icon.\u003C/p\u003E\u003Cp\u003EIt seems that, for whatever reason, \u0022this.part.stagingIcon\u0022 only has any impact during initial scene load. Any other ideas?\u003C/p\u003E\u003Cp\u003ELatest version\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//Field\u003Cbr\u003E        [KSPField(isPersistant = true, guiActive = false, guiActiveEditor = true, guiName = \u0022Stage Activation\u0022)]\u003Cbr\u003E        public string stageStatus = \u0022On\u0022;\u003Cbr\u003E//Event\u003Cbr\u003E        [KSPEvent(guiName = \u0022Stage Activation\u0022, guiActive = false, guiActiveEditor = true)]\u003Cbr\u003E        public void toggleStage()\u003Cbr\u003E        {\u003Cbr\u003E            if (stageStatus == \u0022On\u0022) {\u003Cbr\u003E                stageStatus = \u0022Off\u0022;\u003Cbr\u003E                Staging.RemoveIcon(Staging.FindIcon(this.part));\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E            else {\u003Cbr\u003E                stageStatus = \u0022On\u0022;\u003Cbr\u003E                Staging.CreateIcon(this.part);\u003Cbr\u003E                this.part.stagingIcon = \u0022RCS_MODULE\u0022;\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E//OnStart\u003Cbr\u003E       public override void OnStart(StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            if (state == StartState.Editor)\u003Cbr\u003E            {\u003Cbr\u003E                this.part.OnEditorAttach \u002B= OnEditorAttach;\u003Cbr\u003E                this.part.OnEditorDetach \u002B= OnEditorDetach;\u003Cbr\u003E                this.part.OnEditorDestroy \u002B= OnEditorDestroy;\u003Cbr\u003E                OnEditorAttach();\u003Cbr\u003E            }\u003Cbr\u003E            if (stageStatus == \u0022On\u0022) {\u003Cbr\u003E                this.part.stagingIcon = \u0022RCS_MODULE\u0022;\u003Cbr\u003E            }\u003Cbr\u003E            part.ActivatesEvenIfDisconnected = true;\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Rhidian","CreatedById":101171,"CreatedDateTime":"2014-01-22T23:22:51Z","Content":"\n\u003Cp\u003EMaybe instead of Staging.CreateIcon,try Staging.AddToSelection instead? Staging.CreateIcon seems to return a StackIcon, leading me to guess that it simply returns the part\u0027s StackIcon rather than setting it in the staging area.\u003C/p\u003E\u003Cp\u003EEdit: And maybe Staging.DisableIcon instead of RemoveIcon. I\u0027m not sure if there will be a difference, but that would be the other thing I would try.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-22T23:25:15Z\u0022 title=\u002201/22/2014 11:25  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 22, 2014\u003C/time\u003E by Rhidian\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-01-23T02:06:02Z","Content":"\n\u003Cp\u003EStaging.CreateIcon is deprecated. Actuall, I\u0027m 99% sure that staging icons currently do not use the Staging class. If I was you, I would modify the part.stackIcon proprety. Something like this\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eprivate string icon = string.Empty\u003Cbr\u003E\u003Cbr\u003Epublic override void OnStart(StartState state)\u003Cbr\u003E{\u003Cbr\u003E    string icon = this.part.stackIcon;\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003Eprivate void Update()\u003Cbr\u003E{\u003Cbr\u003E    if (showIcon) { this.part.stackIcon = icon; }\u003Cbr\u003E    else if (hideIcon) {this.part.stackIcon = string.Empty; }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-01-23T04:04:52Z","Content":"\n\u003Cp\u003ERhidian, I\u0027ll give that a shot. Thanks.\u003C/p\u003E\u003Cp\u003EAlso, Chris. Thanks for the advice. It\u0027s appreciated.\u003C/p\u003E\u003Cp\u003EHowever, I was originally trying to alter the part.stackIcon property, as is visible in my original post, but I met with extremely limited success. It did technically allow me to add or remove an icon but, much like the staging class method in my later post, recreating the icon always resulted in a blank box in the staging list, rather than the proper RCS icon.\u003C/p\u003E\u003Cp\u003EAs to your example, unfortunately stackIcon doesn\u0027t accept a string as an assignment value. It\u0027s looking for a VStackIcon. I assume you actually meant part.stackIcon.iconImage? If so, it still doesn\u0027t accept strings. Instead I have to use one of the default icons from the DefaultIcons enum. Which sadly doesn\u0027t allow a null value, or in your example, the empty string. However, that said, it\u0027s entirely possible that I simply misunderstood you.\u003C/p\u003E\u003Cp\u003EAlso, one final question for you, how do you know that the Staging class is deprecated? It seems like the documentation on the Kerbal API is a bit... spotty. Just curious if I\u0027ve missed some documentation out there somewhere.\u003C/p\u003E\u003Cp\u003EThanks again to both of you.\u003C/p\u003E\u003Cp\u003Eedit - Also, part.stackIcon.iconImage appears to do nothing. Much like the rest of the functions related to stage icons... *sigh* This really isn\u0027t turning out to be as easy as I thought it would be when I decided it would be a \u0022good idea\u0022 to add support for tweakable staging.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-23T04:12:21Z\u0022 title=\u002201/23/2014 04:12  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 23, 2014\u003C/time\u003E by Firov\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-01-23T04:23:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Firov\u0022 data-cite=\u0022Firov\u0022\u003E\u003Cdiv\u003ERhidian, I\u0027ll give that a shot. Thanks.\u003Cp\u003EAlso, Chris. Thanks for the advice. It\u0027s appreciated.\u003C/p\u003E\u003Cp\u003EHowever, I was originally trying to alter the part.stackIcon property, as is visible in my original post, but I met with extremely limited success. It did technically allow me to add or remove an icon but, much like the staging class method in my later post, recreating the icon always resulted in a blank box in the staging list, rather than the proper RCS icon.\u003C/p\u003E\u003Cp\u003EAs to your example, unfortunately stackIcon doesn\u0027t accept a string as an assignment value. It\u0027s looking for a VStackIcon. I assume you actually meant part.stackIcon.iconImage? If so, it still doesn\u0027t accept strings. Instead I have to use one of the default icons from the DefaultIcons enum. Which sadly doesn\u0027t allow a null value, or in your example, the empty string. However, that said, it\u0027s entirely possible that I simply misunderstood you.\u003C/p\u003E\u003Cp\u003EAlso, one final question for you, how do you know that the Staging class is deprecated? It seems like the documentation on the Kerbal API is a bit... spotty. Just curious if I\u0027ve missed some documentation out there somewhere.\u003C/p\u003E\u003Cp\u003EThanks again to both of you.\u003C/p\u003E\u003Cp\u003Eedit - Also, part.stackIcon.iconImage appears to do nothing. Much like the rest of the functions related to stage icons... *sigh* This really isn\u0027t turning out to be as easy as I thought it would be when I decided it would be a \u0022good idea\u0022 to add support for tweakable staging.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh sorry, I have it all wrong.\u003C/p\u003E\u003Cp\u003EDon\u0027t use this.part.stackIcon. Use this.part.stagingIcon This one is a string and does what you are looking for.\u003C/p\u003E\u003Cp\u003EAs for the staging class being deprecated, that\u0027s not entirely true, but my experiments with the staging class and staging icons all failed.\u003C/p\u003E\u003Cp\u003EIf changing this.part.stagingIcon does not work immediately, try sliding an \u0022Staging.SortIcons();\u0022 after, it m,ight do the trick. I remember someone asked a while ago and that stagingIcon was the key to having it work.\u003C/p\u003E\u003Cp\u003EIf you want the list of the strings that stagingIcon takes as icons, take a look at the DefaultIcons enum, just use any of those values, as strings, and it will assign a correct icon.\u003C/p\u003E\n"},{"CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-01-23T04:43:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003E Previous Post \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t know Chris, I think this might just be an impossible task, much like custom icons. Based on your advice I set up my module as below. Clicking the toggle button however doesn\u0027t disable the icon if it\u0027s already there, nor will it bring it back if the icon was set as disabled when you loaded into the editor. In fact, this version isn\u0027t even capable of generating a blank staging icon.\u003C/p\u003E\u003Cp\u003EIt will function properly when it loads onto the pad or runway, either having a stack icon if enabled or omit it if it\u0027s disabled, since I have a check in the \u0022OnStart\u0022 method to create the icon only if it\u0027s enabled. Unfortunately, \u0022this.part.stagingIcon\u0022 doesn\u0027t seem to work anywhere but in the OnStart method, and I have no idea why. I might be able to reinitialize the part to force it to go through OnStart again, but that\u0027s not something I\u0027ve really looked into.\u003C/p\u003E\u003Cp\u003EThis \u0022simple little tweak\u0022 has quickly gone from a minor nuisance to a serious annoyance.\u003C/p\u003E\u003Cp\u003EOh well. Any other ideas? Either way, I appreciate your help.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//Field\u003Cbr\u003E       [KSPField(isPersistant = true, guiActive = false, guiActiveEditor = true, guiName = \u0022Stage Activation\u0022)]\u003Cbr\u003E        public string stageStatus = \u0022On\u0022;\u003Cbr\u003E\u003Cbr\u003E//Event\u003Cbr\u003E       [KSPEvent(guiName = \u0022Stage Activation\u0022, guiActive = false, guiActiveEditor = true)]\u003Cbr\u003E        public void toggleStage()\u003Cbr\u003E        {\u003Cbr\u003E            if (stageStatus == \u0022On\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                stageStatus = \u0022Off\u0022;\u003Cbr\u003E                this.part.stagingIcon = string.Empty;\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                stageStatus = \u0022On\u0022;\u003Cbr\u003E                this.part.stagingIcon = \u0022RCS_MODULE\u0022;\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E//OnStart\u003Cbr\u003E       public override void OnStart(StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            if (stageStatus == \u0022On\u0022) {\u003Cbr\u003E                this.part.stagingIcon = \u0022RCS_MODULE\u0022;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2014-01-23T18:31:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Firov\u0022 data-cite=\u0022Firov\u0022\u003E\u003Cdiv\u003EI don\u0027t know Chris, I think this might just be an impossible task, much like custom icons. Based on your advice I set up my module as below. Clicking the toggle button however doesn\u0027t disable the icon if it\u0027s already there, nor will it bring it back if the icon was set as disabled when you loaded into the editor. In fact, this version isn\u0027t even capable of generating a blank staging icon.\u003Cp\u003EIt will function properly when it loads onto the pad or runway, either having a stack icon if enabled or omit it if it\u0027s disabled, since I have a check in the \u0022OnStart\u0022 method to create the icon only if it\u0027s enabled. Unfortunately, \u0022this.part.stagingIcon\u0022 doesn\u0027t seem to work anywhere but in the OnStart method, and I have no idea why. I might be able to reinitialize the part to force it to go through OnStart again, but that\u0027s not something I\u0027ve really looked into.\u003C/p\u003E\u003Cp\u003EThis \u0022simple little tweak\u0022 has quickly gone from a minor nuisance to a serious annoyance.\u003C/p\u003E\u003Cp\u003EOh well. Any other ideas? Either way, I appreciate your help.\u003C/p\u003E\u003Cp\u003E-snip-\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI remember TaranisElsu successfully doing it, I\u0027ll poke him about what else was needed to update the icon.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/taraniselsu/TacSelfDestruct/blob/master/Source/TacSelfDestruct.cs#L98-L118\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/taraniselsu/TacSelfDestruct/blob/master/Source/TacSelfDestruct.cs#L98-L118\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EYou might want to take a peak at this code, it does work properly.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-23T18:41:59Z\u0022 title=\u002201/23/2014 06:41  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 23, 2014\u003C/time\u003E by stupid_chris\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Firov","CreatedById":57445,"CreatedDateTime":"2014-01-23T18:58:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stupid_chris\u0022 data-cite=\u0022stupid_chris\u0022\u003E\u003Cdiv\u003EI remember TaranisElsu successfully doing it, I\u0027ll poke him about what else was needed to update the icon.\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/taraniselsu/TacSelfDestruct/blob/master/Source/TacSelfDestruct.cs#L98-L118\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/taraniselsu/TacSelfDestruct/blob/master/Source/TacSelfDestruct.cs#L98-L118\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EYou might want to take a peak at this code, it does work properly.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHey Chris. Thanks for the link. I\u0027ll have to take a look at that code, though I actually just figured it out myself. The code below is capable of creating the proper icon.\u003C/p\u003E\u003Cp\u003EIt turns out that I needed to use the part.stackIcon.iconImage property to assign the icon image, then use part.stackIcon.CreateIcon() to generate it, and finally staging.SortIcons to put it in the list. Oddly enough though, using this exact process in OnStart() doesn\u0027t successfully create the icon, but that\u0027s fine since \u0022this.part.stagingIcon\u0022 does. Not that I can explain that apparent discrepancy.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        [KSPEvent(guiName = \u0022Stage Activation\u0022, guiActive = false, guiActiveEditor = true)]\u003Cbr\u003E        public void toggleStage()\u003Cbr\u003E        {\u003Cbr\u003E            if (stageStatus == \u0022On\u0022) {\u003Cbr\u003E                stageStatus = \u0022Off\u0022;\u003Cbr\u003E                this.part.stackIcon.RemoveIcon();\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E            else {\u003Cbr\u003E                stageStatus = \u0022On\u0022;\u003Cbr\u003E                this.part.stackIcon.iconImage = DefaultIcons.RCS_MODULE;\u003Cbr\u003E                this.part.stackIcon.CreateIcon();\u003Cbr\u003E                Staging.SortIcons();\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"}]}