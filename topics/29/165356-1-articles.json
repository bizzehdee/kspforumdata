{"TopicId":165356,"ForumId":29,"TopicTitle":"How do i check whether a part has a specific resource in it?","CreatedByName":"panzer1b","CreatedById":95108,"CreatedDateTime":"2017-09-10T03:28:43Z","PageNum":1,"Articles":[{"CreatedByName":"panzer1b","CreatedById":95108,"CreatedDateTime":"2017-09-10T03:28:43Z","Content":"\n\u003Cp\u003E\nSo anyways, im working on BDA and what i need to do is 2 fold:\n\u003C/p\u003E\n\u003Cp\u003E\nFirst when a specific event occurs (part gets hit by bullet, pretty obvious), i need to check whether a part contains a specific resource type in it at all (resource name is \u0022Armor\u0022).\n\u003C/p\u003E\n\u003Cp\u003E\nSecond, if the resource is present, i need to set a variable to the amount of that resource present in the part (so if there is 30 units of the resource the variable will have a value of 30 after operation), (variable is called \u0022thickness\u0022).\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, i would prefer to do this check in the least resource intensive method possible, since the mod will potentially be doing this check at a very high frequency (try doing penetration checks at over 5000 times a minute for autocannons).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI know this is probably really simple to do, but i havent done any coding for KSP for over 2 years, and i sorta forgot how to do all of these seemingly basic things \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E, that and probably the methods for doing it have changed\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-09-10T03:34:37Z\u0022 title=\u002209/10/2017 03:34  AM\u0022 data-short=\u00226 yr\u0022\u003ESeptember 10, 2017\u003C/time\u003E by panzer1b\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Aelfhe1m","CreatedById":142910,"CreatedDateTime":"2017-09-10T03:54:34Z","Content":"\n\u003Cp\u003E\nIf you\u0027re doing it from within a PartModule:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Evar res \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EResources\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFirstOrDefault\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Er \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E r\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EresourceName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Armor\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E thickness \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E res\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E?.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eamount\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// will be 0 if part doesn\u0027t have any storage for the resource or if storage is empty\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nYou should be able to cache the result of the first line so\u00A0future checks only need to read the value since the presence or absence of tankage for the resource generally doesn\u0027t change unless you need to account for flight switchable tanks.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-09-10T03:56:37Z\u0022 title=\u002209/10/2017 03:56  AM\u0022 data-short=\u00226 yr\u0022\u003ESeptember 10, 2017\u003C/time\u003E by Aelfhe1m\u003C/strong\u003E\n\u003Cbr\u003Echanged to specific resource\n\u003C/span\u003E\n"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2017-09-10T11:52:20Z","Content":"\n\u003Cp\u003E\nOr something like this\u00A0 \u00A0 \u00A0 \u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E public static double GetResourceAmount(this Part part, string resourceName)\n\u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 PartResourceDefinition resource = PartResourceLibrary.Instance.GetDefinition(resourceName);\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return part.Resources.Get(resource.id).amount;\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\n\u00A0 \u00A0 \u00A0 \u00A0 public static double GetResourceTotal(Vessel v, string resourceName)\n\u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 PartResourceDefinition resource = PartResourceLibrary.Instance.GetDefinition(resourceName);\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 double amount = 0;\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 foreach (Part mypart in v.parts)\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (mypart.Resources.Contains(resourceName))\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 amount \u002B= GetResourceAmount(mypart, resourceName);\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return amount;\n\u00A0 \u00A0 \u00A0 \u00A0 }\n\n\u00A0 \u00A0 \u00A0 \u00A0 public static double GetResourceMax(Vessel v, string resourceName)\n\u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 PartResourceDefinition resource = PartResourceLibrary.Instance.GetDefinition(resourceName);\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 double amount = 0;\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 foreach (Part mypart in v.parts)\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 if (mypart.Resources.Contains(resourceName))\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 {\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 amount \u002B= mypart.Resources.Get(resource.id).maxAmount;\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 }\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 return amount;\n\u00A0 \u00A0 \u00A0 \u00A0 }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNow, this assumes you don\u0027t know the resource id and instead are using the resource name. \u00A0It may be more efficient to get the resource ID first, store it and pass that to the functions so it doesn\u0027t have to get that every pass. \u00A0I\u0027m sure with some testing you can speed these up a bit.\n\u003C/p\u003E\n\u003Cp\u003E\nYou\u0027d call these functions as such:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EGetResourceTotal(FlightGlobals.ActiveVessel, \u0022ElectricCharge\u0022);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}