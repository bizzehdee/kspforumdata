{"TopicId":76411,"ForumId":29,"TopicTitle":"Adding PartModule to Part at runtime in Flight Mode","CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-07-01T15:32:53Z","PageNum":1,"Articles":[{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-07-01T15:32:53Z","Content":"\n\u003Cp\u003EAlright.\u003C/p\u003E\u003Cp\u003EI have a PartModule (module name \u0027ModuleOSJ\u0027) that I want to add dynamically during flight to the root part of the vessel.\u003C/p\u003E\u003Cp\u003EI started with this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif(!FlightGlobals.ActiveVessel.rootPart.Modules.Contains(\u0022ModuleOSJ\u0022)) //does our partmodule exist?\u003Cbr\u003E                {\u003Cbr\u003E                    PartModule Added = FlightGlobals.ActiveVessel.rootPart.Modules.OfType\u0026lt;ModuleOSJ\u0026gt;().First();\u003Cbr\u003E                }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis checks if the ModuleOSJ partmodule exists and adds it if it does not.\u003C/p\u003E\u003Cp\u003EThis works great for that first time and everything behaves as expected. This includes saving because when I check the persistence file, I can see the PartModule on the part and the values have saved correctly.\u003C/p\u003E\u003Cp\u003EHowever, loading does not work.\u003C/p\u003E\u003Cp\u003EIn the log I get the following error when loading the vessel at flight scene start:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPart mk1pod cannot load module #8. It only has 8 modules defined\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFrom this thread here: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/78611-When-the-part-config-and-the-save-file-are-different\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/78611-When-the-part-config-and-the-save-file-are-different\u003C/a\u003E it looks like that error message is thrown because having added my ModuleOSJ partmodule, the copy of the mk1pod in the persistence file has 9 part modules (module list starts at count zero for the first partmodule), but the saved prefab only has 8 modules so the mis-match causes the above error to be thrown.\u003C/p\u003E\u003Cp\u003ENow, I don\u0027t want to update the prefab with my partmodule as only the root part on a vessel needs it.\u003C/p\u003E\u003Cp\u003EThis thread here says he figured out how to add a partmodule dynamically in the VAB using reflection to call the partmodule.Awake() method so the setup happens correctly.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/27851-part-AddModule%28ConfigNode-node%29-NullReferenceException-in-PartModule-Load%28node%29-help\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/27851-part-AddModule%28ConfigNode-node%29-NullReferenceException-in-PartModule-Load%28node%29-help\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESetting that up does not seem to work either, as far as I can tell calling the Awake method via reflection is working, but I still run into the partmodule mis-match error above so I don\u0027t know that can even fix my problem.\u003C/p\u003E\u003Cp\u003EDoes anyone know of a work around for this? All I\u0027m trying to do is save a few strings and numbers on a per vessel basis, I really don\u0027t want to have to brute force adding the partmodule via ModuleManager to every part (how I\u0027m currently doing it in my Action Groups mod), or have to figure out the Scenario Module to serve as a data storage location.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-07-01T16:51:21Z","Content":"\n\u003Cp\u003EYour best bet is to change your system so that the partmodule checks if it\u0027s the root part during Start() and if not kills itself; then add that partmodule to everything via either ModuleManager or by modifying the AvailablePart pool.\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[KSPAddon (KSPAddon.Startup.SpaceCentre, true)]public class AddOSJ : MonoBehaviour{\tforeach (AvailablePart part in PartLoader.Instance.parts)\t{\t\tif(!part.Modules.Contains(\u0022ModuleOSJ\u0022)) //does our partmodule exist?\t\t{\t\t\tPartModule added = part.Modules.OfType\u0026lt;ModuleOSJ\u0026gt;().First();\t\t}\t}}\npublic class ModuleOSJ () : PartModule{\n\tPublic override void OnStart (PartModule.StartState state)\t{\t\tif (HighLogic.LoadedSceneIsFlight \u0026amp;\u0026amp; part != FlightGlobals.ActiveVessel.rootPart)\t\t{\t\t\tenabled = false;\t\t}\t}}\u003C/pre\u003E\u003Cp\u003Ethe above may not directly work, but it should be a good direction to go. You could alternately wrap all your other events in if (part == ~.rootPart){}, which should be cheap enough for every part to run every frame, but I\u0027m not confidant.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-01T16:53:22Z\u0022 title=\u002207/01/2014 04:53  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 1, 2014\u003C/time\u003E by Greys\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-07-01T17:29:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EAlright.\u003Cp\u003EI have a PartModule (module name \u0027ModuleOSJ\u0027) that I want to add dynamically during flight to the root part of the vessel.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was in almost exactly the same position as you with ScienceAlert. I tried every way I could think of that didn\u0027t involve adding the PartModule to every prefab. Ultimately I failed and decided to design around the problem. In your case, I think Greys\u0027 solution is the best. Don\u0027t bother with MM; that\u0027s just an unnecessary dependency. \u003C/p\u003E\u003Cp\u003EThe only gotcha is that you shouldn\u0027t forget that the vessel configuration can change, so you\u0027ll be needing some appropriate logic in OnVesselWasModified etc\u003C/p\u003E\u003Cp\u003EEdit: Also, there\u0027s the customPartData field you can use. It would be the most simple and straightforward solution, though of course there will be issues mixing your mod with any other that happens to also use the field\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-07-01T19:02:56Z","Content":"\n\u003Cp\u003E/sigh, sounds like there is no direct method to do this.\u003C/p\u003E\u003Cp\u003E@Greys: While that would work, it still seems the backwards way to do things by adding it to every part and then removing the partmodule if it is on a non-root part. If I was in a hurry I would go with that to get it up and running, but as I\u0027m not I\u0027m going to take this as a learning opportunity and work with the Scenario Module for the first time. (As I understand it you can use it as a data storage DB.)\u003C/p\u003E\u003Cp\u003E@xEvilReeperx: Thanks for the confirmation that I did not miss something.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-07-01T19:19:03Z","Content":"\n\u003Cp\u003EYeah, just to confirm, OnLoad is called before you get to add your module.\u003C/p\u003E\n"}]}