{"TopicId":130913,"ForumId":29,"TopicTitle":"C#/KSP question","CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-01-28T14:04:08Z","PageNum":1,"Articles":[{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-01-28T14:04:08Z","Content":"\n\u003Cp\u003E\nI looking to learn some more about the environment, to improve my current mods and write some new ones.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve used and seen the following, but don\u0027t have a clear explanation:\n\u003C/p\u003E\n\u003Cp\u003E\n[KSPScenario(ScenarioCreationOptions.AddToAllGames, new GameScenes[] { GameScenes.SPACECENTER, GameScenes.EDITOR, GameScenes.FLIGHT, GameScenes.TRACKSTATION })]\u003Cbr\u003E\n[KSPField(isPersistant = true)]\u003Cbr\u003E\n[KSPAddon (KSPAddon.Startup.EditorAny, false)]\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nCan someone point me to some documentation which will explain these (and any others)? \u00A0I\u0027ve been looking, but obviously haven\u0027t used the right searches\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2016-01-28T19:52:55Z","Content":"\n\u003Cp\u003E\n\u003Ca href=\u0022http://stackoverflow.com/questions/2676603/how-do-attribute-classes-work\u0022 rel=\u0022external nofollow\u0022\u003EThose\u003C/a\u003E are \u003Ca href=\u0022http://www.dotnetperls.com/attribute\u0022 rel=\u0022external nofollow\u0022\u003Eattributes\u003C/a\u003E. I don\u0027t have a good understanding of them either, but the basic idea seems to be that they further define or categorize the method or field following each attribute.\n\u003C/p\u003E\n\u003Cp\u003E\nSo the [KSPField] attribute is used for all Part Modules and Scenario Modules to collect each value into their respective Fields lists (BaseFieldList, I think; [KSPEvents] and [KSPActions] work the same way, with a BaseEventList and a BaseActionList). It makes for a convenient tag for saving and loading data, displaying information in a part\u0027s right-click menu, or telling a Part Module what values to look for in the config file.\n\u003C/p\u003E\n\u003Cp\u003E\n[KSPAddon] just tells KSP to start a Unity MonoBehaviour that the attribute is attached to. It\u0027s useful for mods that don\u0027t have a part or scenario module (you need something to tell your code to actually start doing something). I\u0027m not really sure what the MonoBehaviour is attached to, there\u0027s probably some KSP controller class that is the parent of all KSPAddon classes.\n\u003C/p\u003E\n\u003Cp\u003E\n[KSPScenario] is, as far as I know, only used once, the first time you start a game with an addon using that Scenario Module (and it only seems to be read in the Space Center scene, which is why you can\u0027t skip that scene when loading new mods with Scenario Modules). After that KSP\u0027s Scenario Module controller loads all of the data from the save file, and as long as there is a matching class that inherits from Scenario Module\u00A0it will be handled properly. It isn\u0027t actually necessary to use [KSPScenario] to add your Scenario Module, it\u0027s just much simpler than the other options.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only other KSP-specific attribute that I\u0027m aware of is [Persistent], which gets used when manually saving and loading data.\n\u003C/p\u003E\n"}]}