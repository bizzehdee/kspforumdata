{"TopicId":25752,"ForumId":29,"TopicTitle":"part.AddModule(ConfigNode node): NullReferenceException in PartModule.Load(node)-help","CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-05-06T17:26:54Z","PageNum":1,"Articles":[{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-05-06T17:26:54Z","Content":"\n\u003Cp\u003ESo yeah. I\u0027m trying to dynamically add PartModules to a part in the VAB editor.\u003C/p\u003E\u003Cp\u003EWhen I call part.AddModule(ConfigNode node) with a known good ConfigNode (it\u0027s an EngineModule from another engine), PartModule.Load(node) causes a NullReferenceException.\u003C/p\u003E\u003Cp\u003EWhat am I doing wrong?\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-05-07T19:59:29Z","Content":"\n\u003Cp\u003EUpdate: After lots of blind flailing and remembering a bit of a conversation with Mu, I\u0027ve discovered that the problem is that part.AddModule(ConfigNode node) fails if the partModule\u0027s .Awake() method doesn\u0027t get called (apparently there\u0027s setup that happens in there).\u003C/p\u003E\u003Cp\u003EUnfortunately, PartModule.Awake() is private.\u003C/p\u003E\u003Cp\u003EFortunately, C# has reflection.\u003C/p\u003E\u003Cp\u003EI\u0027ve now managed to get new PartModules to successfully spawn from the editor. However, the parts they spawn on still do not appear to recognize their PartModules. \u003C/p\u003E\u003Cp\u003EWhat is the order of operations necessary to add a new module to a part at runtime, from outside that part\u0027s scope?\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2013-05-08T18:19:20Z","Content":"\n\u003Cp\u003ENevermind! I got it to work!\u003C/p\u003E\u003Cp\u003EFor everyone who needs to add a PartModule to a part in the VAB, here is how you do it:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\t\t\t\t\tPartModule module = part.AddModule (addNode.GetValue(\u0022name\u0022));\u003Cbr\u003E\t\t\t\t\tif(Awaken (module)) { // uses reflection to find and call the PartModule.Awake() private method\u003Cbr\u003E\t\t\t\t\t\tmodule.Load(addNode);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAwaken(module) is a static method that looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\tpublic static bool Awaken(PartModule module)\u003Cbr\u003E\t{\u003Cbr\u003E\t\t// thanks to Mu and Kine for help with this bit of Dark Magic. \u003Cbr\u003E\t\t// KINEMORTOBESTMORTOLOLOLOL\u003Cbr\u003E\t\tif (module == null)\u003Cbr\u003E\t\t\treturn false;\u003Cbr\u003E\t\tobject[] paramList = new object[] { };\u003Cbr\u003E\t\tMethodInfo awakeMethod = typeof(PartModule).GetMethod(\u0022Awake\u0022, BindingFlags.Instance | BindingFlags.NonPublic);\u003Cbr\u003E\u003Cbr\u003E\t\tif (awakeMethod == null)\u003Cbr\u003E\t\t\treturn false;\u003Cbr\u003E\u003Cbr\u003E\t\tawakeMethod.Invoke(module, paramList);\u003Cbr\u003E\t\treturn true;\u003Cbr\u003E\t}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBecause reflection in C# is AWESOME.\u003C/p\u003E\n"},{"CreatedByName":"wotlight","CreatedById":67067,"CreatedDateTime":"2013-05-22T05:40:04Z","Content":"\n\u003Cp\u003EAwesome! This is exactly what I needed.\u003C/p\u003E\u003Cp\u003EThanks for the code!\u003C/p\u003E\n"},{"CreatedByName":"mbalint","CreatedById":160081,"CreatedDateTime":"2016-04-14T14:44:41Z","Content":"\n\u003Cp\u003E\nThat\u0027s awesome!\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll use it in my mod!\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2016-04-14T16:35:16Z","Content":"\n\u003Cp\u003E\nCareful, adding a PartModule this way \u003Cspan style=\u0022color:#FF0000;\u0022\u003E\u003Cstrong\u003ECAN NOT\u003C/strong\u003E\u003C/span\u003E save/load data.\n\u003C/p\u003E\n\u003Cp\u003E\nWhen a vessel loads, only PartModules in the part prefab are present when KSP loads from the save file. It is only after the actual load happens that your own code runs to add the PartModule back onto the part.\n\u003C/p\u003E\n\u003Cp\u003E\nSo because the partModule is added back in after the Load operation takes place, it reverts to defaults and never loads data from disk.\n\u003C/p\u003E\n\u003Cp\u003E\nThat is okay if your partModule doesn\u0027t need to save/load data, otherwise you need to use ModuleManager to add your partModule to the part prefab.\n\u003C/p\u003E\n\u003Cp\u003E\n(This was true until KSP 1.0.5, I am not aware of anyone having tested this on KSP 1.1 yet.)\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nedit: Hmmm, opening post is from 2013, differing versions of KSP may be an issue here.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-14T16:40:25Z\u0022 title=\u002204/14/2016 04:40  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 14, 2016\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-04-14T19:12:32Z","Content":"\n\u003Cp\u003E\nUse ModuleManager and don\u0027t a\u00A0necro 3 year old post...\n\u003C/p\u003E\n"},{"CreatedByName":"mbalint","CreatedById":160081,"CreatedDateTime":"2016-04-22T17:02:26Z","Content":"\n\u003Cp\u003E\nHello!\n\u003C/p\u003E\n\u003Cp\u003E\n(Sorry I couldn\u0027t answer, because I was on a holiday)\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222513977\u0022 data-ipsquote-contentid=\u002225752\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221460661152\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2016. 04. 14. at 9:12 PM, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUse ModuleManager and don\u0027t a\u00A0necro 3 year old post...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI would use it, but I need to add modules in-flight.\n\u003C/p\u003E\n\u003Cp\u003E\nBTW it works without calling the awake method(as far as I know that\u0027s called during the flight screen). This is a more or less working code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epart.AddModule(addNode);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n...more or less, because some modules cannot be added whit this method like science experiment module and science lab module.Whit those I always get a Null Reference Exception.\n\u003C/p\u003E\n"},{"CreatedByName":"mbalint","CreatedById":160081,"CreatedDateTime":"2016-04-22T17:22:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222513765\u0022 data-ipsquote-contentid=\u002225752\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221460651716\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2016. 04. 14. at 6:35 PM, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCareful, adding a PartModule this way \u003Cspan style=\u0022color:#FF0000;\u0022\u003E\u003Cstrong\u003ECAN NOT\u003C/strong\u003E\u003C/span\u003E save/load data.\n\u003C/p\u003E\n\u003Cp\u003E\nWhen a vessel loads, only PartModules in the part prefab are present when KSP loads from the save file. It is only after the actual load happens that your own code runs to add the PartModule back onto the part.\n\u003C/p\u003E\n\u003Cp\u003E\nSo because the partModule is added back in after the Load operation takes place, it reverts to defaults and never loads data from disk.\n\u003C/p\u003E\n\u003Cp\u003E\nThat is okay if your partModule doesn\u0027t need to save/load data, otherwise you need to use ModuleManager to add your partModule to the part prefab.\n\u003C/p\u003E\n\u003Cp\u003E\n(This was true until KSP 1.0.5, I am not aware of anyone having tested this on KSP 1.1 yet.)\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nedit: Hmmm, opening post is from 2013, differing versions of KSP may be an issue here.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, I know that and I made a simple system that handles the saving and loading the added modules.\n\u003C/p\u003E\n"}]}