{"TopicId":80069,"ForumId":29,"TopicTitle":"Given a position vector, what body\u0026#039;s SOI is it inside of?","CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-30T04:38:44Z","PageNum":1,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-30T04:38:44Z","Content":"\n\u003Cp\u003EWhat the title says. I\u0027m looking for an API method that will let me pass in a position vector (expressed in Unity World Coordinates), and tell me which body\u0027s sphere of influence that position is in. I can ask what sphere of influence a vessel is in, but this isn\u0027t necessarily a vessel\u0027s position - it\u0027s just an arbitrary position in space.\u003C/p\u003E\u003Cp\u003E(Background: I\u0027m trying to make a homemade raycast algorithm that works to find where a ray hits the body\u0027s terrain, when the intersect in question is far enough away that the terrain polygons are not loaded so I have to use the PQS controller to get the terrain data instead of using Unity\u0027s Raycaster to hit the polygon. One important part of that algorithm is to simply figure out which Celestial Body the ray\u0027s origin is located in in the first place.)\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-07-30T08:45:52Z","Content":"\n\u003Cp\u003EWould it be possible to loop through all celestial bodies, get their position and radius of SoI, then work out if your position is inside that sphere?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-30T08:51:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blizzy78\u0022 data-cite=\u0022blizzy78\u0022\u003E\u003Cdiv\u003EWould it be possible to loop through all celestial bodies, get their position and radius of SoI, then work out if your position is inside that sphere?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUgh. Yes, technically possible. But the Mun\u0027s SoI is a pocket inside Kerbin\u0027s SoI which is a pocket inside Sun\u0027s SoI. So using the technique you describe, a point inside the Mun\u0027s SoI would register 3 SoI hits - one for Mun, one for Kerbin, and one for Sun. I\u0027d have to be careful to always make sure that of all the hits I get, I use the one that\u0027s at the lowest tier of the tree structure of bodies.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-07-30T13:48:34Z","Content":"\n\u003Cp\u003EThe only other think I can think of is to \u0027spawn\u0027 a null vessel, then call the .body method on it.\u003C/p\u003E\u003Cp\u003EOtherwise, I think blizzy\u0027s suggestion is the only other way I can think of.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003Cp\u003Eedit: Wait, you know the world co-ordinates of your point, what about a simple list compare of distances as the SOI boundary is a fixed distance. \u003C/p\u003E\u003Cp\u003E(On proof reading before posting, I realize this is essentially blizzy\u0027s suggestion, just you premake the list of SOI distances to compare to and check the shortest distance first rather then calculating them.)\u003C/p\u003E\u003Cp\u003ESo sort the list by shortest distance to your point and then error trap to make sure you are inside that body\u0027s SOI distance.\u003C/p\u003E\u003Cp\u003E(For this example, Mun\u0027s SOI is 300km, Kerbin\u0027s is 1,000km)\u003C/p\u003E\u003Cp\u003EDistance check, we are closest to the Mun at 55km from the Mun. 55km is less then the Mun\u0027s SOI boundary so we are in the Mun\u0027s SOI.\u003C/p\u003E\u003Cp\u003EDistance check 2, we are closest to the Mun at 350km from it. 350km is greater then the 300km SOI boundary so check next closest. Next closest is Kerbin at 800Km from our point in space. 800km is less then 1,000km so we are in Kerbin\u0027s SOI.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-30T13:59:34Z\u0022 title=\u002207/30/2014 01:59  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 30, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-07-30T20:16:51Z","Content":"\n\u003Cp\u003ECheck all of CB Sun\u0027s children. If it\u0027s in one of their SOIs, check that body\u0027s children to see if it\u0027s in that SOI. Keep drilling down.\u003C/p\u003E\u003Cp\u003ENow it\u0027s O(log(n)) not O(n)...\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-07-30T21:13:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003ECheck all of CB Sun\u0027s children. If it\u0027s in one of their SOIs, check that body\u0027s children to see if it\u0027s in that SOI. Keep drilling down.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not too familiar with the O\u0027s, but yeah, that\u0027s basically it. Your list of bodies to check (parent-child relationships) is essentially fixed, and you can even build that dynamically at KSP start (to account for planet mods.)\u003C/p\u003E\n"}]}