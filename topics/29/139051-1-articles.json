{"TopicId":139051,"ForumId":29,"TopicTitle":"How to create custom classes?","CreatedByName":"Tralfagar","CreatedById":150801,"CreatedDateTime":"2016-05-05T15:13:48Z","PageNum":1,"Articles":[{"CreatedByName":"Tralfagar","CreatedById":150801,"CreatedDateTime":"2016-05-05T15:13:48Z","Content":"\n\u003Cp\u003E\nHello all! \u00A0I\u0027m currently working on a mod similar to \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/111815-104civilian-population-1751-update-to-105-in-progress/\u0022 rel=\u0022\u0022\u003ERabidNinjaWombat\u0027s Civilian Population\u003C/a\u003E. \u00A0In his mod, he used civilians as a resource, similar to liquid rocket fuel, mono prop. \u00A0I believe that was because originally there were no tourists and that was his workaround. \u00A0However, now we have different classes of Kerbals (crew/tourist). \u00A0Ideally, my class would be uncontrollable directly by the player (similar to a tourist), but would have attributes that I could modify (such as being a geologist, or accountant) which would be able to interact with parts of the game (mining speed and income over time, respectively). \u00A0In addition, it would not spawn naturally, but only if the player chooses to spawn it within the station. \u00A0Though if it is impossible to do otherwise, I would be OK with allowing them to spawn in the roster.\n\u003C/p\u003E\n\u003Cp\u003E\nLooking through \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022http://forum.kerbalspaceprogram.com/index.php?/profile/108889-rabidninjawombat/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022108889\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/108889-rabidninjawombat/\u0022 rel=\u0022\u0022\u003E@rabidninjawombat\u003C/a\u003E\u0027s\u00A0code, I\u00A0noticed that ProtoCrewMember.KerbalType assigns the type of Kerbal as crew when the Kerbal is generated\u00A0. \u00A0However, since it is an enum, I don\u0027t believe it can be modified at runtime. \u00A0Is that correct?\n\u003C/p\u003E\n\u003Cp\u003E\nAlternatively,\u00A0I noticed in [KSP Path]/GameData/Squad/Experience, there is Traits.cfg which I believe belongs to \u003Cfont face=\u0022Monospace\u0022\u003E \u003Cspan style=\u0022color:#3364a4;\u0022\u003EProtoCrewMember\u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E.\u003C/span\u003E\u003Cspan style=\u0022color:#3364a4;\u0022\u003EKerbalType\u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E.\u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003ECrew\u003C/span\u003E\u003C/font\u003E\u00A0(again, from \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022http://forum.kerbalspaceprogram.com/index.php?/profile/108889-rabidninjawombat/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022108889\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/108889-rabidninjawombat/\u0022 rel=\u0022\u0022\u003E@rabidninjawombat\u003C/a\u003E\u0027s code).\u00A0 This looks like it stores the different types of Kerbal crews (Scientist/Engineer/Pilot) as well as the different effects. \u00A0However, I cannot find details about this in the \u003Ca href=\u0022http://docuwiki-kspapi.rhcloud.com/#/classes/ProtoCrewMember\u0022 rel=\u0022external nofollow\u0022\u003EAPI documentation\u003C/a\u003E. \u00A0Is the Scientist/Pilot/Engineer also an enum and therefore unable to be modified? \u00A0Or is there a class that is called at some point that looks at all of the classes available?\n\u003C/p\u003E\n\u003Cp\u003E\nOr would I be better served in keeping the civilian/contractor\u00A0Kerbals as a resource and converting them through that?\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-21T16:01:34Z\u0022 title=\u002205/21/2016 04:01  PM\u0022 data-short=\u00228 yr\u0022\u003EMay 21, 2016\u003C/time\u003E by Tralfagar\u003C/strong\u003E\n\u003Cbr\u003EEditing tags to be more specific\n\u003C/span\u003E\n"},{"CreatedByName":"Aelfhe1m","CreatedById":142910,"CreatedDateTime":"2016-05-05T16:40:27Z","Content":"\n\u003Cp\u003E\nAs a quick test I edited one of the Kerbals in the roster section of the persistent.sfs to have \u0022trait = MissionSpecialist\u0022 and added the following block to the end of traits.cfg:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EEXPERIENCE_TRAIT\n{\n\tname = MissionSpecialist\n\ttitle = Mission Specialist\n\tdesc = Does specialised duties on missions.\n\t\n\tEFFECT\n\t{\n\t\tname= RepairSkill\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWhen viewed in the astronaut complex after loading the game that crew member showed up as \u0022Mission Specia\u0022. The space in the portrait in flight was even more limited displaying just \u0022Mission\u0022.\u00A0So it can be customised but there\u0027s a hard limit on the length of name that will display.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"anxcon","CreatedById":148336,"CreatedDateTime":"2016-05-06T01:22:17Z","Content":"\n\u003Cp\u003E\nbasicly you\u0027ll need to code new ExperienceEffect, and code elsewhere to check if experience traits exist to manipulate stuff\n\u003C/p\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-05-06T02:54:25Z","Content":"\n\u003Cp\u003E\nYou can\u0027t change the ProtoCrewMember enums for RosterStatus and KerbalType. These are fixed Enums.\u003Cbr\u003E\nso the kerbals can only be Crew, Application, Unowned, Tourist. and they can only be Available, Assigned, Dead or Missing.\u003Cbr\u003E\nYou can create your own Experience Traits as you have discovered above, but you will have to code the effects everywhere else that you want them to take effect as anxcon has said.\u003Cbr\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Tralfagar","CreatedById":150801,"CreatedDateTime":"2016-05-21T04:05:12Z","Content":"\n\u003Cp\u003E\nThank you very much for the replies. \u00A0I agree that changing the enum may not work...but it doesn\u0027t look like it is necessary. \u00A0Simply creating a new trait (below), Kerbals with title Test are spawning in the Astronaut Training Complex.\u00A0 It took me a little longer to understand what you guys were saying about creating custom classes, but I think I get it now. \u00A0Since the above posts, I\u0027ve been going through the documentation, trying to figure out how everything is connected and I think I got it. \u00A0Here is what I\u0027ve done so far: \u00A0I modified Traits.cfg to include a new type of class similar to what @Aelfhe1m\u00A0mentioned above:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EEXPERIENCE_TRAIT\n{\n\tname = Test\n\ttitle = Test\n\tdesc = Pilots provide assistance in flying the vessel.\n\n\tEFFECT\n\t{\n\t\tname = CustomClass\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThe biggest difference is that it should be calling \u0022CustomClass\u0022 instead of \u0022RepairSkill. \u00A0I checked out the API for the autopilot/repair skills and it looks like they both extend the \u0022Experience.ExperienceEffect\u0022 class. \u00A0I thought it would be best to follow suit with mine:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nusing \u003C/span\u003E\u003Cspan\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nusing KSP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nnamespace \u003C/span\u003E\u003Cspan\u003EPopulationMod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// My custom trait to test feasibility of creating new traits.  Right now, it looks like it spawns ~10% of the time in game. \u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECustomClass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EExperience\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EExperienceTrait\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECustomClass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EExperience\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EExperienceEffect\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E myEffect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Constructor for CustomClass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022I\u0027m calling a customClass!\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//When the class is created, it should spam the log...right?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAnd it compiles! \u00A0However, the code does not execute...which makes me understand what you guys were saying about coding \u0022elsewhere\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nSo if I need to explicitly call the methods later, I am thinking it would be best to including a bunch of if statements to check whether or not a Kerbal with that trait is on the craft\u00A0in OnUpdate (under a class that extends PartModule). \u00A0Essentially:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan\u003EOnUpdate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  foreach\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EKerbal\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E in \u003C/span\u003E\u003Cspan\u003ECraft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EKerbal\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EExperiencetrait\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E desiredTrait\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EKerbal\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etrait\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EdesiredMethod\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWould that be advisable? \u00A0Or am I missing a better/more common way to do it? \u00A0There seems to be very little supply of mods that alter Kerbal traits...and speaking of, is this a new addition in 1.0/1.1? \u00A0All the posts I\u0027ve read seem to say that this is not doable.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-21T04:22:01Z\u0022 title=\u002205/21/2016 04:22  AM\u0022 data-short=\u00228 yr\u0022\u003EMay 21, 2016\u003C/time\u003E by Tralfagar\u003C/strong\u003E\n\u003Cbr\u003EPressed the wrong button initially.\n\u003C/span\u003E\n"}]}