{"TopicId":78904,"ForumId":29,"TopicTitle":"GameDatabase.Instance.GetConfigNodes(\u0026quot;PART\u0026quot;) - Configs missing data?","CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-07-21T22:35:15Z","PageNum":1,"Articles":[{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-07-21T22:35:15Z","Content":"\n\u003Cp\u003EI have the following code\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            print(\u0022OnAwake() - Looking through GameDatabase\u0022);\u003Cbr\u003E            foreach (ConfigNode part_node in GameDatabase.Instance.GetConfigNodes(\u0022PART\u0022))\u003Cbr\u003E            {\u003Cbr\u003E                print(part_node.name);\u003Cbr\u003E                print(part_node.ToString());\u003Cbr\u003E            }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut i\u0027m finding that the results that get returned from pretty much every stock part is missing data, important data, like \u0022name\u0022! I\u0027m wanting to iterate through all configs looking for a specific part, but without the name value being in there, I can\u0027t match them up \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-07-21T22:50:46Z","Content":"\n\u003Cp\u003EOk looks like doing it this way instead works:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            foreach (UrlDir.UrlConfig url in GameDatabase.Instance.GetConfigs(\u0022PART\u0022))\u003Cbr\u003E            {\u003Cbr\u003E                if (url.name == partName)\u003Cbr\u003E                {\u003Cbr\u003E                    print(\u0022Found match\u0022);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-07-22T04:16:23Z","Content":"\n\u003Cp\u003EI\u0027ve found that .name quite often returns something useless (\u0027PART\u0027 for a part.name, \u0027MODULE\u0027 for partModule.name)\u003C/p\u003E\u003Cp\u003EDoes this work using .partName instead?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            print(\u0022OnAwake() - Looking through GameDatabase\u0022);\u003Cbr\u003E            foreach (ConfigNode part_node in GameDatabase.Instance.GetConfigNodes(\u0022PART\u0022))\u003Cbr\u003E            {\u003Cbr\u003E                print(part_node.partName); //--- changed your code here.\u003Cbr\u003E                print(part_node.ToString());\u003Cbr\u003E            }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-22T04:18:26Z\u0022 title=\u002207/22/2014 04:18  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 22, 2014\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-07-22T08:02:16Z","Content":"\n\u003Cp\u003EThere was a bug prior to 0.24 where all PART confignodes in the gamedatabase were stripped of string values, and really any values other than floats, serialized floats, and enums. I haven\u0027t tested it myself but I was in contact with Mu and he tells me that\u0027s been changed.\u003C/p\u003E\u003Cp\u003EAs a practical example here\u0027s some abandoned code I was working on, that is no longer needed in 0.24\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/Greys0/Virgin-Kalactic/blob/master/Source/Virgin_Kalactic/NodeFix/NodeFix.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Greys0/Virgin-Kalactic/blob/master/Source/Virgin_Kalactic/NodeFix/NodeFix.cs\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EGameDatabase is supposed to be the original confignodes as defined in the cfg file, plus default values where they\u0027re not overridden\u003C/p\u003E\u003Cp\u003EPartLoader.Instance.parts is the pool of \u0027protoparts\u0027 that get cloned when you click on stuff in the VAB/SPH, changing things here will change them for the remainder of the runtime and apply to all newly grabbed parts in the editor.\u003C/p\u003E\u003Cp\u003EIt shouldn\u0027t impact existing parts/existing vessels; but there\u0027s some indication that certain values are not actually stored on the vessel and get reloaded every time.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-22T08:05:57Z\u0022 title=\u002207/22/2014 08:05  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 22, 2014\u003C/time\u003E by Greys\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mihara","CreatedById":59752,"CreatedDateTime":"2014-07-22T08:20:19Z","Content":"\n\u003Cp\u003EWell, I\u0027m not sure what he changed, but now, when my modules attempt to use OnLoad to get at their MODULE{} confignode and parse it, they get different results between Editor and Flight scenes, and the results in both cases are useless.\u003C/p\u003E\u003Cp\u003EMight be the GameDatabase still contains useful data though, but meh...\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-07-22T16:04:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003EThere was a bug prior to 0.24 where all PART confignodes in the gamedatabase were stripped of string values, and really any values other than floats, serialized floats, and enums. I haven\u0027t tested it myself but I was in contact with Mu and he tells me that\u0027s been changed.\u003Cp\u003EAs a practical example here\u0027s some abandoned code I was working on, that is no longer needed in 0.24\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/Greys0/Virgin-Kalactic/blob/master/Source/Virgin_Kalactic/NodeFix/NodeFix.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Greys0/Virgin-Kalactic/blob/master/Source/Virgin_Kalactic/NodeFix/NodeFix.cs\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EGameDatabase is supposed to be the original confignodes as defined in the cfg file, plus default values where they\u0027re not overridden\u003C/p\u003E\u003Cp\u003EPartLoader.Instance.parts is the pool of \u0027protoparts\u0027 that get cloned when you click on stuff in the VAB/SPH, changing things here will change them for the remainder of the runtime and apply to all newly grabbed parts in the editor.\u003C/p\u003E\u003Cp\u003EIt shouldn\u0027t impact existing parts/existing vessels; but there\u0027s some indication that certain values are not actually stored on the vessel and get reloaded every time.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell that\u0027s interesting since I am running this on 0.24. Not all strings are stripped, though looking again most certainly are. Some are still there, like \u0022model\u0022.\u003C/p\u003E\u003Cp\u003EAnyway I have a working work around for now, but that tidbit about PartLoader could prove to be very useful to me so thanks!\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-07-22T20:15:27Z","Content":"\n\u003Cp\u003Enode.name is the name of the node (the thing that starts the node) like PART.\u003C/p\u003E\u003Cp\u003Enode.GetValue(\u0022name\u0022) is the actual value of the key \u0022name\u0022 that is inside the node, i.e. liquidEngine1-1\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-07-22T20:30:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003Enode.name is the name of the node (the thing that starts the node) like PART.\u003Cp\u003Enode.GetValue(\u0022name\u0022) is the actual value of the key \u0022name\u0022 that is inside the node, i.e. liquidEngine1-1\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah the code I pasted here was wrong, but I had it right in my actual code. The key \u0022name\u0022 was not in any of the nodes returned by GameDatabase.\u003C/p\u003E\n"}]}