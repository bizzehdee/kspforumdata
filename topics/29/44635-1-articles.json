{"TopicId":44635,"ForumId":29,"TopicTitle":"Prevent targeted docking port from being un-targeted at 200m","CreatedByName":"NavyFish","CreatedById":77044,"CreatedDateTime":"2013-09-01T21:00:24Z","PageNum":1,"Articles":[{"CreatedByName":"NavyFish","CreatedById":77044,"CreatedDateTime":"2013-09-01T21:00:24Z","Content":"\n\u003Cp\u003EThe title says it all, I\u0027m wondering if anyone can help me with this.\u003C/p\u003E\u003Cp\u003EI\u0027ve noticed that in ModuleDockingNode, the \u0022UnsetTarget()\u0022 event has an \u0022unfocusedRange = 200f\u0022 attribute - this might have something to do with it, but I\u0027m not looking to modify KSP\u0027s default behavior, just disable it in particular cases.\u003C/p\u003E\u003Cp\u003EIf I procedurally \u0022FlightGlobals.fetch.SetVesselTarget(..)\u0022 when outside of 200m, the target node is set for a split second, perhaps a frame or two, and then becomes un-selected. Thus, there\u0027s probably an event system going on here. If that was the case, I might be able to override the \u0022UnsetTarget()\u0022 method, but I\u0027m trying to do this purely through a MonoBehaviour (plugin), and not through a PartModule.\u003C/p\u003E\u003Cp\u003EAny help would be greatly appreciated.\u003C/p\u003E\u003Cp\u003E-NavyFish\u003C/p\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2013-09-03T01:03:10Z","Content":"\n\u003Cp\u003EHere is something you might be able to use. It is adapted from RemoteTech, which is probably a better source. Basically if you go past 200m, you can start using the protovessel to get parts, and then revert to the real target when the target gets closer again. Not sure if its really what you need, but it might help.\u003C/p\u003E\u003Cp\u003Eprivate void buildFromVessel(Vessel v)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E vessel = v;\u003C/p\u003E\u003Cp\u003E if (v.loaded) //Treat vessels differently if loaded, or not loaded\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E foreach (Part p in v.parts)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E foreach (PartModule m in p.Modules)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E if (m.name.Equals(\u0022ModuleDockingNode\u0022))\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //Do your stuff here\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E else\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //Use protovessel stuff\u003C/p\u003E\u003Cp\u003E foreach (ProtoPartSnapshot p in v.protoVessel.protoPartSnapshots)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E foreach (ProtoPartModuleSnapshot s in p.modules)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E if (s.moduleName.Equals(\u0022ModuleDockingNode\u0022))\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E ConfigNode n = new ConfigNode();\u003C/p\u003E\u003Cp\u003E s.Save(n);\u003C/p\u003E\u003Cp\u003E try\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E string t = n.GetValue(\u0022type\u0022, 0);\u003C/p\u003E\u003Cp\u003E type = getType(t);\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E catch\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //Error handling\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E //Do your stuff here\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\n"},{"CreatedByName":"NavyFish","CreatedById":77044,"CreatedDateTime":"2013-09-03T01:21:44Z","Content":"\n\u003Cp\u003EAwesome, thanks for the reply. I will try that - though I thought the \u0022loaded\u0022 flag indicated vessels were within the 2.5 km scene? My current code does something very similar to the first block you posted, but I haven\u0027t worked with Proto stuff at all. I\u0027ll have to dig around the forums to get more detail on what they are, exactly.\u003C/p\u003E\u003Cp\u003EI\u0027ve noticed that \u0022FlightGlobals.fetch.VesselTarget\u0022 changes at 200m, if you had a docking node manually targeted - it shifts to the root part of the ship. So I think my way forward is going to be whenever the target changes, find out the vessel that belongs to the targeted part, then traverse through its list of parts and find the appropriate docking node.\u003C/p\u003E\n"},{"CreatedByName":"NGTOne","CreatedById":55972,"CreatedDateTime":"2013-09-03T01:45:51Z","Content":"\n\u003Cp\u003EWhat do you know about ModuleDockingNode? This might actually be of some use in my \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/entry.php/859-The-Stanford-Torus-Project-%28Part-II%29\u0022 rel=\u0022external nofollow\u0022\u003Emegascale construction projects\u003C/a\u003E - I\u0027m having difficulty performing what would otherwise be a textbook docking at 245m from the dockee object\u0027s root part. The docking ports don\u0027t seem to want to engage, despite being lined up perfectly and having 0 degrees angle difference. They still collide, though, which kind of confuses me.\u003C/p\u003E\u003Cp\u003EAny insights?\u003C/p\u003E\n"},{"CreatedByName":"JDP","CreatedById":30775,"CreatedDateTime":"2013-09-03T03:42:07Z","Content":"\n\u003Cp\u003EThe 200m threshold is not one of loading, but of packing. You can change the packing and unpacking thresholds thusly:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EOrbitPhysicsManager Manager = (OrbitPhysicsManager)GameObject.FindObjectOfType(typeof(OrbitPhysicsManager));\u003Cbr\u003E\u003Cbr\u003EManager.distantLandedPartPackThreshold = Manager.distantPartPackThreshold = 2250;\u003Cbr\u003EManager.distantLandedPartUnpackThreshold = Manager.distantPartUnpackThreshold = 2000;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOf course there might be some additional limitations within ModuleDockingNode itself. That I haven\u0027t tested.\u003C/p\u003E\u003Cp\u003EDon\u0027t overdo the range boost btw. It can cause quite some lag if you set the OrbitPhysicsManager to unpack too many parts at a time. Romfarer overdid it a bit for his Lazor plugin and it caused him nothing but grief. This code snippet is from RT1. Here I set the packing and unpacking thresholds to be just within the loading range (2500 m). I\u0027ve had good experiences with this, it seems I found the sweet spot. I did however implement a toggle to turn off the range boost. I\u0027d recommend you do the same if you choose to implement this.\u003C/p\u003E\n"},{"CreatedByName":"NavyFish","CreatedById":77044,"CreatedDateTime":"2013-09-03T03:59:06Z","Content":"\n\u003Cp\u003EThank you, JDP. I\u0027m still exploring a way to achieve this effect without tweaking other parts of the game, but this is great information to have - and if I can\u0027t get another approach working, then I\u0027m likely to use your approach.\u003C/p\u003E\u003Cp\u003ENGTOne - I think JDP\u0027s answer would explain the problem you\u0027re having - the Docking Nodes are likely getting packed up at 200m, and thus the logic that controls their connection is disabled.\u003C/p\u003E\u003Cp\u003EI\u0027ve made a simple partless plugin incorporating his code above. You can \u003Ca href=\u0022http://sourcedreams.net/files/ksp/PartPackExtender.dll\u0022 rel=\u0022external nofollow\u0022\u003Edownload it here\u003C/a\u003E and give it a shot. \u003C/p\u003E\u003Cp\u003EThe source:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace PartPackExtender\u003Cbr\u003E{\u003Cbr\u003E    [KSPAddon(KSPAddon.Startup.Flight, false)]\u003Cbr\u003E    public class PartPackExtender : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            OrbitPhysicsManager Manager = (OrbitPhysicsManager)GameObject.FindObjectOfType(typeof(OrbitPhysicsManager));\u003Cbr\u003E\u003Cbr\u003E            Manager.distantLandedPartPackThreshold = Manager.distantPartPackThreshold = 2250;\u003Cbr\u003E            Manager.distantLandedPartUnpackThreshold = Manager.distantPartUnpackThreshold = 2000;\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EPlease let us know if that fixes your problem. I can\u0027t test it out because I don\u0027t have any ships that are \u0026gt; 200m long! lol\u003C/p\u003E\u003Cp\u003EAlso, worth noting - it seems that the OrbitPhysicsManager has been deprecated. The meta text reads:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u0027Manager.distantLandedPartUnpackThreshold is obsolete. Use Vessel.distanceUnpackThreshold instead\u0027\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E(and likewise for the pack threshold)\u003C/p\u003E\u003Cp\u003EI\u0027m not sure if the correct \u0027Vessel\u0027 to use would be FlightGlobals.ActiveVessel, or the Vessel you\u0027re trying to dock to - but hopefully for now the OrbitPhysicsManager is still functional.\u003C/p\u003E\n"},{"CreatedByName":"JDP","CreatedById":30775,"CreatedDateTime":"2013-09-03T04:36:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NavyFish\u0022 data-cite=\u0022NavyFish\u0022\u003E\u003Cdiv\u003E...\u003Cp\u003EAlso, worth noting - it seems that the OrbitPhysicsManager has been deprecated. The meta text reads:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u0027Manager.distantLandedPartUnpackThreshold is obsolete. Use Vessel.distanceUnpackThreshold instead\u0027\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E(and likewise for the pack threshold)\u003C/p\u003E\u003Cp\u003EI\u0027m not sure if the correct \u0027Vessel\u0027 to use would be FlightGlobals.ActiveVessel, or the Vessel you\u0027re trying to dock to - but hopefully for now the OrbitPhysicsManager is still functional.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGreat catch! It would seem that there has been a couple of extra benefits from getting Romfarer as a dev. the packing thresholds seem to be fully vessel-specific now. Which makes me very much giddy. I can get away with much larger RC ranges now. It does seem like the old method no longer will work though. Since the thresholds are now vessel specific, you\u0027d need to modify the vessel of the targeted node.\u003C/p\u003E\n"}]}