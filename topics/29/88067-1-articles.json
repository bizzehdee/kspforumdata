{"TopicId":88067,"ForumId":29,"TopicTitle":"Reading .cfg fields","CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2014-10-21T04:44:20Z","PageNum":1,"Articles":[{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2014-10-21T04:44:20Z","Content":"\n\u003Cp\u003EI\u0027m trying to write a wimple plugin that lets me reset goo containers and science bays at the cost of a resource, but I\u0027m not sure how to access the fields in a module. For example if i have a module \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPART{\u003Cbr\u003Efoo = 7\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    bar = 8\u003Cbr\u003E}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI am not sure how to access the field bar from my code.\u003C/p\u003E\n"},{"CreatedByName":"Cykyrios","CreatedById":17639,"CreatedDateTime":"2014-10-21T05:36:52Z","Content":"\n\u003Cp\u003EYou do that using KSPField, as such:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[KSPField]\u003Cbr\u003Epublic float foo;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EA KSPField is then usable as a standard variable in the rest of your code.\u003C/p\u003E\u003Cp\u003EYou can of course bypass this to avoid having values intended for displaying info only being changed by players.\u003C/p\u003E\u003Cp\u003EMore info in this thread, Example #1 should give you all the info you need: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/92643-Official-PartModule-Documentation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/92643-Official-PartModule-Documentation\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2014-10-21T20:02:58Z","Content":"\n\u003Cp\u003Esorry I misstated my question. what I meant to ask was if you had a .cfg file set up like this \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efoobar = 10\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = my_module\u003Cbr\u003E    foo = 9\u003Cbr\u003E}\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = some_other_module\u003Cbr\u003E    bar = 9\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI know how to access foobar and foo from my code but am not sure how to get bar.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-21T20:37:45Z","Content":"\n\u003Cp\u003EWhen does your code run?\u003C/p\u003E\u003Cp\u003ESince all those fields get loaded by the module(s) in question, you probably will want to get the some_other_module PartModule on the part you\u0027re on and get the value from there, rather than going back to the original confignode it was loaded from.\u003C/p\u003E\n"},{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2014-10-22T19:19:39Z","Content":"\n\u003Cp\u003EI don\u0027t know why i\u0027m so terrible at stating my questions:P. What I really want to know is when loading config fields with [KSPFields] does the fields location matter? for example if i have a config like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPART\u003Cbr\u003E{\u003Cbr\u003E    cost = 4\u003Cbr\u003E    MODULE \u003Cbr\u003E    {\u003Cbr\u003E       name = my_module\u003Cbr\u003E       foo = 5\u003Cbr\u003E    }\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E         name = other_module\u003Cbr\u003E         bar = 9\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewill:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[KSPField]\u003Cbr\u003Efloat cost;\u003Cbr\u003E\u003Cbr\u003E[KSPField]\u003Cbr\u003Efloat foo;\u003Cbr\u003E\u003Cbr\u003E[KSPField]\u003Cbr\u003Efloat bar;\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ework.\u003C/p\u003E\u003Cp\u003Eor do I have to do something different to access cost and bar?\u003C/p\u003E\u003Cp\u003Emy plugin loads in the flight scene and what do you mean by \u0022get the some_other_part_module\u0022. Sorry if the questions i\u0027m asking are obvious but i\u0027m very new to c# and ksp modding so any help is greatly appreciated\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-22T19:57:49Z\u0022 title=\u002210/22/2014 07:57  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 22, 2014\u003C/time\u003E by peachoftree\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-22T20:01:47Z","Content":"\n\u003Cp\u003EIf your class is a PartModule[-derived class], and you thus have a MODULE{} node in a part.cfg that refers to your PartModule, then the only KSPFields you will see will be the ones in *your* MODULE{} node.\u003C/p\u003E\n"},{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2014-10-22T20:04:49Z","Content":"\n\u003Cp\u003Eok. so is there no way to access the aforementioned bar and cost feilds? the mod im working on adds a mechanism to reset science bays and goo canisters with a resource and eva. Similar to dang it\u0027s method of repairing parts with spares, except i\u0027m reseting science experiments with cleanout kits. I need to acess the Inoperable feild in ModuleScienceExperiment but have not found a way to do that.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-22T20:07:46Z\u0022 title=\u002210/22/2014 08:07  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 22, 2014\u003C/time\u003E by peachoftree\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-10-22T20:42:14Z","Content":"\n\u003Cp\u003EAll KSPFields are public and have methods for altering them, so you just need to access the Part that your PartModule is attached to or some other PartModule attached to the same Part.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E/* From within your part module */\u003Cbr\u003E\u003Cbr\u003E//Set the cost field to 5000\u003Cbr\u003Epart.Fields.SetValue(\u0022cost\u0022, 5000);\u003Cbr\u003E\u003Cbr\u003E//Set the other modules bar value to 10\u003Cbr\u003EPartModule pm = part.FindModulesImplementing\u0026lt;other_module\u0026gt;();\u003Cbr\u003Eother_module.Fields.SetValue(\u0022bar\u0022, 10);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve never actually tried to do this before, but it seems like it should work. There are also GetValue and ReadValue methods, and overloads to specify the type the field is using.\u003C/p\u003E\u003Cp\u003EAccessing the other PartModule assumes that you actually have access to its Type, if it\u0027s from some other mod then you\u0027ll have to use some other method to assign the PartModule before you can get to its fields.\u003C/p\u003E\n"},{"CreatedByName":"peachoftree","CreatedById":110108,"CreatedDateTime":"2014-10-22T20:58:53Z","Content":"\n\u003Cp\u003Ewouldn\u0027t I have to use \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epm.Feilds.setValue(\u0022bar\u0022, 10);\u003C/pre\u003E\u003Cp\u003E to access other_module\u0027s field?\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-10-22T21:44:33Z","Content":"\n\u003Cp\u003EKSPFields are usually just members, and as DMagic said are public. If you already are referencing whatever defines OtherModule (let\u0027s say it\u0027s a stock Squad module like ModuleParachute)\u003C/p\u003E\u003Cp\u003EModuleParachute otherModule = (ModuleParachute)part.Modules[\u0022ModuleParachute\u0022];\u003C/p\u003E\u003Cp\u003EotherModule.bar = 10;\u003C/p\u003E\n"}]}