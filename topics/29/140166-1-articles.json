{"TopicId":140166,"ForumId":29,"TopicTitle":"Diffuse lighting not working on added mesh","CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2016-05-20T14:06:06Z","PageNum":1,"Articles":[{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2016-05-20T14:06:06Z","Content":"\n\u003Cp\u003E\nI am trying to add a feature to RasterPropMonitor that allows me to have config file configurable text. \u00A0I\u0027m using the Unity TextMesh object, and I can replace the built-in shader with one that respects the depth buffer, which is fine\u00A0for emissive text. \u00A0However, I want to add support for text that is lit using environmental lighting. \u00A0So far, I have not been able to get the surface shaders to work correctly - I can make the text visible, but it behaves like some parameters are not updating correctly (not reacting to light intensity changes, reacting to shadows like the normal is pointed the wrong way).\n\u003C/p\u003E\n\u003Cp\u003E\nI assume it has to do with me adding a new transform to the model programmatically, and I haven\u0027t hooked something up correctly when I added the TextMesh. \u00A0Here\u0027s the code I use to set up the new object:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003ETransform textObjTransform = internalProp.FindModelTransform(transformName);\n\nTransform offsetTransform = new GameObject().transform;\noffsetTransform.gameObject.layer = textObjTransform.gameObject.layer;\noffsetTransform.SetParent(textObjTransform, false);\noffsetTransform.Translate(transformOffset.x, transformOffset.y, 0.0f);\ntextObj = offsetTransform.gameObject.AddComponent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;TextMesh\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n\nfont = JUtil.LoadOSFont(fontName, fontQuality, out destroyFontOnExit);\ntextObj.font = font;\n  \nRenderer r = textObj.GetComponent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Renderer\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\noverrideMaterial = new Material(JUtil.LoadInternalShader(\u0022RPM/JSILabel\u0022));\noverrideMaterial.mainTexture = font.material.mainTexture;\nr.material = overrideMaterial;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI\u0027m adding offsetTransform to allow the TextMesh to be displaced from the anchor transform.\n\u003C/p\u003E\n\u003Cp\u003E\nRPM/JSILabel is based on KSP Alpha / Transparent, which is one of Squad\u0027s customized Unity surface shaders. \u00A0I\u0027ve made changes to the shader to work with the TextMesh, but I don\u0027t think that\u0027s the problem, since if I write values to the output Emission field, it shows up just fine (but glowing). \u00A0If I use Squad\u0027s\u00A0diffuse lighting, the text is unresponsive to lights in the IVA. \u00A0Is there something else I need to do to get those values updated automatically? \u00A0Or am I not adding the text to the hierarchy correctly?\u00A0 Or do I need to update the shader values myself in OnUpdate? \u00A0If it\u0027s the latter, how do I find those values?\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-05-20T14:31:33Z","Content":"\n\u003Cp\u003E\nFrom what I found it seems TextMesh do not have any normals at all. Have a look at \u003Ca href=\u0022http://stackoverflow.com/questions/16228481/how-can-i-add-a-normal-to-a-text-mesh-so-that-it-lights-correctly\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E and see if it still work for U5\n\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2016-05-20T15:45:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222592500\u0022 data-ipsquote-contentid=\u0022140166\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221463754693\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFrom what I found it seems TextMesh do not have any normals at all. Have a look at \u003Ca href=\u0022http://stackoverflow.com/questions/16228481/how-can-i-add-a-normal-to-a-text-mesh-so-that-it-lights-correctly\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E and see if it still work for U5\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, they have no normals (they are abnormal? \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E ). \u00A0I am setting normals to (0, 0, 1) in the surface shader, which is what the KSP / Alpha Specular shader does.\n\u003C/p\u003E\n\u003Cp\u003E\nChanging the lighting in the IVA view (adjusting the brightness of the light sources) does not affect the color of the text that uses this shader - it\u0027s like the shader is not being run through all of the appropriate lighting/shadow passes, or the parameters used for the BlinnPhongSmooth surface shader (KSP\u0027s surface shader) aren\u0027t being set up.\n\u003C/p\u003E\n"},{"CreatedByName":"Van Disaster","CreatedById":58876,"CreatedDateTime":"2016-05-20T16:13:33Z","Content":"\n\u003Cp\u003E\nNot sure if it\u0027s anything to do with this in particular, but I\u0027ve found reference to a bug where normals get un-normalized somewhere between the shader surface function \u0026amp; the lighting function ( in my case I was trying to fix fireflies in a specular shader ). You might try a custom lighting function?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-20T16:13:54Z\u0022 title=\u002205/20/2016 04:13  PM\u0022 data-short=\u00228 yr\u0022\u003EMay 20, 2016\u003C/time\u003E by Van Disaster\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2016-05-20T23:50:41Z","Content":"\n\u003Cp\u003E\nDigging around some more and looking at the shader code that Unity spews, it looks like the missing normals in the mesh are the problem. \u00A0Some of the lighting is computed per-vertex, and apparently the surface shader\u0027s normals don\u0027t apply at that stage. \u00A0I\u0027ll have to see if I can add normals to the mesh, since i don\u0027t relish the thought of having to roll an entire shader for this if I don\u0027t have to.\n\u003C/p\u003E\n"}]}