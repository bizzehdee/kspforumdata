{"TopicId":120878,"ForumId":29,"TopicTitle":"ModuleAnimateGeneric disabling other animations.","CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2015-09-14T15:53:15Z","PageNum":1,"Articles":[{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2015-09-14T15:53:15Z","Content":"\n\u003Cp\u003EOk, I\u0027m confused. I\u0027ve written a plugin that will play an animation when an air intake is opened or closed. And it works great... until I add a second animation with the ModuleAnimateGeneric in the .cfg.\u003C/p\u003E\u003Cp\u003EIf I have no ModuleAnimateGeneric in my .cfg, my animation plays fine when the intake is toggled even though there are two clips on the part. It finds the right one.\u003C/p\u003E\u003Cp\u003EIf I add ModuleAnimateGeneric to the .cfg and set it to a clip other than the one for the intake, the intake will not animate UNTIL I toggle the clip assigned to ModuleAnimateGeneric. Once I toggle the ModuleAnimateGeneric, both it and the intake animations work as intended. \u003C/p\u003E\u003Cp\u003EIf I assign both animations to ModuleAnimateGeneric, they both play properly.\u003C/p\u003E\u003Cp\u003ESo obviously, ModuleAnimateGeneric is doing something that prevents my other animation from playing. Does anyone know if ModuleAnimateGeneric somehow disables all animations on a part until it\u0027s toggled and if so, how can I get around that? I\u0027ve tried setting the intake animation to enabled and that doesn\u0027t seem to work and I\u0027ve also tried disabling play automatically in Unity and that makes no difference.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-15T16:07:51Z\u0022 title=\u002209/15/2015 04:07  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 15, 2015\u003C/time\u003E by Fengist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2015-09-14T19:58:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fengist\u0022 data-cite=\u0022Fengist\u0022\u003E\u003Cdiv\u003EOk, I\u0027m confused. I\u0027ve written a plugin that will play an animation when an air intake is opened or closed. And it works great... until I add a second animation with the ModuleAnimateGeneric in the .cfg.\u003Cp\u003EIf I have no ModuleAnimateGeneric in my .cfg, my animation plays fine when the intake is toggled even though there are two clips on the part. It finds the right one.\u003C/p\u003E\u003Cp\u003EIf I add ModuleAnimateGeneric to the .cfg and set it to a clip other than the one for the intake, the intake will not animate UNTIL I toggle the clip assigned to ModuleAnimateGeneric. Once I toggle the ModuleAnimateGeneric, both it and the intake animations work as intended. \u003C/p\u003E\u003Cp\u003EIf I assign both animations to ModuleAnimateGeneric, they both play properly.\u003C/p\u003E\u003Cp\u003ESo obviously, ModuleAnimateGeneric is doing something that prevents my other animation from playing. Does anyone know if ModuleAnimateGeneric somehow disables all animations on a part until it\u0027s toggled and if so, how can I get around that? I\u0027ve tried setting the intake animation to enabled and that doesn\u0027t seem to work and I\u0027ve also tried disabling play automatically in Unity and that makes no difference.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s a bit hard to follow your issue. So you have an animation (clip?) that you animate via a plug-in and another animation (clip?) using moduleanimategeneric. Are they separate animations on separate parts?\u003C/p\u003E\u003Cp\u003EI have no issue running multiple animations at the same time in my mod. I do recall something flaky about moduleanimategeneric before.\u003C/p\u003E\u003Cp\u003EYou could look at \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/73142-Starwaster\u0022 rel=\u0022external nofollow\u0022\u003EStarwaster\u003C/a\u003E\u0027s \u003Ca href=\u0022https://github.com/Starwaster/LayeredAnimations/releases\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003Elayered animations\u003C/strong\u003E\u003C/a\u003E which layers multiple moduleanimategeneric\u0027s on a single part. Or ask him if he knows of this problem. Failing that you could try \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/24551-Firespitter-propeller-plane-and-helicopter-parts-v6-3-4-%28July-27th%29-for-KSP-0-24-2\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003Efirespitte\u003C/strong\u003Er\u003C/a\u003E\u0027s animation module which is much better (just the animation module, not the parts). Which can be re-distributed as part of your mod with appropriate license reference, etc.\u003C/p\u003E\u003Cp\u003EPerhaps that will help.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-14T20:02:41Z\u0022 title=\u002209/14/2015 08:02  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 14, 2015\u003C/time\u003E by JPLRepo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2015-09-14T22:17:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JPLRepo\u0022 data-cite=\u0022JPLRepo\u0022\u003E\u003Cdiv\u003EIt\u0027s a bit hard to follow your issue. So you have an animation (clip?) that you animate via a plug-in and another animation (clip?) using moduleanimategeneric. Are they separate animations on separate parts?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECorrect and they are on the same part. In unity I added an animation component to my part, created two animations, set the animation size to 2 and then put both animations on the one animation component. If I\u0027m not mistaken, that makes them two separate clips. In the code below I use getClip to choose which one the animation should play.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JPLRepo\u0022 data-cite=\u0022JPLRepo\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI have no issue running multiple animations at the same time in my mod. I do recall something flaky about moduleanimategeneric before.\u003C/p\u003E\u003Cp\u003EYou could look at \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/73142-Starwaster\u0022 rel=\u0022external nofollow\u0022\u003EStarwaster\u003C/a\u003E\u0027s \u003Ca href=\u0022https://github.com/Starwaster/LayeredAnimations/releases\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003Elayered animations\u003C/strong\u003E\u003C/a\u003E which layers multiple moduleanimategeneric\u0027s on a single part. Or ask him if he knows of this problem. Failing that you could try \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/24551-Firespitter-propeller-plane-and-helicopter-parts-v6-3-4-%28July-27th%29-for-KSP-0-24-2\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003Efirespitte\u003C/strong\u003Er\u003C/a\u003E\u0027s animation module which is much better (just the animation module, not the parts). Which can be re-distributed as part of your mod with appropriate license reference, etc.\u003C/p\u003E\u003Cp\u003EPerhaps that will help.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m already using firespitter\u0027s spin anyway. But what here\u0027s what I\u0027m attempting.\u003C/p\u003E\u003Cp\u003EI have two parts. One is an engine. I have a cover over that engine that I want to open and close based on throttle position and whether the engine is running or not. I have the MPanimEngine module on that part and it works perfect.\u003C/p\u003E\u003Cp\u003EThe other part is an intake. I want an animation to play when the intake is opened and to reverse the animation when it\u0027s closed. On the part with the intake, I have another animation that I want to run under ModuleAnimateGeneric. The MPanimEngine doesn\u0027t play the animation unless I toggle the AnimateGeneric. Then, it works fine.\u003C/p\u003E\u003Cp\u003EPerhaps if I show you all the details, that would help.\u003C/p\u003E\u003Cp\u003EHere\u0027s the config for the part with the intake.\u003C/p\u003E\u003Cp\u003E MODULE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = ModuleAnimateGeneric\u003C/p\u003E\u003Cp\u003E animationName = coverAnim \u003C/p\u003E\u003Cp\u003E startEventGUIName = Raise Cover\u003C/p\u003E\u003Cp\u003E endEventGUIName = Lower Cover\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E MODULE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name=MPanimEngine\u003C/p\u003E\u003Cp\u003E partType=Intake\u003C/p\u003E\u003Cp\u003E animationName = intakeAnim\u003C/p\u003E\u003Cp\u003E syncThrottle = false\u003C/p\u003E\u003Cp\u003E smoothThrottle = false\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003EAnd here\u0027s the code for the class MPanimEngine... keep in mind I\u0027m a total noob at C# and an \u0027old school\u0027 programmer.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    public class MPanimEngine : PartModule\u003Cbr\u003E    {\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string animationName = \u0022null\u0022;  //the name of the animation stored in the .cfg\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string partType = \u0022null\u0022;  //the type of part (Engine or Intake)\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool syncThrottle = false;  //is the animation synced to the throttle position\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool smoothThrottle = false; //should smoothing be used when the throttle position changes rapidly\u003Cbr\u003E\u003Cbr\u003E        public Animation aniEngine = null; //the animation\u003Cbr\u003E        private ModuleEngines myEngine = new ModuleEngines();  //the first or default engine found in the part\u003Cbr\u003E        private ModuleResourceIntake myIntake = new ModuleResourceIntake();   //the first or default Intake found in the part\u003Cbr\u003E        public float lastThrottle = 0;  //tracks the last throttle position. Always 0 or 1 for non sync\u0027d engines\u003Cbr\u003E        public bool faultFound = false;  //set to true if no engine or animation is found on the part so this can be bypassed.\u003Cbr\u003E\u003Cbr\u003E        public override void OnStart(StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            foreach (var anim in part.FindModelAnimators(animationName))\u003Cbr\u003E            {\u003Cbr\u003E                aniEngine = anim;\u003Cbr\u003E                print(\u0022[Maritime Pack] (aniEngine) Found animation: \u0022 \u002B animationName);\u003Cbr\u003E            }\u003Cbr\u003E            if (partType == \u0022Engine\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                myEngine = this.part.Modules.OfType\u0026lt;ModuleEngines\u0026gt;().FirstOrDefault();\u003Cbr\u003E            }\u003Cbr\u003E            if (partType == \u0022Intake\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                myIntake = this.part.Modules.OfType\u0026lt;ModuleResourceIntake\u0026gt;().FirstOrDefault();\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        public void FixedUpdate()\u003Cbr\u003E        {\u003Cbr\u003E            if (faultFound || FlightGlobals.ActiveVessel == null) { return; }\u003Cbr\u003E            if (aniEngine == null || myEngine == null \u0026amp;\u0026amp; myIntake == null || animationName == \u0022null\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                if (aniEngine == null)\u003Cbr\u003E                {\u003Cbr\u003E                    print(\u0022[Maritime Pack] (aniEngine) Animation not found.\u0022);\u003Cbr\u003E                }\u003Cbr\u003E                else\u003Cbr\u003E                {\u003Cbr\u003E                    print(\u0022[Maritime Pack] (aniEngine) \u0022\u002BpartType\u002B\u0022 not found.\u0022);\u003Cbr\u003E                }\u003Cbr\u003E                faultFound = true;\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                aniEngine.clip = aniEngine.GetClip(animationName);\u003Cbr\u003E                if ((partType == \u0022Engine\u0022 \u0026amp;\u0026amp; !myEngine.EngineIgnited) || (partType == \u0022Intake\u0022 \u0026amp;\u0026amp; !myIntake.intakeEnabled)) //Intake or Engine shut down, reverse animation\u003Cbr\u003E                {\u003Cbr\u003E                     if (lastThrottle != 0.0f)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (syncThrottle)\u003Cbr\u003E                        {\u003Cbr\u003E                            if (smoothThrottle)\u003Cbr\u003E                            {\u003Cbr\u003E                                lastThrottle = lastThrottle - 0.02f;\u003Cbr\u003E                                if (lastThrottle \u0026lt; 0.0f)\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = 0.0f;\u003Cbr\u003E                                }\u003Cbr\u003E                            }\u003Cbr\u003E                            else\u003Cbr\u003E                            {\u003Cbr\u003E                                lastThrottle = 0.0f;\u003Cbr\u003E                            }\u003Cbr\u003E                            foreach (AnimationState state in aniEngine)\u003Cbr\u003E                            {\u003Cbr\u003E                                state.normalizedTime = lastThrottle;\u003Cbr\u003E                                state.speed = 0.0f;\u003Cbr\u003E                            }\u003Cbr\u003E                        }\u003Cbr\u003E                        else\u003Cbr\u003E                        {\u003Cbr\u003E                            foreach (AnimationState state in aniEngine)\u003Cbr\u003E                            {\u003Cbr\u003E                                state.speed = -1.0f;\u003Cbr\u003E                                state.normalizedTime = 1.0f;\u003Cbr\u003E                                lastThrottle = 0.0f;\u003Cbr\u003E                            }\u003Cbr\u003E                        }\u003Cbr\u003E                        aniEngine.Play();\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E                else //engine ignited, run animation\u003Cbr\u003E                {\u003Cbr\u003E                    if (syncThrottle)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (smoothThrottle)\u003Cbr\u003E                        {\u003Cbr\u003E                            if (FlightInputHandler.state.mainThrottle \u0026gt; lastThrottle)\u003Cbr\u003E                            {\u003Cbr\u003E                                if (FlightInputHandler.state.mainThrottle \u002B lastThrottle \u0026gt; 0.02f)\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = lastThrottle \u002B 0.02f;\u003Cbr\u003E                                    if (lastThrottle \u0026gt; 1.0f)\u003Cbr\u003E                                    {\u003Cbr\u003E                                        lastThrottle = 1.0f;\u003Cbr\u003E                                    }\u003Cbr\u003E                                }\u003Cbr\u003E                                else\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = FlightInputHandler.state.mainThrottle;\u003Cbr\u003E                                }\u003Cbr\u003E                            }\u003Cbr\u003E                            if (FlightInputHandler.state.mainThrottle \u0026lt; lastThrottle)\u003Cbr\u003E                            {\u003Cbr\u003E                                if (lastThrottle - FlightInputHandler.state.mainThrottle \u0026gt; 0.02f || FlightInputHandler.state.mainThrottle == 0 \u0026amp;\u0026amp; lastThrottle != 0)\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = lastThrottle - 0.02f;\u003Cbr\u003E                                    if (lastThrottle \u0026lt; 0.0f)\u003Cbr\u003E                                    {\u003Cbr\u003E                                        lastThrottle = 0.0f;\u003Cbr\u003E                                    }\u003Cbr\u003E                                }\u003Cbr\u003E                                else\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = FlightInputHandler.state.mainThrottle;\u003Cbr\u003E                                }\u003Cbr\u003E                            }\u003Cbr\u003E                        }\u003Cbr\u003E                        foreach (AnimationState state in aniEngine)\u003Cbr\u003E                        {\u003Cbr\u003E                            state.speed = 0.0f;\u003Cbr\u003E                            state.normalizedTime = FlightInputHandler.state.mainThrottle;\u003Cbr\u003E                            if (smoothThrottle)\u003Cbr\u003E                            {\u003Cbr\u003E                                state.normalizedTime = lastThrottle;\u003Cbr\u003E                            }\u003Cbr\u003E                        }\u003Cbr\u003E                        aniEngine.Play();\u003Cbr\u003E                    }\u003Cbr\u003E                    else\u003Cbr\u003E                    {\u003Cbr\u003E                        if (!aniEngine.isPlaying \u0026amp;\u0026amp; lastThrottle != 1.0f)\u003Cbr\u003E                        {\u003Cbr\u003E                            foreach (AnimationState state in aniEngine)\u003Cbr\u003E                            {\u003Cbr\u003E                                if (state.time != 1.0f)\u003Cbr\u003E                                {\u003Cbr\u003E                                    state.speed = 1.0f;\u003Cbr\u003E                                    state.normalizedTime = 0.0f;\u003Cbr\u003E                                    aniEngine.Play();\u003Cbr\u003E                                    lastThrottle = 1.0f;\u003Cbr\u003E                                }\u003Cbr\u003E                            }\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E*edit\u003C/p\u003E\u003Cp\u003EWell, I sorta, but not completely, figured it out but don\u0027t get it.\u003C/p\u003E\u003Cp\u003EI have this line in the code if (!aniEngine.isPlaying \u0026amp;\u0026amp; lastThrottle != 1.0f). The if-then below that handles the animation if smoothing and sync to throttle is turned off. \u003C/p\u003E\u003Cp\u003EI put that in there to make sure that whenever the animation begins playing that it\u0027s allowed to finish before it resets the animation time back to 0. That way, if the user toggles the engine or intake, it\u0027s not half way through animating before suddenly resetting. I took the aniEngine.isPlaying out and now it works (but not quite perfectly) and I don\u0027t have to toggle the AnimateGeneric first. \u003C/p\u003E\u003Cp\u003EThat seems to indicate that ModuleAnimateGeneric initially sets the attached animation to play even though it\u0027s really not playing.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-14T22:41:33Z\u0022 title=\u002209/14/2015 10:41  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 14, 2015\u003C/time\u003E by Fengist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2015-09-14T23:46:26Z","Content":"\n\u003Cp\u003EWhy don\u0027t you just animate the cover in your partmodule?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[[COLOR=#2B91AF]KSPEvent[/COLOR](active = [COLOR=blue]false[/COLOR], guiActive = [COLOR=blue]true[/COLOR], guiActiveUnfocused = [COLOR=blue]true[/COLOR], guiActiveEditor = [COLOR=blue]true[/COLOR], unfocusedRange = 5f, name = [COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR], guiName = [COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR])]\u003Cbr\u003E        [COLOR=blue]public[/COLOR] [COLOR=blue]void[/COLOR] [COLOR=#3E3E3E]Raise_Cover[/COLOR]()\u003Cbr\u003E        {\u003Cbr\u003E            Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]false[/COLOR];             \u003Cbr\u003E            [COLOR=blue]try[/COLOR]\u003Cbr\u003E            {\u003Cbr\u003E                [COLOR=#2B91AF]Animation[/COLOR] anim;\u003Cbr\u003E                [COLOR=#2B91AF]Animation[/COLOR][] animators = [COLOR=blue]this[/COLOR].part.internalModel.FindModelAnimators([COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]coverAnim[/COLOR][COLOR=#A31515]\u0022[/COLOR]);\u003Cbr\u003E                [COLOR=blue]if[/COLOR] (animators.Length \u0026gt; 0)\u003Cbr\u003E                {\u003Cbr\u003E                    anim = animators[0];\u003Cbr\u003E                    anim[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]coverAnim[/COLOR][COLOR=#A31515]\u0022[/COLOR]].speed = [COLOR=#0000ff]1f[/COLOR];\u003Cbr\u003E                    anim[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]coverAnim[/COLOR][COLOR=#A31515]\u0022[/COLOR]].normalizedTime = 0;\u003Cbr\u003E                    anim.Play([COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]coverAnim[/COLOR][COLOR=#A31515]\u0022[/COLOR]);\u003Cbr\u003E                    Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Lower_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]true[/COLOR]; \u003Cbr\u003E                }                 \u003Cbr\u003E            }\u003Cbr\u003E            [COLOR=blue]catch[/COLOR] ([COLOR=#2B91AF]Exception[/COLOR] ex)\u003Cbr\u003E            {\u003Cbr\u003E                Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]true[/COLOR];                 \u003Cbr\u003E[COLOR=#2B91AF]                Debug[/COLOR].Log([COLOR=#A31515]\u0022Exception trying to run the Raise_Cover animation\u0022[/COLOR]);\u003Cbr\u003E                [COLOR=#2B91AF]Debug[/COLOR].Log([COLOR=#A31515]\u0022Err: \u0022[/COLOR] \u002B ex);\u003Cbr\u003E            }             \u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E[COLOR=black][[COLOR=#2b91af]KSPEvent[/COLOR](active = [COLOR=blue]false[/COLOR], guiActive = [COLOR=blue]true[/COLOR], guiActiveUnfocused = [COLOR=blue]true[/COLOR], guiActiveEditor = [COLOR=blue]true[/COLOR], unfocusedRange = 5f, name = [COLOR=#a31515]\u0022Lower_Cover\u0022[/COLOR], guiName = [COLOR=#a31515]\u0022Lower Cover\u0022[/COLOR])]\u003Cbr\u003E        [COLOR=blue]public[/COLOR] [COLOR=blue]void[/COLOR] Lower_Cover()\u003Cbr\u003E        {\u003Cbr\u003E            Events[[COLOR=#a31515]\u0022[/COLOR]Lower_Cover[COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]false[/COLOR];            \u003Cbr\u003E            [COLOR=blue]try[/COLOR]\u003Cbr\u003E            {\u003Cbr\u003E                [COLOR=#2b91af]Animation[/COLOR] anim;\u003Cbr\u003E                [COLOR=#2b91af]Animation[/COLOR][] animators = [COLOR=blue]this[/COLOR].part.internalModel.FindModelAnimators([COLOR=#a31515]\u0022[/COLOR][COLOR=#3E3E3E][FONT=Verdana]coverAnim[/FONT][/COLOR][COLOR=#a31515]\u0022[/COLOR]);\u003Cbr\u003E                [COLOR=blue]if[/COLOR] (animators.Length \u0026gt; 0)\u003Cbr\u003E                {\u003Cbr\u003E                    anim = animators[0];\u003Cbr\u003E                    anim[[COLOR=#a31515]\u0022[/COLOR][COLOR=#3E3E3E][FONT=Verdana]coverAnim[/FONT][/COLOR][COLOR=#a31515]\u0022[/COLOR]].speed = [/COLOR][COLOR=#0000ff]-1f[/COLOR][COLOR=#000000];\u003Cbr\u003E                    anim[[/COLOR][COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E][FONT=Verdana]coverAnim[/FONT][/COLOR][COLOR=#A31515]\u0022[/COLOR][COLOR=#000000]].normalizedTime = 1;\u003Cbr\u003E                    anim.Play([/COLOR][COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E][FONT=Verdana]coverAnim[/FONT][/COLOR][COLOR=#A31515]\u0022[/COLOR][COLOR=#000000]);\u003Cbr\u003E[/COLOR]                    Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]true[/COLOR]; \u003Cbr\u003E[COLOR=#000000]                }\u003Cbr\u003E            }\u003Cbr\u003E            [/COLOR][COLOR=blue]catch[/COLOR][COLOR=#000000] ([/COLOR][COLOR=#2B91AF]Exception[/COLOR][COLOR=#000000] ex)\u003Cbr\u003E            {\u003Cbr\u003E                [/COLOR]Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Lower_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]true[/COLOR]; [COLOR=#000000]              \u003Cbr\u003E[/COLOR][COLOR=#2B91AF]                Debug[/COLOR][COLOR=#000000].Log([/COLOR][COLOR=#A31515]\u0022Exception trying to run the Lower_Cover animation\u0022[/COLOR][COLOR=#000000]);\u003Cbr\u003E                [/COLOR][COLOR=#2B91AF]Debug[/COLOR][COLOR=#000000].Log([/COLOR][COLOR=#A31515]\u0022Err: \u0022[/COLOR][COLOR=#000000] \u002B ex);\u003Cbr\u003E            }            \u003Cbr\u003E        }\u003Cbr\u003E[/COLOR]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI just hand typed this code.. so it may have a bug or two.. anyway, KSPEvent\u0027s allow you to have part right click events to animate the cover.. which I assume is the only reason you are using moduleanimategeneric.\u003C/p\u003E\u003Cp\u003EIF you add this to your partmodule you don\u0027t need moduleanimategeneric in your config any more. Just keep the MPanimEngine and add the above to that partmodule code.\u003C/p\u003E\u003Cp\u003EEDIT: I added a couple of lines to the code, you have to enable the opposite event - so when Raise_Cover runs you must turn the Lower_Cover event on and vice versa.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-15T05:09:23Z\u0022 title=\u002209/15/2015 05:09  AM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 15, 2015\u003C/time\u003E by JPLRepo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2015-09-15T14:01:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JPLRepo\u0022 data-cite=\u0022JPLRepo\u0022\u003E\u003Cdiv\u003EWhy don\u0027t you just animate the cover in your partmodule?\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[[COLOR=#2B91AF]KSPEvent[/COLOR](active = [COLOR=blue]false[/COLOR], guiActive = [COLOR=blue]true[/COLOR], guiActiveUnfocused = [COLOR=blue]true[/COLOR], guiActiveEditor = [COLOR=blue]true[/COLOR], unfocusedRange = 5f, name = [COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR], guiName = [COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR])]\u003Cbr\u003E        [COLOR=blue]public[/COLOR] [COLOR=blue]void[/COLOR] [COLOR=#3E3E3E]Raise_Cover[/COLOR]()\u003Cbr\u003E        {\u003Cbr\u003E            Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]false[/COLOR];             \u003Cbr\u003E            [COLOR=blue]try[/COLOR]\u003Cbr\u003E            {\u003Cbr\u003E                [COLOR=#2B91AF]Animation[/COLOR] anim;\u003Cbr\u003E                [COLOR=#2B91AF]Animation[/COLOR][] animators = [COLOR=blue]this[/COLOR].part.internalModel.FindModelAnimators([COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]coverAnim[/COLOR][COLOR=#A31515]\u0022[/COLOR]);\u003Cbr\u003E                [COLOR=blue]if[/COLOR] (animators.Length \u0026gt; 0)\u003Cbr\u003E                {\u003Cbr\u003E                    anim = animators[0];\u003Cbr\u003E                    anim[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]coverAnim[/COLOR][COLOR=#A31515]\u0022[/COLOR]].speed = [COLOR=#0000ff]1f[/COLOR];\u003Cbr\u003E                    anim[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]coverAnim[/COLOR][COLOR=#A31515]\u0022[/COLOR]].normalizedTime = 0;\u003Cbr\u003E                    anim.Play([COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]coverAnim[/COLOR][COLOR=#A31515]\u0022[/COLOR]);\u003Cbr\u003E                    Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Lower_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]true[/COLOR]; \u003Cbr\u003E                }                 \u003Cbr\u003E            }\u003Cbr\u003E            [COLOR=blue]catch[/COLOR] ([COLOR=#2B91AF]Exception[/COLOR] ex)\u003Cbr\u003E            {\u003Cbr\u003E                Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]true[/COLOR];                 \u003Cbr\u003E[COLOR=#2B91AF]                Debug[/COLOR].Log([COLOR=#A31515]\u0022Exception trying to run the Raise_Cover animation\u0022[/COLOR]);\u003Cbr\u003E                [COLOR=#2B91AF]Debug[/COLOR].Log([COLOR=#A31515]\u0022Err: \u0022[/COLOR] \u002B ex);\u003Cbr\u003E            }             \u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E[COLOR=black][[COLOR=#2b91af]KSPEvent[/COLOR](active = [COLOR=blue]false[/COLOR], guiActive = [COLOR=blue]true[/COLOR], guiActiveUnfocused = [COLOR=blue]true[/COLOR], guiActiveEditor = [COLOR=blue]true[/COLOR], unfocusedRange = 5f, name = [COLOR=#a31515]\u0022Lower_Cover\u0022[/COLOR], guiName = [COLOR=#a31515]\u0022Lower Cover\u0022[/COLOR])]\u003Cbr\u003E        [COLOR=blue]public[/COLOR] [COLOR=blue]void[/COLOR] Lower_Cover()\u003Cbr\u003E        {\u003Cbr\u003E            Events[[COLOR=#a31515]\u0022[/COLOR]Lower_Cover[COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]false[/COLOR];            \u003Cbr\u003E            [COLOR=blue]try[/COLOR]\u003Cbr\u003E            {\u003Cbr\u003E                [COLOR=#2b91af]Animation[/COLOR] anim;\u003Cbr\u003E                [COLOR=#2b91af]Animation[/COLOR][] animators = [COLOR=blue]this[/COLOR].part.internalModel.FindModelAnimators([COLOR=#a31515]\u0022[/COLOR][COLOR=#3E3E3E][FONT=Verdana]coverAnim[/FONT][/COLOR][COLOR=#a31515]\u0022[/COLOR]);\u003Cbr\u003E                [COLOR=blue]if[/COLOR] (animators.Length \u0026gt; 0)\u003Cbr\u003E                {\u003Cbr\u003E                    anim = animators[0];\u003Cbr\u003E                    anim[[COLOR=#a31515]\u0022[/COLOR][COLOR=#3E3E3E][FONT=Verdana]coverAnim[/FONT][/COLOR][COLOR=#a31515]\u0022[/COLOR]].speed = [/COLOR][COLOR=#0000ff]-1f[/COLOR][COLOR=#000000];\u003Cbr\u003E                    anim[[/COLOR][COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E][FONT=Verdana]coverAnim[/FONT][/COLOR][COLOR=#A31515]\u0022[/COLOR][COLOR=#000000]].normalizedTime = 1;\u003Cbr\u003E                    anim.Play([/COLOR][COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E][FONT=Verdana]coverAnim[/FONT][/COLOR][COLOR=#A31515]\u0022[/COLOR][COLOR=#000000]);\u003Cbr\u003E[/COLOR]                    Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Raise_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]true[/COLOR]; \u003Cbr\u003E[COLOR=#000000]                }\u003Cbr\u003E            }\u003Cbr\u003E            [/COLOR][COLOR=blue]catch[/COLOR][COLOR=#000000] ([/COLOR][COLOR=#2B91AF]Exception[/COLOR][COLOR=#000000] ex)\u003Cbr\u003E            {\u003Cbr\u003E                [/COLOR]Events[[COLOR=#A31515]\u0022[/COLOR][COLOR=#3E3E3E]Lower_Cover[/COLOR][COLOR=#A31515]\u0022[/COLOR]].active = [COLOR=blue]true[/COLOR]; [COLOR=#000000]              \u003Cbr\u003E[/COLOR][COLOR=#2B91AF]                Debug[/COLOR][COLOR=#000000].Log([/COLOR][COLOR=#A31515]\u0022Exception trying to run the Lower_Cover animation\u0022[/COLOR][COLOR=#000000]);\u003Cbr\u003E                [/COLOR][COLOR=#2B91AF]Debug[/COLOR][COLOR=#000000].Log([/COLOR][COLOR=#A31515]\u0022Err: \u0022[/COLOR][COLOR=#000000] \u002B ex);\u003Cbr\u003E            }            \u003Cbr\u003E        }\u003Cbr\u003E[/COLOR]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI just hand typed this code.. so it may have a bug or two.. anyway, KSPEvent\u0027s allow you to have part right click events to animate the cover.. which I assume is the only reason you are using moduleanimategeneric.\u003C/p\u003E\u003Cp\u003EIF you add this to your partmodule you don\u0027t need moduleanimategeneric in your config any more. Just keep the MPanimEngine and add the above to that partmodule code.\u003C/p\u003E\u003Cp\u003EEDIT: I added a couple of lines to the code, you have to enable the opposite event - so when Raise_Cover runs you must turn the Lower_Cover event on and vice versa.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks JP, while this code didn\u0027t work (it didn\u0027t show it in the GUI) it did put me on the right track to solving another issue with my code. I\u0027m still learning and I apparently misunderstand how animations and clips work. My code works great if there\u0027s just one animation on the part (I also figured out how to get ModuleAnimateGeneric to work with it, I count the number of clips and if it\u0027s \u0026gt; 1 then I do a Stop() to all animations which seems to work, so yes, ModuleAnimateGeneric plays the animation without even moving it.). When there\u0027s 2 or more animations, it gets a bit confused as I\u0027m playing and setting states for the entire animation, not just the specific clip.\u003C/p\u003E\u003Cp\u003EAlso, I\u0027m hoping to keep this rather generic rather than hard coding in animation names so that others can use it once it\u0027s done. I am going to work with your code tho and try to get all that straightened out. Thank you.\u003C/p\u003E\u003Cp\u003E*edit\u003C/p\u003E\u003Cp\u003EOk, rewrote most of my class and I got it working with your code. The only bug I found (other than the GUI not showing up which I didn\u0027t attempt to fix) is I had to change this.part.internalModel.FindModelAnimators to this.part.FindModelAnimators. The internalModel for some reason gave null refs.\u003C/p\u003E\u003Cp\u003ESo, it\u0027s now working but, like my code it\u0027s apparently setting the state and speed for the entire animation an not just a specific clip. This is a problem when two animations attempt to play at the same time or I manually set the state.time, both clips are affected.\u003C/p\u003E\u003Cp\u003EHere\u0027s the updated code\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    public class MPanimEngine : PartModule\u003Cbr\u003E    {\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string animationName = \u0022null\u0022;  //the name of the animation stored in the .cfg\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string partType = \u0022null\u0022;  //the part type that it\u0027s connected to (Engine / Intake)\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool syncThrottle = false;  //is the animation synced to the throttle position\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool smoothThrottle = false; //should smoothing be used when the throttle position changes rapidly\u003Cbr\u003E\u003Cbr\u003E        public Animation aniEngine = null; //the animation\u003Cbr\u003E        private ModuleEngines myEngine = new ModuleEngines();  //the first or default engine found in the part\u003Cbr\u003E        private ModuleResourceIntake myIntake = new ModuleResourceIntake();\u003Cbr\u003E        public float lastThrottle = 0;  //tracks the last throttle position. Always 0 or 1 for non sync\u0027d engines\u003Cbr\u003E        public bool faultFound = false;  //set to true if no engine or animation is found on the part\u003Cbr\u003E        public string oldClip = \u0022null\u0022;\u003Cbr\u003E\u003Cbr\u003E        public void Play_Anim(string aname, float aspeed, float atime)\u003Cbr\u003E        {\u003Cbr\u003E            try\u003Cbr\u003E            {\u003Cbr\u003E                Animation anim;\u003Cbr\u003E                Animation[] animators = this.part.FindModelAnimators(aname);\u003Cbr\u003E                if (animators.Length \u0026gt; 0)\u003Cbr\u003E                {\u003Cbr\u003E                    anim = animators[0];\u003Cbr\u003E                    anim[aname].speed = aspeed;\u003Cbr\u003E                    anim[aname].normalizedTime = atime;\u003Cbr\u003E                    anim.Play(aname);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            catch (Exception ex)\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022[Maritime Pack]Exception in Play_Anim\u0022);\u003Cbr\u003E                Debug.Log(\u0022[Maritime Pack]Err: \u0022 \u002B ex);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        public override void OnStart(StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            foreach (var anim in part.FindModelAnimators(animationName))\u003Cbr\u003E            {\u003Cbr\u003E                aniEngine = anim;\u003Cbr\u003E                if (aniEngine.GetClipCount() \u0026gt; 1)\u003Cbr\u003E                {\u003Cbr\u003E                    aniEngine.Stop(); //stopping any animations loaded by ModuleAnimateGeneric\u003Cbr\u003E                }\u003Cbr\u003E                print(\u0022[Maritime Pack] (aniEngine) Found animation: \u0022 \u002B animationName);\u003Cbr\u003E            }\u003Cbr\u003E            if (partType == \u0022Engine\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                myEngine = this.part.Modules.OfType\u0026lt;ModuleEngines\u0026gt;().FirstOrDefault();\u003Cbr\u003E            }\u003Cbr\u003E            if (partType == \u0022Intake\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                myIntake = this.part.Modules.OfType\u0026lt;ModuleResourceIntake\u0026gt;().FirstOrDefault();\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        public void FixedUpdate()\u003Cbr\u003E        {\u003Cbr\u003E            if (faultFound || FlightGlobals.ActiveVessel == null) { return; }\u003Cbr\u003E            if (myEngine == null \u0026amp;\u0026amp; myIntake == null || animationName == \u0022null\u0022)\u003Cbr\u003E            {\u003Cbr\u003E                if (aniEngine == null)\u003Cbr\u003E                {\u003Cbr\u003E                    print(\u0022[Maritime Pack] (aniEngine) Animation not found.\u0022);\u003Cbr\u003E                }\u003Cbr\u003E                else\u003Cbr\u003E                {\u003Cbr\u003E                    print(\u0022[Maritime Pack] (aniEngine) \u0022\u002BpartType\u002B\u0022 not found.\u0022);\u003Cbr\u003E                }\u003Cbr\u003E                faultFound = true;\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                if ((partType == \u0022Engine\u0022 \u0026amp;\u0026amp; !myEngine.EngineIgnited) || (partType == \u0022Intake\u0022 \u0026amp;\u0026amp; !myIntake.intakeEnabled)) //Intake or Engine shut down, reverse animation\u003Cbr\u003E                {\u003Cbr\u003E                     if (lastThrottle != 0.0f)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (syncThrottle)\u003Cbr\u003E                        {\u003Cbr\u003E                            if (smoothThrottle)\u003Cbr\u003E                            {\u003Cbr\u003E                                lastThrottle = lastThrottle - 0.02f;\u003Cbr\u003E                                if (lastThrottle \u0026lt; 0.0f)\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = 0.0f;\u003Cbr\u003E                                }\u003Cbr\u003E                            }\u003Cbr\u003E                            else\u003Cbr\u003E                            {\u003Cbr\u003E                                lastThrottle = 0.0f;\u003Cbr\u003E                            }\u003Cbr\u003E                            Play_Anim(animationName, 0.0f, lastThrottle);\u003Cbr\u003E                        }\u003Cbr\u003E                        else //not synced to play at full speed from the end to the beginning\u003Cbr\u003E                        {\u003Cbr\u003E                            Play_Anim(animationName, -1.0f, 1.0f);\u003Cbr\u003E                            lastThrottle = 0.0f;\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E                else //engine ignited, run animation\u003Cbr\u003E                {\u003Cbr\u003E                    if (syncThrottle)\u003Cbr\u003E                    {\u003Cbr\u003E                        if (smoothThrottle)\u003Cbr\u003E                        {\u003Cbr\u003E                            if (FlightInputHandler.state.mainThrottle \u0026gt; lastThrottle)\u003Cbr\u003E                            {\u003Cbr\u003E                                if (FlightInputHandler.state.mainThrottle \u002B lastThrottle \u0026gt; 0.02f)\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = lastThrottle \u002B 0.02f;\u003Cbr\u003E                                    if (lastThrottle \u0026gt; 1.0f)\u003Cbr\u003E                                    {\u003Cbr\u003E                                        lastThrottle = 1.0f;\u003Cbr\u003E                                    }\u003Cbr\u003E                                }\u003Cbr\u003E                                else\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = FlightInputHandler.state.mainThrottle;\u003Cbr\u003E                                }\u003Cbr\u003E                            }\u003Cbr\u003E                            if (FlightInputHandler.state.mainThrottle \u0026lt; lastThrottle)\u003Cbr\u003E                            {\u003Cbr\u003E                                if (lastThrottle - FlightInputHandler.state.mainThrottle \u0026gt; 0.02f || FlightInputHandler.state.mainThrottle == 0 \u0026amp;\u0026amp; lastThrottle != 0)\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = lastThrottle - 0.02f;\u003Cbr\u003E                                    if (lastThrottle \u0026lt; 0.0f)\u003Cbr\u003E                                    {\u003Cbr\u003E                                        lastThrottle = 0.0f;\u003Cbr\u003E                                    }\u003Cbr\u003E                                }\u003Cbr\u003E                                else\u003Cbr\u003E                                {\u003Cbr\u003E                                    lastThrottle = FlightInputHandler.state.mainThrottle;\u003Cbr\u003E                                }\u003Cbr\u003E                            }\u003Cbr\u003E                            Play_Anim(animationName, 0.0f, lastThrottle);\u003Cbr\u003E                        }\u003Cbr\u003E                        else\u003Cbr\u003E                        {\u003Cbr\u003E                            Play_Anim(animationName, 0.0f, FlightInputHandler.state.mainThrottle);\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                    else //not synced so play at full speed from the beginning\u003Cbr\u003E                    {\u003Cbr\u003E                        if (!aniEngine.isPlaying \u0026amp;\u0026amp; lastThrottle != 1.0f)\u003Cbr\u003E                        {\u003Cbr\u003E                            Play_Anim(animationName,1.0f,0.0f);\u003Cbr\u003E                            lastThrottle = 1.0f;\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E*another edit\u003C/p\u003E\u003Cp\u003EOk, I got it all working as it should with ModuleAnimateGeneric but I had to essentially avoid the problem rather than fixing it.\u003C/p\u003E\u003Cp\u003EOrignally, on my root node in the Unity Editor I had one animation with two clips. Since you can\u0027t add 2 animations to one node, that seemed like a logical solution. Unfortunately, controlling the time and speed of multiple clips on one animation was becoming a major headache. So...\u003C/p\u003E\u003Cp\u003EI deleted the one on the root node and created a new one on the node that contains the \u0027cover\u0027 and another animation on the node that contains the \u0027intake\u0027 Now, each animation has one clip and... the code above works with ModuleAnimateGeneric and the two animations can run simultaneously without getting \u0027confused.\u0027 It feels like cheating but, it works and I\u0027m NOT going to complain.\u003C/p\u003E\u003Cp\u003EThanks again JP, you put me on the right track and... gave me a much nicer method of animating those parts.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-15T16:09:41Z\u0022 title=\u002209/15/2015 04:09  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 15, 2015\u003C/time\u003E by Fengist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2015-09-15T18:53:09Z","Content":"\n\u003Cp\u003ENo Probs. Sorry I was thinking internalmodel. Yes your change to \u003Cspan style=\u0022color:#333333;\u0022\u003Ethis.part.FindModelAnimators would be correct. Internalmodel would be if animating the internal IVA model which is what I have been doing a lot of lately. Also I put \u003C/span\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Eactive = \u003C/span\u003E\u003C/em\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#0000FF;\u0022\u003Efalse\u003C/span\u003E\u003C/em\u003E\u003Cem\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E in the KPSEvent, which is why they didn\u0027t appear in the menu. you should make at least one of them true for it to appear (so raisecover if the part starts with the cover closed).\u003C/span\u003E\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EI put the KSPEvent code there because I thought you wanted the cover player controlled which is what KSPEvent\u0027s allow (by adding to the part right click menu).\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003ETold you it probably had a few bugs. \u003C/span\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EAs for multiple clips on one animation. I have done this and it works just fine. AS well as changing the speed. So not sure why you couldn\u0027t get that to work.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Ethe Anim array will have each clip in it. anim [0] = the first clip. anim[1] the second clip and so on.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EAnyway, as long as you have it working now that\u0027s great! well done! \u003C/span\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-15T19:02:27Z\u0022 title=\u002209/15/2015 07:02  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 15, 2015\u003C/time\u003E by JPLRepo\u003C/strong\u003E\n\u003C/span\u003E\n"}]}