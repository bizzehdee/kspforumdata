{"TopicId":98030,"ForumId":29,"TopicTitle":"Out of game utility to read cfg files in GameData folder?","CreatedByName":"HariSeldonPlan","CreatedById":136854,"CreatedDateTime":"2015-01-28T02:13:25Z","PageNum":1,"Articles":[{"CreatedByName":"HariSeldonPlan","CreatedById":136854,"CreatedDateTime":"2015-01-28T02:13:25Z","Content":"\n\u003Cp\u003EHello All. I am looking for some feedback on an idea for an out of game utility. (\u003Cem\u003Efull disclosure, this is a cross post from \u003C/em\u003E\u003Ca href=\u0022http://www.reddit.com/r/KerbalSpaceProgram/comments/2tomz1/modutility_idea_static_analysis_of_gamedata_cfg/\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cem\u003Ereddit\u003C/em\u003E\u003C/a\u003E\u003Cem\u003E, but it has gotten buried in tons of other awesome posts, and may be better suited for this forum anyway\u003C/em\u003E).\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:sans-serif;\u0022\u003E\u003Cspan style=\u0022color:#000000;\u0022\u003EI am interested in something with the capabilities of ModuleManager, but outside the game. Essentially I\u0027d like to be able to read in all of the .cfg files in the GameData directory and process their contents to gather information. I thought it might be interesting to see, for example, a listing of all parts and their module properties, or all currently configured resource types, or parts currently configured within a particular tech tree node, etc...\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:sans-serif;\u0022\u003E\u003Cspan style=\u0022color:#000000;\u0022\u003EI think this may have some uses for modders as a sort of static analysis/checking tool for ModuleManager configs. I can also see this capability driving something for more hardcore mod users to tweak parts to their liking with a personal ModuleManager cfg file.\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:sans-serif;\u0022\u003E\u003Cspan style=\u0022color:#000000;\u0022\u003EI have some skills to code this up myself, but I wanted to see if anyone out there knew if something like this actually exists. Also is this something you might find useful?\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:sans-serif;\u0022\u003E\u003Cspan style=\u0022color:#000000;\u0022\u003EThanks!\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-01-28T12:23:58Z","Content":"\n\u003Cp\u003EThis should do what you want : \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/101234-API-Open-Node-Parser\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/101234-API-Open-Node-Parser\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"HariSeldonPlan","CreatedById":136854,"CreatedDateTime":"2015-01-29T01:49:58Z","Content":"\n\u003Cp\u003Ethanks for the reply... I\u0027ll take a look at the code.\u003C/p\u003E\n"},{"CreatedByName":"neamerjell","CreatedById":86054,"CreatedDateTime":"2015-01-31T06:18:49Z","Content":"\n\u003Cp\u003EIt is uncanny that I have been working on just such a thing... I wrote mine in Python 3. I\u0027m having problems with it not writing the last 13 records to the csv file even though it is definitely reading and parsing the data from those files according to the messages I wrote to the console.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eimport os\u003Cbr\u003E\u003Cbr\u003Estartpath = \u0027C:\\Program Files (x86)\\Steam\\SteamApps\\common\\Kerbal Space Program\\GameData\u0027\u003Cbr\u003Eoutpath = \u0022C:\\\\Users\\\\Jeremy\\\\Desktop\\\\partlist.csv\u0022\u003Cbr\u003E\u003Cbr\u003Edatain = \u0027\u0027\u003Cbr\u003Etitle = \u0027\u0027\u003Cbr\u003Efullpath = \u0027\u0027\u003Cbr\u003Epartpath = \u0027\u0027\u003Cbr\u003Emodname = \u0027\u0027\u003Cbr\u003Eidx = 0\u003Cbr\u003Efilecount = 0\u003Cbr\u003Ereadcount = 0\u003Cbr\u003Epartcount = 0\u003Cbr\u003Estrout = \u0027\u0027\u003Cbr\u003E\u003Cbr\u003Ef = open(outpath, \u0027w\u0027)\u003Cbr\u003E\u003Cbr\u003E#column headers\u003Cbr\u003Ef.write(\u0027PART COUNT,TITLE,MOD NAME,PATH\\n\u0027)\u003Cbr\u003E\u003Cbr\u003E#Apparently this function that automatically handles the recursion through the file system (SWEET!), found it using Google\u003Cbr\u003Efor root, dirs, files in os.walk(startpath):\u003Cbr\u003E\u003Cbr\u003E    for name in files:\u003Cbr\u003E        filecount \u002B= 1\u003Cbr\u003E\u003Cbr\u003E        #If the filename ends in \u0022.cfg\u0022 then open it\u003Cbr\u003E        #something in Crowd Sourced Science mod files creates errors, and this is not a part mod anyway, so just skip it\u003Cbr\u003E        if name.find(\u0022.cfg\u0022) != -1:\u003Cbr\u003E            fullpath = os.path.join(root, name)\u003Cbr\u003E\u003Cbr\u003E            if fullpath.find(\u0027CrowdSourcedScience\u0027) == -1:\u003Cbr\u003E                i = open(fullpath, \u0027r\u0027)\u003Cbr\u003E                datain = i.read()\u003Cbr\u003E                readcount \u002B= 1\u003Cbr\u003E                i.close            \u003Cbr\u003E\u003Cbr\u003E            #make sure it is actually a part file because not all .cfg files are part files\u003Cbr\u003E            if datain.find(\u0022PART\\n{\u0022) != -1:\u003Cbr\u003E\u003Cbr\u003E                #since outputting to a CSV, commas will screw everthing up, replace them with underscores\u003Cbr\u003E                #Prime example: \u0022Advanced S.A.S Module, Large\u0022\u003Cbr\u003E                datain = datain.replace(\u0022,\u0022, \u0022_\u0022)\u003Cbr\u003E\u003Cbr\u003E                idx = datain.find(\u0027title = \u0027)\u003Cbr\u003E                if idx != -1:\u003Cbr\u003E                    title = datain[idx \u002B 8:datain.find(\u0022\\n\u0022, idx \u002B 8)]\u003Cbr\u003E                #endif \u0027title = \u0027 found    \u003Cbr\u003E\u003Cbr\u003E                #Create a path starting at \u0022GameData\\...\u0022\u003Cbr\u003E                modname = fullpath[76:fullpath.find(\u0022\\\\\u0022, 76, len(fullpath))]\u003Cbr\u003E                partcount \u002B= 1\u003Cbr\u003E\u003Cbr\u003E                #This fixed my earlier problem: it was not writing the last 13 or so records\u003Cbr\u003E                #so I stored everything to a variable and then wrote the variable once\u003Cbr\u003E                #This confirms my earlier suspicion that the write routine was bogging down somehow\u003Cbr\u003E                strout \u002B= str(partcount) \u002B \u0027,\u0027 \u002B title \u002B \u0027,\u0027 \u002B modname \u002B \u0027,\u0027 \u002B fullpath \u002B \u0027\\n\u0027\u003Cbr\u003E\u003Cbr\u003E                #This works perfectly, go figure\u003Cbr\u003E                print(str(partcount) \u002B \u0027,\u0027 \u002B title \u002B \u0027,\u0027 \u002B modname \u002B \u0027,\u0027 \u002B fullpath)\u003Cbr\u003E\u003Cbr\u003E                datain = None\u003Cbr\u003E\u003Cbr\u003E            #endif datain.find(\u0022PART\\n{\u0022) != -1\u003Cbr\u003E\u003Cbr\u003E        #endif name.find(\u0022.cfg\u0022) != -1\u003Cbr\u003E\u003Cbr\u003E    #next (for name in files)\u003Cbr\u003E\u003Cbr\u003E#next (for root, dirs, files in os.walk(startpath))\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Ef.write(strout)\u003Cbr\u003Ef.close\u003Cbr\u003Eprint(\u0027File Count:\u0027 \u002B str(filecount) \u002B \u0027\\n\u0027) # 14231\u003Cbr\u003Eprint(\u0027Read Count:\u0027 \u002B str(readcount) \u002B \u0027\\n\u0027) # 1595\u003Cbr\u003Eprint(\u0027Part Count:\u0027 \u002B str(partcount) \u002B \u0027\\n\u0027) # console displays 983, only 969 written to csv...\u003Cbr\u003Eprint(\u0022Done.\u0022)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI thought maybe the call to the os file management routines might have gotten out of sync or something, but every record is just right until just before the end of the list. I also thought maybe the program was closing the file before a write queue was finished.\u003C/p\u003E\u003Cp\u003EEDIT: I fixed it! At least the initial test makes me think so. I stored all the stuff to a variable and wrote the variable in one shot rather than continuously writing to the file (which I suspected was bogging down somehow). I have installed a few mods since I started so the actual count is more like 989 but the count and the number of records in the csv match this time!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-31T17:53:06Z\u0022 title=\u002201/31/2015 05:53  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 31, 2015\u003C/time\u003E by neamerjell\u003C/strong\u003E\n\u003Cbr\u003EI fixed it! (at least I think so based on preliminary tests)\n\u003C/span\u003E\n"}]}