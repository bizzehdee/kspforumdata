{"TopicId":128537,"ForumId":29,"TopicTitle":"onPartDie","CreatedByName":"kimiko","CreatedById":112505,"CreatedDateTime":"2015-12-24T01:48:44Z","PageNum":1,"Articles":[{"CreatedByName":"kimiko","CreatedById":112505,"CreatedDateTime":"2015-12-24T01:48:44Z","Content":"\n\u003Cp\u003E\nGreetings!\n\u003C/p\u003E\n\u003Cp\u003E\nI am trying to have a part, within a partmodule, detect when another part (directly) connected on either side (parent or children) is destroyed. I can\u0027t for my life make it work. I tried using IDs (craftID, flightID etc.) but with no luck, and I couldn\u0027t find any information on other unique part identifiers. Initially I thought it would work something like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint\u0022\u003E\n        private void onPartDie(Part p)\n        {\n           if (p == this.part.parent)\n           {\n               //Do stuff\n           }\n           foreach (Part cp in this.part.children)\n           {\n               if (p == cp)\n               {\n\t\t\t//Do stuff\n               }\n           }\n        }\u003C/pre\u003E\n\u003Cp\u003E\n... But, alas.. Any help would be appreciated! : D\n\u003C/p\u003E\n\u003Cp\u003E\nOf course I could probably assign identifiers myself, but I\u0027d think something like that already existed, no?\n\u003C/p\u003E\n\u003Cp\u003E\n(also any tip on how to efficiently looping through directly connected (on step down the hierarchy) child-parts would also be nice!)\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-12-24T02:16:39Z","Content":"\n\u003Cp\u003E\nHow is it failing? Are you receiving a callback to that function from the GameEvent when a part is destroyed? Is it failing to recognise a dying part as the parent/child?...\n\u003C/p\u003E\n\u003Cp\u003E\nPresuming that it is the latter since it seems rather likely if the joints are already removed, you can try caching the connected parts during OnStart and comparing the destroyed part against that list which is then independent of whether a part is still connected (the cache will need to be refreshed for events which create and destroy joints (docking, joint break, etc.))\n\u003C/p\u003E\n"},{"CreatedByName":"kimiko","CreatedById":112505,"CreatedDateTime":"2015-12-24T21:22:50Z","Content":"\n\u003Cp\u003E\nIt seems that the issue was as you suggested, the part was removed before the it was able to compare it! Thanks a lot! : D\n\u003C/p\u003E\n\u003Cp\u003E\nNow I just have to find a smooth way of refreshing the cache, as you said, without making it too taxing on the system.\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2015-12-25T11:12:18Z","Content":"\n\u003Cp\u003E\nIs your class a new subclass of part, or of partmodule, because we\u0027re mixing the two a bit here...\n\u003C/p\u003E\n\u003Cp\u003E\nNow, I\u0027m talking without trying and haven\u0027t done my own plugin in a year or so, so I could be wrong about some of this... but... the problems I see are... \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIf you\u0027re subclassing part and trying to override onPartDie...\u00A0 it\u0027s called\u00A0inside the part that is doing the dying, not any other part. \u00A0So you\u0027d actually need to tell the parent and children how to recognize that they\u0027re the parts in question and THEY would take action or communicate that they were dying to other stuff that needs to know.\u00A0 Would perhaps overriding\u00A0onPartJointBreak be a better idea? \u00A0This will tell you if any part attached to your part has been destroyed? \u00A0And it returns the partjoint that has been destroyed, so if you previously stashed the parent and children\u0027s joints, you\u0027ll be able to test and figure out which one broke?\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, for testing if a part equals another part... \u00A0instead of trying to hold onto an integer ID or string name or some other indirect method of telling if the part we\u0027re talking about now is the part we were talking about earlier, just save the part itself and test against that.\n\u003C/p\u003E\n\u003Cp\u003E\nBut I think all of that is... \u00A0not at all what you want if you\u0027re making a part module, because a part module doesn\u0027t have an onPartDie event to override... \u00A0so you have to stash the values you want when the part initializes, then check to see if they\u0027re still attached every fixed update?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-25T11:36:40Z\u0022 title=\u002212/25/2015 11:36  AM\u0022 data-short=\u00228 yr\u0022\u003EDecember 25, 2015\u003C/time\u003E by artwhaley\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-12-25T20:23:53Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222336122\u0022 data-ipsquote-contentid=\u0022128537\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221451041938\u0022 data-ipsquote-userid=\u0022118388\u0022 data-ipsquote-username=\u0022artwhaley\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, artwhaley said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBut I think all of that is... \u00A0not at all what you want if you\u0027re making a part module, because a part module doesn\u0027t have an onPartDie event to override... \u00A0so you have to stash the values you want when the part initializes, then check to see if they\u0027re still attached every fixed update?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nGameEvents.OnPartDie is the method I presume he is using from a PartModule\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2015-12-25T21:18:44Z","Content":"\n\u003Cp\u003E\nI\u0027d still do it internally to your partmodule instead of tying into game events though, this way you don\u0027t have to remember to clean up for such a simple task. \u00A0This code compiles, but I don\u0027t have my testing machine with me on the holiday trip, so I could have missed something... \u00A0but it should be close: \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan\u003E    public class ksptest : PartModule\n    {\n        List\u003C/span\u003E\u003Cspan\u003E\u0026lt;Part\u0026gt;\u003C/span\u003E\u003Cspan\u003E myparts;\n\n        public override void OnStart(StartState state)\n        {\n            refreshMyParts();\n        }\n\n        public override void OnFixedUpdate()\n        {\n            if (myparts.Count == (this.part.children.Count \u002B 1)) return;  //I\u0027m just testing the count, as this seems good enough for what you need?  If you can imagine any situation where a part would be lost and another part gained on the same physics update frame, then replace this with a part to part comparison.\n            if(this.part.parent== null)\n            {\n                //parent is dead, do stuff\n                refreshMyParts();\n            }\n            else\n            {\n                //it was the children that died...\n                refreshMyParts();\n            }\n        }\n\n        public void refreshMyParts()  //method to clear the list and repopulate it\n        {\n            myparts = new List\u003C/span\u003E\u003Cspan\u003E\u0026lt;Part\u0026gt;\u003C/span\u003E\u003Cspan\u003E();\n            myparts.Add(this.part.parent);\n            foreach (Part p in this.part.children)\n            {\n                myparts.Add(p);\n            }\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nIn what I\u0027m doing there, you really COULD just store an int... \u00A0replacing refreshMyParts() with\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html\u0022\u003E\npublic void refreshMyParts() //stores the original part count in an integer in the class named mycount\n        {\n\n            mycount = 0;\n            if (this.part.parent != null) mycount\u002B\u002B;\n            mycount \u002B= this.part.children.Count;\n           \n        }\u003C/pre\u003E\n\u003Cp\u003E\nBut I wanted to show how to store the actual parts in case they needed to be able to figure out specifically which one blew up for some reason, or... for some other task that required holding on to parts.\n\u003C/p\u003E\n"},{"CreatedByName":"kimiko","CreatedById":112505,"CreatedDateTime":"2015-12-25T22:35:18Z","Content":"\n\u003Cp\u003E\nThat looks a lot better than what I have been cooking up (thanks! I may be able to use some of that! : D), but I wanted to use GameEvents.onPartDie, as my goal was to detect parts that blow up unintentionally, and not parts that is lost in e.g. decoupling etc. I saw some other mods using it, which I have installed in my on-going game, and it seemed to work very well. In addition, it has to know specifically what blew up so it can detect the specific attached parts, but I also I want to use it from within partmodule(s) as I want to use ModuleManager to assign which part which uses the partmodule I\u0027m making, that way it\u0027s easier to make it compatible with other mods (and possibly less hard-coding when other things change). The goal is have the module work from within a assigned part to detect dying parts connected to it, and everything has to work with the part that is \u0022still alive\u0022, though I fear it may cause some performance issues depending on how many parts have this module assigned to it.\n\u003C/p\u003E\n\u003Cp\u003E\nIn any rate making a cache of surrounding parts worked out great, and it now functions as I\u0027d like. Now I\u0027m only looking around for some practical way timing the caching, I\u0027ve been looking around and \u003Cspan\u003EonVesselWasModified seems to be a good contender, but I really don\u0027t have any clue at this moment.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nCurrently I\u0027m simply targeting part.parent, and then foreach-looping all the childparts, which has the current part as part.parent, into a Stack\u0026lt;Part\u0026gt; in order to make the cache, but I\u0027ve heard it is potentially very taxing with foreach-loops, and I have very little clue in how the Stack-functionality actually works... It just works.. somehow...\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-12-25T23:02:23Z","Content":"\n\u003Cp\u003E\n\u003Cu\u003E\u003Cspan style=\u0022font-size:20px;\u0022\u003E\u003Cstrong\u003EIf\u003C/strong\u003E\u003C/span\u003E\u003C/u\u003E speed is an issue, a for loop on a basic array may give some minor benefits over the foreach loop, or a HashSet\u0026lt;Part\u0026gt; may be a better option than iterating over a collection (small average collection size counts against this method). That\u0027s only if you need the speed though, which really depends on how many parts this module will be active on and even then is probably not worthwhile (if it\u0027s on lots of parts, it would most likely be a better optimisation to approach it from a vessel level instead of from individual parts).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-25T23:04:40Z\u0022 title=\u002212/25/2015 11:04  PM\u0022 data-short=\u00228 yr\u0022\u003EDecember 25, 2015\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-12-26T04:40:50Z","Content":"\n\u003Cp\u003E\nAs a general rule, the only place you need to be worried about how fast code executes is if it\u0027s in an Update() or FixedUpdate() method as those run several times a second. (Or in code called from it.)\n\u003C/p\u003E\n\u003Cp\u003E\nCode anywhere else it usually triggered on an as needed basis and only runs once, so I don\u0027t worry about execution speed there.\n\u003C/p\u003E\n\u003Cp\u003E\nNote this doesn\u0027t mean you can ignore how much load your code is putting on the CPU, but 99.9% of the time you don\u0027t have to worry about it outside the Update() methods.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-12-26T04:43:09Z\u0022 title=\u002212/26/2015 04:43  AM\u0022 data-short=\u00228 yr\u0022\u003EDecember 26, 2015\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Padishar","CreatedById":97386,"CreatedDateTime":"2015-12-28T00:09:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222336723\u0022 data-ipsquote-contentid=\u0022128537\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221451104850\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn \u200E26\u200E/\u200E12\u200E/\u200E2015 at 4:40 AM, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCode anywhere else it usually triggered on an as needed basis and only runs once, so I don\u0027t worry about execution speed there.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt may only be run occasionally but, unless this is during scene change or some other point the player wouldn\u0027t notice (e.g. while paused, during save/load etc), any code that takes a long time to execute will introduce a nasty stall unless you look into using coroutines and/or background threads.\n\u003C/p\u003E\n"}]}