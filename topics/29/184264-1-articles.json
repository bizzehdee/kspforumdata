{"TopicId":184264,"ForumId":29,"TopicTitle":"Textures in KSP/Unity, or how to not end up with a blurry mess in your UI","CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2019-05-05T19:10:33Z","PageNum":1,"Articles":[{"CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2019-05-05T19:10:33Z","Content":"\n\u003Cp\u003E\nDisclaimer: I am not an expert on this, the following is just what I have discovered.\u003Cbr\u003E\nSome of this information is deduced based on empirical observation of KSP / Unity behavior.\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s only fragmented info out there re: how to set up UI textures. Hopefully by organizing this information together will help put an end to blurry fuzzy UI woes and nasty hacky workarounds.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003EPlugin authors:\u003C/b\u003E\u003Cbr\u003E\nThis will hopefully explain why your buttons/icons/etc are a horrible mess and what you should do to avoid it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003EPart modders:\u003C/b\u003E\u003Cbr\u003E\nThis does not really affect textures you use in models, but may be informative.\u003Cbr\u003E\n(Side note: if you aren\u0027t already using DDS with mipmaps, you should be doing so.)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003EPlayers:\u003C/b\u003E\u003Cbr\u003E\nThis is probably too technical. If you want to fix blurry UI in mods that you are using, see instructions \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?showtopic=184268\u0022 rel=\u0022\u0022\u003Ehere\u003C/a\u003E.\n\u003C/p\u003E\n\u003Chr\u003E\u003Cp\u003E\nSo I finally needed to make a mod with toolbar button and ran into the issue where the icon gets all blurry when graphics settings are at less than full resolution textures.\n\u003C/p\u003E\n\u003Cp\u003E\nWithin the modding community I found that:\u003Cbr\u003E\n- some modders not aware or haven\u0027t address the issue (e.g. low priority, haven\u0027t figured out what to do)\u003Cbr\u003E\n- blame placed on Unity and it\u0027s texture compression (loosely true but not strictly correct)\u003Cbr\u003E\n- some workarounds involving DIY reading texture directly from file, ignoring the version in GameDatabase --- file i/o overhead, yucks\u003Cbr\u003E\n- some workarounds using textures that are larger than they need to be\n\u003C/p\u003E\n\u003Cp\u003E\nThe crux of the problem isn\u0027t actually compression per se, it\u0027s mipmaps.\u003Cbr\u003E\nIf you don\u0027t know what they are, you might want to google and read up more, but the short explanation is: mipmaps are just a bunch of smaller copies of the texture which can be used on-the-fly depending on the size required, rather than having to do expensive calculations to get a scaled version from the original at runtime. This is great for model textures, so if you\u0027re looking at a capsule in game at close range it would be textured using a high res (or fullres) version of the texture but if it is zoomed out and far away then a lower res mipmap can be used. (See explanation by HebaruSan below.)\n\u003C/p\u003E\n\u003Cp\u003E\nDepending on what format texture files you\u0027re using and how they get loaded, they may already contain mipmaps in the file, or mipmaps may be generated for them during loading.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd the problem is, if you have small textures for UI purposes e.g. icons, buttons, you\u0027ve probably already made it at appropriate size and want it to be used at crisp full res all the time. You do not want any of that fancy mipmap stuff.\n\u003C/p\u003E\n\u003Cp\u003E\nWhen a texture has mipmaps, and the \u003Cu\u003ETexture Resolution\u003C/u\u003E option KSP\u0027s graphics settings are set to anything less than full resolution, then the following happens:\u003Cbr\u003E\n- At half res, only mipmap level 1 (halved width and height) and smaller is uploaded to GPU\u00A0 \u0026lt;-- \u0022factory default\u0022\u003Cbr\u003E\n- At quarter res, only mipmap level 2 onwards is uploaded\u003Cbr\u003E\n- At eighth res, only level 3 onwards is available\u003Cbr\u003E\nThis means that your appropriately-sized, original full res version of the texture (mipmap level 0) simply gets thrown away, so when your UI element is displayed it is forced to use a too-small version of the texture and scale it up.\n\u003C/p\u003E\n\u003Chr\u003E\u003Ch3\u003E\nWhat KSP / Unity does when loading textures\n\u003C/h3\u003E\n\u003Cp\u003E\nTextures are loaded from file into Unity \u003Ca href=\u0022https://docs.unity3d.com/2017.4/Documentation/ScriptReference/Texture2D.html\u0022 rel=\u0022external nofollow\u0022\u003ETexture2D\u003C/a\u003E object.\u003Cbr\u003E\nAll of the textures are kept in the GameDatabase along with some metadata in the form of \u003Ca href=\u0022https://kerbalspaceprogram.com/api/class_game_database_1_1_texture_info.html\u0022 rel=\u0022\u0022\u003EGameDatabase.TextureInfo\u003C/a\u003E object.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003E\u003Cu\u003ETextureInfo attributes:\u003C/u\u003E\u003C/b\u003E\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Ename:\nThis is the \u0022url\u0022 used to lookup a texture when you call GameDatabase.Instance.GetTexture()\nbasically the path of the file relative to GameData folder, minus file extension\n\nfile:\nInternal UrlDir.UrlFile format for storing path information\n\ntexture:\nThe Texture2D object with the texture in it\n\nisNormal:\nwhether the texture is a normal map.\nNote that this can change at runtime. So if you have a texture that isn\u0027t a normal map, and then call GetTexture() with asNormalMap true it will (try to) convert the existing texture to normal map, and isNormal flag will be changed to reflect this\n\nisReadable:\na Texture2D can be set to be \u0022no longer readable\u0022 which according to Unity documentation means \u0022memory will be freed after uploading to GPU\u0022 and texture cannot be manipulated (e.g. edit the pixels) from CPU side.\nthis flag is supposed to reflect that.\n\nisCompressed:\nwhether the texture has been compressed during the loading process.\nUnity documentation: \u0022Compressed textures use less graphics memory and are faster to render. After compression, texture will be in DXT1 format if the original texture had no alpha channel, and in DXT5 format if it had alpha channel.\u0022\nThis flag may be incorrect, it appears to be set as long as there was an attempt to compress the texture with Texture2D.Compress(). But that process can fail, and is usually seen in KSP.log when it complains such as \u0022Texture resolution is not valid for compression: \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;filename\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E - consider changing the image\u0027s width and height to enable compression\u0022\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis gives us some insights into the texture loading process.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat KSP does when loading each texture depends on the file format, but the general steps include:\u003Cbr\u003E\n- read the texture data from file\u003Cbr\u003E\n- convert image format (if needed)\u003Cbr\u003E\n- (optional) try to compress to DXT\u003Cbr\u003E\n- (optional) generate mipmaps\u003Cbr\u003E\n- upload to GPU -- behavior depends on Texture Resolution setting, more on this later\u003Cbr\u003E\n- (optional) make texture no longer readable (discard from RAM)\n\u003C/p\u003E\n\u003Cp\u003E\nWe can learn more about how different texture file types are handled by observing what happens to them.\u003Cbr\u003E\nBelow is a partial list of textures info dumped from a stock 1.7.0 install just after GameDatabase finished loading in LOADING scene. I\u0027ve trimmed it down from the full set.\u003Cbr\u003E\nFirst three letters NRC reflect the three boolean flags. The fourth C shows whether the texture itself is actually DXT format.\u003Cbr\u003E\nThis is followed by image dimensions, mipmapCount (1 if none) and \u003Ca href=\u0022https://docs.unity3d.com/2017.4/Documentation/ScriptReference/TextureFormat.html\u0022 rel=\u0022external nofollow\u0022\u003ETextureFormat\u003C/a\u003E, then the name of the texture.\u003Cbr\u003E\nThe source code that dumped this info can be found \u003Ca href=\u0022https://github.com/cake-pie/unBlur/blob/3f276fc81238cc7f57cc9b6c6a07154ca8150f4b/Source/UnBlur.cs#L276-L286\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E, it is part of the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?showtopic=184268\u0022 rel=\u0022\u0022\u003EunBlur\u003C/a\u003E mod.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\n  CC  256x160  1  DXT5            Squad/Agencies/C7AerospaceDivision\n  --   64x40   1  ARGB32          Squad/Agencies/C7AerospaceDivision_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/DinkelsteinKermansConstructionEmporium\n  --   64x40   1  ARGB32          Squad/Agencies/DinkelsteinKermansConstructionEmporium_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/ExperimentalEngineering\n  --   64x40   1  ARGB32          Squad/Agencies/ExperimentalEngineering_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/FlooydResearchLab\n  --   64x40   1  ARGB32          Squad/Agencies/FlooydResearchLab_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/GoliathNationalProducts\n  --   64x40   1  ARGB32          Squad/Agencies/GoliathNationalProducts_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/IntegratedIntegrals\n  --   64x40   1  ARGB32          Squad/Agencies/IntegratedIntegrals_scaled\n  CC  256x160  1  DXT1            Squad/Agencies/IonicSymphonicProtonicElectronics\n  --   64x40   1  ARGB32          Squad/Agencies/IonicSymphonicProtonicElectronics_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/JebsJunkyard\n  --   64x40   1  ARGB32          Squad/Agencies/JebsJunkyard_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/KerbalMotion\n  --   64x40   1  ARGB32          Squad/Agencies/KerbalMotion_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/KerbinWorldFirstRecordKeepingSociety\n  --   64x40   1  ARGB32          Squad/Agencies/KerbinWorldFirstRecordKeepingSociety_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/Kerbodyne\n  --   64x40   1  ARGB32          Squad/Agencies/Kerbodyne_scaled\n  CC  256x160  1  DXT1            Squad/Agencies/Kerlington\n  --   64x40   1  ARGB32          Squad/Agencies/Kerlington_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/MaxoConstructionToys\n  --   64x40   1  ARGB32          Squad/Agencies/MaxoConstructionToys_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/MovingPartsExpertsGroup\n  --   64x40   1  ARGB32          Squad/Agencies/MovingPartsExpertsGroup_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/OMBDemolition\n  --   64x40   1  ARGB32          Squad/Agencies/OMBDemolition_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/PeriapsisCo\n  --   64x40   1  ARGB32          Squad/Agencies/PeriapsisCo_scaled\n  CC  256x160  1  DXT1            Squad/Agencies/Probodobodyne\n  --   64x40   1  ARGB32          Squad/Agencies/Probodobodyne_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/R\u0026amp;D\n  --   64x40   1  ARGB32          Squad/Agencies/R\u0026amp;D_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/ReactionSystemsLtd\n  --   64x40   1  ARGB32          Squad/Agencies/ReactionSystemsLtd_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/Rockomax\n  --   64x40   1  ARGB32          Squad/Agencies/Rockomax_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/Rokea\n  --   64x40   1  ARGB32          Squad/Agencies/Rokea_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/SeansCannery\n  --   64x40   1  ARGB32          Squad/Agencies/SeansCannery_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/SteadlerEngineeringCorps\n  --   64x40   1  ARGB32          Squad/Agencies/SteadlerEngineeringCorps_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/StrutCo\n  --   64x40   1  ARGB32          Squad/Agencies/StrutCo_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/Vac-Co\n  --   64x40   1  ARGB32          Squad/Agencies/Vac-Co_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/WinterOwl\n  --   64x40   1  ARGB32          Squad/Agencies/WinterOwl_scaled\n  CC  256x160  1  DXT5            Squad/Agencies/ZaltonicElectronics\n  --   64x40   1  ARGB32          Squad/Agencies/ZaltonicElectronics_scaled\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/balloon\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/custom\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/default\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/dish\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/eva\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/gravity\n RCC   32x32   1  DXT5            Squad/Contracts/Icons/ksc\n  CC   32x32   6  DXT5            Squad/Contracts/Icons/launchsite\n  CC   64x96   1  DXT5            Squad/Contracts/Icons/marker\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/pressure\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/report\n  CC   32x32   6  DXT5            Squad/Contracts/Icons/runway\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/sample\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/seismic\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/thermometer\n  CC   32x32   1  DXT5            Squad/Contracts/Icons/vessel\n RCC  256x160  1  DXT5            Squad/Flags/09\n RCC  512x320  1  DXT5            Squad/Flags/B612_Foundation_flag\n RCC  256x160  1  DXT5            Squad/Flags/blorbs\n RCC  256x160  1  DXT5            Squad/Flags/bullseye\n RCC  256x160  1  DXT5            Squad/Flags/capsule\n RCC  256x160  1  DXT5            Squad/Flags/circles\n RCC  256x160  1  DXT5            Squad/Flags/default\n RCC  256x160  1  DXT5            Squad/Flags/esa_dark_blue\n RCC  256x160  1  DXT5            Squad/Flags/hexagon\n RCC  256x160  1  DXT5            Squad/Flags/hexagonCircles\n RCC  256x160  1  DXT5            Squad/Flags/kerbal1\n RCC  256x160  1  DXT5            Squad/Flags/kerbal2\n RCC  256x160  1  DXT5            Squad/Flags/kerbin\n RCC  256x160  1  DXT5            Squad/Flags/kerbinmunflag\n RCC  256x160  1  DXT5            Squad/Flags/line\n RCC  256x160  1  DXT5            Squad/Flags/minimalistic\n RCC  256x160  1  DXT5            Squad/Flags/NASA\n RCC  256x160  1  DXT5            Squad/Flags/orbit\n RCC  256x160  1  DXT5            Squad/Flags/orbs\n RCC  256x160  1  DXT5            Squad/Flags/retro\n RCC  256x160  1  DXT5            Squad/Flags/rings\n RCC  256x160  1  DXT5            Squad/Flags/rocketScience\n RCC  256x160  1  DXT5            Squad/Flags/satellite\n RCC  512x320  1  DXT5            Squad/Flags/Sentinel_Flag\n RCC  256x160  1  DXT5            Squad/Flags/spheres\n RCC  256x160  1  DXT5            Squad/Flags/squadLogo\n RCC  256x160  1  DXT5            Squad/Flags/squadLogo2\n RCC  256x160  1  DXT5            Squad/Flags/stripes\n RCC  256x160  1  DXT5            Squad/Flags/trees\n RCC  256x160  1  DXT5            Squad/Flags/trippy\n RCC  256x160  1  DXT5            Squad/Flags/uk_space_agency\n  CC   64x64   7  DXT1            Squad/FX/DiamondBlue\n  CC   64x64   7  DXT1            Squad/FX/FlameBlueOrange\n  CC   64x64   7  DXT1            Squad/FX/FlamePurple\n  CC   32x32   6  DXT1            Squad/FX/FlameRed\n  CC   64x64   7  DXT1            Squad/FX/FlameRedOrange\n  CC   64x64   7  DXT1            Squad/FX/Monoprop\n  CC   64x64   7  DXT1            Squad/FX/plasma2\n  CC  256x256  9  DXT1            Squad/FX/rocketplume2\n  CC  256x256  9  DXT1            Squad/FX/shockDiamond2\n  CC   64x64   7  DXT1            Squad/FX/smokepuff1\n  CC 2560x1600 12 DXT5            Squad/Interiors/Administration/AdminBuilding_Lvl1\n  CC 2560x1600 12 DXT5            Squad/Interiors/Administration/AdminBuilding_Lvl2\n  CC 2560x1600 12 DXT5            Squad/Interiors/Administration/AdminBuilding_Lvl3\n  CC 1024x1024 11 DXT5            Squad/MenuProps/MunOrBust\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_main\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_mk2\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_mk3\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_size0\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_size1\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_size1p5\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_size2\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_size3\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_size4\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/cs_surface\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/fuels_monopropellant\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/fuels_ore\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/fuels_oxidizer\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/fuels_solidfuel\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/fuels_xenongas\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number1\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number2\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number3\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number4\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number5\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number6\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number7\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number8\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/number9\n...\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_aerospaceTech2\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_commandmodules\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_fuelSystems-advanced\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_fuelSystems-highPerformance\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_largeVolumeContainment\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_miniaturization\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_propulsion-precision\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_propulsionSystems\n RCC   32x32   1  DXT5            Squad/PartList/SimpleIcons/RDicon_telescope\n  CC    4x4    1  DXT5            Squad/Parts/Aero/aerodynamicNoseCone/Rockomax_Adapters_diffuse\n  CC    4x4    1  DXT5            Squad/Parts/Aero/aerodynamicNoseCone/Rockomax_Adapters_normal\n  CC  256x512  10 DXT5            Squad/Parts/Aero/airbrake/Airbrake\n  CC  512x512  10 DXT5            Squad/Parts/Aero/airIntakeRadialXM-G50/RadialIntake\n  CC 2048x2048 12 DXT5            Squad/Parts/Aero/airlinerWings/AirlinerWings\n  CC 1024x1024 11 DXT5            Squad/Parts/Aero/airplaneFins/AirplaneFins\n  CC  128x256  9  DXT5            Squad/Parts/Aero/basicFin/BasicFin\n  CC  256x256  9  DXT5            Squad/Parts/Aero/circularIntake/CircluarIntakes\n  CC  256x256  9  DXT1            Squad/Parts/Aero/circularIntake/CircluarIntakes_Heat\n...\n  CC  512x512  10 DXT1            Squad/Parts/Aero/fairings/AutoTruss\n  CC  256x256  9  DXT5            Squad/Parts/Aero/fairings/FairingBase\n  CC  512x512  1  DXT5            Squad/Parts/Aero/fairings/FairingBaseNormals\n  CC  512x512  1  DXT5            Squad/Parts/Aero/fairings/fairingsCap\n  CC 1024x1024 11 DXT1            Squad/Parts/Aero/fairings/fairings_diff\n  CC 1024x1024 11 DXT5            Squad/Parts/Aero/fairings/fairings_diff_grey\n  CC 1024x1024 1  DXT5            Squad/Parts/Aero/fairings/fairings_diff_orange\n  CC 1024x1024 1  DXT5            Squad/Parts/Aero/fairings/fairings_grey_normals\nN CC 1024x1024 11 DXT5            Squad/Parts/Aero/fairings/fairings_normals\n  CC 1024x1024 1  DXT5            Squad/Parts/Aero/fairings/fairings_orange_normals\n  CC  256x256  9  DXT5            Squad/Parts/Aero/HeatShield/Fairing\n  CC  512x512  10 DXT5            Squad/Parts/Aero/HeatShield/heatshield\n  CC 1024x1024 11 DXT5            Squad/Parts/Aero/InflatableHeatShield/HeatShield\n  CC  512x512  10 DXT1            Squad/Parts/Aero/InflatableHeatShield/HeatShieldFairing\n  CC 1024x1024 11 DXT5            Squad/Parts/Aero/InflatableHeatShield/HeatShield_NRM\n...\n  CC 1024x1024 11 DXT5            Squad/Parts/Command/probeCoreCube/QBE_New_diffuse\nN C- 1024x1024 11 RGBA32          Squad/Parts/Command/probeCoreCube/QBE_New_NRM\n  CC 1024x1024 11 DXT5            Squad/Parts/Command/probeCoreCube/QBE_New_specular\n  CC 1024x1024 11 DXT5            Squad/Parts/Command/probeCoreHex/ksp_m_hexProbe_diff\n  CC  512x512  10 DXT5            Squad/Parts/Command/probeCoreHex/ksp_m_hexProbe_normal\n  CC  512x512  10 DXT5            Squad/Parts/Command/probeCoreHex_v2/hecsDiffuse\n  CC  512x512  10 DXT5            Squad/Parts/Command/probeCoreHex_v2/hecsNormal\n  CC  512x256  10 DXT5            Squad/Parts/Command/probeCoreOcto/model000\n  CC  512x256  10 DXT5            Squad/Parts/Command/probeCoreOcto/model001\n  CC  512x256  10 DXT1            Squad/Parts/Command/probeCoreOcto2/model000\n  C-   16x16   1  11              Squad/Parts/Command/probeCoreOcto2_v2/octoDiffuse\n  C-   16x16   1  11              Squad/Parts/Command/probeCoreOcto2_v2/octoNormal\n  C-   16x16   1  11              Squad/Parts/Command/probeCoreOcto2_v2/octoSpecular\n  CC  512x512  10 DXT5            Squad/Parts/Command/probeCoreOcto_v2/octoDiffuse\n  CC  512x512  10 DXT5            Squad/Parts/Command/probeCoreOcto_v2/octoNormal\n  CC  512x512  10 DXT5            Squad/Parts/Command/probeCoreOcto_v2/octoSpecular\n  CC  512x512  10 DXT1            Squad/Parts/Command/probeRoverBody/model000\n  CC  512x512  10 DXT5            Squad/Parts/Command/probeRoverBody/model001\n  CC 1024x1024 11 DXT5            Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_gold_diffuse\nN C- 1024x1024 11 RGBA32          Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_gold_NRM\n  CC 1024x1024 11 DXT5            Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_gold_specular\n  CC 1024x1024 11 DXT5            Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_silver_diffuse\nN C- 1024x1024 11 RGBA32          Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_silver_NRM\n  CC 1024x1024 11 DXT5            Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_silver_specular\n  CC    4x4    1  DXT5            Squad/Parts/Command/probeRoverBody_v2/QBE_New_diffuse\n  CC    4x4    1  DXT5            Squad/Parts/Command/probeRoverBody_v2/QBE_New_NRM\n  CC    4x4    1  DXT5            Squad/Parts/Command/probeRoverBody_v2/QBE_New_specular\n...\n  CC 2048x1024 12 DXT5            Squad/Parts/FuelTank/adapterTanks/Mk3Adapters\n  CC  512x512  10 DXT5            Squad/Parts/FuelTank/FoilTanks/RadialTanks\n  CC  512x512  10 DXT5            Squad/Parts/FuelTank/FoilTanks/RadialTanks_N\n  CC  128x64   8  DXT1            Squad/Parts/FuelTank/fuelTankOscarB/model000\n  CC  256x128  9  DXT5            Squad/Parts/FuelTank/fuelTankOscarB/model001\n  CC  128x64   8  DXT1            Squad/Parts/FuelTank/fuelTankOscarB/tank\nN CC  256x128  9  DXT5            Squad/Parts/FuelTank/fuelTankOscarB/tank_n\n  CC  256x256  9  DXT5            Squad/Parts/FuelTank/miniFuselage/Fuselage\n  CC 1024x1024 11 DXT5            Squad/Parts/FuelTank/mk2Adapters/mk2adapters1m\n  CC 1024x1024 11 DXT5            Squad/Parts/FuelTank/mk2FuselageLong/mk2Fuselage\n  CC 1024x1024 11 DXT5            Squad/Parts/FuelTank/mk2FuselageShort/mk2FuselageShort\n  CC 2048x1024 12 DXT5            Squad/Parts/FuelTank/mk3Fuselage/Mk3Fuselage\n  CC  256x128  9  DXT1            Squad/Parts/FuelTank/mk3Fuselage/Mk3Fuselage_LUM\n...\n  CC  512x256  10 DXT5            Squad/Parts/Structural/structuralPanel1x1/model000\n  CC  512x256  10 DXT5            Squad/Parts/Structural/structuralPanel1x1/model001\n  CC  512x256  10 DXT5            Squad/Parts/Structural/structuralPanel2x2/model000\n  CC  512x256  10 DXT5            Squad/Parts/Structural/structuralPanel2x2/model001\n  CC  512x512  10 DXT5            Squad/Parts/Structural/structuralPylons/Pylons\n  CC   64x64   7  DXT1            Squad/Parts/Structural/strutCubicOcto/cubestrut\n  CC  128x128  8  DXT5            Squad/Parts/Structural/strutOcto/model000\n  CC  256x256  9  DXT1            Squad/Parts/Structural/trussGirderAdapter/model000\n  CC  512x512  10 DXT1            Squad/Parts/Structural/trussGirderAdapter/model001\n  CC 1024x1024 11 DXT1            Squad/Parts/Structural/trussGirderL/model000\n  CC 1024x1024 11 DXT1            Squad/Parts/Structural/trussGirderXL/model000\n  CC 1024x1024 11 DXT1            Squad/Parts/Thermal/FoldingRadiators/radiator\nN CC 1024x1024 11 DXT5            Squad/Parts/Thermal/FoldingRadiators/radiator_N_NRM\n  CC 1024x1024 11 DXT1            Squad/Parts/Thermal/RadiatorPanels/radPanel\nN CC 1024x1024 11 DXT5            Squad/Parts/Thermal/RadiatorPanels/radPanel_N_NRM\n  CC  512x512  10 DXT5            Squad/Parts/Utility/commDish88-88/comm_dish_array\n  CC  512x512  10 DXT5            Squad/Parts/Utility/commDish88-88/comm_dish_v2_diff\n  CC  256x256  9  DXT5            Squad/Parts/Utility/commDish88-88/model000\n  CC 1024x1024 11 DXT5            Squad/Parts/Utility/commsAntennaDTS-M1/mediumDishAntenna\n  CC  256x256  9  DXT1            Squad/Parts/Utility/commsAntennaDTS-M1/mediumDishAntenna_Emit\n...\n  CC  512x512  10 DXT1            Squad/Parts/Wheel/roverWheelM1/model000\n  CC  512x512  10 DXT1            Squad/Parts/Wheel/roverWheelM1/roverwheel1\n  CC  256x256  9  DXT5            Squad/Parts/Wheel/roverWheelS2/model000\n  CC  512x512  10 DXT5            Squad/Parts/Wheel/roverWheelS2/model001\n  CC  256x256  9  DXT5            Squad/Parts/Wheel/roverWheelS2/roverwheel2\nN CC  512x512  10 DXT5            Squad/Parts/Wheel/roverWheelS2/roverwheel2_n\n  CC 1024x1024 11 DXT5            Squad/Parts/Wheel/roverWheelTR-2L/ksp_r_medWheel_diff\n  CC 1024x1024 11 DXT5            Squad/Parts/Wheel/roverWheelTR-2L/ksp_r_medWheel_normal\n  CC 1024x1024 11 DXT5            Squad/Parts/Wheel/roverWheelTR-2L/ksp_r_medWheel_wheel_diff\n  CC 1024x1024 11 DXT5            Squad/Parts/Wheel/roverWheelTR-2L/ksp_r_medWheel_wheel_normal\n...\n  CC  128x128  8  DXT5            Squad/Props/IVANavBall/Arrows8dir\n  CC  512x256  10 DXT1            Squad/Props/IVANavBall/IVANavBall\n  CC  512x256  10 DXT1            Squad/Props/IVANavBall/IVANavBall_Glow\n  CC  128x128  8  DXT5            Squad/Props/IVANavBall/ManeuverNode_vectors\n  CC  256x256  9  DXT5            Squad/Props/IVANavBall/navball2\n  CC  256x256  9  DXT5            Squad/Props/IVANavBall/navBall_DV_IVA\n  CC  256x256  9  DXT5            Squad/Props/IVANavBall/navBall_vectors_IVA\n RCC  128x128  8  DXT5            Squad/Props/IVANavBallNoBase/Arrows8dir\n RCC  512x256  10 DXT5            Squad/Props/IVANavBallNoBase/IVANavBall\n RCC  128x128  8  DXT5            Squad/Props/IVANavBallNoBase/ManeuverNode_vectors\n RCC  256x256  9  DXT5            Squad/Props/IVANavBallNoBase/navball2\n RCC  256x256  9  DXT5            Squad/Props/IVANavBallNoBase/navBall_DV_IVA\n RCC  256x256  9  DXT5            Squad/Props/IVANavBallNoBase/navBall_vectors_IVA\n  CC  256x256  9  DXT1            Squad/Props/ledPanelSpeed/circularButton\n  CC  256x256  9  DXT1            Squad/Props/ledPanelSpeed/ledPanel\n  CC  256x256  9  DXT5            Squad/Props/Monitor/Emissives\n  CC  256x256  9  DXT1            Squad/Props/Monitor/Emissives_glow\n  CC  512x512  10 DXT5            Squad/Props/Monitor/Monitor\n...\n  CC 2048x2048 12 DXT5            Squad/Spaces/landerCabinSmallInternal/ksp_s_landerCan_internal_diff\n  CC 2048x2048 12 DXT5            Squad/Spaces/landerCabinSmallInternal/ksp_s_landerCan_internal_normal\n  CC 1024x1024 11 DXT5            Squad/Spaces/landerCabinSmallInternal/ksp_s_landerCan_internal_window_alpha\n  CC 1024x1024 11 DXT5            Squad/Spaces/landerCabinSmallInternal/pilot Seat\n  CC  512x512  10 DXT5            Squad/Spaces/LargeCrewedLabInternals/Glass\n  CC 2048x2048 12 DXT5            Squad/Spaces/LargeCrewedLabInternals/MPL_Int\nN CC  512x512  10 DXT5            Squad/Spaces/LargeCrewedLabInternals/MPL_Int_n_NRM\n  CC 2048x2048 1  DXT5            Squad/Spaces/Mk1-3/Mk1_3_IvaProps_Diffuse\n  CC 2048x2048 1  DXT5            Squad/Spaces/Mk1-3/Mk1_3_IvaProps_Normal\n  CC 2048x2048 1  DXT5            Squad/Spaces/Mk1-3/Mk1_3_IvaShell_Diffuse\n  CC 2048x2048 1  DXT5            Squad/Spaces/Mk1-3/Mk1_3_IvaShell_Emissive\n  CC 2048x2048 1  DXT5            Squad/Spaces/Mk1-3/Mk1_3_IvaShell_Normal\n  CC 1024x1024 11 DXT5            Squad/Spaces/Mk1-3/pilot Seat\n...\n  CC 2048x2048 12 DXT5            Squad/Spaces/mk1pod_IVA/mk1pod_iva_props_diffuse\n  CC  512x512  10 DXT5            Squad/Spaces/mk1pod_IVA/mk1pod_iva_props_emissive\n  CC 2048x2048 12 DXT5            Squad/Spaces/mk1pod_IVA/mk1pod_iva_props_normal\n  CC 2048x2048 12 DXT5            Squad/Spaces/mk1pod_IVA/mk1pod_iva_shell_diffuse\n  CC 2048x2048 12 DXT5            Squad/Spaces/mk1pod_IVA/mk1pod_iva_shell_normal\n RCC 1024x1024 11 DXT5            Squad/Spaces/mk1pod_IVA/pilot Seat\n  CC  256x128  9  DXT5            Squad/Spaces/mk2CockpitStandardInternal/CargoBagA\n  CC 1024x1024 11 DXT5            Squad/Spaces/mk2CockpitStandardInternal/Mk2StandardIVA\n  CC  512x512  10 DXT5            Squad/Spaces/mk2CockpitStandardInternal/Pilotseat\n  CC  512x256  10 DXT5            Squad/Spaces/mk2CockpitStandardInternal/Windows\n...\n  CC 2048x2048 12 DXT5            Squad/Spaces/mk2LanderCanInternal/mk2LanderCan_props_diffuse\n  CC 2048x2048 12 DXT5            Squad/Spaces/mk2LanderCanInternal/mk2LanderCan_props_normal\n  CC 2048x2048 12 DXT5            Squad/Spaces/mk2LanderCanInternal/mk2LanderCan_shell_diffuse\n  CC 2048x2048 12 DXT5            Squad/Spaces/mk2LanderCanInternal/mk2LanderCan_shell_normal\n RCC 1024x1024 11 DXT5            Squad/Spaces/mk2LanderCanInternal/pilot Seat\n  CC  512x512  10 DXT5            Squad/Spaces/MK3CockpitInternal/Glass\n  CC 1024x1024 11 DXT1            Squad/Spaces/MK3CockpitInternal/Mk2StandardIVA\n...\n  CC 1024x1024 11 DXT5            Squad/Spaces/sharedAssets/CockpitGeneric\n  CC 1024x1024 11 DXT5            Squad/Spaces/sharedAssets/CockpitGeneric_NRM\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/AggressiveNegotiations\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/AppreciationCampaign\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/BailOutGrant\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/FundraisingCampaign\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/LeadershipInitiative\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/OpenSourceTechProgram\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/OutsourcedResearch\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/PatentsLicensing\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/RecoveryTransponderFitting\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/ResearchRightsSellOut\n RCC   48x48   1  DXT5            Squad/Strategies/Icons/UnpaidResearchProgram\n RCC  192x32   1  DXT5            Squad/Tutorials/ChuteColors\n  CC   92x32   1  DXT5            Squad/Tutorials/EditorCoM\n RCC  128x128  1  DXT5            Squad/Tutorials/EditorSnap\n RCC  128x128  1  DXT5            Squad/Tutorials/EditorSnap4x\n RCC  128x128  1  DXT5            Squad/Tutorials/EditorSymm\n RCC   64x128  1  DXT5            Squad/Tutorials/StagingStack\n RC-  250x213  1  ARGB32          Squad/Tutorials/YPRDiagram\n\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nIf you install unBlur you can use it replicate the above as well as investigate what KSP is doing to \u003Cem\u003Eyour\u003C/em\u003E textures.\n\u003C/p\u003E\n\u003Cp\u003E\nIt provides access to its functionality via a console command in the Alt\u002BF12 debug console so you can inspect individual texture info, disable mipmaps for textures, and dump the full list of textures from GameDatabase.\u003Cbr\u003E\nIt is also possible to have unBlur dump the state of textures from GameDatabase immediately after loading, while in the loading screen, by turning on verbose debug mode.\n\u003C/p\u003E\n\u003Cp\u003E\nFor details, consult the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?showtopic=184268\u0022 rel=\u0022\u0022\u003EunBlur forum thread\u003C/a\u003E.\n\u003C/p\u003E\n\u003Chr\u003E\u003Ch3\u003E\nHow the texture resolution setting affects texture loading\n\u003C/h3\u003E\n\u003Cp\u003E\nThe texture resolution option in KSP\u0027s graphics settings actually control a Unity setting called\u00A0\u003Ca href=\u0022https://docs.unity3d.com/ScriptReference/QualitySettings-masterTextureLimit.html\u0022 rel=\u0022external nofollow\u0022\u003EQualitySettings.masterTextureLimit\u003C/a\u003E.\u003Cbr\u003E\nThe setting is stored in \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003Esettings.cfg\u003C/span\u003E as\u00A0\u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003ETEXTURE_QUALITY\u003C/span\u003E with 0 = full res, 1 = half res, ... 3 = eighth res.\n\u003C/p\u003E\n\u003Cp\u003E\nAs described earlier, masterTextureLimit prevents the n highest resolution mipmap(s) from being uploaded to the GPU.\u003Cbr\u003E\nPer Unity docs, \u0022This can be used to decrease video memory requirements on low-end computers.\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, if a texture does not have mipmaps, then the full texture must of course be used.\n\u003C/p\u003E\n\u003Cp\u003E\nOnce the texture has been upload to the GPU, that\u0027s the copy we have to work with. If the texture resolution setting was at eighth res when starting the game, that\u0027s the quality that you are stuck with -- changing the setting at run time does not appear to have any effect -- because only a lower res version is available in the GPU, and in general because the texture was made no longer readable by CPU side after loading, even if you turn the quality back up to full res, the full res texture data is not available anymore without actually reloading from file again.\n\u003C/p\u003E\n\u003Cp\u003E\nIn cases where the texture is still readable and in RAM, plugins can access the full res version of the texture from there. (This is how unBlur fixes blurry png textures.)\n\u003C/p\u003E\n\u003Chr\u003E\u003Ch3\u003E\nHow various file formats are handled\n\u003C/h3\u003E\n\u003Cp\u003E\nBased on observations from GameDatabase TextureInfo dumps, including both stock and modded.\n\u003C/p\u003E\n\u003Ch4\u003E\n*.dds\n\u003C/h4\u003E\n\u003Cp\u003E\nThese files are already in the compressed format preferred internally.\u003Cbr\u003E\nLoading them is fast, because the data is loaded as-is and no conversion is needed.\u003Cbr\u003E\nBeing compressed, they use less graphics memory and are faster to render.\u003Cbr\u003E\n- Loaded format: as per file, i.e. DXT1 (no alpha) or DXT5 (with alpha)\u003Cbr\u003E\n- already compressed\u003Cbr\u003E\n- mipmaps: as per file\u003Cbr\u003E\n- not kept readable\n\u003C/p\u003E\n\u003Ch4\u003E\n*.mbm\n\u003C/h4\u003E\n\u003Cp\u003E\nOld KSP propietary format, very few instances left.\u003Cbr\u003E\n- Loaded format: DXT\u003Cbr\u003E\n- compressed\u003Cbr\u003E\n- mipmaps: yes\u003Cbr\u003E\n- kept readable\n\u003C/p\u003E\n\u003Ch4\u003E\n*.png\n\u003C/h4\u003E\n\u003Cp\u003E\nLoading them is slow, because they have to be converted from \u003Ca href=\u0022http://www.libpng.org/pub/png/book/chapter08.html#png.ch08.div.5.8\u0022 rel=\u0022external nofollow\u0022\u003ERGBA32\u003C/a\u003E and additional processing is done.\u003Cbr\u003E\nThey usually get compressed to DXT5 for upload to GPU, but are kept CPU-readable so also consume RAM.\u003Cbr\u003E\n- Loaded format: usually DXT5\u003Cbr\u003E\n- will usually be compressed\u003Cbr\u003E\n- mipmaps: may be generated \u0026lt;-- blame your blurry UI on this\u003Cbr\u003E\n- kept readable\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003ENotes\u003C/u\u003E\n\u003C/p\u003E\n\u003Col\u003E\u003Cli\u003E\nSome stock pngs avoid having mipmaps generated (e.g. Squad/Flags/*, Squad/PartList/SimpleIcons/*, Squad/Strategies/Icons/*) but others do (e.g. Squad/Props/IVANavBallNoBase/*)\u003Cbr\u003E\nmechanism not well understood, perhaps hardcoded to identify certain directories (*/Flags/* maybe?) but not sure we can rely on this behavior\n\u003C/li\u003E\n\u003Cli\u003E\nA very small number of new normal maps (_NRM) for redesigned parts are *.png that store in GameDatabase as RGBA32, unreadable, uncompressed (despite isCompressed true), with mipmaps generated.\n\u003C/li\u003E\n\u003Cli\u003E\nSquad/Tutorials/YPRDiagram fails to compress, which reveals that pngs are loaded as ARGB32 before getting compressed to DXT\n\u003C/li\u003E\n\u003Cli\u003E\nmipmaps may still be generated even if compression fails, I have positively observed this (38x38 ARGB32 CommNetConstellation/Textures/cnclauncherbutton.png with mipmapCount of 6)\n\u003C/li\u003E\n\u003C/ol\u003E\u003Ch4\u003E\n*.truecolor\n\u003C/h4\u003E\n\u003Cp\u003E\nNotably used for small (_scaled) versions of agency logos. Explanation \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/104740-whats-a-truecolor-file/\u0022 rel=\u0022\u0022\u003Ehere\u003C/a\u003E.\u003Cbr\u003E\nActually renamed *.png files, so loading needs to convert format from RGBA32.\u003Cbr\u003E\n- Loaded format: ARGB32\u003Cbr\u003E\n- will not be compressed\u003Cbr\u003E\n- mipmaps: will not be generated\u003Cbr\u003E\n- not kept readable\n\u003C/p\u003E\n\u003Ch4\u003E\n*.jpg\n\u003C/h4\u003E\n\u003Cp\u003E\nLike png, these are comparatively slower to load.\u003Cbr\u003E\nThey are compressed to DXT1 since they don\u0027t have transparency, and kept CPU-readable after loading to GPU\u003Cbr\u003E\n- Loaded format: DXT1\u003Cbr\u003E\n- compressed\u003Cbr\u003E\n- mipmaps: will be generated\u003Cbr\u003E\n- kept readable\n\u003C/p\u003E\n\u003Chr\u003E\u003Ch3\u003E\nWhy does it behave like that?\n\u003C/h3\u003E\n\u003Cp\u003E\nIf you provide a texture in DDS format, it is already in the format that is used by the GPU, so KSP/Unity takes the file as-is and treats it as what you intended -- so you can provide exactly what you want.\u003Cbr\u003E\nIf you are using a texture for models, you\u0027d include mipmaps, and things would work great (because that\u0027s exactly the use-case they were designed for.)\u003Cbr\u003E\nIf you are using a texture for UI, you wouldn\u0027t generate mipmaps when saving the file, and KSP/Unity will just always use it at full-res (exactly as intended)\u003Cbr\u003E\nThe texture file is already in the correct format, already compressed, and has mipmaps if you want them. KSP/Unity presumes that everything is as you want it to be, and the texture will no longer be modified by code once loaded, and so discards its data from main memory after it has been loaded into graphics memory.\n\u003C/p\u003E\n\u003Cp\u003E\nFor other formats, however, they need to be converted for use. Because the API doesn\u0027t provide a mechanism for us to attach any metadata to png/jpg/etc files to indicate to KSP/Unity what our intentions are and what the texture is for, I think the texture loader simply makes the assumption that whatever textures it loads are for models. So, in general, it will generate mipmaps from the full-res image, and after that it will attempt to compress the texture to DXT for better performance. But it keeps the texture\u0027s pixel-by-pixel data available in RAM, in case you might want to write some code that accesses/manipulates that.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is actually a reasonable default assumption, after all, most textures are going to be model textures. As for UI textures, pretty much most if not all of the UI in the stock game are built in Unity, prefabbed, and saved into assets, so that takes care of loading UI textures for the stock game. (Mods could do the same thing, but most of the time it\u0027s far too much trouble if all we need is some simple UI.)\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, this is the behavior in general for formats like png and jpg. It seems like KSP \u003Cem\u003Emight \u003C/em\u003Ehave some code that handles special cases in the stock game\u0027s data like flag textures (Squad/Flags/*) and icons (Squad/PartList/SimpleIcons/*, Squad/Strategies/Icons/*) so that they don\u0027t get treated like model textures. Those cases can be hardcoded because they know about it in advance, but for modders I don\u0027t recommend we rely on that behavior.\n\u003C/p\u003E\n\u003Cp\u003E\n*.truecolor files are the special case, which seems to be added to handle agency logos. Agency logos in general are stored as DDS and are displayed in game at various medium-ish sizes, e.g. contracts window.\u003Cbr\u003E\nHowever, for the part-picker in editor when sorted by manufacturer, it needs to be a small icon. Scaling down from the fullsize logo at runtime didn\u0027t work well visually, so smaller \u0022*_scaled\u0022 version of the logos were specifically made.\u003Cbr\u003E\nThese were png files, but as above the texture loader would have generated mipmaps for them and cause blurriness. To deal with that, the files were named as *.truecolor instead and the texture loader instructed specifically to treat them differently, i.e don\u0027t generate mipmaps.\n\u003C/p\u003E\n\u003Chr\u003E\u003Ch3\u003E\nHow to proceed from here\n\u003C/h3\u003E\n\u003Ch4\u003E\nUI textures in your own mod\n\u003C/h4\u003E\n\u003Cp\u003E\nIncluding toolbar button icons for stock AppLauncher or blizzy toolbar.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you are currently using *.png for icon/button graphics, the quick hotfix is to simply rename to *.truecolor. Besides not having mipmaps generated, the other benefit is that it will not be kept in RAM after uploading to GPU. The one downside compared to png is that it will no longer be compressed. Also, like png, it is still slower to load.\n\u003C/p\u003E\n\u003Cp\u003E\nFor long term, if you can convert your files to *.dds without mipmaps would be most ideal: fast to load, compressed, not kept in RAM.\n\u003C/p\u003E\n\u003Ch4\u003E\nIf you are using the workaround of reading textures directly from file yourself\n\u003C/h4\u003E\n\u003Cp\u003E\nSpecifically the workaround offered \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/172665-toolbar-buttons-are-fuzzy-in-141/\u0022 rel=\u0022\u0022\u003Ehere\u003C/a\u003E.\u003Cbr\u003E\nStop doing this if it is for textures in your own mod that you have control over. Rename/convert them instead, see above. By reading the file yourself and creating another texture, you incur file IO overheads and consume additional resources for the texture that you create, while the copy in GameDatabase continues to occupy both RAM and GPU. And if not implemented properly, you may be leaking memory.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have to use the workaround because you have no control over the textures, i.e. they are passed to you by other mods. You can use\u00A0\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?showtopic=184268\u0022 rel=\u0022\u0022\u003EunBlur\u003C/a\u003E, call unBlur to tell it to strip mipmaps from the texture in GameDatabase before you fetch and use it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EIf you are using the workaround of making textures larger than they need to be\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis workaround costs a disproportionate amount of disk space and loading time, don\u0027t use it.\n\u003C/p\u003E\n\u003Cp\u003E\nThe way that this worked is as follows:\u003Cbr\u003E\nSuppose you make a 64x64 image when you actually only need 32x32, this will work at half res settings because the 64x64 copy is thrown away but mipmap level 1 at 32x32 is still available.\u003Cbr\u003E\nBut at eighth res setting, only mipmap level 3 at 8x8 is available so it doesn\u0027t fully solve to problem. You would need to make full res at 256x256 in order for eighth res setting to still have a 32x32 copy.\n\u003C/p\u003E\n\u003Ch4\u003E\nIf you have programmatically created Texture2Ds in UI for other reasons\n\u003C/h4\u003E\n\u003Cp\u003E\nHere are tips for best performance and results\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nMake sure you use the constructor that lets you specify mimmap false.\n\u003C/li\u003E\n\u003Cli\u003E\nUse \u003Ca href=\u0022https://docs.unity3d.com/2017.4/Documentation/ScriptReference/Texture2D.Compress.html\u0022 rel=\u0022external nofollow\u0022\u003ECompress()\u003C/a\u003E if possible. Works more consistently if you do this before making unreadable using Apply(). (\u003Ca href=\u0022https://github.com/KSP-TaxiService/CommNetConstellation/pull/12#issuecomment-489642419\u0022 rel=\u0022external nofollow\u0022\u003Eref\u003C/a\u003E)\n\u003C/li\u003E\n\u003Cli\u003E\nOnce finished making modifications to the pixel data, call \u003Ca href=\u0022https://docs.unity3d.com/2017.4/Documentation/ScriptReference/Texture2D.Apply.html\u0022 rel=\u0022external nofollow\u0022\u003EApply(false, true)\u003C/a\u003E to upload to GPU and discard from RAM\n\u003C/li\u003E\n\u003Cli\u003E\nMake sure you dispose of the texture when done with it. For most monobehaviors (i.e. destroyed/recreated when changing scenes) you should do it in OnDestroy even if it is something you \u0022hang on to\u0022, otherwise the texture will not be GC\u0027d and you end up making another copy. Other ideas: you can have a singleton monobehavior with DontDestroyOnLoad that is responsible for hanging on to one copy of textures only. Or init once into a static field.\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u003Cstrong\u003EUI textures that require mipmapping\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have UI textures that are larger, such as banners or backgrounds that need to be displayed at different sizes, then you might actually want mipmapping.\u003Cbr\u003E\nBut then, you\u0027ll need some way of getting around the texture quality settings causing the n highest-res mipmaps being discarded.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you find yourself in this situation, my suggestion is to use png format so that mipmaps will be automatically generated for you, but the texture is also kept readable in RAM.\u003Cbr\u003E\nAfter the texture has been loaded into GameDatabase, you will need to fetch the texture -- which is missing first few mipmaps on GPU, but still has full-res data preserved in RAM -- and upload to GPU again, forcing it to include all mipmaps this time.\u003Cbr\u003E\nThis should be achievable by temporarily forcing\u00A0QualitySettings.masterTextureLimit to 0, calling Apply(false, false) on the texture, and then restoring the masterTextureLimit when done.\u003Cbr\u003E\n(\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?showtopic=184268\u0022 rel=\u0022\u0022\u003EunBlur\u003C/a\u003E will also provide such functionality in the future.)\n\u003C/p\u003E\n\u003Ch4\u003E\nNon-UI, i.e. model textures\n\u003C/h4\u003E\n\u003Cp\u003E\nYou\u0027ve probably heard this before, but for fastest loading and best performance you should really encode in dds with appropriate mipmap level.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-05-17T22:21:57Z\u0022 title=\u002205/17/2019 10:21  PM\u0022 data-short=\u00225 yr\u0022\u003EMay 17, 2019\u003C/time\u003E by cakepie\u003C/strong\u003E\n\u003Cbr\u003Eadditions / corrections / updates\n\u003C/span\u003E\n"},{"CreatedByName":"HebaruSan","CreatedById":156657,"CreatedDateTime":"2019-05-05T20:06:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223593803\u0022 data-ipsquote-contentid=\u0022184264\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221557083433\u0022 data-ipsquote-userid=\u002269278\u0022 data-ipsquote-username=\u0022cakepie\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n48 minutes ago, cakepie said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nit is computationally cheap to slap a lower res mipmap on it\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI thought the point of mipmaps was to make distant objects look better, not performance. Looking up N texture coordinates and texels for N pixels is the same cost regardless of the size of the texture, just with different scale factors. But if you use a much higher res texture, those pixels would be sourced from a much smaller area than they represent visually, making the image look scrambled and change jarringly as the object moves.\n\u003C/p\u003E\n\u003Cp\u003E\n(I guess it improves performance if you compare it to trying to blend the right texels on the fly at runtime. But hopefully no one is that crazy.)\n\u003C/p\u003E\n"},{"CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2019-05-05T20:18:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223593843\u0022 data-ipsquote-contentid=\u0022184264\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221557086762\u0022 data-ipsquote-userid=\u0022156657\u0022 data-ipsquote-username=\u0022HebaruSan\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, HebaruSan said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI thought the point of mipmaps was to make distant objects look better[...] if you use a much higher res texture, those pixels would be sourced from a much smaller area than they represent visually, making the image look scrambled and change jarringly as the object moves.\n\u003C/p\u003E\n\u003Cp\u003E\n(I guess it improves performance if you compare it to trying to blend the right texels on the fly at runtime. But hopefully no one is that crazy.)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAh, as in using too high res texture actually ends up sampling pixels that are quite far apart on the texture and rendering them adjacent to one another?\n\u003C/p\u003E\n"},{"CreatedByName":"HebaruSan","CreatedById":156657,"CreatedDateTime":"2019-05-05T20:22:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223593852\u0022 data-ipsquote-contentid=\u0022184264\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221557087521\u0022 data-ipsquote-userid=\u002269278\u0022 data-ipsquote-username=\u0022cakepie\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, cakepie said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAh, as in using too high res texture actually ends up sampling pixels that are quite far apart on the texture and rendering them adjacent to one another?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, exactly. And for small features like a border between two sections, pieces of it would be drawn disconnectedly and pop in and out of existence as you moved around.\n\u003C/p\u003E\n"}]}