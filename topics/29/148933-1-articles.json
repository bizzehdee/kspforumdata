{"TopicId":148933,"ForumId":29,"TopicTitle":"Pseudo-autopilot module for an escape pod","CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2016-09-29T14:40:55Z","PageNum":1,"Articles":[{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2016-09-29T14:40:55Z","Content":"\n\u003Cp\u003E\nI\u0027m toying with making a \u0027bolt-on\u0027 escape pod akin to many a sci-fi film, you know the sort, single kerbal pre-built\u00A0coffin tube etc.\u00A0One of the key sticking points I\u00A0can see is\u00A0this requirement I have placed on myself:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u0022pod must be capable of re-orienting and holding retrograde without user input once stage/launched/deployed\u0022 - the logic is that you could put your passengers in one of the pods and fire them out of it and not worry about having to take control of the vessel.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m thinking that this would need a specialised \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E along these lines:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic class EscapeAutopilot : ModuleSAS\n{\n\t[KSPField]\n\tpublic override bool VesselAutopilot.Enable (AutopilotMode Retrograde)\n\n\tpublic override bool VesselAutopilot.SetMode (AutopilotMode Retrograde)\n\t\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI was planning on writing something in the part config file like:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EMODULE\n{\n\tname = EscapeAutopilot\n\t{\n\t\tEnabled = true\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAm I on the right sort of track here or way off?\n\u003C/p\u003E\n"},{"CreatedByName":"Electr0ninja","CreatedById":158700,"CreatedDateTime":"2016-10-02T07:04:49Z","Content":"\n\u003Cp\u003E\nI don\u0027t think you can retain heading control once a craft leaves the physics load range, the on rails system will just kill them, however if you just want it to face retrograde while the module is active, that can definitely be achieved.\n\u003C/p\u003E\n\u003Cp\u003E\nAlthough if you want a pod that just jettisons and lands outside physics range, you can do so, it will just take a bit of jury rigging.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd so far, your code looks decent, but I haven\u0027t messed with ModuleSAS classes yet.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-02T07:07:39Z\u0022 title=\u002210/02/2016 07:07  AM\u0022 data-short=\u00227 yr\u0022\u003EOctober 2, 2016\u003C/time\u003E by Electr0ninja\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2016-10-02T11:08:06Z","Content":"\n\u003Cp\u003E\nDo you really need an active control or would it be enough if the object is aerodynamically stable (supposing an atmosphere)? If you drop a dart from space it should always orient itself along the airstream (hopefully before burning up, so you\u0027d need the right amount of stability).\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-02T11:08:24Z\u0022 title=\u002210/02/2016 11:08  AM\u0022 data-short=\u00227 yr\u0022\u003EOctober 2, 2016\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2016-10-02T12:38:35Z","Content":"\n\u003Cp\u003E\nMy plan is that the part would be aerodynamically stable as well. But i\u0027d like to be able to launch multiple from staged so the initial kick and setup as they leave whatever stricken vessel will have them all in physics range. the though being that by the time they are out of physics range they\u0027ll all be on a decent retrograde trajectory and the aerodynamics will take over.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/158700-electr0ninja/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022158700\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/158700-electr0ninja/\u0022 rel=\u0022\u0022\u003E@Electr0ninja\u003C/a\u003E\u00A0i was planning to make the part a probe (without occupant control - or possibly with \u0027crew override\u0027) but this jury rigging intrigues me. mMy\u00A0hope is that, if the crew launched as a batch they would all come down roughly within physics range together, but if I\u00A0could \u0027force physics\u0027 for the duration of each vessels flight that might work if they go astray (which is quite possible i\u0027d expect). Would the alternative be\u00A0to have a short script that looks at the descent parameter of each module and then calculates the likelihood of survival given a list of set parameters and then with \u0027on-rail\u0027 physics either destroy the craft on impact of have it magically appear on the surface?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/85299-pellinor/\u0026amp;do=hovercard\u0022 data-mentionid=\u002285299\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/85299-pellinor/\u0022 rel=\u0022\u0022\u003E@pellinor\u003C/a\u003E\u00A0I \u0027m looking at it in the sense that these may either be singly surface attached or in another\u00A0custom part in block form so when\u00A0they are staged there is no knowing as to whether thy will be in a decent position for return. a short burst from \u0027jettison\u0027 module should get them clear and then the autopilot will take over the aiming and a slug of \u003Cabbr title=\u0022Solid fuel Rocket Booster\u0022\u003ESRB\u003C/abbr\u003E will fire to get them home.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-02T12:45:16Z\u0022 title=\u002210/02/2016 12:45  PM\u0022 data-short=\u00227 yr\u0022\u003EOctober 2, 2016\u003C/time\u003E by steedcrugeon\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Electr0ninja","CreatedById":158700,"CreatedDateTime":"2016-10-02T21:17:46Z","Content":"\n\u003Cp\u003E\nIf a craft has a suborbital trajectory and leaves physics range it will not land, it will crash and aero will not be applied. It would have to calculate a decent trajectory, have the ship magically appear on the surface with a fail percentage, and cause a time skip to simulate decent for the pods. If I understand you correctly.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-02T21:18:01Z\u0022 title=\u002210/02/2016 09:18  PM\u0022 data-short=\u00227 yr\u0022\u003EOctober 2, 2016\u003C/time\u003E by Electr0ninja\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2016-10-03T06:24:43Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222784370\u0022 data-ipsquote-contentid=\u0022148933\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221475443066\u0022 data-ipsquote-userid=\u0022158700\u0022 data-ipsquote-username=\u0022Electr0ninja\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Electr0ninja said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf a craft has a suborbital trajectory and leaves physics range it will not land, it will crash and aero will not be applied. It would have to calculate a decent trajectory, have the ship magically appear on the surface with a fail percentage, and cause a time skip to simulate decent for the pods. If I understand you correctly.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nah, I understand. This part would need to have another MODULE attached that runs a function to calculate its chances\u00A0surviving then activate the \u0027magically-appears-on-surface\u0027 after a given delay. More reading for me to do then.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Electr0ninja","CreatedById":158700,"CreatedDateTime":"2016-10-03T06:26:37Z","Content":"\n\u003Cp\u003E\nThat sounds pretty cool.\n\u003C/p\u003E\n"},{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2016-10-03T22:04:26Z","Content":"\n\u003Cp\u003E\nOkay can someone more experienced than me possibley point out where i\u0027m going wrong here? Visual studio does no like this code:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Enamespace Test_for_1._2\n{\n        public class ModuleKEEP : PartModule\n        {\n            public class escapeAutopilot (Vessel escapePod) base.OnStart;\n        \n            public class escapeAvionics : ModuleSAS\n            {\n                [KSPField]\n                public override bool VesselAutopilot.Enable(AutopilotMode Retrograde);\n                public override bool VesselAutopilot.SetMode(AutopilotMode Retrograde);\n            }\n\t\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-10-04T04:49:36Z","Content":"\n\u003Cp\u003E\nYea, that\u0027s never going to work. The short version is that your knowledge of basic C# syntax is missing\n\u003C/p\u003E\n\u003Cp\u003E\nSome possibly helpful links\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Ca href=\u0022http://www.learncs.org/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.learncs.org/\u003C/a\u003E\u00A0- You can\u0027t write anything if you don\u0027t understand the basics\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Tutorial:Creating_your_first_module\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Tutorial:Creating_your_first_module\u003C/a\u003E\u00A0- Start with something that actually works in KSP\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-04T04:50:01Z\u0022 title=\u002210/04/2016 04:50  AM\u0022 data-short=\u00227 yr\u0022\u003EOctober 4, 2016\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2016-10-04T06:43:38Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92871-crzyrndm/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292871\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92871-crzyrndm/\u0022 rel=\u0022\u0022\u003E@Crzyrndm\u003C/a\u003E\u00A0Thing is I didn\u0027t want to try and nest the class within in a class but even with the correct referenced couldn\u0027t drag through the components I wanted without using this weird arrangement.\n\u003C/p\u003E\n\u003Cp\u003E\nAll I was hoping to achieve was to override the \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\u00A0settings without user input\u00A0by having this function within the MODULE.\n\u003C/p\u003E\n\u003Cp\u003E\nI can\u0027t find a clear breakdown of the hierarchy of the KSP parts - I\u0027m pretty sure the VesselAutopiot can\u0027t be an actual\u00A0MODULE in the conventional sense but without bounding it to a module how would I be able to call it from a part\u0027s config file? The new API is very useful but because it\u0027s just a dump from doxygen its not abundantly clear to me.\n\u003C/p\u003E\n\u003Cp\u003E\nI understand the basics (and I mean basics) but the VesselAutopilot isn\u0027t like adding a heat alarm, or messing about with a lifting surface.\u00A0At least its not behaving as it would expect\u00A0 from what I have read and what I have seen in some of the tutorials on this subject (I can\u0027t inherit the components I want through it, or\u00A0VS isn\u0027t seeing them).\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: oh I think I done a stupid. I may be overcomplicating it\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-04T07:33:06Z\u0022 title=\u002210/04/2016 07:33  AM\u0022 data-short=\u00227 yr\u0022\u003EOctober 4, 2016\u003C/time\u003E by steedcrugeon\u003C/strong\u003E\n\u003Cbr\u003Etoo slow.\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-10-04T07:30:47Z","Content":"\n\u003Cul\u003E\u003Cli\u003E\nYou can\u0027t \u0022call\u0022 anything from a config file. A config file sets variables (and only a limited group of types at that), it doesn\u0027t drive any logic\n\u003C/li\u003E\n\u003Cli\u003E\nUnless I\u0027m very much mistaken, ModuleSAS doesn\u0027t know anything about how to control the vessel. It\u0027s most likely just a data wrapper for telling module command what level of \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E this part is allowed without a pilot present\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EVS is freaking out\u00A0because it doesn\u0027t understand what you\u0027re writing\u003C/strong\u003E.\n\u003Cul\u003E\u003Cli\u003E\nLine 5: You can\u0027t declare a function with \u0022class\u0022 in it\u0027s specifier. You can\u0027t have parameters in a class declaration.\n\u003C/li\u003E\n\u003Cli\u003E\nLine 10: Function names can\u0027t have \u0022.\u0022 characters in them.\n\u003C/li\u003E\n\u003Cli\u003E\nNowhere is there any implementation for any of these functions/classes\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nThe following is something like how I would envisage the plugin working (note: before you say it doesn\u0027t work, it\u0027s the start of a module\u00A0for syntax demonstration since that\u0027s the bit you\u0027re missing entirely)\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ELockHeadingModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EPartModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// add to parts to trigger locked heading mode when staged\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// module only used as a flag for the vessel module\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ELockAutoPilot\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EVesselModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override \u003C/span\u003E\u003Cspan\u003EActivation\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetActivation\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EActivation\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELoadedVessels\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EShouldBeActive\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E vessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eloaded\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EOnStart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E p in vessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EParts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ep\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EisActiveAndEnabled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E p\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EModules\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EContains\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003ELockHeadingModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;())\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        vessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAutopilot\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EEnable\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EVesselAutopilot\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAutopilotMode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ERetrograde\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebreak\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nPlease, atleast read through a C# tutorial and follow through the KSP wiki tutorial I linked earlier\n\u003C/p\u003E\n"},{"CreatedByName":"steedcrugeon","CreatedById":168050,"CreatedDateTime":"2016-10-04T07:56:53Z","Content":"\n\u003Cp\u003E\nThis, is the kind of clarification I was looking for. I greatly appreciate it. I\u0027m quite rusty at programming C# and this clearly shows it.\n\u003C/p\u003E\n\u003Cp\u003E\nThose first five lines make this much clearer already! I was under the impression that VS would only perceive the PartModule components if there were childed, I did not know you only need to \u0027flag\u0027 them in order for it to be visible to VS!\n\u003C/p\u003E\n\u003Cp\u003E\nThe reason I was using ModuleSAS was that from what I could read across from the released API was that it is parent to VesselAutopilot and I\u0027d need to set that. (this is what I mean about I cannot find anywhere to see a breakdown).\n\u003C/p\u003E\n\u003Cp\u003E\nI can see from your text I really was going about it entirely the wrong way. More reading for me then, thank you for the link I\u0027ll check it out shortly.\n\u003C/p\u003E\n\u003Cp\u003E\njust to see if\u00A0I understand correctly does this line:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eif (p.isActiveAndEnabled \u0026amp;\u0026amp; p.Modules.Contains\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;LockHeadingModule\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E())\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nmean that the part in question, as seen by KSP,\u00A0has been staged (Active)\u00A0and is currently being \u0027flown\u0027 (Enabled)\u00A0 and contains the LockHeadingModule would only function after the part has loaded? Meaning it would have to been loaded as the root part?\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI just want to make sure I\u0027m reading as how\u00A0I read it at the minute a part containing this module would override the controls if it were loaded separately. Would it need another line of code in order for it to activate after it was staged (if the part is not the root part\u00A0when loaded).\n\u003C/p\u003E\n\u003Cp\u003E\nthanks for your responses so far \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92871-crzyrndm/\u0026amp;do=hovercard\u0022 data-mentionid=\u002292871\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/92871-crzyrndm/\u0022 rel=\u0022\u0022\u003E@Crzyrndm\u003C/a\u003E, that have been very informative.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-10-04T08:27:10Z","Content":"\n\u003Cp\u003E\nWhat I meant by \u0022flag\u0022 is that I could then search for parts with it in the vesselmodule. ie. the presence of the module in a part acts as my condition for a behaviour\n\u003C/p\u003E\n\u003Cp\u003E\nThe logic for the vessel module:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nActiveAndEnabled: Checked part has been staged (That was the intention anyway. I can\u0027t recall if that\u0027s exactyly what the property means)\n\u003C/li\u003E\n\u003Cli\u003E\nModules.Contains\u0026lt;LockHeadingModule\u0026gt;(): Checked part contains the flag module (that I\u0027m using to trigger the behaviour)\n\u003C/li\u003E\n\u003Cli\u003E\nThe foreach loop goes through every part on the vessel, so it\u0027s not just the root part that gets checked\n\u003C/li\u003E\n\u003Cli\u003E\nThe activation condition of the vesselmodule indicates that it will run on any vessel spawned in the physics bubble (this is why I used the vessel module. You automatically get 1 per vessel instead of trying to synchronise part modules)\n\u003C/li\u003E\n\u003C/ul\u003E\n"},{"CreatedByName":"AndyMt","CreatedById":123144,"CreatedDateTime":"2016-10-04T10:40:10Z","Content":"\n\u003Cp\u003E\nJust an idea: you might look into what the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/78226-112-stagerecovery-recover-funds-from-dropped-stages-v164-050216/\u0022 rel=\u0022\u0022\u003EStageRecovery \u003C/a\u003Emod is doing. Because I think this is exactly covering the \u0022fall back into atmosphere and recover the thing\u0022 part.\n\u003C/p\u003E\n\u003Cp\u003E\nSo as a start you could just implement thrusting\u00A0retrograde and then let StageRecovery do the rest of the job.\n\u003C/p\u003E\n"}]}