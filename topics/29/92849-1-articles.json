{"TopicId":92849,"ForumId":29,"TopicTitle":"Refresh Part menu to show new KSPField","CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-14T20:15:38Z","PageNum":1,"Articles":[{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-14T20:15:38Z","Content":"\n\u003Cp\u003EAlright, I\u0027m looking at a method to refresh a part\u0027s right click window.\u003C/p\u003E\u003Cp\u003EThe KSPField I want to show/hide is the UI_FloatEdit from KSPAPI Extentions.\u003C/p\u003E\u003Cp\u003EWithout any code of my own, when I change the UI_FloatEdit from .guiActive = false to .guiActive = true, the part window refreshes automatically and starts showing the UI_FloatEdit field.\u003C/p\u003E\u003Cp\u003EHowever, when I change the UI_FloatEdit\u0027s .guiActive from true to false, the UI_FloatEdit stays visible until I refresh the right-click window manually by reopening it by right-clicking on the part again.\u003C/p\u003E\u003Cp\u003EDoes anyone know what is going on here? I need to either make it so the window refreshes itself both ways, or I need the code to manually refresh the part\u0027s right-click window myself.\u003C/p\u003E\u003Cp\u003EAnyone have any ideas?\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-12-15T10:30:05Z","Content":"\n\u003Cp\u003EThe main problem is that the list of opened windows is hidden so you can\u0027t access it without breaking some rules, but since the window prefab itself is exposed you can edit that to build yourself a way in:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// tracks open part windows\u003Cbr\u003Eclass PartActionWindows : MonoBehaviour\u003Cbr\u003E{\u003Cbr\u003E    private static readonly List\u0026lt;UIPartActionWindow\u0026gt; Windows = new List\u0026lt;UIPartActionWindow\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E    private void Start() { Windows.Add(gameObject.GetComponent\u0026lt;UIPartActionWindow\u0026gt;()); }\u003Cbr\u003E\u003Cbr\u003E    private void OnDestroy() { Windows.Remove(gameObject.GetComponent\u0026lt;UIPartActionWindow\u0026gt;()); }\u003Cbr\u003E\u003Cbr\u003E    public static List\u0026lt;UIPartActionWindow\u0026gt; Opened\u003Cbr\u003E    {\u003Cbr\u003E        get { return new List\u0026lt;UIPartActionWindow\u0026gt;(Windows); }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    public static void UpdateWindows() { Opened.ForEach(window =\u0026gt; window.displayDirty = true); }\u003Cbr\u003E\u003Cbr\u003E    public static void UpdateWindow(Part part)\u003Cbr\u003E    {\u003Cbr\u003E        var window = Opened.SingleOrDefault(w =\u0026gt; ReferenceEquals(w.part, part));\u003Cbr\u003E        if (window != null) window.displayDirty = true;\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// test it on the mk1pod\u003Cbr\u003E[KSPAddon(KSPAddon.Startup.MainMenu, true)]\u003Cbr\u003Eclass InstallModule : MonoBehaviour\u003Cbr\u003E{\u003Cbr\u003E    void Awake()\u003Cbr\u003E    {\u003Cbr\u003E        PartLoader.getPartInfoByName(\u0022mk1pod\u0022).partPrefab.AddModule(\u0022FloatEditTest\u0022);\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E[KSPAddon(KSPAddon.Startup.EditorAny, false)]\u003Cbr\u003Eclass AddWindowTracker : MonoBehaviour\u003Cbr\u003E{\u003Cbr\u003E    void Start()\u003Cbr\u003E    {\u003Cbr\u003E        var prefab = UIPartActionController.Instance.windowPrefab;\u003Cbr\u003E\u003Cbr\u003E        if (prefab.GetComponent\u0026lt;PartActionWindows\u0026gt;() == null)\u003Cbr\u003E            prefab.gameObject.AddComponent\u0026lt;PartActionWindows\u0026gt;();\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eclass FloatEditTest : PartModule\u003Cbr\u003E{\u003Cbr\u003E    [KSPField(isPersistant = true, guiActive = false, guiActiveEditor = false, guiName = \u0022Test Name\u0022, guiUnits = \u0022%\u0022,guiFormat = \u0022F0\u0022),\u003Cbr\u003E        KSPAPIExtensions.UI_FloatEdit(minValue = 0f,\u003Cbr\u003E                                    maxValue = 100f,\u003Cbr\u003E                                    incrementLarge = 25f,\u003Cbr\u003E                                    incrementSmall = 5f\u003Cbr\u003E                                    )]\u003Cbr\u003E    public float floatValue = 0f;\u003Cbr\u003E\u003Cbr\u003E    [KSPEvent(guiActive = true, guiName = \u0022Toggle FloatEdit\u0022, guiActiveEditor = true)]\u003Cbr\u003E    public void FloatEditToggle()\u003Cbr\u003E    {\u003Cbr\u003E        Fields[\u0022floatValue\u0022].guiActiveEditor = !Fields[\u0022floatValue\u0022].guiActiveEditor;\u003Cbr\u003E        //PartActionWindows.UpdateWindows();\u003Cbr\u003E        PartActionWindows.UpdateWindow(part);\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m not sure if this is a bug with KSPAPI extensions or not (or even stock) but it seems that UI_FloatEdit will initially always be visible even if you set guiActive[Editor] to false (as in above code: the field is initially visible) so you might have to handle that case yourself\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-15T10:37:52Z\u0022 title=\u002212/15/2014 10:37  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 15, 2014\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-15T15:22:06Z","Content":"\n\u003Cp\u003EThanks for that, will test as soon as I get home.\u003C/p\u003E\u003Cp\u003EThe odd thing is I\u0027m actually getting inconsistent behavior which makes me suspect I\u0027ve missed something. \u003C/p\u003E\u003Cp\u003EMy tests last night (after rewriting pretty much from scratch) showed different behavior that it no longer automatically showed itself when I went from .guiShowEditor = false to true like it did in my original tests. (It still did not show automatically on guiActive true to false so that did not change.)\u003C/p\u003E\u003Cp\u003EI\u0027m now wondering what I did different. \u003C/p\u003E\u003Cp\u003EI was also running those tests after getting home from a big family dinner so I suspect it is something that is going to make me /headdesk when I figure it out.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"SirDargon","CreatedById":118968,"CreatedDateTime":"2014-12-17T03:49:13Z","Content":"\n\u003Cp\u003EI would love to know if you find a way to get this to work as I\u0027m having the same problem!\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-31T21:53:52Z","Content":"\n\u003Cp\u003EAlright, I\u0027ve got this working.\u003C/p\u003E\u003Cp\u003ERather then doing Evil\u0027s approach above of hooking into the window so it executes as a window method, I set it up so I manually call the window refresh when I want to update.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//other code here that needs to update the window\u003Cbr\u003ErefreshPartWindow();\u003Cbr\u003E//continue other code\u003Cbr\u003E\u003Cbr\u003Eprivate void refreshPartWindow() //AGX: Refresh right-click part window to show/hide Groups slider\u003Cbr\u003E        {\u003Cbr\u003E            UIPartActionWindow[] partWins = FindObjectsOfType\u0026lt;UIPartActionWindow\u0026gt;();\u003Cbr\u003E            foreach(UIPartActionWindow partWin in partWins)\u003Cbr\u003E            {\u003Cbr\u003E                partWin.displayDirty = true;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that only open windows will be returned by the find objects line, 99% of the time there will only the one open so this is not a significant process load I don\u0027t think.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-12-31T22:48:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EAlright, I\u0027ve got this working.\u003Cp\u003ERather then doing Evil\u0027s approach above of hooking into the window so it executes as a window method, I set it up so I manually call the window refresh when I want to update.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EJust to clarify: mine doesn\u0027t hook into a window method, it does what yours does (.displayDirty = true). It just avoids using the very slow FindObjectsOfType (11.5ms per call on my machine) method by keeping a static list of active windows.\u003C/p\u003E\u003Cp\u003EMight be the paranoid C\u002B\u002B programmer in me in this case though \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-31T23:07:28Z\u0022 title=\u002212/31/2014 11:07  PM\u0022 data-short=\u00229 yr\u0022\u003EDecember 31, 2014\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-31T23:09:10Z","Content":"\n\u003Cp\u003EReally? Hmmm.\u003C/p\u003E\u003Cp\u003EI\u0027ll have another look at your code snippet, I don\u0027t think I fully understood it then.\u003C/p\u003E\u003Cp\u003EHaving said that, for this specific use I\u0027m going to leave it as is because I\u0027m editing someone else\u0027s mod I\u0027d rather use the method I can encapsulate within the code I\u0027m adding.\u003C/p\u003E\u003Cp\u003EI will run some high partcount ships through as a test to make sure the performance hit is not a big deal though.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-12-31T23:18:38Z","Content":"\n\u003Cp\u003EAs long as you\u0027re not running it every frame, you\u0027ll be okay. High part count ships shouldn\u0027t matter that much; it\u0027s a matter of searching ~18,000 items for a 1 part ship versus maybe ~18,900-~20,000 for a fairly large ship.\u003C/p\u003E\u003Cp\u003EThe problem comes when somebody uses it in an Update(): 11.5ms is enough to take a game running at 50 fps down to 31 fps all for the sake of a little button\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-12-31T23:43:56Z","Content":"\n\u003Cp\u003EAh, no. It runs once when the UI Slider is set to action groups to show the second slider to select a group, and once when the UI Slider moves to something else to hide the second slider.\u003C/p\u003E\u003Cp\u003ESounds like I\u0027ll be okay for now then. Still going to take another look at your code to actually understand it, FindObjectsOfType is something I\u0027d rather not have as my go-to option.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"}]}