{"TopicId":158330,"ForumId":29,"TopicTitle":"To other Modders: kOS font stuff might break other mods - can we find a solution together?","CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-28T13:42:16Z","PageNum":1,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-28T13:42:16Z","Content":"\n\u003Cp\u003E\nI\u0027m coming across what I think is a bug in Unity\u0027s font system that makes it hard for me to \u0022be nice\u0022 to other mods and not break them.\n\u003C/p\u003E\n\u003Cp\u003E\nThis problem is weird and what I\u0027ve learned so far is from a few weeks of on/off trial and error and experimentation.\u00A0 I could be wrong about the cause, but I\u0027ve barked up a lot of wrong trees already trying to find other possible causes before settling on what I\u0027m about to describe below as what I think is the cause of it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:16px;\u0022\u003ESo what\u0027s the problem?\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThese two Unity methods\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetOSInstalledFontNames\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECreateDynamicFontFromOSFont\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\ncan break fonts that are also in a Resource/Asset file if these steps happen in this order:\n\u003C/p\u003E\n\u003Cp\u003E\n1: Unity loads a font from Resource or Asset files, but hasn\u0027t had any occasion to draw anything in that font yet.\n\u003C/p\u003E\n\u003Cp\u003E\n2: Using Font.CreateDynamicFontFromOSFont(), You create another Font instance that is for a font the same font family as the one from step 1 above (i.e. loading \u0022Arial bold\u0022 when \u0022Arial\u0022 was loaded in step 1.)\n\u003C/p\u003E\n\u003Cp\u003E\n3: The font from step 2 (DynamicFontFromOSFont) gets rendered into some text.\n\u003C/p\u003E\n\u003Cp\u003E\n4: The font from step 1 (From the Resources or Asset file) gets rendered into some text.\n\u003C/p\u003E\n\u003Cp\u003E\nWhen you do the steps in that order, then Unity gets confused and seems to wipe out all the glyphs of BOTH instances of that font from then on (i.e both the one from the Resources and the one from the OS).\u00A0 From now on it will render all text in that font as blank, (and it now claims that all text drawn in that font is 0 pixels wide and 0 pixels high, so things like GUILayout buttons get shrunken to minimum size in addition to not being able to show the labels on things because the font is blank.)\n\u003C/p\u003E\n\u003Cp\u003E\nNote that if you swap steps 3 and 4 so the Resources font gets exercised in some way before the DynamicFontFromOSFont does, the bug does not happen! It only happens when the first attempt to draw something in the font instance that was built from the OS font call happens prior to the first attempt to draw something in the Resources instance of that font.\u00A0 Note that it\u0027s the order in which the fonts get USED to draw something that matters here, not the order in which they first get loaded.\u00A0 (i.e. you can swap steps 1 and 2 and it doesn\u0027t change the outcome).\n\u003C/p\u003E\n\u003Cp\u003E\nAs you can tell from the fact that I used \u0022Arial\u0022 as my example case above, this means when we do this in kOS, I \u003Cstrong\u003Ehave the chance to break every other mod that uses Unity\u0027s default GUI.skin\u003C/strong\u003E for something.\n\u003C/p\u003E\n\u003Cp\u003E\nOh, and this isn\u0027t just about using the legacy IMGUI.\u00A0 I noticed that the act of using the font *anywhere* in Unity is affected, even when I draw 3D hovering text in Arial in the game scene - if the Arial font has had this bug trigger, then that 3D text won\u0027t show up.\u00A0 I can trigger the bug by choosing to render font text into a Texture2D in memory that I don\u0027t even show on screen anywhere.\u00A0 Even rendering it that way triggers the same problem so long as I do it in the order shown above.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:16px;\u0022\u003EWhy did I want to do this?\u003C/span\u003E:\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAt this point, the person reading this might be thinking, \u0022Well then just don\u0027t do it!\u00A0 Stop using the OS fonts and instead ship with one and hardcode it.\u0022)\u00A0 So I feel I have to defend my desire to support doing this:\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m trying to let the user use any font on their OS as the kOS terminal font, and move away from our current technique of cutting and pasting regions from a texture file that contains images of the 128 ASCII chars.\u00A0 (For 2 reasons: Using a real font scales a lot better than stretching a bitmap image for those users who prefer the terminal to use a bigger font, and more importantly it would let you print to the terminal in your preferred language, for which you probably already have a font you like installed on your computer that\u0027s better for that purpose than whatever we might ship with.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:16px;\u0022\u003EBut wait, isn\u0027t it only a conflict when you actually try to RENDER the font?\u00A0 Isn\u0027t the user just picking one font, not every font on the OS?\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nTrue, but Unity does not expose any of the metadata about a font until after you load it, and even then you still have to actually render a few characters with it before all that you need to know manifests itself.\u00A0 If you haven\u0027t loaded a font from the OS yet, then the font\u0027s string name is literally the only thing you know about it.\u00A0 You don\u0027t know if it\u0027s bold, italic, etc (except from making a heuristic guess from looking for substrings in the font\u0027s name like \u0022this font\u0027s name has the word \u0027bold\u0027 in it.\u00A0 I guess it must be a bold font then.\u0022.\u00A0 Most importantly for my case - you can\u0027t tell if it\u0027s monospace or proportional until after you load it and try rendering a few characters with it.\u00A0 The font metadata isn\u0027t available through Unity.\u00A0 So I was doing a quick dummy render of a short string containing some wide and some narrow characters, and counting the pixels Unity reported it took to do so to find out if it\u0027s monospaced or not.\u00A0 This is relevant since I use the font to paint a terminal very fast by drawing each line of the terminal as a single string - I need to restrict the picks the user is allowed to the monospace fonts only.\u00A0 It\u0027s that test for monospace that mandates that I actually give each font an experimental test render, and it\u0027s doing that which caused me to trigger the bug this post is talking about.\u00A0 I thought this would be really slow at first (test render every font) but it turns out that even on a computer with a few thousand fonts installed it only takes a couple of seconds, and I only have to do it once and then never again (and I can throw away the font after I tested it so it\u0027s not eating up memory once I learned it\u0027s proportional).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003E\u003Cstrong\u003ESo why not just avoid it by forcing the order to come out the \u0022safe\u0022 way?\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAn obvious fix presents itself:\u00A0 Before trying to use any Font that comes from CreateDynamicFontFromOSFont, kOS could just make sure to iterate over every Font object that ii finds in the Resources and perform a dummy rendering with each of them.\u00A0 (i.e. Tell it to render \u0022Hello\u0022 into a Texture2D, then throw away the Texture2D, just to exercise the font a bit first which seems to prevent the bug.)\n\u003C/p\u003E\n\u003Cp\u003E\nI have tried that and it does work.... but... read on:\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m not in control of the order that OTHER mods do things in, nor am I in control of what order Unity chooses to call the Awake() and Start() methods of all the Monobehaviours from all the mods, nor am I in control of whether or not other mods might try to wait and lazy-load a font dynamically from an asset bundle later on during the game.\u00A0 This means there is no point in time when I can reliably answer \u0022yes\u0022 to the question: \u0022At this point have all the fonts that will ever get loaded, during the life of this process, from any Resource/Asset, been loaded and we know there will be no more?\u0022\u00A0 In order to reliably use this workaround to fix the problem, I have to do so at a point in time when that is true, otherwise there will be a Resources/Asset font I missed when I performed the \u0022foreach Resource font, render something small with it\u0022 code.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003E\u003Cstrong\u003ESo now to the questions for other modders:\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n(1) How many mods actually bother trying to ship with their own font?\u00A0 Then again, with SQUAD doing localizations in the next release, who knows if maybe even THEY might wait to load a font later on after game initialization so I can\u0027t rely on knowing if they will do so.\u00A0 Could it be so few mods that the solution is to simply see if we happen to break another mod and if so then react to that and work with the other modder to come up with a scheme to force a known loading order between the fonts used by our two mods?\n\u003C/p\u003E\n\u003Cp\u003E\n(2) Do I need to consider splitting this work off into a standalone font manager mod and then make kOS require it as a dependency? Then any modder that wants to load fonts should have to work through it instead of doing it on their own?\u00A0 (i.e. similar to other library-mods like the CommunityResourcePack, the goal of such a mod would be to make sure all font loading happens in one place where the order can be enforced to prevent the bug.)\u003Cbr\u003E\u003Cbr\u003E\n(3) Any suggestions for a workaround that I might not have tried?\u00A0 I\u0027m really not a Unity expert at all.\u00A0 The only things I know about it I know from doing kOS dev work.\u00A0 Yes, I am aware of the fact that Unity lazy-loads font glyphs (I found that out when trying to implement other parts of this system) and therefore the need to use Font.RequestCharactersInTexture() before attempting a test render to look at character size.\u00A0 But I suspect the bug above is somehow related to this lazy-loading feature misfiring in some way so the two different instances of the same-named font are stepping on each other\u0027s toes, or maybe Unity is getting fooled into thinking it already performed all the lazy-load work for both versions of the similarly named font when it really only did so for one of them.\u00A0 (Thus the font\u0027s data never gets populated because it thought it already did so?)\n\u003C/p\u003E\n\u003Cp\u003E\n(4) As KSP gets more international users, will more mods start considering using their own fonts so that even though this might not be a problem today it will become one soon so I still have to worry about it?\n\u003C/p\u003E\n\u003Cp\u003E\n(5) Is this a known Unity bug that was already fixed in a release of Unity but we don\u0027t have it yet because KSP is a few revisions behind?\u00A0 If so might the problem magically fix itself in the next KSP release?\u00A0 I tried searching Unity\u0027s issue tracker for font-related bugs and spent a long time walking through them and not finding anything that seemed related, before I gave up on trying to do that.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-28T13:50:09Z\u0022 title=\u002203/28/2017 01:50  PM\u0022 data-short=\u00227 yr\u0022\u003EMarch 28, 2017\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-03-28T18:05:49Z","Content":"\n\u003Cp\u003E\nYikes, that\u0027s a lot of text that I can\u0027t fully parse.\n\u003C/p\u003E\n\u003Cp\u003E\nUnfortunately, you are way beyond where I am with fonts and so can\u0027t actually help on the issue.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever I want to cast my vote as a modder who will not be including any font files.\n\u003C/p\u003E\n\u003Cp\u003E\nI have not looked at it yet personally, but my assumption is that by using the default GUI skin, that inherits whatever font is needed to correctly display the currently selected language is simply available for me to use without having to mess around with my own font (or font files).\n\u003C/p\u003E\n\u003Cp\u003E\nI would imagine most mods are going to deal with it this way as well, without kOS\u0027s terminal window that has prompted all this, it is worth the developer\u0027s time to mess around with fonts? I would expect the answer to be no for most mods, but there might be some that answer yes. (Which causes this whole issue.)\n\u003C/p\u003E\n\u003Cp\u003E\nMy only though is somehow hooking into Font.CreateDynamicFontFromOSFont() somehow so you can render the previously loaded fonts in the same font family as a work-around, but I don\u0027t think you can do that? (Although you\u0027ve shown me some pretty clever tricks before so I\u0027m still tossing the idea out.)\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2017-03-28T18:23:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223000355\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490708536\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs you can tell from the fact that I used \u0022Arial\u0022 as my example case above, this means when we do this in kOS, I \u003Cstrong\u003Ehave the chance to break every other mod that uses Unity\u0027s default GUI.skin\u003C/strong\u003E for something.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSomething sounds fishy here. Are you editing the default GUI.skin? Why?\n\u003C/p\u003E\n\u003Cp\u003E\nI couldn\u0027t reproduce the problem with the following:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nabstract class TestTextRenderer\n{\n    private Rect _rect = new Rect(0f, 0f, 300f, 300f);\n    private GUISkin _skin;\n    private string _title;\n    private string _text;\n\n    public virtual void Initialize()\n    {\n        _skin = GetSkin();\n        _title = GetTitle();\n        _rect.center = new Vector2(Screen.width * 0.5f, Screen.height * 0.5f);\n        _text = Enumerable.Range(0, 255).Select(idx =\u0026gt; ((char)idx).ToString()).Aggregate((s1, s2) =\u0026gt; s1 \u002B s2);\n        _text \u002B= _text \u002B= _text; // increase length a bit\n\n        Log.Normal(_title \u002B \u0022 font: \u0022 \u002B _skin.font.name \u002B \u0022: \u0022 \u002B string.Join(\u0022,\u0022, _skin.font.fontNames));\n    }\n\n    protected abstract GUISkin GetSkin();\n    protected abstract string GetTitle();\n\n    public void DrawWindow()\n    {\n        GUI.skin = _skin;\n        _rect = KSPUtil.ClampRectToScreen(GUILayout.Window(_title.GetHashCode(), _rect, DoWindow, _title));\n    }\n\n    private void DoWindow(int winid)\n    {\n        GUILayout.TextArea(_text);\n        GUI.DragWindow();\n    }\n}\n\nclass DynamicTextRenderer : TestTextRenderer\n{\n    private const string FontName = \u0022Arial Bold\u0022;\n    private const int FontSize = 16;\n\n    protected override GUISkin GetSkin()\n    {\n        var cloneSkin = UnityEngine.Object.Instantiate(HighLogic.Skin);\n\n        var dynFont = Font.CreateDynamicFontFromOSFont(FontName, FontSize);\n\n        cloneSkin.font = dynFont;\n\n        return cloneSkin;\n    }\n\n    protected override string GetTitle()\n    {\n        return \u0022Dynamic Text\u0022;\n    }\n}\n\nclass ResourceTextRenderer : TestTextRenderer\n{\n    private readonly Font[] _resourceFonts;\n    private const string FontName = \u0022Arial\u0022;\n\n    public ResourceTextRenderer([NotNull] Font[] resourceFonts)\n    {\n        if (resourceFonts == null) throw new ArgumentNullException(\u0022resourceFonts\u0022);\n        _resourceFonts = resourceFonts;\n    }\n\n    protected override GUISkin GetSkin()\n    {\n        var cloneSkin = UnityEngine.Object.Instantiate(HighLogic.Skin);\n\n        cloneSkin.font = _resourceFonts.First(f =\u0026gt; f.fontNames.Contains(FontName));\n\n        return cloneSkin;\n    }\n\n    protected override string GetTitle()\n    {\n        return \u0022Resource-loaded Font\u0022;\n    }\n}\n\n// controls ordering of text initialization and rendering\n//  1. init resource font\n//  2. init dyn font\n//  3. make sure dyn font renders first\n//  4. res font renders second\n[KSPAddon(KSPAddon.Startup.MainMenu, true)]\npublic class RenderOrderController : MonoBehaviour\n{\n    private DynamicTextRenderer _dynText = null;\n    private ResourceTextRenderer _resText = null;\n\n    private void Awake()\n    {\n        Font.textureRebuilt \u002B= FontOnTextureRebuilt;\n\n        _resText = new ResourceTextRenderer(Resources.FindObjectsOfTypeAll\u0026lt;Font\u0026gt;());\n        _resText.Initialize();\n\n        _dynText = new DynamicTextRenderer();\n        _dynText.Initialize();\n    }\n\n    private void OnDestroy()\n    {\n        Font.textureRebuilt -= FontOnTextureRebuilt;\n    }\n\n    private void FontOnTextureRebuilt(Font font)\n    {\n        Log.Warning(\u0022Font rebuilt: {0}; {1}\u0022, font.name, string.Join(\u0022,\u0022, font.fontNames));\n    }\n\n    private void OnGUI()\n    {\n        var origSkin = GUI.skin;\n\n        _dynText.DrawWindow();\n        GUI.skin = origSkin;\n\n        _resText.DrawWindow();\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-28T23:19:04Z","Content":"\n\u003Cp\u003E\n@xEvilReeperx:\n\u003C/p\u003E\n\u003Cp\u003E\nThis comment doesn\u0027t appear to match the code.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n//  3. make sure dyn font renders first\n//  4. res font renders second\u003C/pre\u003E\n\u003Cp\u003E\nIn the code you pasted, the order is this way around:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n        _resText = new ResourceTextRenderer(Resources.FindObjectsOfTypeAll\u0026lt;Font\u0026gt;());\n        _resText.Initialize();\n\n        _dynText = new DynamicTextRenderer();\n        _dynText.Initialize();\u003C/pre\u003E\n\u003Cp\u003E\nAlso, I don\u0027t think I\u0027m editing the GUI skin.\u00A0 It seems once the problem triggers, it\u0027s the font itself that breaks, given that it causes attempts to perform a render to an in-memory texture2D (outside the GUI system) to also render as zero-width, zero-height glyphs.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-28T23:25:35Z\u0022 title=\u002203/28/2017 11:25  PM\u0022 data-short=\u00227 yr\u0022\u003EMarch 28, 2017\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2017-03-29T03:56:22Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/63481-steven-mading/\u0026amp;do=hovercard\u0022 data-mentionid=\u002263481\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/63481-steven-mading/\u0022 rel=\u0022\u0022\u003E@Steven Mading\u003C/a\u003E 3 and 4 are for rendering done in OnGUI. Those lines are for 1 and 2 to match the order of initialization you specified in the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-29T04:02:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223000619\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490724349\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI would imagine most mods are going to deal with it this way as well, without kOS\u0027s terminal window that has prompted all this, it is worth the developer\u0027s time to mess around with fonts? I would expect the answer to be no for most mods, but there might be some that answer yes. (Which causes this whole issue.\n\u003C/p\u003E\n\u003Cp\u003E\nMy only though is somehow hooking into Font.CreateDynamicFontFromOSFont() somehow so you can render the previously loaded fonts in the same font family as a work-around, but I don\u0027t think you can do that? (Although you\u0027ve shown me some pretty clever tricks before so I\u0027m still tossing the idea out.)\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI can see the value in limiting font choices in an application.\u00A0 A consistent looking interface is handy.\u00A0 (i.e. choose a few fonts that cover your needs and re-use them everywhere instead of having a new font for each thing the user sees.)\u00A0 What made this case different was kOS\u0027s need for a monospace font (all of KSP\u0027s shippped fonts are proportional), and my desire to let people use their native language if they like, and I\u0027m not qualified to pick a good font for each language.\u00A0 (And even though yes, I\u0027m trying to let the user pick their own font, I\u0027m not trying to let them display ten different fonts at once.\u00A0 I\u0027m letting the user pick one font that all of kOS will use.)\n\u003C/p\u003E\n\u003Cp\u003E\nIf I hadn\u0027t come across the need for a monospace font, I\u0027d probably just be using KSP\u0027s default skin for everything too.\u00A0 For every GUI widget it draws that\u0027s NOT the terminal\u0027s screen area, kOS is just using the fonts of HighLogic.skin or GUI.skin, like I imagine every other modder probably is.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for \u0022render the previously loaded fonts in the same font family\u0022, I sort of covered my thoughts on that in my wall of text up above, but here\u0027s the in-a-nutshell version of what I said up there:\u00A0 (1) Unity doesn\u0027t tell me what family a font is in.\u00A0 That information isn\u0027t exposed to Unity Programs so I\u0027d have to perform a heuristic guess from examining substrings of the font\u0027s name, and that sounds very fragile and error-prone to me. (2) I\u0027d need a guaranteed point in time when I know no other mods will be loading any more fonts, and wait for that to happen before I attempt to do the pre-rendering of Resource fonts, otherwise I\u0027ll miss some that aren\u0027t there yet.\u00A0 Given\u00A0 that a mod is allowed to open an asset file at runtime whenever it feels like, there is no such guaranteed time.\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-29T04:18:35Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223001263\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490759782\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 minutes ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/63481-steven-mading/\u0026amp;do=hovercard\u0022 data-mentionid=\u002263481\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/63481-steven-mading/\u0022 rel=\u0022\u0022\u003E@Steven Mading\u003C/a\u003E 3 and 4 are for rendering done in OnGUI. Those lines are for 1 and 2 to match the order of initialization you specified in the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOkay, that\u0027s right.\u00A0 It\u0027s hard to trace your code\u0027s order of execution.\n\u003C/p\u003E\n\u003Cp\u003E\nIs this a test you performed with this code and this code *only*, as the only existing mod in KSP, or was this added to an installation that had other mods too?\u00A0 (It matters because if *any* other mod uses the Arial font for something first, then that would prevent the bug from manifesting, if I\u0027m right about my guess as to the trigger conditions.) I will try your test case and see if I can reproduce your stated behavior that it works okay, but I don\u0027t see anything you\u0027re doing differently from what I\u0027m doing in the more complex full code of kOS.\u00A0 I\u0027ll work out whether I can trigger the bug with the minimal case possible.\u00A0 Right now we have a complex case that triggers it (the kOS mod in development in my branch) and a simple case that does not (your code example).\u00A0 I need to start slowly changing your example one thing at a time until I hit the change that triggers it, to help narrow down the problem.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2017-03-29T04:29:22Z","Content":"\n\u003Cp\u003E\nThat mod only. Yes I knew it\u0027s pretty ugly code, it was just slapped together to check things out\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-29T04:34:45Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223001281\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490761762\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat mod only. Yes I knew it\u0027s pretty ugly code, it was just slapped together to check things out\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNo need to apologise. I appreciate the help.\u00A0 I was more apologising for failing to follow it properly.\u00A0 If your example does NOT trigger the bug and my code DOES then at least that gives me something to start from to find a minimum case that triggers it.\u00A0 It\u0027s a matter of making your example more complex slowly, one thing at a time, adding the stuff my code does differently, until I hit a point where the bug starts happening.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-29T06:22:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223001281\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490761762\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat mod only. Yes I knew it\u0027s pretty ugly code, it was just slapped together to check things out\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOkay, I edited your example to make it trigger the bug reliably for me (at least on my computer - your mileage may vary).\n\u003C/p\u003E\n\u003Cp\u003E\nThe change I had to do was to add the test I\u0027m doing for monospaced-ness of the fonts on the computer.\u00A0 This test involves the use of Font.RequestCharactersInTexture() and Font.GetCharacterInfo().\n\u003C/p\u003E\n\u003Cp\u003E\nThis is the \u0022attempt to render something in dynamic fonts\u0022 that seems to trigger the bug, but only if it happens *before* the first use of the Resources-built-in Arial font.\u00A0 If you fiddle with the ordering of my millisecond timestamps in the code pasted below to make it so the first _resText.DrawWindow() happens *prior* to the first time I try my monospace-test loop across all fonts, then it doesn\u0027t trigger the bug.\n\u003C/p\u003E\n\u003Cp\u003E\n(It\u0027s explained in the comments in the code pasted below).\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, notice that my edited version loops over every dynamic OS font and tries to get the character info about all of them in the little monospace test.\u00A0 I tried to reduce my example a bit by JUST testing for the Dynamic OS Arial font *only* rather than all of the fonts, and that didn\u0027t trigger the bug anymore.\u00A0 I haven\u0027t worked out yet *which* of the fonts is actually triggering the problem when I try to dynamically query some CharacterInfo from it, but just doing \u0022Arial\u0022 only doesn\u0027t trigger it.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECollections\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGeneric\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eusing\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELinq\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nabstract \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETestTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ERect\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _rect \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ERect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E300f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E300f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGUISkin\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _skin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string _title\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string _text\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evirtual\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EInitialize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _skin \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _title \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetTitle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _rect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecenter \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EVector2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EScreen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ewidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.5f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EScreen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eheight \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.5f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _text \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEnumerable\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ERange\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E255\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan\u003ESelect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eidx \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Echar\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eidx\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E).\u003C/span\u003E\u003Cspan\u003EToString\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()).\u003C/span\u003E\u003Cspan\u003EAggregate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Es1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E s2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E s1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E s2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _text \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _text \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _text\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// increase length a bit\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_title \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 font: \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _skin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ename \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022: \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EJoin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022,\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _skin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfontNames\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E abstract \u003C/span\u003E\u003Cspan\u003EGUISkin\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E abstract string \u003C/span\u003E\u003Cspan\u003EGetTitle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EDrawWindow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        GUI\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eskin \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _skin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _rect \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EKSPUtil\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EClampRectToScreen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EGUILayout\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWindow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_title\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetHashCode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(),\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _rect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EDoWindow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _title\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EDoWindow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E winid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003EGUILayout\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ETextArea\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E_text\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        GUI\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EDragWindow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EDynamicTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETestTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Econst\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string \u003C/span\u003E\u003Cspan\u003EFontName\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Arial\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Econst\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFontSize\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E13\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override \u003C/span\u003E\u003Cspan\u003EGUISkin\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        var cloneSkin \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EObject\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInstantiate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EHighLogic\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ESkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        var dynFont \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECreateDynamicFontFromOSFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EFontName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFontSize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        cloneSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efont \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E dynFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cloneSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override string \u003C/span\u003E\u003Cspan\u003EGetTitle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Dynamic Text\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EResourceTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETestTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E readonly \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _resourceFonts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Econst\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string \u003C/span\u003E\u003Cspan\u003EFontName\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Arial\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EResourceTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E resourceFonts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EresourceFonts \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethrow\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EArgumentNullException\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022resourceFonts\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _resourceFonts \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E resourceFonts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override \u003C/span\u003E\u003Cspan\u003EGUISkin\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        var cloneSkin \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EObject\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInstantiate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EHighLogic\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ESkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        cloneSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efont \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _resourceFonts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFirst\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ef \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfontNames\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EContains\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EFontName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cloneSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprotected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override string \u003C/span\u003E\u003Cspan\u003EGetTitle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Resource-loaded Font\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// controls ordering of text initialization and rendering\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//  1. init resource font\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//  2. init dyn font\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//  3. make sure dyn font renders first\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//  4. res font renders second\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan\u003EKSPAddon\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EKSPAddon\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EStartup\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInstantly\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ERenderOrderController\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMonoBehaviour\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EDynamicTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _dynText \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EResourceTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E _resText \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EAwake\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EtextureRebuilt \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFontOnTextureRebuilt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        _resText \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EResourceTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EResources\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFindObjectsOfTypeAll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;());\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _resText\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInitialize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        _dynText \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EDynamicTextRenderer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        _dynText\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EInitialize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EOnDestroy\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EtextureRebuilt \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFontOnTextureRebuilt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFontOnTextureRebuilt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E font\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Font rebuilt: {0}; {1}\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E font\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EJoin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022,\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E font\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfontNames\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// These following timestamps simulate the order in which the parts of the code happen.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// When they happen in a different order, that changes whether the bug happens:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// The timing is being controlled this way because if you just do all the steps\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// during the same OnGUI pass, then the order they happen within the body of the\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// one OnGUI call doesn\u0027t matter at all.  It only matters\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// when they happen in different passes (my kOS code is doing it in different\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// classes, not all in the same one like in this test example program):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// These don\u0027t have to be a whole two seconds apart from each other like this.  I only\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// did it that slowly to make it easier to watch it happen on the screen:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// This is the ordering that triggers the bug.  (the Res font window is blank, but the Dyn font window is okay).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Elong\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E checkAllFontsTime \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Elong\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E startResFontTime \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Elong\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E startDynFontTime \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E6000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Doing it in this order will avoid the bug:  (comment out the above lines and enable these instead):\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// private long startResFontTime = 2000;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// private long checkAllFontsTime = 4000;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// private long startDynFontTime = 6000;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EDiagnostics\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EStopwatch\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E timer \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EOnGUI\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// On the first OnGui pass, start the timer:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etimer \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            timer \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EDiagnostics\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EStopwatch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            timer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EStart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        var origSkin \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E GUI\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eskin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etimer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EElapsedMilliseconds\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E startResFontTime\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            GUI\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eskin \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E origSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            _resText\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EDrawWindow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etimer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EElapsedMilliseconds\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E startDynFontTime\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            GUI\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eskin \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E origSkin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            _dynText\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EDrawWindow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etimer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EElapsedMilliseconds\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E checkAllFontsTime\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003ECheckAllFonts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            checkAllFontsTime \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E999999999999\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Unlike the always-repainting text windows, this we only want to happen once.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ECheckAllFonts\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E fontSize \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E13\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// font size to test the fonts at.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// The bug only seems to happen when we iterate through all the fonts installed to build the\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// list, like this is simulating, and do so before the Arial font gets exercised.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring fontName in \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetOSInstalledFontNames\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E())\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E tempFont \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECreateDynamicFontFromOSFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfontName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E fontSize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E result \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EIsFontMonospaced\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EtempFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFormat\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Font \\\u0022{0}\\\u0022, monospaced={1}, therefore it {2} be included in the choices list.\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                fontName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E result\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eresult \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022would\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022wouldn\u0027t\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// To xEvilReeperx:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//   Here is a method copied verbatim from the kOS code that\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//   I used to perform the monospace check on each font.  I moved it into your\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//   example to see if it triggers the problem when exercised during\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//   the OnGUI call.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// -----------------\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;summary\u0026gt;A tool we can use to check if a font is monospaced by\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// comparing the width of certain key letters.\u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EIsFontMonospaced\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003ECharacterInfo\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E prevWidth\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Unity Lazy-loads the character info for the font.  Until you try\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// to actually render a character, it\u0027s CharacterInfo isn\u0027t populated\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// yet (all fields for the character\u0027s dimensions return a bogus zero value).\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// This next call forces Unity to load the information for the given characters\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// even though they haven\u0027t been rendered yet:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ERequestCharactersInTexture\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022XiW _i:\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetCharacterInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027X\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        prevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022eraseme: X advance is \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E prevWidth\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetCharacterInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027i\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        prevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022eraseme: i advance is \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E prevWidth\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetCharacterInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027W\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        prevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022eraseme: W advance is \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E prevWidth\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetCharacterInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027 \u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        prevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022eraseme: \u0027 \u0027 advance is \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E prevWidth\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetCharacterInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027_\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        prevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022eraseme: _ advance is \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E prevWidth\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        f\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetCharacterInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027:\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E out chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EprevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        prevWidth \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E chInfo\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eadvance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan\u003ESystem\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022eraseme: : advance is \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E prevWidth\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// That\u0027s probably a good enough test.  If all the above characters\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// have the same width, there\u0027s really good chance this is monospaced.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-29T06:24:24Z\u0022 title=\u002203/29/2017 06:24  AM\u0022 data-short=\u00227 yr\u0022\u003EMarch 29, 2017\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003Cbr\u003EForgot to paste the code snip.\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2017-03-29T14:06:14Z","Content":"\n\u003Cp\u003E\nOdd, your example works fine on my system. Do you end up triggering any texture rebuilds while running yours? Are you testing with the pre-release or the current version?\n\u003C/p\u003E\n\u003Cp\u003E\nWin7\n\u003C/p\u003E\n\u003Cp\u003E\nGTX 960\n\u003C/p\u003E\n\u003Cp\u003E\nCurrent version (not localization pre-release)\n\u003C/p\u003E\n\u003Cp\u003E\nInstalled fonts according to Font.GetOSInstalledFontNames:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nAharoni Bold\u003Cbr\u003E\nAndalus\u003Cbr\u003E\nAngsana New\u003Cbr\u003E\nAngsana New Bold\u003Cbr\u003E\nAngsana New Italic\u003Cbr\u003E\nAngsana New Bold Italic\u003Cbr\u003E\nAngsanaUPC\u003Cbr\u003E\nAngsanaUPC Bold\u003Cbr\u003E\nAngsanaUPC Italic\u003Cbr\u003E\nAngsanaUPC Bold Italic\u003Cbr\u003E\nAparajita\u003Cbr\u003E\nAparajita Bold\u003Cbr\u003E\nAparajita Italic\u003Cbr\u003E\nAparajita Bold Italic\u003Cbr\u003E\nArabic Typesetting\u003Cbr\u003E\nArial\u003Cbr\u003E\nArial Bold\u003Cbr\u003E\nArial Italic\u003Cbr\u003E\nArial Bold Italic\u003Cbr\u003E\nArimo\u003Cbr\u003E\nArimo Bold\u003Cbr\u003E\nArimo Italic\u003Cbr\u003E\nArimo Bold Italic\u003Cbr\u003E\nBatang\u003Cbr\u003E\nBatangChe\u003Cbr\u003E\nBrowallia New\u003Cbr\u003E\nBrowallia New Bold\u003Cbr\u003E\nBrowallia New Italic\u003Cbr\u003E\nBrowallia New Bold Italic\u003Cbr\u003E\nBrowalliaUPC\u003Cbr\u003E\nBrowalliaUPC Bold\u003Cbr\u003E\nBrowalliaUPC Italic\u003Cbr\u003E\nBrowalliaUPC Bold Italic\u003Cbr\u003E\nBuxton Sketch\u003Cbr\u003E\nCalibri\u003Cbr\u003E\nCalibri Bold\u003Cbr\u003E\nCalibri Italic\u003Cbr\u003E\nCalibri Bold Italic\u003Cbr\u003E\nCambria\u003Cbr\u003E\nCambria Bold\u003Cbr\u003E\nCambria Italic\u003Cbr\u003E\nCambria Bold Italic\u003Cbr\u003E\nCambria Math\u003Cbr\u003E\nCandara\u003Cbr\u003E\nCandara Bold\u003Cbr\u003E\nCandara Italic\u003Cbr\u003E\nCandara Bold Italic\u003Cbr\u003E\nComic Sans MS\u003Cbr\u003E\nComic Sans MS Bold\u003Cbr\u003E\nConsolas\u003Cbr\u003E\nConsolas Bold\u003Cbr\u003E\nConsolas Italic\u003Cbr\u003E\nConsolas Bold Italic\u003Cbr\u003E\nConstantia\u003Cbr\u003E\nConstantia Bold\u003Cbr\u003E\nConstantia Italic\u003Cbr\u003E\nConstantia Bold Italic\u003Cbr\u003E\nCorbel\u003Cbr\u003E\nCorbel Bold\u003Cbr\u003E\nCorbel Italic\u003Cbr\u003E\nCorbel Bold Italic\u003Cbr\u003E\nCordia New\u003Cbr\u003E\nCordia New Bold\u003Cbr\u003E\nCordia New Italic\u003Cbr\u003E\nCordia New Bold Italic\u003Cbr\u003E\nCordiaUPC\u003Cbr\u003E\nCordiaUPC Bold\u003Cbr\u003E\nCordiaUPC Italic\u003Cbr\u003E\nCordiaUPC Bold Italic\u003Cbr\u003E\nCourier New\u003Cbr\u003E\nCourier New Bold\u003Cbr\u003E\nCourier New Italic\u003Cbr\u003E\nCourier New Bold Italic\u003Cbr\u003E\nCuprum\u003Cbr\u003E\nCuprum Bold\u003Cbr\u003E\nCuprum Italic\u003Cbr\u003E\nCuprum Bold Italic\u003Cbr\u003E\nDFKai-SB\u003Cbr\u003E\nDaunPenh\u003Cbr\u003E\nDavid\u003Cbr\u003E\nDavid Bold\u003Cbr\u003E\nDejaVu Sans\u003Cbr\u003E\nDejaVu Sans Bold\u003Cbr\u003E\nDejaVu Sans Italic\u003Cbr\u003E\nDejaVu Sans Bold Italic\u003Cbr\u003E\nDejaVu Sans Mono\u003Cbr\u003E\nDejaVu Sans Mono Bold\u003Cbr\u003E\nDejaVu Sans Mono Italic\u003Cbr\u003E\nDejaVu Sans Mono Bold Italic\u003Cbr\u003E\nDejaVu Serif\u003Cbr\u003E\nDejaVu Serif Bold\u003Cbr\u003E\nDejaVu Serif Italic\u003Cbr\u003E\nDejaVu Serif Bold Italic\u003Cbr\u003E\nDengXian\u003Cbr\u003E\nDilleniaUPC\u003Cbr\u003E\nDilleniaUPC Bold\u003Cbr\u003E\nDilleniaUPC Italic\u003Cbr\u003E\nDilleniaUPC Bold Italic\u003Cbr\u003E\nDokChampa\u003Cbr\u003E\nDotum\u003Cbr\u003E\nDotumChe\u003Cbr\u003E\nEbrima\u003Cbr\u003E\nEbrima Bold\u003Cbr\u003E\nEstrangelo Edessa\u003Cbr\u003E\nEucrosiaUPC\u003Cbr\u003E\nEucrosiaUPC Bold\u003Cbr\u003E\nEucrosiaUPC Italic\u003Cbr\u003E\nEucrosiaUPC Bold Italic\u003Cbr\u003E\nEuphemia\u003Cbr\u003E\nFangSong\u003Cbr\u003E\nFrankRuehl\u003Cbr\u003E\nFranklin Gothic Medium\u003Cbr\u003E\nFranklin Gothic Medium Italic\u003Cbr\u003E\nFreesiaUPC\u003Cbr\u003E\nFreesiaUPC Bold\u003Cbr\u003E\nFreesiaUPC Italic\u003Cbr\u003E\nFreesiaUPC Bold Italic\u003Cbr\u003E\nGabriola\u003Cbr\u003E\nGautami\u003Cbr\u003E\nGautami Bold\u003Cbr\u003E\nGentium Basic\u003Cbr\u003E\nGentium Basic Bold\u003Cbr\u003E\nGentium Basic Italic\u003Cbr\u003E\nGentium Basic Bold Italic\u003Cbr\u003E\nGentium Book Basic\u003Cbr\u003E\nGentium Book Basic Bold\u003Cbr\u003E\nGentium Book Basic Italic\u003Cbr\u003E\nGentium Book Basic Bold Italic\u003Cbr\u003E\nGeorgia\u003Cbr\u003E\nGeorgia Bold\u003Cbr\u003E\nGeorgia Italic\u003Cbr\u003E\nGeorgia Bold Italic\u003Cbr\u003E\nGisha\u003Cbr\u003E\nGisha Bold\u003Cbr\u003E\nGulim\u003Cbr\u003E\nGulimChe\u003Cbr\u003E\nGungsuh\u003Cbr\u003E\nGungsuhChe\u003Cbr\u003E\nImpact\u003Cbr\u003E\nIrisUPC\u003Cbr\u003E\nIrisUPC Bold\u003Cbr\u003E\nIrisUPC Italic\u003Cbr\u003E\nIrisUPC Bold Italic\u003Cbr\u003E\nIskoola Pota\u003Cbr\u003E\nIskoola Pota Bold\u003Cbr\u003E\nJasmineUPC\u003Cbr\u003E\nJasmineUPC Bold\u003Cbr\u003E\nJasmineUPC Italic\u003Cbr\u003E\nJasmineUPC Bold Italic\u003Cbr\u003E\nKaiTi\u003Cbr\u003E\nKalinga\u003Cbr\u003E\nKalinga Bold\u003Cbr\u003E\nKartika\u003Cbr\u003E\nKartika Bold\u003Cbr\u003E\nKhmer UI\u003Cbr\u003E\nKhmer UI Bold\u003Cbr\u003E\nKodchiangUPC\u003Cbr\u003E\nKodchiangUPC Bold\u003Cbr\u003E\nKodchiangUPC Italic\u003Cbr\u003E\nKodchiangUPC Bold Italic\u003Cbr\u003E\nKokila\u003Cbr\u003E\nKokila Bold\u003Cbr\u003E\nKokila Italic\u003Cbr\u003E\nKokila Bold Italic\u003Cbr\u003E\nLao UI\u003Cbr\u003E\nLao UI Bold\u003Cbr\u003E\nLatha\u003Cbr\u003E\nLatha Bold\u003Cbr\u003E\nLeelawadee\u003Cbr\u003E\nLeelawadee Bold\u003Cbr\u003E\nLevenim MT\u003Cbr\u003E\nLevenim MT Bold\u003Cbr\u003E\nLilyUPC\u003Cbr\u003E\nLilyUPC Bold\u003Cbr\u003E\nLilyUPC Italic\u003Cbr\u003E\nLilyUPC Bold Italic\u003Cbr\u003E\nLucida Console\u003Cbr\u003E\nLucida Sans Unicode\u003Cbr\u003E\nMS Gothic\u003Cbr\u003E\nMS Mincho\u003Cbr\u003E\nMS PGothic\u003Cbr\u003E\nMS PMincho\u003Cbr\u003E\nMS UI Gothic\u003Cbr\u003E\nMV Boli\u003Cbr\u003E\nMalgun Gothic\u003Cbr\u003E\nMalgun Gothic Bold\u003Cbr\u003E\nMangal\u003Cbr\u003E\nMangal Bold\u003Cbr\u003E\nMarlett\u003Cbr\u003E\nMeiryo\u003Cbr\u003E\nMeiryo Bold\u003Cbr\u003E\nMeiryo Italic\u003Cbr\u003E\nMeiryo Bold Italic\u003Cbr\u003E\nMeiryo UI\u003Cbr\u003E\nMeiryo UI Bold\u003Cbr\u003E\nMeiryo UI Italic\u003Cbr\u003E\nMeiryo UI Bold Italic\u003Cbr\u003E\nMicra\u003Cbr\u003E\nMicraC\u003Cbr\u003E\nMicraC Bold\u003Cbr\u003E\nMicrosoft Himalaya\u003Cbr\u003E\nMicrosoft JhengHei\u003Cbr\u003E\nMicrosoft JhengHei Bold\u003Cbr\u003E\nMicrosoft MHei\u003Cbr\u003E\nMicrosoft MHei Bold\u003Cbr\u003E\nMicrosoft NeoGothic\u003Cbr\u003E\nMicrosoft NeoGothic Bold\u003Cbr\u003E\nMicrosoft New Tai Lue\u003Cbr\u003E\nMicrosoft New Tai Lue Bold\u003Cbr\u003E\nMicrosoft PhagsPa\u003Cbr\u003E\nMicrosoft PhagsPa Bold\u003Cbr\u003E\nMicrosoft Sans Serif\u003Cbr\u003E\nMicrosoft Tai Le\u003Cbr\u003E\nMicrosoft Tai Le Bold\u003Cbr\u003E\nMicrosoft Uighur\u003Cbr\u003E\nMicrosoft YaHei\u003Cbr\u003E\nMicrosoft YaHei Bold\u003Cbr\u003E\nMicrosoft Yi Baiti\u003Cbr\u003E\nMingLiU\u003Cbr\u003E\nMingLiU-ExtB\u003Cbr\u003E\nMingLiU_HKSCS\u003Cbr\u003E\nMingLiU_HKSCS-ExtB\u003Cbr\u003E\nMiriam\u003Cbr\u003E\nMiriam Fixed\u003Cbr\u003E\nMongolian Baiti\u003Cbr\u003E\nMoolBoran\u003Cbr\u003E\nNSimSun\u003Cbr\u003E\nNarkisim\u003Cbr\u003E\nNyala\u003Cbr\u003E\nOpenSymbol\u003Cbr\u003E\nPMingLiU\u003Cbr\u003E\nPMingLiU-ExtB\u003Cbr\u003E\nPalatino Linotype\u003Cbr\u003E\nPalatino Linotype Bold\u003Cbr\u003E\nPalatino Linotype Italic\u003Cbr\u003E\nPalatino Linotype Bold Italic\u003Cbr\u003E\nPlantagenet Cherokee\u003Cbr\u003E\nRaavi\u003Cbr\u003E\nRaavi Bold\u003Cbr\u003E\nRod\u003Cbr\u003E\nSakkal Majalla\u003Cbr\u003E\nSakkal Majalla Bold\u003Cbr\u003E\nSegoe Marker\u003Cbr\u003E\nSegoe Print\u003Cbr\u003E\nSegoe Print Bold\u003Cbr\u003E\nSegoe Script\u003Cbr\u003E\nSegoe Script Bold\u003Cbr\u003E\nSegoe UI\u003Cbr\u003E\nSegoe UI Bold\u003Cbr\u003E\nSegoe UI Italic\u003Cbr\u003E\nSegoe UI Bold Italic\u003Cbr\u003E\nSegoe UI Symbol\u003Cbr\u003E\nSegoe WP\u003Cbr\u003E\nSegoe WP Bold\u003Cbr\u003E\nShonar Bangla\u003Cbr\u003E\nShonar Bangla Bold\u003Cbr\u003E\nShruti\u003Cbr\u003E\nShruti Bold\u003Cbr\u003E\nSimHei\u003Cbr\u003E\nSimSun\u003Cbr\u003E\nSimSun-ExtB\u003Cbr\u003E\nSimplified Arabic\u003Cbr\u003E\nSimplified Arabic Bold\u003Cbr\u003E\nSimplified Arabic Fixed\u003Cbr\u003E\nSketchFlow Print\u003Cbr\u003E\nSylfaen\u003Cbr\u003E\nSymbol\u003Cbr\u003E\nTahoma\u003Cbr\u003E\nTahoma Bold\u003Cbr\u003E\nTele-Marines\u003Cbr\u003E\nTimes New Roman\u003Cbr\u003E\nTimes New Roman Bold\u003Cbr\u003E\nTimes New Roman Italic\u003Cbr\u003E\nTimes New Roman Bold Italic\u003Cbr\u003E\nTraditional Arabic\u003Cbr\u003E\nTraditional Arabic Bold\u003Cbr\u003E\nTrebuchet MS\u003Cbr\u003E\nTrebuchet MS Bold\u003Cbr\u003E\nTrebuchet MS Italic\u003Cbr\u003E\nTrebuchet MS Bold Italic\u003Cbr\u003E\nTunga\u003Cbr\u003E\nTunga Bold\u003Cbr\u003E\nUtsaah\u003Cbr\u003E\nUtsaah Bold\u003Cbr\u003E\nUtsaah Italic\u003Cbr\u003E\nUtsaah Bold Italic\u003Cbr\u003E\nVani\u003Cbr\u003E\nVani Bold\u003Cbr\u003E\nVerdana\u003Cbr\u003E\nVerdana Bold\u003Cbr\u003E\nVerdana Italic\u003Cbr\u003E\nVerdana Bold Italic\u003Cbr\u003E\nVijaya\u003Cbr\u003E\nVijaya Bold\u003Cbr\u003E\nVrinda\u003Cbr\u003E\nVrinda Bold\u003Cbr\u003E\nWebdings\u003Cbr\u003E\nWingdings\u003Cbr\u003E\nWingdings 3\u003Cbr\u003E\nWoWsSymbol\u003Cbr\u003E\nXVMSymbol\u003Cbr\u003E\nYu Gothic\u003Cbr\u003E\nYu Gothic Bold\u003Cbr\u003E\ndynamic\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-30T02:03:39Z\u0022 title=\u002203/30/2017 02:03  AM\u0022 data-short=\u00227 yr\u0022\u003EMarch 30, 2017\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-30T01:35:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223001600\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490796374\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOdd, your example works fine on my system. Do you end up triggering any texture rebuilds while running yours? Are you testing with the pre-release or the current version?\n\u003C/p\u003E\n\u003Cp\u003E\nWin7\n\u003C/p\u003E\n\u003Cp\u003E\nGTX 960\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWin7, Nvidia GTX 970, current release of KSP (not pre-release build).\u00A0 I didn\u0027t check for textture rebuilds but I\u0027ll look at it tonight when I try again.\n\u003C/p\u003E\n\u003Cp\u003E\nPerhaps the difference in our results has to do with exactly which fonts are installed on the system.\u00A0 Maybe one particular font is breaking it for me when I iterate over all the fonts.\u00A0 I know that when I don\u0027t iterate over all the fonts and just do the Arial font onlyl, I don\u0027t trigger the bug.\u00A0 I could try culling the list down a few fonts at a time until it starts working to see if I can narrow down which causes the fail.\u00A0 It\u0027s also possible that it\u0027s just the sheer number of fonts and that causing texture rebuilds differently.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-30T01:40:04Z\u0022 title=\u002203/30/2017 01:40  AM\u0022 data-short=\u00227 yr\u0022\u003EMarch 30, 2017\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-03-30T06:31:06Z","Content":"\n\u003Cp\u003E\nI think I have a solution to my problem (that may also render moot the need for a shared font manager mod as described above, if my fix is reliable).\n\u003C/p\u003E\n\u003Cp\u003E\nI tried forcibly calling DestroyImmediate(tempFont) after each font I draw in the foreach loop, like so:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E        foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring fontName in \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetOSInstalledFontNames\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E())\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E tempFont \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ECreateDynamicFontFromOSFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EfontName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E fontSize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebool\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E result \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EIsFontMonospaced\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EtempFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EConsole\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EWriteLine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFormat\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Font \\\u0022{0}\\\u0022, monospaced={1}, therefore it {2} be included in the choices list.\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                fontName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E result\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eresult \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022would\u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022wouldn\u0027t\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)));\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EDestroyImmediate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EtempFont\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// \u0026lt;----- This is the line I added -------\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI have no clue *why* that makes the bug go away, though.\u00A0 I assumed that waiting for the garbage collector to clear out the orphaned font\u0027s data \u0022when it gets around to it\u0022 would be good, as that\u0027s what you\u0027re usually supposed to do in a language like C#.\u00A0 But by demanding that it force the font\u0027s data to go away right now before it starts testing the next font, the problem went away.\n\u003C/p\u003E\n\u003Cp\u003E\nI wonder if there might be some kind of maximum number of fonts you can have active at a time (or maybe maximum number of glyphs you can have populated at once because it tries to render all of them onto one common texture of fixed size??).\u00A0 If so that could explain why adding that line makes it go away.\u00A0 Instead of the typical garbage collection pattern of \u0022at the end of the loop you temporarily had 200 fonts loaded, but 191 of them were orphaned so I cleared them out and now you have only 9 fonts loaded again\u0022 it would now be \u0022you have 9 fonts loaded at first, then I added one and now it\u0027s 10 fonts, then I deleted it and its 9 fonts again, then you added one and it was 10, then 9, then 10, then 9, ....)\n\u003C/p\u003E\n\u003Cp\u003E\nIf there was some kind of upper maximum, explicitly destroying the font every iteration would prevent it from reaching it.\n\u003C/p\u003E\n\u003Cp\u003E\nThat\u0027s the only guess I have as to a possible cause.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOne distressing thing is that since you mentioned that the problem didn\u0027t surface on your computer, but it did on mine... that means I cannot trust that I really fixed it when I don\u0027t see it happening anymore.\u00A0 It might still happen on other people\u0027s computers.\u00A0 I\u0027m going to have to ask our user community to help test this so we have people trying it on different graphics cards, different OS\u0027s, some using OpenGL some using DirectX, etc.\n\u003C/p\u003E\n\u003Cp\u003E\nBy the way, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0026amp;do=hovercard\u0022 data-mentionid=\u002275857\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0022 rel=\u0022\u0022\u003E@xEvilReeperx\u003C/a\u003E - thanks again for the help on this so far.\u00A0 Even reporting \u0022this didn\u0027t happen for me\u0022 is extremely useful information to me.\u00A0 (For example, it made me start thinking of the problem being just the sheer number of fonts perhaps - that plus the fact that I couldn\u0027t reproduce it when I just hand picked a few fonts to try, in the hope that I\u0027d hit upon the \u0022one problem font\u0022.)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-03-30T06:38:56Z\u0022 title=\u002203/30/2017 06:38  AM\u0022 data-short=\u00227 yr\u0022\u003EMarch 30, 2017\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-03-31T17:12:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223000355\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490708536\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 28/03/2017 at 3:42 PM, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThen again, with SQUAD doing localizations in the next release, who knows if maybe even THEY might wait to load a font later on after game initialization\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSquad uses TextMeshPro and that does not makes any uses of Unity native font system.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223002549\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490855466\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 30/03/2017 at 8:31 AM, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI assumed that waiting for the garbage collector to clear out the orphaned font\u0027s data \u0022when it gets around to it\u0022 would be good, as that\u0027s what you\u0027re usually supposed to do in a language like C#.\u00A0 But by demanding that it force the font\u0027s data to go away right now before it starts testing the next font, the problem went away.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nDestroy(Immediate) have nothing to do with the GC. It s a Unity call to remove\u00A0a native Unity (C\u002B\u002B) object.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMy advice : Use TMP for your text \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E. You can even make your own font (at least I can for you since I own the package in the proper version)\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-04-01T02:58:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223004561\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221490980345\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSquad uses TextMeshPro and that does not makes any uses of Unity native font system.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nDestroy(Immediate) have nothing to do with the GC. It s a Unity call to remove\u00A0a native Unity (C\u002B\u002B) object.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMy advice : Use TMP for your text \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E. You can even make your own font (at least I can for you since I own the package in the proper version)\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHow certain are you that it has nothing to do with GC?\u00A0\u00A0 The many code examples in Unity\u0027s docs show lots of cases of C# code just letting instances of Unity objects orphan away with no explicit Destroy() happening.\u00A0 Therefore the Unity C# wrapper *must* be using something like hooks triggering on C#\u0027s Dispose() calls to clean up its own C\u002B\u002B data that was created by instantiating the C# objects.\u00A0 Otherwise everyone making C# plugins would be leaking memory all the time on a massive scale if they followed the examples provided by Unity themselves.\u00A0 I think the Font\u0027s Destroy() work *has* to happen when a C# Dispose() happens, for this reason.\u00A0 (Or some kind of reflections equivalent to using Dispose() because Unity is full of reflection usage).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAlthough, that is another potential cause of the bug, come to think of it - what if Unity *usually* Destroy()s things when their C# wrapper gets orphaned, but made an exception for the Font class under the assumption that the same font will get used more than once and it\u0027s unlikely anyone would try to use lots of fonts once and then never use them ever again, which is the usage pattern I\u0027m using.\n\u003C/p\u003E\n\u003Cp\u003E\nAt any rate, Unity was either not cleaning up the C\u002B\u002B data the Font class uses at all when it orphans, or it was but it was doing it too late.\u00A0 Because when I told it to explicitly clean it up after each Font test instead of doing whatever pattern it normally follows by default, the bug disappeared.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd I\u0027ve put out some tests for others in the kOS community to try and it\u0027s been a mix.\u00A0 Most didn\u0027t see the bug happen, but a few did so I know it\u0027s not just my imagination.\u00A0 (And for the few who did, trying my newer version where it explicitly does a Destroy instead of waiting for whatever would normally trigger it did fix it for them too).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs for TMP - is it compatible with IMGUI?\u00A0 I was under the impression it was just for the new gui.\u00A0 Thanks for the offer to make a font, but I\u0027m not sure if that fits the need I was thinking of.\u00A0 The need I was thinking of is this:\u00A0 I don\u0027t speak Russian.\u00A0 I am not qualified to decide if a font looks good in Cyrillic or not.\u00A0 I don\u0027t speak Japanese.\u00A0 I\u0027m not qualified to decide if a font looks good in Kanji or not.\u00A0 etc etc etc.\u00A0 BUT, the person using kOS on their own computer, who does speak Russian, or speak Japanese, will be in a much better position than me to decide for themselves which font they think looks best for a terminal in their language, and they\u0027ll have such fonts at their own disposal on their own computer.\n\u003C/p\u003E\n\u003Cp\u003E\nUnlike a normal video game maker, I\u0027m not concerned with the \u0022look and feel branding\u0022 of forcing a font choice on the user.\u00A0 If I can make it easy for them to pick their own, it keeps everyone happy - or so I\u0027m assuming.\u00A0 Thus any solution that revolves around \u0022ship with a hardcoded font\u0022 isn\u0027t really what I\u0027m looking for.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-01T05:31:04Z\u0022 title=\u002204/01/2017 05:31  AM\u0022 data-short=\u00227 yr\u0022\u003EApril 1, 2017\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-04-01T08:06:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223005183\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491015510\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHow certain are you that it has nothing to do with GC?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI am.\u00A0Anythings that inherits Unity.Object does not have its native part cleaned up auto magically. GameObject do on scene change but that s the only one AFAIK.\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-04-01T16:23:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223005426\u0022 data-ipsquote-contentid=\u0022158330\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491033962\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI am.\u00A0Anythings that inherits Unity.Object does not have its native part cleaned up auto magically. GameObject do on scene change but that s the only one AFAIK.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat really surprises me given how often the Unity C# documentation has you instantiating an object and then just letting it orphan.\u00A0 Is all that stuff just sitting forever until a scene change?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-04-01T21:51:57Z","Content":"\n\u003Cp\u003E\nYes. Or until you close the game for texture\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2017-04-02T01:54:12Z","Content":"\n\u003Cp\u003E\nOkay thanks for the information.\u00A0 That changes a lot about how things should be designed.\u00A0 They shouldn\u0027t be done like normal C# software.\u00A0 At all.\u00A0 I\u0027m surprised there isn\u0027t more memory leaking given how all the examples don\u0027t show you having to manually destroy things and instead just letting it happen whenever Unity feels like (which is apparently only on scene changes if what you\u0027re saying is true).\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-02T01:54:49Z\u0022 title=\u002204/02/2017 01:54  AM\u0022 data-short=\u00227 yr\u0022\u003EApril 2, 2017\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"}]}