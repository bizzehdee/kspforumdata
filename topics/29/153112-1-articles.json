{"TopicId":153112,"ForumId":29,"TopicTitle":"KSP 1.2.2 GameEvents Extension","CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-12-07T00:12:21Z","PageNum":1,"Articles":[{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-12-07T00:12:21Z","Content":"\n\u003Cdiv class=\u0022ipsType_normal ipsType_richText ipsContained\u0022 data-controller=\u0022core.front.core.lightboxedImages\u0022 data-role=\u0022commentContent\u0022 itemprop=\u0022text\u0022\u003E\n\u003Cp\u003E\nIn KSP 1.2.2 there is an extension for GameEvents that allows mods to register their own GameEvents and for any Mod to find and register a callback for said GameEvents.\u003Cbr\u003E\nHow to use (example):\u003Cbr\u003E\nDefine your GameEvent as a static in Mod A:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022 id=\u0022ips_uid_4362_5\u0022 style=\u0022\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onKerbalFrozen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nand Initialize it somewhere early before ModB tries to find and register it.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022 id=\u0022ips_uid_4362_7\u0022 style=\u0022\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EonKerbalFrozen \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022onKerbalFrozen\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\nFind the GameEvent and register a callback in ModB:\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022 id=\u0022ips_uid_1744_9\u0022 style=\u0022\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onKerbalFrozenEvent\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E...\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//in say Awake or Start:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nonKerbalFrozenEvent \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EGameEvents\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFindEvent\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u0026gt;(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022onKerbalFrozen\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EonKerbalFrozenEvent \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onKerbalFrozenEvent\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EAdd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EonKerbalFrozen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//don\u0027t forget to remove them in OnDestroy:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EonKerbalFrozenEvent \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onKerbalFrozenEvent\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ERemove\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EonKerbalFrozen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFire your event at the appropriate time from Mod A:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022 id=\u0022ips_uid_1744_7\u0022 style=\u0022\u0022\u003E\n\u003Cspan class=\u0022typ\u0022\u003EDFGameEvents\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EonKerbalFrozen\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EFire\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003ECrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nModB callback will be called.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-12-08T06:02:31Z\u0022 title=\u002212/08/2016 06:02  AM\u0022 data-short=\u00227 yr\u0022\u003EDecember 8, 2016\u003C/time\u003E by JPLRepo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-12-08T06:04:00Z","Content":"\n\u003Cp\u003E\nI just made an update to above instructions.\u003Cbr\u003E\nIt\u0027s important you define and initialize your GameEvent EARLY so that ModB will find it.\u003Cbr\u003E\nSo it\u0027s a good idea to define it and then init it New say in Start of a KSPAddon MonoBehaviour at MainMenu for example.\n\u003C/p\u003E\n"},{"CreatedByName":"ShotgunNinja","CreatedById":159391,"CreatedDateTime":"2016-12-08T21:06:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222879413\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221481177040\u0022 data-ipsquote-userid=\u0022114736\u0022 data-ipsquote-username=\u0022JPLRepo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, JPLRepo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s important you define and initialize your GameEvent EARLY so that ModB will find it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAny drawbacks you are aware of, if the GameEvent is initialized\u00A0in the static definition?\n\u003C/p\u003E\n\u003Cp\u003E\nThat was it is guaranteed to be initialized before first use, be it a listener\u00A0or the mod that fire the event.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onKerbalFrozen \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022onKerbalFrozen\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-12-08T21:06:46Z\u0022 title=\u002212/08/2016 09:06  PM\u0022 data-short=\u00227 yr\u0022\u003EDecember 8, 2016\u003C/time\u003E by ShotgunNinja\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-12-08T21:08:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222880163\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221481231189\u0022 data-ipsquote-userid=\u0022159391\u0022 data-ipsquote-username=\u0022ShotgunNinja\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, ShotgunNinja said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents ipsClearfix\u0022\u003E\n\u003Cp\u003E\nAny drawbacks you are aware of, if the GameEvent is initialized\u00A0in the static definition?\n\u003C/p\u003E\n\u003Cp\u003E\nThat was it is guaranteed to be initialized before first use, be it a listener\u00A0or the mod that fire the event.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onKerbalFrozen \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EProtoCrewMember\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022onKerbalFrozen\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes. Unless you reference it first it won\u0027t initialize. And the first time you Fire it it won\u0027t work.\n\u003C/p\u003E\n"},{"CreatedByName":"ShotgunNinja","CreatedById":159391,"CreatedDateTime":"2016-12-08T21:13:22Z","Content":"\n\u003Cp\u003E\nAh okay.\u00A0So I am assuming a GameEvent is registered in the set of available ones when its constructor is called, and when you call FindEvent\u0026lt;\u0026gt;() it will not find it if the constructor wasn\u0027t called before. Is that correct?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m asking these question because I wonder about the scenario when monobehaviours from mod A and B are both set to run on main menu, and ordering problems.\n\u003C/p\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2016-12-08T21:18:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222880179\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221481231602\u0022 data-ipsquote-userid=\u0022159391\u0022 data-ipsquote-username=\u0022ShotgunNinja\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, ShotgunNinja said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents ipsClearfix\u0022\u003E\n\u003Cp\u003E\nAh okay.\u00A0So I am assuming a GameEvent is registered in the set of available ones when its constructor is called, and when you call FindEvent\u0026lt;\u0026gt;() it will not find it if the constructor wasn\u0027t called before. Is that correct?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m asking these question because I wonder about the scenario when monobehaviours from mod A and B are both set to run on main menu, and ordering problems.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIn that case initialize your Event before MainMenu (although I haven\u0027t tried)... as most use cases for this would be after MainMenu.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2016-12-09T15:11:54Z","Content":"\n\u003Cp\u003E\nIf it\u0027s really a big deal you can run it using the KSPAddon.Instantly property so it runs before the MainMenu, but at the main menu the game proper isn\u0027t actually loaded yet\n\u003C/p\u003E\n\u003Cp\u003E\nOff the top of my head I can\u0027t think of a use case where you\u0027d fire one of these during the main menu scene, the earliest you\u0027d fire them is during the game loading process, but that comes after the Main Menu scene so everything should be initialized already.\n\u003C/p\u003E\n\u003Cp\u003E\nI realize there probably is a scenario where you would want to fire one of these events during the Main Menu, but as the save-game hasn\u0027t loaded yet at this point it feels like a \u0022square-peg/round-hole\u0022 situation and probably there\u0027s a better way to do what you want to.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-12-09T15:18:00Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222880999\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221481296314\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOff the top of my head I can\u0027t think of a use case where you\u0027d fire one of these during the main menu scene, the earliest you\u0027d fire them is during the game loading process, but that comes after the Main Menu scene so everything should be initialized already.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI ll most likely add an event at the end of \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E loading and that may be one those few cases \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Warezcrawler","CreatedById":145377,"CreatedDateTime":"2017-01-10T18:51:13Z","Content":"\n\u003Cp\u003E\na question. Is it only addins (i.e. monobehaviour) type plugins where events are relevant, or could you create an event in a partsModule, for when some specific action is taken or something? I\u0027m asking as I cannot figure out the implications of having events being created by multiple modules.....\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-10T19:36:56Z","Content":"\n\u003Cp\u003E\nWell, not having tested it I see the STATIC keyword on the event method where it is created.\n\u003C/p\u003E\n\u003Cp\u003E\nStatics can only exist once, so if you have a partModule with an \u0022EventA\u0022 event, because it\u0027s static there is only one \u0022EventA\u0022, even if there are multiple copies of the partModule loaded.\n\u003C/p\u003E\n\u003Cp\u003E\nSo you would need to pass the part or partModule triggering the event as the EventData to keep things straight.\n\u003C/p\u003E\n\u003Cp\u003E\nI also see no mention of inheriting from MonoBehavior being necessary. I assume there is reflection trickery involved here finding all static methods with the EventData return type.\n\u003C/p\u003E\n\u003Cp\u003E\nIf I ever use this, my first attempt would be making a static class to hold my static event calls, then in a KSPAddon.MainMenu initialize them.\n\u003C/p\u003E\n\u003Cp\u003E\nThen when they fire, just call the event from whatever code is running at the time. Since they are a static method in a static class I can access the .Fire method at any time.\n\u003C/p\u003E\n\u003Cp\u003E\nI see a LOT of problems trying to add this in a partModule as the event has to exist before the other mod subscribes to it.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-10T19:38:15Z\u0022 title=\u002201/10/2017 07:38  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 10, 2017\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-01-11T10:01:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222917218\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221484077016\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI see a LOT of problems trying to add this in a partModule as the event has to exist before the other mod subscribes to it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nStatic constructor ? This does not look like it needs any Unity code so it should init fine there.\n\u003C/p\u003E\n"},{"CreatedByName":"JPLRepo","CreatedById":114736,"CreatedDateTime":"2017-01-11T10:30:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222917218\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221484077016\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents ipsClearfix\u0022\u003E\n\u003Cp\u003E\nWell, not having tested it I see the STATIC keyword on the event method where it is created.\n\u003C/p\u003E\n\u003Cp\u003E\nStatics can only exist once, so if you have a partModule with an \u0022EventA\u0022 event, because it\u0027s static there is only one \u0022EventA\u0022, even if there are multiple copies of the partModule loaded.\n\u003C/p\u003E\n\u003Cp\u003E\nSo you would need to pass the part or partModule triggering the event as the EventData to keep things straight.\n\u003C/p\u003E\n\u003Cp\u003E\nI also see no mention of inheriting from MonoBehavior being necessary. I assume there is reflection trickery involved here finding all static methods with the EventData return type.\n\u003C/p\u003E\n\u003Cp\u003E\nIf I ever use this, my first attempt would be making a static class to hold my static event calls, then in a KSPAddon.MainMenu initialize them.\n\u003C/p\u003E\n\u003Cp\u003E\nThen when they fire, just call the event from whatever code is running at the time. Since they are a static method in a static class I can access the .Fire method at any time.\n\u003C/p\u003E\n\u003Cp\u003E\nI see a LOT of problems trying to add this in a partModule as the event has to exist before the other mod subscribes to it.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere should be no problems if you:\u003Cbr\u003E\nUse a static class to hold your events and initialize them.\u003Cbr\u003E\nFire them from teh partmodule or subscribe to them in the partmodule.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd yes, reflection is used.\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-25T05:10:42Z","Content":"\n\u003Cp\u003E\nOkay, not sure what is going on here, running some test code to understand things before I start actually using this.\n\u003C/p\u003E\n\u003Cp\u003E\nDue to how I want to use this, I am going to end up with a Static event handler class, my current test case is as follows:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Enamespace ActionGroupsExtended\n{\n    public static class AGXEventHandler\n    {\n        public static EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;string\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onTestEvent;\n\n        public static void init()\n        {\n            Debug.Log(\u0022AGX event init fired!\u0022);\n            onTestEvent = new EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;string\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(\u0022onTestEvent\u0022);\n            Debug.Log(\u0022AGX event init2fired!\u0022);\n            onTestEvent.Add(testAGXmethod);\n            Debug.Log(\u0022AGX event init 3fired!\u0022);\n        }\n\n        public static void testAGXmethod(string str)\n        {\n            Debug.Log(\u0022AGX sees event fire!\u0022);\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nthe \u0022init()\u0022 method is called from within another class running as a KSPAddon.Instantly so that runs very early in KSP\u0027s loading sequence. I did move this to KSPAddonMainMenu but the same error was thrown.\n\u003C/p\u003E\n\u003Cp\u003E\nThe error in question is thrown by the \u0022onTestEvent.Add(testAGXmethod);\u0022 line and is as follows:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003ENullReferenceException: Object reference not set to an instance of an object\n  at EventData\u00601\u002BEvtDelegate[System.String]..ctor (.OnEvent evt) [0x00000] in \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;filename\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eunknown\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E:0 \n  at EventData\u00601[System.String].Add (.OnEvent evt) [0x00000] in \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;filename\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eunknown\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E:0 \n  at ActionGroupsExtended.AGXEventHandler.init () [0x00000] in \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;filename\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eunknown\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E:0 \n  at ActionGroupsExtended.AGXInstantly.Start () [0x00000] in \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;filename\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003Eunknown\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E:0 \u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNote despite the reference to the Event\u0027s .ctor method, this nullRef is happening when I try to .Add(testAGXmethod) as I see the \u0022AGX event init2fired!\u0022 in the log just before the error and \u0022AGX event init 3fired!\u0022 does not show.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat am I missing here?\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-26T03:32:58Z","Content":"\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:16px;\u0022\u003E\u003Cstrong\u003EEDIT: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/153112-ksp-122-gameevents-extension/\u0026amp;do=findComment\u0026amp;comment=2937792\u0022 rel=\u0022\u0022\u003ESee this post for the answer and example code on how to sync data between two mods by passing a reference.\u003C/a\u003E\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTo answer my question, the method called by the event firing cannot be static.\n\u003C/p\u003E\n\u003Cp\u003E\nSo in my example above, once I made the testAGXemthod(string str) non-static, things appear to work.\n\u003C/p\u003E\n\u003Cp\u003E\nAt least this step does, now to move on and find the next issue.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cp\u003E\nedit: My next question is handling \u0022requests\u0022. Using my AGX example, ModB wants to know which action groups have actions assigned. This is going to require two events, one to trigger the request, one to return the data. I\u0027m thinking something like:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic static EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;string\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onAGXDataRequest;\npublic static EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;string\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onAGXDataReturn;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nModB would trigger onAGXDataRequest when it wants data, then AGX would trigger onAGXDataReturn with the data. The String would be an identifier, remember that ALL mods that subscribe to onAGXDataReturn will see the data so you need a way to tell which request is yours. The ConfigNode will contain the data requested and then the data returned.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, this is messy because it breaks the code up in ModB. The request event gets fired, then there is a break in the code until ModB sees the data returned when the second event fires.\n\u003C/p\u003E\n\u003Cp\u003E\nFor something like kOS that needs instant data I\u0027m not sure this works too well but I can\u0027t think of any better ideas. Anyone have any thoughts on this?\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-29T03:20:18Z\u0022 title=\u002201/29/2017 03:20  AM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 29, 2017\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2017-01-26T08:36:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222934715\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485401578\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nedit: My next question is handling \u0022requests\u0022. Using my AGX example, ModB wants to know which action groups have actions assigned. This is going to require two events, one to trigger the request, one to return the data. I\u0027m thinking something like:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Epublic static EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;string\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onAGXDataRequest;\npublic static EventData\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;string\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022atn\u0022\u003EConfigNode\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E onAGXDataReturn;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nModB would trigger onAGXDataRequest when it wants data, then AGX would trigger onAGXDataReturn with the data. The String would be an identifier, remember that ALL mods that subscribe to onAGXDataReturn will see the data so you need a way to tell which request is yours. The ConfigNode will contain the data requested and then the data returned.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhy not spin it around and make AGX the thing that listens for the event? Have the requester fire the event instead, AGX can fill in the desired info. You\u0027d only need one event this way as well\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-26T14:46:02Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0026amp;do=hovercard\u0022 data-mentionid=\u002275857\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0022 rel=\u0022\u0022\u003E@xEvilReeperx\u003C/a\u003E That sounds exactly what I want to do.\n\u003C/p\u003E\n\u003Cp\u003E\nI just don\u0027t have a clue what you mean by \u0022fill in\u0022 data. I\u0027m going to head to google after this post and see what I find, but my current understanding is:\n\u003C/p\u003E\n\u003Cp\u003E\nMake onTestEvent.\n\u003C/p\u003E\n\u003Cp\u003E\nIn AGX: onTestEvent.Add(onEventFire);\n\u003C/p\u003E\n\u003Cp\u003E\nIn ModB call: onTestEvent.Fire();\n\u003C/p\u003E\n\u003Cp\u003E\nThat causes onTestEvent to be triggered by ModB and onEventFire to run in AGX and can pass data from ModB to AGX, but I\u0027m blanking on how that gets data back to ModB.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIgnoring code for a second, what I\u0027m trying to accomplish is:\n\u003C/p\u003E\n\u003Cp\u003E\nA kOS script needs to know if action group 15 is on or off, that data is stored in AGX so it queries AGX \u0022What is AG15s state?\u0022 AGX then returns \u0022AG15 is on/off\u0022 depending on the groups current state. Currently we\u0027ve worked out the raw reflection ourselves to get something that works, but that is messy and requires coordinating code between the two mods so I was hoping to streamline/simplify things with these new events, but it\u0027s not turning out to be as striaghtforward as I\u0027d hoped.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2017-01-26T15:42:48Z","Content":"\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:\u0027-apple-system\u0027, BlinkMacSystemFont, \u0027Segoe UI\u0027, Helvetica, Arial, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:14px;font-style:normal;font-weight:normal;letter-spacing:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;background-color:rgb(255,255,255);\u0022\u003E\nI\u0027m posting this question here as well as my response to\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1939\u0022 style=\u0022background-color:transparent;color:rgb(64,120,192);text-decoration:none;\u0022 rel=\u0022external nofollow\u0022\u003E#1939\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp style=\u0022margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:\u0027-apple-system\u0027, BlinkMacSystemFont, \u0027Segoe UI\u0027, Helvetica, Arial, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:14px;font-style:normal;font-weight:normal;letter-spacing:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;background-color:rgb(255,255,255);\u0022\u003E\nIs there any reason that the event is required to return a\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:11.9px;padding:.2em 0px;margin:0px;\u0022\u003EConfigNode\u003C/code\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Ebased structure? Could you instead create a base event that returns a commonly known reference type, like a list? That would allow you to create an event that serves as an \u0022initialization\u0022 or \u0022heartbeat\u0022 event, that simply gives out the reference to the list.\n\u003C/p\u003E\n\u003Cpre style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:11.9px;margin-top:0px;margin-bottom:16px;font-style:normal;font-variant:normal;font-weight:normal;line-height:1.45;padding:16px;background-color:rgb(247,247,247);color:rgb(51,51,51);letter-spacing:normal;text-indent:0px;text-transform:none;word-spacing:0px;\u0022\u003E\n\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:11.9px;padding:0px;margin:0px;background:transparent;white-space:pre;border:0px;line-height:inherit;\u0022\u003Epublic static EventData\u0026lt;string,ConfigNode\u0026gt; onAGXInitRequest;\npublic static EventData\u0026lt;string,List\u0026lt;bool\u0026gt;\u0026gt; onAGXInitReturn;\n\u003C/code\u003E\u003C/pre\u003E\n\u003Cp style=\u0022margin-top:0px;color:rgb(51,51,51);font-family:\u0027-apple-system\u0027, BlinkMacSystemFont, \u0027Segoe UI\u0027, Helvetica, Arial, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027, \u0027Segoe UI Symbol\u0027;font-size:14px;font-style:normal;font-weight:normal;letter-spacing:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;background-color:rgb(255,255,255);\u0022\u003E\nUnder this structure, an object would subscribe to the\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:11.9px;padding:.2em 0px;margin:0px;\u0022\u003EonAGXInitReturn\u003C/code\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Ein a method that stores the reference to the list. Then it would fire the\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:11.9px;padding:.2em 0px;margin:0px;\u0022\u003EonAGXInitRequest\u003C/code\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eevent to signal to AGX that it needs to pass out the reference. AGX would then fire the\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:11.9px;padding:.2em 0px;margin:0px;\u0022\u003EonAGXInitReturn\u003C/code\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eevent, passing with it the reference to an internal list of the state of each action group. Then AGX would update the values for the actiongroup list (without creating a new list) allowing for instant action group status inspection. You could even go so far as to implement\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Ccode style=\u0022font-family:Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;font-size:11.9px;padding:.2em 0px;margin:0px;\u0022\u003EIList\u0026lt;bool\u0026gt;\u003C/code\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Ein your own class, allowing you to simply respond to the standard list methods without needing to change your own implementation\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-26T16:48:10Z","Content":"\n\u003Cp\u003E\nThat would work? That opens up possibilities.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for what gets passed, I just threw out ConfigNode because that\u0027s what KSP uses to store data, the event could be attached to anything.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, I\u0027m on my mobile and can\u0027t run test code, just to be clear what should happen (non-working pseudo-code):\n\u003C/p\u003E\n\u003Cp\u003E\nIn AGX:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEventHandler\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0026lt;bool\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E actionGroupStates\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EActionGroupStateRequest\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EEventData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0026lt;bool\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EActionGroupsStateData\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\n    \u003C/span\u003E\u003Cspan\u003EActionGroupStateRequest\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAdd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ErequestFire\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E requestFire\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \t\u003C/span\u003E\u003Cspan\u003EActionGroupsStateData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFire\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EactionGroupStates\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nthen in kOS:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan\u003EKSPAddon\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFlight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E kOSFlight\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0026lt;bool\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E actionGroupsState\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EStart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan\u003EActionGroupStateData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAdd\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EhandleData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\t\n      \u003C/span\u003E\u003Cspan\u003EActionGroupStateRequest\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFire\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E handleData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EList\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0026lt;bool\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E groupsList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    actionGroupsState \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E groupsList\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSo after all this code is run, when AGX updates EventHandler.actionGroupStates, those changes will be reflected in kOSFlight.actionGroupsState without any other code required?\n\u003C/p\u003E\n\u003Cp\u003E\nInteresting and will be quite useful. However that requires some code on the kOS end of things to handle it, the question becomes which is the \u0022better\u0022 way to handle things, this way via events or the existing reflection system we have setup?\n\u003C/p\u003E\n\u003Cp\u003E\nOne of my goals here is to make AGX easier to integrate with on a basic level for smaller mods, it\u0027s quite possible there will be a set of events for basic use of AGX, then stay with reflection for the more complex stuff kOS uses.\n\u003C/p\u003E\n\u003Cp\u003E\n(No comment on the IList thing, that will have to wait until I\u0027m at my KSP computer.)\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-26T16:51:26Z\u0022 title=\u002201/26/2017 04:51  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 26, 2017\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2017-01-26T17:22:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222935161\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485449290\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n34 minutes ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo after all this code is run, when AGX updates EventHandler.actionGroupStates, those changes will be reflected in kOSFlight.actionGroupsState without any other code required?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYeah, that\u00A0\u003Cem\u003Eshould\u003C/em\u003E\u00A0work so long as the value you pass through the event is a \u0022reference type\u0022. \u00A0Technically there are a few tricks that could mess that up, like cloning values passed to the events. \u00A0I\u0027m not in a spot to verify that Unity and/or KSP don\u0027t do something like that with event parameters, but I should be able to check it out tonight. \u00A0The important thing to remember is that the reference is to the object itself, and not to the variable. \u00A0So if you reassign the variable inside the AGX code, you should fire the event again to ensure that other mods update their reference.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nInteresting and will be quite useful. However that requires some code on the kOS end of things to handle it, the question becomes which is the \u0022better\u0022 way to handle things, this way via events or the existing reflection system we have setup?\n\u003C/p\u003E\n\u003Cp\u003E\nOne of my goals here is to make AGX easier to integrate with on a basic level for smaller mods, it\u0027s quite possible there will be a set of events for basic use of AGX, then stay with reflection for the more complex stuff kOS uses.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, reflection by it\u0027s very nature is complicated, and while it doesn\u0027t need to be avoided I think it makes sense to use simple alternatives if they are available. \u00A0In part that\u0027s because it relies on hard coded relationships to assemblies you don\u0027t control. \u00A0Another component however is performance. \u00A0I really wanted to outright modify the way that kOS calls the AGX method, because currently the method delegate is instantiated every time it is called, which I understand is expensive. \u00A0And in my opinion, anything that can be moved into a more common system which can be accessed using explicitly typed methods/fields is an improvement in both performance and code readability. \u00A0By common I mean a class or interface defined by an assembly that you know both mods have access to, essentially anything in the base Mono/.net framework.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAfter I finished typing out the above, I had the realization that there is one other thing we have to be careful with for events: object life cycle. \u00A0If an object is subscribed to an event\u00A0and never unsubscribes, I don\u0027t believe that the GC will ever clean up that object (because the event code still has a reference to the object). \u00A0Which means that either the event should be cleared on scene change, or other mods need to be instructed to be careful to unsubscribe as part of the \u0060OnDestroy\u0060 logic. \u00A0That does add a bit of complication when explaining how to implement the system, but I still think it\u0027s easier than explaining how reflection works.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-26T17:23:04Z\u0022 title=\u002201/26/2017 05:23  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 26, 2017\u003C/time\u003E by hvacengi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-26T18:01:04Z","Content":"\n\u003Cp\u003E\nHmmm. Lots of things to think on and test. Any tests on my end will have to wait until the weekend as I really won\u0027t have enough time to work on this until then.\n\u003C/p\u003E\n\u003Cp\u003E\nFirst, on the object life cycle I think we just need to be clear that the OnDisable() method is used. (I think that is what Unity calls it\u0027s on destroy method.) This is true not just for this but for other things as well (toolbar buttons, etc.) so it\u0027s something a modder will need to know regardless. I think the benefits of having the event initialized as soon as the game loads to avoid race conditions is of a bigger benefit then destroying/recreating the event would be during the game to destroy orphaned delegates from event.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m not aware of any method where the event itself can check for null and remove delegates from itself?\n\u003C/p\u003E\n\u003Cp\u003E\nSecond, for the object passed I think it\u0027s going to be a \u0022container\u0022 object that never changes, just the data inside. I can\u0027t see any other way to handle multiple vessels. For instance, a static Dict\u0026lt;Vessel,List\u0026lt;bool\u0026gt;\u0026gt; created when the game loads that could be passed by \u003Cu\u003Epublic EventData\u0026lt;Dict\u0026lt;Vessel,List\u0026lt;bool\u0026gt;\u0026gt; actionGroupStates\u003C/u\u003E and then AGX would add/remove vessels to that dictionary as they came into or left physics range and kOS should see them automatically update. This would require significant testing of course, but I think everything in that event is a reference type so this works in theory.\n\u003C/p\u003E\n\u003Cp\u003E\nIt would also require null checks all over the place as AGX would be adding/removing vessels to the dictionary without warning kOS about it.\n\u003C/p\u003E\n\u003Cp\u003E\nLastly, this is my first real foray into events so my terminology is iffy. Notably I\u0027m not sure I\u0027m using \u0027delegate\u0027 right, is the event itself a delegate, or the methods that get attached to the event via .add() the delegates?\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2017-01-26T19:56:47Z","Content":"\n\u003Cp\u003E\nWell, if you go with the one GameEvent, life cycle and all that shouldn\u0027t be a concern because the only thing that listens for the event is the event\u0027s owner anyway. Maybe it\u0027ll make more sense with a code example. Keep in mind that whatever parameter you decide to pass will need to be a reference type like \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124987-hvacengi/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022124987\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/124987-hvacengi/\u0022 rel=\u0022\u0022\u003E@hvacengi\u003C/a\u003Esaid\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222935061\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485441962\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIgnoring code for a second, what I\u0027m trying to accomplish is:\n\u003C/p\u003E\n\u003Cp\u003E\nA kOS script needs to know if action group 15 is on or off, that data is stored in AGX so it queries AGX \u0022What is AG15s state?\u0022 AGX then returns \u0022AG15 is on/off\u0022 depending on the groups current state. Currently we\u0027ve worked out the raw reflection ourselves to get something that works, but that is messy and requires coordinating code between the two mods so I was hoping to streamline/simplify things with these new events, but it\u0027s not turning out to be as striaghtforward as I\u0027d hoped.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n    [KSPAddon(KSPAddon.Startup.MainMenu, false)]\n    class ModB : MonoBehaviour\n    {\n        private EventData\u0026lt;Dictionary\u0026lt;int, bool\u0026gt;\u0026gt; _actionGroupStateQuery;\n  \n        private void Awake()\n        {\n            _actionGroupStateQuery = GameEvents.FindEvent\u0026lt;EventData\u0026lt;Dictionary\u0026lt;int, bool\u0026gt;\u0026gt;\u0026gt;(\u0022AGX_QueryActionGroupStates\u0022);\n\n            var currentStates = new Dictionary\u0026lt;int, bool\u0026gt;();\n\n            _actionGroupStateQuery.Fire(currentStates);\n\n            foreach (var state in currentStates)\n                Debug.Log(\u0022Action group: \u0022 \u002B state.Key \u002B \u0022: \u0022 \u002B state.Value);\n        }\n    }\n\n\n    class AGX\n    {\n        // note how AGX is the only thing that listens to this event. Mods who want to know stuff will fire it instead of listening\n        public static readonly EventData\u0026lt;Dictionary\u0026lt;int, bool\u0026gt;\u0026gt;  QueryActionGroupStates =\n            new EventData\u0026lt;Dictionary\u0026lt;int, bool\u0026gt;\u0026gt;(\u0022AGX_QueryActionGroupStates\u0022); \n\n        // get around static method limitation of GameEvents\n        private class Forwarder\n        {\n            private readonly EventData\u0026lt;Dictionary\u0026lt;int, bool\u0026gt;\u0026gt;.OnEvent _del;\n\n            public Forwarder(EventData\u0026lt;Dictionary\u0026lt;int, bool\u0026gt;\u0026gt;.OnEvent del)\n            {\n                _del = del;\n            }\n\n            public void OnEvent(Dictionary\u0026lt;int, bool\u0026gt; data)\n            {\n                _del(data);\n            }\n        }\n\n        // make sure initialization happens early\n        [KSPAddon(KSPAddon.Startup.Instantly, true)]\n        private class Initialize : MonoBehaviour\n        {\n            private void Awake()\n            {\n                Init();\n                Destroy(gameObject);\n            }\n        }\n\n\n        private static void Init()\n        {\n            var forwarder = new Forwarder(OnQueryReceived);\n            QueryActionGroupStates.Add(forwarder.OnEvent);\n        }\n\n        // somebody wants to know some stuff\n        private static void OnQueryReceived(Dictionary\u0026lt;int, bool\u0026gt; data)\n        {\n            for (int i = 0; i \u0026lt; 32; \u002B\u002Bi)\n                data[i] = i % 2 == 0;\n        }\n    }\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2017-01-26T20:22:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222935344\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485460607\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 minutes ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell, if you go with the one GameEvent, life cycle and all that shouldn\u0027t be a concern because the only thing that listens for the event is the event\u0027s owner anyway.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot necessarily. \u00A0If the event is declared static, it will not get cleaned with the life cycle of the instantiating object. \u00A0And you have opportunity to create circular references too. \u00A0Event1 refers to AGX which refers to Event2 which refers to kOS which refers to Event1... and so on. \u00A0It\u0027s my understanding that the Mono GC used by Unity is pretty simple, and just walks each object looking for references to other objects, removing any object that has no references pointing to it. \u00A0I ran into this issue with some KSP events that kOS subscribed to. \u00A0I found using the debugger that the event delegate was getting called well after the object itself should have been cleaned up (across scene transitions even).\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-26T20:37:04Z","Content":"\n\u003Cp\u003E\nHmmm.\n\u003C/p\u003E\n\u003Cp\u003E\nSubject to lots and lots of testing, if I understand how referencing works, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0026amp;do=hovercard\u0022 data-mentionid=\u002275857\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/75857-xevilreeperx/\u0022 rel=\u0022\u0022\u003E@xEvilReeperx\u003C/a\u003E code should work, but just use it to set the reference. If so, only a single event is required, not two.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nPseudo-code, leaving out a lot of steps:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nAGX:\n\npublic static List\u0026lt;bool\u0026gt; masterList;\npublic static EventData\u0026lt;List\u0026lt;bool\u0026gt;\u0026gt; referenceMasterList;\nreferenceMasterList.Add(handleReference);\n\nhandleReference(List\u0026lt;bool\u0026gt; refList)\n{\n  refList = masterList; //does this work?\n}\n\n\nkOS:\n\npublic List\u0026lt;bool\u0026gt; kOSlistReference;\nreferenceListEvent = GameEvents.FindEvent\u0026lt;EventData\u0026lt;List\u0026lt;bool\u0026gt;\u0026gt;\u0026gt;(\u0022referenceMasterList\u0022);\nreferenceListEvent.Fire(kOSlistReference);\u003C/pre\u003E\n\u003Cp\u003E\nIf this works, as long as the event and master data object exist in AGX, everything should be okay I think? Any changes AGX makes to masterList will also happen to kOSlistReference as far as I understand this.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only catch is will kOSlistReference send itself to GC when the class it is a part of does, or will a kOSlistReference = null need to be added to the OnDisable() method to allow GC to happen?\n\u003C/p\u003E\n\u003Cp\u003E\nLots of ideas I really need to start testing on, Saturday can\u0027t come soon enough.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-26T20:40:36Z\u0022 title=\u002201/26/2017 08:40  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 26, 2017\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2017-01-26T20:40:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222935377\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485462150\u0022 data-ipsquote-userid=\u0022124987\u0022 data-ipsquote-username=\u0022hvacengi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, hvacengi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot necessarily. \u00A0If the event is declared static, it will not get cleaned with the life cycle of the instantiating object.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou shouldn\u0027t try to link the life cycle of a GameEvent-type class with anything but static because it won\u0027t be cleaned up anyway. They register themselves in a static, private dictionary by name. The only time a previously created EventData will be GC is if a new, identically-named one is created and no other references to the previous one exist. For example, this event will exist for the lifetime of KSP, long beyond its creator, because EventData\u0026lt;T\u0026gt; registers itself in a static dictionary inside BaseGameEvent:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n    [KSPAddon(KSPAddon.Startup.MainMenu, true)]\n    class HelloWorld : MonoBehaviour\n    {\n        private void Awake()\n        {\n            var testTheEvent = new EventData\u0026lt;string\u0026gt;(\u0022helloworld\u0022);\n        }\n    }\u003C/pre\u003E\n\u003Cp\u003E\nNow, subscribers could be prevented from GC cleanup of course but since the only subscriber to my example event is the event\u0027s owner, controlling its lifetime is much simpler\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-26T20:43:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222935402\u0022 data-ipsquote-contentid=\u0022153112\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485463209\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou shouldn\u0027t try to link the life cycle of a GameEvent-type class with anything but static because it won\u0027t be cleaned up anyway. They register themselves in a static, private dictionary by name. The only time a previously created EventData will be GC is if a new, identically-named one is created and no other references to the previous one exist. For example, this event will exist for the lifetime of KSP, long beyond its creator, because EventData\u0026lt;T\u0026gt; registers itself in a static dictionary inside BaseGameEvent:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nInteresting, so making a permanent EventHandler class was the correct way to go. I did so in order to make the events exist as early as possible during game load to avoid race conditions, but this is another reason to do so.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"}]}