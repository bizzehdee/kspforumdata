{"TopicId":101109,"ForumId":29,"TopicTitle":"[SOLVED] surface Attached Parts","CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-03-02T21:48:06Z","PageNum":1,"Articles":[{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-03-02T21:48:06Z","Content":"Question, how can I find surface attached parts?\n\nI know how to find it to stack attached parts\n\n    foreach (AttachNode subAttach_node in attach_node.attachedPart.attachNodes.Where(n =\u003E n.attachedPart != null)){   List myModules = subAttachPart.FindModulesImplementing();}\n\npart has a poperty called srfAttachNode, but how can I use this?\n\nCan anyone help me?\n\n**Edited \u003Ctime datetime=\u00222015-03-03T09:45:56Z\u0022 title=\u002203/03/2015 09:45  AM\u0022 data-short=\u00229 yr\u0022\u003EMarch 3, 2015\u003C/time\u003E by FreeThinker**"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2015-03-02T23:30:03Z","Content":"That foreach loop is not going to yield anything. Youre finding all the modules in a given part only and not storing them anywhere.\n\nWhat you\u0027re looking for is Part.attachMode. But it depends what you want. If you want all the surface attached parts including the parent part, something like this:\n\n    public List GetModules(){    List srfParts = new List(this.part.children.Where(c =\u003E c.attachMode == AttachModes.SRF_ATTACH)); //Adds the surface attached children parts    if (this.part.attachMode == AttachModes.SRF_ATTACH) { srfParts.Add(this.part.parent); } //Adds the parent part if this part is surface attached    if (srfParts.Count \u003C= 0) { return new List(); } //No need to loop if there\u0027s no elements    List modules = new List();    foreach(Part part in srfParts)    {        modules.AddRange(part.FindModulesImplementing()); //Adds each part\u0027s modules    }    return modules;}\n\nIf you don\u0027t want to include the parent part, you would do something like this:\n\n    public List GetModules(){    return new List(this.part.children.Where(c =\u003E c.attachMode == AttachModes.SRF_ATTACH)  //Finds the surface attached parts        .SelectMany(p =\u003E p.FindModulesImplementing())); //Returns the modules}"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-03-03T09:45:19Z","Content":"\u003E \n\u003E If you don\u0027t want to include the parent part, you would do something like this:\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     public List GetModules(){    return new List(this.part.children.Where(c =\u003E c.attachMode == AttachModes.SRF_ATTACH)  //Finds the surface attached parts        .SelectMany(p =\u003E p.FindModulesImplementing())); //Returns the modules}\n\nExcelent. This looks what I need.\n\n**Edited \u003Ctime datetime=\u00222015-03-03T10:57:16Z\u0022 title=\u002203/03/2015 10:57  AM\u0022 data-short=\u00229 yr\u0022\u003EMarch 3, 2015\u003C/time\u003E by FreeThinker**"}]}